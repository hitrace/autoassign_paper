%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: supplemental.dvi
%%CreationDate: Sun Feb 15 15:29:47 2015
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusSanL-BoldItal NimbusSanL-ReguItal NimbusSanL-Bold
%%+ NimbusSanL-Regu CMR9 CMMI9 CMSY9 CMR7 NimbusRomNo9L-Medi
%%+ NimbusRomNo9L-Regu CMSY6 CMSY7 NimbusRomNo9L-ReguItal CMMI6
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe -t letter supplemental.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.02.15:1529
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E168092C539BD54D5D3FFCD
2B5E02399614BD5085D49ECD04E14FDB8686A39D6B3F7FAD25D751CA66148781
32296AFD919D83DF85BA4FCBD7FFAA1D831C8897E39819D72F271AB142F1C4B5
D94BB96F64B76C0C8A2D1481910C9571078DC7A4E23C0F133241F06609699988
7AD4D12DD860E2A8E037290EACAB5FC3D90C30A01449D0F3EB9358A8B1E1C2D6
AB92277FC241439926F02B1D5E36F4A5E94C0430A0400E3EDDCCE5BE60B3AEF9
BA97205FA0BAD80C3EDDB35945946E27DC9682816BFA4436B7C995E8353CA6CE
A532D8D57FF0B407C2AD1E917998E0394DA34FB91A4D0DDC48A5A864FD0F9471
93E02919AD6C9143CEAF479DE58330B0464489C0F01853B81FABA80ED0589969
89300C1C867B4F94BD7F470F4F5AE4EB6AD1762D78FDB389BCD7741A144219C0
E2F6E9DC24349F2961470464810C45AC5AD0E28D8F0E2587FE660D65C6BBE763
702D84FF4B2745F76C02E7AC61087EFBC6CD51FD2DD5378881998F9BF4B6EBC0
9EFCADFFA77B37CB2A2C4B91E7ADEBB51D7D870BBFF53D5BA93EF4F0C2A3EE8E
5DEC67F8F66758319E367DF053CBBF541B36FF1AF7F13D61514DA087F692D465
04F825D7568476E6096B0A2575B5F433CC6016EFD0B4441393F46F86995FD975
41CB68E7867D2FF922F2F3D987809908D8A1D433FA5DFF828643F695693AD4B5
871886C89460293D001D2C7F8ECF6763A4C4CBA78F0B28F629AC72C68E4504CE
7BCFCC4FA6AA5E44EF8363BBC98C217C76927006378FE621985D9E96
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463B1AFEE36C1C3B9E85BD54EB70431575E
BF28ECC41A6A0A5E89FD2B68A2F70C638789E364846C907E143CF1D3FC1360C1
D342C94322EEC1547E7ADF123582F655B10A77CD82EB3C0FB8C09606DFD022C0
BB2449CFA284AB052240413FEE760A8C80ABA4CBCA22DADA1349ECC4A9950C85
78B6D7B384C4A037A848A335E8D451109CAAE2811E499C038D545584A870538E
2AE9A38C509097D2E55E6C7A52C3C7106FE2658CCCC0E009FCD0D66C0F9656E4
7E98A214318EAB91191B962D6EDBB5B03576BE188F8A87EDCC0E550DB1D88A78
A306ED8D2DC700CB7782113A1C2469DDB654DD3B851D01B563FB3A21150ECB02
E34FB17C3017641863900200F291B2E624482DCAF786C10BEDB739584F60DB12
106932087FF4370D1C25711478FD4AC8E03BE4A2885A935A1CB7E6B2B198EB6F
00A9B4C5CB1FDE6F0DE21DEA2126F3A9076269B99888609B62B7CBA5C6A21609
CB4D90B6068A5235A94489F21B514032F3FBAC45690A84EF3A2C0D17C269633D
AE67C713FEA091BCC7C6AF76A0DF223531C12CDEC349D2325D6FAAC3C1EBA008
0CF4DFCACEE5513EAF3E903BAB38790E8729740D29D27C8018BECD829ACB6C3D
9129E976A242787A0C336BBB98385F009C20BBF60D0FB1D104D27ECF1E097717
2BE63244D5DEDACF1A9BC6FDAC1250C88230C110A7991FCEED3E81C2D425B9FD
3BF87000B6F7F05E08EC188C36FD083C9017873825B8D4FC4E513C78D30E249D
9CD257B23715CB2ED9EFB4F2C2095464B867D58C34D79A323E617287D6A33FDB
975FEE801931716CE90FAE47D0A461208C0C03A2814A200FFD17986059614851
03BF3C2DD396E682EB072BFE1C0878BF1D4D4963B96902F3A84599D73EB3303D
7B74883A72EBC7A9D5DCB31F5F16053743FBEBBC9927ADAF8F89D92BAE8F1B52
BE124FAFF4C38B722E59F51F4A0E675500E8EEF169B785AB38BA5AA56DE0A980
8979B2FEF190EF1276511087DCAEF035E2ADCDACCBCA3394072755D3E1156F83
AD84362104F0FA7D2B15F0E0A8C1E915B16380F4480936F3A8870114B397C4E4
3CB2EE12A6C8EE6E8DAAF297801EB19566077FC8CD8FAF698FB6FEB55D95B590
7993D4784703AFD690332DC7DCFA2A241132F020A14F777B9E97EFD942A95192
70FE6A4756A9E5304881266BAE8D4411DE4BCA6654E5E8A8D708C721C33A13FB
3908EF34C81CBF1AF913FEB18EE62CB2275A21A0FD2FED9D934A9B97166F2C9E
91F5254F06E2E9CE1A5F6F4E98AE34499DF8C812F0A60F5DBE9B08932B33CC7F
E1E9E6473AE9140BEC591A492E3CB877FE38C58A7F5468AF52FFC11B8C02B8A8
D0E7D976F4F96996456B524F7A3D96F9A563D3AE2BF81BA584CF2DF22725465F
028955844CF37C6CF29BD01BAE3BB56977F0E8D21158CD18F6523CF7B634FD4F
DECB9089DE5CC2DDB60A534461E5C023C137C50DFF74C798D0EFD52011E7FE7D
52963D8CADD372D0D33E21F26DBAE2550DD4ACA051EA0A00301076763D3F01F8
D0B33C60B9F702DADB51AB308FBF4E59F661058E8FAC3BB6924D1D2819A0D46C
59B43C09A07633EEE9DA87C76277F092BFA21E98BC014B32DCA80DDA4AEF88F1
FEE5AC7014E8652E21891F7FBB5D720CDCCD959F392DDBA187B24F6075F39DC5
E1DF623E1CDBC06AB7FD7110CCEBF6F466633F2ABEAC7A7D0A1C370CF8A16607
1BE79D45CFE4070F971EBE827C4A232B2022AB847F88919FCAF407C96C3AA0B2
F20F09BD339C07A9F37C84D143DEDCFB27AD763C746E1814DAF57A1FA53C4A20
10D694B95DA29C67A81D03C05564AA7638A1926BCA7B7C3F049E3E5B235D984F
A314E9F503D5B3414419F5E85244AD0E183ECD4B097EE47C0201BFE7129B8FC8
7B571B2F7CF7AE4BA146ECD84F03230A39F3FF2A2F7121B0C1D25CE74C0DBB29
116D94283D32218A36813CC4DA7F46810AB8F74AA464E10190047BEAD7FDAEFD
37AF16766D4F5B87C3A0F7EDD6D6A91E8664125C1BA4E06CC1498A56F34EACFD
2A75FF4415E6E5FCA3C6AD820A8ED4978E6E330DA55D346D4AA25C250C84A7ED
5BECBDAE3D7C09AF01A444F83BB773EEC15EB9CB4C32BF24D23A2C04A02598AD
D18A5909DF66C49523AB41242F1D916ED69D1B7FB6E9F8935DE246C53A274F9D
51251AA043D7D652B330C18F524A55418C41DF71AAE2A077A164832BC0BFE6D9
EA4967B45D9924D8F14C06021B403C11DCFCC7391F6DBD347BBAE7EDF985A31A
59D1D3A011EA04EBF7DCE356C02723505DACC792086E18039526155ABFD0D657
5C5942F4C62FFA6997C40730A7E9DA851CC240C30649183F02A2677300236325
5E754FC98E7F41F5815F3A3191BC68C4CD4B3CBE485592ABEF916A2AC46ACFE1
8A4237096E5A64B2BD20D4F6727B45FE914F1873D3E96EE9B35B85963C6DED22
EE4E49762D23380A3492F87E46EDF94E391AAE7827E61C3AF22E1916777D1281
7F23F6DFFCA2F43D73399FA2BE1680790752B1CB504CF317354EC04191C7EF6C
AEEB2A4966AA42F7F6141E6B52DB2F830CE1A9373550F556C1843A7A46CFD357
0937CD08B93CEF7A1D5D6278C47496FC874BE0F4709B095AFBC08B0CA6B7A391
1BB4B40DB0DC64253AB26BB3161845C16D4A910E35F9C7D003E38FCE25A34AA8
D0BE3DC00A1E6D5546A28E23E523702BD7D8E2920C76D8E0C96165F1DDAAFE73
2B4D2F88F3AED9A047591F18FA11E2F7907B9626CA16609BFEE67DB56CFE2928
61939CA66F3375B5C3CC39D9560C010A1363F720E0F2E125D61FB011C8BF9A79
F4DF0F83D532C9C58847A3598B2B5C7AC6112CF380D176DD6BC6658BB55F683A
15DA0432E4E6B15F9E7C2C8477AB5B1C5A25CC9316402A6AAC857254CB4052E7
19F3F08FC9D7279F711FA0C386F50D2C9FC7F252AD669BB39A19492925531BBA
E10CA63833AB245A75FA6077C8D570392BC56FD7F7A5554E5303A733731BAE1F
CEAC6DC0C39FC6F51AD30FD0099419E94B1EAAB833E4E31084024D085582D0B4
A6833BACE8D08AE01E5697A89A6045A97778B120EC195D43DD298F750556198C
024A0849365A3EA20704D1F9F8AB6F71A4ACCE7F37A15EC7446C4ADE4BD7D71A
5116E10B5BCF752C369CE03BB3746171905CE02DA983E9F1AD6FBA81FA9820F7
D2AC621763AF4B294079B5FB0D28629CBE7AA6D4B2ACCEDD68D9A640909AEC2D
26C1AD32A332694C6D7FE127C2158CB9157B04DBADF56C73BB31E5B6776501D8
038DCB240797C58B02E3C78C0813A7C7D2AA4DEAFD87E0B8013AB773EEC15EB9
CB4C32BF24D23A2C04A02598ADDCA4322594C06E05F9BEF1443C5BFD793738AA
8B29B1CBD9E5B849FE92BA693B846A988C886412EC5B28D8121A2675BFC4D8B8
BE75FEC967F9103ED532A99EB95412E7AD603FAE18188849E708A4E614C7E5B5
FC79AD5F5DCF4CC9DADC195E944C6B4ED96FF4015081A47B223BF13C53C5351F
67FF1CA5BDB6D70EC642FB170F0F2DA9877C5B86BE61134AB9E9C3D152EDC113
99D21E575D73DF034801FAD46E5521566005ED315E0CF33327C2EE8B2E6C3DD3
FC94A6E6706300A80EB00BA56486C3C5CDCCD22ECA1794C9A2B4735F1A1D9067
E0D7E892A79C57C37382550C1B055AE9B7E2E73FAA5759277C78ED9F5ECA1040
A1857EC12DD54E5273B5708630E2202B5AB5B1957C25EB8ED3E59B60573360CB
98AE4F2F7798E44B05DB49D8C024312CA55295BF0D2089B505B5F326E0FB05FB
869188C14C268C3BD17A7F6557EEE167D20BEF0ACE1C4766DABA0A344DC46E2E
D72799A364757B1452927D1F9BD1B4BF55BEEF99CAD2B28569C39500AAA7F469
E61BFA5629D5BAAD0CE5BA343C9AB0238E1BE89EC47580E9637370148BAF6EBB
1309535979AB88C8DFA076CC4BC2E00234563116A4707E298A6F0A1E6F77732F
2E57BEB116C5FB2E5FFC5F97FF277F99716A0A20E86083A2B51980614AAF343C
FFE07B1566E2A4A42DE5A4D7E55250C52AB385EA99E8406D6F3AE7C6C9BA623D
7424874EA5DC968FAACFA0859727FB972B176E2EB6E306B30DE0B0387119067D
84206A483AC6378B2CEF6A211C3F41A8BC974A9DF9C2B262638652E7FBE3BFE1
D94FBC5570BB41BABA9A840E37A7D4C5D791769F46A3833D50F1C7E458C165AF
008C8667E64C6D50AF1AE2CE3C2FBA66B046FCAD8622D29B4BD7FF3C423FD8F7
550AD2166D5588B879A39A6F87865F5A2ECFD30FEA79234B0BC8EEEBD7F9F27B
6D59E5ECE5F23D71633577F5DD4244C5F7D9DCA52F5EE2F9A0D6A90ECEFE8C09
697FCF294FFB73C8503C9FDB00A5039C145EB2766A6355C71FC6A3DE7FF02FE2
BFF77C807C63E6A87E335B94F3B94359E8A0FAD616B76073B9A9F0F9D15D1154
F966DB5B430E593939F778C1E6B5F958AC0712B37B6129A101F4B9D473672E67
86F65C86A022B5CA1AA5E5D1C90E0AC243B7337E59A527721674A3F201E62AF5
F3AEE97B9E9EA48B9718216E846C1944E2C570015C90038D04C989578ED91371
84D29705EE6341F7788FB61AAF9280B1936C4ECAAEA8DE88B1492795FF6CEEC2
23A6F04F9AB7FA493D82E69091AC48885342A5ABBD6939CCD80529F37DB14415
1AC74059F3693891C175C8515E9FB2A5363B5D746F94E090DEEA37CAABBEDF91
9F519EC7B7BEDD4C3CA3AADCE73F5F0181BD8456E553AF718E0CF6AC68B1209E
705A7E0A796B3892A48FC9415E838D72FD3DB3A048639FCABFF4EC3BCC994CE1
FD48E705F80B009ACC121360D5D6990DD9B4CA9726CA4C25C041B209BB384B2B
6F63F0AA8A81AB02413A24DC048822ED35A9488016DC83C5E5F0EC36A884EFE4
54FE5DAC87BCD3AFBA75D9C449E476D1A97B4D2CB1B019FCC743E343CD9C8A9C
B730D4FB370631951C63F5EE5B109AD9F344B0584D28F6E8A01901766F9C9510
D7974D8511B9514355563B35BD59977D9E7BFC94004BFB03A2D3AD3D87D76B80
6EBB00E7A06DB008437ED0C7351724F5BCEB3591D4061C3A07C734DC3CA9B7C0
9593A2869C57EE88D434255ED64CB29C7E7A8C552B9C529FD492A0CE6F59BE56
32C536114FD057A913D9A784F016E1AE9F3FCC74664E3434506DA3CC3A4E5095
0891FBC3A4D0AC4A605C19FB0F2C053C156503A52149BC1B5BCA01EC870B2DA5
D3A5906E2108DFD526225981C0254B292DEDD8BE6E81CAEE4CA4B282C8E1BCC6
B94D9616762900C1A624AA3A9968BF77ACFE65BA59866ED3D4E4123A88E39027
5502AFA6BF3C0FC0C1372E62D89AB46520BA20DF7AC362036C2BB78E9649C85B
B2E5A9634AA87CAF51A4569140B9D1E458376255902961F42ECF175C82F28A56
133D66F9F7A94394FD517973078F27D6695A95B4313E397E8DC99F0A33FE83C9
73E65971596DC7423CAF3A9876D4AB87400E86A84A52A6FD66F25EE411B6FE33
80CF118CBEBAC1F28D2011FC1FFE6726AE7DE624006CE68892D3441D1DF4B16D
C2295F06ABE7ACED96009E826E0F3FA4E30AEEB73BF979B76603510EB77DADC3
A90F91F7AE99BAFE7739382EB296E6C8B20081C7787B17C4355E5B38CFB615F3
EEE17497ACFB30D8128E3752762CA0200F344D44A201EED8B4E96B5C199BD9CD
AC6EA4107ECB9974D5D1AE50A44DAD397382EB984802BF9BFFA80902C61544A5
36127A6FF5F873691FCB0491C0EC58851CE0BFD016F19EAFFBC1CBD9B5501E32
153D5C6216D9C908718E9169E8AD28C609D88568DA1B27DCCAE0D46A4E7DBAE8
443A072C8A3D92077B15AA56D979FEB07614BBD09338B3B9F76D03BCE7FA918E
32CDF27777C7317B4A7B706E31BA28C00947C92005DF3CE9F7106A2835B7DCE9
E9CFFA797CFD2B2DF3333A8B0EA3591BCAD345D46726A6D4518CA87BD6CA6CA7
73A51FD274161AA13178EC5133175FD55FA09014BEE383BCB287A21C983EAADA
80D33DF167B2D560C0102B0D8B9B03BFF208AA0C9B652B766DEE34F7C92DF070
326126BDBA4BF29F957B860BA9CD29AC7BFF6E814705645372E5CF6497DB7EE4
BF6EF869AAED3794ABA3B9F4C6DFF76CB3B6456A9F9EAE3D34918F86FA00E904
A6E674180B58326ED3CD220374C0D1E7EBA8B02AEC6BF990E931064310328846
6B06F291F23FF45A77052768DB58A9A3504C43FFD2467C27C142D85B01463DE0
543D814CAF2446F2D585984ADF9EBEF92C5BC347CBA664C4212BE1D262F4A7CF
E5D2AEF01ABCCC2EB556859BA5A459E66EDCE94A078EEA2C06046D91839D4484
5C807DE15EF6A253D59DC7AA022416A6C439B5A799005E94BD1FAA0B184B920E
187FF3594E479CB777B38BEEC165EDF08AA1AA9B8B40BEF136E6589B5F86F136
B2515ACF4D5385BA128D45BC7C961193AE26D43F2D092368CFC4E14862D0B702
E894290BA03B3FD43EA0AF466FA5B60AC4490AA5DB18A649C442A3FDF7506D16
094E18D9C77CB25E04053E0552D1570291CDB6B1B5E150E69AAF6BB795029ACC
C87CBFE7BED6E5963AEA52710B82F265007F942A15246EA5F6A79C01F6D93C16
A7865584AC0763BDA3A813438D52596DD03EC67CE94C734C935545B49CA1AC6D
7566EFE5BED447B2B5719A0B6935A8E302D671DF62BBA5AF20A2AAAA97D4662E
452C5AA2F385A84BB64B27DA576A7BD8350C2860940A4DBD332E7A80AA80E1EE
8040D687BDA0971EE623A369B2B4177CE8CECB8FEB6EC5CB1E2301B2DCC11D87
8C930193D387BA2AA00E3247B07CD9148FACA61B7267BB5EF3B8CCCB4C1E7696
D16531A5EED36C30AA15C66D57D0BFA29DF222ADED151D6624378D9C444A193D
5360D5D42A89184EA331A881C43BEC2DF3A0A495EE75A168A4FDC64E06B7F9CA
F79D1D1A0535FE16DE3909DA113266E6C44A16E5CBDD29930856F00BAB4302BB
272DF7D1D0EEC0894D177FBBF1DA7D23111F9CE050A46D17DA14ACDCF6FD0AF5
13405D71A1206B2E906EF1099DA1BF5D63539607ACBB5BE28FC0E42FECBA580B
63AE0226AB5913E6DF7BCEFEAD7C9ECC49F2C385C875CBCFC268C6BB20D3A288
6BF2DCCCE49902D9B2E108D64AC0FFE43B383BF37FFF24E15BF74BA9340C2D7A
07C933ED799FFEEDABDD8263F84716619A114021D64DA4AA38DA1D6513641ECC
6B920ABD2C8E0CD7C390CE795E3B7473279C10C30799774308F916FB53846B7A
A30E33AE9332A79C1C0F5FA5DC8023394455988F92AF5624ED0ABAE2EFAABCF4
22C9A4A46BCBADC2FB66446043571F374CE2DED09FB8B482FC347CC867626858
8F672683A3EFF25C451392020C809DE937F746E19F1CDD8DF91EB278DD1D3378
7E6075E6CFB55C8ECBA5BFA0CB0B71AC1117B9A2906312E2981516AFFBBC84D2
E3E3AB3D7FC53C974A2C112274C592D73E5D507C213E0C4996F7292D36D4B60A
E88C741C549B4E20975A35EF2EF378A756D04BB11EF041EF48A48B0F3EA110D4
33E465DF105F5ACFA26DC28A3A72653B6B9A0863A74BED4176CA3E79D6804A55
83C306E11A32BBC24FF480D46D819CCB83D0CD3EFA5C629538AE6734D5A0B5BA
252A206C12445A1DEAC59BB2DDFC698021E2931044781D93472588EA02CC33D9
325DBFBE8AD7F0D7B67912319462CBFF3748200CB6103D5F03C92D88CB7EA937
004FD2CFE207BA3E265B70E1E580644733867E499D0018976CCB04CA828F0CB3
13EC7AB9BB4EFD2D0CDA78FB03DA7644F72BA5BE3CEBA90F205384E90EC80FEF
2A32F56AC32F543957CD2B7DDFEA13AD0C33391B222E882BA7AA17C5BE10A28D
FACD11D4679EA67EEE010EDFB9974E72E0E17C63D2775BDB94C30FC1B4CB8166
BAD13A8913575DF5D3FF1A8688A78E71FECF06C330E7855CDD2F7612D563E1E2
15E5FE478C50CBDA69AACF1D2BD90E3AB8BBC237D5ADB2A2AC98D9A50D7BB723
E1F818EC86101CD6BF904E7AE19478A27C82334E61FF9F1C558F5424BE358687
126BBE4A974B30FE1B8EE6D8E98D9DB4C8ABB8C53C4521AA1658EF014D242CDC
8C4F930A33A839BF559E3FD9652EB4B511B6C12327592F8BB30D001600F7B11A
E636228ED0ED10831387A9335A2AFDB927F1D1A6D28C2DFD3193CFD61C6EB922
0E28A62B823F40CA382F29383941C80FA5193B3E6C9DA14348CCF911EEE42BEC
B8D1AAD8ECC2FA7B6A75AE8BD20F0A401A407DB4B829C3D4EE276BBB44FD9FA6
BD8D847B7490F16B313546A662143FD69C17CEEF7CD5F35011A037F15DA6596E
2F4A7A1CAB72993A06F37FD1E87583D9BAFF6EFD18F41A029E4DF21499887F7B
030B8862600891E417182351DAA5C3E26B3B1402CFBB988B55D3C04B94100F35
9BC3BE4E71A8145C531895528E83DEEBAF71FA3507E5644D14B01D84892E3B8F
00395B69FE7292DFA6CA19E759B409FCEC9E4BF23B860E2604AF2A36F622054E
AD0F1879F970677E4261391027DA82939669A03C2A9A064364C6C7277AE2CF00
87198EA079E31279A245797A8D4EB2B6028FD74B75965643A96D68CDFA81508D
A8A5208EBED6ECF5650A208CD9ED81E452180AE45B11FE2C41FEA2181350E00B
AEFB20337459D8F2418F7AD81585D75D9E85DF69FDEE2A177490F7A7E702A4F3
94B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8D69FB699E5EF78ECB6C3E02F2391C4FFAAD459133EACC2D796BA6CA1B93FA27
83C18A7081BB584ABB0B65E56CAD7951FBF3D7B2F1B66DBBCC6CFFEBFCF3664E
20BEA88F0DFB04F7327A86580D7C6679114D5142D922AB88CCF126A00FC3A635
2ECAA65514986B20A8C6709D303A7B8E7A0A7E0DB6BD15884577A15906A1B9B2
05D6BE2A3ADDEC4689A2FF1C73A2ED4B3FCC7AD65FA54A1BD6846D9DC307E128
A76B25716388C24A39C5E1B3C64C088F7B4A4C2D2021ED9831ABBD6962F9D2DA
9E68A45464C0FC1BAFDC2E4B2E4ADAC57AC4E808834EA5E1F1474139B2226BA5
9807A4E5B3CC008C51C13560F1440B80646EFDA7DA8A66AB020E97AAFD73BC85
B6D004EAA2F265A4708189A7BDEAB2537ADC66CA377C40A5C0CB32CDE66F20BA
EC05A6DBA85A5DADEE4F56A388398B823B1473A4A7482A8D8346C5294887AC2C
2691C8437C7CE12A6B4A13D0B1E7220A10387E8D7451079DDC8273A943F977AC
BE946570D926775ABC31DA04F93F61C1BBC860D32F6A5D1947AF1B714139BB1B
DC54D6309DA6AA3BDD4C0ACB1712CCF73B596C19E4CF6CB64773E9504C253BEC
01DFD9B1FCE735608D7159F2B191EFEF7C4736B9189FFCA60D5659949FAD0D12
926D48FA52D2D0DDB69D012360110F4C961A855368E1554BA0DE2927E429452B
1644C28821E5B1E2B57C18E0DB0B0BF58CE30E4674DE9D7AF076F23CD25D1F31
0343816BDAE9E448F95D9C679AFE350E0168E1A18B4768EDB01176F06F0800D9
F6C5A17C350BEED5259207CF80241D991BBDCED9AAB1308E0B4648FD4CA80D1C
7AA144223F42C28516C2E73CDE30808BE61441C99205A2BBF0209422D99CAE9D
A8AD2B9EF10B76906D2C4E468BF231C4363245298F8765815951ABE1866FFA26
0C7E829A1C82F627E912451010D4F6ACF69441026F25B3DFD9A559152F4F91E2
F454E5905F26B9B779D3BD9EA2CF9CCB5BFB71D267B4FF1B3F9D7EACA68C7FE9
4ADC3403225AC5D728EF177090380A78CE4AE8AD634FF3D2FF20AACE20E837BE
0D7EEDEEF28DB843521226169A1CABE920B31DAE9CE23FDDA42D4DD39DC7D5BA
5338BFD58F8A206027B020024CB98169C9FAF20B76D6CDD0DBA09B7C0B5E6825
980CAB56D409278CCA62106CAECCB8A88EEEA4F41976945501F32BB383455467
D217777474CEB15B50C31F5DEDAA18EC159AB6F03107E692D26296DCEE3CBFD5
DB2D469ECBDD4D11C29B962A65F051488A18E338578927CBC76F06699BB084F0
49E3271151D31C8390960420D8FC056B04E77002CEFCCA0C03A697FDD95DEF8B
2D573EFC2CBFB7C4F51848BFEB58850CB7085567F6AD3F4B37851566D69AA649
F9748AC3022C50FFCE40AFD163F8B4B5199B610EB41E994D1C67147A6E9968E8
F583ABCF01F87BF3BDCA06E23512EE7BD1383725052B5BA19ABA1D5BF0077341
0644292B55A210FCB74F1B7D0C32C7ECB4241699220574660E7D79B7329A7F6A
B723AEED60BF2E1158F0590550E43A1EC101E5DAF2E7182728B38441B5B6FE99
3BCD98C94B6D69CFF950270DC1AB3B2964A1A947223758B104AC2C84245C7A40
2067E25A87955F189F5EC66409240B103C1BA0F0E522055846D636249FB28B7C
58D817DC962A996A4BA4577C38C8D45070D0A1949DDCEC4EEFDB2FDA2E47AADC
B32BF6DA7BE4CD9D70C78EC698ADCF43C8593F72D0D59A2937A54EE578F09187
E88B3AEF7E9FE322527B447CD9F9126EED767026CDBF0D4D116C712503A85830
8C4957E435A4C0F5CC3EB4A28ACDF6CFE88C1C6C79815106E5F4C8CE6EB625DB
077A667DB07ADDE076D9D10FE50F2AC2BEDDBACA731F6A6A487FB63811D11E76
5FFE03FE75543C2FA6A4C86B4A1A47B29E51AAAF8EE678B51F35E8B794E5C27E
C5AA0EAC0774B0AB420A179F3DDD14E17CD01B9BF2018ACC72A4B70B89D57CC8
C685E84D859005B46DE8DA0E516ACAEED72B17C2FFFB9B00AA1DB44E1855FBDB
F741A8575950FB78055A28151C996192DAE8F0E6F686D20560178210C85C08A4
152100DAC13493110334FF10C70FCC1AE11CD5D65435FD3B6F6467BA89E40432
FAB011752C6D2A5F080E361DCF516EFB50A4E923397AB8DB97C9560BC5019E59
FD355EA0AEC6FDAC330149955E87E7CDFD02FED887BD571450A3A00C57B91896
65B05B32FC49160E566BCE9EC4ED830D15977AAFD8C8170E76FBCC6C6AD6646B
DAB5492F646C3D23FF72D7DDD32FF4BD7C970D96455881A94CD433D12A603BCC
BF25B5C499619E62EB76EC3F860F995C7A1DAC1D6CD14A5CCBC22D4869D86E04
D0DB84928C0E0980FC31AB2D1B449A564C6B2226A4DAA403C46693BBB4D121A1
07EC214BBE661349B1FCA65A2E390F56E743033A5530744427CBD49D1820E68C
C90F7993DB3F8EA2A7E25B58685556C172074527E260527B365FAAD77727D38B
9EE253F3EBE3200A1117137657180803240294D1AFEB0ED597E3D97A3AFF8B3F
04474792EB62131E1DFBA2F585C77B0F68A74C7DC0D0D0A18304E5315955A82D
93E0F8AC6005D4864E0747B14B68BA0989B13D1E466AC61BB08E4D6F5FD9347E
C8467BB9584F8BF5CC715AEAA38DAB28F1D8A1165A1344EFCC0F4AA6CFAC7D37
1E746A549D6692F5E6950D30067525CF0D8DC3945C4BC3BEF1867292EA1688F0
EC86404B8C6527E7DF81A280DAE5C1E79D7DAA88C2874C626FFD85459060CC8D
70A2A79E6CB3BF3B7A3B0CB122A3FE1487F8942E5D7AD05807BF85C7CFA1D3C4
15E488870DEA0B5F77D422B018790E66A66BE9A631B21A071D51C9DB01897E87
38B1F9A0F9DA3E588C0599BB1920639F0DA069B55C8CDCEA51BCC61B14C231EC
BC73C511681AD69F4B470F277179F88F053DF725F2FA768CD4958CD594AFF8C5
9F9D8E1DEE273B2E7D2DF24878CAA34EAD81BDC76197DDB58E06ECCA71D9034E
E8704CED1574D65D1D30B4B3F62F20BF5C8B3C518A4B147751B8EFD72B485F95
91CDEEF2FB745E0ABA8084D8E5936F3D30CC5D2F027010D1F5499CC466DF7939
4F2831682DD8319B124DFB13B93C6250D641179133D8221F23B7C33CFD9CB7A0
17EA526AFD58333B551D99F760BA7BD22B582C4FFEB0AB7F3BB1858E5E38F0CA
E679D2BE7071D3D97E6C129E8DEA518D44B83DBA26900CA4A0A6A75C67EF79A0
257BA0C2327931FAD58D1DB4452EEA28168518661DB87AFE1814613AE976C94C
39E37C0D0C6DEBBDD3381D4903121D3B6A14A3A86BC8F4661255CF360AF4CA4C
502D69AD514B7AA0BCC869E2A61FAAC2971DA2F45AFE3A40A1BFB8817CEBB3FB
C88946CE1822F84466E3BD89F568E5E330A899BA523B93A46548C810335AE6CA
AA4F77960865F21652F99FF290E84386D6308951B15F2D18EEDB950DF8E071DB
CCBF8503921705138409957AA0E83E3D58259248A8527EC36E97EFFBFDCEE7B8
49BEE0B67097E3A0329C09EE0F2CB97B1FFEA19A42AFE6A237BD28B2FFFD6F1A
8348CFC3FED7249236C0992895B881A895B8A735E82BA885886035E32F00C153
25D93A4476F65026E27C940A8F4B3E4DCC91C1F83FA49A95E3F931FD9149440B
1C5F19476096A24FE0D60AF98514E4E9108C60F0D3B414D3E83F9CF7E3DF484D
7C925399ECCF9F5C5274B26AD9A9E3A669EC71E07FB4FBD25B23DF24B69B42A1
9B31BF4E9231F939CCED5200CC51FE5AF048E83F7C35E6E74A95CAE59A4CF5B3
6B40FF4FD9508263A02F7BC5C6E67459D92AC849C0A5F63C157BD60FAD744915
CB6641945473B6FC7BC4CFFDA14AE1F634F3FF6875CD55DCDC2CBFF67018A565
B9C31A46F9B959606E1FC4BC1CC41A288E984220443B8459EC301F486A0FFF6B
D2983A840BE883209974721A1B4128109506054A5911CEBE039E7CBDC0FF81E8
B58F2F29E115EE9D49DB7C6E0CD6AAEA5A6DA14AC333680B3067FD36B22D1E24
B8132EB2514544F941148DC34C2159412ACACDF82B8195E42814AD90D5C13DE3
E15033D2D655A4CCE9A8DF0053591B64F71218F7ACBD1F1D3EB97E9BF2BF2D95
4685D86CA1054CA367646F705B4FC767CDEC45DC14AEE130C5ED21BF61E2B5C0
5D6399C29A372020944AD9E325AD942EFA7D31D4F863D589655973B72D1ABE45
772B8D0A666726EA48F987D1CD832FC323A97E05E807C3E3A5BAC4CCE749FADF
9C1E306AF947D02E315F3C79CCD4D8A18B49B70485BEBF2DA0F3D2CAE3F2C028
C5EF249DA376F0F2299765686953124D7433EEB44C724ED69C8697D06A5246DF
09366CA0270FB6C24C3D6AE070C871059F2319846FAFEAA010F4FA30CDFC5AB8
55D56C6B1D3BE08AAFE98B38494FC0CB2A1C8F43DCC32331D34FE30953745E24
926C9AE89679A842DACD9FCC7E91AC16D52049FDC80E3F594113BB219AD8063E
D4C879861B97A9FF87F80D8F86934711847848165C1548740C594BBB157B9A42
917B94466E3B5709860982D47326D14E817F0B2EA2E26FB4B9720087D65FE50F
9A9079DD2FFFBC15B6D7E2B69F1EAF891E3B7254B41E02EB68BD7046C386C1B2
C337E9C583DA5729C57FA21DBB8AFC2616F1D45745A471E3C37498F60CA915B9
79B4DEED29D9838C881C778C74EC39633C994C96BC9405DA846B02FB19284579
9E9FEAD3E417331A8FB62F312B74FF571C792B21F58D771229C2A3A41C2335E2
FA7661F1FED122859E091BCB55D8A2A5D93E46BC9DB72A41E2EF50BC1944BDE6
0FCC4FEFE9575D37A9504B66F501667D2136C829BE314BB13195CCC422BBF79F
1C0D743F5A9956262B05E6632CBE018C21BD9AB47DE70F1774647F1D9BA8A1AB
5244B7A352C7812E0A23A0CE6259A0CF74AC8973E2BCC93E5C20749CEDA6E4BB
A631A61C5CC3286331F97B3CE55D53BCC6418D742FDE629180C36922872A6832
07E4F685D0842F533E9331E08AB13E0010466553E13824A860C976A3E76BB8F7
ABAEEBFCAF8B77F2CAAEA1092C72809B6E9168220845A4805624155A79CD6D43
6D547BE57469ACA1A3E998FEBE42319C54438301160471301AFB35692C0DF8ED
B3DA25DCEB056C08F324878AB2E53FC1A0F065398D27260766FB07467C26019B
59155FEA7ECDC0F799753EBD3C54FDC1061FBD5C7C15DA448AD00C0CFC079A72
589C0348C9EFAA99AD22102AE686865D42A2961B8AA138B59EECB77CC71AB5AD
709BF401BC6A5C318F36F3732557F802A135E3F2FE8F14BEAB8F064CEE1C1D09
E83F13356E757E2A64BE84623CE812FFEBCA95FB5C7659BD7E30F41CE95FB193
84EC1505C233BD19F3DDC5C5A5D767860B8C7249179F0EDACF26DAC5A32458FB
F1B955F0B691350DC0E4B38EC1471957E93257B478005DC0A959A891FFCDE275
8D853135C58A28CD0FCA766E44E44C5AE93ECE02639790DBC9E4428FA690CDAA
7CC1E2A90455AF129EA1A66E879C5D7988201AC7F8D1D27160C910CBA51D8EFD
D49BE24C09C4798C4A051C0097C8681548A6BDD7F15C555F40A475D96F399FCB
8E7D1C70B36354613FD2C27A6FF7D3F22B506CA9DC944E160B2CB1AB365A435A
4206559DB36148BB24A2F1379A1DFE20E01028EB61F1FA991D9B52473B61D401
23E82A3F186134ED98CF78619AE8194FD3B9F18469FF7BAA9E4004D5458924E7
34C45FF82138FAEB4FD9412B003ACDE92B6446CC1250B208AC7456734B303325
04FEBE317C76109013790BD1BC3F4E65A4FE2BC28F1495C6BE640BAFFAC4558E
05F7C6D5F9A8BB59A813C66373E8E10B6C92AD0736F8927D37DF2447C343BAB5
CFED2C144FD01452162EE2DD285A49E137E08D55E68F3075C9D83A5692DCD2E0
5FC5B19625B53A2E575EE139B4F0E7DCC36315301A833B481DC9B7D8C920D092
76CCDD4C6C58C2277AEE6B886DF574A4E35B7C22198F52741FCEF2B8E137FC08
6F6683D57D6B2524635E26D5F5F56488A21BA11E1B4268372F0E3DB6F03AA479
15E269F5089D12166596A52E32BA16DD6671CE7F3FF6B34A866D3CCADEBD7512
8241EEB6FE7C4C383D3E7BF97B2CE06822EE3A7DE21936DC75F8BD114F84862E
6B822E6AB421867AE5AF3F3B38BCAB834C9E0D06A6FB148FB980BE1C68CE8D7F
8AEF58EC303E62B84EA810FCEBB295B37FABB5325CD9EDFD49E8901092FF6B23
2F3CE2B322F8A0EB3CC5D4AB76A783FC932723E24E36EC2F580415ED0540B1D8
6DF4B2EC81023B5B9E354CFE201E2EF6220E5015A910D79DC805755E7349D332
5CD8FEC4EF92A62B9C394A944BEBBE20D5795B41C85D883A7B825C2C64DACE45
A8E0CC91E1D614C9FCA10A660D8835C4F50F6E790EA8E303135E00AE343882AD
0796D5CCBAA6F264F2D52D333C203C1D6F6884A5D19AE93D67F52670BB3F44DA
79234986AFF04FF03C1DB4D1F2D9F60CF2E4DC5DAF8C21432DE41B0E4BBCDF33
D30303CB30727EF10B903761167C1AA3122E846A1C0EBFAFD24262133A50CBD6
6665A3E4D438F83DCCAFE1A668467008699837D9C2901AD18B0D1774E48FA861
657130339119567424B26FBE9EBEC0B1C3904AC687E1E052000562B43085D300
37728FACE1D83589FDB00A1F9F4783846CB66C30E46E5928C9AA427E46D91AEC
98B6A6D22A71F09F95601058166C27A87CE961E0DD2BCFAA3E4D74E6E0355C94
EF49256CF47974FBE8689B67A7F5385D2E6B03E4DEFB70112B67309E70C817BB
61AF6991A182A15E48E6FE4003BED0D0EC9114D916A57B48CC839F5DB4ECAF6A
10E77ACE7469E09E3A22FED07C73813C1C9F0ED260EC4C63799E6B610790FD82
681BF8C77F1670B022DD4B36CFD48BBEEBDC94DE4CF47B93FC6CD679AD415963
CC1BC0635BBEF4E812CA5E0E788035873D0D8514A31D7773B74C3FEB1BDAA3EB
9F97BEAE8D2BEA48DF8160C467A7EFCB0CA56ABC164CB4DC953DEFC2266ADF6E
BBBAED8A49B82FF79AC6EB0B36E2F4794FF8D16B73DFA7C624EA885430175F88
C95D871E2F847F4D2C2F64E879F2ACEE148D55098B00AD714B169DA93627B7CD
EB3B26AE30EDCB46ED7952DD4F10F3A2F4EA31540D040C417E9CD3E5580A9B0D
04F36C41B2F67221876312E280CD029984DEC1EE34F30E77F7C3174AEAA273A0
7ECD27C36F1608E534EA5FFF06387DFD9185BD17E8FB9934705408A1249F3175
E659640825731A12F98C3C20E8B4D11B331A026E3D72A9FC0E15EE51F9714112
5A74C168AF79A5038A6C4DC8807DF5F6C137D67B87CB0EB1B57A01FFA0B9C628
F3181385AB91EE9411ED24C5790ABCF2B13AD73998F178FDAC18DE8B1B9EDBF5
3FF5A5CDB7913F411544E56FCC097D843235152536DC598B8F6569E5C751132D
208B1FD63B002DB87997981132C8A46FEFCBF5894CBDFE9A9EFF9D4FF7312148
C73C4D68370AA66718F3571D56135659591F21DC0446526ACF4852DB92FE4D8D
09826984E1B447113A2A05CD8D0028621BEA4751C930FFD27D21F892B9AE629E
7920F872C7481F2323B536B33AA3A99DBE929E48045A055B960BFBEB2E1E4580
10F9E338AF54166E27780D54AD116BFFA488DF0AFA1E08FF5177BB72916D578C
2C6E72A18B942B4EA3DBBEAA7A63B0279661F69F181917D92AA634E4020FAF50
A76B7BEBA99F7A8167F9AFA37A73A0FB876C61400D8E584A4CA5B0B05E30A69C
32BAE697C2969E0151F34502EBAE22FE9FEEF344C5218AD07EBB2F326A9604A4
598A0C9C494449C69B415B8A30C5BCC1A675A1110C53469584AE9A37142A3E14
CE5AE65A2C788223372A434F4500840F037B4146F2BA41BFC289F9BF4D2AEBE0
1A951BC5C9FE203C53FEC3793C9E61AE823BA1F14749B67DCCD4D21872423349
104B1566DB33E98F3E3123018D1A910C476A30FDA8DE677CCA20E14126A98C80
DF80A4AAD9D948C409A009674D3973F49E02479CFCBCC6F3F444854A6CB5BF4D
15A945E047E5D444BA9F89D55B5133EFCFD4C2F51D28CF849D07521DE30F80A6
CFFBAC0CA1E1FB58237280867D0B6044853C5346338E638A3DAE4A7E07E8BB6C
DD5DFC571BF08088BBD5C0C85670A3F98510D85CDBD404767ACA975156B1ACA7
9B8E8BA25691D93A331F9B1540E7678FEE3F06A1E11D90CBACD2F6847A169E3E
5DF9D56633C1B15D7C99239703FE05CEDA92768FE33FEA39EF3D2AFE9349473A
C450199F6A38DDB6765E608A50707E26253E1AA57750F52670C2F1A54555FFFE
67565AB5DF23A71731265FC522AA903C3D3F360ABEFB007D46720081C4980181
482A05815E4B59FBC32679188117A12E9700B7EFE75E9C410C27EBE3F8C28EC3
6BA0E331071D9B11BF19F5E6E452765A1EB84BB2C53DBF6940E4995506C31733
F01CCD82089B6CECE72D7992DC7BC4F5D001F82EBFBE58CFDE6DFA0C1F2396D0
0025D84A37F88259548245BCCFDDE610175A46D44C031216BABBF99956AC1F4F
2331899EC13B449FCBD7D10DDBD0A73DFA5A60BC3719653ED0264B30003EB82D
D3CD9831BE0D7020FAECD045206F504F14DD921DED25D079DC45EDC6773C8AD0
A810731C123CA6DB5D052DC85A500806EAF2DEE898B731EE8D59C69A83CC4049
B8C28C82415E03455BCC5631C2A4D2D9DFE8EB6193E460C2E06DA974D13CF572
2BD715DF2C1F0640609CC536D4480E3B5600481FFFEEAC6894F03C8F735DE3B5
F1A3D1BDD00765D8ABF6FB6645816F11C172CF25D0C90AE79806808157F97F85
0FE90EC0DB9F2D8788D3F37C2111F4B06818ABDF3337B13915116E6563E8A16E
1B05A43EA180CA3AF8312E432C5D39F018998F22AC2F653878A1F10CC1C84D2B
69E1136A43B9372388E338C1274490520FEBE076B8FAACF504DA1030B5A9733F
69409E5D0087CED3DA9536E8E3F43FC7476E29B41AD72858D419272C6D34DFBA
9CDAB55B0DF16009C90FDBD1DC7C82D6A36B6B588ED0ED38C61CDD2A8431D15B
FD52C76DF7FA2E48176AB5869BC64A0C6E9B0626C45A3FABBD3BD13EEE71BD78
8BA63986E91000A993AAF66B734A33734552A03DDF0BBEAA28E83B5C94175DFB
9E11A2CAC3008CEDA22379CE386A13FEB9568F66F15D2B2A9D7436B03E75F60E
ABD442FCC40EA91D47117C01D70565B0BD1971A8944F2F414D6447F9187E9D4A
38B2A861EC7CE148E4C7AD117137DDC1A13F7AD8BD899F9150D97CBCF1217C68
D12DA90476714F26416A8A1FCEB0ADE8277EA1389AE83E574ED7CE8FBAAAEF2B
83996315736A9C1E65E532540DA1FD8B44D552F2E15554AF047C83371F107688
9F27EA5A3278B71C7B793D2BDBA57DA671A26A96971DCABF92BB712E903EF312
B586D1695800C0636AE2E4932DF0E2362CCDF6C7E286131BCD31713A7D8FEA52
5C6CD596936BD73967E737EC77A1EA6EBEC99EEC3BDE32D9817BAF2F1A74C415
263276E233D6A0FE9ACA9892A8D19A3BC4CF48570442128F0972D1691E3DA105
06308800C6364C0A20BDBF4582018C96F971C16A8FFC2684D92B3CD4526F1D99
F15662A6D63471EBF57396892E9811C2EE438201D5560A35AED1144C61B9D757
347B8BF8EA0EB5FD15914D47E50DF8483B20D5C660140D60F83D04A6D58D4A78
782218F0E99BCD1B96F84980107D9F1F84324925C87369959D7D96144C986B8C
404DF9D1932385D2EA04C130A5E1290ECB99B58C8568A708362392BED4093208
8CC35454D205F4E63514C4752046F7C169154748147908CE9404D3633D80F0AD
5ACF7C8DB07ACDD584DA9E40B4C737F00EE62D6F6E2030057AA57FEA0F2AFAAE
82870FE5CB67A06FE01F9DE78428283B66FF0BFEFB12EF498A11F826A6DBFF2E
3E78D108E4C76444419F8390ACE8C862C37E31FC49779CB6DCCDB1CDDE0D43F5
248CD7CAB70D3FB62B621B8E5AADD330B7A1EFF95F8A80B2DE549A8AE864481D
4FEAD2D442634A73CE1BDA27AE95248636F2F237A4E9D6E903BDFD7E31470293
D599FC3E6B48D607446BD505CAE6A34711A8F4087AD8651CBDA63A286BB287A6
AB7FDAE3DCA7CA5D8F7F1BCD1F5C1602760A837DCEE674A5758E48050801192A
2A586F5B26F2781AA908AAD1B5C344ED31C831D431CBB11DE8EF9F6A7CE08C20
6F8FBEEA1C61E2CB799D77A62D4F09442EA7F2B8770EE30A2AC713598FCDA36A
43DEB35DA63A24D8BCB9B3FF7B40B0E93F100F0AEBDFC1B739103854AA2D7D46
9C3378D3510246C6FCA8FDE492E897DA5C5560131287482437447820FA578FE6
2B9069F67E4BFF3F9ACD49DDABB36569BA9DEE9319451BD86F67B2060D2680B7
ADBDED1A01A047CF63A493DD855DF407BED49265FECB5E60EA62215E1F11F364
811D115A2FAF8CAD3AC37E71A485D3A8F812E3C5479654F96A219F4D64C7EF7D
C3B7B6CC1FA61E5016C74DA3327B7F2AB0F8AA06E55879BE4EF03B9AEB28486C
771AC0ABC56D9F16677F3E4F547827B39692F38E8A011FDBCE92B4294F1D4498
143F48EC83B93856AF4E51DC9A0D28BDC3124160BBE69160AB16F7559A53BB6A
0ED2830BBBFE9DD6D3CDF86535B6ADC046256ED34C8257A88E004C8DEC7B54E8
2BB143B0C69AFF6E792192EA919FEBB9AC5C0ED512836C9F7D03157B9E0EFEB0
68026A4BF67B3A421AA4D53DF94E139121BAABDCE13D9B38CFBB41166552C7D9
BC184596FE4E3591B87D76D270114C8D9A1FE01EA77F8B138FCFC1F14F16DD03
866ADC038FCCB5E78E8AF12C34BEE41AF71263E53C4954CC3426D88B12BE22DD
67ECD0895A5874D44C76ED7723541DA08D6B1BE07A361A9614A13C14E46291DC
6F4DE398CE7CCBDB80565BB4E74C697C38CA8C70BDEC3DE0F7DAF9B336A19F23
45BE13530C91BF70ECB2B6185FCF23F81489B5B0BDC9B7411C6F4A30F183A66B
CD9F54CCB6656A3A0918252E62F4769A896AA85B12DE24279612DA5AE02B0B63
C83030E20E31C6EC9F5CF002EF0D286892FDBEE1DF765B2D3E2804A6BA5E8261
92D1D4AFBEA3B736E22F832B4E01C4F21E933D04CD295580A4D2D5A7D91448E1
DD18DBC0BEE7EC17ECE6D92F1512B89CF0B4494D41B0F4067C8E4247868EAACD
9DF13DFE9DEE62A232CD0B69FABCC47BF69D345F17D3573508F27A40A76DC155
D07ED2248405B25E7A4F3E85BEAB017091880503984A85B2D3DBC962C007511E
6D460AB2C14703DB36E7284AFD235E3E684D94C6B696B8A3932C81ED34B49C70
1A53FFE9075A7E8A6308E4E6FFE930C26BB15B13D27CF2651951CD8582BEB5B1
5061E632A963BEA01199C9D03F637F2D67B66DF144A648B85EB39544F8281A4C
1F98094926BACEB9E2EF70326A16E3F3065FFD200DFC044B18E0EF88E9F67341
326DEB5091640B38977C475CE727091CA399C03810BAB6E1CD55163C9B010663
917C5C22DE7BAFCBE6FA0AACE0CCBD48A1D4D9C21B26331D1FDA7397279CFA17
0121E74818B45F61C70F0F1B79AA194C275E95F52CB74F780ED55B22F7854A2B
589D84BA98C0C8F5795B0CFE3CB85204CC6A37ADDB722D8052C295C050D0A3ED
D5DBD017690CAC28723484FF9A829A3BE3B42B554A3E22C52750E39BCA30CD83
0F16B2524CA5AF7D1406F833666CDF0103C3CE872EFE7BF966759203B5B7CE87
331A47C10DE60A539D53084FBD72077EE23B50929D8836E6D2560C00DF8C707C
41A606C2800715A4FD9A77204D1811B3B667D0FF999A0FA365E07A4725305719
C61F73A143AB97A2C2DC5C3BF0A6458057C25A6E36E134A0A1A0694441EDC912
375FD64C86CE90585DF064EEAB0B71789BAA9353D9042F7099D3B4157FD1CFB3
CF014F647775A9522C6240EA7F7A1CAAAF8096EE43AAB1E65A4235AE5288C1EC
286B5B728D517B171A1BB5CBCDBE93757F9EFD269A4426077ECCDD70CB410BEC
B9E4352D0DEFD0E0A21A1FA9AECF26924936ACE323DB5D2D860C9B6FA5B05C63
E0940CAAE8306A362D6D396A057529521358E96C359188FEF07615891C04B4B0
3E87D618250FC12E0DBB0C7740B6123D97C683FE9B6C5D887D5FC6F346039BD0
2753435D5A46D33EF52F6EB04563E64FD2ACD7974629BADEA6744AD139927313
A314C2A97E352BE200322BBA4D9842227DF95A1281E3951BB339130EAC522266
460174BE27060866F3E5210CE91604A97C1AE233E89097CF2368614346B754C5
E107744F1B082C62EF4279A92B528667E7A3CA83C3D0FB8503ECD1FB5FA9ABD8
37922A2D24DB842D7C55B014CC93E448FCD10120DFAF45231338139635E85F55
6735DC1BA91CB5472B0F164A7CDF7C33312968567737D42A88E364BC592F8021
7EFCCD594DA0D82A4C4C498302F314F979E878BA1FE4EE40C68365B9F6722F99
0B9E22AE78FA9DA09D90AB8FC78851502BCBD22BD8420CCBB0C201C64F56CF4A
01CA9B3075B569DEACDC5839B2767BFE59B7B39F54BA7DC8ADE597058C23D84C
0F2CC2E5D1F568AE04381AE0F892FCFEADE647DDA302446FE6CDC4445675E151
865A51E0814D83BFF829583DD2E0F5E0B54B1EF13192C93C51DE039D784F1B62
7E7B132CF1DF00191CE98AFCF1ECF71E93F66D37FFA39F7943CD771DA3C2F1F8
C15CFEA01C9B6CEAF96FE35EBB551CF61F9586FE20DD2F611D1498D2FC421998
708D0C532A8488775F45761A9B09BD6E17F209DC92DEE469C9556F3F88B809C2
1D305CC73E9ABFEF2AC49D8CFDB30B864FEF95C04A4ED4FA681C9B2554897881
64909FF1D72B67C2FB55ECE015830CE1B9B1DCA3D82E229C375EE750B2E3F6B7
D77CC80B30291C1AB1E94ECEA0B2E028D9B9B5216784D864E45C208BA56BDDBA
AFDBACB65B38E9837598DE8CA9282DBDB38DE8248C58EF795BB4322472AAC2BE
328C595EB69B1092024B8FEB3C0FB8C09606DFC007C244862F32576C53E7EBF7
F550A25C406265F12D113B70C26CA9FCD5F4E7C831F5661CE7FD7C0DAA694B1C
0DA19B75FF0378FD96436C9C76CA957C045691D44A5B53A7E98A52074397F30B
EF2F18FCE3AA2E33EE1C8E171B6DA98D632C3B602056E42F498DC3A1132636B1
C9327AF78DC31107BB5384092DBEC6563E7F05C8D488CC893A83FB25915CAC9F
9DBCB811B58B5F62D1E4D04B53E391367A7E43B6A7FDEF9BFBC883455C00ED32
4E835233151CD22FFCBB2434BFFA1A9738A6790F94DEF30D6A50FFDDA9A0A11B
37AC65B99450895D5D93088FAB88602BAE9C700EF6A1013D664C97027D4E0B05
CF14CD130447C1BB78CBFB8C3D8FFA9EC1D9474708C817BE76040C09F0835AAC
2392C485E8E74D5F231B375AA789F8E6958525AAEA1164343742535E6678A67D
5174670404E541771CDC30075AB29408E1BB2B772C44E18EB40E83ECF474502D
7059F50167E064F55E5ADA76A1BEB5A549C54B4D2A05CBA2E4C17F2EDEC6662F
68CB1A2AB664A8C28FBC36EEE02440E9DB6E915147143D07B2364B45363D6D57
F395603CD871F3FD30281841B549EF268D425B2486D56A6B187F1FB998A208A4
75C11C6963B612D4680218EABFB313C21BD8E77F58038E22157116739B9C381C
88E86B74267C1C7E32DC5815947E1281C942E9EE0A91EF744F412FD3D4CC1E16
5EF4357578F42DD135776F3BB84378B710F77E092F93A8339BB603FC38D95A6F
BAA85CCDB23F3AF12E02706B3024873E2B904D9AFFF7DF7065992B983B8DBB12
871FDEB2A3D472DA46DAA9720671044E9EFAFD6F1A8348CFC3FE74F9ADC6F741
6981BA08F4DD371BE4CA7579EAB30A4DDD5F3CD3134DE8F40C716B8ADE144135
75986F4A960B6FCB5F34B95ED5E749E7F99901C269F6260738A55601FDA37586
986B18E49FE6CB6278348751C732387A9187768056C347D6B2DD728FE6481921
967A96025B1F0CE8F31B24D660B57C77533218285798EA862EAE67B715F068B7
53B3A0CA970E07074FDE0800CAF94EB8325C5B843F1294EAA3EA0D350C55551E
9C7D89A0EC84448B4D8100E088BE4422393EB3BBC591A369F897DD1CFDD24C9F
3A6776851D390A8D63C25F29D7BE48AF31010D9900CF402CBE887D998136D643
2234EA52C505EDD7323A00B119CE7893B138E0BF2453ACF8C2D1186B7AF5414D
765E9CE7A9F06910FF53457083F94505D110126A6DC14DF620D9F548518BE522
6D06A35902723227511CCAB935BFA906F8F39344EE09A0D504C9EA8E84CE8A82
24B6365B6A2335322C4A258B75AF11D745A2E8BB824F2E038B405348FE9E9998
F2BB32FABEC26FBA97C8C34B11FFC0DA1613D52F0B05419E972453484E367E21
A7C5A27653FB94160AB02AF14E541FB0CD9B4F53D767675D927B6C8D853E5DA4
E0AE6A385246FE39B4803BE3025A33EE84B61290770E74DFA36801B758CC5556
0F4AB5BC490DB43C43654827BA4C0754B270FA7C180D3C726DB6D01EF07B0EE5
2D9E89966C9A871E40DB52FA39156C00D5707AC76AF707799825B74C1AB7049F
0B02676D0BE933BE5561D92763E6287A368BF8805C3E19E742AD95CE0CBC7F46
D11E9A6DC5EBA82CBBB56EA0EC825108DE756104EF655F84F0E50E091326912E
A367816559C95E6C2112002523FB56D0967F83E13EBBAB98AD9656B82B983060
50B47541E34EE6FE28530202D8ABF2789331B6958EB5A6B8FC6D14CCC72DC970
DA8F5C7A9456A6E8951B81B68B2BC8D5E9B68365C5E219DC279D92453ED06C63
2DE4EDCB25CD0DCDD37660C7C92E8BA6BAFB1A2B0B5D02B6E52DD23AAF524E9C
F03F784A6C491C7B7427276EE3B91FB3AE2F8A469519DE831E0C5C8A94BF36DF
3AA07B5D84CAACEBA9B518057AFFED98C678A0B1A46A297A4D3AC2A8CB10FCBF
6963F9B5F10194B17F755D35D7DBFC1153B243E2AEEF294D46BC7F6B044E0B42
20CACF98ADE5F883A415798D0840ABE8D95E5FBC35B0FD47CBAB166A4B7431BA
C473DCDB5607C6E8ABD79D4DFDB417E27B18EC2273EB003F4EB25E3D88552961
3ED6760335B5C32CE5120E31E634848DA4FA084B5848BC09982FAE5F87DBB473
375627914D49FB686E5A25AE16CBD811862FDBFD2860A5F416D0BE73BFA23A9A
D0AD9249B93AB350BDF355A7DB81E0BCD30DA31F8BBD5D6903CD98D2E11AEF15
1F68A9EA2C50818CE1C9AE5B0C8FA57DBE180B77AF4E0C787342A00542DEBFE4
9BE6CCEE21E0EF5DF6638996E6131487B172FD570D96C66CF7BA2B1F4110735A
44F6756D5C87BFFBC15914E5021F5345DBF0B2FB82B6911157B9C02ABF937E10
2BB6CDB1FA2173A0EC87A7BFFBBE5872E8F3525847494338CBE02D755B45B666
6F0764B9CF258EAD87D134410DB55ABD53391EF0B95F81F231481D021B20DE7F
B5BAA16414C4D600F12F5C1FDB2925AF21B6074D7123C7EE7BC424FA13030666
8E0267B05E919FC8A6CE629E73818F6DD3F5DAFB9B315AB697A5E30DF13EF8E4
64FFA7AE54D3A6FD48E390166CF138B9E8745FC4291041D37EA215B85CB025B7
998DF53C86FA9BF1093DE1BEA3E0548B9F4ED287444F867186571ED3D49C8319
8F7EC9224061D4F0B9D6228BC0681A13AF5A23202C7EC96770B1B0B36EC6C780
F515594EE1EFE5A96C3F95ACA2F5B40CACD63DCB18409FA5D77123DC2F1DF191
DB69B9F5FFC8F2FF50930FA5634759B52769106847715095F20798326DAD2AAE
1010BF4F49C4DD500D740E9781F66CED9FB83CD16CF2D47DD7CB26302764C419
6007DEEADB29D64AC5E784434EC49C210F871209A04CAED5F5FC0E431762CA50
6E4664F7811AFDB543E2C0445D1D177C1E087E6C6FF63A578B13489638A1C793
4E3BBEF65ED35C6D8E316F56417DEFF5C951594B56E0B2E68061D37230FFF1C4
B54A46D5794E5C7E51788DCF67C5F0209C61B40FA8263337DBA597C4BAEEBBCF
084B67AD623C1767D4CE36D35E03CB672885CAD3EA6636B096C6522443791D24
E676066D512268F45C5AAAB9BD73A0E6F9C1353D8762611D14E943BEB02982FA
471097F94E8C6C1FA5B558AEE46263A77A5F09C76A6D48AEA1D1CEB417112BB1
B80FE02D56C9E04DA7B521227FBBC1FDD15431CBBB712BD4433ED518C5C9E61E
E7FA65370E9384D7069650108DC3ED1F89FB902F68DCB8FD999CE5A4C13625BB
577BC7F0CB936545ABD73E76AE24964B1A58B3623388D5E9846256A40B4FDE99
80BBD096269EBD9B12F0683B4890A794D63E33BFB7FC73679A986E793EDC998B
FCA2552076DFB6BDDEC10898F77E0468175A38FA1B4D2281FBF64556B9DFAE00
DA6E69B6BD7BFF6285FBEECBD41061F36A530719A4AB3836156D71EFDFC53B77
08C27116B678FE24EC82D1934C89CD71A24929EBF07258B035A1BF55B00552E0
D22AD61A19DF842877DF206E88C57B92A6A57E88C1C84E2A46CF9D21EE3B77DE
9B6D4AA50AE73E4808704AFE484A818B2F64AA3D78C3AE7D80D347D6F6ED8114
B44A1DD8883613D34F0FEB20ECB5D49698E37B531636C72CEB29C9C525ABA3FD
FB4C3ED891EFA4AE6509067A05DF0B44F2E9A4D9FD43D35EF3C31A13358338C0
5BF2862E672385B4875BFF1323AC56EE88B3F6A5B5B232FB7895B4ACB613D9A8
3100FE3F717045B6C28EC027D3EEB9A7E75769DAEB10DE625BE0C0466F1C4C16
43975993E68DA3E1EC7B5DF3204AC0FEFD8FDD0CE0071BA48FE73A72EF061E95
E5C3766D0A67F9BB1EE066F97DD95CB240A950133C28C32AD80D8A9EC1F2C798
FA08821B939380A747E19D6852587924439FF14334E402F9F8040AEE605097A5
FAFD1E0E95922A4D9373C5E36B58ACA2D7C495E1B4BCFF2B8B984E2F18960BC2
953B6E1D604E584B78A7C8997D6D4B8923DE7DFB08CC7AB693579B2C1CCD62E9
4140AE3E0E1777DCFFFCF79CAD366B9249ED4912BDE7F11ECE8DF3064E8666A6
F6DE12032955ED63B13ED2C31A90B2AA41D3CFD293F0587DD262ECBEF64B473B
74579C2B9EAF9D08EAE68773C15C54AD59D0AAA555AF220EB8986950D7011BCA
D9B86B59A12C19D583B7F75FDFA82B288ED4B8DA2851A708E51991DA1347D2C2
3CA2386188ADA2ED29E532CD2F9C9986BDCF022D083FC15E8746E7B7D945939C
10FD678D94C7D93746B8F12FD782689E3FA4A11C882F34164020984D539288E2
EECBF5DD365FD4EBF4C2209B2A9F8C9A7ADB1292C61F6C18B0D741EE69B1C34B
4C094FA01863CC99252E8625B83749A64AD7C537F47DC27AA33F0D82A3CE836E
16322B61B69B909416F997C58FB403782C7814F9D188D65D9F34E0A27B32BCE5
AF1A7D87A6D00D8B16CAE62C95B1F950CE0E4D5666C9013E7F9C0EA7454E9968
94A4F0D92CD12C2FC678325BD905B1A2F7E71E64EF4B84A76FB61F968A8B1DF0
FFFDE5053FD4C8E97DECD7E777D44B5FF7010C93C625EC313C57A28F242D6A6F
56CD54B6F3AB7D50D5429B3826A1DF6ADFBF7104FAB2E8F2B5E550E8F24CE5AF
652949369F968009CFE7D7790137C2DC98EAF8660EED1D58A4B0A98592759C17
1EDE7129B4D30B0C5C1D53DD7230CAFA4C2F1C84FA1CEF3FBEFD6141DB5660C7
41DEBC353AD4F8A85AC2743E0C233F23869EDDFE1BE21B1AD5042B5A0DF53B7D
D218283AE864FA676327647390B9C819546F99F0F3010BDEDD08A29CF8DDC233
2F016C12F4B99FE193DFBDEAEDD6A614A3FFD10B3761BF996AF029159F4EE8A8
CB65C2A45AC9DAC6EE08653B6656F1C7862A56B92C41BD7C147FFEA1DF7AE00F
2AC2BEDDBACA73CF6CA68AA788AD7C340D56591630CC0AF29A33669A5D0E631A
CF8DAB5CCCBC9255344BCB8E85DBAC4B0B782FEC1E5952751E6D43B8722426FC
C60B313855300EE9611AC64EF312EBB41E1C7CCDD43E21E8AD56372A96AB77D3
C9DD4A2D1285BABB60CD3F2A29A01841E4D6FCDB961794AB1051201350786727
0DB99F8ABE8CA38292E4C3DEA62B297A462F2E9655B8435E364FF3F6B8564EE0
EE744B475FF3F081E256EC0538A666E2600CF33EF817E138BFC499A7A0575389
98A02CAA1EC327C238C4DC807DE91505E7E4345ED51998BC0A26CDFE16424E5A
A563389E049EECA40F11D74E6AC5A6682E983CC51A1424C89D2DD25493E6FBB7
CCDABE7B2189976F4DDD0FEE70BE85925A748DA3915EBCF7ADFC199E653B94EF
C6232E3F6D51F6E9B7E84ABAA0700F2F36E7597C4ACD19E0D6CE54984516895F
6F3B37F9BD84676E907F3CF6A5D18B996DFB52FC5CF3EA2679F8D4E6BCADE5A0
7131181EB1C63351E54493734F36A79F06EFB7B30F3723876C2ADAFDBDF010C6
3B71690DFBB956C6ECCAAEF1F93926CA45F153CF914A78699CD84C934678DF30
A6023CF92280F6E7E2D2C6B75AC510762634EFF9F045E4EF7CB194517E84068E
49C18BB1F1747A9DE763DC56B52E2E45112735ADBF06EFC9CA7EC9987E99C919
13A144A9363FB5085080E67E0CB7B9F640D27EE0DBAC4C9A1F46F7E23925F8A2
B17175A525C530107999BBEAAD3B931EC75293864DD19E560FFA82945C853A3C
144CDF6B0EBFFB1E7022F89AD4C9E184B98063C8619BACB2AC0B902E471E71C9
2C6126BB72986B839988BD0570051D8759ED7935DEC964AEDBE45CB27EAC5FC9
BCC3BB1B208E2E1EE06C6536506371EF2C440CA39273ED24BC1ABECFD5926323
2C33F477D645FC61F557A4FC5A3098EA157C86AC2379DA60DADEB986CD261381
5FC2A82DC478331CFD637D57591020EA7D2033C49114D26252587E5AB85DA35A
4A00DE309D2772F62E6651568528B25707F24382777B66B900C1685B50F22A7B
647192C1786F84F37A9BE19B6DAEE8F9876E575EF9501C6DF46F4D883EC4ABB0
811CCF55A34927F76ADD2A724037CC8752C22713DE04422A46F0ED3980451624
584C20D45197F36FCCBA9BC51D8CD5CCB85FAA4C3EDBBCF89AA9798BCA7C9961
692C4CA4222DF9DFB0D93D5F37F894D17A439067508541F14C012DE1EE6B1137
27155940C440C7F8FC7A50B5357E6B0040C2F7FE9E92DD732C0BAAB2C1D6F5B9
5D4992B0AC1A806EF1B2439B7C4C59332B9B537FE7654F3A17B45E309CB301B7
AC2D8EF2F245D729698CCA8E164CC84F0BA5AEF639134FEE120542282278F200
E597BE0A907FA0D45DB620E9291031333C8B3976066C45183462EC4FB810C1C7
2A5D501A44FB65FE843D682BC023AA9A4533BF31945DB4827AA1816D0D791CF0
08A890DEB873C96861D3B3CA94A35E31083CE068D906DE0E31E31EE73151FF89
E02314B05A06E6D7E58192EF09656C63122F1B14FE55602D559915AEE8663386
2A81528E65DFF8B30A405FC3AB0E3CA781233578FEE8C5B6AF68A64EB642D7CD
78862BEC51DA27531CDC7E694F10763C2BB41864E8EE8532D00D7DEA4C8D34F5
B4680DB440DE370C5BA60F65220C06DD443B7352CED9D9B3D255164A1477D140
347CCDCDD2260926F36E7F08535690858AB3B56B62DD5153334D6A20CF758FC2
459A33B1EDC035B84B5F790E78044432AA73CD67F6B33A8D572EDAE0B41277D4
B8F47EA1D0854B4F7329236C0E5F3141213145143910006E3C79341E693E30E7
F620806336B100F57D944140A75700B2EBA3135BC8BFCC73474D71C418FAF37F
BA8D09B305A06C1E66285B5FF5263379F085C599D96D71B00286D213EB22AAC0
FF77537B0F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-BoldItal
%!PS-AdobeFont-1.0: NimbusSanL-BoldItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -12.0 def
/isFixedPitch false def
/UnderlinePosition -111 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-BoldItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-177 -309 1107 953} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8CB756BFBA4D5AECF4BE5E
CD4699C683E5E6E065CEDD296F8EEF1D3836662A861996EE78FD9D22FF3AFF04
47A8B7FD0FDD2F2867810E1559355E99439DEFA982006CB3C153627A15770AD3
9B9DEFFC210261733003C864223974E842F5C50DC4466F905B826F103F09117D
A18CAD1CD1C450EDBC35A1DDB1411A6B70DD82C6D263F9668A53A8D5BE4523E4
310D3C300046B7ED546245ED686428447BD857D2FC5D2F7C13359F95FBDBF0C8
65FE137C5706D12E3756C2E2722EE193DCB95928742FF603D2F8DCAC9381C8A6
93C435D832691D9F03E2D49FA26C67CE66F45C0097819521128F868EC3DC1848
830DC53D7ACDEADD8DB05EDA4C465B0FA706A05E17091D994579C89890897F2F
847729712FDDCD476D4122751B5485A0292278490A7F09E311F6188F2AC426A6
8702FBCFBC3BE34A3F6B57D45EE25F3332FF220108296B151895D06BED1D9B82
1C9EB7946197ACA04E7EF6F89DF820042478B5146078201573D3E0C5CBA457CF
17E17C8CE317F8047C0A8941039B7255CF90F60D51E1ABE0CCD86BE3F28B1F64
F6DDB25DB89A6A408985414BD11EEC5DE5200200999929ABABD227CEA73D9A47
75083D96B0469B6CBA06BE5ABB69368254BA6A28520DF69BEB167A68E5FD9F55
79139771FF3CEA9690EBC0759A11CCC3FCD5501A83B2624A5E8BC33B04E27901
EF48523C4779D9317A295FCC99B62A4BC9C8DAEE06FDE9B482A53B7D889A9FA0
379669AD9D9DFE63D85FB36204B0C56B563C813D8FE5F96EC166CBCA4110D1F8
197928ED01932308A1C9F4C8CA95E5EDC2BFF60C929F02AE87F5D62290D83B30
45AE7B8381255F8C39C370F9E9B0E4820B4185F2DB8FDFA795D4E0F57AF743C4
A1453AF3FFC96A7F864470FEE912C7A16BA596C8D1286A8B9D15CAA534860B07
AA63CC8D12DCF1F26DB6592515EBD6F73F63A55A12B9C84AD19C21824CCC9E0C
E6AF42F220B87F2291BFB1E1140AAE4EFCB4DCDBBEA45AD2998C692316CBB248
6D61BED35C2A60966857E924FF8CB6D27941097CFBC0152DADAD834A435DFB38
9CC14E33D4CE17497C23877EF771E24ABDD91972D5B20AC7484E4EEF35CC0716
19B9438692C501C7DCD7FFEA4E889870116EC2165B90EE4264B1C4E91D35DF76
7FB1F6AE193A55D17766E68064A83C6231A4FE72F042ECEE7BCDA604B971DF71
5A959492560DBF9027FBFF6B20D68DA5B49ABA0D67A2F6C006B65A81BD05FA8F
CDBA92637D2CE33D4EEBF0AD2A8782CDF9E0ED9ECEFADAE921575CF4A518C1E5
1B921FB8BF6CD7F036B7A36FEBD489C0E4B284FFA332B3D433E40E8CDAD78E42
F9D49AE24D11B9B064801D47F41B366BC38AB11EC6790DA9A6B6B3B8B66822C8
E94A33FB5033DBEA582F8B401381B9B86AB1E1B7E0C048E542485D8916D49130
1D6F8F9E8864D2E7440A64DAC8E1EF4AC76A7070F1256E6DDD52B18DA4304B1B
63AF7EFD23CAE96C94B20AE2F1D147AAB602E9889CA3D7B79D9FE70A9C4D0076
715533B2F948ADF90E8319EAF91DD6435FC6A7C2B91B672FA23D9F875C001E76
EE74EFC86063DE74AB46A38EF4A83D2E4D14BBA67CDE2BA21A60DDB2317D3C80
B1A70B71AA537516A6AE97864CD95FDC0C8D5BF2E7D04AF5F2FCA69C377DDE8B
FDFAAAD7096E1F56D8759534421E85750C955879D940EAB8B5863110DFE711E9
88086AD2A5BCDD97447886FE244E61483722BB725B80C85E2356A05DFAE2F930
17FD89C13B5E45FC7AB9A306F4E8DCC0EC329C83EDD50502FF5CBB09590B40FF
E9611D320B35F5D7A492397D9101BADE7EA701B5F07DF7B38E8D2BB0A148F6A0
013292F581E7E675136A907D99247AA85BBCE75BF96A710C206B78D6B9EB6AC3
9B6BD772E8E2779F1AA6C042AC6847F2B3291D30D4EEB934A0173199B0306F86
50AFE3009F4B5B5B94363EB81B61D72242433D85534DC1B358CE61FA4B9A8A2D
C1BBD437830EF669589A52D66CD401D3BE7B698CB264399D901F1DF32CD5B746
6F76A8368D8F9543230805C8763BA4DF2418489580229DFEA4CF551103450057
E27BFA25D69BC72D24DB44795B8A0E1BEFD383D8280DFB565176F46B6376AC6E
3F7414E4A017F9FAE43F47C36E5544A790DA1EC1000BF23A56FBFBFE048D06EF
30420DAB5F6E30A982C30AA85A6DAD465D7F23FA6CC431D01F3E73FF7F5B209C
5BA293122C6599386A9FDE5673CF35E206C199AD291CD4F0E033445E86EED300
3DF83FCB4D8216D136C4B20B96065574316F2EE82417F462A0254946C2A763DA
FF66422D6CECDF2A91EA9B6982110264E4B82391D797E8F45B23CBA363CD7215
BAA2D57AA59F7A302CA639A34667A82A4C20F71129F117536ED7582550ED1801
D2E1E0890E1A6EC8766C28863DA14FEBA138BC4638F601D167121F2EE337886D
0C1D801AE1CB0BF72A5339374C40C301C20129F370A31CC4DB362A3EC3AD4451
93BF8FD4C70AE34CB2B48DB39EADBD5B796593ABFB7AE698D5D27BA7D7566DF5
77FAB300B6827464032E307878F37560196B744498262C6E8C4C3F2D12308839
530395F5A21DBE11C8E3123588FB9F523440F4C0EE87E3199D01AE237BCA3BA8
093A81FC067869C3112E7DA26D679ED4D88F60425F55F7A116CE6C27E6B87268
B66C9423855D10E969517CBEBB35358D4A2136D6F059E45618804459B97194AF
A15325E3517D7711D1F495D780F5288AF6F8184A73A5CC6D1EC909ECC922D5BF
C1C82638EDDE790B529C3B1B74485813A61582FBE603D54C4AA4831BC0B7A2F8
AAF27E7E115BE85D71C300391464383F84C9F6BD8300C9106E18207935824E6A
56F38B6E73AF842E172330B7C45B67C84563320D69DF611059AB782AAD5BC543
27AB3774CB6B1166CF26E5DD772E599AC1B58628694B42C1373ACFF3D6705B75
CCADBFCF366596F5E35C9B8FC70A618F06E7EA8857421D03BE31EB29C735E3C8
6A6D4BC14018A5E4C844A0E1323D2B6F8AB106FFC9385D0A86BA9936555A6B03
931A7BD7AAC7DF2A8EDD75837F0A4EB5F509A3EAA3441E8203F9481BA4311F6D
D40479F67BC42485D9DB3D8AD97119ECC9771B459F638927F3DC3EF44719CA6C
14D8519CE6AE125904A0668B48B8BFA23840DB74481700CEE9F0A507E3127711
1BC4FC2CE0E37DA58E38CDB754ED372B6E21F2FBB89979DD6B882A592014C28C
C80021BC78B56EAE35EAB4C8C9BEB5303B6BF637826BAC89547EE7EDABF40531
F48A8DB2C360DA554628A3046D90AF2F763B996B536C7F37A046D4D5B2BCDA76
05BC83A83F169F626D49C409EEB53974A69D2FC7B2005207EE7676D8ABC67D28
7AAF68FFDB416935BF25534EF2624694FA3898FB8BA8080801F9BC7611DCF9D6
AA4A8651177CB857FAFC17E3470B4B43338895F3EA54C559CF33FB7376D464D6
3141B1EDA0E6FFD1D82CE4D084352E97F0925B11B8FDD312B5CBFC4A916A6CDB
708E37926B072C4FCC51FC11AF7D0A61C666D3550DABE839BC2DB2DE0B56D88F
2DB4AAA5027F87D7C0A8DC3082D35617EEEBFE47051BBAA42A15C48FFB0FEC7B
89209983F00331BDD361103A359B68FCBAADEA205D585BABD246585FD44C7FFB
D5B878504A44F088E9CCE364DA954F895436AD8E34AB6B32B5003F5D19B78C7F
280053479A3A8234D93B303EDBBE9C97735FB9C83587A2536500DAFBE0CA7772
A589F8D9CDE094D032050163A73F6EA328E44125303428643E8ED21FCA15FAA0
DF5303BDF4C89757BD860D5479A701BBE303E74E8428BBBB487D799F17A28722
DDF48A5182F822529623BD472E3A7B05FDC80205ED6680C2F4E22C93778C30C7
07F241997679C770C20768A0635F43121CCA21E2CFE07DEA46CE64D8A8853C69
5C665F456A96319D7561B43F3859F3821264DA5AA9E03C2096BDEB4024E035D4
468AE5C73036F3704B16222179BC1698D28901577DF22473C89EDBE0951BFD3B
3E5B49EC9A2BAED7052DB44215D6E646EC37BB6FBA5169B7ED30FCFA10237565
6D225707AE1E8BD59E1DEBCC065A98958F8901269120B0F07596530D42F2E319
95DDB0BB2E0B2ADF528AFFE256CD3BF8A84E0EF98138912565D06D282A433E1C
09BC01838E1415387B024B70766152AC159C272B1B9E1A445D5693EDE464C9AC
BAF5B64CECBC44440DF602DDCE0966A6AF25584B16E80D26624B1D7DE6F3AE16
301E644CF68041D4E1FB4CFB98609000DD08748B2D340F5C5E0C8DA6D7D809C7
9DB6E45C56E52B786689D12F58A2C5DC8E33C024353D906B89C79A1D8F75E1FE
87F564DC023CFF61C7324BDFB76CA74C9D6DDBAF21002A1CC5E9D2D252CB24E5
ED04ED73C0E7EE1B6CDF41D5E0BC9B2E7FDBE23A8AA1FF6203A51656470E261E
8C48403B5D89BBCB8E30233EB228E96BB183F54581052B63B704A3C238DCFCD3
AD96645559ACA5056F7FD695D18FC6BE2133004BB7CCB2A35D5C9B4D8E318D16
23B71D63015A8035A9BF1DA3F832114E67896323A364BCBE7828A529F46FFE55
CEC85629C30877B40378154F3C9AE8D3DD9B34A60A1DF76873BD1D5812330D6A
3040C01B13F40D3F8D619DB75BBA85281C413245BACAF61A76C03F37CEF94FA4
247020DABD961136713786AD1DE6AF42F220B87F22913A4347A4522359194522
155CCE495AE3EC6EE9C4FADAA72FC2C4A95C05EDB283FAA0E3C33421B8006C3C
D93617E6B0B1E0DFED7FE5744266CE245095B21421E755BECBE942D5F370CE0C
31BE367A364877B96A40346172CE44FF83A7FC46882A67033816D6BB0CB3B1B5
A5C3D0DCB573C959B446A8A15EE28E5772676DF8F2F603F3442EE12E1992F5F2
4D6DF96C7906DC4D3F814370CD3B1ACEE58FA0AECF8C1F0C4EC952C94AD319C7
15F1CABAA2BB9F7F40C658B8D7EDBF8D085F082F84A35063986A42B54CEA1FF7
1BD3AB8647D6542B4C13689C8AAE5CD664275A5230AAD9DBB9D5FE2EC20FF979
82022F676F74FBCA5445D5B4714DF71181B2244F41DEFEA8CBEB1D816CD92891
EF8EF3001EC59B39FD2733B795EFD6DF67C7D6282C2710A0005699C8E9233C1A
D116C8B52E7064C70C76C8A0F9C4BC6A0E21E540522005D44BE632DF43872D7B
D88A0BD8C6A80494B0F1484E50DA2F8F634EF811C7B0A8DD0C05C28DD04BB003
7FE312A5EEDC40B7A9B5CEE8D867F7A98040673AE5154B9227AB5D9DB4C8E6E9
5D303B716ED984B70273199BC6BC8BAB20AC92EEBB236A1AC1465969C26EF641
9C4C121B84DE8B70FBF0214838753649B7A640441E9F1D298A6451A3275DFEFF
1F9667F2F3067413877FCCDC7736299743FD492FE7C3D7CC0EC29B34165459AF
6AD6A0BD3491332087146DB1E0DA32A221D8C377EF43D68390822CE151FB514D
0FEFBBF1F53606B8481ECD5FA685C542CA5D86A25E591E0531A442F63B6D8659
0198C5957B4070796ECBDC51BE128255227235973697DB087A97CAD622AD2C6A
842FA509880E0C448046CD4A643BCD5069B7523F3406A4BC08DD6698ABE4BA9B
D95617B6ECAED1A7BF1BFEFD016105D2909FAD92EE25DD8427BF0C1FD943FFFB
0B4E00ECFF538E8D3BF95924D84CD1829BA9D358006D2A7FFA731AB0A699687E
5A666547A6C579E0320DFA04DAB4649C9BD693699D467EDF1DC93410DE39713E
FCC5B80930DECE8AB7D09C59200534183A7BC46FD2BE0EC3855E96425AA5F10C
A1EF4608FE644DA9ECBF9FB40C3B28B0F44DBB92FD793EA37DC67D93D0487E79
FE4943C4932B82A848D79FA178B893E3FADC53835443CC5F676C71FDA5E29DF4
C794A4FA812B13AD32B28BC12419F66734602C39047FD0BAFA91D2389F1C2E3B
262BC5DE05E422B435B4D7D91EB17F913A93505042CD6689CE381DAAB3EC41E1
C8BBEAB138088F3E3123018D1A923A078A952BE760F64560F50B146EC0F3B3FF
B1F9D7B7AAEAF9EF398C700948FADE7A6E4B2335E903D3CCD64BCE98CF50EE18
EB907EC3136954D4A9D288D2883F713271099A724DEF3F5D38202A50A8BF86DB
590037D31B757D1835465DB7CC5CEB8D1EEA9E6BA8CDE849B513EE32BC4C0A5E
98B39A9288698AF06712270221C5903F8C590D0E36FD60FA010DE7B08CD1A4F8
FB4DDD2E8CE937DDDDFB2F10CC9D7A16A35DBC00B6445547C25D2893E35EA436
B561FE32BC7FD7832388AC7C94B0BC073FD16A8A80B3FBAECC6BCBF8E6854D2A
1901F8EE29A61E6CB6FE7024057C14583B86DD47D7D0D43830E2B903B64F1AFC
602FCCE890DA197DC0DBFCE43D1E50E454F6200692EC078E3B168C8C7A3EDA1C
457AE3FC7E2EB583176495683BFC3A7D14BBC95AB950C5C0BD9FC83853B47E46
3D7894836A4D7E1FE8FC184AE202B86E7BFB4B00186D318D849C05B30F285EB6
3583B1E81D6C228D0DF0F0D753C3BE52510FF11A6F9E0B83389981067B92DAE7
C12F2BCCDB5E70D725E484023D78E9DB5A0B980BC0BD5160CA0E9A2BAF50FC17
42AC2642EA361544EF101FA8F2D5A9DB4D534757A78CA6082ADD110ED96539CF
733FC53C12C123AE2FFA1E577E1050048F02E8D2D3B22B04F444394CD43A53D6
392EF768BD776EEE1EA3895F1B317E75E5E54D0FEB31A7A07AA201C7E71AB5FC
72AF08A8D70AEE51EB0ABDEEAC94BF3611A6C3560C88244EA38E7D327F0F4C11
7F34AB17610F5D7F76C207FAF95A3296F1F66DE67304C8159E8EB6B7275C48C2
FF8E0AF8A0ABC2E2D3BC6E2C50316E16C3790BA720C7FE89091CAFC6BBB366C7
05803E0F3428DEB8FDB828986367E2372D33DEC4370B18001316F0FFFFFCDE7D
4EDE64887E6AA4AC90243C33DE88A0A1796ABF91B9F2F8642AD3DA077FF97308
0C388746C5C68AC1700237D1B40A978F1EE6D211E53A1EA2B9AE53C9B5DC7867
BE5AB7DCB5083BF52F48B60E9E83E4AD91AEFE55D3F68D46F3ADD237D911F846
A5F811DCCF566089489F7ACAEDD9B914AD2DA85750468534353B20EB77100338
5D82C58509CC2E624E0CFA8AB1B31853FDBE3AEF577B39129A89428301D4DD8E
99CEB625B6DF09BC50C1BC7652B9E76547FDD7396C26BABB986161BC527AE249
95B1DB317AF64FFF99D2B0B7FDC88AC122B16BF91328B4AE1AA41603038510D2
D48CF8D73541D32DC9374FA1C341F87805145CA7C88BBC805C8BD33872E29655
12717D1E7DB316E8D6B5566E53A71D7CC728DFC2FE9054E16FA097D94FDA04E9
77358F9E072E8639DDD327A43E4AE932E2B747CBC8110A5CE80B433B16E39C30
B9A7FD44766E184A71F7A8B57BF15ED1DB28B0D52DDE2B6DCEDA4BB16291A5A7
1D14516CF75DDD0810F02433FFD5B823CD6A422A625C8E686F3F263BC002C888
4F38F3BB6E09768DA01CD5AA7450D22A8FF7418B1748B2B229488CF16B268AA7
54D994E3AF90ECD2A3E0234F01BE72BADE44EB00EE2B7543187ACC0F680A66AA
8D29846FD6EF898C821C238EF07B60D548453D4D8E36CCEA4B9801A1E8530E53
12EC071B101196D37D8E4370C478020D11CD0C411592CCE94339C59CD62730CF
66AC12CF4AB1A44FB87FFAF7E49D20C538F1852A4F8BC1AE23EB9CBE9934A549
ABD10B4D63EA1E87EA4F5ADADB3A9F520F437814780848F8FE3903A941EA2090
2678ED433A0031BCD6269FCB4E10CD9438F6C1C35A6E519B911E95A2EAE2D316
3A6B891F80D2282642457C821A57DEA70CD2286D0B5604241F395CE5D1B5202E
D38F2E4C0363B0ABC51DCE4D89D490458248397176142194F2186E9B1804A05B
350671BA7D5EDFBA344D6BBED49CD71965ABFFB6F13DA4C09C3CE18C36952952
92CCEEA7B21C9B8A0DFE02B50E3354FF10196BCDF6635B99138BBF76176410FC
32F24F319099CB79BBAFA8C8A4D4DAF1BFBB93C7DBEA42BD43657B8718D8FDCB
2D1A3B6A94B3667CEF0FD5FF75032BC8A1930CA75318F382399E28AB06FCF003
3314795375478B68865970DAC97B0963E96D04B6E9D31DF73907739D7EC6A3BD
1B16ED4B0620CD94F6A13F151FC941D0082658D35A251EA07539866A1DB78393
61A2A39E35F4A55A241F8CC5DBE1FF101A0A492961BCB7BCDC2FD909F8B12994
1C49A1B9D9D18DFB3515FCECDBAA9174D995F4154FDB773A7D9E29FE46E464E6
02CD2067CE591D242C1D066E165BF330F4D3A0A807DA8C72ECC33595EF5AE62D
CFB82C50EC9EFD3DB2AFCF4C308C9E0CE76BF62652F79150A2D35BD4580DAC8D
FCB09C9B2F0CAF51517BC04AB08EB03EF22105AE17B1F03D21129B5E9C9CBE06
88490B3A656582CBC1D90D9931DFAAFEF5383EB3A8AE43F782C9C7F3EAAB6839
3918581E5D402BDB26097BCE9413D853847B32CD7D5C5097943F10715FABCBDA
C6D93BCA5F131550E83404843FC36D9283B20A208840FFBAE3ADFCD1893A370F
E5428EC243C0232D9275B6618CD94CE466C1FC3E5A53B11E8B8D4B8190C71F21
94541D624210DE3E63C206E7044D53414D19B1396528AEFE032A82125B839CDF
D2D76DA8AC2E55757D240A62C6D6E0250A358A65ADDBE9EA367E12C615910335
910CA61F5B36096DED07A8250C684DAC5D5595A3C018ED39462647319E38C8A5
EFCAA822840BC8FA3E02D9B520F7E8785DFEF225DBB0E088A006D05396235E0E
22F5A84982C779EC123B4524C794D282665B4A9A9E06210DC568582584C21E0F
14B839C1813663D33205454A1A4B2D9173D593615C445987E30E3040EED97319
A0009DA31174DCF5C2A980B837E51DD299B23B877A487B252B5C8AF4283C0FCA
892719668573A26CC0D7138FEB68C2F14FA41AD6019E7F444B549234C8F9539C
E48B10DFF138B6EAF2FD0B521E205D472B96D3FD0505E6532BEFB47A747E91FA
2F5CF6657549CD60A676FD98E1D866463FB7CDEA3D21FC14CECB4AD7EFC5E0AD
4ACCB17706DA244B8DFDC8B09D4AC677316AC50B0116FDB2C01C1D7ED7215213
846BF109C4ACB558B54D39BD054AD811A883E3DF73C5DF2A818ABA85EF3003CD
3D55C132C55164C6EC8FB34EA7F2003D5029B9867FFFA5FAE46743E6A86CD4EB
C8FB5B0EEC03D9581EA1CEA938B1DEF9713FE5D7AE249A449513D50B8908B6E7
86F693FEC96DB845C708A8A275F0A0D47AB0CB042F19683E6F6CEEA8A4B011B6
12C8579B7CC6B3085775664EC99C0AA51F05BFCB0D4DC15FB599B9EEB0C060DE
98E2C08A663CDE6E83DFD6A950CC30E00C41B94131082DBD5EF01A0F11922C2C
89763C7B0BB6ADF4E299555567A88F879C0A52C826F56408295B70D9FE022B5A
91BB6E98159DCF07FB3038A0C431DC3EA5609FB01BD14B61BD20023FF06A9ED9
A189D846763667E9ACA2D76BF06F0F125F1A9F4A31C461CD143594271E3C1AC3
B1A8B6DC7EF39886E8B9CB758DE90DA4F0049C2A4ED08E25C48440AF23544DDD
A002535DB573AC33814083C5AC36998F18A6397080D2E5361CCF32578540D0EE
AE169098644153D0267A1475E4FC00DDD285958BD97DCF653F1D721BA2E185FD
DAAC32C6925A84ABECFC00B4E520F17DC65DEB358C78F2596A6F892A1DBBB791
C07A45E7DDE2364F63929EEC1D9B8C14D8053F84E69AFF1EDEE23D1E18F1D52C
D2D3EA73BAB53FFDE586EF02F559A6FA964FE50C29555126C69131A962A8AAF3
D3B33E7D926FA19CE25F7EA026E67B750712929867B787B5162ADCF329D2710D
1EF4D0F225214B02885D5423AE88422D79BBDE21C1148FB7EB0E766E84F722FA
B55AB7413849E3AA278F364C3138255AAA8F67C9B93900B00D5149CA89A28A29
4E6D7348787C8498C8EFB529F24A018A1B71BEDD6874F4C01BBA0380FE446359
2A0CC0D168074E8665A397202623D88C45C1D1BD43A33F5CDBBDFBAA5653F93E
CF4E53A4012773A0997220CF12DDA6256AA2F9C8EB37BD583B0A36EA2AFD824C
88453970C05823D0AB800B022A9B59500133156F283BDB4CE6BD2F4C3AE574C7
BC11A9052D06C9F508DE64083AA77BA1EFFF5D089C9E19C81CAC4811C8833E79
F367A8A3E3C33421B8006C3C144934DF04844389AEE76CEDCD7E0DCE9CA8470C
8CAAA290F5900666EBAB3704DA8B2CEAC86A5309E31CFBABE20AB2D4B19221FA
2C1C11CF6FDF3E6E71FAA5EE8939B362568EBA5408F46433EE7C22146826EC90
B35F14FAF24C762E3214DF693A24B1B8860CF9581AD617D1B957D2A7432584FB
EE46CE0AFE56B567F2A61A3D11171B23C397A958A8B899C7CC8821B070E435D5
C3FDE1812802B91DC7E796617ED244FF89F652FA542AD968CB3E74C7CECC76C3
298B3C4B80F0AAD183BCE7B6313C2AC8E0C145A72A0D9F60313880D8716B3961
5FA4C409F6738E71063022D2D73A70AC8A43D9FC05C91A42A2F3FC6977DFF7D0
79EF1BD499EF6DA752362F09843CB94153EF99E148C093F5D97A18B6708EC8BF
2F92C199A49A16AD389EF091D247429B9615F2BDFD8203AAA65D8116A0074C84
695FDDBC264BF43CECD490197823BE01251F876D9294CEA0A46C54B51684BC2F
BD7A7777F475837169F780251F107E276C9A2285E9D60E4A48C3743A1026A65C
7D6B4D981AAA739ECF1848244C116CD5839F6CC423A2BD76A70CA4D0E6EBD329
D7DE0197C5D6AD69FAAEE71B0EFD89B801BE95FDE887CD5181A6F96DF0EABA40
DB4B37C49CB83F7BD49261920D83FD6887591645C92297A264445CD3E15DB85C
9CC6EC08DB9DEC93771232F2E1D7A3CA79BC7B918159496F21A113BFF0AAA5BD
833B0D91A874F95BA4E3D11AA35703BA6031FBCFFC0B180D3D55633A6BF62386
16B603788F6CB5C564ECD7F4FB614D7F21CB0D414EDB9C1D2935C2D2A1FF5DDB
689091FCC695DA147F072986067B33E9581104AAE504A742A8DC81ECF8F3935A
61579F8FB30C4311DA767A96B81C8D5F45186CDFF72CD784CB460D09B477E2EE
FFD527EAE7BD7991197BAE7E68CC6E0BD1464339FE1676F1EC07027C9F3B6B3E
B1E52B6FFFCC8581FEB9998D73417558944C53BC9A850E70D539DD8DB003E563
A48EA308C580BA84A84C9BC409E869FC6B31F156CF93EEF96E46B8A574CBDF3E
43550BB004964050C48466C4352CE45F1E40886EB59A661131E339589950507E
B1A5101DE7E9881C23C57B5FC434FE4B67B08FC64863E15152954169F5E44EA3
EB2FAAF67B8EA4E1A2877E657A2D3EE98F8C8E2C255E2AFC6EDB5EBD070C7B72
27AB621416AC7A810EBAF32A00CBFEF7D2743C3FFE091E57641459A6489F03F9
BA2DF35D2174C21C9AB231D65CCADEA4A530A39880BEF6301EB2A0443C0DFAAD
91E9C3A34577669C6CC81D6483EB03B3D774D50E46BFDF3602743AB24AAB7879
7EB93819B3155BE8B892AC85DF820F51EBFFC16239E346D2597002613A73572D
79A8CBE1700412FF4E99A8AFBFAB8583AE4D112C05816B6C6B60DB5AEA07A6EC
2C6585FC74036F39BAE4AA3FF2FD0FB165D2DD92A6351ED6FE1722ABE70E9065
9DAF0C5B1C80F749FD9E579FCF288653F9B3C73DA6A2F1D8BB9EFA02055754AD
FE28B025DD2E0545805617031403BB992601D292FB22F192CF42985E5FD5D026
EB71DAADF23A51E140DD3D824379C42E7D5EF72A7D5BFB0D0117B54436513885
E1F90D286C7C959A9D114D5E47831EE6A3EAAD746F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C4B19E33
F046CE97B53DEB549FEA96CF6CE66357C4904B7932F5B1CE03CFE3A10C976B9C
C9AD11D7A02816F8E11666CA8B3EE1411DF2CA94172659BAD929E3E3E5248F48
0690CEC6D8F7061608CF2672F65ABDC96B4FCA84D5C847440CF9523D3BF23F6B
D4365582E4B187B6A1A0282ED323BF221EDD0A4CE11CE7EDA738D1AF48B2E19F
EB3DA1664DE99C447C35DFD45069FDED1FCD70B4A6855E91FFBD7146EFE88012
0BFF1D6D1ACB53D5E07FB5795F561A4A3E953BBA7C03A9762ADAE18E58DCE6B3
B1A703122EF3B16963AC7CB9682CE60E17947E7E675D19901C7E8272CE4C9FDF
536ABDFFA429B820A82AEE9A73D7DCF77DDE4D8E251CB3B3A5B0A91C0FCD7FBB
EAD7A812FF194FD049F28B82F4C2D73E41CC73C1C9F668931A2C7EBA5400A1B9
0902EFE6792F207136E1E16B41794E6CBF7316889A602D35C37EF36DEC95AF26
E9BB0900456F2EBF2705ECCE7B2ED90343D23E006ECB282D4B3629BB0C3892F3
FF9C17FE6C5FAB68358E1CD44AFF021948AC9FB8410A3DE22E0A01E367C52470
2A8CFD284CF9E8F505D5DBD7BBE242FE071FEA0094A55ED1CD7C9BE6B7C56C98
16AD1985FB7624F5E48CF6C0C2ED85B466F64C52F017B20CDABB85D24452E086
3942362E764A2BDA0F6C1B24426E302DDC4403A087EFB28508B137772858D1A8
9AD21A4DAD367B21D4B71BCD9DE648DB1736797BDF15C2A600ED17943DD010B0
4FABA5139548EA09718566B9DE86D04C3628DA170F8A3F2968FF726EB83685DD
B4D90069DB7C9F7DA84184290F508081C26CC9090EF0D3BF8F83BC3E3DC35E10
CD304BBEFEE80BB9A0D23756B91AA55ADFF8F3104449B6401B0A31F3DBDA75E9
AC62446C061296402F109F898A74A1A57ED808D1C4592D63E3F8BE1DDE1B2C33
3F98F57EEF40E66F956E98933A8C0E3DBB1D014614BCB334503F9F4AD87247E4
1367FC2CEC2A5A05917A62DF68C3DE2065A772019C474B051429933455E7D550
5C3562657CC9ECB222300417282319232BADDF205240166D84A2C48EBA62A63C
347D512DAD1E9B2A4890487B10BB0D95FCA6A5DE809558C5ED205EA79BAF9A5B
45C48F503DE04BEBF20EE1847119E030D758DF73BF7D5EE5FBAF3CF3E7189AB5
9B814D50658E161EF01103DCF36D894D9FB2FFD42D850BD31A8B48230E4CACAE
D5922B324DC34A0F3D59D88DA65F8B8D44105D656143FFB85D78805A15CE7121
E8A3B1355D61F4766A09E9B9FE9DA5B97FF08618439DB02A996A34BE0B0F5BFA
99250F4B93580EF643F1A8A44D0D72C89A944E090BC251CA17D5A99EA6A4D1BC
9F5B712394804BD11886BFE7BC6EDB0E09F822ED7FB3D64D0EAF70FE2DD12D6C
B3F0B9E70D33C9A5AF8605160D259331FD5D40B753309D8BFF61DF17BFBDBE2F
B8BF4BA63A363DFE03A7B579D89DC565746F121E3C75E49061D525693F4393C4
9D2777CD48FC5EBEBD5338F3BB6E09768DA50544DEF36294575BE7C27F44B962
DE98F85A8F4BCD4E75C3392DD1149DFA17A5CB3552E1FD0271705B115F545C2F
0AAA41B7016ED73F718536F7D76A599F9CBE241C17015E4D0CEE037CCCFC12CF
E95569062E6247998BC233F92025AD56761A798A7DF19895FFAEA234ADC98B90
05ABAF9D00BF1331B1813EDEEB28BD8C62849B426B783D0394840A2977DBCC41
A6A77F829E3F6CB40BCBA184059390CF339374B2D8C545F3F85475C51BE22597
651714C1A4FD2F2CE01A0BE95CC782FFA77F2824E6051A7F871A464775BCAAE7
FA181E97431CDD0935FC9D12DBA2BEA04B1F85F911A9CA4B2A098441C9B14951
8778E8C5B3C3D2D3CBF708EDDB1B5DEA54A92603EF47888C851EEDEE0B0321EF
CC75626861C86A9C0BA0E70C944B3B21C0E80E8957540141BAD899AFC4C8A656
A7EC50ACE67912BFFF1BFD938020D6F8F873E7A0C607F80A4C94CE1BF055223B
29AA0AC2EA497E7C94C1D7BEE1AF116DFC3AAA0C951A08B0132327FC9AAE3322
228A26B0314FC1A3099AF1EAB3652298E6F6E87978C4908A3725EDF84776DCA0
196F32A8D285C54D6897937C921210FDE12F33586A69339B06C285601749955A
3AC5F7C7DED3090901719F072158DF40AA7C78D128AF38AD32464DAE890620BF
249A218DE01B8B920F09E9FA8EE7C36BAF6E148135A883BF18DFCA3C26C9EF69
418D4CB29E07F8876DE48CD7AF3F912E87DDE05F2A0B6243D827DDC8C34F9088
C8FF78421328FE21AC579148EF3CE4218086AA9AA1EE8202A97D64A37B85EDA1
BB757403AB6C2E112C3B3015960EDDBF273C7322A5F79202CA554F86C7AA44DC
A863DB5087C3A9A3ABF5B5BE473FC4FF62FD5545B245D60CB9A58148FCB35C1E
D48EC9F3198A72800F7DEABC85F78D30FF20AECBFB81470FDDCA606C1AF0A8F7
8408E415257D2B8D845D3F92F9E8E8E76815C389EB932443AB7C855B75672B3C
002D07CC70AD584FAD5B5B1A5DCE841235DCAE82C54143E345AC583FE784CD69
B918457FC63ACB5FA24E41CAF6215B2B0B1A7C67C3FEA42EB54F22E9A730AB8D
4ACBC6C229A606FAD9B8CD1DF6F9D3B75C76F5F25E604B760E98EAF5063E373A
084CD6829DC18D063618B05950B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDDA
1FE686BC0E3B26CC627FEBDAB4FE37D8692A080EAC62BD60C6E84B9FA28BBCB7
12C15A5BEC215FD698B2E78C51B7EF9795E9EC65F8E9447202C94B089B617694
AAEC6CE3913A5A406A455C4AE0BC827DEAB84051543C81D37E3D54588330C297
834EE3AF5505DB8C35E6A5204F51014203021E481DF4FC81BB0EDC41DFBF97AE
A21087764A217B1E957C7F35FB2F904B8BD5FC1850129D6424BF2615C9FC5FB8
0A6BA0D91AA1346D6AB0831BC8B38FD1EE596E986FA13FCB3886CCDC7DF02FD5
6AC4BA49C6320EFB4219575F515F5C4452AF3E1AB293B656D2FC202A19A1E10B
C018A0CAEC4B295E0465E1C79BF7EE26F89E1AAF6D33F39CED8DB7F279AD91CD
509F96B075E5E5BE5AE8F6C7D04EB99212C9D2E210F7A79A6812280D45A45DBC
FD9EAC40517852F5F7B16EFE87751022CF6D25E63E154A595DFFB93D8806D853
05F4994827A2C61782FAE29B27D1A4ECF703EB1D5EBE52BBBE4DF3DB4C5CA204
3B9B0E5B4E73A10F546C3577E87ADE939642E768741153B6287F0854DFEE8725
AE24611AA5B51D9D1C965E4CA28C1D0F7A44CB7097363E59E8F25D4A6CD2D72D
632F5558D7BC7F2E1AE8EAF27CB6D6FC78DFEA24A2DC03130717C828D4E74B10
1230BA9149C531D1590368D32CA7EAD87D6D12938C8C15B9788BCB87F0B73A50
2C34012F783BEE1DD3D04EB580EF137C86798C8FC175DC6FD9A0A2925FC0FCF5
B8F3874282F8616EF85F9DFBC286EEFFFF466D94363B2114294E66018A48C771
9D0B3BB351BC80AEF926ADAC181184B0F84DC2AA22343E84582374381E290F57
9CE4B5A21281C139B9D6889A7089A6B0664670CCF484A5120D35D9A10E9D94CF
BE1906625687220CEACD41D1157881B5BF6DD08508CABF344B161C7AE9AD4F5B
979C9631471AA75E5E31C34A63AF3F81BCAA85F3F57B1435A5D3F1B93134816B
1E636A2327F6240BFF595E24E59975B789F4AD8007467DA60830B345998FB9D4
C8AE21E904A110F10B3703F374B30DD96BA0A805CF2EBE245E3310A14DC02967
50D8A3D509A691AA0C162D17347CF0B561B4082B6B4614F9989A2542B4739A93
B0A84F6416483D2EFFCCE0E6BAC6BEF6774633F4CE6847AD8330E3783D3104AF
C09601A43E4A48AA0EA1E37E800F03BBBC8D05E098FF8FBB3CC17AFECF812A42
CD4ED50BC066C66EA53ED6E0ED8901F90F646799B9C50CD21979C66ADC45E978
8EDD3A24389AA0BFCC8DE278EE68F3CE739731BF1BA47AF05D473969B0C703AB
24CC6AA36A96D66D67F077FD6D0977E80BF68AB4FC359543D3E20D2F498B08A1
27CA4910DFD57EE5610C04FC2A6D8B628E3C1F1752E5E4D9771C3B3FC8026F58
243374FDF890B6203162D903EDE288073AC1F59FD4B457703BF4E49906625E8F
955A17CF0E7DADD614837A3BD3E6810FAD9BFD3532BF6D60DBFF2AFA682C65C4
1157C1D489F9BDE8EEA6733D6B06AFA92667F4F28C2D3457FD047AF5215FAAF0
7D6FA3435DBF760C8ABD87A53B06ADBF8ED5AD063746BB99BAB1D6B995D27FAD
07FE252DBED89160E83D0B6F9985DA3F7A4B4E9A41912BAC08D8CA4D8368A81D
9A1B238575A835813CDAED2985EE6E243AD90B4173BA1CA9BE9BBE63674DB7B2
375BE4897B280C863F0FCCE5F7906E1A8609F6772237BF80D6DDCA5C81F9E6B3
9FF779DEE7E790E581F0247B5F1EC8E6C735BC6E2F7D44311F4F3659F6F0DA98
8C6FF09BC8E71177E977CED7E41751FD619C3E86ECE3F72909DD17EDF82F2EA3
EF7AE28EE27E6FA1759A3F3A9FB6F4D5A5356A9DB2E75F2ADE30A5C1B8C2E7EE
E6D14EBFB08045D02A196F9653441D5D99563AD6A015995764F5EFDB79196072
DD0FF87700CE95F29C0DC5ED838BEC94B3B30FA770884EAEB1EB6FD2B32C293A
AAA39D0F2725E0DBA73BBD39F12398E9369D3BD39EDEF8B54FE04B0DB1FF3B8F
C68A2F65C6E8D854E10D410FD7F01053293EC744885F944CAE1C9BFBC9611BD1
8215AF416609E7A908F29B686D9359A85747679B6EA9FE9CE4BA7A70AC9B9D28
EB3F203BAEA96CA431031C30B2D92361B87E25FC8091EBA6E3B4A1DBBC779328
68DF816983D1F2F3A948D0FE28463E69702266FBCF7BDA2A0E72FC687A359CAB
21C09986924B7E441FE6B5C9AD96FDC7274EF26F6C1BAC6764484364FBCEEF19
CE9FA71C17217E3F7A0F5E4AC19FC9A1C47BF456B22255A1796E4F65CC163CA7
778F527061EBA1B374BAFEE2A6A99700A4D49ED958056306BF92AC9D49BA7BC7
A29D9F85177A48DF5F99495FD53572019C9592FE4A2A7F9512B8C1D80887CB48
5674B8321167B2C323925DC1106A2E779C4567F87030F0E4B1F2BB015D828401
BCD1AC9DD88DA85E2BEFCEF4CFD74F365921F39BA531EF11E4819CC5BE17B635
1E5B5F80D8D3CF52B21BAC05FB48DF4B8C33F95133B8AF23F2E529FAAF7AEB10
057054E79CDB1726E2784B31764BDD4E2D0B8E19B190E8457339171582BADC7B
085C81C66A171E09A3A9D919E4061510C6EAEC001E8C65080FD3438D403BB7A9
00B9A1FCC862D43E56A0D7A20B84FAA9A2DDD18898518B7B0C519F68E411E47A
5B53EF71192B4C76AD7DA249434E76CE808EBF8BC7619F72502228D4C204BE21
329F9ADB6B01093DCEF678987FD295D7309D4C2A4731F7D4AF6D31798142441D
8ADB25C00B550F1C93CB24AA29ED8D578EA822EF8171760BB6F16177B9700CFC
9052F207742D31C0B69D2DF9FB3CEA344959E64AC14AC2D75E5EEE9667223A05
6591EE5680B98E7255753C97F65D4327EA5197C1A7CF56EE90A86E9BB99068FA
3E3EFD0A85A931F0EE896E819C76CC13BDCCDACADF68FAC7AEA604C2D1249812
56AF9903551D5B8A64B3DB31B4D4445F57AC31CC43441F312F05F7E9EFDE2B04
57EB8D5467C349210D68B2655D7841443F41E61DB63DD51641589F8B9D582775
ED9ACBD9A9F11070BE452B7541ABA3802CA8F8A38320061D0D899EE1D159EC5B
7845762DFE0037BAB9089B6FA5B8477E9788C5245492BAF032951F69E7155BC1
89FE93469C707D8180D4F078B87930A6D5C0E609744BE61E425E2305BC90F8BA
BE84F9216B8E07B7117E1EB0EE7AA471A403B042E5240E924354D68A91356CFC
0CFE6A2BC17116FB9DECB6FB46371C045B266FF717B838B8583ABF3D16D31BF8
12A6D83A5A4810EE5FB2D28B8E355BE818E45E6D967E1BDD31C1116B6943E006
96C1F2DF6B0B0340A268B0DDB25BD184FD79C57C9EA994E8F37F0A2E41C74ED5
6599CA1B203671F2DFC03B251D882F758B40A5A2EB1BB8C26FE9004BC127FB73
67DD9F73CEA3DBDB198C7D06A54BFE71B757772EDCB61AAB312959731991AA88
00B6FB0EC0FFB31E6781211DDDB19100706F618B27E009330ABB76248AF38567
7FB2E15F1D65025D27A93D8C76370C87943275C36814C460BB788A0CFB71D5D0
2D5B14BC98B1900173514DED0F14C5CD9EB32C3C8B3E46432A10622EB5330B3C
C94DB0901AE1FC521A5B4E9FDECA7817AE2B293114B07A729355B1CA091FB4BE
88A4987CFD39CA40BE4EBE0174BA827E7DBA957D331362FBB8865B757E8A1327
63764EC06F343995A6476836C3843923095B8EE6DBF95901EAF4260A698AF73F
F896DD48C04BC099FB010E66C0A7217D9D608CEE6ADD6694A0F4EB0567366410
928BA4BD9F1C63B57E0AAE912C86CB6CD5BBDF8769059B69B6A167BC387D06AE
5D07A38877924D5DB46D5FE213013F1762AFC73420EC7AE14E3B5C8D8DE89E2D
6BB9F6413BA4DEB76CE1B7C8CFD866C961BF468F25A82FC89EDA693A284FD65A
E53BC897EC7BA6446656F2A9B855C57FE64B4D449EFC540F7CAD8DDA990A4E2C
AD516ABA608179C8BF28994732BCC57D928BC883B8E7606E9D8FD55414836234
C1D0AF2E1C25912F3ACFE7CCBD4325D1438E60940A1A7B10FF68354C043DFE6F
770C564FD472C8A00D516E86F14C816643C4FCB343A71615D798D62C459C28BB
B21D8EACC4301B50303BFB33BE53081796EF9322A1BEE0095949F22E99CBD1AC
1A0CB1E37B3263B4571A7802E808D3A5B5FE7EA04405836A47B82EE096537F4D
8F5C5A0906A770F26C9127654142475C4817BC7889E0681D6BE7403DF80CEE8A
B7B26593B8520D4D72630BF64295273AE2D65F112BC7DC97EB2AFE4576071EAC
7FFC1AA826E4A1D3745922DA0378EAE4467605FB8B7A513C40F1ED723AB20FC4
78DA072B19BB15FE32F4E72BF8781649E73416E15ECEDF95585AAE324403D3BC
A11817B6C4BB406EC816301E57DAF365607431D6A4B96321DB15337C68E1E35D
F302A45AA7684C137BCC24E864DD8D0017671CCC5CE8AB852E60776B293C94E7
B961247DBBFA5112C8CDE6C439C176DF97ABD94A1A7050087167371E59C52D8A
5B25E47849BA994FA4195E8D34EB46F04E8A789D137A39FDFF1C21E799571362
A0C1DC97742C37E03B452139F4E7D1359A09FC78B3AE0E3990ACB10E290B99CE
785E9C1265AFB98FBDDDEC71DA2B39F713542A8700ADDBA894851706F0E65AB5
15690A0CA8F4562F321D00C7174CCFD6346BE2B7C3F0E4ABFE5A258F578859E7
210F7B73064AF8527EA427869B36B3E7775C3383B4ADFEFA4B00347E080AFA70
B6D397280758D3B71D7CD0FAFE8DDC5D797C17AE8FFA71CBB7E9E4AE7DABA375
540A143B8D48777569AC3A45DFCE0E48BF38619CCCB760E34DABC95A356CCF29
ADE5DCB8416861C7D0ACB8901064D5B3E767F37BDC350E07D7BCEEF0235965AE
DB5171D2D19F6B002DAD556D0BB34A756B52C30DA030C0E2AF501986FB5F1818
43108DE14CAE33AC5CAD57993C618D464463B2656F7B08049AA54889468AAC8C
5BF82514184CC5B0AE0F34903637BAFDCF4016C1AC791BEBECDC105F0B071601
C96A7C7B6BD4D18246C6F4218CE65AEF2A1331D77E4ACBA83A1A0112050E08B2
9457609AF53824BBAE7B2BF827CB0E5647C141740881208B1521A92ACB3EA47C
BB0550CFADEFFC215E65238755882E29B65E5BED61F07FCDA34CFA49972074F1
58BF75E4E5D8F63848F7F26920761E8DCB91BD3A0CA70840F988AC601C4A5B92
1C98AA500DECD5A4D227373DFCD9B9ACF2E31684146C21743566B61245115282
83D0E6C1AFD4F5A3AC44997A44A79EB2853ABC6D45B900568CC12079C24C6494
BDBFCFF18C31EAAE989FCC6131DFF967CF6D88AD06B95CC402AAD3F1DA243ACD
136EACCD7A2A23749E294AA21071BD57342B1118F8EA1CFECA85E778208A2957
051CE7D4C727274E9E1152348EBD5AB7F2B040D67D4148C1D90B37EF42B0927E
4079D5A3A0E1A8D7ADC629F90654C8EC2C46B7EADDECC2D0C29115A10971DE47
B4698D8A798E9450BB758139CF40C5BF4F7FA32C64F743BBF32730E1A5150F2D
1C787B98579A38E68164C218894A824ECF9C435582D535A719663F51DC6E6AA1
CDE70E81E78B8B3BC396482E087870E97B81EF4E7C4BD4EC164D152ACBFAD87F
09E3658C6D3BE9949D328CDCD5BA3F2B5E7F4DD519080A6B1A9AD7652DF9C890
89D6E93E53DEDDEDBA0292658C5B13FE2D34BEB5599C6D061EBB8F6A5BF2EEE2
9043AE115D96E6A9E83B18217F51D110F92F88BB3B7DFAC88170E90290500335
4CD72AB08E6531CE9F01ACD31E9D56DD9060725ED55F16CDD6D3D03B7602A21F
F079B3D7FE83A3EB35F4E0516DF1004A70F669E27B8E3EFEB9BC1542750E82FE
C4C48DE088920FEF4F706812D2122C0428B618915F4B7F9C3810DF01720D73DD
845C9A508DF4B0ABCFB85B29A911BEAD6A18F07B7BB37C48B7CC487AEA52334A
B0E2E28506C838E5FE524B258CFC7F4A826C1ED130F192EBD5E3F9C0D2C7D887
E2BD3562E431253732B0C9884D15C8ACE8473D026CDC9CC58BEB2F95CF5CAC90
B1433F12A56F13DB5AC9D02C8664A6AC067769C89D42F6F3D6133F6010C5ACD2
52E58EB63F7029B96DF8CF331A8A934E5279AAF4159C6A68DC1BF154480A2848
BA82C26841F81A9A010C0C164B64849AADCD317D6A242279FB886C3FB9D9C6B8
612064088FCCDB9C3E86E00908D240FDBB61C708700C8871669D98B25D552A31
D4D91555EA7DB152ADAAFEF8465D0DB5741C7778DAB1DF227254F93950468CAD
687F0312915DFBAA307D9827F5145AC823813A04E21E39F38A1588417E2E24A3
28B754E37E74D627B172C3E5ECC577857F27E6671EF983CC57D2189878F70CAE
8C37E9712A79B559FF7A96C3B84B3065B1FCB3AEEFCE082AFAB3D2F58A6FD386
5D4FC8EE3E8C2021D63C525069999DB47C10B7F44D9FE2A7DFB8D3DD35A0A0C4
3015C6612634C7D3A0092147021F2999E6D31D21863F9F490E28948400BE0A2A
96B095284672366B6E886023D0B1A61623B6A8B71E667F4E8AB8DB642B2BF9E2
8F5172C423D49CED9A93818F2A38BE723F1C25D673FB6ED59C4DA0992A366859
7CB6B8B24C395037B901D51F213510BE0E749BBCAD6110DD09045B120E4231AA
03E20A236FC505DAD9F7E294CE8A82E36779070A471698A74391558677533B73
F9775A44FA8D678E5F7B35610B0CD4C7867C43078031478DECED4FF0CA649A3B
0E8979FA62E96647A2BB25738937FC2D2336BF45CC84FA190474A4065D7DF5F8
EB3A93F207CD89A6F77E5F1FCE4D37F797DD4B6978A0E1D42B847D5FCFBB9D83
D36F03A11A4E9ED1D3575ADF6CB19DFD54B3F7C397783EF873132FB602DBC625
995C087CF42BDCE2F4903D3A579C04EFA37EA165B552020403F8DA114E2B167E
31EB22D4D4B9E1C5B6610DC9177BC647BE8E518E1B092CC957C83E5AB964C2CF
FAC6CF9E1733479396E50931337944E15F33764276868414C15873E208C30150
40FD939A7E82796893F0B41C7BB13F743A9A1DE3328CBCB857D24CF06ACE4800
8509608D98DA98AF908C3860F739FA47FA55A97FB985EC05CD06E9C1723C118B
3B0B2F9783877CEFDD916A17BEA785D27B01402ACE3367981FA50D581177064F
8F9D8B13707DD039A0CC5F403CB09F7F04C6BBC5AACF72A400D81698A53DFC98
B892958BBFED51D6AE8F21804B9C06D584D012D4B7BC77D9B6BFE0406A8DF836
B4F103D15EBAF158D0CE1C48161E1F4552B56091E968E331CE4E88AAA237C369
C25B799B890DC60A69C4F65AF9C03DABF80A3296480A70D3FB84CF42ABB4C462
7BCB4950C09E8E89E7C834D1154833B823C180B2BB45789817396DF2E0DE992A
ED8B62A73C0FE8AA5929DB49AB4668EF9F3B8938505373017EBEF84859D0BEA5
49B4AB04859263244FDC8E364862869D20D5544E74CD9C581472EA1B4F785F69
53D58451326386D6CE2C4A8BF538311E82017740822CEDC945CC0E1BF8505872
2F8F4618BDFF9878E465280A7694CD72BAB28AEE664B0394C3875BEFD608FAB6
293B817CF3022CF82D1D0512866382CA95519ADFCE8A5315D9F8B6F28F843678
BB79F5C3A194F29AC6AB5C77FDDE4EB1E51D90AC1FED69D5737476A1B3ED04FE
6FD7EF20A95E7DFFAF0470C5254290CC2A6CD7801022D3B8FEA60D5D46F43F17
EA50F20B606987B375A395E3604F6CBB00425D446CC0A4D1D23EC4CF7AED3653
2ADD77FD3D4C65AF878C4B796A0D9E3FE62C380B682D25F70C500BA57521E1C1
869D06BFC12131A772B29A66F2FD9CE1730790D8D81B8DAF22BA6AA951C35E58
6F1072A81D079EA72DEF26C5AFC1CB87EC7100239CCECB8CF98C2BAB4B0F00F3
182E21DFB09B5D5A8669BDC0626FB8E256D2D9483FA794B9D8E7950244C98387
5BFDC547C05DAE71E6E29B4B2C0FB8360FE558BDB1708CD793DC31D5F15BBEBF
CD5CD8EC35988E4C13081395E6B5342432EB7B2F9504C05AF44F304F6ECFDA3D
E05457BF811C5566505B4788075F8ECD0A6CC132D9305D9C67FFCA1F508FC731
964A20E4366DB6B5987209A113CB9286D94DDA31E17E9C5FBEDADB24378D77A3
1176A71512B904CD176DBE56DB1E440DEC3B06AA5F3504C83C79EB49B113E481
F96C53E8AE8A761A2C84ADD7A403A451BEE3B1270C1BEB1C40E11936DB49DE31
3ABE6EC00448CDA633D25FC82E4C235BE1907CAB35C99101229DD094D5960ABB
F20710112491478EDAFB7A1B8C6E33AEBB6A24C164994B02DE224AE09E513C54
52EB4DE9C4EC16C0E45F11D5B7EF97D83C5CCA3195849DC47F809992D82A2EA4
8776693CA81E93E0A1002C49DD074108E8EF739E9EEBE56DF1999464D185461D
546B921F70EF75615FE19BA5E69EB63F966994ADD6FDB63211547B3FB4F7CDE5
7AA7490CF4A2C56026157C67002226EE80914273889A5F5D643C76808F6BEB51
C2AE7A0469123DF8E789A17B4665C332096ED80F2880CFF39FE1C507738635A0
E32E236F076842A5B93F6DE15DA3BDC154C760C0994CADAE85FCEB1DB6F09B43
ABBCC077033824E27D97AA8FA9310E75
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B00F6C8614D23084A0A70E5D9D0DCD118ABC5B
96912E91FA3F6A8B9A7B83BBB1BD9C2044B5335493C1B74A8C85971E454FE379
C971CC567A316AA11D6745C6489340A939E49D3E402213EFD8AE74ED4DECD30B
3395BAD7D65DCAB84EF2B2BD6E178687EC870720A395B69F7F7EDCF23C703F76
42509CF6CFDF972BBF78431564286903743B208817297B75D9F46F272A3F78C8
9D302D05377EEF4C4109087264467E3E76615D94ECA5E9F4D1C6F05BF19C11DD
D76D595AB0A57E455857E8B1EB46CE0DE84F08D145CDBF6154E83A1CC3EA7E36
D05BDE406BC36D8B66DC0E03E487
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D4C98C6764B00D6917766CABAAEE890025CF7C0B1A6BD5BF
1F8E62D380C7849CDF06492BEC78C972A98026CDDF2A30625A96D549BC5441D7
447FA16D4EE9D8C8E841269B1D361F0D9EA02154A8F563979FA89334075CB13E
CAFA59D893763EBCE2B810B880C9135064B104573E9606ABA81A5F36CC8C1A96
A16F057568420A735A17630589E37624FBE48F378107E6EA880A578654ACA1F7
80307168F5F61A1BE8D00DA9D4DC314723B7A2960FE961F23AAB485260F1FAB5
D7EB7B5BC72B8D783E03E76AF474F73A6ADA241621C368BA9CCFE1E68464873A
5914E66617D23AF3A4A972B07B5E6DA345F29CD2561EEF398658783FAA758D30
BB16F55AABDC8377A9F37112DCFE34DC3BC7889625773C7E53224FFFCEE27D32
9A62F6D03DEB59AEFE38551259A8CB31CF7C554C013617581ED034C304360FCB
2040E7C672920455151F81E76A0A95A558E056DFF187989EA1554A4608FE9446
5849B7FA0B5CE164777E439F98CB68C43D7561C8C3974A27AEBB8E50DD091B91
7FFB06EF9CA11F2B83B1A01E3FBAA321D869F1CCD34F56387A78B42685D9AE18
4801CC10F5A1E58E8097DE61046499135FAF474A25E2CA705906A6E15CB57F34
1B05C9D8A5E002854FD16417A7461A508B17DACB587D2C489DDF4EA5F644DBD7
ED1CD223F5F35BA3609BEF46966F9D76990019363CF8E32F286D48D6166E317E
F1297C3BA5E075FCB5F05A12EA2E30F1BE91DCBE42C0D814EAFBE88F1F99445B
49849681DDEC62792828FFF60407BC2A0D2B07C9EED014D89AB4CB82245B574C
006312B0F8FC10B66615CC18BFA5486EDE7284B2871960D316A48AC87E1F9887
01ADD7AA3ED43BF28647D31AAAC8455E617FEB0602B482C0B2BACAFBCC1DDEA0
E7B467FC1D8606ED27EBA786A6267DD8A194A076D5414BFD725E486BBE696AA6
732DBA9D7180CFEA2E4A4C69E45EA1BFEDFBEE2A8C2BF11950654B8BCD2CEE8F
016B5F91CD7BD3C3FDDF87640C0EF718D0F9456E8A6C60FDEF6AE1F8495374FC
EE1BA5EF594812C2DC4989142C4E619B7CE1F7A9D8E6C397E843568DE2D3773F
1011A0DE01524197270E30BAE6F3C9CD656B21DB4796149E6CD9DAA0CA26D7EF
CFEAAC163E337CE82307FF5DE31660FEDB2AE59C1D4E1175EF8D7A10A775188A
72902E320D50767E09F1278BE056BD58AD9AD4EC1F8E6B3249A9C6C27FEDE92D
2AD1C6AFC0752C458860508D87D25D0B9C28CF30998559750979B19A4B62B720
22AEDED9D382C39395666DB76713A79530C8136AE87DB1B3D9CA2207493839F3
E07B353232C40180C4CED3A7FD0CC1D283AB1F0F060B8D6B64408887F615FAB9
EA50E0F2ECE0634A27C43C08DAAB74A12CFFE749970AFDB1D4DE3734728EDE27
D14989F669418D13DE286A49D8130FD9D8D886BAB6ED0F599425336EE08FBFAB
89B236F46D82754F9DDC4A2DCE4E19F69D17044114CD3570D74E2FF553452E6E
F8AE1F93765D6FB5A67A4B449E67EA3A80F21E0E8800FF1C2762EA5E07953BE7
860B8A7F0A82FF0E2DE8322DDB90FC76457AA8D32148F44CD5A5B676946F75BF
A20792906C047FD39065E0873E6959FD85F905D764E04EE5FF731205C532B74E
69D245FD9F07D76946A5F8F62D306F35BAD19087C4E4B0E7759068C23BC1A6B1
A6EE9D2C3C52B7CE0DCC9F3DFD62A83E26AC82AC04BE0D2EFDA868C149EC1EB7
631F1E2E7B4CAB582212E15C2D654F4233D90846D961BD487BA083144D5CD7BD
EEAF39009C9929BF96E423AF2C38119D31FCCA8C32828938B364ED6A170B7683
9FA54672EF1C51FDDBFCF0D49666BA2026714FF6ADA7DB1A742C5A929A73E402
E0E6963E5DD271B704621F1E1DE328C69803AF416FE004123C2746578D3D9660
718963D2BA3FB65439BE3270F5C1238349532D95DA7E932330A2F2D237FC51C6
DFD371960096345E7D020DAE503830C360F1A559C01580A8F0D97C42609BB5C6
4856232D0BF8B91612DD9174425D7F2A3010565DD690BE27EBF822D259C967FE
2FDCE11DA91B1E3AE0582086500C81DE3893324801FAEE0A59A59D691BA3D9FE
DE8E6C5D25271573CF5142B6D7E769F98E3C5A346362A6420675F14C4FC0D59C
19163E5D3342F58043E892BEAA103475EA9DA7E3A2CA5DFBB0476DBFE41EFC33
64FDB70D25053CADA1637224839D315801068EA1DB11704AFEC76D4D9F6A7B0F
7014BC2FDE1AE34DD8EBD294917437F62D307B8596516E4B68E4C7F0FF28E437
9ED86CF203EC068C99DF9526672081AE5805FA162E869FD2E1EBA35E7359649E
5CD868C8F6ABD48EFC0810BB10D119A3BCF07CBA109D9AEC08CDABEE17DDC06B
A9B94F9A3804974F314005723C647EA273E8A7EC585243685975FFDB593D6026
68F0471391284B2A7764050AEDB086D5B4C770BEF2BF2D09FD4EBFE6B5F85C91
C3B79CB1D9086B2B5DEB217AA83051D08B96F66288FCC0631D2DA3F37D33EC3A
468D598C9BEB9FBE45D324615D82F42FB1C12D5949D491DF7578CB5124E84199
31EBD1BC0744B18DFA94FC2496C25597B4B735CFB94E8C41F3318CC0C27D5251
EA488F7FE10CDBA8430E199ED73B69ED71F2FA5A9D72339FB0026DDF4CE4733D
F52A6911F54E03866610C5E9E947022219FB50BAF7177A60B46E67115BDED44B
5D6D8818ABC94FA0592E602779555DD428C9F3F13B01F1A73BB31222FBF9E5DF
4796E21E564B10D478DDBAF6B70FB3860C515C963599B60768220ADEC9AA59FB
5ACD3CE676A6488DF87619D44BB4A81905C4907B40F3DC74417118406B12C8E8
1A6F27E54FC50FC0A1D45C2B3654CBD100750F8DB5F74BCE782109C97130C7BE
E473E08ACE6A5A65822C5C5A89A0A7D76D5FB00519A4545E3EFD4AE559050A72
BD737ACFB883008CC426E579244022611ACFB1C6DF69A1CEA378E83489F806C4
096D777C5D513C452CC084706F4F0FF197B3805FA306FFF6A07D9DC2B7252DBB
05A5E23EB3806C7359C97BDC7A97AEAF643914DCFC7139406E9A98BEDD2B8A8B
9A1D19073CD5B8D07AF32AF35382F7B94603DB3EE4FE664C296B7961981E6E0F
BCA70C9395AABAB8C5BA750DB6CE53E77DF14DD43CF935DDB829964612879D5D
16A663D9A988C0A44D523F9DE328F3740E889516E7234299D93D87F832357650
72A3D8B45E4C134BA365685A39715590784F36E4B70CF918CDF47EF121D588E6
2D879636D432A549BDA22544BA75AE3B94706455C2C0452E9960772C1845C2EF
35327D6E049AAB05581AAAA02AF6368E0CC5A92E4B68CED7DFDB3596EDD0522A
9CB8ECAED4B0E95401B5BE938C7F4E3CC2E3D25690450EC7A2157477A0D09D45
F792CC9593A4B30E0704964F634BA5600D36084D2D4BC32CE67DE84E93244901
A544DB42DFD9CB49E06D59AC3218A94B9A2A04FC5A7AFBC7F8F9C24AB29A3034
B48111656DF1A1FB96FE7AA60DB81235C8781832F8E40A7EF3E6772027F5D80B
033FCCF56970FD3239C744603DB7404A2BA3D54CCDAF1AB445C500145FCF7D27
07F9EFD9F05421594AC565C2626AD071F48B9E23DE6AC2048880E6429B2DF0F1
938F10CC615C5860240F5AB9982627117AAAAB619EF352A0C35D66954B824589
F338011D41F14F06C622F747EC999A5F89025FF0589F675BEAB29A0007C76A1A
FFF48F6B707E39E9A233FEE16D4EE3BE252178749745758B563A53A26E95576C
9901425779FE7C82880687BB40289610F177AF7A1DF5749B392E5159F8D02800
65CA4FD6D28F2411B534A10DC536DC9C9B1B3E5D29B012BF9D65625B26CAF259
B2B6F4B57CD5DCB3261B26615CF520002D18D914141F46B49A637D7BBA40EBD7
AD5E5F1A6F4926DD901F238425E15DFB050760BFC5A9FE2900C81C55C43E2BCE
415D3BE06380E6B6833A74ADEE2645628C1682B2FAD31C60B5FB3117F692FFFB
1003E1E6E9E477B96428E6CDD76A87258C825A5CAF45BE21EBEAFCE67EDC5E74
5BC2E7009E018B93FA9735E228F1DEF47507F95F1F7E06CD5EF9D51B942527FC
3C7896A62C66F02FA1023A1439F8748BA9E4009D232F0EA8A1072A6F3E025D00
7685B9247CE568F21135CC701B886A18601E037BA4A2EBA0A1E1ED59FA779398
E247ECCF3766D1E0ACF358076B6757A348361CD4D20D015E32A4F79D2537DFC7
F615CF0A1B12304EE3045D4EF5AB7960FB243D449605F8010839AC9E4CBFF755
5FFDEEDBA4DB9B1A1223F404815131BD24171299154E93311993F4C7B971A0AC
B9C7003090B45F18A7AFE33A230D451A6617D909FEF32E2C51FAAB861C681B8A
5C35F3F8D45083ED0EC6AF1E05521DEFD54A0E99F03CF553C9902F404B82269D
176A22403033109F52AF47368AFF480DF1D86FC01779B7C8D4E8EEFA4AA67521
1546DE0F1A1DE734C773FF80FD6FAD879B8BAEAFDD46594BF4E27099DDEAA657
51ED019A21CF1FDCE21FB66834781DF8A989FA960AF71417EF12820CE7788D71
7A67D8CA18024B72A24F07A82B1471C283C39FEB05DBF8EA463AE4E0D26EA108
E8056CB31C18CEF9592F8BE7EE320D4D45A402AA972A7CB57FB1B7D5548B58B5
7E814C0382DBE24856A902AB63D1C547D8680BF37BBF6B1830D2679E12CD8A7D
7E87A79C1FDA2F27D007F68E2B11985E1D4C80BD27DEE1CE6C773CE47B83FC72
8C750A674D2B0FD69FC8A5620A83C0FB05578BEFF5EF48762ADF2263EF8C8EC3
7AAE08ACDDC78814FB2D45C6B11C6DC7293F682535DF0D3778A9CD1F5E0125C0
9378828F3AAAA64892BB8ADA34BFD595F4B23AFC3403D512FD654124C9A5BBFE
E4786CF9DDF81FB6AD481331591ED2C202772389ACABB181F4A73D36DEC2489C
25898255E71FECA5232B330EA99DB79561573A2AD1D77B75DC7D0510A6E7D1EC
171245F40D7AB37E3CB514A78A0C23569EF32DD70DBDCEAE546F1EFD3F7BBE3A
FE5AF9B41765F43AF746C2629DBB23C444E6B6365012FB284F2BCD65D69CE88F
32A457B437924737835B73891EBDB9886FA51BD76F811E95AFDB963D17047235
5DED8FA3432EFD096824A07C5D2543FAEA008CA5E4F815D21ECD7E93CF170EBF
61D194C8BD3EF63A91755C47502710D4F8A92A2BF4066F7910EC437CFA6443D5
D379513629E5F3804A14488DF17C3F32864EA9991C3B8EA62EDA4204BC825049
2C1E65B8F66E43698E4EAEDED41BB8D4290F85A8CD521DE44641FC3F732E0DFF
5EF316B131E187FE0373D0F7BDD005EB43F27B42D9D7EA6BB01FC6E8EB0263D0
FF027AE2C689C020E949F81E0FC8A4F176A732BCCC3CC4F6300E9DB21A9E7514
166FA3232BDFBB4E198F6682230A272855126CC8CAE8E1D0FFDE0FDFAA2F124B
A1C76A3046DFF3EE254C9714068784A643CF52C84769C085C68202A07ED77830
BA2067D03A0D88DB25670D1AF557FB6E87D8158F1D953D8450902F8473679F95
6E412D720F31721E671B95BC78C2532FEB86BEFC62C03755034D8BE4D2D05B17
F37968F66C7B757816655E3CEBA82DD98FAABBC2158AE68537E6B4501852249D
3ADAD4C2009E635B54448755A44CF7829C1861BAC13A8F0073FE12546AEAC545
2D41983CEC21FDE8E6005EDC130CE8028224D60923070D1BE64C667C7CED3C47
C8B149D1F3DD5FD7C5B4840DB15C95B7182CAA2BC5694F17797C405FA1035C81
A99357D681924559F41FBAB1CC65B9AD88427DA6C7F64C6085E38C489EE38BB6
D38F336B09923CD26DF46341FDD761F7C6910D096DFEDBD833FFD50B450FD7DE
8DB02E00B98B69994D8A97F03E6DDECB79B3E2CDDA9053FBD22B85CC59097B4A
35E6A54E508F6A0812B824C79B5FBF3DFD41928C66654471729CF48D0C801F87
4B7BB20B539BA1E7F53FA6DA525531E489D1351FD8A82F02BBE82C89CAFA539C
6BF59B65CF19425E7753A49736AB0367DF51956AE30433C576C3545D9B4919F9
9CBA7E0F702A35EA992EA08BC3B3765D573587AB052F85986D8ECC9C2D7D0581
3D73630AFDAEBEAF72B53C3D1A1F28512B16658CBFB2A591F564AA0C4B52476C
A9CDE588E4A909903C6926F9E2E18CDCD4084EFCC7EE774AE25030756BA2C5EB
E769D8873A3CEE5DFFBCE12EF4A77F3AF203976CA8DD346912292894859E6BE9
183187D4B8CF3F628CAF7D3262589CC23A4DAAB30F7D077DEE8652760788EA6D
0162982C8544A40F6952D00C608A1C913CFEB52826AED98F2C9A2A9313B6843A
3904CE09A418CF5B899C31B2732D02BDE0E219AA2DAA60868393FC7BF05DF389
CEB0A938935D81281382A9BC5E2E2DF677BE956D49C3F2DA4318849DB4A179CD
00246FF8DE68BE32591DAC5BA231AF509D36EB88E0DC7696C26B18FA1C9F18E3
57BD2113D571310F3A1648897F25B54FE19F690C3C108D4534AC158EE1C3D1D5
8471FD353BD3C98F05486092AAF38C9D60531622EEF58E1D3601B275792F6256
0DD11136278F94CF74EE191588897ABE38716E510616C785AD272FACA4F803B0
818E4B568BB958C900975CB7B9DE244384872121E5AAB182455C8C5772BC5F09
0DA9A09A6FA686E2CDA29B71B62C61449CEFDF2FBB8E06EA9A43CB3537CE775C
82320622CEEBF7964714A8CD3E9A4B247D64FED74FF5A1D64AE4FBDB4A3FD5CC
6391D4C810EA8486A51F268ADFAFEAF1872637607AF7AA181264E76AE3834CFB
55FF9FAD7A9C68C0C12AF249110BDC13E4A6E4CB04E580511F0AFE6A5DD7C6FB
3247BA68A701515A080F9199EC28EBE1A43C382A08318726348CE49CD7BEDF6D
598B478CBB42FEA8C44547FED8B274EAE0EF731EBD547ADE9AFA351066DD31D4
BD0D77654B8A85886AE9813E8545546897BBDA8EC67FFB51D7B9D8432D402792
A721C733B5E041EFA3890B15CCC2C82F068ED4633F5A56C9D7C43FA850552A9D
A45BD9F9509C91BCA3FD99DD51F48F81BE1838999319B9B5FDF51F2A1DE5E7A8
B10E7E82AD63CEAE02062C962F5DD3BCD415E38B6A2CF214C61D19DA6EC8167C
11D47D9CADCC299E1978BA02B78B487089F9A54E25439DD1C7252DF94EBF2297
C0036D9220442D0F460CC9E97BC0AEA739A7BB2591553F3E13C3C3221F8B2BD7
AC1E4012A676F53B18F91A7E8E47EE6FC6A79FB8BB9EDBFBB491E58A39098AC9
6EFAB69DF50D8F4ACF2F2AA8D267D0794C5641BCB4CECFE8413D328BB35807A6
927AD212C38C87FD8BCC391AAA1243518EA064F2F344F3C06199F62A521DBEFB
9C776D36DE24ED307EF2C47C2E8097D1BB77162BBDA7470FD939C1B465FF1A5A
0E661B952043B1354A473D1AD14537C6E4508C4A8348D90D4EC8E29A7D9A2108
AA530B7221A84C0A702F08BC12EF0D42B4F06ADFBAE1523114426389F09AB331
F36CB737D7C35921CD72E513CFEC37828A4EF2A0BD6370299853C23CBE76B891
4022C234C73B8246F29B5073C1343EFAC3CCC35C17DAE07DE8B8AE7E05896271
BA1703F28D8759081F6E960466A56CA72E10E5208B92778DDDECD77F66A6245D
16E5CBDD297202E2BDB9EC3484162E40EB91C601A40948080E0F9322F5E64ABD
8906D804001417E95F043B4EBE90EB1456D90FE029953E35AAFE4EADD6673B0B
EFE4109EE0DFE24C20CF6078E02DF8038E361E1DA6BA8A070BBAA86B2A31E289
1A866F290BC329974ED7B66EB99FE2092DA8E7935058EEBF32F88D680243832F
77F0B38C96786656CF91C310F89BA56DE6F78DD1AC8D63A884EBBEC89E092AE9
81B91D1B72EAC3371FDBAAD0F607D10BAEC4807B71DBCC1AE32FB68237102B7F
585B1B9711B67260210E94FEE9118EC4B994E4BC480FCD122FFB0ADA031BD6C6
2DCB891E1DB6FA65465B1FD4126757D2CD0D0C3950D1E7C2EA0559DDE5EF252B
4FE08034913D6519FD268D5B098183FCFFCFD6A25CC70DD5CB2E1EE2A3F7FE26
7F901280462D45C7F5F2CAA0892FB710619DA48446453ACA62B45CA722D1E137
63D255D9E62A04BBBF99A714D9145D3A6914DFFBE3DFDAF1A187F108420D1238
2DFC6DB909B90B9A07196AA8C253ABCC1A29226D4A9AA2A31F6EE63196D709B2
B112D527CFC4740750B428423DFD640E87B14E1954F8F6B6728DD4A83C48CD79
9479C0BA1E87E8B57850F124DB4FDA7431A93F5F926E8FE4D07B973D335C8670
9DF282DF9AD60301DCDE22B9FE93EF577D7A2837A80CB93940A213881C84455B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D78874558397C923C330CCAC7180CE00525B342BB015
E59A1DB2C85CBBE849DC5E9A1E035F4F81843522148C0B0286B281E1CAB803DB
56AA72F379E098B55246D2DECC5A3F186E3B8B32621FB10E7AAB28BE4D673CF3
76230ECB7C6BFB808A1BA421A17DA6ED7EEC042B3522294A7AF140F4D6B48895
8C858454A427A661603136FB4838F3D6DA238DCE958DF8C6E008DC8615647607
C3196F3C4A5FA658EA3E0FA46FF50A880933B2FE621B3E32870B5DE9A1D48E2B
F9452CF6D043D2AF01D609C4AEAE00D64586CFABF000AA6FCC6773015975DF8B
D150E30874ABF6CC106B4510079DD1C09247A6AD308598E7F421AEF13B2B2F2A
02AB93D42D66591C190156585A2264856BE3DAF0044B7BB8387612E6C66A6619
10364C80E2968A1508A3B1183A76C850A03AE894C4B1B35490BAD29BA8E74140
7F76410D5FDAD273F5F78157632276BC39BD69D7047E9DAD1E8BE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAD7D2ECC69471E
2E0BFFD4778A2E21C19645790DD11C5A93C1C33BE13B6A35DA4487D9EE9B38A4
1B2049FC64E228D7319ABCDFA4A29B08A08DD8430B4EC67FA6ECA214DAD0BE07
680225415ACA2FC86CFD32CB6210B93F60CB7A2A2959DACA9F8C687C1205E017
F6EA82A4848CCAE33228E1E6E2034652553A03E1341025B4F50E8120F8B23987
4FFE2072A731070FFB5095F90DE1D3230BB98D2190912BBD038F21047D0019EC
277F35014DC7DCEB4DDDFFB4612C0862322F6714804141805DCDB4DF615E2CB6
4980C415B399C243978F660F023AADD86B025FE51B8D9481AA5DD8D1A6BA4453
2245117DF5BF0C4F6527B2A51C2974914930226DED7E77A8B4E0B5182C1F9F01
C677EE3F7513729865761E9A49C5275E66B11394A9468B30AB81F677461C61D8
B3624F4EEBC57CE06AA9A9C2805F46DD31F1B1DEBF5A230721E51750128367A0
AA72945C949104035D601CAC8F4EB2F16F8765614227C71C390C32ED5A690A77
6E288BEED7010ADB1076B23257F94841FBF7CEFC601FEA3FC202C8478B0E1C44
B0D90C20DADD09A5E54B4E5F84D18147590E054B70E3F30CBA547A0EEC06C030
DC43B2245F9D24D31A31F06EBC6577C4C2E9AAB40061A6764E557CEC87DB572A
42B4F49F6357021F6B56DAEA3577DBB01E39FDA69C81621E58EB3432279EF8F6
94AFDE8C03B25BFC2B5CDD2591517589BAAD70364C33665F90E24D35581DA77D
776D1F943551940DE4888AAD7232E4346A5BFE8DA3DA8F90AE4A346B1573B9F0
2724722B9B749AFD87E637298E2FE8B89FDEF364C224B3C87F241CABC4F99545
5BDFC8B2F0D6755D8F7F5A6F1A68BB974C12EE5E31D9C2C1A139680095425AD8
B4DCE63A5845CC77126DF2D93AC2027A88763A7F0AF2DD0CCE40F2CEFD4D785A
4320B491DCE3489FA322F968E512AC8A5FB7C4DADB77BC4F4954ABAC17E8B0DA
FECBFA23611B7B354AE32D9B908A72B8B06E2C699D6AB75FFE0D0263598C96F6
B3132A7760C13A25D4F58FC0C20BED7AE3AFC8DC8E8FA28C5262CBEAE15984ED
81596EB2039CC1A9D525BA7A7A768871675D0C203DDC23891E5340E340AB49D6
CACF97B0D86FF2BC399BEAA86FF6D34DCF21BCB4620BA6E71CF9EA41C7E5BB38
F4B350CE6F8424DD8BB8FE0AF47722E48B590F4D9D412F7DCF5ECC8387767125
358DB0794BE8A1719A90CEC4BA5A6E2F7097EBCA2387F92A4B74262D7729B2DD
45824839717614242357FFF7AF3CDADCE2FE6D5B7E562DBDCF13F0603C215A29
9C3D4F7F4116B07F1625707CFFDEDD5CD672101B470A6263805542515AA19B5E
0E9FA83A47EBD0680B74207F0434C9599D055D786DC25523AF3CDCDBB0D96F60
F6ED768BD87C1806BB162028CF9D79ED3D53D4B5C232674A9840F94B9CC17028
4FA71225B2BDB257733811FE1F00D6221A3F0677E7155A03A55E5E24795E241E
6A95AA4017DC05940F32250DC3AC668888D2559750B2FC25423470B9D3B0C902
A7D952D8E491A4DC9EB1F79F2E67992DD013E75358392AFDB351BE7DC517F403
076BC8897E6A8D5B3683C9BF396E8184FAA7132BE44229304ADC8A686D6732B0
207BF2EA019F2C7C5F905227DA1EB25BCAC303AC954222B4F6D08F50AA5451B1
52FD3D69260E987A7011ACD09B7C7CBAEA88826B998EF4993A3F7AAC4D901E5D
90094EB79BF159D52808E0C400B9BF95431BB5AF78111F05A1CBEE181912E3FA
83E5FDDFE871D7CA53FA5D8F6D4D5096214B9EF03C8EB870C016A4C4FE5364F7
E40EF37EAE40DC484BC565C093AE790DCE337B0324149A9C6A48C7DD6A92E7E9
BAD4EE914F7F18719401A2C6C4A22D0B3D5B1AC263170C07ED7117702FB18E65
A190D7F0771A82F52EC47FE77253FC7A103C4CEDE64943D727A13564FED532B7
95F543B7442BFE8902969E8F525CB1A9F84A51367B6B0B2C69505E545CE97127
FC81486D0683024E916430F6697898F739D55E1AB926E5F1230538D96AB2484E
A11D7BAE469B4494F7BB4331B6B2E9F6E868823771EA8E28006A4C9BCD0BB25E
144CB990A1F91618595AB6D539A3AB5D13CB0500106B9ED5D16E0B45FDCB6775
C94F942C90D9FC0115D85BD7B8DDE271A0D13042DBFABF4124E048782F415DA1
00ED3759D056E3F40CBD30907F06CE2FB5827F840576BC0A55717C052F06678F
15F8E90B351B015320794A89E84C34F32B465E2017E8E4217D2B46589A60E0DC
CF6D71323A978165FE475C03130797203C142323DF0F8666D6A0B14F8C3365B6
4FE43B3A1E4F7D4A024217CDB9933A718F0E6D91F1BF332D5EB49BE21977146C
8872ECAD4D82A933A8AD159A270497C44D0C5D34FC406C877AEA43141AF56418
D7159784008721738B5C8C1DF1CFD26F72EFA688B4D482463AF0C7487FD386C8
1AA230D10F40F273C3FF139C49E305763F08DA29E18492BF19033369195430B7
008EA14C41EBA75D41C7B997E60ADA11E53095EB86B8BF729B4B7467486C673E
FC9F867CFA5CFA86B7E717F3ED85E49FBF0428125639D0F9FE44C80CAA8DF74D
54DDF7FBD46D78D457CD1912F93210F985EEBABF3DD73B968D7E025311BEA11F
D3D09B4505AB49C9265E8ADFDB8B4CA7CD4E69E70AB0073D6C92F7BBB1B4605A
00D65EEBA914A515BE7F74FF21BD3F4C23C506E32204ECBD388285D682648368
89EB987631BDC7A04E9387E3E188F2F5C21CDB95994F56D69D659A21527F91F5
F20D556E956F19270A4455D81D6734B038CAB1FBD0396565316179A6F61EF486
5326D578EA9315FCCA90D78E299DDD66A941CE305961546D0AF86A2E4551DDF8
447E2850774583E5C73690942363BB8BD4D92DACE0A7B4068772E5278DC12151
83569207CD569E5C6147F75B3A9B3DE7E230CC48F8B901580D5AE4E6BF0D1AAB
8077E21BE3E767CA6BFC0A34AE5F517A7FE8C30572AD06D6EF7B0ED471DB9418
11E65A7210A1728D0742EC26BF11F977F0A82869341D6788F2FFB789F812D056
5F4BC740AEF26EFE447E2C686551C6B3D02964A9D8352191AFBB572C2D61BFCA
9981C1602259E6390F359CF18F039F3026354F553B14CB4A17D968CF0EE33427
2D0C07FAB282082DED26D9EFE8E76815C389EB932443AB7C855B75672B3C0022
635959DF14405AD0EF2B7E4FB2E203561018F0CE7CB1F9224B1464E2EAA7C8A7
23BC408CE4A039F7672A114471A861F64C9FB4E235084327EC024E40A9EEFC59
B085054144022BE6620E3BE3BCFF07C029D465A57DA7EC16B98745EF82404447
C87ED40706A2A3339854CAE8FDAD510D721956F7200EAE8F93ED95AE429D7CC8
C42A1206FAE8F5F752A36C01D95CB3DB66B0161829431D8501375F86F04D17BE
7FF0A470E148E378FA4FF8BE90E9E9BAFE9E1DABD0FD2A9D6897511B2022AE96
1289B625E7414F0DCBE615256B9D16200D36615072FE170D993F727ACDCC011C
DA31C45B7C0F0BF79744EA65E3F189E28727C3C1B0E9FD60A790C43029D0B451
36298E4A8412466C68C4F61D4DD5C126E5BDD170408D11B9AB980A7EB499C449
F3E12336AA510607C8D2624E694563D2841A4307C0265F9616A994F5C939189F
47A26AC917414CB461C9637A8786113506ABF455AAF8797624292BC4B949EC81
BCF89071C9EB5BEBDECCA6529F5AC43E3A2A237E763DF275C1279A13E6F38455
21A1174248F458F0B46C30A3AA503426BF1013B7434F5E37195F90D1083DBB97
DFC14A3CCC7FB0F63F596F1D5953303B05CB44DC92FDD700F57CF8C3ABB4FA93
F6729409A19BD399E387F53313B6F7C03EFA62929AB082D3999F1F051A4F3EE3
816DFE0042A6FE78787F58BADC555585CCADD4BB22BE994C8BE69D6734E477E4
59B9F388C30FCE16ECF8899BBEB28AB8730F0F4D153C018DB98A800DDFBC580D
D5397001C7B97F6F336E758B1B71C61066D51D68101C1BA9BDD29CDEEE7C7E24
FCD74442986D9C8A06C00BF282B93E1C37739E6189A88606473A0C74CBD62AF9
87C9074C50D65665E065DADBF514DA09934CD93AFE810390E9CA79F4D0CFB5F9
C44E2C537CC0AF4C48C199E9782A1E54042ED8855F3D5E9ACFBF5A658832D462
D39FD27FA5C17B7ECD8A92B9ADAEC8C69AA2BE70170825BD62D9C1729F65C269
96C69E6486DEE35F247C439B8FBB696FD3C24AD339181124180169F3AC7E7A19
D856576916A327CFD6BA64E896EDB2ACF366069ADBB1B9CA71D375C7016AD9EA
30214411A8EC22E6D306A76C391F9759AEB81F60A14440DB21AAA7719EDCFFA9
27B9976CC8974665D6D3DCAA1172A04E445A281AF2607DBFFDFABDFCE3555BD5
AD0D67B9DAB26FB40C629DFC98E644F5AFF9BDE7F1408D1F434E3FF24D031800
7B759391DA5AE8EB379A0C374F1BB5DC96B5B927F693F3506D76C9184F8DAC53
90F2F43AA3B9AF63A2DDD3A44E4CF388DDB70D0535D76F15C47344F7F087692E
1CA20A680F0DF3DEB82BFD66B4F1C59328ECF8A0BAC70B0450588943DE555534
E31418C4E4B67265585161DD46B8A044DD445B8413954A6C181D61D7971649DC
9608442D234E87B1C39D7B72303BEF64BD01A6BA8965E3BC0874039470AB20D3
78662C8005169666AC6207D5DDD9206A3814C7FDB09D1CBB17BFB9BC73EBA052
FAA5311407ADDD4BDB10613A860B1360E4B70F8524CB12BC34CD34C3251813CE
12B7620D9DEE2D6BCB026EE9EEA1CBCD4AA143C9D5F48BC15D9DD4B45CDBBD27
A3E75A8DED52D40A9D3BD96B969C8038FDCDA35C428AEE554903D3BCA3A99448
0430B3817F4C85C72C49382C03778F67FDECC3DB4BBF0897CA4B909C83B6229E
731333107A831FBE6A6CAF1BB6D934295DDA30750CE0FF1D61A3392B13C2BAA4
F2EBC705FD27CD6D252E786214FDE117584140381D43F8F39618E4F572819FA3
C724FE075677C61515D91B86093F401F42165F0D5442364341BFDD5DED06932D
5C8B83FF8F16ED7860E2AEC4E5D7ABD94719F604EA68B1108EBB5BEBC3EF465B
DD213CEEE1288588CD52CB0178E37213EB4B15F2817F78CB4238908072C47C3B
4A2404A102FEBB173400073C21AA067BCC5CCBC4A7C3D0AD578D0B0451F2767A
6BF81C8DFF62939B8A1306AA74484117CE5D847E287F626830680703803F3934
6F9156826750A779DEC0047602E7D7DF04F5A3EC7103BDE77ADE41E32326604C
59CA016127709AFDBE73113298371228B82129BE4B0CA0D614270C0F460F84A2
5F7DA6404DCE156C876E12918275E17D900F620D2C08D1FE8B52B6439032D4D1
BCD52F450A808F8741C594FFC9878D2F97D0E3E90D2A67590CDCE8F0ADF27A28
9ADD4A9209DE8A4D5E8A5FB11D40D48806F82B4B5A54301DFEDF4482D8508A5A
BF80A50BB8D053EFA6E8C45BA8FB7D7D91AB2AF53C297A795976B7A9FA607CFF
3D6CBEE77CF13B4BE73E9CC292F791A053937CC50CBBC62A28EA9AE7ACECFFFB
3A226AE4E251F1FC213C6C3AAB962CB9E16A240013CDB4F38DF570E3B1EA7136
15FF4B2EBA5E902D9C5ED30617417F403ADD5B290C2BBB84231E6BF13AB85DCC
12A3A8B9AD5994E179D72AB4697325536F506606366AF6E50E03D6605F4A9889
4C6FC98CB112889DD3B16E3C2BF4191D7947DD3A94669BC1E5BCE6D4AF2E318F
2058F294D236578CFFBE68A637F825EDD7CE0EAF2EC676BF0059B715DD5462BA
30DE7F168AC3EE99ECBF8E6C60013B38F49C5F4D443468204828BE842146ABFA
137726E88C5405668BD979D0E189113DFA3E58651B2FA8827ABE229BA994FB4A
0185E3855CBB26B02365A1B2AEB8ACA51B5C0CD59F19CAAE0B28C6DE0975A2DD
250FBD151440F4C5CD454FC67C6D401A3C6E6B8B93E5E8FC0CC4A121C38F9927
527A4AAC3AC93CAA6A6B70113D5EE7B15C46E393933D2C0C9B6E55C1634C0612
DC00F8BD0C2BB9CB469277A4EEBB434FAD09E297D67686226BE565D6AD0D9482
CF1D735717141196B0C9FAE3391095782AFC3D84143127B8CF9F9801D5D8423A
4B836B0196960CA58A51705171C197F78AE62F66986E23FCC0B2CA47DE26DE43
2ABC8F695E5E31DDE304F2498F905D1D74E554B61CC07CBE503272B5D63FDF71
131FFF47E4533DA66CD991640317676CE49FA34EA77677BC935500722066F025
C1104FFC325A98403D1E060B20BC8498014FC6AF9154768BA86963E94FDD8DEE
A590BF99760E2DC5ECDFCCE4922C000B053453CF404D3D2A68B2366102ABAD3D
8ABE1CFB0A9DE45E6CD681C0486C57E52DD412FB66F40610C2299F6C60070239
8C40172F4F29103848B76BE67D51ABE9ABDF14ABDD50CC6213EEDC75C8890DBE
CB670000924D3BAE8E782D1DB2ED5B28AD0CF0A7C36886429F9D70DA0C55A9A6
82334109D6F3AB7D037E509C5DA4A954235A57F0F59D220AB2075FF97C68768B
4435372423C4BAF6A443C80D8039ABF1E9B1553BC56666646FB94D3EAD77C5E8
835253E6273F7A28A16A343214089692C8B5C2BD542B3D428FD0A6BDFA633EAD
07643CB2C30CE907623303ADD601D9B3F89EB9096FC4300D038C9F0C47B7DD6F
3FAE90FF2E8A7443CF84F332FB505DB3A32B284C08E9ECA92359768840CE7CA9
EA568EC57FBD9367157045A9FCC007F910998AD4AE32FF3F963F38778E9B281B
3B55C2F4209D4105814FDEB6EC993284216044467BAD7A3C7548142641BBB3E5
F45F9C0A72C779BF938BEA36CCF55857DCF15D0207238E2ABF7760B66BC25ABD
6F5CF1970A0A4687354D1A79F6E9B380A4E44A4349E2078FFE692AD2C05030F2
023280667B73837F09C5C985D9A9983C5D19C216B7D91EF59C6BA6425BDDC960
13BF280BAB6E887613105AA52CB4332254AD5CC067B214B45467D104D728055C
EAC1D46EE60EBA48AEC9D309FFF24CF688AAC4A0D66A527AC06014ACBCD61F34
04500F57149CE622B9457E6EEB1CECC7058FB14DEBC6E6A61B6BC526E51ECC10
B2F88E0CF2B7672D8DDD0810CD5D94156A902385172AAC264ACDF87B1C8AB38A
37C32D15850EE46CEB254F5B67FFAE7733715167BF44E657BBD12555E332EF4F
17D414881B631C564FD973E9BC4B9FB36398D915D9F5DACD9E815A505D00F13C
BB3CFA933F9E44B0C2561CA52FDCB634318C3CEE7537B2A2F0BF6A4E90F571DC
E4EEC46DF694808B7E113CA4B01A61B7AF907DCA61ADC0563E0FEB4CAB784E8A
6C69CA17CFAF3A5105DF5A0C56CAE47C3BB4EF9A065BD09DEC2CCD6BBFE44530
2B5CAD3815FE77032773BB63D949987E598A1967C403F9684D9B9C8F35C3F081
F0E15D5D2660AAD46CB1F56603A192168D5CCE4B7A7FE28915303EB21F80F649
46C91073FC01AC40D3DE0F5E535D45C43E6D76E39BBA5D71C277CE73A955BD51
E062A879766C92B7238C2CB84D47F99C67351E1B29B11C6DC708F404F4085EF8
81CC955985640412D8B457773071DC986D93631422338894256B15C1D2F7D3E8
DAEC3CB8C181BF8AA9F4B8D0725C8D7148D2E6D2F433BB26F195DC2EE8A19FC8
72B3578E95A5D65A7089E9F0974EB80A32F91A4D02D01DDE3C43BADAA52D830B
705E9B7E57FA96DF1E0F67F2279F7C96C288C465C4B4BEEB123F54897AA2C227
29441EF711005394192D922641AD2E50E6D6912B2D87E01B0B3265082FEB5527
F9DF074141FE8F314021486DA8304FA228396BC474C0884B8F7196C2C4F36DEF
1E0E3CD4AD2969EE10C29AAE2E8E9F8270572EA5E20D91A2DAE92983CC7FEF8E
BC702136B5060A063E1BE02662189CA725F5DE2C990FC8F20316DB191AFC5DA9
21ACBE4CFA0472AC8E955BBDD145E70DA5727BC0FD7E679DC2E2B6506ECF3988
2FA85B0B4AF35B16098E39F0FDFF080176C3216263F9B4AB4F256BCB475BB413
702F67DDCDB10FC9866D447359FEC7D23B3EA28AF7CF2B58169E10A18BC105CF
A52D4B1777914FA16A6E2AC5A0B5D38BF8B29938E70100B1D225D447635734FB
2487D0E26C67FE06CBC29D630F71F6C3AAA4219F692CA22890B3C18AD1ACA8A4
5E9A29BBCF8343D186D474ED9DEFC9148B7784C4073B279A8D71523E682A1BBF
68449C343FB22F61ADD19847986A1D688287BECFFA06907D79609867BAA75166
BD8329B9F6117CCDBA000BCCD987801B2A3AD70C3084B1C1B1F046CF01877066
660887AF287DBBD742651313E41587AE900D1003AF4B2699B263DD577C9C65D7
561A7858E9ED28F63ABEB0DB26B74AB341DF1A166AEFAD115FE905785531A30D
820A72CBD46101EC097BBF038EDD5A9783E7038C3C3492C9147A3696B631D7F8
2AB64993CC25B494AAFE5FA33B26A8D45BC36D127959F3E1A8B0C1E589772D16
7A758CD9CE71BFFCFF26730EAECBD513897745D25361D5EA4791FC506A8C66F9
551F9B8C25CD69F1501CDDC24B7C4E852D673CC4A25736675B562C6742354E89
F80D096C71
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A3B9670C67D7CDBA4D5421F2A01241CED719B21FD1FFDD0A5C786D8B71
D6A0C183E57EE02710004BA25B47CB338824D7560F40B382BDA4338A2C02B3BE
B1BFAD36C649323F30FAF580B0BA100CA24CA32174B1AE755434C8540BB163E7
1AA422DB553D268C70631B80988182ECD910E31DFA7DF056AACF7D25A4C8E021
0A35ED58DFBF41CB08EFD4ECD6E80825F023C44738411DB2147CEDDEE6DB4F6A
F517976F88DB803E78AD99028EF2F2F6A93C43F1388059248EC11C62D214B0CE
1348D537A4E62C2771B6F0C49281CE9BA747224A39319AA0BDDC5A3575A75092
F4A78AAC81F189EF542EA849C6F5310F631957E6CD4C7720A4F5FC4593B43F7C
DBA6A7E92933EE6BE8EE100B3E411C70ED2AB5606CA0300F0CC76835CA612161
2D387C89EFF621E4DE9E659E463F88B99217117CE735215DB047F4477582807C
3613F962DB30F3D86B39BB351BAD24611B41F348377A602A2D96D581619FF1E0
462F8563B66E0A9510F7216D5D508AE342DD08A8A1226674657F8B55912690BE
8D182B1B87239B6219E50ABABB64E570A8A58B8504D02C5399ADE5B5D1EFB41C
E47D33596C37EC7F5E162697DB6AE7F75F36AF59BE01972D20F15455C48E0ACD
54E11361CE7C3808C90A46B388B3500E6ED9A47D25701CC2D94A4C86B4F1EF41
EA9C1152EA94E519F4D6BF023881EF20C058DA88EEA3AA27F9683C85F2843709
99DDEE77DEB4B93630BC0C734BA661BD0159E7E046E29182F0498A1DE1A31F32
A6463AC6E5AE654C23E3A51F8F17DAAF8EA752E967C518D0F8B4C8AE108675F8
97998E6F19CC0B70FAD2CE2CE20AC7C2F47266F35B0235E2A1F3B74E60B82951
3429311795C090CF2237D2CC5C578F9F8F573F469CB1768C28C863E20261C95B
4AC22395266D3E4C53FA92BC0343ED91C900553D4348DFDA79501C5FD0BE4882
DCBA26E5FC7EDDAFD9726AC0661242E7FC22863716E3323483156D2C62A3F9BF
45F942DE04794A552CCDB3988B348201D222949F7E3F96BA9033B61C6D1FE7C4
A48D29D419AFBAB5CBCDFD62360DF1F86E1B1EB94FF0D204A01DE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
22154122B3E325ACA78A9D418FB443FB334F67F8BD2D33A8491FB2E85BA2BB40
F538F5DCA031BB3A7E6FB3A4739D0E8B81CA2C85963E65D86552C771BEA7D233
62F1811CA91DF9091D9A45D022D215152A2D63B0547C3A80EF52AEF1B3E5196D
D8E54FEF4CD779A9026A17CF3DFD14A0B45A64A15211E85A77D3C62424906B6F
BF2F8DA73DDE063FA68FCEFB994C12316791CDC24C08557175275FB1A0F5D09F
F6248BF9DD6AF1897E337230837D8190D2E06CD1BF023F1C37C1821012E5CE9E
955185656FE232F3F2E0551699BBC31A4C9259C38E292209750511EF02B9C53C
5C549FBA73083447A151841AD245D7F545AADACF01EB9C336764F674273E74F3
25ADCFB1879526F9E87AC1AFD391AA66C9ACB0E2AFA717F915E39719AB399D6C
A43CE2DE9B9944B07B96C57FBBB4821D1E5AEC2F5C366A3A2CE0552422F243C7
A1A78CAF7F20C97094011E5C1167D75674E3A7618BC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /rho put
dup 59 /comma put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB4C90E011A8C6BFD
78C82BDCF2A4AAC3F5414C57C9ED29EEE1D68060473C239DBA7010537BF1D2CA
1310A26AD4F58A892D67651802A3EF85B6AA5A101829266DD160AD2B34B35AC4
91487B62B46A5BE8EB57E87860DBF4113A9B6E1CFB18A021D023EF837C7A37ED
682BF5B6D816CFB4C8D5C24EEE6F987E719D801A080315FFB0FD5A97920F0CC6
A3CEC2DA9EBAC3D7B60F69B5C8863C0DCD21444DA67D3F940B82A27539B438F6
FEBBCA504D15ADC3A4B904700C326F1C8548C3BA9190FEDC6ECD56830031F1DB
36114020A8203628ADA77012FB60C5E2DF310985931AF76829C650816E4A2FDD
A6F2E4BA5E37D5E8C3899EB694ED1738A67157DBBDD9FE30760E4B83276F2EDF
0023B2A6CF8DE853A821B87151842D929D9357B183527FB6F4C469C53F1D0797
7A71B5AB1D01D196705F49D8DBB8AE589D9CEE7A9ACF8EF9316728B6A8D274CE
5AC2D51F391CC4402DC6E22DFEFECF61FE01970D397EECB4598CB44B319EECB1
573BF43796A8086682F099CEE9D534A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
59EC46D1798442BC3677E06DC5A2F70FA14529BE16F9E7F1473584BAE8060DAE
D28CDE641A2CFA0BCC95E3FEA848F2BA7F649AF87AA556D2ED84E4723B3BAB88
4BB606362C818C8785ED46B2205D9B4A293247679E0464F79D51584476FD528B
2FC34AB914C268C8874E34F01A8F3E17FF98DDB1102F19D4C26C51B7F48C3820
23595C40350B9DFC1DEC1CA5711D6BD3E75F966CAA3936E5654367EBD86676AF
1732A86738FC4C2E7A3A4438D1D16BC51653FAA26C89AE39711B96F7131CD693
1D8AF54191792FEEA3CD0419C5E08EC814344AFC21976BD13CF41A65EEC545AA
C80E0D2727283C290A2EB5B0D232DBCA6F9623A4316E987DED5314A244DDF170
BFC8DB4B8D4F2B7C46FFFCF9F4A83301FCF15591B27312E42836DD5611962F1A
E06A483B4CC63C8BAE4668D738F45701D214AEAB7BBA09F04600BB8D84E76B0A
7F15F0839547F275C4B553216CF17365C14065E67D42E05A9076D394AEB82CAF
D1964CC9A1C90873F25E9FF12D03A1BA252D76A8C6DF38E5967387574159E4B7
BE116A74A0D72DADFBADBA62C98AEF89A55247F983E4878340F9088751631819
0A5099FD33DE3F2C7E7C8EF8C2F37C2C4863D7AD42935AEF0508255780A0C8AF
A02091E449A99CE5933FCE6A38F53A532782D5D529BEEA2B2A2ACE033A650DDE
FF429AAFB3531BFBF1FFB2FFBCC84F9C1013F4EB07D9330D9C73217F84E492EC
FF712E0104F2BE6FB515312A345F4433A29A179F9EEDF437A5893757128078A7
8AD89E9125E71D9F1A83501C58DBDB29E2DA7535C783EB6B1C90F35147161B63
AD140A385EEC6C8E2ABB5A78352B8EA08515270BDFB97B1A2AC307D6AA3575EC
AE482A7FB95CFF78616D7C30D957859EAB507A8969D24E2DCB7480521892AE5C
E2E5B978E7E01A7F3A0A17C93A4F68B9AF3FEB0A588D61040F915F49F59FC85E
67561B3C730474763AA7E614A9936E5F5AAE038ED403EFFB5EE72412611F2ED3
942272DB899C4B1871660699A790D0F82AA42E2CF7F655D03A7D7EA6E865E8CC
86E5586A22AD9EEE62FADC947BF5FE1D50FADA5DB39EEEAC32A38D944A52998F
B03AEBBB21A08C012F63170D0F483EC42A81D5658DEF96A1F00D38D6F737C1D3
B52D9F6AF95F15FEA6E8689F15979757FE343571AD247C169CF31CB4E9487F17
94FF674B0428C064E4083D12856A1AA45C4CD8EC91F3534FB5DA18EF67FA52ED
EAA9708E8E3DBE18D3E8E4E2FA80978312488218B87CB6C129887C3A3DCD0D97
D0721200DF5698E1456E755227B8C32DD31A7D157A6A1AB667D9E9597C62A45B
076A6E68C977155D031F1285CC540E5FEBFB6574190BCCBE56BFC295435F28F7
0430EB03609E30C44755562D3DE65C9FA66BCB4FA0ADDA677252AE189841E61F
5BD5F94FD33C90519D9A09C95F2A87413F842784111F687DAF450C7ED14C13CE
BF204C7B615F80FAC65FB5676042648C9402BC9EF75A6E4CDB23877A16E6094D
DFE12D8DF97ED4DF02AE17C7EFBF6BD2BF54
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278EA0678603F85C0F3013AEB1B2AADDB2337DBAC1B2
52B2B115732959E1FF6C9CA993DF3E7C73B00F4A6A6277A32F6D5D10F8D4EB81
47315E5BD5FBE88DA5B2CD9D71A8B51C803FEC7DE7BCFCB04D76C24CBE3E40E4
9FA463B5D955A864FB6C5A78DC38B8B50077EA5974E8A3ACAA54356EB2F96D30
2EF8913C6BB60B5A8EF988AE0EDF80660A26B4A346117DE5CEE30B3060CE054C
EADEFCD37AD00997C5E88265319829F6550A04FA0598477BF73995AA4C37BD8D
5AC97935DE4A73C3F5D62536119B5F7E15A4207DEF9096D27D3D6EF1153AA263
41AA5AC2DCE2E64092DCD8A43E34700E6547C210AA27A3700E11D47169D9703C
24A911062B9F016F858D6608F304E3C1B9FDF97FB541A598466FC13A35978D6A
C89C5D7D115D20015326BBB45A5A145E6200671FF0A54D301FD690A4644B1B71
31A6F795E04FA38D419001AE35BBF8E45CB1D9EC09E266A736E2119973AB763E
3B857A6D32903A4124E226400024EEA61FCFA7AC9BC05EB2031832FB9EFCFC3F
D4BBD18D50575CA02EB794510B30E8BBB8EDCE84F332FB5FBB9CE97574B443D7
DA77EEE6F17953381550E3E98D5590DB347AFEBD9F116385726E908BAB7D1357
504048C0F2169D030905B62B3F55887945CE1EF5DA1909F3BD556FD50A65160B
FBDA15F774FCE8DC1B25C9158BB885C78475EFBE79D3E91B09E7B1F043D88595
707278FC37797D62308DE371FFF6016EEC5797ED839F79EEB3DE5407EF35C4C5
E91132739A5A75F9C302CD52EC4CFB03A510ED0F96AE730EBCBED3517BF83DAA
637FC7139DA15A2C450B695C82E1E520A15984693FF9303DDCC10D1D023DB192
D8AB4383F5F491DFEDD1A13441DC07F60B14155F27A6EDBD1FE57D0119B3EF8D
D74CA72BDE5A9FFAE8AD9C35AA9656332CC3F18FFB1BFFC8BFDCF64484EBC7E0
7DCCDF5250D7CDE88559E796E8F4F8ACFC07D00258EB9A94B609CA65239D7F8F
00E537BCB2EA782EEE67806722EF12B1EF6B2ED7C8977FFDDF1E8E775BC2862A
494C758BA9B856053940ACBDC3D73FEBC3773D75D1DC2E131C6F879C130927D7
101071E0CFDE9C2008CB2CA17CF4D4CC8BD8D89F355F4787F32C94C469DE72AA
62F19BC2ECC2BCEFCB53D0215330E71F9B70128FDF2FDFDA1139F37A45CA08D4
56842AE734D2FAEF80FDB1AF0069D44AB6D1DEA47BA476A757900353B2B72D1B
27D50B2A3C8C1DD3591CDEA73083CB1BE505FDC83299D128229FC194F17A5528
0B9363E5F4A398E2910381D89392CF3CFB64938FD115013250906C5F2186F928
E2A68F360BBFF52A06D4A3EFCC58B4AC34120E3D16230C4144947437F9828C71
0FF8B66DF7030597859010B3DAD6D967E91F06C302203F1D100CF94C424346EE
F4DC48BD8B3C9BC05D3ADD3936930812FAA367F45C6A39F6A0D7D82A0C0490A1
656EC9AA02480072E52BC4583955ED2A55872C6674525912BC67966418DF60CF
380D3708F08D35E422C3A7092A806BEF3BD095A7494CE1FE67601F79A53C8A3D
00111FAF20D7CC458D5580A4A410DA72F053315267B43F964AC628D8F63E4DB3
FDD871E2C36D28A95C12D82DEBEC496628E9CAD9239ED5733A961594A12BCEED
6AC8A3D802F6104BC28E19DDFC732A4CB871562E6826614EFC9132FE8393D061
155846EE2F22E431F81ED64B26BF1400F229922CE7CB7581858CDB9C67A67CA7
D2A3C9A2D09E2B568E7FEA347BBBB3B28D2DF6A3B6217242430862667A369347
5629D1436175B286AF8F6291D126697C31A46674B81B22A1482B89731F3F50DA
7CD93D492BEC4A978EA50B53D4B4B591692D20F8CA80E653DDCF09A15E9CEDC4
3D58706950A26FD2E4BE4CBEC085EE617D4B162CF9F02936649A232C48171581
804C138837BE34DEBCC9B0CFD987BA25E95291B2852139F0F9D9A21AB74466C4
86DE0EAD79CD1F084B373AFC90FF7C8AEDE8FCCB68477CA606974DD496FE8F0A
C1859EF5411A77D5B36C18D2F0C2E042CA745C675DF49FA3560A60BB9AED68C8
806D7CEFCBAD4081821BBDF6B96EA1439D75EB0DCB8DBB486DA8BE3CB82C455A
2BE702041FCFB6AC305CAF4F8C0FB0110A4C0697037168401297BE7955D73BCB
BD50B07FE2F9FACCCBB61E6299A844511D5F1737F26B8001B056F1294424526C
6546B51566DFDA27D61031D317632FCA5AB61789B56E4062B1647D5B428D2923
DE1D433C1EF562C49277C7683D6E7F64084B5290270AD40D8EF11C4996C87304
B5A8B6B247B3E5ABF10CFA4398C7408F63BBEF84EED696491D96CCEFEFEBCA51
2A62302ED6E686E54FA705D825377955996BA4DDB526F708ED169B225427B9FD
F6298856CDE39AB674D4FB2E344004BB300AE74F06D6AAD95B923374BE060F8B
8F58ADA636D6DE060323B3AD540D024A158A540F0C4A58D8A950F5167618E938
68A1A4EE66DF5E2A401D5EA19D37A6819EBE3D2ED7DC71980B1FE9FCFE7688AE
8B6AB6D4FC5CE3E57FA28388AA86B814DD392A57C35A6B3220E5BE13556B70B0
1A7DEE3900C15156EBB31B0111D6444C59B1B044429A532A75238297562A295F
62655A7FAD8B72880350174D7541955E6F1ED383710B0C92B973DD77C5395953
A5702CCAA67FD8BD8219A1B98A7D6D01F36027A2239573C196F2C3B96DE46E7E
210B4E158183E310096CBA7AA50DF3563EA0D324F7F1A407712C9AEA2AFF747A
9EBA78ADE0545574B6F36D32CE5B81BD3D11EA7B11278B1BCDED5523F92E9C5F
D4363D0FCEE783D7BD0C5D09E50B8C2A8472FB479C24AFC8F836E17B4861CCC5
4C6E90786CBE9C8E0006199A88FA7B57968E13BA5E3081FE3E00A8564A50023E
48903F03A775D1C2C7F1CD188B573A74B6BA066F864F4A41227A2D6CF214EB9B
D723EB224C934CACC4EE97A4155C2144DC4A552BBF85BF4BADBA5A77A1E71B5A
B91B6097A1910B61D024B87E28872A21ED2816E0B32D2EBC94594A080624278C
8E6D7527E2F9F3A23DD45EAC6315D0D07E39E866E3AC3C54693EAF4A558D2DB8
9550D86411BBF0FB97991500E3F61472A13B3E7499194E20A40EB1C4CD41172C
8566BEA5948E72BBE047F11F3F03D16F436B253D18436815AB1819E91FAA4327
DB5F6A88B882D73874B3454DBC39C8014A76838F8798BC90E4FFDED2E4414120
D740DB639DFCF73B1FEC7EFA4653E0EA60713F0A42138092581F95DBBA3B7492
C37DA8464DA5EBA28ABB5B376CB65AE3E53DED21DA3E50D6DDB1B50350D1538A
0DB0EA2179AE396FAE04DDA98121C13B1E7B040A4EE7A6FB39E6B4E27E6CE15C
6667A1B539790412EFAF96B2B0140975AE1A4006C5B4B2AE1FA4F4F0E0CAFCB5
FE75B96795F3A5D546FABB852F5CE3343C096B3FF0D0F12C160613A1D3924733
757DC0AABBAE9409DF59887E48C9F286D9AFD9EDF65AAD33D8C86B3C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (supplemental.dvi)
@start /Fa 158[34 97[{}1 49.8132 /CMMI6 rf /Fb 135[33
2[37 21 3[37 37 37 4[21 1[37 1[33 37 2[37 27[46 1[50
67[{ TeXBase1Encoding ReEncodeFont }13 74.7198 /NimbusRomNo9L-ReguItal
rf /Fc 94[25 12[33 26[37 37 54 37 37 21 29 25 37 37 37
37 58 21 37 1[21 37 37 25 33 37 33 37 33 6[46 2[71 54
54 46 42 50 54 42 54 54 66 46 54 29 25 54 54 42 46 54
50 50 54 6[21 37 37 37 37 37 37 37 37 37 37 21 19 25
19 2[25 25 25 1[62 1[37 32[42 2[{ TeXBase1Encoding ReEncodeFont }71
74.7198 /NimbusRomNo9L-Regu rf /Fd 134[37 3[41 22 37
26 1[41 41 41 59 18 2[18 41 1[22 37 41 37 41 37 20[41
10[48 65[{ TeXBase1Encoding ReEncodeFont }20 66.4176
/NimbusSanL-BoldItal rf /Fe 198[42 42 42 42 42 42 42
42 42 42 48[{ TeXBase1Encoding ReEncodeFont }10 74.7198
/NimbusSanL-Bold rf /Ff 242[66 13[{}1 58.1154 /CMSY7
rf /Fg 134[29 29 1[29 1[16 29 19 2[32 32 4[13 2[16 32
32 29 13[42 4[39 45 25[32 2[32 32 32 1[16 46[{
 TeXBase1Encoding ReEncodeFont }21 58.1154 /NimbusSanL-Regu
rf /Fh 252[32 3[{}1 49.8132 /CMSY6 rf /Fi 133[29 33 33
48 33 33 18 26 22 33 33 33 33 52 18 33 18 18 33 33 22
29 33 29 33 29 10[48 48 41 37 44 1[37 1[48 59 3[22 48
1[37 41 48 44 44 48 5[18 18 33 33 33 1[33 33 33 1[33
2[17 22 17 2[22 22 37[37 2[{ TeXBase1Encoding ReEncodeFont }57
66.4176 /NimbusRomNo9L-Regu rf /Fj 150[18 1[33 19[37
12[41 16[33 33 33 33 33 2[17 46[{ TeXBase1Encoding ReEncodeFont }10
66.4176 /NimbusRomNo9L-Medi rf /Fk 134[42 2[42 46 23
42 28 1[46 46 46 69 18 2[18 46 46 23 46 46 42 1[46 11[60
1[55 2[55 1[60 69 1[55 1[23 3[55 60 60 55 55 7[46 1[46
1[46 46 46 1[46 46 2[28 23 44[{ TeXBase1Encoding ReEncodeFont }40
83.022 /NimbusSanL-Regu rf /Fl 203[33 33 33 33 49[{}4
58.1154 /CMR7 rf /Fm 252[38 3[{}1 74.7198 /CMSY9 rf /Fn
196[21 32[40 26[{}2 74.7198 /CMMI9 rf /Fo 203[38 38 38
38 49[{}4 74.7198 /CMR9 rf /Fp 134[54 3[60 1[54 36 60
1[60 60 90 2[24 24 60 60 1[60 3[60 7[72 4[66 72 78 5[60
72 2[78 3[78 23[30 44[{ TeXBase1Encoding ReEncodeFont }23
107.929 /NimbusSanL-Regu rf /Fq 134[74 74 103 1[81 44
74 52 1[81 81 81 118 37 2[37 81 81 44 74 81 74 81 74
14[96 3[96 12[96 62[81 2[{ TeXBase1Encoding ReEncodeFont }25
132.835 /NimbusSanL-Bold rf /Fr 105[37 34[33 3[37 37
1[15 4[37 1[37 3[37 10[44 5[44 26[37 2[37 37 37 1[18
46[{ TeXBase1Encoding ReEncodeFont }15 66.4176 /NimbusSanL-ReguItal
rf /Fs 171[96 105 114 2[123 114 131 3[44 2[96 2[114 114
114 65[{ TeXBase1Encoding ReEncodeFont }11 157.742 /NimbusSanL-BoldItal
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black 0  0  0  0.15
TeXcolorcmyk -152 -130 a Fs(BIOINFORMA)-14 b(TICS)p Black
Black Black 3465 -213 a Fr(V)-5 b(ol.)18 b(00)g(no)m(.)i(00)e(2015)3681
-130 y(P)m(ages)h(1\22611)p -152 -39 4185 9 v -152 149
a Fq(A)l(utomated)38 b(band)f(annotation)h(f)m(or)f(RNA)g(structure)g
(pr)m(obing)-152 324 y(e)n(xperiments)g(with)g(n)o(umer)m(ous)g
(capillar)q(y)g(electr)m(ophoresis)-152 498 y(pr)m(o\002les)-152
660 y Fp(Seungm)n(yung)31 b(Lee)693 624 y Fo(1)735 660
y Fp(,)f(Hanjoo)g(Kim)1353 624 y Fo(1)1396 660 y Fp(,)g(Siqi)f(Tian)
1875 624 y Fo(2)1918 660 y Fp(,)h(T)-13 b(aehoon)30 b(Lee)2601
624 y Fo(1)2644 660 y Fp(,)-152 784 y(Sung)o(roh)g(Y)-15
b(oon)522 748 y Fo(1)p Fn(;)p Fo(3)p Fn(;)p Fm(\003)684
784 y Fp(,)30 b(Rhiju)g(Das)1212 748 y Fo(2)p Fn(;)p
Fo(4)p Fn(;)5 b Fm(\003)-152 887 y Fl(1)-114 917 y Fk(Depar)s(tment)24
b(of)f(ECE,)h(Seoul)g(National)h(Univ)n(ersity)-8 b(,)22
b(Seoul)i(151-744,)g(K)m(orea)2445 887 y Fl(2)2483 917
y Fk(Depar)s(tment)g(of)-152 1017 y(Biochemistr)r(y)-8
b(,)24 b(Stanf)n(ord)f(Univ)n(ersity)g(School)g(of)h(Medicine)o(,)g
(Stanf)n(ord,)f(CA)h(94305,)g(USA)2796 987 y Fl(3)2834
1017 y Fk(Interdisciplinar)r(y)-152 1116 y(Prog)o(r)o(am)g(in)g(Bionf)n
(or)r(matics)o(,)f(Seoul)h(National)h(Univ)n(ersity)-8
b(,)22 b(Seoul)j(151-744,)e(K)m(orea)2614 1086 y Fl(4)2651
1116 y Fk(Depar)s(tment)h(of)-152 1216 y(Ph)n(ysics)o(,)e(Stanf)n(ord)h
(Univ)n(ersity)-8 b(,)22 b(Stanf)n(ord,)i(CA)f(94305,)h(USA)-152
1548 y(Supplement)p -152 1703 V Black Black -152 3869
a @beginspecial 0 @llx 0 @lly 612 @urx 627 @ury 2420
@rwi @setspecial
%%BeginDocument: figures/supp_band_annotation_example.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: supp_band_annotation_example.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 2/15/2015
%%BoundingBox: 0 0 612 627
%%HiResBoundingBox: 0 0 611.6153 626.9068
%%CropBox: 0 0 611.6153 626.9068
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 128 8
%%BeginData: 21811 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD96FFA8A8A1A87DA8A7A87D
%A8FD0B7DA1FD057DFD11A8FD55FFFD0A27F827F827F827F8FD052705FD04
%2752525227525152767D7D7D52FD047DFD54FFA8765276527D5276527DA8
%A87DA8A1A87DA8A8A8A1A8A8A8A1A87D4B2752274B275227522752275227
%522752FD55FFA8FD29FFA8FD54FFA8A8FD04FFA8FFFFFFAEFFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD09FFA8FFA8FFA8FFA8A8FD55FFA8FFFFFFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0BFFA8FFFFFFA8FFA8FD
%54FFCFFD12A8AEFD0FA8FFA8FFA8FFA8FFA8A8FD55FF7DFD09A8A7A8A8A8
%A7FD04A8FFA8AEA8FFA8A87DA87DA87DA87DA8A8FFFFFFA8FFFFFFA8FD54
%FFA8FD04527C52525276FD09527D7C7D7D7D7C7D7C524B5252524B5252FD
%097DFD55FFF8F8F827F820F827F8F8F827F8F8F827F8FD1127F827F821F8
%27F8F827FD54FFA827FD29F827FD55FFFD05F821F8F8F821F8F8F821F8F8
%F821F8F8F821F8F8F821F8F8F821F8F8F821F8F8F821FD04F827FD54FFA8
%20FD29F84BFD55FFF827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827
%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F82127FD55FFFD2AF851FD55
%FF2727275227272752FD092720F820F8F8F820F821FD0852FD08F827FD54
%FFA8FD0927F827F827F827F827F827F827F827F827F827F827F827F827FD
%09F827FD55FF7D7D7DA17D7D7DA17DA87DA87DA87DA87D7D7DA77D7D7DA7
%7D7D27522752275227527DCAFD06A87DFD54FFA8FD047DA7FD157DA17DA8
%7DA77DA87DA8A8FFA8A8A8FFA8A8FD55FF76FD087DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87D7D7DA77D7D7DA7FD097DFD54FFA8FD087DA77DA87D
%A87DA87DA87DA8A8A8A1A8A8A87DA87DA87DA87DA87D27F827F827F827F8
%52FD12FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD06FFA7FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFFD09A8FD11FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF7DFFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF
%A8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FD04FFCAA8FD08FFA8
%FFFFFFA8FD0DFFA8A8A8FFA8A8A8FD07FFA8A8FD10FFA8FFFF7DA8FFA8FF
%A8A8A8FFA8FFFFA8FD0AFFA8FD07FFA8FD09FFA8FD09FFA8FD09FFA8FD04
%FF7DCFA8FFA8FFA8FFA8FFA8FFFFFFA8FD1BFF7DFD13FFFD07527D52527D
%FFA8FD0AFFA8FD07FFA9FD08FFA8FD09FFA8FD09FFA8FD04FFA8A8A8FFA8
%FFA8FFA8FD13FFA8FFA8FFA8FFA8FD08FFCAFD10FFA8A8A8FFA8FF7DA8A8
%FFA8FFA8FFA8A8FFA87DA8FD057DFFA8FFFD057DFFA8FF7D847D7D7DFD04
%A8FFFD06A87DFFA8FF7DA8FD057DFFA8FD04FFA8FD29FFA8FD11FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8A8A8FF7D52527D527D527DFFFFFF7D52275252A8
%FFFFA87D4B527D7DFFA8FF7D52527D5252527DFFFFA852527DA8A852A8FD
%05FFA8A8FFFFA8FFA8FFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8FFA8FFA8FD
%21FFA8FFFFFFA8A8A8FFFFAFFFFFA8FFFFA8FFFFA8FFA8FFFFFFA8FFA8FF
%A8FFFFFFA8FFA8FFA8FFFFFFA8FFFFA8A8FD05FFA8FFFFFFA8FFA8FD07FF
%A8FD04FFA8FD21FF7D7D527D527D527D7DFD11FFA8FF7D7D527DFFFFA8FF
%A852A8FFA8FD1BFFA8FD09FFA8FD0CFFCAFFA8A8CAFFCAFFCAFFCAFFCAFF
%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFA84BFD06272052FF
%FFCAFD0DFFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8
%FF7DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFFFA8A8
%FFA8FFA8FFA8FFA8FFA8FFC9C9C9A1CAC9CAC9CAC9C9C9CAC9CAC9CAC9CA
%C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9C9C3CAC9C9C3CAA1CAC9C9
%C3FFCAFD0BFFA8FFA8FFA8FFA8A87DFFA8FFA8FF7DFD1BA87DFD09A87DFD
%09A87DA8FFA1FFFF7D7DA87D847DA87DA8A8FFA9FFA8FFA9FFA8FFA8AFA8
%FFA8AFA8FD14FFC9C9BBCACFA7CAA7CACACFCAFFA8FFFFFFA8FD04FFA8FF
%FFA8FFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FF7DA8A8FF7DFFA8FFA8A8A8
%FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A9A8FFC3C9C94B4B
%4A4B4B4B4A4B75CAC3C9C9C9C3C9C9A07576757675767576C3CAC9C9C3CA
%C9C9C3CAC9C9C3CAC9C9A0CAC9C9C3FFC9FFFFFFCFFFCFFFCACAC9CACFFF
%FFFFA8FFFFFFA8FFA87DFFFFA8FFA8FFA8A8A8FFA8FFFFA8A8FFA87DA8FF
%FFA8A8FFFFFF7DFFA8FFA8FFFFFFA8A87DFFA8FFA8A8A8FFFFA87DFFA8FF
%A8FFFFA0C3A06F4A6F4A6F4B6F4A76A0C3A0C3A0C3A0C375756F756F756F
%756FC3A0C3A0C3A0C3A0C3A0C9A1C9A0C9A1C2A0C3A0C3FD0CFFA8A8A8FF
%A8FFA8FFA8A8A8FFA8FFFD0BA8A97DFD06A8FF7DFD09A87DFFFD08A87DFD
%0AA8FFC9FFFF275227522752275252FFA8FFFFFFA8FFFF7D51FD065276FD
%08FFFD0952FFFFFFC3CFBBFFCAFD09FFA8FFA8FFA8FFA8FF7DFFA8FFA8FF
%7DFD0AA87DFD08A87DFD07A87DFD09A87DFD09A87DFFFFA0CAA74B202720
%2720272076A7C9A1C9A1C9A1C94B26204B2027202726CAA7CAC9CAA7CAC9
%514B514B4B4B514B76C9CAC9C3CAC2CAFFA7CAA7CAA7CACAFFA8FFFFFFA8
%FD07FFA8FFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFFFCACA
%A1CAA8CAA7CAA8CACAFFCACFCAFFCACFCACFCACFCACFCACFCACFCACFCACF
%CACFCACF51514B524B514B5176FFCACFCFFD09FFCACFCACAA8FFFFA87DFF
%FFFFA8FFA87DA8FFA8FFA8FFFFA87DFFA8FFA8A8A8FFA884A8FFA8A8A8FF
%A8FF7DFFA8FFA8A8A8FFFFA87DFFA8FFA8A8FFFFA8A8A8FFA8FFA8A8FFFF
%FFA8A1A7A8A8A8A1A8A7A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFCAFFFFFFA8A8A7A8A1A8A8A8A1A8FFFFCAFD0DFFA8FFFFFFA8FD04FFA8
%FFFFA8FFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FFA8FFA8FF7DFFA8FFA8A8
%A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFC9C9C9A0
%C9A0C3A0C9A0C3A1C9C3C9C3C9C3C9C3C9C9C9C3CAC9C9C3CAC9CAC9CAC9
%CAC9CAC9C9C3CAC9C9C3C9A1CAC9C9C3FFC9FD0BFFA8FFA8FFA8FFA8A87D
%FFA8FFA8FF7DFD1BA87DFD09A87DFD09A87DA8FFA1FFFF8484A8A8A884A8
%84A8A9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFD07FFAF52272E2752272E
%2752FFFFFFC9C9B5CACFA7CAA7CFCAFFCAFFA8A8A8FFA8A8A8FFA8A8A8FF
%A8FFFD05A8FFA8A8A8AFA8A87DA8A8A87DA8A8A87DFD0CA8FFA8A8A8AFA8
%A87DFFFD09A8FFC2C9C9A0C3A0C3A0C3A0C3A1C9C3CAC9C9C3CAC9C9C3C9
%C9C9C3C9C9C9C3CAC9C9C3CAC9C9A0A1A0A09AA1A0A09ACAC9C9C3FFC9FF
%FFFFCFFFCACFCACAC9CACAFFFFFF7DFFFFFFA8FFA87DFFFFA8FFA8FFA8A8
%A8FFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFF7DFFFFFFA8FFFFFFA8A87DFF
%A8FFA8A8A8FFFFA8A8FFA8FFA8FFFFCAFFA8A17DA17DA77DA17DA8A7A8A1
%A8A7A8A1A8A1A7A1A8A1A7A1A8A1CAA8CAA8CAA8CAA8CFA8FFCACFA8FFCA
%A8A8FFCAFD0DFFA8FFFFFFA8FFFFFFA8A8FFFFA8FFFFA8A8FFA8FFA8A8A8
%FFA8FF7DFFA8FF7EA8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8
%A8A8FFA8FFA8A8A8FFA8A8A8FFFFCFFF7DA17DA77DA17DA7A1A8A1A8A1A8
%A1A8A1A17DA77DA17DA77DA1A1A8A1A8A1A8A1A87CA17DA17CA17D7D7DFF
%CFFD0FFFA8FFA8FFA8FFA8FF7DFFA8FFA8FF7DFD0AA87DFD08A87DFD07A8
%7DFD09A87DFD09A87DFFFFA0CAA14B264B264B4A4B264B264B204B264B20
%4B204B204B204B204B204B204B264B204B2620202620202026204BA1C9C3
%C3CAC9FFFFCAFD07FFA8FFFFFFA8FFA8FFA8A8FFFFA8FFA8A8A8AFFD07A8
%FF7DA8A8FFA8A8A8FF7DA8A8AFA8A8A8FFA8A87DFFFD08A87DA8A8FFA8A8
%A8AFA8A8A8FFC9FFFFFD11F827F8F8F827F8F8F827F827F827F827F8FD04
%2728FD042752FFFFFFC9CA92CFCACAC9CFCACAC9CFCACAA8FFFFA87DFFFF
%FFA8FFFFA8FFFFA8FFA8FFFFA87DFFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%FF7DFFA8FFA8A8A8FFFFA87DFFA8FFA8A8FFFFA8A87DFFA8FFA8A8FFA0CA
%A14B4B754B4B4B754B7576A076A076A076A06F764B754B764B754BA09AA0
%76A09AA076754B4B4B754B4B4B76C9C9A1C9FFFFCAFFFFFFCAFFCAFFA8FF
%A8FFFFFFA8A8FFFFFFA8FFFF7DFFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FF
%7DA8A8FF7DA9A8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8
%A8FFA8A8A8FFCFCACA4B514B514B764B5175C9A1A1A1A7A1A1A1764B764B
%7651764B76A1C9A1C9A1C9A1C9767675767576757676CFC9CACAFD0DFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8A8AFA8A8A8FFFD07A8FFFD07A8FFA8
%A8A8FF7DA8A8AFA8A8A8FFA8A87DFD04A8FFA8A8A8FFA8A8FFA0CFA74B26
%4B274B264B2676A7CAA7CAA7CAA7CAFD054B514B4B4BCAC9CAA7CAC9CAA7
%767576517675764B7CCACAA7C9CAC2CAFFCAFFCAFD05FFA8A8A8FFA8FFA8
%FFA8A8A8FFA8FFFD0CA87DFD07A87DFD09A87DFD09A87DFD0AA8FFC3FFFF
%767D767D767D767D7DFFA8FFCAFFA8FFCAA87DA77DA17DA77DA7CAFFCFFF
%CAFFFFFF4B524B5227524B4B52FFFFFFC3CABBFFFD04CAC9CFFD04CAFD04
%FFA8FFFFFFA8FFA8A8FFFFA8FFFFFFA8A87DFFA8FFFFA8A8FFA8A8A8FFFF
%A8A8FFFFFF7DFFFFFFA8FFFFFFA8A87DFFA8FFA8A8A8FFFFA8A8FFAFFFA8
%FFFFA0C9A1C9C9C9A1CAC9C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9
%A1C9A1C9A1C9A1C9A1A076A076A076A076A0A1C9A1C9FD08FFA8FFCAFFA7
%FFFFFFA8A8FFFFA8A8FFA97DFFFFA8A8FFA8FF7DA8A8FFA8FF7DA8A8FF7D
%A8A8FF7DA8A8FFA87DA8FFA8A8A8FFA8FF7DA8A8FFA8A8A8FFA8FFA8A8A8
%FFA8A8A8FD04FFA8FD29FFA8FD11FFA8FD07FFA8FD05FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF84A8A8FFA8FFA8FFA8
%FFA8A8A8FFA8FFA8FFA8FFA8FD04FFA9A8AFFFA9FFAFFFA9FFA8AFA8FFA8
%AFA8FD1AFFA9FD10FFFD05A8FFFD09A87D7DA8A8A87DA8A8A87DA87DA87D
%A8A8A87DA87DA87DA8A8A87DA8A87D7DA8A8A87DA8A8A87DA87DA87DA8A8
%A87DA8A884A8FFC9C9C9A1CAC9C9C3CAC9C9C3C9C3C9A1C9C3C9A1CAC9C9
%C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CAA1C9C3C9C9FD0BFF
%CFCFA8FFFFFFA8FFFFFFA8FFFFA8FFFFA8FFA8FFFFA8A8FFFFFFA8A8A8FF
%A8A8A8FFAFA8A8FFA8FF7DFFA8FFA8A8A8FFFFA8A8FFFFFFA8A8FFFFA8FF
%A8FFA8FFA8A8FFA0FFA8A8CAFFCAFFA8FFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAFFA8FFCAFFA8FFCAFFCAFFCAFFA8CACAFFCAC9CABCCA
%CFA7CAA7CAA7CAA7CAA1FFFFFF7D7DFFFFFFA8FFA952FFFFA8A8FFA8FF7D
%7DA8FFA8FF7DFFA8A87DA8A8FF7DA8A8FFA87DA8FFA8A8A8FFA8FF7D7DA8
%FFA8A87EFFA8FF7D7DA8FFA8A8A8FFC3CACAA1CAA7CAA1CAA7CAA7CAC9CA
%A7CAC9CAA7CFCACFCACFCACFCACFCACFCACFCACFCACFCACACACFCACACACF
%A7CFCACFC3CF99CFFFFFCFFD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FF
%A8FFA8A8A8FFA8FFA8A8A8FFA8AFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FF
%A8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8FFA7CAA14B20262020202620
%4B7576757675767576A0CAC9C9A1CAC9C9A1CAC9C9A1CAC9C9A1CAC9CAA7
%CAC9CAA7C9C9C9A1CFFD0CFFFD05A8FFA8A9A8A8A8FFFD04A87EA87DA8A8
%A87DA8A8A87DFD05A87EA87DA8A8A87DA8A8A8847D7DA87DA8A8A87DA8A8
%7D7DA8A8A884A8A8A87DA8A8FFC3C9CA757675767676757676C9A1C9A1C9
%A1C9A1C9C9CAC9CAC9CAC9CAA1C9C3C9A1C9C9C94B514B514B754B4B75CA
%C9CAC3CFC2FFCAFFCACFCAFFCACFCACAFD04FFA8FFFFFFA8FD05FFA8FFFF
%FFA8FFA8FFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8
%FFA8FFA8FFA8A8AFFFFFFFA8FFFFFFA8FFFFA1FFA87D7D7E7D847D7E7DA8
%7DA87DA87DA87DA8A9FD09FFA8FFA8FFA8FFA87D527D527D527D527DFFFF
%FFC9A7C2CACFA8CFCACAA8CFCACAA7FFFFFFA8A8FFFFA8A8FFA87DFFFFA8
%A8FFA8FF7D7DA8FFA8FF7DA8A8FF7DA8A8FF7DA8A8FFA87DA8FFA8A8A8FF
%A8FF7D7DA8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFC9C9CA75767576757675
%764B4B4B754B4B4B754BA1C9CAC9C9C9CAC9C9A1C9C3C9A1C9C3C9A0A1A0
%A09AA1A0A09ACAC9C9C3FD15FFA8FD05FFA8FD05FFA8FFA8FFFFA8A8FFFF
%A8A8FFFFA8A8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFA8A8FD04FFA8FFFFFF
%A8FD04FFA8A8A8CAA8FFA8CAA8FFCAFFA8FFA8FFA8FD0BFFA8FFFFFFA8FF
%A827F827F820F827F852FD10FFFD05A8FFFD07A8AFA87D7DA87EA884A87D
%A87DA87DA87DA8A8A87DA87DA87DA8A8A87DA8A87D7DA87EA8A8A87DA87D
%A87DA87DA8A8A87DA8A884A8FFCACACAA1CAA7C9A1CAA7C9A7CAC9CAC9CA
%C9CAC9CACACAC9CACACAC9CAC9CAA7CAC9CAA7CAA1A7A1C9A1A7A1A7A1CA
%C9CACAFFCAFD0BFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8A8A8FF
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8A9A8FFA8A8A8FFA8A8A8FFA8FF
%A8A8A8FFA8A8A8FFA8FFA8A8FFA0FFA8A1A1A7A1A7A1A7A1A8A7CAA8CAA7
%CAA8CAA8CFCACAA8CFCACAA8CACACAA8CACACAA8CAA7CAA7CAA7CAA1A7CA
%CAA8C9C9BBA8CFA7CAA7CAA7CAA7CAA1FFFFFF7D7DFFFFFFA8FFFF7DFFFF
%A8A8FFA8FF847DA8FFA8FF7DFFA8A87DA8A8FF7DA8A8FFA87DA8FFA8A8A8
%FFA8FF7D7DA8FFA8A87EFFA8FFA8A8A8FFA8A8A8FFC9FFFF767D7C7D767D
%7C7D7DFFCFFFCAFFCFFFCAFD0BFFCFFFFFFFCFFFCAFFCAFFCAFFCAFFA8FF
%FFFFC3FFC3FFFFFFCFFFFFFFCFFFFFFFA8FFFFFFA8FFFFFFA8FFFFA9FFFF
%A8FFA8FFFFFFA8FD04FFA8A8FFA8A8A8FFFFA8A8FFAFFFA8FFAFFFA8FD05
%FFA8FFFFFFA8FD05FFA8FFA8FFA8FFFFA0C3A0A0A0C3A0C3A0C3A0C3A0C3
%C2C3A0C3C2C3A0C3A0C3A0C3A0C3A0C3A0C3A0C3A0C3A06F4B6F4A6F4B6F
%4A75C2C3A0C9FD0CFFFD05A8FFA8A9A8A8A8FFFD04A87EA87DA8A8A87DA8
%A8A87DFD05A87EA87DA8A8A87DA8A8A8847D7DA87DA8A8A87DA8A87D7DA8
%A8A87DA8A8A87DA8A8FFC9C9CAA1CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9
%CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAA1C9A1C9A1C9A1C9A0CAC9CAC3
%FFC9FFCFFD09FFA8FD07FFA8FFA8FFFFFF7DFFA8FFA8FFA8FFA8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FFA8A8A8FFA8
%FFA8FFA8FFA8A9FFA1FFA8AFFD12FFAFFFFFFFAFFD12FFAFFFFFFFC9A7B5
%CACAA7CAA7CAA7CAA7CAA1FFFFFFA87DFFFFA8A8FFFF7DFFFFA8A8FFA8FF
%7DA8A8FFA8FF7DA8A8FF7DA8A8FF7DA8A8FFA87DA8FFA8A8A8FFA8FF7D7D
%A8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFC3C9C9A1CAC9CAC9CAC9CAC9CAC9
%CAC9CAC9CAC9C9C3CAC9C9C3CAC9C9C9CAC9CAC9CAC9CAC9CAC9CAC9CAC9
%CAA1CAC9C9C3FFCAFD05FFCFFFFFFFCFFD05FFA8FFFFFFA8FFA8A8FFFFA8
%FFFFFFAFFFA8FFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFF7DFFFFFFA8FFFF
%FFA8A8A8FFA8FFA8A8FFFFFFA8A8FFFFFFA8FFFFCACFA8A8CACFCAFFCACF
%CAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFF
%CACFCAFFCAA8CAFFCAFD0DFFA8A8A8FFA8FFA8FFA8A8A8FFA8FFFD0CA87D
%FD07A87DFD09A87DFD09A87DFD0AA8FD04FF7DFD29FFA8FD11FFA8FFA8FF
%A8FFA8FF7DFFA8FFA8FF7DFD1AA8FF7DFD09A87DFD0BA8FFCAFFA8765276
%52765276527DA8FFCACFA8FFCACFA1A17DA17DA77DA17DFFCACFA8FFCACF
%A8FFCACFA8FFCACFA8CACACFA8FD0BFFA8FFA8FFFFFFA8A8A8FFFFA8FFFF
%A8FFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FF7DFFA8FF7DA9A8FFA87DA8FF
%A8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FF7DA8A8FFA8A8A8FFC3C9C9759A76
%9A75A076769ACAC9C9C3CAC9C9C9A176A076A076A076A0C9CAC9CAC9CAC9
%CAC9C9C9CAC9C9C9CAA1CAC9C9C3FFC9FFFFFFCAFFCACACACFCACAA8FFFF
%A8A8FFFFFFA8FFA8A8FFFFA8FFA8FFFFA8A8FFFFFFA8A8A8FFA8A8A8FFAF
%A8A8FFA8FF7DFFA8FFA8A9A8FFFFA87DFFFFFFA8A8FFFFA8A87DFFA8FFA8
%FFFFA1FFFF7D7DA87E847DA87DA9FD08FF84847E847DA87E847EFD14FFCA
%C9C2CACFA7CAA8FFCAFFFFFFA8A8A8FFA8FFA8FFA8A8A8FFA8FFFD05A8FF
%A8A8A8AFA8A87DFD07A87DFD0CA8FFA8A8A8AFA8A87DFFFD09A8FFC3C9C9
%76A076A076A076A0A0CAC3CAC9C9C3CAC9764AFD064B75C3CAC9C9C3CAC9
%C9C9CAC9C9C9CAC9C9A1CAC9C9C3FFCAFD0BFFA8FFA8FFA8FFA8A87DFFA8
%FFA8A87DFD0AA87D7DFD06A87D7DFD07A87DFD09A87DFD09A87DA8FFCACF
%A8765276517652764BA1CACFA8FFCACFA8FFA8CAA8CAA8CAA8CAA8CFA8FF
%CACFA8FFCA51274B274B274B2752CAFFCAFD0DFFA8FFFFFFA8FFFFFFA8A8
%FFFFA8FFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FF7DA8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FD04FFA8FD
%11FFA8FFA8FFA8FFA8FD09FF51524B5227524B5252FD0DFFCACAC9CACFFF
%A8A8A8FFFFFFA8FFA8A8FFFFA8FD04FFA8A8FFA8FFFFA8A8FFA87DA8FFFF
%A8A8FFFFFF7DFFFFFFA8FFFFFFA8A87DFFA8FFA8A8AFFFFFA87DFFFFFFA8
%FFFFA0C9A1C3A1C9A1C9A1C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9
%C3C9A1C9C3C9A1C9C3C9A1CAC9C9A1CAC9C3A1C9C3C9CACACFFFCACAA7CA
%A7CFCAFFA8FFFFFFA8FFA8FFA8A8FFFFA8FFA8A8A8AFFD07A8FF7DA8A8FF
%A8A8A8FF7DA8A8FFA8A8A8FFA8A87DFFFD08A87DA8A8FFA8A8A8AFA8A8A8
%FFC9FFFFA8FD21FFA8A8A8A9FD05A8FFFFFFC9CA99CFCACACAFD07FFA8FF
%A8FFA8FFA8A87DFFA8FFA8FF7DFD0AA884FD08A87DFD07A87DFD09A87DFD
%09A87DA8FFA0CAA1A1A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1
%C9A1C9A1C9C3C9A1C9C3C9A14B4A4B4A4B4B4B2676C9C9A1C9CACACAFD09
%FFA8FFFFFFA8FFA8FFFFA8FFFFA8FFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8
%FFA8A8A8FF7DFFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFA8FFA8
%A8A8FFA8A8A8FFFFCACAA1CFCACACACFCACACACFCACFCACFCACFCACFCACF
%CACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFA7CACACFCFFD09FF
%CFCFCACAA8FFFFA8A8FFFFFFA8FFA8A8FFFFA8FFA8FFFFA87DFFA8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8FF7DFFA8FFA8A8A8FFFFA87DFFA8FFA8A8FFFF
%A8A87DFFA8FFA8FFFFA0CAA14B4AFD074B264B4B4B264B4A4BA0CAC9C9A1
%CAC9C9A1CAC9C9A1CAC9C9A1CAC9C9A1CAC9C9A1C9C9C9A1C9CAC9CAFFCA
%CAA7CAA7CAA8FFA8FFFFFFA8FFA8FFFFA8FFFFA8FFFFA8A8FFA8FFA8A8A8
%FFA8FF7DFFA8FFA8FFA8FF7DFFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8
%A8A8FFA8FFA8A8A8FFA8FFA8FFC9FFFF2727F8270527F827275227522752
%275227A9FD18FFA8FFFFFFC3CAC2FFCACACFFD07FFA8FFA8FFA8FFA8A87D
%FFA8FFA8A87DFD0AA87D7DFD06A87D7DFD07A87DFD09A87DFD09A87DA8FF
%A0CAA1FD0476A0767675A0A0A076A1A0A076A1A1CAA1CAC9C9A1CAC9C9A1
%CAC9C9A1CAA7764B764B764B764B76A7CAC9C9CACACFFD09FFA8A8A8FFA8
%FFA8FFA8A8A8FFA8FFFD0CA87DA8A8A87DA8A8FF7DFD09A87DA9FD08A87D
%FD0AA8FFC9C3C94B4B4A4B4B4B4A4B4B4B4A4B4B4B4A4B4BA0C3C9C3C9C3
%C9C3C9C3C9C3C9C3C9C3C9759A769A75A0769A76C9C3C9C9FD07FFCFFFCF
%CFCACACAFFFD04A8FFFFA8FFA884FFFFA8FFFFFFA8A87DFFA8FFFFA8A8FF
%A87DA8FFFFA8A8FFFFFF7DFFFFFFA8FFFFFFA8A87DFFA8FFA8A8AFFFFFFF
%A8FFFFFFA8FFFFC2FFA8A17DA17DA77DA17DA8A1A8A1A8A1A8A1A8A8FFCA
%FFCAFFCAFFCAFFCAFFCAFFCAFFCAA17DA17DA17DA17DA1CAFFCAC9C9C2CA
%CAA7CAA7CAA7CACAFFA8FFFFFFA8FFA8FD05FFA8FFFFA8A8FFA8FFA8A8A8
%FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8
%A8A8FFA8FFA87D7DFFA8A8A8FFC9FFFFA7FFCACFA8FFCACFA8FFCACFA8FF
%CACFA8FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF2727274BFD042752FFCA
%FFC3CF9AFFFFFFCFFD07FFA8FFA8FFA8FFA8A87DFFA8FFA8FF7DFD0AA884
%FD08A884FD07A87DFD09A87DFD05A87DA8A8A87DA8FFA1C9A1A1A1C9A1C9
%A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9A1C9
%A0C3A0C9A0C3A0A1A1C9A1CAFD0CFFA8A8A8FFA8FFA8FFA8A8A8FFA8FFFD
%0CA87DFD07A87DFD09A884FD09A87DFFFD09A8FD04FFA8FD29FFA8FD10FF
%CAA8FFFFFFA8FFFFFFA8FFA8A8FFFFA8FFA8FFFFA87DFFFFFFA8A8A8FFA8
%A8A8FFAFA8A8FFA8FF7DFFA8FFA8A9A8FFFFA87DFFFFFFA8A8FFFFA8A87D
%FFA8FFA8FD05FFA9FD36FFCACAA7CAA7FFFFFFA8A8A8FFFFA8FFFFA8FFFF
%A8A8FFA8FFA8A8A8FFA8FF7DFFA8FF7DA8A8FF7DFFA8FFA8A8A8FFA8A8A8
%FFA8FFA8A8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8FFC9C9C9A1C9C3CAC9C9
%C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CAC9C9C3CA
%C9C9C3CAC9C9A1CAC9C9C9FFCAFFFFFFCACAA7CACAFFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FF7DFD1BA87DFD08A8FFFD0AA87DA8FFA0FFA8A8CACFA8
%FFA8CFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFCAFFCAFFCAFFCA
%FFCAFFCAFFCAFFCAA8CAFFCAC9A7BBCACAA1CACAFD05FFA8A8A8FFA8FFA8
%FFA8A8A8FFA8FFFD0CA87DFD07A87DFD08A87D7DFD09A87DFD0AA8FFC9CF
%CFA1CFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFCAFFA8CFCACAA8CFCACA7DFFCACFC3FFC9FD09FFCFFD05FFA8FFFF
%FFA8FD05FFA8FFFFFFAFFF7DFFA8FFFFA8A8FFA8A8A8FFFFA8A8FFFFFF7D
%FFFFFFA8FFFFFFAFA884FFA8FFA8A8FFFFFFA87DFFFFFFA8FFFFC3C9A0C3
%C3C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9C3C9A1C9C3C9
%A1C9A16F4A4B4B4B4A6F4A75A1C9C3CAFD06FFCFFFA8CAA7CAA1FFFFFF7D
%A8A8FFA8A8FFFF7DFFFFA8A8FFA8FFA8A8A8FFA8FF7DFFA8FF7DA8A8FFA8
%A8A8FFA87DA8FFA8A8A8FFA8FF7DA8A8FFA8A8A8FFA8FFA8A8A8FFA8A8A8
%FFC3CACAA1CAC9CAC9CAC9CAC9CAC9CAC9CAC9CAC9CACACAC9CACACAC9CA
%C9CAC9CAC9CAC9CAA1C9A1C9A1C9A1C9A1CAC9CAC3FFC3FFCFCAC9CAC9CF
%CAFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8A9A8FFA8FFA8A8
%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8A9A8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8A8FFA0FFA8A17DA8A8A87DA8A7A8A8FFA8A8A8FFA8A8A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFAFFFFFFFA8A8FFFFFFC9C9
%C2A8CFCAFD07FFFD0BA8A9A8A8A87D7DA87DA87EA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87D7D7DA87DA884A87DA8847D7DA87DA87DA87D
%A87DA8A8FFC9C9C975A0769A75A0769A75764B754B764B754B9A76A076A0
%76A076A0A1C3A0C9A1C3A0C9C9C9C3CAC9C9C3C9A1CAC9C9C9FFCFFD0BFF
%A8FFFFFFA8FFFFFFA8FFFFA8FFFFA8FFA8FFFFFFA8FD04FFA8A8FFA8A8A8
%FFFFA8A8FFAFFFA8FFAFFFA8FD04FFA9A8FFFFFFA8FD05FFA8FFA8FFA8FF
%FFA0CAA14B204B4A4B204B26FD094B4A4B4B4B4AFD044BA09AA076A09AA0
%76A09AA076A09AA076A0C3C9A1C9FD06FFCAFFCACAA7CAA7FFFFFFA8A87D
%FFFFA8FFFF7DFFFFA8A8FFA8FFA87DA8FFA8FF7DFFA8A97DA8A8FF7DFFA8
%FFA87DA8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFC9
%FFFF20F8F827F8F8F821F827F827F827F827F827F827F827F827F8272752
%4B5227524B52F820F8F8F820F8F827FFFFFFC3CABBCFFD04CAC9FFCFFFFF
%FFA8FFA8FFA8FFFFFFA8FFA8FFFFFF7DFFA8FFA8FFA8FFA8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FFA8FFA8FF7DA8A8FFA8FFA8FFA8FFA8A8A8FFA8A8A8
%FFA8FFA8A9FFA0CFA7272026202720262027202620272026202720262027
%2026202620514B514B514B514B27F82720262027F84BA8CAC9C9A8C9CAFF
%A8FD07FFFD05A8FFFD09A87D7DA87DA87DA87DA87DA87DA87DA8A8A87DA8
%7DA87DA87DA87DA8A87D7DA87DA87DA87DA87DA87DA87DA8A8A87DA87D7D
%A8FFC9C2C94B4B4A6F4B4B4A6F4B4B4A6F4B4B4A6F4B4B4A6F4B4B4A6F4B
%4B4A4B4A4B4A4B4A4B4A6F4B4B4A6F4B4B6FC9C3C3C9FD11FFA8FFFFFFA8
%FD05FFA8FD05FFA8FFA8FFFFA8A8FFFFA8A8FFFFA8A8FFFFFFA8FFFFFFA8
%FD05FFA8FFA8FFA8A8FD04FFA8FFFFFFA8FFFFC2FFA827F820F827F820F8
%27F820F827F820F827F820F827F820F827F820F827F820F827F820F827F8
%20F827F84BCAFFCAC9CAC3CAFFA8CAA7CAA7CAA7CAA1FFFFFFA8FFA8FFA8
%A8FFA87DFFFFA8A8FFA8FF7DA8A8FFA8FF7DA8A8FF7DA8A8FF7EA8A8FFA8
%A8A8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFA8FF7D7DA8FFA8A8A8FFC9FFFF
%2020F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F8204BFFCAFFC3CA99FFCFCFCAFFCFFFCAFFFFFF
%A8FD07FFA8FFFFA8FFFFA8FFA8FFFFFFA8FFFFFFA8A8A8FFA8A8A8FFA8A8
%A8FFA8FFA8FFA8FFA8A8A8FFFFFFA8FFFFFFA8A8FFFFA8FFA8FFA8FFA8A8
%FFA0C9A14B204B204B204B204B204B204B204B204B204B204B204B204B20
%4B204B204B204B204B204B204B204B2075C3C9A1CAFD0CFFFD12A87DA8A8
%A87DA8A8A87DFD07A87DA8A8A87DA8A8A87EA87DA87DA8A8A87DA8A8A87D
%A8A8A87EA8A8A87DA8A8FD04FFFD05F827F8F8F827F8F8F827F8F8F827F8
%F8F827F8F8F827F8F8F827F8F8F827F8F8F827FD04F827FD55FF27FD29F8
%4BFD55FFFD1BF821F8F8F821FD0AF827FD54FFA827FD0BF820FD04F8FD09
%27FD08F8272752275227522752FD55FF27272752274B275227FD1152F827
%F8F8F827F8207DFD07A8A1FD54FFA8A17DA87DA87DA87D7DF82720272727
%F827527D527D527C527D52FD08F8FD08FFA8FD55FF7DA8A8A8A1A8A8A8A1
%A8A8A87DFD04A85227522752275227522727F8272727F827A8FFA8FFA8CA
%A8CAA8FD54FFA827F827F827F827F8527DA87DA77DA87DA82727F827F827
%F827F827F827F827F827F8524B5227524B52277CFD55FF52FD087DFD08FF
%A87DA87DA87DA87DA87DA87DA87DA87DA8FD08FFA8FD54FFCFA8FD10FFFD
%09A8CFA8A8A8FFA8A8A8FD5EFFA8FD11FFA8FFA8FFA8FFA8FD11FFA8FD54
%FFA8A8FFFFA8FFAFFFA8FD15FFA8FD08FFA8FFFFFFA8FD55FFA7FD19A8A7
%A8A8A87DFD07A87DFD04A8FD56FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD58FFA8FF
%A8A9A8FD04FFA8A8FFA8FFFFFFA8FFA8FFA8FD09FFA8FFFFFFA8FFA8A8A8
%FD58FF7D5252527D7D7DFFFFFF7D52277DFFFFA87D52527D7DA8FFFFA852
%52527D27A8FFFF7D5252A87D7DFD53FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:C2B385BAD047E411BB07D70EB8092B1C</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:C2B385BAD047E411BB07D70EB8092B1C</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:C2B385BAD047E411BB07D70EB8092B1C</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C2B385BAD047E411BB07D70EB8092B1C</stEvt:instanceID>
                  <stEvt:when>2014-09-29T21:04:13+09:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-09-29T21:04:13+09:00</xmp:CreateDate>
         <xmp:MetadataDate>2014-09-29T21:04:13+09:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-09-29T21:04:13+09:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>252</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK7vLSzt3ub&#xA;ueO2t46c5pWVEWpCirMQBUmmKpd/i/yl/wBXuw/6Sof+asVaPnDykASdbsAB1P1qH/mrFVh87+Sw&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -626.907 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 626.907 li
611.615 626.907 li
611.615 0 li
cp
clp
gsave
12.3301 615.732 mo
222.12 615.732 li
222.12 51.7749 li
12.3301 51.7749 li
12.3301 615.732 li
cp
clp
12.2764 51.6704 mo
12.2764 615.76 li
222.324 615.76 li
222.324 51.6704 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 626.907 ]ct
[210.048 0 0 564.09 12.2764 11.1464 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 267 
/H 641 
/M[267 0 0 -641 0 641 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 267 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 267 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 267 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 267 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNIa
JcLB&JcLB&JcLB&JcLB&JcLB&U&Y09iW/BH!=TOc!!+#AcN!qfrW(=G!$K8]!#b5*i;`lc%*nnS'Em%g
p](:3c2[h^`W,uVquG4H!=91\!!*f;jT+TH!#a&^!#a#]JcLT,!'L0MmRR@MVp@m7HATs=".raf8C9s.
W6Rp6W96\O"8`&u0^1Ot3g@rM!G-<(3;>H6Mb25S!1(ni!1*7:oJcgRqZ$UMkW/^+cT2)=Eof@J3WY%/
cT2&hc8krgk;iSFi;`j_cN!tR)"I[`!!#@2!!$H]!;-<l@Gh+c[-4^o]BQO"ZKSq#^&P_0]BHa)]B?]f
X8oiqX8o<bW;sKmW<'L<qZ$Vml(8!LX6H5VU%,2YWrT6aX6?PaX/Y?`!3,1N!35[[opPlKka):Kka)CO
#lju(!!&_VSH,SPSH,8FW;ij]VuWa`V#-qgW28^Rka):HkEkCr!2]4Lplb`T$Msf'S*>P+L;rJ1!0ZQl
!S,fdcN(u^[dLR)cb8SO!3ta+!5I`9!,^q2!5AGDlX^('q>^Mmkue$jX6EaeD<SJ1]"@F@qmZX2kbA0d
W9L&WU$*U!T]dKu*:XU8&-/9b&-7q'qZ$V\kskbGRH[3A=m2jbX8JsbW;rUTO9)2Dl&Yn)kSXAZkSX@8
rXA*$!/KbH!IY:O!!&/G8HDGKkt(kYm\K`Us/5+W!1i>6!MP\@NW>"$)$#Qa)>G'L(?c/,L?K$HI1#iO
!*\Rd!,:Zt!!E,'m]cf.`p'`.O6BIBVd\gf!(c;R!(Hked/X/2kPtT1q>^N#kbA-fn"]cT!3"2X!57U.
!57U.!4q\Ap`9F.kT0^BkR@N]kR@QT%Jp,*T]hI;WVhkGO8tTlXT5HdWWB3%kc4UulPBP[kSF45kQq6E
kQq9:$2X]&SaVR7N<#d=N<#-eWrT-_VZEcqnu)8\!2err!/ftV!#4W(!/9VD!IG1N!!%rT:[V!Z;6f@]
!+O79!8H_\"5D)DbNm=O^ZYXt7Etl53TpGC,l.K@\Ve/Y^Atq12?9T;2?55j$NQ[g$hXl.O:D'e!3)<e
dB*DMkUQXqkUQWUkQh0DkQh38$2X]&V5101WrT-_.fbUn.f^^a$2"T)L$/gDH4'NL!5>`#\)m\EkPtT^
k5a]G!'06C!$qC@!4fhYWkSPIk]$U*oPsPD!*JG%!1rBk"-a5p!;ultWJ@V7XT5Hd>l^GZ>l[@X&cdgZ
')3(?IgPuP!2Yp\e>iSLkZn1WkZn0ZkS!rPrY+T2!IbCQ!!'a,k/ZTagunnAIcpt)!;HNo5j/1J/G]>H
\ZW]Y^Au"3YQ28uYQ1?q<9mK`Wp!C_V%*;%!3*T4XfVT)kb%pUnY#ZM!0-2/!1;t:!Kd]c!!&k:X.ZKn
Wp#uRW;`@RSH+T36i`J86ii;TqZ$W1e`N(X!9*I&pkAdik_9(-kPtTqkPtT^q>^N+ikOor!5@[,s1@L)
kdLT)\ELF$^X9dr]',ad\*0FbZjlm4!3,FhiN3*]kbnN_Wp-G^Wp$A^X/YZgpScB>!3>=A!3#+>!Mp,"
!!&knX440MWT^/XVs0uWV<FZVW2-2`l_=HUcDprDk_K57k_K54!"/T'!5?eA!8ZkP!QNCK]`>G0XSAjt
c*?N7!3OQ/!5dqd!3Pl[og/YQq>^N*ke$o/l+@#+k^ii*UZm@1JGsu_I0$F)l$WP^cG'@lkdgc-kdgf.
%Jp,*WT^A_XQcbcWp"7"Llh1DphTqGk\(!cEp76;CX0$^XRrRdWrT9bWrNJ'!!&hYVuWg]VuWXWD$,KO
D/JTU!,Uk5!LIikB`MtpWrT-_VuWg\Vu`k)qZ$W$kfj+^l-04:nIkU0!Bj6C&c`I+$it8_kmRP&g?/(j
!8?YT!8QeV!8%2Mr;Zi&kbA-Tl(\6IkW/`?<TuOE2srO"1]^c@kqiB$UVHQ<!"Jf*!2/P;!0l`0!/9Vh
!C'!:/c[F!../Ja8M00T!%kFWlE($mqZ$Vek`#S)l&>[skUlm#7IMl+/c[Hd-ilplkpQN`]rTti!"/T'
!/Ti7!*\V_!&rj:\H'e7d,t0)!2\"<!(uZ"i>hn9c4U*qf>#5<!"Jf*!0PSm!'9ume.r#tc40ggjK5km
!"&N&!0>Yrq`t3Dc5$Bnc4'afnZ/Xi!"/T'!*/"YK`M,7SEBYJ!1iQui>_h9c4Bsaf*1pQ!">:1!"Jf*
!/LIee.hrtc3s[[j94cO!",-r!"&N&!/Af8!#3]e!"&0!h?<lcVQ9?i!"/T'!'ceMciCE7kN;U@!1D+=
f*M-W!!gdP!!pl/!0Qo@gR&#K%Jp,*K['h`#3uHn"jR5N#0qDmHd76EU^?nu!/&Q%nHReRc3++Og33.4
!.3"C"/#u$!;ult1ku(h!6uVc,hFgH1'![;!!&D3"jI,G!Rq,M!mVqh-KHlH0EI[QqZ$VKc32Vuq?"qC
!!CLa!$(MThB`2Y$2X]&K$FPY!pp'7!<<5I)?:fW-IF.@KaR\W!&D.dJcN^h!'U/Y!11t3qZ*5gj9FoS
!!pjY!Kdig!!%T#!Vuhb!:^9L#0mPVHO9QL!.a&0m/`UTrW^^Rc3XMu$Msf'0CJmm!0@0\,l.K@Qi$i8
!9sR/!R:`HM?"+_!!%S-!8RY"!SRVJ!WdEMqZ$VHQN5A4blQu/kQ1d-$Msf'0;JT"!8@JR*;TX8Qa$OB
!6tQFM@KF_!.hiaJcNUe"*=hL!;ultJ;4,V!;HNpFUJ!G!&'Q:JcP*:!#k\6!10AZJcOX-!K%?`!!%SQ
!.k3u!!.0JqZ$VH])[E__uKg\$Msf'0?=-F!4Mq.)YsF6Qdl(f!8[\U!mUrMN",Xa!.j,0JcO0u!!:FK
!I"kI!!%Q<!.k3h!!!)G"T`cRqZ$ULquD<KK)blmq>^M^M?'XV!!V'goaq4f%Jp,*JX6A-!!!/b%Hn6%
I0ocN!.^jFO8o7aoF9Oa!IY=P!!"[W!.k3r!!"DC!!&A2!q?;j!SRPH!!!2J(B]m2!!)rt!.rJu\cL^i
c2[hJf+Ici!IkFQ!!%Sq"31Gk!R:ZF"lp9]&HR=fqZ$UNT`BZEh>dO,q>^M_c3</2\H^=[!!W?;d1ubI
%Jp,*K?aYg#-8$\!VcZq"jRY[IgPuP!.rK"qZ`Ysj8nQI!!UX[!IbCQ!!"e)!.k3N!!"MF!!&JI$18*"
#gNYT#gE\T"jmJR#gNq]Oq%9g!/9kHi<K>ec341Pf*D$Tc341Pc3jZ#$2X]&KDYu(#L!D5#O2Q>"TSbP
$NPMR$Msf'22VBc!;-<l-Md]BREc)`#lkD5&'tj4#QP1o%d4B'OU_0f!//W%f*D'U!"-sYc3=7RoEs=[
!IG.M!!%Ys#36$T#65(T%*f%W#L3\XHOBWM!&VCiJcNUe!$qODr;Zhec4A21m18+cc3OCWf+Ici!Kmoh
!!%f"$dK+U$e#L/"onqi%I4H(I0ocN!/8`,!"@?bq?tOVc3=7SnI==a!IY=P!!#$^!.k3u!!"DC!!&M7
%fd1/(Z?/1(<mNE#l"Z*%F,mnPn!Tj!/Jl.!"A`:e.DZlbn&k>lNR=qc4g;1$2X]&L"-V.%*]C/&+Kk\
"oo"U'`iglqZ$UViW+Q1SH&XBq>^McmhXjt!#X!,!$Kl3p_j,Mc3XI^c6iX]%Jp,*M#7h6&-*?g*<6u<
'^HG5'@$g_%*fmoK`DGV!!%`!&HEKi)uplH']'N('@$g_%,)cq*W^m#qZ$UZQN2U;kPtT?q>^MccPZ^%
f.QhN!%6&4!$'8o!#G2VgF<5m%Jp,*LsH_7']^M),6/e1('#)p$31X_+9@0&qZ$VMcP$9nnKZm8!$9B#
g'dQ]!"mL!",.'^!;ult4bj#h!;HNo2u3LST$JP[,L/.H0)HpC,gI/*)WW10,QX8AqZ$VQcPZ^%e1(8D
!$f`/c4BsinK$I,!J:^U!!%c")?:`8.IJVb--[FT&HEOE*75`,JdVAT!'e'qJcN^h!&FBN!2%Re!%[q)
e2@:_bq.oslQ-$Hc5QeL%Jp,*Mq&sH+O2J;-I!b)(Z#r.(=!TpJI22R!/TVWm3'\)!%6#8rYNru!#Eip
!ItOS!!#@S!.k34!!"YJ!!&\i/CZ3N/^?9T2<6C!/c[6D&HIso%Jp,*N6WWm.f_$g,H;sg*81kp%0:k`
qZ$VRcQW?6c7ArEr[#o;c6E<0k7-Va!IY=P!!#E_!.k4*!!"JE!!&\;0'"nU2#o>T0$Z?T.aAJ(OU_0f
!0#2JnL<<D!%#l7g+)bF!$KPn"+(=S!;ultMU*LI--dq>-LN,:,L._<+P-tq$3>J\qZ$UbPQ6:8lMpo1
q>^Mhc8O0.q_J4*c7ArIc8kqXnIOIe!Kmoh!!&#(.cD`B-3,=9,0hb?,Q8(u$NYV]qZ$VSc7/0/i?nUO
c6<65f.HbL!$fbt!IG1N!!#R2!.k3[!!"AB!!&_C2TI]U0[;-J/+GaY49.1_'`jO.qZ$VUi[aCHc7/f?
bom!>d4bPIc49r*$2X]&Msi1S/']RD-J'C7+O2Y@-dE8(IL>rP!(d"fJcLE'!%RgF!2@b"c8P_ZnLEBF
!%Z>U!&N=Koc+!t%Jp,*O3T?&.f^pq+OD7V/c[6]($HA5JI22R!0#2Tf.?\J!%6#6c7T)EoG60s!ItOS
!!#Wr!.k3r!!"YJ!!&b=3q5;g3rh._.bZlT2uke\+p42A!!)rt!0>GX!%uPM!%I=Yi#p;r!%?G<p_s6d
$2X]&N6a'U0$Z-N.Jk7:+O2P=.-)?5)ZbNtqZ$UgT`BZEh>dO2q>^Mjc9pPUmQ^b3c7K#Kc9M@grZ9H.
!LF8m!!&,+2=<9Z1B8uO+oik>1\`a+/'\q3JI22R!0,8^q_Q_X!%lG?j>6*X!%cD3!ItOS!!#mH!.k3N
!!"\K!!&eR7IESE7*\7%43]DW9@6B450b,KPn!Tj!0HY.iAU`oc8YeWf-C#7c9)(]c4pA2$2X]&NVk`a
2pOA_0]XJE,60%84TI7_('&jb$Msf';2P@*!;-<l0)>PJV9V`Z9`RNZ1XRuY29oY29BR/U(]fj1qZ$VY
UceE7!&VtJ!%H2g!'KldgCaO:$2X]&Nj1b54TI=a-NGU@:B3Q''*3OhqZ$Uq^&Y,4g&^jIbl@_prW)ls
!2\"7!):a>!))`@iAps$c@>n.f,=?$!L+&j!!&/,4O-=p4Spb\/c[TNCB.;o'C-;4IgPuP!05>fe40=)
!'SU[!&2]7!*&J%h@fp>$Msf'<3?53!6u)T!WE)H!!"VI!!&kA:]OA\>N&cd:sM-&5M(qjNW=.G*W_T:
qZ$VYc9V7ue4BX*c7]/QjE^':!+4"f!J(RS!!&)162NqJ6I&1'6-_.a1\#_HGQ;-s(BK$nqZ$UriW+Z4
rZTZ4!!^^K!&+0K!3#@$i+gPQ!+=DSpeLlecB80Rc6NFY%Jp,*QMab3<R+VF:#nP)56*soI/mm)*<:`m
$2X]&P+,MQ:@UR*56+$qI/mm5*;(9PK*qJU!+D>u!!3'!ciD??!".lhkPtT>q>^MncXQrdf5p_.!,Be\
!*RU3!.FJlgF`Mr%Jp,*Pg<,*;<2*M?N=*O70#j'IfO0-,6<Q+qZ$VYcVX[@nR13]!*@H9!(kmnomQmT
c6EFG$31))!!$9L!R:lL!q$'H!7!+q%+bLS!!#+W!!'+HJH1;IM#`#%CXd,"D9e@GK&fSj9*(dsqZ$Vb
c>;!Nqf2[Nc;t!Kc@5h3nN>Yj!K[Wb!!&A3C]J>2EpdrJC!Kf\>0_QsD>l]G4TUNLqZ$V7cO^'hmMOn"
!"I0Tf.?\J!#!QW!)NFk!3a\4qj>m#!0#3H!-mRml^7a3c=6mQ%Jp,*SCN,cJ'NZHGKsUs@e#-.KE-5A
:B?^eqZ$VaidU9Dc@Q%>c"$a*d=VFBc;=V*$Msf'I.&QD.KD$F1&rBI#l"Z*$-k@-*mOcd?MXX%Z2C9E
TE(_3VuWFML?aN=UB$k1L&eCW%Jp,*T[/StO3X$kMXbWADZFe&O8t'iDtS#LSdG8o!1hGo!0#3d!/UVn
cu@9i!/BZUk\pQl$Msf'LsJQk9%RPI@K8[='`]#p;#iiQ(#'H'JGK6GZHoQOXQ6VOYQ1WIPQ6uoV?!C:
RfTl*qZ$Vjc^=d%nY"a3!1(o[!.ijfoofB;cA)Lu#lju(!!&V:Q2m8sSH+i@J)PkWJBj5VNRrmZK`RkS
qZ$V\cYEN!c@u=.q^p;L!%uQ!!)_f;lT"s7q>^N(cF;<7qmld7c)/dg!3l"&hR<Nt%Jp,*VU)1@WSsoG
WrT!@PKoTsTDke:Vu`q*qZ$Vjc_CK9m\f$A!27Z!f9l?#!1_?1!N6A&!!'"EX8oI$^sp."S'G%7=QFPh
Er^d:XT6ZC!!'OZ^&#Ff^AtpkZLP3VYlM8X^An`?!!&tWXR3+7XT5EHU&L_4TE(q8XT/\)!!&h`Wo0o&
WrT*MT(ei%SH,J1WrNM(!!'_1gsb'(joEZeP3S4UOT;N.k5#&X\XU>6]^`Gd[a)5[\D"^i^An`?!!'!f
XT5F$VpM?eU]@CWXlled$2X]&V510eWrT-DUX#P5V=^hBWrNM(!!'a<k3M.0dES]:V?"<Sk5#&X\\>i8
^Atsl\_=Xf\cB@e^B+iE!;ultWLL!iXR<+HWm.TrXnSpt$2X]&V44LcWV`RAVTl(#X6Q_c$Msf'^7j]d
joF/\^<XRqcLL&Qk5#&X\ZW^8^R2_6^X0^q%Jp,*WOo:kXeMokXNdjI$2X]&V9#^eWrT0(WTpJ-WrNM(
!!'a`k/ZTagqD7peH"@Kk5#&X\`1AU^RW%=%Jp,*WUHs@XcKRa$2X]&V>RBGX+IAP$Msf'^5D')k4Ig4
!!'Qr^Oj5`^An`?!!'!oXb*\/XT/\)!!&k#X+ICsWrNM(!!'aIk(;a2k5GAZ!!'Qb^Oj5p^An`?!!'!_
Xb*\?XT/\)!!&jhX+ID.WrNM(!!'a9k(;aBk5#&X\\#V.^Vded%Jp,*WQ;2nXgY>3$2X]&V:DVuX/W-"
$Msf'^>e:,k+(T1!!'Ru^Oj4]^An`?!!'"rXb*[,XT/\)!!&jQX+IDEWrNM(!!'a"k(;aYk5#&X\YQul
^Y6F&%Jp,*WNiRWXj*sJ$2X]&V7s!^X2(b;$31))!!'`gk(;aik5#&X\Wjj\^ZrQ6%Jp,*WM-GGXkg)Z
$2X]&V66kNX3dmI$Msf'^:WNZk/6?X!!'RN^Oj5/^An`?!!'"KXb*[SXT/\)!!&kTX+ICBWrNM(!!'b%
k(;`Vk5#&X\bs3o^Oj3#%Jp,*WJ[g0Xn8^q$2X]&V3e67X66M`$Msf'^80nCk1\to!!'R7^Oj5F^An`?
!!'"4Xb*[jXTAe/!;ultV2)+'X7rXp$Msf'^6Ic3k3D+*!!'R'^Oj5V^An`?!!'"$Xb*\%XT/\)!!&k-
X+ICiWrNM(!!'aSk(;a(k5#&X\^eHH^T"sJ%Jp,*WT(%3XdlKn$2X]&V=1I:X,j:]$Msf'^AR,Fk(;al
!!'Qe^Oj5m^An`?!!'!bXb*\<XT/\)!!&jkX+ID+WrNM(!!'a<k(;a?k5#&X\\>h1^VISc%0-D,!!'!R
Xb*\LXT/\)!!&j[X+ID;WrNM(!!'a,k(;aOk5#&X\ZW]!^X0^q%Jp,*WOo9aXi%7@$2X]&V9#]hX1#&/
$Msf'^=D@tk,IM>!!'Rh^Oj4j^An`?!!'"eXb*[9XT/\)!!&knX+IC(WrNM(!!'`jk(;afk5#&X\X1'_
^ZW?3%Jp,*WMHYJXkKlW$2X]&V6R(QX3I[F$Msf'^:r`]k.p-Y!;ult\VIqO^\>JC%Jp,*WKaN:Xm3"g
$2X]&V4jrAX50fV$Msf'^96UMk0W8e!!'RA^Oj5<^An`?!!'">Xb*[`XT/\)!!&kGX+ICOWrNM(!!'am
k(;`ck5#&X\aR:b^Q6,0%Jp,*WVilMXb*YT$2X]&V2D=*X7WFm$Msf'^6du6k3(n'!!'R*^Oj5S^An`?
!!'"'Xb*\"XT/\)!!&k0X+ICfWr`V.!;ult^5(j&k4e$7!!'Qo^Oj5c^An`?!!'!lXb*\2XT/\)!!&ju
X+ID!WrNM(!!'aFk(;a5k5#&X\]DO;^UClW%Jp,*WR\,&Xf8E&$2X]&V;eP-X.63j$Msf'^@139k)\[$
!!'S-^Oj4P^An`?!!'!UXb*\IXT/\)!!&j^X+ID8WrNM(!!'a/k(;aLk5#&X\Zro$^WjLn%Jp,*WP5Kd
Xh_%?#lju(!!&jNX+IDHWrNM(!!'`tk(;a\k5#&X\Y6ci^YQX)%Jp,*WNN@TXjF0M$2X]&V7Wd[X2Ct<
$Msf'^<#Ggk-jFK!!'R[^Oj5"^An`?!!'"XXb*[FXT/\)!!&kaX+IC5WrNM(!!'b2k(;`Ik5#&X\Ve/X
^WsIl^"U6n^An`?!!'!bXjF2pXQQ_KXT/\)!!&jkX2D!`W;rsjX4jTS$Msf'^9Qh/k0DZ\gs,!X!!'RD
^T,$K^=ogaYQ2,V^B+iE!;ultWJ@V7XT5HJTE(k@XnSpt$2X]&V3J%1WrT0FSH,DFX6Q_c$Msf'^7j]0
joFAcL&e4Ck2#1r!!'RU^Au",^$`Q6^<XIn^<Vi@VZ+?W^An`?!!'"DXmW:LXNdjIXOhgoHN98SXT/\)
!!&kAX88jFWm7XFWT8ElHN9/PWrNM(!!'a`k549@j3HE[hp1?ah=2cI,QLlik5#&X\)Osd\H'.bZ2hD[
^AttHI*m<AS'A\J%Jp,*W:-_DWQq1;W7S0HXT5HJB)m_3XT/\)!!&elV:;=AUs>P3Uu\TBWrT0FBE3b2
WrNM(!!'+H^&YaiOoW2ck2,5#gs-9-3SNWfk5#&XZHoKMW6V+;Z2VMc^AtsmH2sDs^ZW?3%Jp,*U<f/+
QIh2mNrYiuXT5HJAH7GVXkKlW$2X]&T$NT#P2qSfMu]EoWrT0FAcRP0WrNM(!!&80AH60/9&</?MpCGb
gtE//$NN-1k5GAZ!!'4KPQ7&qT`D@c^Yup-^<VK6U"@'R^An`?!!&P8IfP&FN<#XKXjjHQXNkhdNT@5,
XT/\)!!&G5IK4oJMu/D4S^+89WQoMaMt*k(WrNM(!!%Dm/-%?^8FB"KMpCGbh9Hf:8H.buk5#&XXj<.1
Q0t^3WrTNP^Au""QhZmIW6N'W%Jp,*SBlT`JbtkbR/j).XlP'!JH2"\XT/\)!!&G;IJ\EmJBjD[U!B\=
WptVrJ,kbWWrNM(!!%?)-gi>^0$\/2U<_m$hu5:V0*#G*k5#&XZ1"OJV#[I>])]Lq]D/u<]$@/QYg'o_
%Jp,*T_sr%OT:]lX5p;GWm6h/TZsS=$2X]&S^3;rP0KrqVr"<OW6UM*S_C.:WrNM(!!%r';ugCQcMc#8
blGi1=oa<?k3(n'!7%qO[F`1g^Atsl\B_>Z\+IGh^An`?!!&kAU]@7PXm<(hXNdcjTE(q8XT/\)!6q5-
X59lWWQq:>V:qL5SH,G0Wr`V.!;ultU<f2,Vp=E)e*a['[K*\[OT;K7k4e$7!!'OT]E#Xj^AttE]$n78
^#Zrn^An`?!!&tCXOOBKXj*okXRWFKXT/\)!!&h?WSsoGWrT-EVZ<[?WW&sFWrNM(!!'^Yg&Tmqk2GG&
gs3\8_UmQ:gWemW!!'OM^!s^q]ZmtI^UClW%Jp,*WR\-JXj*pIX3RXDWU[*iXT/\)!!&hSWOf&/W6V1=
V>dNcWrNM(!!'V!gu7&5gAoUP^%]4.k5#&X\,<bb\B_P`[H+^\ZiIMZ^AtplYlM?8%Jp,*W6VEgW:6Y>
V9Z1CX4j6>TE2)"qZ$VkcD8a\rLqT3cDprEkFLh-!N6A&!!'+G[b%VUX8o0DSH,>.joEg$Mqa-i_YO64
Yg8j?S)fh"PQ7,sTE(\2^At[eD#p[HqZ$VgcA1q>hL>NYcAVa_g9(%M!2[tE".9Gq!;ultS^)u8IK5#g
MW'EmMpA@'U"<ND>60urqZ$VKcT_Ckc7/fNqaAq%!(bDt!2nl\lN@3%q>^Msc[u4Le9Uq:!.`@P!0,:<
!3u&bhFI[A%Jp,*Ra5gNCuJpmA,pDjF9$O1XT5$n370\dNsY[`!12#L!,_.7iFDq(c?0,2f;eVG!1hCr
!K7B_!!$r`'EAdC$.K7]%aGsm+QVSKirG4e!!#Xf!!&qI@f'U7?d;@G<mG7VC%8=^XT4^5-iobGqZ$V\
i_Jo:!)1[#!(>+0!*0#gd@:2fc5m"?$2X]&Omc*):B4,74TIt';ts8k<R.!4JBf2:K*qJU!*oF&e,dbn
j8nNHc?]IDc2[i%q>^MlcVX[<c9_M'nQ=XM!*da<!.iiLocsR+%Jp,*Oj?8m5L)(c3rVUr7K?$*LB)/R
*U"LEKF.MU!0>Gm!'f'lpbVt4c:@q-c@u=8oGlU*!J:aV!!$$(!4DmQ3rfi;!!"kP!!&b=47PGi49.^n
8cVT>L@p9$DpBm9Rgf>tr;ZhYc7dHs!&X+)iAps$c>N\df-9u6!J_!Y!!%tI0E<s,44H=l4jJ!H>i[*p
+p!B)qZ$UiT`E(4c4p<_nGqDG!'0lU!2@e%!']@2m7,Ai!(bCe!-/!!d5h<"%Jp,*O3]K[1%%$Z36jG_
37i'CD?*tf/HL_8qZ$VTcS,>Sq`*%ac8P_ajDF4"!+!l%!Jh*[!!#^C!0R?P'&F6$"jR)J5l(H\UZ+c2
7K?'+AcQ2`;ufqtFO>11C<f?NU(-u"!0HY/iA^fuc;O^:f0]7!!(>+?!*.<(!KRQa!!&#V37Knf43ge*
:#n_.6i][$?iX9R3WP*=$Msf';9f0e!Up*F!6tcK!nmYI!!#Xf!!&nB>QA6YH2r*eCs["DAH5uu7Hd/@
Tagl!!0kf%!)D-WpgjG6bui7g!(ulBgG].m$2X]&Oj?]$:ZQ-RAcQ8a=jBqG9[5QtM[K=]!*[\K!!2Tt
h?s;fblcZ#o`<;;!(d(hr;ZhscZ&r*c@,bAmX!f;c<^KMf/WOb!M0bt!!&A3>l\3VB`MiDA^k8kB$O$L
6KB]`/-1V7qZ$V[cWpNWe7nbnc">6q!(??/hCSba$Msf'A^1J<%IOZ*%*f4\$H`@r!!#:\!!'%2Fl@HC
HHq!?Ib.`t=TD1A/-24LqZ$V`aC3S,!+sMk!,:LalULq;c6<:E$2X]&Pgs3_@/sobC&hu<8`!#=4jG5P
KaR\W!,(9q\cr-Ac40g`rW&Jh!'0lU!3#@&iG8L0c=d2pf6-h1c<C9Ec7T-e%Jp,*QMak7=9)FJ;ZKt]
@Hq:H8H;!#,63K!$2X]&P0[82=O'kG>4H%W@EqIF5M@FV,lr`-qZ$V*c3)>m!!E3)cj$fVkPtTEq>^Mn
cXd)ef44Sc!+a>dc=-cQoJ##R!LsVr!!&;1;#jGR:[:dV:sDqa:&mW+,lrf.qZ$VZcVjgAnPS.?!)h'@
g/%B;!(>*Z",.'^!;ult?AAQ`!S.8G!!#1Y!!&tCCX-bsCAVJh@a8Nb>3%m54oq;cqZ$V^c;rFtqcNo!
btcP]!(l]8hD#%i$2X]&P0R.f>4,Po=3XOd;ZKGh1=7iXM@04\!+F.SmK;DM!!8nrp]8V>!(H_a!3=Fn
!.4Tfe9Ct5c"Q0QlY6E1c;anA%Jp,*RFPsHB?jrd?-Q=<<Sg^U:sMH0OU:mb!0uPWmUuT5c=6i[buF[D
d8p<Gc:%bp$Msf'C$uGf$dK%Y"kNeL!R:`H!R:ZF<Vc[qXSd_#K)gMKGQ;dFC[,]\D#e@s@K<;+%Jp,*
Ra5gNCsHJi?L_+Q=3aqK<n^=A:'$UdqZ$V_cY``"c=6i\r`INLc<:3Lk>1;;!Kmfe!!$r`'EAct$2=f,
"e#Mn!qZNJ!<?I&!!'(GJH12\B'X%/ABeK,DZFn)IfZY\qZ$VacYNSrnPe:C!)Up6g04/Q!+=)e".TYt
!;ultQd9IJC<fcY;XR9;:!QuD@+T/gC&s_0qZ$V5cO^'dblR\Adf@Ys!!_KolOEo@q>^MqcZT;/e5=7`
!)h*\!.XO3hOjnV%Jp,*R*T1@?K"/\5QF-r=o`=:N7!RbU^?nu!0kf>!+,([X[3"Tf3J)U!,Bf:!MKkt
!!$ZX#QP&*!1s8P"mZ<l%aIHBVYU8mVq#;S@fTi[7F"@&8F^<KAcR\5\cKJRqZ$V\i_Su<!)(QqbrG]$
d8L$dcDgoH$2X]&Omc0+;#j>82qL%a2ul"b;uh$cV?*Y'qZ$V$quP:JY5mhfc2dn`cG'A0q>^MmcW1$D
c9;4jnN5Sh!'JP2!/fLFoY1A8qZ$V[cU7b"c7o;Qr\)YP!&2\i!-ID+kH+^jqZ$VXcUIn%f/!+VbV7=7
!-Rq7g8b2\qZ$UsYlKCV!#j,Eq>^MlcVFO8nN5Sh!'&7[!&WD,ohb^Ac+a;h!!)rt!0PSl!'JO[!%dOb
i?eOQc9MAHf<+eL!"&N&!0>Gj!'SU]!%n'qe0b5Ec9_MKjK%RH!"/T'!*,]mP5kRsn`JZiq>^MmcW'sB
iBHZn!'&7W!&2\i!.b'`d(]PiqZ$V[cU7aumP3ZT!%cD@!%$5Xpc8Cjc)gsPqZ$VXcU@h#q_HYV!%lJB
!%-bflT,#^c)UgOqZ$UseGt1$h>dNdc0"j&!2eaUmSs6ac9hRnc8,GWr]ALh!.)o)!"Jf*!0ck>iC!Z2
c8>STf-^8>!%?,G!+sKX!"&N&!0I+Ie3s@(c8GYVj<s7@!%?,H!+sKV!"/T'!*4sWWW3#+g?/%iq>^Mm
cWC0Jc9qXrr\i+]c7As!kH3sM!P&[:!!&5/7K>j.2>B$/1!M5o+ok4,S(jD5W<rG%!0GMt!(Q$.lSef!
bq%'`!(tP(!Mp/#!!$-8!.k4C!7#ii^A\-2!!&nB<<,nA2ukf'/Dr)),QL'\JbXcsY7:@/!0b_s!'ng\
!%@^gdj!'X!&EVOlYHTl$2X]&OO$>q6I[Ua/H@3D,0h/.1\#;<C]Tq2qZ$UsXoO.UrXdHg!.=VC!2@e!
!&j6bi>_h>bp1gap`]\bc7K'd%Jp,*O3]?W.f0t1'`])T)s\FC*6o`/LC*hX!0#G[q^hdsc5$Bs]c5fI
!$0?0!JLmX!!#XN!.k3A!!#%U!!&Y[.cDiW-I*/&&_@Zj&c`Tj+oi\0('0X/qZ$VSr#jK3!$'8m!"J!!
lOEn*c5Qa"c4Bu*!"&N&!/SrD!$0>nn."4`!"[?o!#O?$oaq4R$Msf'6C.\(!9aC_.f',FRa2<@#hK(O
!!!&F!WWAK/c[!c!8@JSM@KF_!/8`)!!_KalMpncc3"%Lc6E<+c2[le$2X]&K?jf'#4V]M!!!&F!rrJX
,P<8](sW*`FUA*Kr;ZgTLB)o+p](:4q>^M_cNO:O`rOTh!!:Fu!$C8%lMpsC%Jp,*K?aVL!65'>!mW"j
)"@U_!!.0JqZ$VJcNO:Oi;gFh!!:Fj!#Y\8d/X2i$Msf'1:mO<!5nj;)YsF6QcK0"!!!)]0'b+i+3jie
M@KF_!.iZ#P5kRanKZm8!#Wu]!H\YF!!%Q/!/:IR!raFl,6/S+!!.3LqZ$ULmf7q>O8o8!q>^M^quD<K
lMpndc78l8c2[j%!"Jf*!.g"-h>dNWc6**&g&UdG!H\YF!!%P9!7:cH!mVng(?Y\]!!.3LqZ$ULU]>uH
gAh3lq>^M^c2lu.lN7+gc2dnHc6iT2c2n$(%Jp,*J^+;d"Ps7]"3poI!nn^g*WQo"!X!QO!!)rt!.`>q
bldA7i;io[c5ls#f)k^K!HebH!!"[:!.k4:!!"#8!!&D3#Lj+X$31=V!rrJL,QJhS$/PshNXbjc!/&Q#
i<\iW!!UUMc5cm"rWggU!I5"K!!%Vr#4;cU#QP(S!rrJU*;CKR(=!-cGmaEK!&DUqJcN7[!$_7>!2]Wh
!$g2(q[!60c4'a[c3++NnK?[2!#sAs!(?c`!Mp8&!!&/[4ocPb#OVfs#gN_V#L*DN):9<%'[mBh2>oiB
OU:mb!07"A!#tP8i<K>gc3aOVf*(jO!!UXc!#<rj!&sjD!KINa!!$!r!.k3'!!$!p!!';&VZ9]G#QP4W
&HE=2#i,d3&-*<r(A\dHT)G_k\./<8!20:U!(,0>!!pjZ!"/]0cj%c(!"J*&m198SrL3he$2X]&Sc+]O
7+;D@#hKO\%0-d\#0mVW%J17j&HIRaQiX#jqZ$VYrEcl3JcO7"!'gF*!584/!12"4!!_sPhDYEec5cm)
g&UdG!!pjp".9Su!;ultJ^4>s#0n_!,OQ?+('#)p!!!5T)u(?QKF.MU!.`Ar!!^_"!$h@Vdh^4/!!_L'
lPfkW$Msf'0;/At!8[\U2#71PRa2?A&)f,./H@9G,QK(7!!!6&*75`,Pn!Tj!/8`)!"83=i?A7Ec5cm(
f)YRG!!^^`!J(RS!!%Yt#lkA1,Ldq<+O1r,)rq"b!!!5K('/pmqZ$UReGt1$WW3#Oq>^Mei[!q;!$]](
!#s3-!$V=Bd/a4Nc40l;%Jp,*MXMSE*<7&(&-*Er)u(?P)9r6_"O7>THO9QL!/UOme/SH-c4L$kj;[D(
!#j,`!!UXU!.+\QqZ$U]M?&5.o`+t;q>^MicTD1cc3F=VrXdHg!"[?\!!hZjkQM!G%Jp,*O3]K[.b=k!
"TShR$ig[\"oni!"PX%[G7"-H!0#5X!%Ht5lNR=pbm_i$c345l$Msf'9YLLY!5SX8*rZ0<!!&kA:&mW+
!!!&f!oX1\"3qJY%+bLS!!.rdqZ$VYcTV=cc2[hFqZG=M!!LRV!".celMps-$2X]&NmBlh1t2O&!!!&E
"3q>U$1S#P!!.3LqZ$UqXoO%Rd/X.bq>^MicStnYmJs?h!!1[ep_Ei?c2[m&%Jp,*O3]?W-2R\8!!!&\
&F0l-$dJ_QF:%gE!0#G[q^hdpRK*<gnIaUi!"7'P!HebH!!#XN!.k3A!!!r6!!&SY*T8"=)5@3,!!!&F
&c`Bd!!.rdqZ$VOr"dct!#)R:lMpncc40g\c2[id!"&N&!/Af8!#*$Gh>dNVc4'a\g&UdG!HebH!!#6M
!.k47!!!r6!!&G4#hK'o!6t`J"S;]K!!.rdqZ$VLc3E>0[K+SV!!LRI!H\YF!!%Ys#4V\m!87VL"TS\N
!!@?N!!)rt!&TH2JcPQG!#k\6!11t3`rL\klMpsC%Jp,*J^+;G!.k4-!!.0JqZ$VHc2ll(JcO0u!HebH
!!"[a!.k3h!!!r6!!&A,!.k3[!!.rdqZ$VIeGt1$WW3'A$2X]&JDpQ\!1a)jFUJ!G!&*d@JcLl4!#k\6
!13T`JcLE'!/^acqZ$VIM?&5.o`,#7$2X]&J<p7f!9aC`FUJ!G!&(,JJcOO*!#k\6!11t2j9"TJR/kM4
!K%?`!!%Sq!:^-H!i>t6!!@<L!!)rt!.`>pbl[;5JcPQG!HebH!!"[:!.k4:!!!r6!!&A3!!!&L#Q"`+
#0d:r!!!&i!o<tZN",Xa!.iGr!!2$^mKERpbll;l!!3'#d/j>k$2X]&JBn2q!U^0M#0d;&!;HNo!R:`I
Fpe*H!&)CnJcN7[!$1n9!1D@Bq?P:MbQ[M:WW3'W%Jp,*K]31&"jR;P"jI2L!1a)jF:%gE!/'_EXTm>[
pB?uc!HebH!!"kR!.k3'!!!r6!!&M7'`\l[!SmdR!;-<mM@KF_!/Jl2!"R-PciLHQkPtX*$2X]&L<gD2
%G(Wu!Pe]i!!.3LqZ$UXYlK@Uc2[h_q>^MdcPcd!nGn.@_#ORp%0-D,!!%f#'EA]U!.k4G!!.0JqZ$VN
cP-?k`rL\klMps.$Msf'5G8(/!8[\U)YsF6S'MZH&)dM?!7:cIM@KF_!/Jl0!"82pJcN^h!H\YF!!%`!
%0-e5!.k3[!!.3LqZ$UVeGt1$WW3#;q>^M_iW\`R!!^^]!"@*UrW&Jh!K%?`!!%Z?"Q9I`#0m\Y$J,FT
"I];kF:%gE!.t+Pe-,gVc4'a[j9=fPRK*>1!"/T'!&BE3JcPHD!#k\6!12"3!!LRj!#khId163eblHo-
kQ(^A%Jp,*J^4;r"P4Od)#tAr$NLOY!;$<H!<I9KqZ$VHcN!qJj;R>&!#3ZcblH#i!HebH!!"[d!.k3e
!!!r:!;ultREl';$dLX11[ZdP.f_!C!!!)P#5AB'N=Gab!//Z&!!pk#!%.Rce0"`4c2[hGj9FoS!I"kI
!!%Yt"ontZ/,Lgs-dEh7*mO`c!q?KO"p&oTqZ$UQXoO%Rd/X.hq>^MecQ*!-mOmEMc78lCf)YRG!!:FO
!KIWd!!%l%('#3K,L[m_+93JD!:'Ub"3q)OGmX?J!/B#>q\B/Kc6WH8c6**.nGqDG!!CLN!I5%L!!#7C
!.k3A!!"5>!!&e_7H$Z850Xkp(&/LD'@$RX!mV&PNXbjc!0I+;e2I@^bn/qHl4;/?!!CLN!-nPNqZ$VU
cSkhZbn9IWh@KYtc2[hHg'73S!I5%L!!#l_!.k47!!"5>!!&kA9)q<1#5AB&#gN_V#gNDM!qZ]O"p'\m
qZ$VYcTD1aj9FlRc3F=Rc2[hGc3=;n$2X]&NmBig2":e+#0mGR#20(M!!!)G"p9&V!!)rt!*"^RJcPQG
!$M+<!2.Xj!%5eeTE"roj9b,Y!KIWd!!%u(,6/e7!0[B_"Ru`R#6B)VqZ$VRcQ`E2i;eT4!!E3*d0B\t
$Msf'7CrPO!5nj;,5M9>Ra2?A$MsgT!:'Ub#gOatR19#n!/8r/q?VoXh>dN[c5Zk<$2X]&KAm4*#lk6s
!7:cH#0n4iK*qJU!&a3FJcLl4!&XNP!13TbdfQ`R[f?CLc@#\p!"Jf*!.rJt]`>&4!#O@&ok4Aq$2X]&
J^+>>!1a)i([#MrB`XS.qZ$UNU]?GUoF0I_!."D@!10qjK)bm<cFX+j%Jp,*J\D,9!;-<l1sW*'XU+t-
r;ZhJLB+FV!&W<*pnn.l$Msf'09cI/!9D>hb5g>o!!&@Z!0[B_9(B[P^An`?!!%SQ!/:IR3rZ8.XT/\)
!!%P]!.k4G!!#+*WrNM(!!"[n!.k49!6s[&!!&A9!.k4-!!#X9^An`?!!%T0!.k3u!!#()XT/\)!!%Q<
!.k3h!!#+*WrNM(!!"\M!.k3Z!6s[&!!&@C!3-#!9%q&P^An`?!!%S:!1a)i3p3X.XT/\)!!%PF!0@0\
47oT-WrNM(!!"[W!.k3qk5#&XQd5X3!V$6I!i>tj!!#X9^B+iE!;ultJ^4;r!R:cI!q$&j!!#(3XnSpt
$2X]&JBn2q!R:cI!rDtj!!#+AX6Q_c$Msf'0;/B/!:f4-k5#&XR*Glo"7?6k!h')h2#aQ'Wr]^>qZ$VK
]*.'q!!Atrp](:BcC"^4$2X]&K$FPs"4I@V!:'Ub.*e.[U^Hu!!&E()JcOU,c><Qmq>^MaiX>/^!"-sO
aoKfh!"[@E!MU&#!!%`A#iH!5!S7=i!!!DP3!#'HqZ$VKr!CjZ!!pgMj8cXh!"@.4!/pmbqZ$URM?&5.
o`+taq>^MacO'XXaoIt4!!DBlkR.EQ%Jp,*L!L#)#1ij:!!!/o#hoUcH3sHK!/&T'!!_KaK)blRc3XMt
$Msf'280'B!5SX8,lRfB!!&D3"hF]9!!!&O!r)ftM@KF_!/&T$!!L=BTE"rmj9"WK!He_G!!%Vr"k3O9
!!!&i!o<tZFUJ!G!&C\WJcO0u!$(h8!11t5mJqh=_uKgq%Jp,*K$FMr!.k3[!!.0JqZ$VIeH>XMM#aOU
!HebH!!"b5!.k3A!!!r6!!&DT"lKR0!!!)P#PSJK!!!)G"TaPkqZ$VKqutRR!!LRI!!D9cl35H5!!:FK
!-\DLqZ$VJc3;Jn!!D`qh$2.)!!:jXo`YA>$Msf'17%um!9aC_*r5j:Ra2BB$J,:Q!!!2J$ig[\!!!,n
$/5aeNXbjc!/8`+!!qWclMpnfc3aOWc2[hIc3FAq$2X]&K?ji(#k7oO!!!2I$/,CP!!!,H#6T5Y!!)rt
!&]N3JcPQG!$_7>!1_@P!#*WX!!N0+dgFA%!!VEmlO<lW%Jp,*LsH\6&(CUV!!!/H#gNMP"n;oU#m#AZ
qZ$VMcP$9hi;i9G!!LOPc3"%MrX.$[!IG1N!!#0o!.k3h!!";@!!&V:*WR,U!n78O"jI>6!:'Ub"3q5S
O:D'e!/]5Bq\K5Hc3"%Lbm*\<h>dNYc3OGs$2X]&L>j$;(B>/p!rrML#6"VM!!!,H#Q]5YqZ$U\mf7q>
O8o8+q>^Mfr$^&C!%,u3!#ai/lOX%,c2[hGc343,!"Jf*!/o/E!$'9"!#+l2h@'Alc2[hGg'%'O!I"kI
!!%i$*WR5+('#$I%+#F.!!!)`"m?*jFpe*H!(*I]JcOO*!$:t:!2e(A!)V`8lSef%c7]/MblZ/j!K%?`
!!&5/63':@/)DcV.aB:>,ME7m!rrDJ!!@<L!!)rt!0GMp!("m]!%I=^i?\IKc3"%Jf)YRG!HebH!!$&a
!.k4:!!!r6!!'"EF9$1-2Z#B443gCt7a;/;"7ZEK!<J&eqZ$V_cX6`Ui@=7F!&)VY!'&4+rW1CI!H\YF
!!&5/?iXBu.H)]U0[;]Z37e?/"TSYM!<I<MqZ$V-cNX@OqZ)3J[f?CHq>^N%eZ8SJ!27[W!&2]$!*8Uq
h?X)fc4'f:%Jp,*UZ.^0R/i5l'EBH)7fYsV#13VT#L3VVHO9QL!2/eIiKjP&c4p=+f1Ga/!(P6<!!gdV
!IG1N!!&;^D:ED&8?`)H!!";@!!'IR[fEPU$NMFA;Vk:O:sK4E#hfa\%0;S#qZ$Vnc`$o6c3OChr^,"!
!'ng5!!_TmkQq9:$2X]&U<fV8R+DZ>#lkpi6NBEt"TSc!$JPmgHOBWM!3+;J!.!W*JcO'r!$qC@!4L4`
!3Pbkh>dNmc:S(-g&gpK!!UXV"-<rl!;ultVU)4AS'D!6'(.g>3WM.b!WWAT$MXr/H3sHK!2@f8!1;%3
!#,5ke2mXkc2mtLj9b,Y!I>+M!!'"EYlK(!!.k4-!!";@!!'CP[/d5c!:Bge-I-Q1CsE"\!r`AN"TaPk
qZ$Vlc_UW/mJu2G!$'9h!*IhQp](9qc3+/l$2X_JT`C>S!7UuK*R7pj=l]SK!!!)G"T`cRqZ$VneY)f4
!,'OVc341MnGoQh!$:t:!4Ut!m^`D'c2[iAcEmSVrW&Jh!K%?`!!&tdX5U)ZT[!N;5hDh,U]@'V!!.0J
qZ$Vlr2A,D!1hC8!(,b?l_+<LRK*>1!"/T'!3OSc!/o)%nX/1#!/RKPo`+t1q>^N+cbBIic2[iVrkHjq
!56VXk5a]G!K%?`!!'"EXT5?P!;HNo;pMKFXN^e<!8@JSF:%gE!2\#B!2SZUlMpoacDprEblQ)i!HebH
!!'aZjoE!_!8[\U!RBg-gY)YD!!!r:!;ult\^/"j\BY'SB(!Fm^Atsl!nRJJ!<J&eqZ$Vqc`I2Hc2[iC
qlSAM!3FEHj8nQI!He_G!!&kAWrSsF!;c`r<6hNEWQbM7!T!hXFUJ!G!5?eA!4q+hmJm4fcK5,]aoKfh
!$(h8!4gFj!4_Fsi;`jicG'@mf)YRG!!1@I!K7Kb!!'"EXT5?t!7UuK;pMKFXQ0BI!!!&F"9EWOqZ$Vm
eZ8SJ!2Rm?!*%7E!3,Jgh>dNVc3")j$Msf'^>e;CjoE!<!!!&FjoF08!1a)i*Voa9\aR;l^Atdh!!$W_
^\GPD^!6TX!mUuNN=Gab!3,mue?&_Mc2[iCjK7aM!3FHG!!:FM!-\DLqZ$Vmc`7&Ac2[iDnZ1NI!3+6D
!!:jYo`bG@$Msf'^<bpA]$:9U!WM6/joF/B!9aC_+Sl'<\^/"j\CUcV!<?6I\,`q^!!!)m#MTIaNXbjc
!3+;H!3,#[lN$uTcDgl@c2[hHc345o$2X]&V9c1BV""KB!<>[9U]@+B!;-<l"3q)QGR=ENr;Zi3cfP5=
blI1?iO/`aUB(&h!$V1=!4gFj!4^;X!&XS)e:I[Nc2[hFj9"WK!K7Kb!!'"EXT5?M"oAH'.*c]1CX)n[
!V$9K!s*NNqZ$Vmc`7&Ai<AWQ!%?-0!,Kj[!!3'$d/sDm$Msf'^<bpA]']RV!6u2W%bC^!!!"&9!!'CP
[/d6(#LitY(sOu"!4Mq/M@KF_!2S/AqkX:[c341\c78lEnGoQh!H\YF!9'X>T`C>&"oo=^.f_$t!1a)j
FUJ!G!2f4XiLg0`UB$AU!#k\6!3?$Be9Ct.c3"%Tj<!V.!$0>b!!1@H!/pmeqZ$VacXHlSc3++SnJC$u
!#Ei[!!1dUo`G5;$2X]&Q-Wq?=3^mJ$2tag(B>5r!!!&_"6]gfFpe*H!,9ac!!:aPJcOO*!$1n9!2Ik,
!''$>lMpnnc6NB6c2[hJc4L)?%Jp,*OO#``/F`_s!!!AO*<7&4!;-<l"O7GYI0flRr;ZhWcSPVRc2[hN
mMt1*!#s2`!!Us`p^I7P$Msf':Qtj2!:'Ub-i*fCVU&QK;:GUC!!"k$N<"g\!rs>2C>N\+W=A_)!0kf&
!'oKCmJm58c?B80c3++^r`.?G!LF,i!!&/-9`RNJ!9!nX.*d#:FOpWi!rs+^<rnHkqZ$V"a8jZhc6***
j8eHFc2muVq>f$Pqm6@&c3jVccFX(enHIbQ!(+u?!P8g<!!&kTV!b#YQd,j:;pD?A"OR>P1sW$#WsSY'
!28kSiLg17c3XJMf;JDA!2e$F!&Vus!N6A&!!&bkQdh?%A^18U!T_MkblGK&!7%\HcM@M@\^/"j\]u,o
HL\c,^Atsm"TV?P^\#8@%Jp,*WR%[HWm2:YB)\p[XT5HJ"9:[LXlled$2X]&V9c1BVUlRX'`_jkWrT-E
"TUdZX4jTS$Msf'^<bpA^>o:[!!!AOjoF/\!6s[&!!'RU^Atk80]"J`K?h43^"NM[!<>d;^B+iE!;ult
WR%[HX3N!kD=4ObXT5HJ!<>76XnSpt$2X]&V9c1BVp6UhDYpKaWrT-E!<>:DX6Q_c$Msf'^<bpA^siA]
!!!_YjoF/\!:f4-k5#&X\^/"j]&>O72#r?U^Atsm!!#Xj^X0^q%Jp,*WR%[HX6qFq.0+;3XT5HS!;HNo
3mFc,$2X]&V9c1BW;A$n.0+;3WrT-[!:'Ub43af+$Msf'^=DBCjoE9D!!!_YjoF0+!8RY"k5#&X\`1Bl
^Atgi*WUN3^AttH!7:cH/^C!iZjlm4!3,FhiN3*[c5-Ilf<+hM!3FHG!$]^J!Mg&!!!&knX440MVTotX
B&p#YWrT-E!!"7hMZBFN$Msf'^<bpA^<Q]Y$h<B9joF/\!89s97f]F_!!'RU^Atdh$34oA^!OI<!!!et
@-Cu!V[`M'!3+;H!3"KTp]pk%c)f1j!"ecsgJ%^6$2X]&V9c1BUuVgI#QS#PWQkJD&^F,POp_'d!5?eA
!57n&h>dNXcJ&?Jg&UaFc2doOrW)ls!3je<!/f&&!#FuiiBmT1c2[hJf+Rik!Kmoh!!&Y;K`H8@!<<].
2:OJ`1X5t#"QU'Y%KUtaqZ$Vdc\2@Ae,fFI!"mL7!&Mn#!!Vm%h@0L6$Msf'J^67T*8pmL!7:cH.Ja#E
T$JDW)=@L`!!!)F"P3YK!!!&F!s+>iqZ$VQcP?KoqZ,+G!!:CJj8eKG!!1@J!He_G!!%c((AejI'@$RX
!mLl<!8[\U!R:cJFpe*H!'fHCJcM>A!$1n9!1<3Zi<B8cUB&44!!UX\!Kmoh!!%ZL#1NhW"gA!9!!!/I
%KLnW$2X]&K$OW$"hao9!!!2V%J:/2I1#iO!&Bl@JcP!7!%7UC!1;%8f)YOFblQ)i!$Lo`gOB7+%Jp,*
K?j]$"QTRJ!6kPi!!!n^C&sh2qZ$VJc3<_<h#P\#g&UdG!#a's".9Jr!;ult15>k2!7q_U%KLhO!!&M7
&-*3c!!!0!$I]@-!<>+?Z0SXq\deN:!/Jl/!".3UqZ$U!bm;Sq!%dZ5hOjnM$2X]&L!L/-$fM*R!!!/H
#gNGN/cM<gSH5YrqZ$UV])[E_pAiL$!6"^6!27^t!&"-Ke,TIUc6!$-j94cO!)CeR!"Jf*!0,MZq^VXk
c2[hMc56NtnH@\O!'\Z0!"&N&!/ohfmOS>ac2[hMc56NtrWLUO!'\Z.!"/T'!(cPYJcN[gc0"j&!2fZo
e5ZK?c2[hOj<*\0!$9Dc!(tMN!"Jf*!0b_s!'8C*!!r*3hA?5/c2[i*g9("L!"&N&!0GMq!'8C*!!rQ@
d22j"c2[i+kH!dH!"/T'!*5lqNr\h7g?/53!2n.R!*8.]lN$thc40g`c2[i:c+a5fqZ$V\cVOU0nH%JI
!!UXT!"%?Zo`+tQc)h$R!!)rt!0PT*!(P67!!Vcui<oVmc2[i+f;nYH!"/T'!*mhN`W2V2jQ>aiq>^Mj
cUn1&e-,XO!!UUOc2[i+n[@;_!PAm=!!&,,3WLtp"RQ?:#0m2K0E.irV?*_(qZ$VVcT;+_mKDJO!!UUO
f)YRG!&2]m!N6A&!!#p<!.k49!7%PDc2%D?SCJMS)#tGt!WW87!8[\U&C*oLUCI)#!/TVJmLoR3c2mtH
aoKfh!"@.8!K[Wb!!%`A'B'T)&^CFX!S7=i!!!GQ4TUNLqZ$UZquD<KK)bmIq>^M`cNsRW]`>&4!!:j[
o`tSY%Jp,*K[0l'#0Hq:!!!,a#3Z6lGmX?J!/&T&!!_$TO8o7_oEO%S!I+tK!!"j\!.k3r!!"2=!!&Y;
-3,4Z#Mo[c"jI/'!5SX;M@BOcr;ZhUcPup&bm!M<huoeTp](>:$2X]&LsI(A)U8Ne"oADN"0_dk!!.3L
qZ$U_T`BZEh>dNoq>^MmcWgHMi>q>,!#NliaoKfh!K%?`!!&808cV9I(?$#/&^:[7!5nj<F:%gE!0PT$
!(Hc#e.r#rbmWS4[f?GO$Msf'>1EV)!3-#!)YsF6X5\a!JcL,B0*!KI*rmA]!7:cH!mUrMN",Xa!1E:l
iG8L+c6NB4f,49"!#No\!!:FK!I"kI!!&A`D:ED&B$M\&+QOC*(]YAt!!!)G"TW]G$Msf'D9igp$G?Fk
!;-<l*r5j:Y0W@5N6X?^1]AlO.KCmB!!!,a%Hn6%OU_0f!1hGe!-d$FpaZ=kc6**.c2[hIoEj7Y!IG.M
!!&J6J,jcR/F+he-dEh7*mO`c"3q5SHOBWM!.N6H!$:Y1JcNUe!$qODr;Zi!c[l.Bc78l?mN(7,!$'8a
!!Usep_!Uj%Jp,*Ra5dMABl:t*W$W%('#)p!!!/_%dOT*I0ocN!12#K!+aS%q]GkYbneS)!!Vm%h@0L6
$Msf'DpK$r$/kl9!7:cH.Ja#EVU&BF;!o(W'`\ik%fd*k!;HNo"jRh`PR[Ki!0b`!!'pDle.2Ngc3jUZ
j8eKG!!UXY!IkFQ!!&,28c)'Z6-^#A%F#:N!8[\U"jRY[IL>rP!*J4\JcM>A!%RgF!2/d1i@4gPblu]%
pB8bA!!UX[!Kmoh!!%uU+OhM6)mBJ1"O6uI"O7GVI/jTN!!%o&+93A*"n;`O"O6uI"kjFY%0:kaqZ$Ua
QN2U;kPtT1q>^MacNsRWf)Um4!!r3BgEZff%Jp,*L!Ku(#35c:!!!5K*<Cg"qZ$VKcNaFSnGn.@o`+sr
c5Zq=$31))!!"m3!.k4G!!"kP!!&D3"igV9!!!\n<pNceV%*;%!/&T$!!LdOP5kRnnO25%!Kd]c!!%Vr
"lTH9!!!Q/7aX[+Nsbaa!&D.dJcN^h!*/jq!1M4C!"A`/e-5mUYQ3th!'AK5!P8g<!!%`'$2Y#/$I/hU
"MFfl!!"[tU]IM&qZ$VMiX5)\!"$pT!!LFEd/X/#cCk9;$Msf'2t$`u!5ef^V?"m;!!&Yh-e'LD,L-f"
$KM?T"O7&K:!LEQ%Jp,*MpEFE)pSfk#k8&R"O7&K4PHq0XT/\)!!%i$*WR/)$igS4"OI:s!WYCHX66M`
$Msf'6DOUB!;,F-k5#&XVpAoS>i[=!-ibC8('#)p#67WG^An`?!!&;1;#j5Y*o7q<)9rcn&)%3["TUg4
XTAe/!;ultP0[&,9[4[Z)=A*q&HEBf"oq!AX7rXp$Msf'?I&Yl!1s8Pk3D+*!!'(GIfOZA1]&s./^>O?
+jLDp<Umi[^An`?!!&G5C&h]$-LN2\,0h,-)9rKf7/j=8XT/\)!!&A3C&hc3-fHEQ,L.5.)V58i#QR<<
WrNM(!!$l^%KHe3!.k49!6s[&!!'(MHi&-iEQoiU,QK(Z#i5ge6dE"=\deN:!1DhZmUlN*boG"L!#tnA
d09S.cD(E?$2X]&Q1&AEB)l5^*S2;+)upr'"opR,TE1tuqZ$V1r!V!^!!TS,[K+U<!6G!:!2n.S!*[&Q
hA?5/c3=7rg4K!L!Nln/!!&;1;#j21'%%<l&^CR\*p7A'C]U(5qZ$VZcVjg9f+Z(9!"mK\!$:cLgMHt[
$Msf'?I&Z4!.k3r&cdCW!!&Y;,QJqV!T!hW!mLo&#5&0#$I0IjPRRTmr;ZhUcQ*!&c2dnImKMMPc3=7S
f+Rik!IkFQ!!%i$)upi$!<<6!"k*Y#"onqi'C-;4IgZ&Q!(*@ZJcOX-!%n$I!10hg\H'nY!!E3#d/X3)
%Jp,*J\(o`!7qAJ"O6uJF:%gE!.`,jT)dpUlNI7jc2[lf$Msf'0@^&S!3-#!)YsF6Qf8"!!<*;P#lk1T
!!.rdqZ$VImf7q>pAiJD!!^^K!H\YF!!%QI!.k49!6tfL#0m2KFT;dG!!"[0!.k4D!!!r6!!&@P!7:cH
!R;2U$g.NR!!.rdqZ$VIU]A=5!!1@Q!!r2sgAh7r$2X]&J?]*`!!!&F$igUZ!!.3LqZ$UL^&W`b_#OHR
rW)ls!11t4c2[hFmK2;Jc4L$cf*1pQ!K7Kb!!%Vr!mUcG!W)rJ!WW>J%0-^q"R?0kG7"-H!.iDse,]@G
!!1@H!!CLU!"/6"h?<q'$Msf'0s1M.!7:cH*r5j:Ra2BB$LRuS!WWGL%G)-c&'YXdOq%9g!/8`+!!rH'
e,fUSbmEG=lO1rG!IY:O!!%`'$2Y#/#gNJO#0dMF%&s^:I1#iO!&rm;JcM>A!%7UC!1rX(i?J=Gc4^0s
f-pDB!%6&)!#*Wm!L+&j!!%oS)q5f,)9r`m']^>#*mP8?%fh(Z$2X]&LsI"?)U8in(%E@$*mP2p&)%Tf
&-74eqZ$U]QN2U;kPtT4q>^MncXHl\f1#I'!)CgC!*IM^!#P8EgDBsU%Jp,*Pg<))9B8%t2ZQ%e8H;6*
&-*<f&cmIgqZ$VYcVFO8nMf;`!'\\#!(bfUoF]@^"+LXX!;ult>gEG]!.k4G!!"VI!!'+HK)gDH=TDe*
B%1DmABc1V+6t!LQOWfl!1M5N!,C"RqaUWZc;O^>bnomehA?9F$2X]&Qd9OLC>hbP8H;K1;ufh@(]G9!
(]f0pqZ$V7cP-?hmJu/FblQDr_uKclq>^Msc]%p[qcD9K!*mf_!+k4QlT5)+c7T-e%Jp,*S(2`[G5u[/
70#s*;ZK\b0A\>^/C#I@LC*hX!1;bimWSYOc:7k.c;XdBr\2_R!%lJB!JUsY!!%32+Q4FC(X2s3!VZV`
!!#+W!!'"rEn#+0D9b`R:?5F?<R+qO=3a&2TE#Gu!!&A3?3"0S3WMA67,:8V9E7N81\EO)N=#I^!0b`8
!*d`1!'^BNcpc5S!(Z3.kVE6t$Msf'A^:M["P3X*!8@JR8,<2cVU&<D<THL463'R%;#jM>F9$.&<WT$+
qZ$V[cU@h%nMK)Z!'&7h!(,CIoj@c%c9qbs#lju(!!&,,7fZ!'1]TT)6K(626dB'>=k?.<7KJPWqZ$Uu
PQ9/4c3=7Nj8eKG!*/jq!2Ih,e3Egp!(kI<!*[Zu!.46QhJE:o%Jp,*ONo`B1@?mt3mL1p8^;)OBDu)^
=ok#tqZ$VUc8P)HiA1Hpc:@q-f5(.s!,'S]!L4#h!!#m;!1s8P%dOT)$dJkTC&.f0U=DL*56*so8cVl:
AcQN7Gi!ZFJBjA[Z46[2!0?+pmP4buc8kqnbu=UNd:*)kc@5kh$2X]&N:/R\1X8&^7FtN5<6etRCsIJ1
SdP>p!)3:jT)dpQl2f0:!"[@+!0m<[!2Ik4!)CgN!-%IYh13dd!/fL?osb%8%Jp,*OO#rf50d"*>lJNc
CX,u]Fm#afW<'%+qZ$VVcT;+jf2MHC!+!ibc<('hoVC6;!N6A&!!#pB!9=1H!<<;J%aG.V*6u+qd/!_B
Z-T*DU[bPEY5kiQZiIGdM=l]*U!:=R%0-D,!!&\<N<#'cScGGOV;\6NUX!l[NRt<,XT/\)!!&S9MZAa^
RfK#VU"#b9T[%QXMr^r(WrNM(!!%i$8,uN:JGXisMp@dlQ-L3H8Fbiuk5#&X\B_eH^Uh/[^<X1f])KIk
^An`?!!'"EXT5HjXfSYVWVEFmX3IaH$2X]&Us>t:X.ZKnWoTuAU]@=;WrNM(!!'U\h##k,gR@7)j70>0
Y5lA_k5#&X\`1AU^RW%=%Jp,*WUHs@XcKRa$2X]&V>RBGX+IAP$Msf'^5D')k4Ig4!!'Qr^Oj5`^An`?
!!'!oXb*\/XT/\)!!&k#X+ICsWrNM(!!'aIk(;a2k5GAZ!!'Qb^Oj5p^An`?!!'!_Xb*\?XT/\)!!&jh
X+ID.WrNM(!!'a9k(;aBk5#&X\\#V.^Vded%Jp,*WQ;2nXgY>3$2X]&V:DVuX/W-"$Msf'^>e:,k+(T1
!!'Ru^Oj4]^An`?!!'"rXb*[,XT/\)!!&jQX+IDEWrNM(!!'a"k(;aYk5#&X\YQul^Y6F&%Jp,*WNiRW
Xj*sJ$2X]&V7s!^X2(b;$31))!!'`gk(;aik5#&X\Wjk%^Atn,U[+ZU[LN*6!3)ZoPH=hcnW;Uh!N$2#
!!&juX+mYTVuD\'N<,a\qZ$W1]B4_-puVRrc;+G>q>^N+aM4C_!5@Nhl_=HHc=d6W%Jp,*WR\,6XmqM0
O8sjW;ZW0jqZ$Vmii@g7!36$Xd>\-Vc;Xh-$Msf'^@139k4n'=hp,(!0?sRu@ep')\bs3o^[&W7^!9sb
@*W?aVuR;(!!'!UXkp/[XNjK>:"iP=;ZW0jqZ$VmQ`JN7!3+7<!)D]VkYqSG$Msf'^80o0joF/]!:p6G
!<?U*!!'OS^>uun]`>^j\,`t_<rcUQEri<NqZ$Vq^9$1m!3=DF!2nO>ogJjSc<g[A#lju(!!&jbW;rmb
V;\6NUWu@0:"NeJ?icT$qZ$W0cJ?e#!6tDJe?f4UblHf/lNR?+q>^N$c`7&Ce8bA*!,Tnjc;t!bnY"a3
!ON=5!!&b>R/iH0?1(tu=Ns[f70$TlN7!RbV$[#!!1qN'!0HVSiEZFdbu3.`pdY<icADXr$Msf'Pg=1H
=Si9O"TSYL!TX7H!!!2J6i`tX!!'+NN;JP6LX'9->Kp4==Pd-[JBkV)]++W;!1VtlmWSYOc:n:1bs_P#
d7++OcD^iF$2X]&R.#4WFoZR.:&mo<7e]Bt8-!GNU]ID$qZ$V>r#X?/!#No]irHOg!"R;X!71KA!3OS0
!/f'*!-%IghMqSqc;Xdug;!9p!"Jf*!1_A^!-HLX!*oMKd<P_9c9_MLkH3pL!"&N&!1D/[!-QmcpdtNl
c?TD6c9qYOoW-]H!"/T'!.)s:!#jnulMpngc6<62c2[hZc0"j&!4:(T!3#E\hFdj#cF*_\g/7N?!/8\4
!Y#,0r;Zhoc^b'%c9))Em\f$A!2[t+!,pJkpT4E%qZ$Vic^Fisc92/EqkMZ9!27\)!,pr!lDjmlqZ$Vc
c[Gk&e,]@G!#!SW!2.U;!#4tch<+P6!4gFj!5%2WmR$u5cG'@mc;=RqrkHgp!"Jf*!3+;H!3>NFiACUZ
cE.)Jf0K*r!,p,a!"&N&!2\#B!2o]Pe2@;McDprEj?i0!!,p,_!"/T'!5@"GqrRmuc2[hccK5,]nGqDG
!#3]?q>^N+ikOor!5$NI!05@>!58A0d8Bt!c+a5fqZ$Vqn#bQN!3=C)!.!1upoOOtc9_MLc)gsPqZ$Vm
r2\>J!2n+'!.!Y+l`1#bc9hSNc)UgOqZ$W1cfP5Ic2[hgn`J]j!8Gd!!#=5Mo]GuM!4gFj!5$NY!0mJr
d(R_&!.3n;kdCN)%Jp,*WR%[HWn0`87K@q`X8o<H63(ZjVq\*MWsSY'!2\#B!2nmKlUV#)c)JuU!,'TP
!N6A&!!'aZjoETp!8[\U.aHcKf@g5t!!!DPWW:<C!;ult\^/"j]$<nJJ*sT#YlM#R63'p8HMDdeXUY.-
!3+;H!34=*!,DD(e=Zf6c85MfjC[^i!La>l!!&kAWrT*J48V)>C<`<p1]To5B&7,#QjW]j!5?eA!6F+!
mJm4scB/*ZblI_Md0]kpq>^N&c`I2EmR#l!!*7Bd!--U@paZ>(c<gUM%Jp,*UsGP2Pl!;e1]Tqh?N=Bm
+R:-M/C$oiPR73e!27r2qj@GHc85Mjc<pWXnK?[2!%lJj!Kd`d!!&DGHL?(Z>0R&m"oni+!1a)i>l"F#
Vse3UAH6,`3rhLs7efFQ7EuMG0[>1LXUY.-!1!IZe563?c7]/Qj>cHb!&r15!%#p+!1X#qqZ$VZcVjg=
c7f5SnMoAb!&r14!%-E8okOSr$Msf'?HrSo!1X&P%d4B&HMRUAXNuM!IFgj]6NCrJScG8*#QR-^Z.lMa
\deN:!1M5N!,1FNlSSZEcADUWc3=8)cCb3=$2X]&R*TXMC%4+<2?6n*L]E._#5&0#1X;NnW!WM)r;Zh;
cP-?fc2[hHmQf_r!'/:(f9,ij!6"^6!4C.]!3a[>!06rje@kprc2mu?jM0up!"Jf*!2\#=!1q\$q`4_&
c)f1m!'KeRh5pY`qZ$Vic_:E/iB$Bf!-leh!3+6G!'U=^d&R-RqZ$Voc`$npmJu2G!$TYH!8H**pAiJ#
q>^N+cbBIkq`rXr!0#4<!57FplN.&\c+a5fqZ$VqeZJ_N!3=C$!-QSh!3G\mh?*a?c)gsPqZ$VmiiDLJ
!3"1!!-ZYg!3,r"d/sA3c)UgOqZ$W1n)iTk!6!._!$0\RpuVS2blH#Nq>^N+r4gar!4gAj!-[G<lb<G5
c3+,Bc+a5fqZ$Vqc`I2Hc4BtanZCZM!3FHK!'],=oW8*"qZ$Vmc`7&Bc4L%dri=GI!3+6H!']SHkGnRi
qZ$W1cfP5Af)YRG!!pm4!8G`uo]Fliq>^N+cbBIij8eKG!+sNk!56Y_!'ni8!P8g<!!'"EXT5?j!8[\U
;pMKFXP*jN"TU@(U'%G&!!)rt!2\#B!2Rm?!*&BeiMusXc3=8)f:Mc/!N-;%!!'aZjoE!<!!!&sk1&Mn
gW]`ZPj=P6`qfZ8\^/"j\C:NU!!$!D[K*\[#ll1>Cu/t/WX\h*!3+;H!3+oWmJm5RcDCT;c3F=gr`IQM
!LO2j!!&kAWrSs`!9!nX7*_M,U"9PE#65^g=TO`oqZ$W1cfP5=qZ,(FcD^f2j8eHFc3"&Zq>^N)e[t^j
!3sfL!%uQL!.aSGh?a/tc8u'!%Jp,*WT'uHWrSg<!!"7hD#eAN#LNbV&C)p0M[B7\!2T(]iMQ[Hc2[hj
f5CA$!,Tpc!"mL1!Jh*[!!'5#`mi!.O3I[c'^HG5&"3Iu6M^Z^VpAoS=j@NX)"As0-3,=:!WXJ!KCsit
Xpt7.!0tl-!(Y<B!##8Nd2W-,c3"%ckABF"!M'Po!!&2.;ZKD@$ht)0'@%Tu*6nWd)t\%&D?615qZ$V&
cN3&+JcO(1!.ObE!1_@O!#b;OhBN"=bmN/)o`+tZcFX1l%0-D,!!%i$&HEKi)ZUT?#iH!6!!"n.Wq`Rp
XU4k)!/8`2!#*Ws!#5;9dg45!!&io9l_ac_$Msf'4eVk=!:e=jblHPq!!&A3!WWJa2XWI'.aAY,&^C@V
9)cTP^An`?!!%Vs!rrMm/)_uY+O1Gs%G(UT!!#()XT/\)!!%Sr!rrQ&/(?'L+O(AV!:'Ub43af+$Msf'
1"?8U!8RY"k5#&XQf8#5!!!2J2?5AT+93M_!7:cH9$P*N%Jp,*JaWTt!!!2J.f^gG)>G'L(sW*]3mFc,
$2X]&JG]Ds!!!2J.f^mV)=&.?(sW*]43af+$Msf'08]b/!8?T-k5#&XQd5X3"3r%i.fM<Q2#oJY!!#XS
^ZW?3%Jp,*J^4;r"P4Od)#tf).0(dA!!#(PXkKlW$2X]&JBn2q"6:Bd)?:o*.0(dA!!#+*WrNM(!!"[d
!.k4C!6s[*!;ultR*Ps:#L3eZ*:>ZB1]T5T!!#XC^\>JC%Jp,*K?j`%"jRGT(&KE/-ibR=!!#(@Xm3"g
$2X]&K$FSM$i:;3(="<.-I)Sk47TB-WrNM(!!"dW!/1FPk0W8e!!&G4#jq]O!!!8L'`\p!!;HNo+O5T?
Xpt7.!//W%qZ,+G!!UUXj8eKG!#a(!!M'Po!!%Z%#5SPL!!!5K&-*72!8[\U):!+#RL8ol!&W[8JcO-t
c4g8-q>^M^mf9Hi!!:aUpBAhB!!^^d!L+&j!!%TJ!2';l!osLL"O6uI#0mk^IfKfP!!%P=!!!)j"l0@-
!!!5W'D3">IL>rP!&'Z=JcP!7!%dsH!11t3f)YRG!!:CKc2[hGoEa1W!KIWd!!%Sq!TX7H!!!)F"jR)J
"3q)OGmX?J!.`>qnGqDG!!:CKg&UdG!!CLN"*b.Q!;ult08BOZ!;HNo+o20=Ra2?A$-iMN"T&SU$a9Ws
!!.rdqZ$VMcNjLUe,]@G!!LOP]`?mh!H\YF!!%Yt#lk4h!:Bge"O.7q!7:cIFUJ!G!&_@gJcN^h!#k\6
!1V:J!"f#.e,]OSc4U*hj8cXh!K%?`!!%f)&,Qk;%*ekR"jRSX%IjFu!!.0JqZ$VNiXbGf!"@-R!!^[W
rW&Jh!HebH!!#+L!.k34!!!r6!!&Vg*n252)U8Hc$fi5l)?:YD!!%lV%Jp,*M9ct<'[?g]#k8Vc'EAfD
!;-<mF:%gE!/Af9!#3]]!"&W=d1cQoZN01h!HebH!!#6Z!.k4*!!!r6!!&P8(B>32#jV`r%aGpl(sW*]
!R:`IM@KF_!/Sr5!"\T(h?Erec4^0jg&UdG!!1@H"*FnM!;ultL!L>2&C(I[$gn\d'@$RX!S7DJ!WdEN
qZ$UZPQ6:8lMpo)q>^MacO9d]e-5^Q!"$p`!"mKW!!;Zoh?<q=%Jp,*L!L)+#iPpS"98\P%KHs`!<<6$
"OR>QG7"-H!/8])mKMPQ!!gaXf)bXI!!CLM!HnhI!!"t!!.k3[!!"):!!&G;#l4hP!!!/H$1S2U"jI5P
N=Gab!/0>9m0:i9!!LOOrWU[Qbm"2m$2X]&KC9$&#0m2K"P3nQ#L3Lt"p&oTqZ$UQquD<KK)bloq>^Ma
cO9d\]`?mh!!1@U!"R]go`tSY%Jp,*L!L)+#g*.p!!!&F$NLOs#3Z6lGmX?J!/&T(!!q0V_uKc<c3s[\
oEO%S!I5%L!!"m]!.k3r!!"5>!!&S9)?:WE#Mo[c"O6uI!SS=^('"rl#Qp(r!!)rt!/Jl7!#!Q\!!M]i
i;`iYc4Bsbf*;!S!I5"K!!%c"'EAfl"onf'!7UuK!R;8W%HI`Z"p&uVqZ$U\T`BZEh>dO"q>^MfcR&W:
i>Cu"!"R9S!!1@W!"]&7d0Kc5%Jp,*MpE@C)t"?t&c`9a!!!&O%JUA4$dJqWGmX?J!/SrA!#teKe.Vfi
c2[hFj:1Da!"@-W!I5%L!!#@9!.k3N!!"5>!!&YN,OQcV,gIn?(sW*]!WE@q#Q]qpqZ$VSmi14)!$0?-
!#!l`p](9pRK`e<$2X]&M#84A)ZUl'+93)9!:'Ub!La2mGQ8*J!!#?C!.k4D!!"2=!!&M7%fd9g2#n]s
!71_k!WW>c"R#shN",Xa!/Jl.!"[[1paH1ZblH#ko*!eN!I"kI!!%`!$igh!.I/D_(X2s)"3q#MFpe*H
!'.anJcNUe!$;+>r;ZhacNF4Qc6NB)mJs<gf)bXI!K%?`!!%Vs"98VN*<6WI!1s8P!UBaeFU@pF!.iH!
!!^pmq]#SIR/laXh>mY"$Msf'0s1M.!7:cH*;TX8Qd5a6"muo[%fcm1!5nj<M@KF_!.rK!q[:m]!!]Y-
[f?GN$2X]&J^jl"!rrMM$NLCE!3-#"FUJ!G!&<I5JcM>A!#k\6!13-Uhu_1+ecPRIRK*AG%Jp,*K)>]!
!mUoK"69OK!h')hF8uXE!!%Sq!mLi;!o3pT!;-<mFUJ!G!&9f?JcP!7!#k\6!10J]p](9qbll;r!!Vup
gAh83%Jp,*J[#4@!!!)F"O72O"O6uJF:%gE!._c`h>dNWbll`)o`bC"c2[rh$31))!!"[-!.k4G!!!r6
!!&@T!!!&s"4RDQ"O7JW$02*P!!.rdqZ$VIT`Fri!!1=Ic3aOVnGqDG!H\YF!!%PP!:Bge!R:cI"O7AT
#Q=_N!!.3LqZ$UL])[E__uKcUq>^M^a8jZhc2dnHj:U\i!"@-Q!K%?`!!%T#!6,#a!<<2k%GhNo$I/VP
F:%gE!.a&/\H'nU!!<-/d1$'^c2[lf$Msf'0CJmm!0@0\)YsF6Qi$i8!:'Ub!R;/T$I/VOM?"+_!!%S-
!8[\U!R;#P#hf:O!!.0JqZ$VHQN5D5!!1@Q!!q`fkPtX+$Msf'0;JT"!8@JR)YsF6Qa$P!!6tlN#L3;M
M@KF_!.hiaW;tWWo`kI#c2[rg#lju(!!%P)!8mk&#64t[!;HNpFUJ!G!&'Q:JcP*:!#k\6!1;%8e,[Jg
c3"%JnGqDG!K%?`!!%Yt"TS\a!4`*T"98Q'!7:cIF:%gE!.rK"mJs<gf)taLc2[lf$Msf'1<9HI!4Mq.
)YsF6RahcB$31@"!:^-H!mUcHM@KF_!/9D<mK`dsR/m3gd/s@Mc2[le$2X]&KC9*)#QP((!;?K=!rrDJ
!!.3LqZ$URquD<KK)bliq>^M^cN!qGc341MnGn.@o`,#M%Jp,*J^4;r!R1cH!.k47!!.0JqZ$VHcN!qG
f*1pQ!!A/[gAh7s$Msf'0<kM/!6tQE)YsF6R*Ps:"n;ZM!i>tj!!!&F!X"Aj!!)rt!/&T%!!UXM!!;Qg
XT/>%f)tdM!He_G!!%Vs"onhP!rrE"!2';l!TX@K!s*QPqZ$UOT`BZEh>dNrq>^MbcO^'ei;i9G!!1=G
c2[hGrWU[Q!K7Kb!!%f#$ig\'!9!nX!R1_u!;HNo!mUoLG7"-H!/8`-!"8Z(e,TILbld#,lMpndc345l
$Msf'3Rn+]!3-#!*r5j:T&M!_,6/dN!7:cH!mUuNN=Gab!/g4ai>Vb5UB&44!!:FM!I"kI!!%iQ)q5f,
(U*nK!!!)G"oriI$Msf'5`,Pn!;-<l+Sl'<T$JY^+Na\T!!!)`"R#shN",Xa!/f)C!#aAgO8o7^oE<nO
!I"kI!!%i$)upl;!.t7O!mUoLFpe*H!'n6uJcNUe!$;+>r;ZhecP$9i\c@<^p](>P%Jp,*LX-J2%*&@"
!:'UcF:%gE!/Af1!"@?WJcOX-!HebH!!#*`!.k3u!!!r6!!&G5#lk8!!.k3h!!.rdqZ$VLcNaFSqZ)3J
[f?GN$2X]&K@L5(#64sb!3-#"FUJ!G!&W[8JcM>A!#k\6!1iQri>DV3c3=7Of)W\gc2ds'%Jp,*L\qh8
'*&Wi"onee!4DmQ!<@6B$2X]&L<gM5&^CR\"RuJk!87JH!<I<MqZ$U\QN2U;kPtT&q>^Mrc[Z"@f0&gj
!$dp4!!;crgB@V;%Jp,*REoXKAE5H10E<&\!!!)G"T`fRqZ$V_cYEMknM&fR!#qd8o`+snc34;o$31))
!!$l^%KHgH!.k4G!!"/<!!'RU^AtsmQiLaq!Rh(p!!!/_&*j`,Oq%9g!3+;H!3F\&qh"lIblQ)i!!Mg"
h?s@3$2X]&V9c1BWSrHsJcJcp!R:ZF"TAeV$NYS]qZ$W1cfP5XmP<`V!!/hp_uKcaq>^N+cbBInqlJ;K
!.E)nj8eKG!!LRX!Kmoh!!'"KXo#4#XNm:8B[$VK!8[\U"O7AUHjTZM!2\\Um]->ecBnTGbl[kEd/X.L
c3jZ"$Msf'^@14CjoF/]FoVs&!0@0\-Md]B\bs4l^AtsmOoShL!4Mq.!mV&ONW9Oc!!'"EXT5HJHiQh0
!3-#!"53tP"p&uUqZ$Vmc`7&Fc?fOcrW&Jh!!DBgkQV'4$Msf'^<bpAe(5rA-AqlY!!"2=!!'RU^Atn,
8F&eH/"-G<!mV&PNXbjc!3+;H!3>WLhDbKXV?$8h!!CLN"*k1Q!;ultV9c1BVp7='+RT63!!!,Q#5AB'
GRF<J!5?eA!63%ZJcP*:!$V1=!4L4_!3O`aq\&r;RK*<rnM]5^!M0bt!!&nBVuW=G&+0r.#at_n$N;R'
.fkJ5qZ$Vjc_CK-mLS7e!"#D#p](:#c78pM$Msf'WR%XGH2@Sn!4Mq.5Pb?[Xjr1'L&cIT!8[\U,gMDN
YmpR1!1MnemVr59Q2o;4!$0@1!MBbr!!&DTE8ba9A"s%B!!""aGQF?BqZ$V;r"dct!"#k0[K+Sr!/p[R
!2@e$!&V@hWW3#`g:6gc!PAm=!!&)+0*!EC!1a)i1?YV"Vu`q*qZ$VTcS,>If)Um4!&O8CgS=kL$Msf'
9X+SL!7&7XdJ<hCT[,4j..IT"#QP%*!;-<l9$P*P%0-D,!!%u(,6/e1"oneo!3H5$3nLM.XT/\)!!%o&
,6/e1"oni(!2';l463I-WrNM(!!#H]!0R?Pk2#1r!!&kA9`R`C../J`(X<!\!R;,S=8ot]^An`?!!&/-
49.A/*oS.?&^C@V!S7YQ#lmE=XT/\)!!&&*4TIP?*n252&^C@V!TXUR$33T@WrNM(!!$!K!.k4,!6s[&
!!'(ZIdVXbH-T.b0$XFs!ra^t.faG2^An`?!!&GUC#Nb+ABm@=,M)qj!!!)G+95QhXT/\)!!&A`C"-hs
ABm@=,NJjj!!!)G+95TiWrNM(!!$l^%0-^J!3-#!"5;o0k5#&XY0W=4NQtE%1]@I'!WW>J2?7:NYir:l
\deN:!1hGc!-d$]pd+s-c2mtKc7/fjoUjm1!NHJ'!!&J6IK4TQ6gI)>-dDbn"3r=q;U1d5V@*2#!.N6F
!$Le3JcPHD!!1Ar!5JL5r;Zi!c\2@Hc7/f4mKDJO!!UXr!&`A.pf.?k%Jp,*Ra5mPB?hV"'`/$_"98VN
*WRYM7-d5AOU:mb!1;)N!,0k)q]GkQc3++Nc5ls7nO;;'!KRTb!!%#b'EAO"!.k3u!!$$q!!&qC@K9Hs
%cIlt$dAt/)>G'L)U9<'Pn!Tj!0kf)!(?\ke-Z0]bm*5BlOs74c4pA2$2X]&Ok!8):B3l0$NLLX#4WA`
'*&`l('/pmqZ$V$iW8HJPlR?T!&"*J!1rX(i?J=Ec2mtJf*;!Sbm+4Sc3s`9%Jp,*MYnFC)ZU`#!WWAa
#3uK<"TSbP$35DQ$2X]&LsI"?(sW0_"7ZSp#20CV#m#A[qZ$U]QN2U;kPtT.q>^MbcO^'ef*M-W!!Sel
!!W!1gD0gS%Jp,*LX-A/$fhNX"ongq!<<;K&-77eqZ$VMc4'4Ih?Er`V?->j!!UX["+CRW!;ult3JRTd
!;HNo.f',FT[,(f29pXN:AY%?!6tcK(?A$P8-,FoqZ$VTcQE3:e7neo!'\X-c3=7[nMoAb!KRQa!!%o&
+93kLC$o[850X)Q"oo873mfthN!fF^!(>*4mLA+aU&`+3!)34h!2n.S!-\7Ne@GXCc2[hFj:CPe!%6'+
!N?P*!!&;7;>X2j@EtnRI*M]l!V$QS$NM6n<<8EmqZ$VZi`#8D!+X<P!.2uk!!3'-d0p!rc;an.$Msf'
?LIpR!<<DN^]5_5!5ef^!<?[,!!'S-^S&=AT&]t=!WWAK/-%r\GlXoG%Jp,*WLL!iM=C])!rrJL+ojFQ
AG'I6RL/ik!2Z0c!/CITd/s@Oc6<6Ek@Ede!LO5k!!'a/k4n'=5FDND$/5adEV]Y8\Zrp8^AsqP#QP4W
4oe!r<ro0-qZ$Vq^9-7o!0#2-!!q:5oe?G(c:%i!#lju(!!&jbWrS%F#2oad#gP1*2qLRp7fe\YqZ$W1
S)s]=qZ)3JlMpocq>^N*cG%f@qn)osc4'a`c8P_anO25%!MKu"!!'"DXPp5JWrRgu#lk=X.f_4$2:48^
N=#I^!2\#A!3,CbiMZa/c3aOZf.?\J!%uPU!K.<^!!'^Yi;h^2c.'u<1p?th!!#Rd!!'LY\bio;[E`Uh
7Eu/=$1T"l)uqD49*(dsqZ$Vpii2@F!2[tD!&r1-!!iK<d1lX&c9),h$2X]&V!k/=V#[47=o^M5#5AB&
#L4(b*mQnLN=,O_!3Q15e@kpUc3*),K)bmIq>^Msc\;FIc6iT-nGqDG!!1@P!%uu_onidS%Jp,*Ra5mP
B?hOu&H2[W!!!&F#QQ+4FQdfITF(Jq!1;)O!,0t*p`9DIc2[hFc3OCpoQAo2!M'Sp!!%#b'`\X&!.k3r
)?>Ng!!&P8(]Y<@!.k4D!!#X9^B+iE!;ultLsH\6&%VbC!!#(3XnSpt$2X]&L!LD4&B=dD!!#+AX6Q_c
$Msf'4eVk=!:f4-k5#&XR*Gin!q$*i!L`ug9)cTP^An`?!!%Ys"RZ?M!WW7r!;HNo3mFc,$2X]&K$FMr
!n78O!O)Ri!!#+*WrNM(!!"e)!.k4,!6s[&!!&DG"mlK=$31:T!<*&I!WYm<^An`?!!%Z?"Q9I`"jRAR
#1ikL!6tWG4O'u.$2X]&K)>f$"jRAR#35dL!6tWG4jC#-$Msf'15Z(2!8?T-k5#&XS'M`J(![d!&,lUV
!R:uO<9M$Z^An`?!!%f"&(_Qk'`\Wd!R:oM6M.D6XT/\)!!%c"%fd1%(@)_9%*\gu#670:WrNM(!!#*p
!.k4C!6s[*!;ultU<be!2U3ZM([_@`!WW>J(B@=a[.q!/]++W;!0>GW!%Z>9!"o)1e,o[Rc4L%AjJD1=
!NHJ'!!%u(/H@<N*r?uY&^:F'&HG/fU#)IDV[E;$!(sBoK`M+Hd@pWcq>^MlcVFO4mNCI2!#!NXf,sc0
!'8DP!NZb-!!&/-56*bA):TN(%aG+U"6:<b(]Z/5B*"J.qZ$VVeN`pq!'8CC!"I3T!!Da.hA?5Ec=[0F
$Msf'<8mn0!71_k$NPAH!!&e_7,^N643e67#M/tN!!!&F)?:r+2$'6WqZ$VXr&)t]!&)V)!!VE`lMpnc
c4g6rc7&aK!"&N&!0,;`!&2\)!!_rnh>dNVc4g6sg*u\D!JUsY!!#l_!.k47!!#7[!!&\</H@-L!5nj;
!R22J&_dluOq%9g!0#5J!$(&"[f?C/bm_l,!IY:O!!%o&,6/bS!3-#!!SRtS%*f:aI0orSr;ZgcLB)o+
p](:Aq>^MccPZ]t`rOQgc3OCYj;7+u!L+&j!!%i$'*&Qm!6,#a"oo##&`+*#IgPuP!/8`4!"e)h\H'nZ
!"&W:d1HD.$Msf'4hC]G!5nj;.f',FS'MZH&,QO["TSYL!9==L"TSqU+9@f<qZ$VOeIDBb!"7'U!!LOH
nH@\O!!pjf!J1XT!!%`4%IOZ*%*f"V"3giF"jmJR$-jChJI;8S!'0KJJcLl4!&=<M!1j$+e/A<)c4'aZ
j8eHFc3OC\c6*+R!"Jf*!/Jl7!#*Wa!!_rnh#P_)!"7Kuobdd^$2X]&L<gP6'@$pb#6"VL!6tcK$g/Dk
)$,9qqZ$U\U]>uHgAh4.q>^MgcRJo?j:(>_!!gdL!!1@T!"mKr!L4,k!!%u(+93GP$Jl*i"jR)J!SRnR
$31O\'a'!n!!)rt!/f)F!$'8j!!_iki;`iYc3jU]f,",s!ItOS!!#EO!.k4:!!"YJ!!&V:,6/h8"8`0#
!mUcG!R;5V'(Hgq(]fj1qZ$VRcPlj$i<8QO!!:FG!!1@R!"Su@d1QJ0$2X]&LsI"?)"%Lb!rrDJ!!!&O
%/:52%F,UfIL>rP!'nU*JcN7[!%dsH!1_RWq\]ALR/la_h?X)jc5QeL%Jp,*LuK*9'*&T3!<*2M"ontT
'ENakqZ$VMmh=Xn!"kt+pAiJC!".!d!ItOS!!#1[!.k3'!!"YJ!!&V:*<7#&!q?9H!6t`J%,)ou+p"&?
qZ$VQcP?Kpbl[kEciD>o!".m.kSjPT$2X]&L<gV8'\<E\!mL_j"TSl$)qu;4JdVAT!'d^gJcO'r!&FBN
!2\"<!(QJhh@BSlblHGuo`5%!c6NL[%0-D,!!&/-5QEdh$NLD!!8mk&!<<AV*V^WUKF.MU!0>Gl!'&73
!!`<#df@Yo!!hR)lPoqX$Msf'<M9DE!8[\U2#71PX3Z1oEo@o()#t/8!!!<(+OM;4QOWfl!1D/H!+,(,
i=c1uUB(&h!!^^d!J(RS!!&A3B`MK:'@[Zq$a9Ws!!!5K)$,6pqZ$V5eI;<`!!S2ZWW3#Pq>^Muig9)"
!/\u4!"-sNrWpmW!".!_!Kmoh!!&SYJ`2.[F3Y0o#hK(N!6tcK#gNhZI0ocN!1Nh9e:7O@c3s[Yj8eHF
c3=7Sc3s]$!"/T'!.N6I!#iNNJcPHD!%7UC!3OS/!.iE#!!N9$ciD>s!"%ftkR@QT%Jp,*S'QB\CtAjc
"TS\M!6tcK#P8>W#m#AZqZ$V`c[#S-j9FoS!!LOHc3=7Rc3aT!$Msf'H-[`9&FfaP!5SX8,lRfB!!&e?
7K>N]!8mk&"oo.b-MSngRLT,o!0GMd!&)@mdf@Yt!".d,lPoqZ$2X]&NmBZb0[p*B!6tcK$h57o*<Cd"
qZ$UoXoO%Rd/X/(q>^MbcO^'dmJs<gf)k^K!%Z?Z!OE74!!%f#$igY3!1s8P"7$$h+O5H;UC$et!/8r3
q[<H4R/laZh?*a#c@5kf$Msf'3T:$j!71_k/HD(4!!&AS!oO.)!7q8G!R:ZF6I*.C]aai=!.t+Ndf[hp
j8nNHc2[i$c)UgNqZ$VIc3);knH%GHc2[i$g8O\C!N?G'!!"a?!1X&P`9>,>fD5IIQ_XWV!!!)F#0m2K
9(]mP^An`?!!%ST!:'Ub"3h%q!!#()XT/\)!!%P`!8[\U"3h&(!;-<l43af-$31))!!"[-!3?1Pk4e$7
!!&@T!!!,u#h'()!!#XP^ZrQ6%Jp,*JY<)@!!!/H#0m2K3q9?.XT/\)!!%PP!:Bge"3h%q!!#+[X3dmI
$Msf'0=q49!;?K<k5#&XQcK3W!<<5H#NPmN!!#I4]`8N=!!%T#!QP3@"O.,?!8[\U2pJE($2X]&JDpU@
!<<5H#6"VM!!"t&W;m;&!!"\@!.k3g!7'*pg\LmMRJ[?>#gNPQ!os?j!!"RqSH-"s%Jp,*K['eI"98Po
!3-#!,2.hFLB44XqZ$VKc3DPs!!E3#SH&X6kD&2T!MKkt!!"jO!07-P5MJC&Sb`<dS'MWG&**u]#64mq
!!!AO/HM=MqZ$VOcO9d]nHIbQ!!K/!o`+stc6<@G#lju(!!%_u%*f%W"RZ8l!!!;V,PWJaKaR\W!'-8D
JcP*:!'0lU!1M4B!"79Xq?"nDc2[hHnI+1]!K[cf!!%`!$31@j!q$*i"3gto!!!0$#ginYH3sHK!/8])
mK2>KbQHGsp](9rc3XMt$Msf'2okuN!4Mq.,l.K@Qdl69"98PL!!!/H$h44s!!.rdqZ$VJiWSWOc2[hI
bm=:KSH&\4$2X]&JaWa#"98PL!!!/R$24ap!!.3LqZ$UNquD<KK)bliq>^M^RfEEknI+1]!",S'o`,#M
%Jp,*JXZW>"TA\R#dXNp!!.0JqZ$VHU]C/i!!LRR!!p@?gAh7s$Msf'0<kM/!6tQE)YsF6QbEIV!!!)F
#MK1M!6tTIM@BOcr;ZhKRfEEjmKMMPblH>rp]1D<$2X]&J=?N="8`;O#0d//!UBaeFUJ!G!&(#GJcOX-
!$(h8!10hgmJm4fblZ/j!!<-&d0'K/%Jp,*J\(p@!!!&E"4mPJ!!!)G"9E]QqZ$VHa8j]i!!1=Hj8eKG
!!:FK!HnhI!!"\&!.k3N!!"):!!&AF!.k3u!!!)G"TaSlqZ$VImf7q>_uKc=c345m$2X]&JG]D!!4Mq.
!mUrLG5r!I!!"[0!.k4D!!"/<!!&@P!1a)i!p9aN"TaPkqZ$VIU]?JV!!;crgB@V%$2X]&J?]*,!!!)G
"T`cRqZ$UL^&W`b_#OHVrW)ls!1/H@XT/>%f)k^K!K%?`!!%S7!2';l!TX=J!WdEMqZ$VHT`C8V!!2Tk
h?!_#$Msf'0<P;,!7:cH*;TX8Qb*6L!5nj<M@KF_!.i2kJcN7[!H\YF!!%Q"!.k3N!!.3LqZ$ULiW+Q1
SH&X.q>^M^mf7q>O8o<=%Jp,*Jc#M"!.t7OF8uXE!!%P,!.k4D!!.3LqZ$ULQN2U;kPtT$q>^M^U]C/i
!!1=G^]<*h!K%?`!!%ST!:'Ub!R1\j!6tQFF:%gE!._c`h>dNVblZT!_#OR[$31))!!"[-!.k4G!!!r6
!!&@T!!!,u#h''`!:'UcM@KF_!.ggDqZ$U!bm(i]h>dRu$2X]&J?An?!!!,G#0Hqn!!.3LqZ$UL])[E_
_uKcUq>^M^a8j]i!!CIOj8cXh!K%?`!!%T#!65'>"O./@!3-#"F:%gE!.a&/\c;^4bm+.ISH&\5$Msf'
0CJmm!0@0\)YsF6Qi$iV!!!&\!pTiU!!%lV%Jp,*JXZW>!V$6I!i>tj!!.0JqZ$VHRfEEhrW:FJZN01h
!HebH!!"[J!.k4*!!!r6!!&@j!.k3r!!.rdqZ$VI^&W`b_#ORZ#lju(!!%P)!.k4G!!.3LqZ$ULPQ6:8
lMpo'q>^M^T`BZEh>dS6%Jp,*JZ]!)!7:cIF:%gE!._Z]JcN^h!HebH!!"[n!.k3[!!!r6!!&A9!65'>
!R1]9!3-#"M@KF_!.j,0\c;^2bldqFSH&\4$2X]&JF<K?!!!&O"8;nd!!.3LqZ$ULquD<KK)bliq>^M^
RfEEhnH.MJV?$8h!K%?`!!%S>!!!'!"4..V!9aC`F:%gE!.^jFp](9pblb`]gAh7s$Msf'0<kM/!6tQE
)YsF6R*Gp+"Ps7]"/Z(7!!A)f!!)rt!/&Q$blmG7JcPQG!H\YF!!%Vr#0m>O"8`(M!:'UcFUJ!G!&C5J
JcOX-!#k\6!1;%8i;eH0d/X3)%Jp,*K?j]$"RZ8A!5nj<F:%gE!.rK"qZ)3J[f?GO$Msf'1=ZAV!3-#!
)YsF6Qf8!s!1a)jM@KF_!.jS=JcLl4!H\YF!!%QI!.k3'!!%-A$Msf'08]a]!;-<l)YsF6Q^7](!9aC`
M@KF_!.gpGJcOO*!H\YF!!%PS!.k3r!!.3LqZ$UL^&W`b_#OHRrW)ls!1/H@JcPQG!K%?`!!%S7!.k4:
!!.0JqZ$VHT`BZEh>dS!$Msf'0<P;,!7:cH)YsF6U]!aa)Sc?)!6G3@3rMVNU(-u"!0I.?!#3ZXJcNF`
!%n.1!KRQa!!&&X3WKlJ!.k3S!!"VL3WY0HqZ$UoiW+Q1SH&X`q>^N$rMT]moEF1W!!K%sPlLfIrMBV)
%Jp,*U&C8W5gok?!/LUTI/T6/VuR/$!!&VhOoRet"TS\=!.k4I!!%BEO9)-aqZ$VZrF25rJcP0<!%.YF
!3Q(t!1_@N!#!l`JcOO*!K%?`!!%i$&-*4$!.k3r!!.0JqZ$VMcOg-dnGn.@_#OR[$31))!!#0;!.k4G
!!!r6!!&V:,QJq,!n.4T!:'UcM@KF_!/f)C!#X2f`WNmSh>dRu$2X]&LsI%@(uYS-"3LVk!!.3LqZ$U]
])[E__uKcUq>^MecQE3-qZYIQ!!pjZ!"@og[f?Gd%Jp,*M:EL@)#tDs"TSbP#lk>&!3-#"F:%gE!/BJN
mMQ!?c341Pc3aOXrW&Jh!HebH!!#7P!.k34!!!r6!!&Md&(D*i%aG4X$fi,i(B>5>!!%lV%Jp,*LX->.
$I/bS#k8M`&HEB>!;-<mF:%gE!/8`-!"7'U!"&W:ck3SakPtX+$Msf'3MZY,!8@JR)YsF6Ra2?A$020R
!WWPP(B>5q!6tQFM@KF_!/8`)!!i#rh?*`_c4L$fg&Sqh"*=hL!;ultK?ji(#L3DO#OW2^&Yf@$!!.3L
qZ$URPQ6:8lMpo'q>^MfcR&W7e,]@G!!gdb!#<0Ih>dS6%Jp,*MpE@C);tS`!!!2J&-*6`!7:cIF:%gE
!/SrA!#b2)i;`i^c4L$ff)W_h!HebH!!#@,!.k3[!!!r6!!':SVYd4jR*G[3'@&Z>3q34,!!!&F!We/f
qZ$Vhifieo!/&Ps!"[@.!%n0Md/X.Ic2n#h$2X]&SaV[!O8smX!!!P]0_d=%/^==r!R:`IFUJ!G!0R1]
e5u]+YQ0:U!$(h8!4gFj!4^;V!'B_<hO";-c2[hGg'%'O!K7Kb!!'"EXT5<F"9:+SK@,;OJ'J#o!p9^M
"9E]QqZ$Vmc`7&Af)tdM!&2]M!.N2n!!;cqgB7P#$Msf'^<bpA^#T1Y!7!>".a7t=!!"):!!'RU^Ate6
$Jl*iB$S!g\_7&V!!!)G"Ts_n!!)rt!3+;H!3+6L!)r<ciMlmWc2[hGf*1pQ!I"kI!!&kAWrT!A#QRj$
VpqUEV9T&@!osON"T`fSqZ$W1cfP5@e,]@G!!1Bi!5?,Hh>dNuq>^N+cbBIii=G>e!--<!!56YX!!<-(
d09W2%Jp,*WR%[HWU:/Q$NOJXXT5HS!;HNo!mUuNG7"-H!2\#B!2]Q#e-c7^cDprEj8eKG!!:FM!I"nJ
!!'a`k549@^!6TX"jZ61g[P9D!!"/<!!'Rh^[Ai:\BY?[D9flr^&A,]"3glJM@KF_!3,FhiN3*Yc3=8O
f<+hM!3FHK!!CLJ!He_G!!&knX440MUs9/E>3)aMWrT-D"3prJFT;dG!!'aZjoE*?!!!,kk2,5#gSOuD
!!"#8!!'CPY5k?C!WZp5^X9dr^!6c]"6T[J!!.rdqZ$Vmc^k,uf)k^K!)q1F!3FEJoDmVG!H\YF!!&_=
RfJH/!p]mf<6hNEWQkYI"3plIFUJ!G!1V;b!)`7dh>dNVcK5,]g&Sqh!#kh:r;ZhscYrknc2[hrmXO2F
!.2un!!:aPp](>P%Jp,*Qd8n::<ih>,5Z-)C&hnl"98Ma!:'UcF:%gE!0b`7!)M)EqZ$U@c>!>lc3"%J
nGqDG!HebH!!$TV"TSS^!:9d3%KHmZ!7:cH)YsF6T[,1i-LLro!WWbV/H@?R!5nj<M@KF_!0#5J!$(k<
e,o[Ybp)3K[f?GN$2X]&MU`sK,6/b0!rrbT,6/qX!3-#"FUJ!G!(>fHJcM>A!#k\6!2/d:iA1Hcc3OC_
f-pDB!%6%l!!1@H!K7Kb!!&#V-Ia@B,0gAm%ce\r*mO`c!R:cIFT;aF!!%r'-NGC:"oo,&*o.m_!!!&R
"8)`sFpe*H!(W@UJcP!7!$1n9!2e(D!)(oLp]pj;c8GYZc2[hFoE*bK!K7Kb!!&5/70#I2#3uHn'@&'-
.*_em!R:cJFU@pF!0GMs!'TiVh?Ernc7&`Ag&UdG!!1@I"*P"O!;ult<eg[,!;HNo*Voa9XNu_'HHlKj
'DjuC4od[h!os@I!!.rdqZ$VccZ9(te,]@G!"[@0!&)V"!!;Zjh>dRu$2X]&R*TjSB&NaX!!!PT1&s#R
!rrE%!7:cIFUJ!G!-Z[,!"82pJcN^h!#k\6!3XY7!/C@Ne,TIac9qY!j9=iQ!!CLH!K%?`!!&S?Jbsuu
ER"Oa&C*-52":_)"O6uJF:%gE!1MntmXP:Vc2[hVc8P_[rWU[Q!!CLH!HebH!!%K:0B"Pa(8Ckk!!!r6
!!'(tI+3NDD9`+])WXc];#jC\!!%lV%Jp,*REoLG=j@!I'_+HF5QF$G!;-<mF:%gE!1(rE!*[YJ!#5E!
d6[gtZN01h!HebH!!$f\$NL:\!.k4*!!!r6!!&kA;#j&G!:'Ub50fi%T$78\!!.rdqZ$VYcThIhnGqDG
!&;cY!/fJ1_#ORZ#lju(!!&)+63&si!!"eBMrBQoLnatF!!.3LqZ$UrRK34Ue49R)YQ3th!#k\6!1_@R
!#F&bqZ-\/cG'@mc2[hFnH7VM!K7Kb!!%i$'EA^'!U]sg;pMKFXNgeG!WE5L"9EWOqZ$VMcP-?kmK)8I
!*%7E!3+QMp](9pc3")j$Msf'4idWQ!!!&FjoF/s!4Mq.*Voa9SCJAO'`\ll!s!)]^Att;!8[\U!mV&P
NXbjc!/TVFmLK:-c3+,IcE.)JrW(=G!!CLN!I5"K!!%`A&E+0#%F,%U=4aMJWrT-E!!!,H"p&rUqZ$UZ
quEAi!!;6DlfJ3%RK*=2q>^MicSkhXc342`n\<qq!56YX!!V'foah.e%Jp,*O3]<V--cYo=8o>LXT5HJ
!!!/b%-S*#I0ocN!0#5T!%-;$p]UY"cDprEc2[hJoF0I_!IY=P!!#Wr!:'Ub"4$$/gW]`D!!"DC!!'.I
NW=V""5X+[>L'bZ\(UiT!!!2J&d+:+!!)rt!1V;[!,Kj_!(lUXiMcgUc2[hIf+.Qc!IY:O!!&D4GlV[+
!rtsjV:;=AUs8r?"lp-Y%0:kaqZ$VAcQW?"e,]=FcFs:\]`?mh!%IaE!4gFj!4^tfmJm5=c@>nCc2[hH
rX@0_!Kdig!!'"EXT5?g!9!nX,0js(B\*7Z!!!/I$3>J[qZ$Vmc`7&AqZ,+G!$fd*!,:KolMpnec3XMu
$Msf'^=DBCjoE!;!6u)T%.O=t!!";@!!'Rh^[Ai:\BY'S%*g4#-N4"m!!!/I%0;S#qZ$Vqn#bQN!3+6D
!".=!p`9DTc2[hIc3XMu$2X]&V>RCDWrSs@!!!>d*pXjI*R4Wb"O7>SHN4EM!!'aZjoE!+!.k4D!!";@
!!'OT]`>Oa!1a)i$g0/+/chFNqZ$Vpc`@,Ff)Um4!!r3AgEQ`S$2X]&UsH"?UuVN.!!!>N,lr`-qZ$W0
ceAH%nGn.@_#OHsrW)ls!4C.X!2e$A!!;Qni<K>ec2[hdf7!FB!Nch.!!&kATE(5%!!!,u"k3\U#0m2K
)!#ArBE=S/qZ$Vic^b&ue,]@G!!CIMc2[h]nS-io!LO5k!!&\<OT8SD!/1FP%+,I`H27L@VpArT=RH1J
!!!;M)?:Z,!;HNo3mP&4]++W;!0tl/!(Qhce,TIQc4g6lj8eKG!%lKk!NQP(!!&24<;TVp8Bq28#0mn_
'Cc(Z!!"UrTE1qtqZ$V&iW8HJPlT/2cBSCLq>^Mbmgn@f!"R9U!#*sDpc&73c2[i:c+a5fqZ$VOr!V!^
!".!R!"\-AlRW#dc2[i*c)gsPqZ$VMcO9d]c3"%WnL`TL!%Z=p!'Ao8oW%s!qZ$UVQN3NUkN:siq>^M^
cN=.Mf*M-W!$'9O!'ng0!(umug:mUsqZ$VJc3324lNR>(c8>SXc2[i*c)gsPqZ$VIcN=.MnHRhS!#Ej<
!&N=/o`+tRc)UmQ!!)rt!&96/X8pl7pZD;P!1;%9c3XIdq^p;L!%cCq!(u=elG!<.qZ$VKc3Dc'qZd*4
bp(F5!'9YPh5pY`qZ$VJc3E54mKW_(c6E<5c2[i+ri=DH!"/T'!&D.dJcPNFc0"j&!1hFV!#bY9e,o[S
bmNM6lN7,^c+a5fqZ$VOeJA#t!#*W\!!UUQnH@\O!'\Z0!"&N&!/BJKmM5d9c3"%Mbm=:Nd/sA4c)UgO
qZ$U\mf7q>_Z7sDq>^Mjr'Jn"!&q+^l2]*3!(5&A!5&:@qZ$VXcSPVP]`?jgc3+,)g8XbE!NQP(!!&#)
1]T)L!71_k!rt7BV<F`VW=&M&!)KBjNr\gcgV!U7q>^MbcP$9ij8cUgc2dn`c><T^%Jp,*LX-J2%.O=s
!87JH!<<hZ=Tb#t!!)rt!/Af1!"?F=huM%'!#4$gpf[]_$Msf'4-T`;!9=7J!s!!1!!&A2!Rq+5!!!2m
&`+*#Oq%9g!.iDri;eT4!!N91d1$,)$2X]&JBe2`!.k4G!!!2J%0:kaqZ$ULa8gel[f?CUq>^M^eGt1$
h>dNVc3"*+%Jp,*J`6Z]!7:cH!R:fKFU@pF!.aM<JcN^h!!1@I!HnhI!!"\M!.k3'!!"&9!!&D4"98VN
#QP%u!3-#!!nmhN"TaPkqZ$VKc32Ds!!W?%SH&Wkk60uO!I"kI!!%Vs"98VW#5AB&"e#Dk!qZZN"T`cR
qZ$UOYlK@Uc2[hcq>^M`c3WqOh@KYqbluf$o`+soc3XT7%0-D,!!%\t#0mVW$LS)U"jR)J"P3nR#6B,W
qZ$VKc3DQ&!"&N+dfn"s!!D9elN[H:$Msf'1nao$!8[\U,l.K@T$JMZ*T7Iq%0-g]$I/VO"o]1_'*4=,
qZ$VQcPZ]umKqhY!"-sVf)YRG!!UXY!IkFQ!!%c")#tHL$IfC_$-`b:!:'Ub"jRVZIL>rP!'f!6JcMeN
!%RgF!1r0qmN_cTc3=7Rbm=:Kd/X.Mc5-MG%Jp,*MXMSE*<6u&"onhY#58>I!!!2J&HR@fqZ$VPr#F3+
!#`!Fl3>N6!!UX[!.FnTqZ$U]M?&5.o`+tCq>^MbcOg-fc2[hFrW:FJc2[hJk8!1q!L+&j!!%f#%0-df
!;HNo!R1_l!!!2p&).TqIgPuP!/8`.!"7iflMpncblc5k!!UXZ!IbCQ!!#$n!.k3e!!"MJ!;ultREl-=
#J'o;!!!/R&,6Y9OU_0f!//Z&!!UCCTE"rpj9t8]!IG.M!!%Ys#1NX:!!!/l$f26lHOBWM!&UhYJcO0u
!$qC@!11:tJcPQG!!1@H!K7Kb!!%Sk!.k4:!!!&F!s*NNqZ$VHeGt1$h>dNVc3")j$Msf'0B)t`!1a)i
*Voa9QgXp+!5nj;!mV#ONXbjc!.k%JJcN7[!!CLM!-nPNqZ$VHM?'XV!!CpZo`bGA$Msf'0:)Zj!9aC_
+o20=Q_XVC!!!>t/))QTRLT,o!.hBTK)blVc6*.A$2X]&JA)#8!;-<l#L4FoKaIe[r;ZgNLB)o+p](:Q
q>^M^RfW?cTE"s:jGiJb!O3+2!!%SD!W)nc!!!u.GM[NETF(Jq!._3QmK&^U!#to]d<>V^$Msf'0=q49
!;?K=+97>r!!&D3"oAAM!jD[j!!#.,[fO)MqZ$VKeHG^Oc3"%J]`?mh!&2]t!NQP(!!%W1"mlK=!rrDF
!7:cH0[?HpW!`D%!&F!CJcN[gcE@5nq>^Mbr"%9f!"H.6l2o62!(tMN!"Jf*!/Jl.!"$=?h#bk%!'8i9
oW8*"qZ$VMcO0^[ao]okc2[i+kH!dH!"/T'!'-hTNr\h7g?/53!1V:H!"\,jlMpndbll;l!(tMN!"Jf*
!/Jl0!"8;sh>dNWbll`#o`+tQc)h$R!!)rt!/8`.!"@-Q!!;Qkhuq=*!'Af5pT"9$qZ$UVPQ7<UjQ>ai
q>^MacO0^Ze,Y[4!(udrh7iq!qZ$VMcNjLUi;eT4!':+]d&d9SqZ$VKcNsRVmJqh=p](:Uc)UgOqZ$UR
a8gell2])kq>^M_eHPdQc2[hGblmP:h>dO8cE[J^%Jp,*KAm%$"O6uI!mLlI!7:cH/C'piWsSY'!.sYC
i!%C+!!:aTpB8bA!%lKf!N6A&!!"eP!.k3Z!7$`-`;0H6Q^[sT"7ZZQ#gNDM("ud_=959.qZ$VIRfEEk
rW^^Rc2[hTk=4Z)!L!ie!!%PF!;HNo"3h%q!!!T&8D?Z9O:(jb!&(SWJcO'r!*8pr!11D"h>dNWbll`#
o`+spc4:#?%0-D,!!%S>!!!)g"Q0F.!!!/R$ht)1HjTZM!.^O=!!<$#dfdqr!!M?jlO*`?$Msf'0;/At
!8[\U-Md]BREc&r#jqru"e#Dk!WE2K!s+>iqZ$VLc3<V?i<B8bUB(&h!!1@J!He_G!!%Ym#1NhW"gA!m
!!!&F!s*QPqZ$UQeGt1$WW3#>q>^MbiXtPic4^0caoIt4!K%?`!!%fC%H%]@%fcme!0@0]F:%gE!/:=[
dgaS5!"%]dK)bmo!"/T'!',o:JcPHD!#k\6!1qLZ!$9E!!"8c+JcP!7!K%?`!!%l%)#tK)&,6Y8#`Jc<
!!.0JqZ$VNcPZ^!j:CPe!"#%nc2[lf$Msf'5J@,L!5SX8)ZBa8!!&\</-%*D%fcn'!.k4G!!.rdqZ$VT
cQW?1c3jUVqZ)3JlMps-$2X]&MU*IH*n1Sp$NLBf!8[\VFUJ!G!(<siJcO0u!#k\6!2%Ra!$^hAi=>np
blZJs_uKgq%Jp,*MpE@C)uC#m$NLFV!os?j!!.0JqZ$VPeK+N-!#s2k!!gaMnGoQh!HebH!!#@F!.k3A
!!!r6!!&VZ*8qk;*R5u3)V5>k$31C$!!.rdqZ$VQr"[]r!#Ej"!#4K"lNdIqRK*>0!"&N&!/Ac7c5cm!
nHdtW!!fA$o`,#8$Msf'5F2A%!9aC_)YsF6T?ekb3nL>*VuV1h$,?Pq!!.rdqZ$VScQ3'=jHf+t!,'O]
blH#h!H\YF!!%i$*WRh_P2;?%B?^\8!5SX;FUA*Kr;Zgac2c.!!"82pJcPQG!#k\6!3je;!2.WM!1Wig
dfclTlMpsC%Jp,*T?i/jNRY',X8n%#"MFfl!!.0JqZ$Vdc[u4UiMl7E!/8Z#aoKfh!HebH!!%Sr1]U&6
g>U`c3MQSm!!!r6!!'OS^&,Ro^Ash/!4Mq/M@KF_!3+MMqlJ&E!/J5fWW3'A$2X]&UuJB@WQqOEL<9Le
!!.3LqZ$W-n(ZgU!8Pl^!'f'8O8o8!q>^N+r4eo>!1i0NK)bn/!"Jf*!3)Hi!/L(EJcPHD!H\YF!!&jb
WrRnR!.k47!!.3LqZ$W1UuqI7!'cDBgAh3lq>^N+Z+oV>!1fMXc2[m&%Jp,*WP5LkXT4-R!5SX;F9qpI
r;ZhoS#ZODmJqh=p](>;$Msf'^746b5PkG4!:'Ub)YsF6\^/"j^=9ak\c@n^!!!,k%GhNpOU_0f!3+8G
iN)CI!.C:9!!N9-d0Ti#$2X]&V9c1BWpZhEVuV7@!;HNo"3q5SHOBWM!5?eA!8m[leAM>7YQ2-4!$qC@
!4^Rmqn3!Ac@Q$o]`?mh!!UXa!L+&j!!&tWXR<.iWm5D\6HT;U!!!2J&HR@fqZ$Vln#G?H!2n+Z!(5?<
_uKc@c4L)+$Msf'^&6[8g]5UE'&rtE!!"SH!!'+HM?&4Q/cZg[!3-#!#20sf)$,s2qZ$VccZK5(c6E<'
rW&Jh!!_U"kS!uH$2X]&R*TmTCtBp,,6/FH!!!5q'AF0$IL>rP!-Z[.!"e2kJcO'r!%dsH!2@e'!'9X"
hC8LCblZT!o`+soc3aZ8%0-D,!!&)+0`WiO+93)C"5j:,!!!/R#l"Z+H3sHK!0#5Z!%uP>!#,53df[kq
!!D9flNdN;$Msf'9VDH<!8[\U,l.K@UX)1*5N+He1]SZC"jR)J"TAkX%0;S#qZ$VXcSGPVmO7$B!#a#a
f)YRG!!LRR!IG.M!!&#(1]&TM-ib.0"lo[L!!!/I$3>J\qZ$UleGt1$WW3#Eq>^Mmi`bbR!*@H6!%Q+m
d/j:Yc8G]p%Jp,*POD*%8H;3)2#ncN!qucA!rr_S.fkJ5qZ$VXr(>I2!(Y<n!$L>(l2o65!"7(&!/:I\
qZ$UuM?&5.o`+tVq>^MncXQr]c9qX\rW(:Fc2mtkkDJJ\!O*%1!!&80:B4&>2>B$/*mF]1!WX85FPCm<
TF(Jq!0PT)!);N5lSeebblH#j!$':,!M'Sp!!$9M!Up)@!;$9:)?>Nk!;ultVU&?E<mF)5...);!!#XC
^\>JC%Jp,*PKu\u7*[Xi*r>r1!!#(@Xm3"g$2X]&OO$Gt7asBo2ZOnf!!#+NX50fV$Msf'=KVXX!<2--
k5#&XVTrH7>N&cd2PU9I!!#X9^An`?!!&8/9)D308H:6E!:'Ub3mFc,$2X]&Ok!/%9[661.D5`<!!#+*
WrNM(!!$3^!.k3t!6s[&!!&tdCZ0%/EmC6VCY&R)!!#X9^An`?!!&>_<n(.M?I"E.<oa7i!!#()XT/\)
!!&2.<rcRPL]CNH!3-#!45-b-WrNM(!!$KS!WWDL5QClb!1X&Pk3(n'!!':MV?!UI](ii:P*u@N9(]mP
^An`?!!&\<P5ps1Wp?YbI@:-93mFc,$2X]&S^3AtPOYU.VuV7C!;-<l43af-$31))!!&)+=9)pXa8d[W
!3?1Pk4e$7!!'R!^Asi%!2';l2rq4/YQ;<EqZ$VqTrn3o!/I!C!%[T4hOjnM$2X]&V66leWrRmC!!"SL
S^Eu/V[E;$!5?)-iT:,)UB(#gc@u>7q>^N+aM66>!1h@8j8eKG!#X!n!N6J)!!'"KXiIODLWoki!8[\U
'$aDVQ3mEg!2\\U\uPgcblReDd/X.[c;Xh-$Msf'^@13djo@Wt!5ef^!<?U*!!'S-^S&=AS`Bh:!R:ZF
$I17(RfEop!!'!fXT4.H!Sme%!!!;Y,P<8^LC*hX!2Z0c!/CIRciMDl!!qa6kTp7a$Msf'^80odjo@W)
!8@JR48JpW\Zrp8^Asgn!!!;M*s%];qZ$Vq^9-7o!/IEOo`+src56Y8#lju(!!&jbWrRnB!3H5$#1j^e
(]f0pqZ$W1S)s]8qZ)3JlMpo>q>^N$c_piAe=-9'!+qZ"!"&0FhC8Pp%Jp,*U!K#)Pi7>aK`G&?!!!9'
+OM;4KaIVV!1qN"!0Q]%iI_,0UB(&h!!gdl!JLmX!!&2.@K9[12:OJ`!O)R5!!"tS!!&qI?i+11=jAo*
+2%[2!!!>N.fl(JqZ$V\i_8c6!(Y<b!#WiYd/X.Oc6*.A$2X]&Omc$'9`Rc1.f^F<!5nj;#L4FmKaR\W
!*oF%JcLE'!&s`S!1qL]!$TVs!!r)pWW3#(g)Tc*!L4,k!!%o&)ZUc$#lk2/!1a)i"m6Wa'`ijlqZ$VP
cPlj&f*_9[!!\kl!!`'2gD0g?$Msf'5d:<@!6tQE0)>PJS'MWG&+Kh["TS\&!;-<l"jR__OpqBkr;ZhQ
cO9d]c341NmJs?h!!Lm`p^R=Q$2X]&L!C+P"TS]&!2';l"lp-Y%0:kaqZ$UVT`BZEh>dO)q>^Mbc5#:L
mLT@)RK*<nr[-#>!LaJp!!%f"&+0kb$igO-!;HNo#0n1hKaIVV!/Ac1q[Cs_!!f_.lMpnhc5cq<$Msf'
44O=_!3-#!2>R:QTAh3b-I+">(sN-]!7:cH/'a[d[13!5!/p:ci#L#`!#!lbpB&V?!$KRB!Mp,"!!%iQ
*Rc%S*WQl7!pTj4!!".eL&dnI$Msf'6AbcB!89[156.AQ!!&b=3mKV`*rZ2e!R:ZF7d%JJ]`8N=!!&)+
/c[KT.ekIn(X3!+!!#"NXP0`U$2X]&N6a*V/`\AH.0(1/!R:ZF36nK(WXAV'!(ss*JcPECcJ&?SrW)ls
!2.Xq!&i+^!$Ub1XT/>nf>%'p!"Jf*!0,;R!%Q8F!#bY6TE"sQjK7^L!"&N&!/o,Oe1LPL!#h:+!'B_O
h5^M_qZ$UdXoO.UroVSiq>^Mgc7JB9i@Y*LUB(&h!(tMN!"Jf*!0#2Iq]jT8!#2X;lMpoGc)gsPqZ$VR
eKXi6c6WH*]`?mh!'AH+!"/T'!(>fHJcO-tc0"j&!1N?bXUG17f)W_h!(tMN!"Jf*!/:=XTF(Z&j8cXh
!'8B,!"&N&!/6mK!!_rnWW3#\g8jkH!"/T'!&p5ES,ha7kN;U@!1;(9!!LmRO8o8PoY0%n!"Jf*!/&Q"
j8af4!'8B+!"&N&!.rN#!!MflJcPHD!'8E)"0)\.!;ult15>k2!8$'%h#QF1!!&A2!lk;6!!!Ym<9mKa
V%*;%!.rJue,Y[4!"SNchEh7*$2X]&J^+AV!/:IR%K8cC6ii;TqZ$UN])[E__uKd:q>^M_cNaFSqZ*5g
j8nQI!!UX]!L+&j!!%Z%"oAH'#+5J]!T!hW"jRVZIgPuP!.s27m08sYrW1CI!!UXY!IbCQ!!"eC!.k34
!!"MF!!&Md&(D*i%aG+U!TX7G!6t`J"3prJM?"+_!!%f#$NLOZ!WW8k!8RY""PNqM!WdEMqZ$VMcO9d]
c2mtHrW(:Fc341Mk5siK!HebH!!#$T!.k4*!!"#8!!&M6&*+2c%0-[Y!R:`H"jRPXOU_0f!/Ji-nHn%Y
!!^[Kg&gpK!!LRR"+(=S!;ultL!C(O$31:u!T4"(!WWDU$MXr/HOBWM!'-8DJcP*:!$qC@!1D+<e-c'[
!!gaNc2[hMnKHa4!LF8m!!%\t#2ojU#QP%Q"O6uI#6#Lf)$,<qqZ$VKc3E\Bi<TDfblcPtp](9uc5H_7
$Msf'1roZK!4Mq.1&:kMQdl)V!!!)F"n;TL!!!PT567DdqZ$VIiW-Oi!!CILrW(=G!"7(-!K@E_!!%Q<
!3H5$"4m_N"jR)J$dLO/M[K=]!&+6MJcLE'!(Zkc!10/T!!D`sh$D:+!"[dIof`DL%Jp,*JXZW>"TAVP
#0m2K$g08.0`d4>qZ$VHU]C/i!!CIMc2[hPoJ5/V!K%6]!!"[W!.k3r!!#Ia!!&A"!8[\U!mLl%!;-<l
$I1.(RLK5sr;ZhKRfEEimKDGNc2[hMf-'i2!JLjW!!%P=!!!)t"OdM!!!!;c+R:-NKaR\W!&(#GJcOX-
!&s`S!10hgL&_2WrXmNi!Kmoh!!%S^!.k4G!!!/I%0:k`qZ$VHa8gellMpngc4'f&$Msf'0@^&S!3-#!
-i*fCQf8!s!1a)jM@KF_!.jS=JcLl4!H\YF!!%QI!.k3'!!%-A$Msf'08]a]!;-<l)YsF6Qd5a6!mL`E
!RLkR!9aC`M@KF_!.rN"!!CgQpAiG=^]<*h!H\YF!!%Sq"69II!6kPh!6tQFFUJ!G!&;1fJcNUe!#kh:
r;Zhbc3;Jo!!;Qli!#kUp](>P%Jp,*K?aYG!<<6!"k*XZ!:'UcF:%gE!.rK"e,fFI!!CIL]`?mh!HebH
!!"dW!.k3u!!!r6!!&A2!q$3M"98YN$eGIT!WW8H!!.rdqZ$VJc3*qHe-#aUbm<A3lN.%ec2[le$2X]&
J^jl!"3q#L#0dJE!o<tY!R:ZGFUJ!G!&<I5JcM>A!#k\6!13-ShuM%(!!Us^pC#4Ic2[m&%Jp,*Jc#Ms
!6tZH"losS#gNMP!mUcGF8uXE!!%Pp!6tZH"n;oT$-iVQ!nmYI!!.3LqZ$ULQN2U;kPtT$q>^M^U]C/i
!!:CJbl[M;gAh83%Jp,*J[#4@!!!)F"O7)L!mUcHF:%gE!._c`h>dNWbll`&o`G0qc2[rh$31))!!"[-
!.k4G!!!r6!!&@M!7Lqm!TX7H!!.rdqZ$VIT`E(4blR>7h>dRu$2X]&J?Am_!6kQD!7:cIFUJ!G!&(qa
JcN^h!#k\6!11b,JcN7[!K%?`!!%T#!.k3N!!.0JqZ$VHiW+Q1SH&\5$Msf'0CJmm!0@0\)YsF6RJ[<>
#64t4!.t7OM?"+_!!%\u"TSb?!.k4D!!.0JqZ$VKc3DDkJcP!7!HebH!!"jO!.k4*!!!r6!!&J6$31@m
!4DmP!mUcHM@KF_!/8`)!!_rnW;tWRoE*;<"*=hL!;ultK?jf'#.afm!6kSs!;HNpFUJ!G!&]u@JcP*:
!#k\6!1M4@!"%-XqZHm$RK<HknH[nU!KIWd!!%`!#QP+g"RQ?:!mUlJ"TASP"T`lTqZ$VKcNjLUmKDJO
!!CIIf)taLc3=;o$Msf'295cL!4Mq.+o20=Qdl69"98Ol!q?9I!!!)G#Q]qpqZ$VJiWSWOR03Egd/X.K
c3=;p$2X]&JaWa#"JQ"m"3plH"3q)OGmaEK!&=BOJcLE'!$_7>!10/T!!Vm#h$_L.!!:jYo`bGV%Jp,*
JXZW>"TA\R#gNDM!p9dO"p&oSqZ$VHU]C/i!!UURc2[hGoEO%S!I"nJ!!"[W!.k3r!!"/<!!&A"!8[\U
"3h,*!;$9:!<\2g!!)rt!.gU>!!M]oi!.F+f)bXI!H\YF!!%P=!!!,u#1Ee$!9=1H!<I<MqZ$ULT`BZE
h>dNoq>^M^XoRki!!1=GaoKfh!K%?`!!%S^!9!nX!R1_u!5nj<F:%gE!.`,je,TILbld#,[f?GO$Msf'
0@^&S!3-#!)YsF6Qf8)6!gWhW!!.rdqZ$VJmfVJMUB$AU!H\YF!!%TJ"4I@V!.t7OFT;dG!!"a2!.k4D
!!!r6!!&J6%KHp[!1X&P!U'ObM@KF_!/8]*f)Uj3oE!\I!H\YF!!%`!$NLLo!.k3r!<I<MqZ$UT^&W`b
_#OHRrW)ls!1hFS!#Ei]!!2KfXT/>&f*M-W!KIWd!!%f#'EA]i!WW8u!2';l"69[P"p&uUqZ$VNcP-?k
e,oLK!!/Mg!!D`qh?F"*$Msf'5HY!<!7:cH+o20=SB_o<&)e$!#bqCp!!!2J('0X/qZ$VPc4Kj\e-c6\
YQ3th!!UXZ!IkFQ!!%`'&c**b$NLCE!8[\U"jR\\IL>rP!'T<AJcM>A!%RgF!1N?di=5huc5-Hif)W_h
!!^^e!L+&j!!%`N$IfC_$dK=a$02)q!!!5K'EEU_$2X]&L!C(O&HE1.!3-#!#20da'EN[jqZ$UTQN2U;
kPtT7q>^M^cN!qHf+n&q!"@*Qc2[hIoFBUc!Kdig!!%Sr!!!,^&*j`+$I&Us!!!/I$3>J[qZ$VHcN!qI
nIXOg!"$mNg&UdG!!LRT"+(@T!;ult08BOZ!;HNo,l.K@U]!U]):SWd!R:uO#Q"VP"3plH!osXV#QR3i
:B@4"qZ$VXrAO]ie,TILe-GjU!!UUMc2[hHnHS"X!&XX=!K[Wb!!&#W2ZON@!!!&Y#OVfs#0d7q!!!-#
#1`tY2#TW>NXGX`!)^?.JcN^h!)iXn!3uL#!(tK9e,TIMblm)-lMpnddg,r@rMfn.%Jp,*T`()T3naSS
!!!)F"RuKK!!!,M"os;SQiX2nqZ$VerK.(Ak5`'n!!:CJrW(=G!!C[S!.t06!Mg)"!!&/[>k7rI!0mNa
1Athc[e]t(Qi$iV!!!&\!pTj4!!!AO/c_@@%Jp,*JXZW>!V$6I!mUcG#hgNr,6<Q+qZ$VHRfEEhrW:FJ
c2[hMk9]=<!JUsY!!"[J!.k4*!!#+W!!&@j!.t7O,gMDNYmpR1!.hiaJcPHD!$0@1"/#r#!;ultJ;4-,
!!""jGkcLaSI55o!&'Q:T)dpqlQH7dq>^M^cNF4Me,Y[4!']q_hRETu%Jp,*K$FMX!/:IR1&e3#WWB.,
qZ$VIcNF4MmJqh=p](:LcD:Q?$Msf'0us?H!9sR0ZiJGK!!&G;$2Y#/#`/Q<!!#X9^An`?!!%]3#OVfs
#*o8:!!#()XT/\)!!%Z?#N5mf#,;1:!!#+*WrNM(!!"kR!.k3Z!6s[&!!&G5#lk7V!WW8k!8RY#!WYmI
^\#8@%Jp,*K[0l'#0m8M!WE)G!6tWG4Qij0XT/\)!!%Yt#64t[!r)fs!R1Vi!WYCUX4jTS$Msf'1pI%4
!6s[&!!&A2"RuZP"TSYL!87MI!WYI1[KF/O!!)rt!.pXBmJu/Fc3"&%f;JDA!NQP(!!%Sq"O7/N"8`)I
!6tZH1ZY=sUB.;#qZ$UNT`C5UnZ(HG!6t??!12"3!!2$^mKERmblH#i!$hK"d>7n.%Jp,*J^4;r!U^-M
"TS\M!7q8H!<=(aErhm>qZ$VHcN!qGqZYIQ!!CIGj8nQI!#s4*!M'Sp!!"\&!.k4,!6uJ_KDGQJQf8#4
!1<of!7:cH$I1:*Rgo5p!.jS=huKMRpB&V?!!pjq!J_!Y!!%QI!7LqP!pTj4!!!;M,liZ"$Msf'08]a]
!;-<l48JpWQ^RpR!RLkm!!!)`#3Z6lN=Gab!.gpGpAiG=c2[hGoEO%S!I"kI!!%PS!9sR/!R:ZF!mUuN
G7+3I!&)%dJcNUe!$M7@r;ZhaLB+CUf)bXI!K%?`!!%S7!1s8P!UBaeFU@pF!.^aCOoY"Qh>mY"$Msf'
0<P;,!7:cH*;TX8Qb*6L!;HNo!R:iLN",Xa!.i2kJcP*:!!1@J!I"kI!!%Q"!.k4-!!!&F"T`cRqZ$UL
iW+Q1SH&X2q>^M^mfMDKUB&44!!LRX!Kmoh!!%WK!n.4T!4Mq."O7ATHiOKM!!%Sq!keT6!!!/U$hXl.
HOBWM!&9f?JcP!7!%.OB!11t4f)Um4!!W!,gCXIL%Jp,*K$FJZ!.t7O"O7GWI0ocN!.iDtnGn.@o`+sq
c4'l($31))!!"a/!.k4G!!"DC!!&_=2ZP_\+TN/P!7UuK!R;J]&EEoY!We/fqZ$VUcRSuEe/A-$!"R9S
!!1@W!"AB"h?*e$$2X]&MpEpS.H)35)?:5l!!!&F&HE7="472OFUJ!G!(a^%JcN^h!$(h8!2e(G!*8tT
e2@:Mc2mtJj;dJ*!#!QW!K%?`!!&558c)'Z7*[:_)9r<a"S!5`'`\`h!!.0JqZ$VXi_&W2!(P6a!#j)a
rYEls!"I3R!HebH!!$-i!.k34!!!r6!!&tqCXd,"B[0HT3oh%@(!\$()U8KdMuX=a!!&>2<WH(D5QED+
&)@cA)ZUT+"SDluG7"-H!0YZ0!*%61!%n0]ck+JA!#4T"kQM!1$Msf'@a>)U!S7='!8@JR*r5j:VpArT
A`R"[=TD";/']==)U8NfN=Gab!0tl/!)`8VhF@Q*bok^Zoc!lFc3=Ap#lju(!!&2.;ufkB8H:g>+Q+Bf
)ZUT(#5AB'G7+3I!+*qO`rL\klMpo-q>^MmcWL6Le40:(c9qY"c6<6/nIOIe!Kmoh!!&5/7fZ!:3:/]M
29m-@(B+]h$NYV]qZ$VXcUe+,mPs,ac8P_]f,OK(!#Eig!IG1N!!$-B!.k3[!!"AB!!&nH<r5nt;U.3$
4O-Cr7I_PX+TNJ,$iuJ"qZ$V[i^E3&!(+s]!&2\X!&slpd2;ouc3aT!$2X]&ORGZt7K>g$/-%BU3;>H5
2pN<A(![*dHOBWM!*9!tJcLE'!$qC@!2Ik-!(+sgn2B)\c5Zg!g'%'O!K7Kb!!&,,2#oJY.0(js/(#jI
.aAb/&*F)Z"9E]QqZ$VUcSbb[f.$GCc78lDc5$BkoE<nO!HnhI!!#m$!.k3r!!"):!!&e?5QF:DEo(g:
=NrDN*q^QS(!Zd]M@BOcr;ZhZcSGP\c<^K?mNUR5c5-Hkf)YRG!H\YF!!&#)1B9D[?3!On,1@a](B>$-
!:'UcFUJ!G!)Ll?e-5^QL]H93!#k\6!3"4Y!.<b=m_&V$btcP?!$qOHd0'K/%Jp,*QHrP2BC;k[X8n[5
51_.V-3,(3"9EWOqZ$VZcW:*[ql/)E!0temj<s7@!$'8e!HnhI!!$KY!rE$!$dRK,BtXMH!!"&9!9(?R
[/d\]^AtmkYQ1m+=OC4N7a;qRPn!Tjm\Sm=!3+8G!34YCpn%PVc:.dnc4g;1$2X`"U"#b9Us?"@VrXE7
SH,)'8,tWp'``aa$MshKVZ<pGjoETpKAM4\I&6o:!!"YJ!!'Qr^X9dr^!:Bn>j"'02Z]KZqZ$VqUohS;
!3FIH!(ul6gFE;^$2X]&V6R)1WrT0F<rbq>/-1P6qZ$W1^?2HX!8Q90o`EA<!'pM`r;Zi.LVMf_!56Zp
!,0t`pf%9j%Jp,*WKaO7XT5HJ=o_L^6L-r=OU:mb!2ZBia/]3?c<C9JnO25%!KINa!!'a9k.9[Tgs-$&
!WE)H!!$!p!!'RA^TG6N^"6`g@K9ZY;$!F$qZ$VqaK;,;!3G6VlV7FPc9MDl$2X]&V:DW1WrT0i:YnkI
9[5s*NXGX`!5@ITL?8KkrW1CIbl@`Aq>^N+n%[hr!56[e!4pdspqHgBc:@q)c9hW*%Jp,*WVimJXT5HJ
W;rsZXm<(hXN``M2#rU9$2X]&V9c1BWm7C?W:?qFWrT-E3WM.n2YAs/M[K=]!5?eA!8Pl'!6G0%dH1G`
ZN01h!(Zkc!4U:d!4UR2pjiF7cEmSWc8kqhoLR_-!MU&#!!'"EWrT*ZD!Pm;LX)^rU!>7j1!V`ZNsY[`
!2Rr=!2T.$hJ<1GcCk60g+N%N!&Dh\",mQe!;ultYKt2gXj.IX3UWBqRfJVH!;HNo9_n_hZ-T6HS^'t1
@f(T'I/nW>3WM_3C[5a:W=A_)!2.Z#!/K&fq`Y!Tc=d2jc7K#UnQ+LI!LF,i!!&S9NW=gm541T7:X3YS
B?i(/3rW4.<rnKlqZ$VScVsm/mJu2G!!1@R!"7BYpAiJ?!+l!,!3=Fp!.as,e;aNSc:S(0jBCkQ!.)qm
!OrU9!!&G;C&;TECX.2*ABm494Rl#"8H<AJRK9AoqZ$V^ib@gp!,Kl)!+aA:!'U<Rd7OCNcBnX/$Msf'
C[V_k%0-m`+TMi#!5nj;$I3\m^%q^/Z2CBHUB%4;\cAhmHg?"YI*RiSV9QaT%Jp,*T[/]"Q-QE1Rdk%H
B?ki(OkQr0XT/\)!!&S9NW>6fVuW1`B@1>lB[1r)O6<S,WrNM(!!&)+;?1%T_YCtJDp8[8,QLj:k1\to
!!'OS^#Zro^Atsl\'CoPZ-C#`%Jp,*WR%[8Xkp/[XNmdFW7mR1Q2mT&XTAe/!;ultUs>sbWrT-eUu8&o
OoV')X7rXp$Msf']$K+2gs5$^e,->uY5k]M@K;JMk3D+*!!'R'^W4(h^<X"a\+.5h^An`?!!'"$XgtRZ
U&_1lXjF0M$2X]&V7We1WrT0OT(nlWUs5q?$Msf'^<#H0joFH&Pj=P6YKc5+!!'R[^QZD4^@APdZN.M[
^An`?!!'"XXbNqXXT#!BUB%:<XT/\)!!&kaX+IDIWrT0FTE(e4WrNM(!!'b2k(;a]joFAcPlS)6k5#&X
\Ve/Y^Au!nT`D4K^\#8@%Jp,*WL'a6Xj2n+S*-p:XT/\)!!&jkX2M%=Wm6M&R.RH5WrNM(!!'a<k-sIQ
hp+amH-PLJ!!'RD^T,$K^=nP=Mu]Wt^B+iE!;ultWJ@V7XT5HJG6!`VXnSpt$2X]&V3J%1WrT-EFo[Q`
X6Q_c$Msf'^7j]0joF5_*WT+.k2#1r!!'RU^Au",]^EE4^!=@m^<V<1Sc6=L]`8N=!!'"EXT5HjX5U)Z
XNmpJXOh@bD?,I:X8iS(!!&kAWrT0sW77aGWQqOEWT7p^D#f=9W<'"+qZ$W1e`Qbk!9)5M!8Gf]!8[/X
h@]fQcJ&?Sq>^N+ikOor!5?aj!4C(Krh@f7!3OM[!"Jf*!3,FhiN3*]cDprAf9>rmcAqspcE%&K$2X]&
V>RCDWrT0FVuWOPOQqqQMu]6iWW3D'!!'aZjoFAcc2ad4=P[*)8cX.jiUu.0j8&`U\^%t8^&YV@RF.E&
Ra/5>\ECWi^An`?!!'"DXk0ZLX8o0DKE-_OUB%:cXkKlW$2X]&V9Z.&Wp?YbUX"JlL!H=kUs5q?$Msf'
^<Ym2iSNMnWm3F$2qjPiPlS)6k5GAZ!!'R!^[8_m^!4:C^\>JC%Jp,*WLL$dXIuZTXm3"g$2X]&V4jse
X-opeWq!.GWrNM(!!'a9k3h@3gWe3mh#Q@3k0W8e!!'RA^Oj5<^An`?!!'">Xb*[`XT/\)!!&kGX+ICO
WrNM(!!'amk(;`ck5#&X\aR:b^Q6,0%Jp,*WVilMXb*YT$2X]&V2D=*X7WFm$Msf'^6du6k3(n'!!'R*
^Oj5S^An`?!!'"'Xb*\"XT/\)!!&k0X+ICfWr`V.!;ult^5(j&k4e$7!!'Qo^XKsC^#Qil^&SW>!!'!l
Xi@KfXRWFKXT/\)!!&juX1>:UWW&pEWW3D'!!'aFk,d^sg\BM'h9G!V!!'RN^S&=A^>ufh\B_Yd]aai=
!3+MNP-+8ShPpRScDgoH$2X]&V;eP1WrT1!UsPp_Vu`k)qZ$W1n)f5apuVS:cF*_dcH$"?q>^N+r4diu
lG(WX!5$OZ!4`(=qZ$VqMQNn\!3=hEopl,`$2X]&V3e70X3R[EVrsN4RK98mqZ$W1UuoSWcJ/E>oR>PD
!5A:0!4fALK"oRF!"Jf*!3*]7Juuhj!XSi,r;ZhoLT?$-pT"9$qZ$W1PidS[lK7pC!4ef<K"p-V!"Jf*
!3*-'K!!D%!"&N&!2[<.Jucei!"/T'!5?P:K''N(q>^N+e\?^NWP8EBqZ$VqiiRg7S?2btqZ$Vmn#M&@
O/i6fqZ$W1r8rUnK')n0!4e!%K"prm!"Jf*!3)<eK!"4<!"&N&!2ZKlJudV+!"/T'!5>`#K'(>?q>^N+
^;#97^qTp[!!)rt!3(aUK!"dL!"&N&!2Yp\Jue1;!"/T'!5>/hK'(nOq>^N+Y.oS'd(]PiqZ$Vq]<-[e
_lWnFqZ$VmaK'on[]9B8qZ$W1e`MJGWTO$W!4h+(K"mhj!"Jf*!3,FhJut*9!"&N&!2]UoJuaL(!"/T'
!5=?QK')^fq>^N+QbS-ekJ%!+qZ$VqUof6Ng8t>]qZ$VmZ)`JWc)UgOqZ$W1^?1%0^ukUrr;Zi.LVJGU
pV-\;qZ$VqPc]P>lE($mqZ$VmTrWdGh5^M_qZ$W1Y3(>ud,t0)!4f_VK"o4<!"Jf*!3+&AJuuJ`!"&N&
!2\5HJublO!"/T'!5@ITK'&Tcq>^N+n%XIhO1tZ(qZ$Vqr2kRQJuo"ZqZ$VmMQ;?0oW%s!qZ$W1Qf`n^
kN;U@!4eo?K"p$S!"Jf*!3*6*K!!;"!"&N&!2[E1Juc\f!X\o-r;Zi3LZX3NpZD;P!4e?/K"pTc!"Jf*
!3)ZoK!!k2!"&N&!2Zj!Jud8!!"/T'!5?)-K''u5q>^N+aM3>A[_DeOqZ$VqeZFG*WN?.,qZ$Vmii@[3
S>uVsqZ$W1n)f5aO669=!4i$BK"loP!"Jf*!3(jXK!"[I!"&N&!2Z$_Jue(8!"/T'!5>8kK'(eLq>^N+
Z+kn*c+a5fqZ$Vq^9*!h^o[YE!!)rt!2YIOJueXH!"/T'!5=][K')@\q>^N+Ttc2oh7iq!qZ$VqY-!;X
d&d9SqZ$Vm];pOa_lEbEqZ$W1aQA*:[c[Dd!4gXpK"n;"!"Jf*!3+t[JutQF!"&N&!2].bJuas5!"/T'
!5ABnK'%[Iq>^N+MSFbXoY1A8qZ$VqQ`YkAkH+^jqZ$VmUoT*Jg8b2\qZ$W1Z0$Z#c0"j&!4fhYK"o+9
!Y#,0r;ZhsLTQ01pT4E%qZ$VmPcKD:lDjmlqZ$W1U#pshh<+P6!4f8IK"o[I!"Jf*!3*T4Juuqm!"&N&
!2[c;Juc>\!"/T'!5@"GK''&pq>^N+ikL)[SA,%5qZ$Vqn#_2DO0&BgqZ$Vmr2YFMJu\kYqZ$W1MWTNQ
o]GuM!4eH2K"pK`!"Jf*!3)crK!!b/!"&N&!2Zs$Jud.s!"/T'!5?20K''l2rW)ls!4dm"K"q&p!"Jf*
!3)3bK!"=?!"&N&!2ZBiJud_.!"/T'!5>VuK'(GBq>^N+]>&s4_nQ0\qZ$VqaK:&r[]KN9qZ$VmeZ4;&
WN-"+qZ$W1ioYjTSEBYJ!4hR5K"mA]!"Jf*!3,muJusX,!"&N&!2YRRJueOE!"/T'!5=f^K')7Yq>^N+
Uq_Mrg:mUsqZ$VqZ)rV[c)gsPqZ$Vm^8ljd^oIMD!!)rt!5=6NK')giq>^N+PeVgblG!<.qZ$VqTripK
h5pY`qZ$VmY,d/Td&R-RqZ$W1]B4_-_rgdq!4g1cK"nb/!"Jf*!3+MNJuu#S!"&N&!2\\UJubEB!"/T'
!5@paK'&-Vq>^N+r4diuK"h9pqZ$VqMQMK4oW8*"qZ$VmQ`G_=kGnRiqZ$W1Uum9kg?/53!4fALK"oRF
!"Jf*!3*]7Juuhj!XSi,r;ZhoLT?$-pT"9$qZ$W1PidS[lK7pC!4ef<K"p-V!"Jf*!3*-'K!!D%!"&N&
!2[<.Jucei!"/T'!5?P:K''N(q>^N+e\?^NWP8EBqZ$VqiiRg7S?2btqZ$Vmn#M&@O/i6fqZ$W1r8rUn
K')n0!4eT6n@dYkVSDc<!"Jf*!3)Hi!3H1#d&XLTkH+^jqZ$VmUoX9k!34;C^oQ1i!"/T'!5>`#lfJ3&
c.C5&c0"j&!4fhYhS0'(cFO"fg;!<q!56[j"2,-D!;ultWLL!iXR<+HWm7^HXOjNJWr]:.qZ$VmS#ZOg
ql&#C!2n,C!35+Yl_ji`$Msf'^7j]djoF/]a8jE/joF3,d,*+Lg\LmM\ZW^8^Atsl\B_hh^&GIf[K4#M
qZ$Vq]<1%o!3=DD!3+SPpoOOtcDL]D$2X]&V9#^eWrT-EU]@7PX6ZedWQq7>W!`D%!5@"Ga6!BRc+WZ0
hW=gmcDglhq>^N+ikN(>!4pIZ!3lI;dD#[ncDpuU%Jp,*WUHskXT5BQT(nlWT?aP=X3R+6WX8P&!2]Uo
TW8'kjI>J)!1_?8!3"2/!2KT%qZ$W1S)s^lnUTJH!.iGX!6s55okOQ9q>^N*cb0=kcG'@irhe)?!2n,W
!4q?dkb%s`%Jp,*W6VKrXn]!uWQp\-Pg6B2X7VA*Muf^\qZ$VlcDfm*l`1#^cB&$gcDprDcADXr$Msf'
^!GF5g@==^joE-@<WHCYk4Rj:_TkRMVZ$So!!'IQ\'DMaZgO[KV#[C<^AtdqN;/>4YRUI0!2e)@c)C]<
qiTBj!0b^1!35+&lZE6$$2X]&U<fS7Usu7<V#[16NW>0dWrSscG2@BCSI55o!3+;G!3b@qm_/[dc;XdG
cK5,8rZ0B,!/C=M!4:%Um]#-DcDU`Bf>%*q!4L0q!NZb-!!&kATE(V]Qd_;HQ2m94Xm<(hVTrTNRL/ik
!27r6qjd_WcBHM9!0crRhQ$XNc=$a?$Msf'S`5ClL&ceMAH68d@/sm<k0`;kWQk\JDu'G6[dU`b\,`q^
Mu]<uWVEFmX3SH[ZHc/FUCI)#!2oape>`MFc?B8BjHo2!!1D-7!2@b$!0@0eqZ$Vkc_LQ7c?92?nWMal
!0tj1!1qn-ofW>8$Msf'WmA*RT["SY2?%.6A,p>hjoCY/!9aC_;>L7m\Bhkh]@Vf4L&d@]TE(\2^AtP2
386CnSdkPs!3+;G!3>1!lYccMcAVa_cE.)>c7B!R$2X]&V9c+@W:=i`Dub71M?&RgX7`LnS^&ehL^F+^
r;Zi2ceSTGc4p=)mR6#%!(bDt!/T5,p](:Zq>^N+cbBImcAhmfqjGs%!1V9K!3tTClS\d8%Jp,*WR%[H
X42FlGlW9<KE-eQXT5$a/)DcWM$a%Z!2\#B!3+q%mW\_[c@Z+OcDpr9r[ZAH!JUsY!!'aZjoEfs+lORE
.F'aM44iWijoC4_!!#7[!!'FQZiIE/P1,T>O8tI)^[&W7YKeTuRLT,o!2\5AqkO4dc@#\?c?]J=nZCZM
!1qIY!JLjW!9'X>T`C\0I/nW>H2rBmX3msJS'E,WK*qJU!2o:_iMHU>c7&`?f-L,:!%H4U!.`>p!&aTQ
!3uHre"Y-Z!1Mu5l]_C9cG'@_c6!%Q!"Jf*!2.VucA;OTnUKDF!.rLu!1_a[ob[^\$2X]&S^*2>L&cr,
IaNTEJ^1:rRHGFN(]f-oqZ$VScV+=2f0B$p!&r1S!&;d]!.=D=gAh4,q>^MncXd*$jLjfk!3sh3!0kdD
!3ONW!Kmoh!!&;1;#k(qX59lWT[%laJ(h$tXT4g8$Nkb_!!)rt!0YZ,!+X<Q!1iP)iHkQRcDpr4f*qE_
!IG1N!!$?O!<<GOblEh%,h+(>.aI/VF6!>e!!"AB!!&kA;#kC]^\bbG[*F[3P0UfBXRQSQ#Q]qpqZ$VY
cThJ3iN;OM!2Rnc!.E.p!1Nlkd09Vs$2X]&O3^,m=RN6KWrSj=GlW9EX8&^qQd,d9GmaEK!*.>F!!E,\
eE-b.c6<69jQ>dj!,p-_!$_7>!2A")q`4^ZcFj4bcB/*kn\<qq!3=BK!K7Kb!!&)>0((=l7aA(8V9XDf
J,ZRtXT4d7"9E]QqZ$VTmk3QO!(bD7!28"kpj3!icDpr2c345l$Msf'9`+n>!7'=!S`D'^,QK=>joB2B
!!"):!!&_=2?6CqXT56gR,421S'JbKX4djP#Q]qpqZ$VUcRSuXcC+`sre&UN!/Jk%!1E!SkQV'5$2X]&
MpEmR4kH(rQiN5nJcLMMWrSLY#29=_GRF<J!(bB8jE'X.!*IN%!'/?e!,^!]!$V1=!2@e#!']pZhHg2)
cBJ<qg;!<q!3FHZ"-O)n!;ultO3]EY1!WDl@IAX(IfP)GXT4jB&,6Y9I0ocN!0#5V!&Dho!+GbRe:%CK
cDpr4j:CPe!IY=P!!#Wb!;c`r#0nb"1!\n]G4>Rh!!"JE!!&e?6i]U52=<=%<mHF"M9`j9Xo93c)$,s2
qZ$VXc8G#=i@+apc>N](f<+hM!1_=J!IkFQ!!&#)2ZPc5.F]dH7a>rQFQBLgWrSR5'*3RiqZ$UneH!Sh
c4p<tn`J]j!.)oj!%n$I!2\[MmS3aRc7ArncADU^rkHjq!3ONY!Kmoh!!&/M52e[*3mJoL6J$ATFT?^4
XT4g8%0:k`qZ$VVr'&Uo!'8CL!(5gilZE2PcDpr4c4'c%!"/T'!*#BenJpC*!$TYM!-?ioo`+t@q>^Ml
cV4C/c6<6lrh7`5!2IiS!3G>hkQh3L%Jp,*Oj?,i37f,E)ZWITN<#'cXT4g^#29=_GmX?J!05Ag!''$Y
lPfgrcAM[^cDpr3c3=;p$Msf'<5&@g!7"+8:YOt(joB>F!!"5B!;ultUX)=.5L(JRD=4gi[Ec5]S_",A
#6BhoqZ$VXcSY\Xc5Qadqk_c<cD^f!j9=iQ!I5"K!!&#)2ZPY`)uCQS>0WbdU]?/>#2TObGRF<J!)]m!
mJm4hc)8jj!'gG_d/X.iq>^MicT2%cmPWr\!/Ae6!5@'JplYVuc49r=%Jp,*O3]BX/GgmG.0+;3XT5H`
IHu:]?d9#[I0ocN!0#G[qCTuA!-$5a!3,L:hL,B3c3s`%$Msf'9&]i^!!!bZjoF6:-da:A#0m2K-i*fC
V=.:?;#jYBD#g0Z^\GPD^<WVVPg2i$U(-u"!0R1Ee3F"%c<:4*jK7^LcBJ<Yc8krd!"&N&!0>Gm!(P7<
!/U0GhQ$XVcB/*Ug,emf!K7B_!!$$E!6t]I5lTonjoF;a>Q?><!9aC_9_n_hXNuFtL=`0pU&_ID^Au!n
]`>S7RG4,1Zjlm4!1M5M!-.(\l]2%=R]QRhc@c4o$2X]&Qd9IJE:JnDMu]EoWrT0RWV*4jUs=SpTF(Z!
r;Zh9cO^'lc:e5!mcNKj!9;A[!3t-4pbVu;q>^N&c`mJScDCTCqmY%`cG'@mjLFNc!PAm=!!&kATE(V6
PP^ODS'Ir4WQqUGXRW:HW<'%+qZ$VicCNpUmZ7F9c(rXc!3,sndA-fA$Msf'S^3>sKC2e!<WI<gXT5QV
k4n'=gWmA1d/!_B\Bhkh]DH^"F9%EJXT5Qc^[&W7^!=1i]aai=!3+MNqlKjuc<pWucC4g(nZCZM!3FJG
!NZV)!!&kTWpZkeVp8ZMHHqlXRJs87WrT-EV?*Y'qZ$W0n)**]!6rdn!$p0ApiujecK5,]cG'A0q>^N+
r4gar!4pH-!-7/-lEnjO!4pIM!4Dk:qZ$Vqc`I2Jc6<6pnYP*=!2RoB!3=h7ooB-N$2X]&V9c1BVp6Le
?N-YFU!B\=W99-'MufX[qZ$W1cfP5Cf)YRG!!UZB!2e'(!6"M%gI_IFq>^N*cb'7bj:(>_!*.=G!3OPS
!2e%9!M^,$!!'"EWrT!d$Jl*i7*V4TV=gYbPKl8mO9kmer;Zhnc_pi;c3XJ>m[2q"cCk6"f0/ml!K@H`
!!':MblF6X!;grhFoZg5VZ9cY!:'Ub:\k%kZd5]QT[X&?!WY1(P0SpbD=J.n%fqh&qZ$Vkc^Fimi<&EK
!%Z<Bc?0+irX7*]!IP4N!!&\<QN2p2!oX1\/BrUpFng(Z>0[NWHOBWM!0tlK!(?\adf@WAj;dJ*!!CLH
!%.OB!3+LeqelIDc2[hfc=HucnMf;`!%6%n!K7Kb!!&AF>4,Po:<ih>)9u(Z:];ll.f^X9!s*NNqZ$V[
mp+gV!)Ll?!#jHfpeq/ic7Ar:c3")j$Msf'Ac)_]"TSSJ!9=1G!L`ug*Voa9UX).)2U2:&)Y$_^;?0P=
'`\`t!;-<mM@KF_!0GM^!%Z=p!#5E!d6[guc49m^k5a]G!H\YF!!&#)1B8rW!;HNo'[B&G6-^#A$hOGR
!!.3LqZ$UlYlK@Uc2[h_q>^MgcSY\SnGqDG!#s3_!)_G`ob.<8c2[s(%0-D,!!&#).0(R;!!!`$6K(62
5gBl?$J,:Q!!.0JqZ$VScRAi=c2[hZqaAq%!(+sA!"7iflMps.$Msf'8"fp7!8[\U)YsF6U<bau0Aup!
!!!h\7K>m&*<6cP!7:cIM@KF_!0>GV!$pt4i;`iic8Ye_f,",s!"[?T!H\YF!!%u(/-%!n!7UuK&^E?9
2rkb?('"lj!!.3LqZ$UgeGt1$WW3#;q>^Mhi\p3_!%uOs!"@-t!$qP+d6%C[c2n$*%Jp,*NUJCV.f^g>
!!!AX)u(?P*R6>=,0g8kFU@pF!/pb*e11MFc2[hNj;[D(!$'9<!$]\j!-S>LqZ$UeM?&5.o`+t4q>^Me
cQN9/c2[hKrY!Tk!#<dc!'fWHkPtX@%Jp,*MU*.?(=rQ]!!!5K%KI$b9)pa>!8@JSF:%gE!/Sr>!#FVq
lMpnhc4'abc:n9pc2[lf$Msf'5e[5M!5SX8)ZBa8!!&M7('"rl!!!5k&`F<%'@'h_5M#o1!!.rdqZ$VO
cO^'cc2[hKq[M$a!"[@I!&EU8lMps-$2X]&L<gG3%FbCT!!!5K%0-pa9E6m=!8[\VFUJ!G!'@=`JcO0u
!#k\6!1M4@!!qumi;`ibc6!$/f.ZnP!$KPe!K%?`!!%`!#QP)+!7UuK#gO7e)<<(/,QJ_-!!.0JqZ$VK
eHl$X!!^^K!!pje!#b;QhB`.>c2[lf$Msf'2<"Uf!1a)i)YsF6R-t4;"TS\N!!!P]0DI1#0$Y44&'b.U
M@KF_!/(1Pdfdqr!"7j5lQcHTc4Bs`c2[id!"&N&!.rN#!!LRI!"ABDh'L>Y!"7K\o`,#8$Msf'17%um
!9aC_)YsF6R*Gle!r)fs)U;%W9$RM=!qZKI!!.rdqZ$VKcNO:Oj9+]M!#3^@!'8C.!!:FG!H\YF!!%Vr
"n;]O!rs%\4TIRt"8)`r!mUcJFUA*Kr;ZgQLB)o+p](:4q>^M^cN!qGc341hqbYd=!)CfF!!_KalMpsC
%Jp,*J^4;r!Rq8L"997`5QF!m#4V]M!!.0JqZ$VHcN!qGi<AWQ!#NpH!'\X3rW(=G!HebH!!"[a!.k3h
!!!r6!!&A3!!!&s"OmPS)9tVM6KApJ('"lj!!.rdqZ$VIeH#IH!!1@J!#*X8!&X3Wh@KYpc2[le$2X]&
JDpRs!!!&F"99+\2ZP]6&^_0j$dJ_QFUJ!G!&*d@JcLl4!#k\6!13T`df@Yp!"\-AlRW#dc56Nlc2[j%
!"Jf*!.iDqc2mtRnKQg6!$KQ"!"7K\o`,#7$2X]&JBe/?!WWW-,1.S7+O1W#%-IWS!!.3LqZ$ULU]>uH
gAh3lq>^M^c3*,-lMpngbmhr+!!pjM!K%?`!!%Vr"RuKK!!!/H$/,[X#QP(S!!@<L!!)rt!.iDtc2[hJ
mL%kZc3XITf)YRG!HebH!!"a<!.k4:!!!r6!!&M7&-*3i!.k4-!!.rdqZ$VOcO9d\i;eH0d/X2h$2X]&
L!L/-$gn"H!5nj<FUJ!G!'/+#JcN7[!#k\6!2%deq]l.`M#aOU!K%?`!!%r:*UXpJ(mY/m!!.0JqZ$VP
mi::+!#VI2O8o<($Msf'6Mph8!.t7O)YsF6U?FW<D!<t\1["f>'ckp,p](=I#L<AM2pMC'2tR+C!!.rd
qZ$VWkUlj;kq2r_kPtVo(?GP^!!+;JcN!qqc2[hpkPtX*$2X]&N9Dko=m7O=-g1O2&/Og:h>dR&#1!8L
/D:*s!!"S6!!.3LqZ$UikPtSbb5d+oc2[h_q>^Mgkq)ogU?O60-h.33!!,>gcN!uu'@-XYQh1:4!!&AL
!!A)f!!)rt!0$.d!@*Zi+oi\J!!+lIeH#IH!Gr@n!!%Sq!!%T?!;HNpF:%gE!/ftb!0$.e!$:>(!Ad@-
!:BgfD@b%n!.`>p!.b%KlMps.$Msf'7Ha^O9"P)^!!!_Y!!"\(!;HNo0B`B9)YsF6SEUgj(nKn-!#"Jq
!C0id!7UuLK+lQ2!12aHlMppOkPtX@%Jp,*M!5KP&r5]`!"SDsqZ$XQ8^@A;D%Fqm!.jY?h>dP,kPtX*
$2X]&L$90M'8G``!"Jf*mJm8D9$[J<D@b%n!.b%Kd/X/skPtX+$Msf'4m2kG5OSTS!!!_b!;HNo0?sOt
0B`B9)YsF6RHXtX$(1VrmK`dtkPtWK>0d0LK+m>HlMppOk5a]H!12mM!K%?`!!%]@#5\T*#D;7F!!VQd
!Ad<n!!-pInc7MH!.j;5kQ([7kQ(^,$2X]&KDYrA"p"s\kQ^5N!Ad?o!!@*L!!(CH!.a54kQ([6kQ([+
!"/T'!&Wm>!&C>Mp](:.c2[htc2[htoDnOa!$(h8!12pM!<SM3!!,>gjT+TH!J;'3!!&AL!!!&`!W\SN
!We5hqZ$VIkl:_cJ'S)q1J.-;h>dRn&'k4UJ`m(6!V?Ke!s!r:!s*NNqZ$VHkl:_cJ'S)s1J.WId/X2b
&'k4UJEQt5!U'UcJ`m1:Fpe*H!&*O9!%lh'_uKcOc2[htoDmVG!&<[;!$2%=r;Zhakl:_cPg9=15[)\<
qZ$YL'@-XYQfnDL!pBdfR.1@T"TaPkqZ$VIkl:_cJ'S)q1J-R+mJm9)&'k4UJ`m(6!pBaeKDl#>"9E]Q
qZ$VHkl:_cJ'S)q1J7*9i;`mr&'k4UJEQt5!q?Hh"TX/<"T`cRqZ$ULkPtT7a8j]i!#3]Y!&*C5lMpo?
kPtT(q>^M^kl:_cPgod2!!,>gcN!uu'BoJs!U'jjRdga[$31@q"ot(T"p'\mqZ$VIkl:_cJ)UIr!!+lI
cN!u_&*X&o!U'dhL&MAD#j2BlK]iU@G7"-H!.a;6!<Rc>!9!nY1J5sn!H&G4!!!&i#l"Z*L$/g*"os;>
"p&oTqZ$ULkPtT7quEAi!#4JolMpoDc2[i$kPtT*q>^M^mf<4b!<SM3!!,>gcN!uu'Cl.u!!!&`(BC&j
(B>'2"TXqR"TaPkqZ$VIquH-b!<Rbs!!+lIcN"&a%fcUq!!!&`&HI^P&HE:("TX2="TW`H$2X]&JE[%7
!e8Mr!Ad@#!;HNpD@bt3!!29q!/ThN!"J,q!.shHo`YA>$Msf'0B`B9/[5<A!!!_Y!!#:0!!"e<!!"):
!!&AM!!*.ccN!u2>4M[M!!.]ckQ'fV!1W0^!"/?"o`>,[kQ1dB%Jp,*Ja!.8!e8Mr"#ELK!7:cID%Gh1
kR%<FkR%:qkQ1a9kQ1d-$2X]&JE[%7!e8i&p](=N9$[J<D@bq2kR.BFoF(="!!qci!.j>8"*FqN!;ult
0B`B9/YN1A!!!_Y!!#++!!"bD!;HNo*;TX8ZKS=h\^.;WZ*`Mkm]-AuXluhLX8oipXQZ\b\c/YqWr]^>
qZ$Vjka;FNc^=g,V=0i2R/s=WkaCY'!354NnX90?!357N!N?D&!!&VSQ2mf.Q3!PMr0Giu!Mu1IQKX\9
VWaBIQi<<:Q2mfGQ3!cgqZ$V\k\C14eSG%t!KiktCB:efk\KC%!5J&Dpi-:Pk\C14k\C10q>^LQa?+u8
[Q=HkqZ$UFeLuM-W@n5SqZ$UFi\5s<S1jpFkQ$27JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNIaJcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNpnJ,~>

%%EndBinary
grestore
np
grestore
2 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
1 544.903 mo
239.141 544.903 li
239.141 533.706 li
1 533.706 li
1 544.903 li
cp
1 511.393 mo
239.141 511.393 li
239.141 500.195 li
1 500.195 li
1 511.393 li
cp
1 528.404 mo
239.141 528.404 li
239.141 517.206 li
1 517.206 li
1 528.404 li
cp
1 466.034 mo
239.141 466.034 li
239.141 454.835 li
1 454.835 li
1 466.034 li
cp
1 494.973 mo
239.141 494.973 li
239.141 483.775 li
1 483.775 li
1 494.973 li
cp
1 429.733 mo
239.141 429.733 li
239.141 418.536 li
1 418.536 li
1 429.733 li
cp
1 448.624 mo
239.141 448.624 li
239.141 437.425 li
1 437.425 li
1 448.624 li
cp
1 375.313 mo
239.141 375.313 li
239.141 364.115 li
1 364.115 li
1 375.313 li
cp
1 404.673 mo
239.141 404.673 li
239.141 393.475 li
1 393.475 li
1 404.673 li
cp
1 335.624 mo
239.141 335.624 li
239.141 324.425 li
1 324.425 li
1 335.624 li
cp
1 358.443 mo
239.141 358.443 li
239.141 347.245 li
1 347.245 li
1 358.443 li
cp
1 290.414 mo
239.141 290.414 li
239.141 279.215 li
1 279.215 li
1 290.414 li
cp
1 318.343 mo
239.141 318.343 li
239.141 307.146 li
1 307.146 li
1 318.343 li
cp
1 248.133 mo
239.141 248.133 li
239.141 236.935 li
1 236.935 li
1 248.133 li
cp
1 271.983 mo
239.141 271.983 li
239.141 260.785 li
1 260.785 li
1 271.983 li
cp
1 209.124 mo
239.141 209.124 li
239.141 197.925 li
1 197.925 li
1 209.124 li
cp
1 224.713 mo
239.141 224.713 li
239.141 213.515 li
1 213.515 li
1 224.713 li
cp
false sop
0 .990631 1 .000397027 cmyk
@
50.7783 626.797 mo
50.7783 626.037 li
46.8232 626.037 li
46.8232 623.844 li
50.3867 623.844 li
50.3867 623.088 li
46.8232 623.088 li
46.8232 621.115 li
50.6289 621.115 li
50.6289 620.355 li
45.9707 620.355 li
45.9707 626.797 li
50.7783 626.797 li
50.7783 626.797 li
cp
40.8027 621.115 mo
42.4502 621.115 li
42.8369 621.115 43.1025 621.134 43.2461 621.172 cv
43.4688 621.234 43.6475 621.361 43.7842 621.552 cv
43.9209 621.745 43.9883 621.975 43.9883 622.245 cv
43.9883 622.617 43.873 622.905 43.6416 623.11 cv
43.4102 623.315 43.0186 623.417 42.4678 623.417 cv
40.8027 623.417 li
40.8027 621.115 li
40.8027 621.115 li
cp
40.8027 626.797 mo
40.8027 624.178 li
42.4551 624.178 li
43.3662 624.178 43.9961 623.989 44.3447 623.609 cv
44.6934 623.23 44.8672 622.766 44.8672 622.218 cv
44.8672 621.899 44.8018 621.606 44.6719 621.339 cv
44.541 621.073 44.3691 620.866 44.1553 620.717 cv
43.9414 620.57 43.6768 620.469 43.3604 620.417 cv
43.1348 620.375 42.8076 620.355 42.3799 620.355 cv
39.9502 620.355 li
39.9502 626.797 li
40.8027 626.797 li
40.8027 626.797 li
cp
35.8057 622.262 mo
35.9551 621.855 36.0713 621.445 36.1533 621.032 cv
36.2529 621.38 36.4053 621.826 36.6104 622.368 cv
37.2822 624.152 li
35.0986 624.152 li
35.8057 622.262 li
35.8057 622.262 li
cp
34.1445 626.797 mo
34.8525 624.846 li
37.5459 624.846 li
38.2979 626.797 li
39.2686 626.797 li
36.6318 620.355 li
35.7139 620.355 li
33.2393 626.797 li
34.1445 626.797 li
34.1445 626.797 li
cp
28.3262 626.797 mo
28.3262 623.76 li
31.6748 623.76 li
31.6748 626.797 li
32.5273 626.797 li
32.5273 620.355 li
31.6748 620.355 li
31.6748 623 li
28.3262 623 li
28.3262 620.355 li
27.4736 620.355 li
27.4736 626.797 li
28.3262 626.797 li
28.3262 626.797 li
cp
21.5088 625.885 mo
21.7324 626.227 22.041 626.482 22.4355 626.652 cv
22.8291 626.822 23.3184 626.907 23.9014 626.907 cv
24.3613 626.907 24.7744 626.823 25.1426 626.655 cv
25.5098 626.486 25.792 626.25 25.9883 625.947 cv
26.1846 625.644 26.2832 625.321 26.2832 624.978 cv
26.2832 624.632 26.1934 624.327 26.0146 624.062 cv
25.8359 623.796 25.5596 623.578 25.1846 623.405 cv
24.9268 623.288 24.4512 623.151 23.7588 622.994 cv
23.0654 622.837 22.6367 622.684 22.4727 622.535 cv
22.3057 622.385 22.2227 622.195 22.2227 621.963 cv
22.2227 621.697 22.3398 621.469 22.5762 621.28 cv
22.8115 621.091 23.1875 620.997 23.7031 620.997 cv
24.1982 620.997 24.5723 621.1 24.8262 621.308 cv
25.0791 621.516 25.2285 621.824 25.2725 622.231 cv
26.0898 622.169 li
26.0752 621.792 25.9697 621.454 25.7734 621.155 cv
25.5771 620.856 25.2959 620.629 24.9316 620.476 cv
24.5674 620.322 24.1455 620.245 23.668 620.245 cv
23.2344 620.245 22.8408 620.318 22.4863 620.464 cv
22.1318 620.611 21.8623 620.826 21.6777 621.109 cv
21.4932 621.391 21.4004 621.695 21.4004 622.02 cv
21.4004 622.316 21.4756 622.583 21.627 622.823 cv
21.7773 623.061 22.0068 623.261 22.3145 623.422 cv
22.5518 623.548 22.9668 623.682 23.5586 623.825 cv
24.1504 623.966 24.5322 624.071 24.7051 624.138 cv
24.9746 624.241 25.168 624.368 25.2852 624.519 cv
25.4023 624.669 25.4609 624.846 25.4609 625.048 cv
25.4609 625.248 25.4004 625.431 25.2783 625.6 cv
25.1572 625.768 24.9717 625.901 24.7227 625.998 cv
24.4736 626.094 24.1865 626.142 23.8613 626.142 cv
23.4951 626.142 23.166 626.079 22.873 625.952 cv
22.5801 625.824 22.3633 625.657 22.2246 625.451 cv
22.085 625.244 21.9971 624.979 21.959 624.657 cv
21.1543 624.727 li
21.166 625.158 21.2842 625.544 21.5088 625.885 cv
21.5088 625.885 li
cp
0 0 0 1 cmyk
f
67.9512 621.115 mo
69.3047 621.115 li
69.8115 621.115 70.1797 621.159 70.4082 621.247 cv
70.7246 621.37 70.9932 621.613 71.2148 621.974 cv
71.4355 622.336 71.5459 622.854 71.5459 623.528 cv
71.5459 624.014 71.4902 624.428 71.377 624.769 cv
71.2646 625.111 71.1064 625.382 70.9043 625.584 cv
70.7607 625.728 70.5684 625.839 70.3271 625.918 cv
70.085 625.998 69.752 626.037 69.3271 626.037 cv
67.9512 626.037 li
67.9512 621.115 li
67.9512 621.115 li
cp
69.4238 626.797 mo
69.8135 626.797 70.1582 626.76 70.459 626.687 cv
70.7588 626.614 71.0156 626.506 71.2275 626.365 cv
71.4404 626.222 71.6357 626.028 71.8145 625.78 cv
71.9932 625.533 72.1396 625.219 72.2539 624.841 cv
72.3682 624.463 72.4248 624.03 72.4248 623.541 cv
72.4248 622.966 72.3408 622.457 72.1729 622.009 cv
72.0039 621.563 71.75 621.196 71.4102 620.909 cv
71.1494 620.686 70.834 620.532 70.4648 620.447 cv
70.2012 620.385 69.8193 620.355 69.3184 620.355 cv
67.0986 620.355 li
67.0986 626.797 li
69.4238 626.797 li
69.4238 626.797 li
cp
f
80.9824 625.885 mo
81.2061 626.227 81.5156 626.482 81.9092 626.652 cv
82.3037 626.822 82.792 626.907 83.375 626.907 cv
83.835 626.907 84.249 626.823 84.6162 626.655 cv
84.9844 626.486 85.2666 626.25 85.4629 625.947 cv
85.6592 625.644 85.7568 625.321 85.7568 624.978 cv
85.7568 624.632 85.668 624.327 85.4893 624.062 cv
85.3105 623.796 85.0332 623.578 84.6582 623.405 cv
84.4004 623.288 83.9248 623.151 83.2324 622.994 cv
82.5391 622.837 82.1113 622.684 81.9473 622.535 cv
81.7803 622.385 81.6963 622.195 81.6963 621.963 cv
81.6963 621.697 81.8145 621.469 82.0498 621.28 cv
82.2861 621.091 82.6621 620.997 83.1777 620.997 cv
83.6729 620.997 84.0469 621.1 84.2998 621.308 cv
84.5537 621.516 84.7021 621.824 84.7461 622.231 cv
85.5635 622.169 li
85.5488 621.792 85.4434 621.454 85.2471 621.155 cv
85.0508 620.856 84.7705 620.629 84.4053 620.476 cv
84.041 620.322 83.6201 620.245 83.1426 620.245 cv
82.709 620.245 82.3145 620.318 81.96 620.464 cv
81.6055 620.611 81.3359 620.826 81.1514 621.109 cv
80.9668 621.391 80.875 621.695 80.875 622.02 cv
80.875 622.316 80.9502 622.583 81.1006 622.823 cv
81.252 623.061 81.4814 623.261 81.7891 623.422 cv
82.0264 623.548 82.4404 623.682 83.0322 623.825 cv
83.624 623.966 84.0068 624.071 84.1797 624.138 cv
84.4492 624.241 84.6426 624.368 84.7598 624.519 cv
84.877 624.669 84.9355 624.846 84.9355 625.048 cv
84.9355 625.248 84.874 625.431 84.7529 625.6 cv
84.6309 625.768 84.4463 625.901 84.1973 625.998 cv
83.9482 626.094 83.6611 626.142 83.3359 626.142 cv
82.9697 626.142 82.6396 626.079 82.3467 625.952 cv
82.0537 625.824 81.8379 625.657 81.6982 625.451 cv
81.5596 625.244 81.4707 624.979 81.4326 624.657 cv
80.6289 624.727 li
80.6406 625.158 80.7578 625.544 80.9824 625.885 cv
80.9824 625.885 li
cp
74.3877 626.797 mo
74.3877 621.313 li
76.251 626.797 li
77.0205 626.797 li
78.8926 621.405 li
78.8926 626.797 li
79.7139 626.797 li
79.7139 620.355 li
78.5674 620.355 li
77.0244 624.837 li
76.8691 625.292 76.7549 625.635 76.6816 625.87 cv
76.6172 625.659 76.5146 625.341 76.374 624.917 cv
74.8496 620.355 li
73.5664 620.355 li
73.5664 626.797 li
74.3877 626.797 li
74.3877 626.797 li
cp
f
106.083 625.764 mo
105.752 626.04 105.348 626.177 104.87 626.177 cv
104.478 626.177 104.113 626.077 103.776 625.875 cv
103.439 625.672 103.191 625.367 103.031 624.958 cv
102.872 624.549 102.792 624.071 102.792 623.523 cv
102.792 623.098 102.859 622.686 102.994 622.287 cv
103.129 621.886 103.362 621.568 103.695 621.331 cv
104.027 621.093 104.441 620.974 104.937 620.974 cv
105.367 620.974 105.725 621.082 106.009 621.295 cv
106.293 621.509 106.51 621.85 106.659 622.319 cv
107.498 622.122 li
107.325 621.527 107.02 621.065 106.58 620.737 cv
106.141 620.409 105.599 620.245 104.954 620.245 cv
104.386 620.245 103.865 620.375 103.392 620.634 cv
102.919 620.893 102.554 621.273 102.298 621.772 cv
102.041 622.272 101.913 622.857 101.913 623.528 cv
101.913 624.143 102.026 624.718 102.254 625.254 cv
102.48 625.791 102.812 626.201 103.247 626.483 cv
103.682 626.766 104.246 626.907 104.94 626.907 cv
105.611 626.907 106.18 626.723 106.644 626.356 cv
107.108 625.988 107.43 625.454 107.608 624.753 cv
106.756 624.539 li
106.639 625.081 106.414 625.489 106.083 625.764 cv
106.083 625.764 li
cp
f
119.876 625.764 mo
119.545 626.04 119.141 626.177 118.663 626.177 cv
118.271 626.177 117.905 626.077 117.569 625.875 cv
117.231 625.672 116.983 625.367 116.824 624.958 cv
116.664 624.549 116.585 624.071 116.585 623.523 cv
116.585 623.098 116.651 622.686 116.786 622.287 cv
116.921 621.886 117.155 621.568 117.487 621.331 cv
117.82 621.093 118.233 620.974 118.729 620.974 cv
119.159 620.974 119.517 621.082 119.802 621.295 cv
120.085 621.509 120.302 621.85 120.452 622.319 cv
121.291 622.122 li
121.118 621.527 120.812 621.065 120.372 620.737 cv
119.933 620.409 119.391 620.245 118.747 620.245 cv
118.178 620.245 117.657 620.375 117.185 620.634 cv
116.711 620.893 116.347 621.273 116.09 621.772 cv
115.834 622.272 115.706 622.857 115.706 623.528 cv
115.706 624.143 115.819 624.718 116.046 625.254 cv
116.273 625.791 116.604 626.201 117.039 626.483 cv
117.475 626.766 118.039 626.907 118.733 626.907 cv
119.404 626.907 119.972 626.723 120.437 626.356 cv
120.9 625.988 121.222 625.454 121.401 624.753 cv
120.548 624.539 li
120.431 625.081 120.207 625.489 119.876 625.764 cv
119.876 625.764 li
cp
109.448 626.797 mo
109.448 621.313 li
111.312 626.797 li
112.08 626.797 li
113.952 621.405 li
113.952 626.797 li
114.774 626.797 li
114.774 620.355 li
113.627 620.355 li
112.085 624.837 li
111.93 625.292 111.815 625.635 111.742 625.87 cv
111.678 625.659 111.575 625.341 111.435 624.917 cv
109.909 620.355 li
108.626 620.355 li
108.626 626.797 li
109.448 626.797 li
109.448 626.797 li
cp
f
124.941 626.797 mo
124.941 621.115 li
127.072 621.115 li
127.072 620.355 li
121.966 620.355 li
121.966 621.115 li
124.089 621.115 li
124.089 626.797 li
124.941 626.797 li
124.941 626.797 li
cp
f
166.773 623.11 mo
167.01 622.823 167.304 622.679 167.655 622.679 cv
168.016 622.679 168.318 622.829 168.564 623.127 cv
168.811 623.426 168.934 623.895 168.934 624.534 cv
168.934 625.114 168.813 625.545 168.571 625.829 cv
168.329 626.111 168.036 626.252 167.69 626.252 cv
167.348 626.252 167.05 626.104 166.798 625.808 cv
166.546 625.512 166.42 625.066 166.42 624.468 cv
166.42 623.85 166.538 623.397 166.773 623.11 cv
166.773 623.11 li
cp
169.654 626.797 mo
169.654 620.355 li
168.868 620.355 li
168.868 622.667 li
168.73 622.476 168.552 622.322 168.332 622.203 cv
168.112 622.084 167.861 622.025 167.58 622.025 cv
167.196 622.025 166.85 622.125 166.539 622.328 cv
166.229 622.53 165.995 622.821 165.84 623.201 cv
165.685 623.58 165.607 624.002 165.607 624.468 cv
165.607 624.946 165.692 625.369 165.864 625.736 cv
166.035 626.104 166.277 626.39 166.589 626.595 cv
166.901 626.8 167.243 626.903 167.615 626.903 cv
168.189 626.903 168.625 626.671 168.921 626.208 cv
168.921 626.797 li
169.654 626.797 li
169.654 626.797 li
cp
161.743 623.124 mo
162.004 622.828 162.332 622.679 162.728 622.679 cv
163.117 622.679 163.443 622.829 163.705 623.125 cv
163.968 623.423 164.099 623.86 164.099 624.437 cv
164.099 625.049 163.968 625.505 163.707 625.804 cv
163.446 626.103 163.12 626.252 162.728 626.252 cv
162.332 626.252 162.004 626.104 161.743 625.806 cv
161.482 625.509 161.352 625.061 161.352 624.463 cv
161.352 623.866 161.482 623.419 161.743 623.124 cv
161.743 623.124 li
cp
161.144 626.274 mo
161.546 626.693 162.074 626.903 162.728 626.903 cv
163.135 626.903 163.511 626.807 163.854 626.617 cv
164.199 626.426 164.461 626.16 164.642 625.815 cv
164.821 625.471 164.911 624.999 164.911 624.398 cv
164.911 623.657 164.708 623.076 164.301 622.656 cv
163.894 622.235 163.369 622.025 162.728 622.025 cv
162.15 622.025 161.661 622.198 161.26 622.543 cv
160.779 622.959 160.539 623.599 160.539 624.463 cv
160.539 625.251 160.74 625.855 161.144 626.274 cv
161.144 626.274 li
cp
154.073 626.797 mo
154.073 624.375 li
154.073 623.951 154.116 623.625 154.201 623.4 cv
154.286 623.174 154.423 623.003 154.611 622.886 cv
154.801 622.769 155.007 622.71 155.229 622.71 cv
155.522 622.71 155.733 622.798 155.862 622.974 cv
155.991 623.15 156.056 623.414 156.056 623.765 cv
156.056 626.797 li
156.847 626.797 li
156.847 624.085 li
156.847 623.605 156.954 623.256 157.172 623.038 cv
157.389 622.82 157.661 622.71 157.989 622.71 cv
158.171 622.71 158.329 622.752 158.464 622.837 cv
158.599 622.922 158.691 623.035 158.742 623.174 cv
158.794 623.313 158.819 623.541 158.819 623.857 cv
158.819 626.797 li
159.606 626.797 li
159.606 623.593 li
159.606 623.06 159.481 622.666 159.232 622.41 cv
158.983 622.153 158.628 622.025 158.165 622.025 cv
157.573 622.025 157.093 622.297 156.724 622.842 cv
156.633 622.584 156.477 622.383 156.255 622.24 cv
156.034 622.096 155.751 622.025 155.405 622.025 cv
155.095 622.025 154.817 622.094 154.574 622.234 cv
154.331 622.373 154.137 622.556 153.99 622.785 cv
153.99 622.13 li
153.282 622.13 li
153.282 626.797 li
154.073 626.797 li
154.073 626.797 li
cp
149.133 623.124 mo
149.394 622.828 149.722 622.679 150.117 622.679 cv
150.507 622.679 150.832 622.829 151.095 623.125 cv
151.356 623.423 151.488 623.86 151.488 624.437 cv
151.488 625.049 151.357 625.505 151.097 625.804 cv
150.836 626.103 150.51 626.252 150.117 626.252 cv
149.722 626.252 149.394 626.104 149.133 625.806 cv
148.872 625.509 148.741 625.061 148.741 624.463 cv
148.741 623.866 148.872 623.419 149.133 623.124 cv
149.133 623.124 li
cp
148.532 626.274 mo
148.936 626.693 149.464 626.903 150.117 626.903 cv
150.524 626.903 150.899 626.807 151.244 626.617 cv
151.588 626.426 151.851 626.16 152.03 625.815 cv
152.211 625.471 152.301 624.999 152.301 624.398 cv
152.301 623.657 152.098 623.076 151.69 622.656 cv
151.283 622.235 150.759 622.025 150.117 622.025 cv
149.54 622.025 149.051 622.198 148.649 622.543 cv
148.169 622.959 147.929 623.599 147.929 624.463 cv
147.929 625.251 148.13 625.855 148.532 626.274 cv
148.532 626.274 li
cp
143.954 626.797 mo
143.954 624.249 li
143.954 623.651 144.077 623.245 144.321 623.031 cv
144.566 622.817 144.856 622.71 145.193 622.71 cv
145.404 622.71 145.589 622.758 145.745 622.853 cv
145.902 622.949 146.011 623.076 146.072 623.236 cv
146.134 623.395 146.165 623.636 146.165 623.958 cv
146.165 626.797 li
146.956 626.797 li
146.956 623.927 li
146.956 623.561 146.941 623.305 146.912 623.159 cv
146.865 622.933 146.783 622.738 146.666 622.574 cv
146.549 622.41 146.372 622.278 146.137 622.176 cv
145.9 622.076 145.642 622.025 145.36 622.025 cv
144.713 622.025 144.218 622.281 143.875 622.793 cv
143.875 622.13 li
143.163 622.13 li
143.163 626.797 li
143.954 626.797 li
143.954 626.797 li
cp
f
191.677 623.11 mo
191.913 622.823 192.206 622.679 192.558 622.679 cv
192.918 622.679 193.222 622.829 193.468 623.127 cv
193.714 623.426 193.837 623.895 193.837 624.534 cv
193.837 625.114 193.716 625.545 193.475 625.829 cv
193.232 626.111 192.938 626.252 192.593 626.252 cv
192.25 626.252 191.953 626.104 191.701 625.808 cv
191.449 625.512 191.323 625.066 191.323 624.468 cv
191.323 623.85 191.441 623.397 191.677 623.11 cv
191.677 623.11 li
cp
194.558 626.797 mo
194.558 620.355 li
193.771 620.355 li
193.771 622.667 li
193.633 622.476 193.454 622.322 193.234 622.203 cv
193.015 622.084 192.765 622.025 192.483 622.025 cv
192.1 622.025 191.752 622.125 191.441 622.328 cv
191.131 622.53 190.898 622.821 190.743 623.201 cv
190.588 623.58 190.51 624.002 190.51 624.468 cv
190.51 624.946 190.596 625.369 190.768 625.736 cv
190.938 626.104 191.181 626.39 191.492 626.595 cv
191.805 626.8 192.146 626.903 192.519 626.903 cv
193.093 626.903 193.527 626.671 193.823 626.208 cv
193.823 626.797 li
194.558 626.797 li
194.558 626.797 li
cp
186.645 623.11 mo
186.88 622.823 187.174 622.679 187.525 622.679 cv
187.886 622.679 188.189 622.829 188.436 623.127 cv
188.682 623.426 188.805 623.895 188.805 624.534 cv
188.805 625.114 188.684 625.545 188.442 625.829 cv
188.2 626.111 187.906 626.252 187.561 626.252 cv
187.218 626.252 186.921 626.104 186.669 625.808 cv
186.417 625.512 186.291 625.066 186.291 624.468 cv
186.291 623.85 186.409 623.397 186.645 623.11 cv
186.645 623.11 li
cp
189.525 626.797 mo
189.525 620.355 li
188.738 620.355 li
188.738 622.667 li
188.601 622.476 188.422 622.322 188.202 622.203 cv
187.982 622.084 187.732 622.025 187.451 622.025 cv
187.067 622.025 186.72 622.125 186.409 622.328 cv
186.099 622.53 185.866 622.821 185.711 623.201 cv
185.556 623.58 185.478 624.002 185.478 624.468 cv
185.478 624.946 185.563 625.369 185.735 625.736 cv
185.906 626.104 186.148 626.39 186.46 626.595 cv
186.772 626.8 187.114 626.903 187.486 626.903 cv
188.061 626.903 188.495 626.671 188.791 626.208 cv
188.791 626.797 li
189.525 626.797 li
189.525 626.797 li
cp
f
207.576 621.115 mo
209.225 621.115 li
209.611 621.115 209.876 621.134 210.02 621.172 cv
210.242 621.234 210.422 621.361 210.558 621.552 cv
210.694 621.745 210.763 621.975 210.763 622.245 cv
210.763 622.617 210.646 622.905 210.415 623.11 cv
210.184 623.315 209.793 623.417 209.242 623.417 cv
207.576 623.417 li
207.576 621.115 li
207.576 621.115 li
cp
207.576 626.797 mo
207.576 624.178 li
209.229 624.178 li
210.14 624.178 210.77 623.989 211.118 623.609 cv
211.467 623.23 211.642 622.766 211.642 622.218 cv
211.642 621.899 211.576 621.606 211.445 621.339 cv
211.315 621.073 211.144 620.866 210.93 620.717 cv
210.716 620.57 210.45 620.469 210.134 620.417 cv
209.908 620.375 209.582 620.355 209.154 620.355 cv
206.724 620.355 li
206.724 626.797 li
207.576 626.797 li
207.576 626.797 li
cp
203.816 626.797 mo
203.816 621.115 li
205.948 621.115 li
205.948 620.355 li
200.842 620.355 li
200.842 621.115 li
202.964 621.115 li
202.964 626.797 li
203.816 626.797 li
203.816 626.797 li
cp
198.418 626.797 mo
198.418 621.115 li
200.55 621.115 li
200.55 620.355 li
195.443 620.355 li
195.443 621.115 li
197.565 621.115 li
197.565 626.797 li
198.418 626.797 li
198.418 626.797 li
cp
f
250.961 204.362 mo
251.045 204.256 251.087 204.133 251.087 203.993 cv
251.087 203.813 251.025 203.668 250.902 203.559 cv
250.779 203.45 250.573 203.395 250.284 203.395 cv
248.151 203.389 li
247.862 203.389 247.656 203.445 247.533 203.556 cv
247.41 203.667 247.349 203.813 247.349 203.993 cv
247.349 204.172 247.41 204.318 247.533 204.429 cv
247.656 204.541 247.862 204.596 248.151 204.596 cv
249.376 204.596 li
249.376 205.458 li
248.923 205.665 248.421 205.768 247.87 205.768 cv
247.058 205.768 246.465 205.601 246.092 205.267 cv
245.719 204.933 245.532 204.444 245.532 203.799 cv
245.532 202.932 li
245.532 202.51 245.638 202.12 245.849 201.76 cv
246.06 201.401 246.29 201.149 246.54 201.004 cv
246.892 200.809 247.306 200.711 247.782 200.711 cv
248.114 200.711 248.414 200.755 248.682 200.843 cv
248.949 200.931 249.136 201.032 249.241 201.145 cv
249.308 201.215 249.367 201.351 249.42 201.552 cv
249.473 201.753 249.538 201.883 249.616 201.942 cv
249.718 202.028 249.839 202.071 249.979 202.071 cv
250.155 202.071 250.299 202.009 250.41 201.886 cv
250.521 201.763 250.577 201.557 250.577 201.268 cv
250.577 200.489 li
250.577 200.2 250.522 199.995 250.413 199.874 cv
250.304 199.752 250.161 199.692 249.985 199.692 cv
249.833 199.692 249.677 199.764 249.517 199.909 cv
249.251 199.776 248.971 199.676 248.676 199.61 cv
248.381 199.543 248.069 199.51 247.741 199.51 cv
246.612 199.51 245.72 199.936 245.063 200.788 cv
244.575 201.417 244.331 202.131 244.331 202.932 cv
244.331 203.799 li
244.331 204.319 244.431 204.789 244.63 205.208 cv
244.829 205.628 245.047 205.946 245.283 206.161 cv
245.52 206.375 245.843 206.553 246.253 206.694 cv
246.776 206.877 247.345 206.969 247.958 206.969 cv
248.399 206.969 248.811 206.916 249.191 206.808 cv
249.572 206.701 250.034 206.5 250.577 206.208 cv
250.577 204.596 li
250.749 204.545 250.877 204.467 250.961 204.362 cv
250.961 204.362 li
cp
0 .990631 1 .000397027 cmyk
f
250.961 220.902 mo
251.045 220.796 251.087 220.673 251.087 220.533 cv
251.087 220.353 251.025 220.208 250.902 220.099 cv
250.779 219.99 250.573 219.935 250.284 219.935 cv
248.151 219.929 li
247.862 219.929 247.656 219.985 247.533 220.096 cv
247.41 220.208 247.349 220.353 247.349 220.533 cv
247.349 220.712 247.41 220.858 247.533 220.969 cv
247.656 221.081 247.862 221.136 248.151 221.136 cv
249.376 221.136 li
249.376 221.998 li
248.923 222.205 248.421 222.308 247.87 222.308 cv
247.058 222.308 246.465 222.141 246.092 221.807 cv
245.719 221.473 245.532 220.984 245.532 220.339 cv
245.532 219.472 li
245.532 219.05 245.638 218.66 245.849 218.3 cv
246.06 217.941 246.29 217.689 246.54 217.544 cv
246.892 217.349 247.306 217.251 247.782 217.251 cv
248.114 217.251 248.414 217.295 248.682 217.383 cv
248.949 217.471 249.136 217.572 249.241 217.685 cv
249.308 217.755 249.367 217.891 249.42 218.092 cv
249.473 218.293 249.538 218.423 249.616 218.482 cv
249.718 218.568 249.839 218.611 249.979 218.611 cv
250.155 218.611 250.299 218.549 250.41 218.426 cv
250.521 218.303 250.577 218.097 250.577 217.808 cv
250.577 217.029 li
250.577 216.74 250.522 216.535 250.413 216.414 cv
250.304 216.292 250.161 216.232 249.985 216.232 cv
249.833 216.232 249.677 216.304 249.517 216.449 cv
249.251 216.316 248.971 216.216 248.676 216.15 cv
248.381 216.083 248.069 216.05 247.741 216.05 cv
246.612 216.05 245.72 216.476 245.063 217.328 cv
244.575 217.957 244.331 218.671 244.331 219.472 cv
244.331 220.339 li
244.331 220.859 244.431 221.329 244.63 221.749 cv
244.829 222.168 245.047 222.486 245.283 222.701 cv
245.52 222.916 245.843 223.093 246.253 223.234 cv
246.776 223.417 247.345 223.509 247.958 223.509 cv
248.399 223.509 248.811 223.456 249.191 223.348 cv
249.572 223.241 250.034 223.041 250.577 222.748 cv
250.577 221.136 li
250.749 221.085 250.877 221.007 250.961 220.902 cv
250.961 220.902 li
cp
f
247.251 242.688 mo
248.224 240.31 li
249.19 242.688 li
247.251 242.688 li
247.251 242.688 li
cp
249.976 244.622 mo
249.683 244.622 li
249.394 244.622 249.188 244.678 249.064 244.789 cv
248.941 244.9 248.88 245.044 248.88 245.22 cv
248.88 245.399 248.941 245.545 249.064 245.656 cv
249.188 245.768 249.394 245.823 249.683 245.823 cv
251.3 245.823 li
251.589 245.823 251.794 245.768 251.915 245.656 cv
252.036 245.545 252.097 245.401 252.097 245.226 cv
252.097 245.015 252.007 244.845 251.827 244.716 cv
251.737 244.653 251.552 244.622 251.271 244.622 cv
248.88 238.722 li
246.284 238.716 li
245.995 238.716 245.789 238.771 245.666 238.883 cv
245.543 238.994 245.481 239.14 245.481 239.319 cv
245.481 239.499 245.543 239.645 245.666 239.756 cv
245.789 239.867 245.995 239.923 246.284 239.923 cv
247.069 239.923 li
245.183 244.622 li
244.886 244.614 244.673 244.667 244.544 244.78 cv
244.415 244.894 244.351 245.04 244.351 245.22 cv
244.351 245.399 244.412 245.545 244.535 245.656 cv
244.658 245.768 244.864 245.823 245.153 245.823 cv
246.771 245.823 li
247.06 245.823 247.266 245.768 247.389 245.656 cv
247.512 245.545 247.573 245.401 247.573 245.226 cv
247.573 245.046 247.512 244.9 247.389 244.789 cv
247.266 244.678 247.06 244.622 246.771 244.622 cv
246.478 244.622 li
246.771 243.89 li
249.688 243.89 li
249.976 244.622 li
249.976 244.622 li
cp
f
247.251 266.108 mo
248.224 263.729 li
249.19 266.108 li
247.251 266.108 li
247.251 266.108 li
cp
249.976 268.042 mo
249.683 268.042 li
249.394 268.042 249.188 268.098 249.064 268.209 cv
248.941 268.32 248.88 268.464 248.88 268.64 cv
248.88 268.819 248.941 268.965 249.064 269.076 cv
249.188 269.188 249.394 269.243 249.683 269.243 cv
251.3 269.243 li
251.589 269.243 251.794 269.188 251.915 269.076 cv
252.036 268.965 252.097 268.821 252.097 268.646 cv
252.097 268.435 252.007 268.265 251.827 268.136 cv
251.737 268.073 251.552 268.042 251.271 268.042 cv
248.88 262.142 li
246.284 262.136 li
245.995 262.136 245.789 262.191 245.666 262.303 cv
245.543 262.414 245.481 262.56 245.481 262.739 cv
245.481 262.919 245.543 263.064 245.666 263.176 cv
245.789 263.287 245.995 263.343 246.284 263.343 cv
247.069 263.343 li
245.183 268.042 li
244.886 268.034 244.673 268.087 244.544 268.2 cv
244.415 268.313 244.351 268.46 244.351 268.64 cv
244.351 268.819 244.412 268.965 244.535 269.076 cv
244.658 269.188 244.864 269.243 245.153 269.243 cv
246.771 269.243 li
247.06 269.243 247.266 269.188 247.389 269.076 cv
247.512 268.965 247.573 268.821 247.573 268.646 cv
247.573 268.466 247.512 268.32 247.389 268.209 cv
247.266 268.098 247.06 268.042 246.771 268.042 cv
246.478 268.042 li
246.771 267.31 li
249.688 267.31 li
249.976 268.042 li
249.976 268.042 li
cp
f
247.251 313.679 mo
248.224 311.3 li
249.19 313.679 li
247.251 313.679 li
247.251 313.679 li
cp
249.976 315.612 mo
249.683 315.612 li
249.394 315.612 249.188 315.668 249.064 315.779 cv
248.941 315.891 248.88 316.034 248.88 316.21 cv
248.88 316.39 248.941 316.535 249.064 316.646 cv
249.188 316.758 249.394 316.813 249.683 316.813 cv
251.3 316.813 li
251.589 316.813 251.794 316.758 251.915 316.646 cv
252.036 316.535 252.097 316.392 252.097 316.216 cv
252.097 316.005 252.007 315.835 251.827 315.706 cv
251.737 315.644 251.552 315.612 251.271 315.612 cv
248.88 309.712 li
246.284 309.706 li
245.995 309.706 245.789 309.762 245.666 309.873 cv
245.543 309.984 245.481 310.13 245.481 310.31 cv
245.481 310.489 245.543 310.635 245.666 310.746 cv
245.789 310.857 245.995 310.913 246.284 310.913 cv
247.069 310.913 li
245.183 315.612 li
244.886 315.604 244.673 315.657 244.544 315.771 cv
244.415 315.884 244.351 316.03 244.351 316.21 cv
244.351 316.39 244.412 316.535 244.535 316.646 cv
244.658 316.758 244.864 316.813 245.153 316.813 cv
246.771 316.813 li
247.06 316.813 247.266 316.758 247.389 316.646 cv
247.512 316.535 247.573 316.392 247.573 316.216 cv
247.573 316.036 247.512 315.891 247.389 315.779 cv
247.266 315.668 247.06 315.612 246.771 315.612 cv
246.478 315.612 li
246.771 314.88 li
249.688 314.88 li
249.976 315.612 li
249.976 315.612 li
cp
f
250.975 285.387 mo
251.06 285.281 251.102 285.158 251.102 285.017 cv
251.102 284.837 251.04 284.692 250.916 284.583 cv
250.793 284.473 250.587 284.418 250.297 284.418 cv
248.16 284.412 li
247.87 284.412 247.664 284.468 247.54 284.58 cv
247.417 284.691 247.355 284.837 247.355 285.017 cv
247.355 285.197 247.417 285.343 247.54 285.455 cv
247.664 285.566 247.87 285.622 248.16 285.622 cv
249.387 285.622 li
249.387 286.485 li
248.933 286.692 248.43 286.796 247.878 286.796 cv
247.063 286.796 246.47 286.628 246.096 286.294 cv
245.723 285.959 245.535 285.469 245.535 284.823 cv
245.535 283.954 li
245.535 283.532 245.642 283.14 245.853 282.78 cv
246.063 282.42 246.295 282.167 246.545 282.023 cv
246.897 281.827 247.313 281.729 247.79 281.729 cv
248.123 281.729 248.423 281.773 248.691 281.861 cv
248.959 281.949 249.146 282.05 249.252 282.164 cv
249.318 282.234 249.378 282.37 249.431 282.572 cv
249.483 282.773 249.549 282.903 249.628 282.962 cv
249.729 283.048 249.851 283.091 249.991 283.091 cv
250.168 283.091 250.312 283.03 250.423 282.906 cv
250.535 282.783 250.591 282.577 250.591 282.287 cv
250.591 281.506 li
250.591 281.216 250.535 281.011 250.426 280.89 cv
250.316 280.768 250.174 280.708 249.997 280.708 cv
249.845 280.708 249.688 280.78 249.527 280.925 cv
249.262 280.792 248.98 280.692 248.686 280.625 cv
248.39 280.559 248.077 280.525 247.749 280.525 cv
246.617 280.525 245.724 280.952 245.065 281.805 cv
244.576 282.436 244.332 283.152 244.332 283.954 cv
244.332 284.823 li
244.332 285.344 244.432 285.814 244.631 286.235 cv
244.831 286.656 245.049 286.974 245.286 287.189 cv
245.522 287.405 245.847 287.583 246.258 287.724 cv
246.782 287.907 247.352 288 247.966 288 cv
248.408 288 248.82 287.946 249.202 287.838 cv
249.584 287.73 250.046 287.53 250.591 287.236 cv
250.591 285.622 li
250.763 285.571 250.891 285.493 250.975 285.387 cv
250.975 285.387 li
cp
f
251.219 325.793 mo
251.34 325.68 251.4 325.535 251.4 325.359 cv
251.4 325.18 251.339 325.035 251.216 324.926 cv
251.093 324.816 250.887 324.762 250.598 324.762 cv
249.021 324.756 li
248.732 324.756 248.526 324.812 248.403 324.923 cv
248.28 325.034 248.219 325.18 248.219 325.359 cv
248.219 325.539 248.28 325.685 248.403 325.796 cv
248.526 325.907 248.732 325.963 249.021 325.963 cv
249.455 325.963 li
249.455 329.473 li
249.455 329.703 249.406 329.898 249.309 330.059 cv
249.152 330.313 248.951 330.506 248.705 330.639 cv
248.459 330.771 248.195 330.838 247.914 330.838 cv
247.492 330.838 247.132 330.7 246.833 330.425 cv
246.534 330.149 246.385 329.832 246.385 329.473 cv
246.385 325.963 li
246.818 325.963 li
247.107 325.963 247.313 325.907 247.437 325.796 cv
247.56 325.685 247.621 325.539 247.621 325.359 cv
247.621 325.18 247.56 325.034 247.437 324.923 cv
247.313 324.812 247.107 324.756 246.818 324.756 cv
245.242 324.762 li
244.949 324.762 244.742 324.816 244.621 324.926 cv
244.5 325.035 244.439 325.18 244.439 325.359 cv
244.439 325.535 244.5 325.68 244.621 325.793 cv
244.742 325.906 244.93 325.963 245.184 325.963 cv
245.184 329.367 li
245.184 329.828 245.256 330.196 245.4 330.472 cv
245.545 330.747 245.747 331.012 246.007 331.266 cv
246.267 331.52 246.56 331.712 246.886 331.843 cv
247.212 331.974 247.561 332.039 247.932 332.039 cv
248.682 332.039 249.323 331.779 249.856 331.26 cv
250.39 330.74 250.656 330.109 250.656 329.367 cv
250.656 325.963 li
250.91 325.963 251.098 325.906 251.219 325.793 cv
251.219 325.793 li
cp
f
250.975 352.157 mo
251.06 352.051 251.102 351.928 251.102 351.787 cv
251.102 351.607 251.04 351.462 250.916 351.353 cv
250.793 351.243 250.587 351.188 250.297 351.188 cv
248.16 351.182 li
247.87 351.182 247.664 351.238 247.54 351.35 cv
247.417 351.461 247.355 351.607 247.355 351.787 cv
247.355 351.967 247.417 352.113 247.54 352.224 cv
247.664 352.336 247.87 352.392 248.16 352.392 cv
249.387 352.392 li
249.387 353.255 li
248.933 353.462 248.43 353.566 247.878 353.566 cv
247.063 353.566 246.47 353.398 246.096 353.064 cv
245.723 352.729 245.535 352.239 245.535 351.593 cv
245.535 350.724 li
245.535 350.302 245.642 349.91 245.853 349.55 cv
246.063 349.19 246.295 348.938 246.545 348.792 cv
246.897 348.597 247.313 348.499 247.79 348.499 cv
248.123 348.499 248.423 348.543 248.691 348.631 cv
248.959 348.719 249.146 348.82 249.252 348.934 cv
249.318 349.004 249.378 349.14 249.431 349.342 cv
249.483 349.543 249.549 349.673 249.628 349.732 cv
249.729 349.818 249.851 349.861 249.991 349.861 cv
250.168 349.861 250.312 349.799 250.423 349.676 cv
250.535 349.553 250.591 349.347 250.591 349.057 cv
250.591 348.276 li
250.591 347.986 250.535 347.781 250.426 347.66 cv
250.316 347.538 250.174 347.478 249.997 347.478 cv
249.845 347.478 249.688 347.55 249.527 347.695 cv
249.262 347.562 248.98 347.462 248.686 347.396 cv
248.39 347.329 248.077 347.295 247.749 347.295 cv
246.617 347.295 245.724 347.722 245.065 348.576 cv
244.576 349.206 244.332 349.922 244.332 350.724 cv
244.332 351.593 li
244.332 352.114 244.432 352.584 244.631 353.005 cv
244.831 353.426 245.049 353.744 245.286 353.959 cv
245.522 354.174 245.847 354.353 246.258 354.494 cv
246.782 354.677 247.352 354.77 247.966 354.77 cv
248.408 354.77 248.82 354.715 249.202 354.608 cv
249.584 354.5 250.046 354.3 250.591 354.006 cv
250.591 352.392 li
250.763 352.341 250.891 352.263 250.975 352.157 cv
250.975 352.157 li
cp
f
247.251 369.529 mo
248.224 367.15 li
249.19 369.529 li
247.251 369.529 li
247.251 369.529 li
cp
249.976 371.462 mo
249.683 371.462 li
249.394 371.462 249.188 371.518 249.064 371.629 cv
248.941 371.741 248.88 371.884 248.88 372.06 cv
248.88 372.24 248.941 372.385 249.064 372.497 cv
249.188 372.608 249.394 372.664 249.683 372.664 cv
251.3 372.664 li
251.589 372.664 251.794 372.608 251.915 372.497 cv
252.036 372.385 252.097 372.242 252.097 372.066 cv
252.097 371.855 252.007 371.685 251.827 371.556 cv
251.737 371.494 251.552 371.462 251.271 371.462 cv
248.88 365.562 li
246.284 365.556 li
245.995 365.556 245.789 365.612 245.666 365.723 cv
245.543 365.834 245.481 365.98 245.481 366.16 cv
245.481 366.339 245.543 366.485 245.666 366.596 cv
245.789 366.708 245.995 366.763 246.284 366.763 cv
247.069 366.763 li
245.183 371.462 li
244.886 371.455 244.673 371.507 244.544 371.621 cv
244.415 371.734 244.351 371.88 244.351 372.06 cv
244.351 372.24 244.412 372.385 244.535 372.497 cv
244.658 372.608 244.864 372.664 245.153 372.664 cv
246.771 372.664 li
247.06 372.664 247.266 372.608 247.389 372.497 cv
247.512 372.385 247.573 372.242 247.573 372.066 cv
247.573 371.886 247.512 371.741 247.389 371.629 cv
247.266 371.518 247.06 371.462 246.771 371.462 cv
246.478 371.462 li
246.771 370.73 li
249.688 370.73 li
249.976 371.462 li
249.976 371.462 li
cp
f
248.957 395.216 mo
248.653 395.136 248.328 395.095 247.979 395.095 cv
247.4 395.095 246.853 395.243 246.336 395.536 cv
245.819 395.83 245.415 396.248 245.123 396.79 cv
244.832 397.332 244.686 397.916 244.686 398.542 cv
244.686 399.358 li
244.686 399.957 244.849 400.509 245.173 401.016 cv
245.498 401.524 245.892 401.894 246.354 402.129 cv
246.925 402.422 247.566 402.57 248.279 402.57 cv
248.89 402.57 249.447 402.463 249.952 402.252 cv
250.328 402.096 250.635 401.88 250.874 401.607 cv
251.038 401.418 251.12 401.243 251.12 401.079 cv
251.12 400.914 251.06 400.771 250.938 400.65 cv
250.817 400.529 250.677 400.467 250.516 400.467 cv
250.426 400.467 250.346 400.486 250.275 400.523 cv
250.205 400.561 250.106 400.642 249.981 400.767 cv
249.778 400.974 249.586 401.114 249.406 401.184 cv
249.097 401.305 248.72 401.366 248.273 401.366 cv
247.525 401.366 246.941 401.172 246.521 400.785 cv
246.1 400.397 245.89 399.914 245.89 399.334 cv
245.89 398.553 li
245.89 398.068 246.005 397.65 246.235 397.297 cv
246.467 396.945 246.732 396.691 247.034 396.534 cv
247.336 396.377 247.666 396.299 248.026 396.299 cv
248.316 396.299 248.604 396.352 248.893 396.458 cv
249.181 396.563 249.404 396.705 249.564 396.88 cv
249.646 396.97 249.702 397.097 249.729 397.262 cv
249.776 397.508 249.849 397.677 249.946 397.767 cv
250.044 397.857 250.173 397.902 250.334 397.902 cv
250.51 397.902 250.654 397.84 250.766 397.717 cv
250.877 397.593 250.933 397.387 250.933 397.097 cv
250.933 396.076 li
250.933 395.787 250.877 395.581 250.766 395.459 cv
250.654 395.338 250.51 395.278 250.334 395.278 cv
250.232 395.278 250.137 395.303 250.049 395.354 cv
249.961 395.405 249.88 395.481 249.806 395.583 cv
249.543 395.418 249.261 395.296 248.957 395.216 cv
248.957 395.216 li
cp
f
250.961 424.421 mo
251.045 424.316 251.087 424.193 251.087 424.052 cv
251.087 423.873 251.025 423.728 250.902 423.619 cv
250.779 423.509 250.573 423.455 250.284 423.455 cv
248.151 423.449 li
247.862 423.449 247.656 423.504 247.533 423.616 cv
247.41 423.727 247.349 423.873 247.349 424.052 cv
247.349 424.232 247.41 424.377 247.533 424.489 cv
247.656 424.6 247.862 424.656 248.151 424.656 cv
249.376 424.656 li
249.376 425.517 li
248.923 425.724 248.421 425.828 247.87 425.828 cv
247.058 425.828 246.465 425.661 246.092 425.327 cv
245.719 424.993 245.532 424.503 245.532 423.859 cv
245.532 422.992 li
245.532 422.57 245.638 422.179 245.849 421.82 cv
246.06 421.46 246.29 421.208 246.54 421.064 cv
246.892 420.869 247.306 420.771 247.782 420.771 cv
248.114 420.771 248.414 420.815 248.682 420.903 cv
248.949 420.991 249.136 421.091 249.241 421.205 cv
249.308 421.275 249.367 421.411 249.42 421.612 cv
249.473 421.813 249.538 421.943 249.616 422.001 cv
249.718 422.087 249.839 422.13 249.979 422.13 cv
250.155 422.13 250.299 422.069 250.41 421.946 cv
250.521 421.823 250.577 421.617 250.577 421.328 cv
250.577 420.548 li
250.577 420.259 250.522 420.054 250.413 419.933 cv
250.304 419.812 250.161 419.751 249.985 419.751 cv
249.833 419.751 249.677 419.824 249.517 419.968 cv
249.251 419.835 248.971 419.736 248.676 419.669 cv
248.381 419.603 248.069 419.57 247.741 419.57 cv
246.612 419.57 245.72 419.996 245.063 420.847 cv
244.575 421.476 244.331 422.191 244.331 422.992 cv
244.331 423.859 li
244.331 424.378 244.431 424.848 244.63 425.268 cv
244.829 425.688 245.047 426.005 245.283 426.22 cv
245.52 426.435 245.843 426.613 246.253 426.753 cv
246.776 426.937 247.345 427.029 247.958 427.029 cv
248.399 427.029 248.811 426.975 249.191 426.868 cv
249.572 426.76 250.034 426.56 250.577 426.267 cv
250.577 424.656 li
250.749 424.605 250.877 424.527 250.961 424.421 cv
250.961 424.421 li
cp
f
248.948 439.06 mo
248.646 438.98 248.32 438.94 247.973 438.94 cv
247.395 438.94 246.848 439.086 246.332 439.379 cv
245.816 439.672 245.413 440.089 245.122 440.63 cv
244.831 441.171 244.686 441.754 244.686 442.379 cv
244.686 443.194 li
244.686 443.792 244.848 444.343 245.172 444.849 cv
245.496 445.355 245.889 445.725 246.35 445.959 cv
246.92 446.252 247.561 446.399 248.271 446.399 cv
248.881 446.399 249.438 446.293 249.941 446.083 cv
250.316 445.926 250.623 445.711 250.861 445.438 cv
251.025 445.25 251.107 445.075 251.107 444.911 cv
251.107 444.747 251.047 444.604 250.926 444.483 cv
250.805 444.362 250.664 444.301 250.504 444.301 cv
250.414 444.301 250.334 444.32 250.264 444.357 cv
250.193 444.394 250.096 444.475 249.971 444.6 cv
249.768 444.807 249.576 444.946 249.396 445.016 cv
249.088 445.137 248.711 445.198 248.266 445.198 cv
247.52 445.198 246.937 445.004 246.517 444.618 cv
246.097 444.231 245.887 443.749 245.887 443.17 cv
245.887 442.391 li
245.887 441.907 246.002 441.489 246.232 441.137 cv
246.463 440.786 246.729 440.532 247.029 440.375 cv
247.33 440.219 247.66 440.141 248.02 440.141 cv
248.309 440.141 248.597 440.194 248.884 440.299 cv
249.171 440.405 249.395 440.545 249.555 440.721 cv
249.637 440.811 249.691 440.938 249.719 441.102 cv
249.766 441.348 249.838 441.516 249.936 441.606 cv
250.033 441.696 250.162 441.741 250.322 441.741 cv
250.498 441.741 250.642 441.679 250.753 441.556 cv
250.864 441.433 250.92 441.227 250.92 440.938 cv
250.92 439.918 li
250.92 439.629 250.864 439.424 250.753 439.303 cv
250.642 439.182 250.498 439.122 250.322 439.122 cv
250.221 439.122 250.126 439.147 250.038 439.198 cv
249.95 439.249 249.869 439.325 249.795 439.426 cv
249.533 439.262 249.251 439.14 248.948 439.06 cv
248.948 439.06 li
cp
f
250.961 461.001 mo
251.045 460.896 251.087 460.773 251.087 460.632 cv
251.087 460.453 251.025 460.308 250.902 460.199 cv
250.779 460.089 250.573 460.035 250.284 460.035 cv
248.151 460.029 li
247.862 460.029 247.656 460.084 247.533 460.196 cv
247.41 460.307 247.349 460.453 247.349 460.632 cv
247.349 460.812 247.41 460.958 247.533 461.069 cv
247.656 461.18 247.862 461.236 248.151 461.236 cv
249.376 461.236 li
249.376 462.097 li
248.923 462.304 248.421 462.408 247.87 462.408 cv
247.058 462.408 246.465 462.241 246.092 461.907 cv
245.719 461.573 245.532 461.083 245.532 460.439 cv
245.532 459.572 li
245.532 459.15 245.638 458.759 245.849 458.4 cv
246.06 458.041 246.29 457.789 246.54 457.644 cv
246.892 457.449 247.306 457.351 247.782 457.351 cv
248.114 457.351 248.414 457.395 248.682 457.483 cv
248.949 457.571 249.136 457.671 249.241 457.785 cv
249.308 457.855 249.367 457.991 249.42 458.192 cv
249.473 458.393 249.538 458.523 249.616 458.582 cv
249.718 458.667 249.839 458.71 249.979 458.71 cv
250.155 458.71 250.299 458.649 250.41 458.526 cv
250.521 458.403 250.577 458.197 250.577 457.908 cv
250.577 457.128 li
250.577 456.839 250.522 456.634 250.413 456.513 cv
250.304 456.392 250.161 456.332 249.985 456.332 cv
249.833 456.332 249.677 456.404 249.517 456.548 cv
249.251 456.416 248.971 456.316 248.676 456.25 cv
248.381 456.183 248.069 456.15 247.741 456.15 cv
246.612 456.15 245.72 456.576 245.063 457.427 cv
244.575 458.056 244.331 458.771 244.331 459.572 cv
244.331 460.439 li
244.331 460.958 244.431 461.428 244.63 461.848 cv
244.829 462.268 245.047 462.585 245.283 462.8 cv
245.52 463.015 245.843 463.193 246.253 463.333 cv
246.776 463.517 247.345 463.609 247.958 463.609 cv
248.399 463.609 248.811 463.555 249.191 463.448 cv
249.572 463.34 250.034 463.14 250.577 462.847 cv
250.577 461.236 li
250.749 461.185 250.877 461.107 250.961 461.001 cv
250.961 461.001 li
cp
f
251.219 485.893 mo
251.34 485.78 251.4 485.635 251.4 485.459 cv
251.4 485.28 251.339 485.135 251.216 485.026 cv
251.093 484.917 250.887 484.862 250.598 484.862 cv
249.021 484.856 li
248.732 484.856 248.526 484.912 248.403 485.023 cv
248.28 485.134 248.219 485.28 248.219 485.459 cv
248.219 485.639 248.28 485.785 248.403 485.896 cv
248.526 486.007 248.732 486.063 249.021 486.063 cv
249.455 486.063 li
249.455 489.573 li
249.455 489.803 249.406 489.999 249.309 490.159 cv
249.152 490.413 248.951 490.606 248.705 490.739 cv
248.459 490.872 248.195 490.938 247.914 490.938 cv
247.492 490.938 247.132 490.8 246.833 490.525 cv
246.534 490.25 246.385 489.932 246.385 489.573 cv
246.385 486.063 li
246.818 486.063 li
247.107 486.063 247.313 486.007 247.437 485.896 cv
247.56 485.785 247.621 485.639 247.621 485.459 cv
247.621 485.28 247.56 485.134 247.437 485.023 cv
247.313 484.912 247.107 484.856 246.818 484.856 cv
245.242 484.862 li
244.949 484.862 244.742 484.917 244.621 485.026 cv
244.5 485.135 244.439 485.28 244.439 485.459 cv
244.439 485.635 244.5 485.78 244.621 485.893 cv
244.742 486.006 244.93 486.063 245.184 486.063 cv
245.184 489.467 li
245.184 489.928 245.256 490.296 245.4 490.572 cv
245.545 490.847 245.747 491.112 246.007 491.366 cv
246.267 491.62 246.56 491.812 246.886 491.943 cv
247.212 492.074 247.561 492.139 247.932 492.139 cv
248.682 492.139 249.323 491.879 249.856 491.36 cv
250.39 490.84 250.656 490.209 250.656 489.467 cv
250.656 486.063 li
250.91 486.063 251.098 486.006 251.219 485.893 cv
251.219 485.893 li
cp
f
251.219 520.603 mo
251.34 520.49 251.4 520.345 251.4 520.169 cv
251.4 519.99 251.339 519.845 251.216 519.736 cv
251.093 519.626 250.887 519.572 250.598 519.572 cv
249.021 519.566 li
248.732 519.566 248.526 519.622 248.403 519.733 cv
248.28 519.844 248.219 519.99 248.219 520.169 cv
248.219 520.349 248.28 520.495 248.403 520.606 cv
248.526 520.717 248.732 520.773 249.021 520.773 cv
249.455 520.773 li
249.455 524.283 li
249.455 524.513 249.406 524.708 249.309 524.869 cv
249.152 525.123 248.951 525.316 248.705 525.449 cv
248.459 525.582 248.195 525.648 247.914 525.648 cv
247.492 525.648 247.132 525.51 246.833 525.235 cv
246.534 524.959 246.385 524.642 246.385 524.283 cv
246.385 520.773 li
246.818 520.773 li
247.107 520.773 247.313 520.717 247.437 520.606 cv
247.56 520.495 247.621 520.349 247.621 520.169 cv
247.621 519.99 247.56 519.844 247.437 519.733 cv
247.313 519.622 247.107 519.566 246.818 519.566 cv
245.242 519.572 li
244.949 519.572 244.742 519.626 244.621 519.736 cv
244.5 519.845 244.439 519.99 244.439 520.169 cv
244.439 520.345 244.5 520.49 244.621 520.603 cv
244.742 520.716 244.93 520.773 245.184 520.773 cv
245.184 524.177 li
245.184 524.638 245.256 525.006 245.4 525.282 cv
245.545 525.557 245.747 525.822 246.007 526.076 cv
246.267 526.33 246.56 526.522 246.886 526.653 cv
247.212 526.784 247.561 526.849 247.932 526.849 cv
248.682 526.849 249.323 526.589 249.856 526.07 cv
250.39 525.55 250.656 524.919 250.656 524.177 cv
250.656 520.773 li
250.91 520.773 251.098 520.716 251.219 520.603 cv
251.219 520.603 li
cp
f
248.948 501.82 mo
248.646 501.74 248.32 501.7 247.973 501.7 cv
247.395 501.7 246.848 501.846 246.332 502.139 cv
245.816 502.432 245.413 502.849 245.122 503.39 cv
244.831 503.931 244.686 504.514 244.686 505.139 cv
244.686 505.954 li
244.686 506.551 244.848 507.103 245.172 507.609 cv
245.496 508.115 245.889 508.485 246.35 508.719 cv
246.92 509.012 247.561 509.159 248.271 509.159 cv
248.881 509.159 249.438 509.053 249.941 508.842 cv
250.316 508.686 250.623 508.471 250.861 508.198 cv
251.025 508.01 251.107 507.834 251.107 507.67 cv
251.107 507.506 251.047 507.364 250.926 507.243 cv
250.805 507.122 250.664 507.061 250.504 507.061 cv
250.414 507.061 250.334 507.08 250.264 507.117 cv
250.193 507.154 250.096 507.235 249.971 507.36 cv
249.768 507.567 249.576 507.706 249.396 507.776 cv
249.088 507.897 248.711 507.958 248.266 507.958 cv
247.52 507.958 246.937 507.764 246.517 507.377 cv
246.097 506.991 245.887 506.508 245.887 505.93 cv
245.887 505.151 li
245.887 504.667 246.002 504.249 246.232 503.897 cv
246.463 503.545 246.729 503.292 247.029 503.135 cv
247.33 502.979 247.66 502.901 248.02 502.901 cv
248.309 502.901 248.597 502.954 248.884 503.059 cv
249.171 503.165 249.395 503.305 249.555 503.481 cv
249.637 503.571 249.691 503.698 249.719 503.862 cv
249.766 504.108 249.838 504.276 249.936 504.366 cv
250.033 504.456 250.162 504.5 250.322 504.5 cv
250.498 504.5 250.642 504.439 250.753 504.316 cv
250.864 504.193 250.92 503.987 250.92 503.698 cv
250.92 502.678 li
250.92 502.389 250.864 502.184 250.753 502.063 cv
250.642 501.942 250.498 501.881 250.322 501.881 cv
250.221 501.881 250.126 501.907 250.038 501.958 cv
249.95 502.008 249.869 502.084 249.795 502.186 cv
249.533 502.022 249.251 501.9 248.948 501.82 cv
248.948 501.82 li
cp
f
250.961 540.221 mo
251.045 540.116 251.087 539.993 251.087 539.852 cv
251.087 539.673 251.025 539.529 250.902 539.418 cv
250.779 539.31 250.573 539.254 250.284 539.254 cv
248.151 539.249 li
247.862 539.249 247.656 539.304 247.533 539.416 cv
247.41 539.527 247.349 539.673 247.349 539.852 cv
247.349 540.033 247.41 540.177 247.533 540.289 cv
247.656 540.4 247.862 540.456 248.151 540.456 cv
249.376 540.456 li
249.376 541.317 li
248.923 541.525 248.421 541.627 247.87 541.627 cv
247.058 541.627 246.465 541.46 246.092 541.126 cv
245.719 540.792 245.532 540.303 245.532 539.659 cv
245.532 538.792 li
245.532 538.37 245.638 537.98 245.849 537.62 cv
246.06 537.261 246.29 537.009 246.54 536.864 cv
246.892 536.669 247.306 536.571 247.782 536.571 cv
248.114 536.571 248.414 536.615 248.682 536.703 cv
248.949 536.791 249.136 536.892 249.241 537.004 cv
249.308 537.075 249.367 537.21 249.42 537.412 cv
249.473 537.614 249.538 537.743 249.616 537.801 cv
249.718 537.888 249.839 537.93 249.979 537.93 cv
250.155 537.93 250.299 537.869 250.41 537.746 cv
250.521 537.623 250.577 537.417 250.577 537.127 cv
250.577 536.348 li
250.577 536.06 250.522 535.855 250.413 535.733 cv
250.304 535.613 250.161 535.551 249.985 535.551 cv
249.833 535.551 249.677 535.625 249.517 535.768 cv
249.251 535.636 248.971 535.537 248.676 535.469 cv
248.381 535.404 248.069 535.37 247.741 535.37 cv
246.612 535.37 245.72 535.796 245.063 536.647 cv
244.575 537.277 244.331 537.992 244.331 538.792 cv
244.331 539.659 li
244.331 540.179 244.431 540.649 244.63 541.068 cv
244.829 541.488 245.047 541.806 245.283 542.02 cv
245.52 542.236 245.843 542.413 246.253 542.553 cv
246.776 542.737 247.345 542.829 247.958 542.829 cv
248.399 542.829 248.811 542.775 249.191 542.667 cv
249.572 542.56 250.034 542.36 250.577 542.067 cv
250.577 540.456 li
250.749 540.406 250.877 540.327 250.961 540.221 cv
250.961 540.221 li
cp
f
374.34 217.3 mo
427.37 217.3 li
427.37 196.724 li
374.34 196.724 li
374.34 217.3 li
cp
0 0 0 .148416 cmyk
ef
427.362 217.3 mo
467.135 217.3 li
467.135 196.724 li
427.362 196.724 li
427.362 217.3 li
cp
ef
467.135 217.3 mo
511.328 217.3 li
511.328 196.724 li
467.135 196.724 li
467.135 217.3 li
cp
ef
511.329 217.3 mo
559.939 217.3 li
559.939 196.724 li
511.329 196.724 li
511.329 217.3 li
cp
ef
559.94 217.3 mo
608.552 217.3 li
608.552 196.724 li
559.94 196.724 li
559.94 217.3 li
cp
ef
374.34 237.876 mo
427.37 237.876 li
427.37 217.3 li
374.34 217.3 li
374.34 237.876 li
cp
ef
427.362 237.876 mo
467.135 237.876 li
467.135 217.3 li
427.362 217.3 li
427.362 237.876 li
cp
ef
467.135 237.876 mo
511.328 237.876 li
511.328 217.3 li
467.135 217.3 li
467.135 237.876 li
cp
ef
511.329 237.876 mo
559.939 237.876 li
559.939 217.3 li
511.329 217.3 li
511.329 237.876 li
cp
ef
559.94 237.876 mo
608.552 237.876 li
608.552 217.3 li
559.94 217.3 li
559.94 237.876 li
cp
ef
374.34 258.453 mo
427.37 258.453 li
427.37 237.876 li
374.34 237.876 li
374.34 258.453 li
cp
ef
427.362 258.453 mo
467.135 258.453 li
467.135 237.876 li
427.362 237.876 li
427.362 258.453 li
cp
ef
467.135 258.453 mo
511.328 258.453 li
511.328 237.876 li
467.135 237.876 li
467.135 258.453 li
cp
ef
511.329 258.453 mo
559.939 258.453 li
559.939 237.876 li
511.329 237.876 li
511.329 258.453 li
cp
ef
559.94 258.453 mo
608.552 258.453 li
608.552 237.876 li
559.94 237.876 li
559.94 258.453 li
cp
ef
374.34 279.029 mo
427.37 279.029 li
427.37 258.453 li
374.34 258.453 li
374.34 279.029 li
cp
ef
427.362 279.029 mo
467.135 279.029 li
467.135 258.453 li
427.362 258.453 li
427.362 279.029 li
cp
ef
467.135 279.029 mo
511.328 279.029 li
511.328 258.453 li
467.135 258.453 li
467.135 279.029 li
cp
ef
511.329 279.029 mo
559.939 279.029 li
559.939 258.453 li
511.329 258.453 li
511.329 279.029 li
cp
ef
559.94 279.029 mo
608.552 279.029 li
608.552 258.453 li
559.94 258.453 li
559.94 279.029 li
cp
ef
374.34 299.606 mo
427.37 299.606 li
427.37 279.029 li
374.34 279.029 li
374.34 299.606 li
cp
ef
427.362 299.606 mo
467.135 299.606 li
467.135 279.029 li
427.362 279.029 li
427.362 299.606 li
cp
ef
467.135 299.606 mo
511.328 299.606 li
511.328 279.029 li
467.135 279.029 li
467.135 299.606 li
cp
ef
511.329 299.606 mo
559.939 299.606 li
559.939 279.029 li
511.329 279.029 li
511.329 299.606 li
cp
ef
559.94 299.606 mo
608.552 299.606 li
608.552 279.029 li
559.94 279.029 li
559.94 299.606 li
cp
ef
374.34 320.182 mo
427.37 320.182 li
427.37 299.606 li
374.34 299.606 li
374.34 320.182 li
cp
ef
427.362 320.182 mo
467.135 320.182 li
467.135 299.606 li
427.362 299.606 li
427.362 320.182 li
cp
ef
467.135 320.182 mo
511.328 320.182 li
511.328 299.606 li
467.135 299.606 li
467.135 320.182 li
cp
ef
511.329 320.182 mo
559.939 320.182 li
559.939 299.606 li
511.329 299.606 li
511.329 320.182 li
cp
ef
559.94 320.182 mo
608.552 320.182 li
608.552 299.606 li
559.94 299.606 li
559.94 320.182 li
cp
ef
374.34 340.759 mo
427.37 340.759 li
427.37 320.182 li
374.34 320.182 li
374.34 340.759 li
cp
ef
427.362 340.759 mo
467.135 340.759 li
467.135 320.182 li
427.362 320.182 li
427.362 340.759 li
cp
ef
467.135 340.759 mo
511.328 340.759 li
511.328 320.182 li
467.135 320.182 li
467.135 340.759 li
cp
ef
511.329 340.759 mo
559.939 340.759 li
559.939 320.182 li
511.329 320.182 li
511.329 340.759 li
cp
ef
559.94 340.759 mo
608.552 340.759 li
608.552 320.182 li
559.94 320.182 li
559.94 340.759 li
cp
ef
374.34 361.336 mo
427.37 361.336 li
427.37 340.759 li
374.34 340.759 li
374.34 361.336 li
cp
ef
427.362 361.336 mo
467.135 361.336 li
467.135 340.759 li
427.362 340.759 li
427.362 361.336 li
cp
ef
467.135 361.336 mo
511.328 361.336 li
511.328 340.759 li
467.135 340.759 li
467.135 361.336 li
cp
ef
511.329 361.336 mo
559.939 361.336 li
559.939 340.759 li
511.329 340.759 li
511.329 361.336 li
cp
ef
559.94 361.336 mo
608.552 361.336 li
608.552 340.759 li
559.94 340.759 li
559.94 361.336 li
cp
ef
374.34 381.912 mo
427.37 381.912 li
427.37 361.336 li
374.34 361.336 li
374.34 381.912 li
cp
ef
427.362 381.912 mo
467.135 381.912 li
467.135 361.336 li
427.362 361.336 li
427.362 381.912 li
cp
ef
467.135 381.912 mo
511.328 381.912 li
511.328 361.336 li
467.135 361.336 li
467.135 381.912 li
cp
ef
511.329 381.912 mo
559.939 381.912 li
559.939 361.336 li
511.329 361.336 li
511.329 381.912 li
cp
ef
559.94 381.912 mo
608.552 381.912 li
608.552 361.336 li
559.94 361.336 li
559.94 381.912 li
cp
ef
374.34 402.488 mo
427.37 402.488 li
427.37 381.912 li
374.34 381.912 li
374.34 402.488 li
cp
ef
427.362 402.488 mo
467.135 402.488 li
467.135 381.912 li
427.362 381.912 li
427.362 402.488 li
cp
ef
467.135 402.488 mo
511.328 402.488 li
511.328 381.912 li
467.135 381.912 li
467.135 402.488 li
cp
ef
511.329 402.488 mo
559.939 402.488 li
559.939 381.912 li
511.329 381.912 li
511.329 402.488 li
cp
ef
559.94 402.488 mo
608.552 402.488 li
608.552 381.912 li
559.94 381.912 li
559.94 402.488 li
cp
ef
374.34 423.064 mo
427.37 423.064 li
427.37 402.488 li
374.34 402.488 li
374.34 423.064 li
cp
ef
427.362 423.064 mo
467.135 423.064 li
467.135 402.488 li
427.362 402.488 li
427.362 423.064 li
cp
ef
467.135 423.064 mo
511.328 423.064 li
511.328 402.488 li
467.135 402.488 li
467.135 423.064 li
cp
ef
511.329 423.064 mo
559.939 423.064 li
559.939 402.488 li
511.329 402.488 li
511.329 423.064 li
cp
ef
559.94 423.064 mo
608.552 423.064 li
608.552 402.488 li
559.94 402.488 li
559.94 423.064 li
cp
ef
374.34 443.641 mo
427.37 443.641 li
427.37 423.064 li
374.34 423.064 li
374.34 443.641 li
cp
ef
427.362 443.641 mo
467.135 443.641 li
467.135 423.064 li
427.362 423.064 li
427.362 443.641 li
cp
ef
467.135 443.641 mo
511.328 443.641 li
511.328 423.064 li
467.135 423.064 li
467.135 443.641 li
cp
ef
511.329 443.641 mo
559.939 443.641 li
559.939 423.064 li
511.329 423.064 li
511.329 443.641 li
cp
ef
559.94 443.641 mo
608.552 443.641 li
608.552 423.064 li
559.94 423.064 li
559.94 443.641 li
cp
ef
374.34 464.218 mo
427.37 464.218 li
427.37 443.641 li
374.34 443.641 li
374.34 464.218 li
cp
ef
427.362 464.218 mo
467.135 464.218 li
467.135 443.641 li
427.362 443.641 li
427.362 464.218 li
cp
ef
467.135 464.218 mo
511.328 464.218 li
511.328 443.641 li
467.135 443.641 li
467.135 464.218 li
cp
ef
511.329 464.218 mo
559.939 464.218 li
559.939 443.641 li
511.329 443.641 li
511.329 464.218 li
cp
ef
559.94 464.218 mo
608.552 464.218 li
608.552 443.641 li
559.94 443.641 li
559.94 464.218 li
cp
ef
374.34 484.796 mo
427.37 484.796 li
427.37 464.22 li
374.34 464.22 li
374.34 484.796 li
cp
ef
427.362 484.796 mo
467.135 484.796 li
467.135 464.22 li
427.362 464.22 li
427.362 484.796 li
cp
ef
467.135 484.796 mo
511.328 484.796 li
511.328 464.22 li
467.135 464.22 li
467.135 484.796 li
cp
ef
511.329 484.796 mo
559.939 484.796 li
559.939 464.22 li
511.329 464.22 li
511.329 484.796 li
cp
ef
559.94 484.796 mo
608.552 484.796 li
608.552 464.22 li
559.94 464.22 li
559.94 484.796 li
cp
ef
374.34 505.374 mo
427.37 505.374 li
427.37 484.796 li
374.34 484.796 li
374.34 505.374 li
cp
ef
427.362 505.374 mo
467.135 505.374 li
467.135 484.796 li
427.362 484.796 li
427.362 505.374 li
cp
ef
467.135 505.374 mo
511.328 505.374 li
511.328 484.796 li
467.135 484.796 li
467.135 505.374 li
cp
ef
511.329 505.374 mo
559.939 505.374 li
559.939 484.796 li
511.329 484.796 li
511.329 505.374 li
cp
ef
559.94 505.374 mo
608.552 505.374 li
608.552 484.796 li
559.94 484.796 li
559.94 505.374 li
cp
ef
374.34 525.95 mo
427.37 525.95 li
427.37 505.374 li
374.34 505.374 li
374.34 525.95 li
cp
ef
427.362 525.95 mo
467.135 525.95 li
467.135 505.374 li
427.362 505.374 li
427.362 525.95 li
cp
ef
467.135 525.95 mo
511.328 525.95 li
511.328 505.374 li
467.135 505.374 li
467.135 525.95 li
cp
ef
511.329 525.95 mo
559.939 525.95 li
559.939 505.374 li
511.329 505.374 li
511.329 525.95 li
cp
ef
559.94 525.95 mo
608.552 525.95 li
608.552 505.374 li
559.94 505.374 li
559.94 525.95 li
cp
ef
374.34 546.526 mo
427.37 546.526 li
427.37 525.95 li
374.34 525.95 li
374.34 546.526 li
cp
ef
427.362 546.526 mo
467.135 546.526 li
467.135 525.95 li
427.362 525.95 li
427.362 546.526 li
cp
ef
467.135 546.526 mo
511.328 546.526 li
511.328 525.95 li
467.135 525.95 li
467.135 546.526 li
cp
ef
511.329 546.526 mo
559.939 546.526 li
559.939 525.95 li
511.329 525.95 li
511.329 546.526 li
cp
ef
559.94 546.526 mo
608.552 546.526 li
608.552 525.95 li
559.94 525.95 li
559.94 546.526 li
cp
ef
gsave
87.9443 0 mo
87.9443 550.139 li
611.615 550.139 li
611.615 0 li
87.9443 0 li
cp
clp
1 lw
303.241 546.526 mo
608.942 546.526 li
303.241 157.441 mo
608.942 157.441 li
608.553 157.052 mo
608.553 546.915 li
303.631 157.052 mo
303.631 546.915 li
303.241 525.95 mo
608.942 525.95 li
303.241 505.374 mo
608.942 505.374 li
303.241 484.796 mo
608.942 484.796 li
303.241 464.218 mo
608.942 464.218 li
303.241 443.641 mo
608.942 443.641 li
303.241 423.064 mo
608.942 423.064 li
303.241 402.488 mo
608.942 402.488 li
303.241 381.912 mo
608.942 381.912 li
303.241 361.336 mo
608.942 361.336 li
303.241 340.759 mo
608.942 340.759 li
303.241 320.182 mo
608.942 320.182 li
303.241 299.606 mo
608.942 299.606 li
303.241 279.029 mo
608.942 279.029 li
303.241 258.453 mo
608.942 258.453 li
303.241 237.876 mo
608.942 237.876 li
303.241 217.3 mo
608.942 217.3 li
303.241 196.724 mo
608.942 196.724 li
303.241 177.083 mo
374.729 177.083 li
559.94 157.052 mo
559.94 546.915 li
511.329 157.052 mo
511.329 546.915 li
467.135 157.052 mo
467.135 546.915 li
427.362 157.052 mo
427.362 546.915 li
374.34 157.052 mo
374.34 546.915 li
343.404 217.3 mo
343.404 546.915 li
343.404 176.693 mo
343.404 217.3 li
0 0 0 1 cmyk
@
grestore
360.687 167.983 mo
360.684 167.574 360.788 167.25 361.003 167.011 cv
361.216 166.772 361.486 166.653 361.814 166.653 cv
362.121 166.653 362.381 166.766 362.595 166.992 cv
362.808 167.219 362.921 167.549 362.932 167.983 cv
360.687 167.983 li
360.687 167.983 li
cp
362.482 170.121 mo
362.322 170.249 362.124 170.313 361.889 170.313 cv
361.544 170.313 361.255 170.189 361.023 169.942 cv
360.792 169.694 360.671 169.348 360.66 168.902 cv
364.422 168.902 li
364.442 167.752 364.21 166.898 363.723 166.34 cv
363.233 165.783 362.567 165.504 361.723 165.504 cv
360.972 165.504 360.35 165.771 359.858 166.303 cv
359.366 166.835 359.121 167.572 359.121 168.513 cv
359.121 169.3 359.309 169.952 359.683 170.468 cv
360.156 171.113 360.886 171.435 361.873 171.435 cv
362.496 171.435 363.016 171.292 363.431 171.005 cv
363.846 170.719 364.149 170.301 364.342 169.752 cv
362.845 169.501 li
362.764 169.786 362.643 169.992 362.482 170.121 cv
362.482 170.121 li
cp
357.553 165.95 mo
357.146 165.653 356.597 165.504 355.905 165.504 cv
355.062 165.504 354.391 165.765 353.896 166.287 cv
353.401 166.809 353.153 167.539 353.153 168.475 cv
353.153 169.401 353.4 170.126 353.894 170.649 cv
354.387 171.173 355.048 171.435 355.879 171.435 cv
356.608 171.435 357.191 171.262 357.625 170.917 cv
358.06 170.572 358.354 170.06 358.508 169.383 cv
357.032 169.132 li
356.958 169.527 356.829 169.807 356.647 169.969 cv
356.466 170.13 356.232 170.211 355.947 170.211 cv
355.566 170.211 355.263 170.073 355.036 169.795 cv
354.811 169.517 354.697 169.041 354.697 168.368 cv
354.697 167.763 354.809 167.331 355.031 167.073 cv
355.254 166.814 355.553 166.685 355.926 166.685 cv
356.208 166.685 356.436 166.76 356.613 166.909 cv
356.79 167.059 356.902 167.282 356.953 167.577 cv
358.432 167.31 li
358.254 166.701 357.961 166.248 357.553 165.95 cv
357.553 165.95 li
cp
351.973 167.781 mo
351.973 167.343 351.945 167.006 351.89 166.771 cv
351.834 166.535 351.736 166.325 351.596 166.14 cv
351.456 165.955 351.248 165.803 350.974 165.684 cv
350.699 165.564 350.396 165.504 350.065 165.504 cv
349.313 165.504 348.69 165.825 348.195 166.466 cv
348.195 165.633 li
346.8 165.633 li
346.8 171.307 li
348.302 171.307 li
348.302 168.737 li
348.302 168.103 348.34 167.668 348.416 167.433 cv
348.493 167.198 348.636 167.009 348.842 166.867 cv
349.048 166.725 349.281 166.653 349.541 166.653 cv
349.744 166.653 349.919 166.703 350.063 166.802 cv
350.206 166.903 350.311 167.042 350.376 167.222 cv
350.439 167.402 350.472 167.799 350.472 168.411 cv
350.472 171.307 li
351.973 171.307 li
351.973 167.781 li
351.973 167.781 li
cp
341.863 167.983 mo
341.859 167.574 341.965 167.25 342.179 167.011 cv
342.393 166.772 342.663 166.653 342.99 166.653 cv
343.296 166.653 343.558 166.766 343.771 166.992 cv
343.985 167.219 344.097 167.549 344.107 167.983 cv
341.863 167.983 li
341.863 167.983 li
cp
343.659 170.121 mo
343.498 170.249 343.302 170.313 343.065 170.313 cv
342.72 170.313 342.433 170.189 342.2 169.942 cv
341.968 169.694 341.848 169.348 341.837 168.902 cv
345.599 168.902 li
345.619 167.752 345.387 166.898 344.897 166.34 cv
344.41 165.783 343.744 165.504 342.9 165.504 cv
342.149 165.504 341.527 165.771 341.035 166.303 cv
340.544 166.835 340.298 167.572 340.298 168.513 cv
340.298 169.3 340.485 169.952 340.858 170.468 cv
341.333 171.113 342.063 171.435 343.051 171.435 cv
343.673 171.435 344.191 171.292 344.607 171.005 cv
345.022 170.719 345.325 170.301 345.518 169.752 cv
344.022 169.501 li
343.941 169.786 343.818 169.992 343.659 170.121 cv
343.659 170.121 li
cp
339.193 171.307 mo
339.193 165.633 li
337.691 165.633 li
337.691 168.026 li
337.691 168.838 337.654 169.349 337.579 169.557 cv
337.504 169.766 337.364 169.94 337.162 170.081 cv
336.959 170.222 336.729 170.292 336.472 170.292 cv
336.248 170.292 336.063 170.239 335.917 170.134 cv
335.771 170.029 335.67 169.887 335.615 169.707 cv
335.56 169.527 335.531 169.038 335.531 168.24 cv
335.531 165.633 li
334.03 165.633 li
334.03 169.223 li
334.03 169.758 334.098 170.176 334.234 170.479 cv
334.369 170.782 334.588 171.017 334.891 171.184 cv
335.193 171.352 335.535 171.435 335.917 171.435 cv
336.291 171.435 336.646 171.348 336.982 171.173 cv
337.319 170.999 337.592 170.76 337.798 170.458 cv
337.798 171.307 li
339.193 171.307 li
339.193 171.307 li
cp
330.756 169.784 mo
330.496 170.094 330.193 170.249 329.848 170.249 cv
329.502 170.249 329.211 170.111 328.977 169.835 cv
328.74 169.559 328.623 169.109 328.623 168.486 cv
328.623 167.859 328.746 167.401 328.99 167.112 cv
329.234 166.824 329.537 166.68 329.9 166.68 cv
330.258 166.68 330.554 166.821 330.79 167.104 cv
331.027 167.388 331.146 167.82 331.146 168.4 cv
331.146 169.013 331.015 169.474 330.756 169.784 cv
330.756 169.784 li
cp
332.599 173.465 mo
332.599 165.633 li
331.215 165.633 li
331.215 166.471 li
331.001 166.147 330.756 165.905 330.48 165.745 cv
330.204 165.584 329.877 165.504 329.5 165.504 cv
328.816 165.504 328.242 165.76 327.781 166.271 cv
327.32 166.782 327.091 167.494 327.091 168.405 cv
327.091 169.375 327.336 170.142 327.828 170.708 cv
328.244 171.193 328.774 171.435 329.42 171.435 cv
329.758 171.435 330.074 171.361 330.365 171.213 cv
330.658 171.065 330.901 170.865 331.097 170.612 cv
331.097 173.465 li
332.599 173.465 li
332.599 173.465 li
cp
322.441 167.983 mo
322.438 167.574 322.543 167.25 322.757 167.011 cv
322.971 166.772 323.242 166.653 323.57 166.653 cv
323.875 166.653 324.135 166.766 324.35 166.992 cv
324.563 167.219 324.676 167.549 324.686 167.983 cv
322.441 167.983 li
322.441 167.983 li
cp
324.236 170.121 mo
324.076 170.249 323.879 170.313 323.644 170.313 cv
323.299 170.313 323.01 170.189 322.778 169.942 cv
322.547 169.694 322.426 169.348 322.414 168.902 cv
326.178 168.902 li
326.199 167.752 325.965 166.898 325.477 166.34 cv
324.988 165.783 324.323 165.504 323.479 165.504 cv
322.727 165.504 322.105 165.771 321.613 166.303 cv
321.122 166.835 320.876 167.572 320.876 168.513 cv
320.876 169.3 321.063 169.952 321.437 170.468 cv
321.911 171.113 322.641 171.435 323.628 171.435 cv
324.252 171.435 324.771 171.292 325.186 171.005 cv
325.6 170.719 325.904 170.301 326.097 169.752 cv
324.6 169.501 li
324.519 169.786 324.398 169.992 324.236 170.121 cv
324.236 170.121 li
cp
314.588 170.759 mo
315.117 171.217 315.879 171.446 316.869 171.446 cv
317.549 171.446 318.117 171.351 318.574 171.16 cv
319.029 170.97 319.382 170.678 319.631 170.287 cv
319.881 169.895 320.006 169.474 320.006 169.025 cv
320.006 168.53 319.9 168.114 319.693 167.778 cv
319.484 167.441 319.195 167.176 318.828 166.981 cv
318.459 166.788 317.891 166.6 317.12 166.418 cv
316.351 166.236 315.867 166.062 315.667 165.895 cv
315.51 165.763 315.432 165.604 315.432 165.419 cv
315.432 165.216 315.516 165.054 315.682 164.933 cv
315.943 164.744 316.303 164.649 316.762 164.649 cv
317.208 164.649 317.541 164.737 317.764 164.914 cv
317.986 165.09 318.132 165.379 318.199 165.782 cv
319.781 165.712 li
319.756 164.993 319.494 164.418 318.998 163.987 cv
318.502 163.556 317.762 163.34 316.779 163.34 cv
316.176 163.34 315.663 163.431 315.236 163.613 cv
314.811 163.794 314.485 164.059 314.26 164.406 cv
314.033 164.753 313.92 165.127 313.92 165.525 cv
313.92 166.146 314.16 166.67 314.642 167.102 cv
314.982 167.408 315.578 167.667 316.426 167.876 cv
317.084 168.04 317.506 168.154 317.691 168.218 cv
317.963 168.315 318.152 168.428 318.262 168.558 cv
318.369 168.688 318.424 168.846 318.424 169.031 cv
318.424 169.319 318.295 169.571 318.036 169.787 cv
317.779 170.002 317.395 170.11 316.885 170.11 cv
316.404 170.11 316.021 169.989 315.738 169.747 cv
315.455 169.505 315.268 169.125 315.176 168.609 cv
313.637 168.758 li
313.74 169.635 314.057 170.301 314.588 170.759 cv
314.588 170.759 li
cp
0 0 0 1 cmyk
f
391.94 181.151 mo
391.94 177.72 li
395.045 177.72 li
395.045 181.151 li
396.629 181.151 li
396.629 173.304 li
395.045 173.304 li
395.045 176.393 li
391.94 176.393 li
391.94 173.304 li
390.357 173.304 li
390.357 181.151 li
391.94 181.151 li
391.94 181.151 li
cp
383.591 180.602 mo
384.123 181.061 384.884 181.29 385.877 181.29 cv
386.558 181.29 387.127 181.194 387.584 181.004 cv
388.041 180.813 388.394 180.521 388.644 180.128 cv
388.893 179.736 389.019 179.315 389.019 178.865 cv
389.019 178.37 388.913 177.953 388.705 177.616 cv
388.496 177.278 388.207 177.013 387.838 176.818 cv
387.469 176.624 386.899 176.436 386.128 176.253 cv
385.357 176.072 384.872 175.896 384.672 175.729 cv
384.516 175.597 384.437 175.438 384.437 175.252 cv
384.437 175.049 384.521 174.887 384.688 174.766 cv
384.949 174.577 385.309 174.482 385.77 174.482 cv
386.216 174.482 386.551 174.57 386.773 174.747 cv
386.996 174.923 387.142 175.213 387.209 175.616 cv
388.793 175.547 li
388.769 174.827 388.508 174.25 388.01 173.818 cv
387.512 173.386 386.771 173.171 385.785 173.171 cv
385.183 173.171 384.668 173.262 384.241 173.443 cv
383.815 173.625 383.488 173.891 383.262 174.238 cv
383.035 174.586 382.922 174.96 382.922 175.36 cv
382.922 175.98 383.163 176.507 383.644 176.938 cv
383.987 177.246 384.583 177.504 385.433 177.715 cv
386.092 177.879 386.516 177.993 386.701 178.058 cv
386.973 178.153 387.162 178.267 387.271 178.397 cv
387.38 178.527 387.435 178.686 387.435 178.871 cv
387.435 179.16 387.305 179.412 387.046 179.628 cv
386.787 179.844 386.402 179.952 385.893 179.952 cv
385.411 179.952 385.027 179.831 384.744 179.588 cv
384.461 179.346 384.271 178.965 384.18 178.448 cv
382.638 178.598 li
382.741 179.476 383.06 180.144 383.591 180.602 cv
383.591 180.602 li
cp
f
408.115 174.632 mo
408.686 174.632 409.065 174.65 409.256 174.686 cv
409.512 174.732 409.724 174.848 409.892 175.033 cv
410.06 175.219 410.144 175.455 410.144 175.74 cv
410.144 175.972 410.084 176.175 409.964 176.35 cv
409.845 176.525 409.679 176.653 409.469 176.735 cv
409.258 176.817 408.841 176.858 408.217 176.858 cv
407.35 176.858 li
407.35 174.632 li
408.115 174.632 li
408.115 174.632 li
cp
407.35 181.151 mo
407.35 178.191 li
408.383 178.191 li
409.101 178.191 409.646 178.153 410.025 178.079 cv
410.304 178.018 410.578 177.894 410.848 177.707 cv
411.117 177.52 411.339 177.262 411.514 176.934 cv
411.688 176.605 411.776 176.2 411.776 175.719 cv
411.776 175.094 411.624 174.584 411.321 174.19 cv
411.018 173.796 410.641 173.54 410.191 173.422 cv
409.899 173.344 409.271 173.304 408.308 173.304 cv
405.766 173.304 li
405.766 181.151 li
407.35 181.151 li
407.35 181.151 li
cp
400.207 178.046 mo
401.267 175.135 li
402.348 178.046 li
400.207 178.046 li
400.207 178.046 li
cp
402.122 173.304 mo
400.447 173.304 li
397.391 181.151 li
399.072 181.151 li
399.72 179.368 li
402.856 179.368 li
403.542 181.151 li
405.265 181.151 li
402.122 173.304 li
402.122 173.304 li
cp
f
419.043 181.151 mo
419.043 179.829 li
414.659 179.829 li
414.659 177.693 li
418.599 177.693 li
418.599 176.371 li
414.659 176.371 li
414.659 174.632 li
418.893 174.632 li
418.893 173.304 li
413.075 173.304 li
413.075 181.151 li
419.043 181.151 li
419.043 181.151 li
cp
f
445.196 181.151 mo
445.196 174.975 li
446.747 181.151 li
448.272 181.151 li
449.831 174.975 li
449.831 181.151 li
451.303 181.151 li
451.303 173.304 li
448.926 173.304 li
447.519 178.657 li
446.095 173.304 li
443.724 173.304 li
443.724 181.151 li
445.196 181.151 li
445.196 181.151 li
cp
438.175 174.632 mo
438.82 174.632 439.255 174.657 439.475 174.707 cv
439.771 174.771 440.017 174.894 440.209 175.076 cv
440.401 175.258 440.551 175.511 440.657 175.836 cv
440.766 176.161 440.819 176.626 440.819 177.233 cv
440.819 177.84 440.766 178.318 440.657 178.67 cv
440.551 179.022 440.412 179.274 440.244 179.428 cv
440.074 179.581 439.86 179.69 439.604 179.754 cv
439.407 179.804 439.088 179.829 438.646 179.829 cv
437.463 179.829 li
437.463 174.632 li
438.175 174.632 li
438.175 174.632 li
cp
435.879 181.151 mo
438.86 181.151 li
439.445 181.151 439.912 181.096 440.262 180.985 cv
440.729 180.835 441.101 180.626 441.376 180.359 cv
441.739 180.005 442.02 179.543 442.216 178.973 cv
442.377 178.505 442.456 177.948 442.456 177.303 cv
442.456 176.567 442.371 175.949 442.2 175.448 cv
442.028 174.946 441.778 174.523 441.45 174.177 cv
441.122 173.831 440.728 173.59 440.267 173.454 cv
439.925 173.354 439.427 173.304 438.773 173.304 cv
435.879 173.304 li
435.879 181.151 li
435.879 181.151 li
cp
f
453.546 180.602 mo
454.079 181.061 454.84 181.29 455.832 181.29 cv
456.514 181.29 457.082 181.194 457.539 181.004 cv
457.996 180.813 458.349 180.521 458.599 180.128 cv
458.848 179.736 458.974 179.315 458.974 178.865 cv
458.974 178.37 458.869 177.953 458.66 177.616 cv
458.452 177.278 458.163 177.013 457.793 176.818 cv
457.425 176.624 456.854 176.436 456.083 176.253 cv
455.313 176.072 454.827 175.896 454.628 175.729 cv
454.47 175.597 454.392 175.438 454.392 175.252 cv
454.392 175.049 454.476 174.887 454.644 174.766 cv
454.904 174.577 455.264 174.482 455.725 174.482 cv
456.171 174.482 456.506 174.57 456.729 174.747 cv
456.951 174.923 457.097 175.213 457.164 175.616 cv
458.748 175.547 li
458.724 174.827 458.463 174.25 457.964 173.818 cv
457.467 173.386 456.726 173.171 455.74 173.171 cv
455.138 173.171 454.623 173.262 454.196 173.443 cv
453.77 173.625 453.443 173.891 453.217 174.238 cv
452.99 174.586 452.878 174.96 452.878 175.36 cv
452.878 175.98 453.117 176.507 453.6 176.938 cv
453.941 177.246 454.538 177.504 455.388 177.715 cv
456.047 177.879 456.471 177.993 456.656 178.058 cv
456.927 178.153 457.117 178.267 457.227 178.397 cv
457.335 178.527 457.39 178.686 457.39 178.871 cv
457.39 179.16 457.26 179.412 457.001 179.628 cv
456.742 179.844 456.357 179.952 455.848 179.952 cv
455.366 179.952 454.983 179.831 454.699 179.588 cv
454.416 179.346 454.228 178.965 454.135 178.448 cv
452.594 178.598 li
452.696 179.476 453.014 180.144 453.546 180.602 cv
453.546 180.602 li
cp
f
483.597 181.151 mo
483.597 174.975 li
485.15 181.151 li
486.675 181.151 li
488.232 174.975 li
488.232 181.151 li
489.704 181.151 li
489.704 173.304 li
487.328 173.304 li
485.92 178.657 li
484.496 173.304 li
482.126 173.304 li
482.126 181.151 li
483.597 181.151 li
483.597 181.151 li
cp
478.653 179.529 mo
478.35 179.796 477.987 179.931 477.566 179.931 cv
476.996 179.931 476.532 179.72 476.175 179.299 cv
475.817 178.878 475.64 178.172 475.64 177.18 cv
475.64 176.245 475.82 175.569 476.183 175.151 cv
476.545 174.733 477.018 174.524 477.599 174.524 cv
478.019 174.524 478.377 174.643 478.672 174.878 cv
478.966 175.113 479.159 175.435 479.252 175.841 cv
480.82 175.466 li
480.643 174.838 480.375 174.357 480.019 174.021 cv
479.419 173.454 478.639 173.171 477.68 173.171 cv
476.58 173.171 475.693 173.532 475.019 174.254 cv
474.345 174.977 474.007 175.991 474.007 177.297 cv
474.007 178.532 474.342 179.505 475.014 180.217 cv
475.684 180.929 476.54 181.285 477.582 181.285 cv
478.424 181.285 479.119 181.077 479.667 180.661 cv
480.215 180.246 480.606 179.609 480.842 178.753 cv
479.306 178.266 li
479.174 178.84 478.956 179.262 478.653 179.529 cv
478.653 179.529 li
cp
f
502.608 181.151 mo
502.608 174.632 li
504.932 174.632 li
504.932 173.304 li
498.695 173.304 li
498.695 174.632 li
501.024 174.632 li
501.024 181.151 li
502.608 181.151 li
502.608 181.151 li
cp
495.764 179.529 mo
495.461 179.796 495.099 179.931 494.678 179.931 cv
494.106 179.931 493.643 179.72 493.286 179.299 cv
492.93 178.878 492.75 178.172 492.75 177.18 cv
492.75 176.245 492.932 175.569 493.294 175.151 cv
493.656 174.733 494.128 174.524 494.71 174.524 cv
495.131 174.524 495.488 174.643 495.783 174.878 cv
496.077 175.113 496.271 175.435 496.363 175.841 cv
497.932 175.466 li
497.754 174.838 497.485 174.357 497.128 174.021 cv
496.529 173.454 495.75 173.171 494.79 173.171 cv
493.691 173.171 492.804 173.532 492.131 174.254 cv
491.456 174.977 491.119 175.991 491.119 177.297 cv
491.119 178.532 491.453 179.505 492.125 180.217 cv
492.796 180.929 493.651 181.285 494.693 181.285 cv
495.535 181.285 496.23 181.077 496.778 180.661 cv
497.326 180.246 497.718 179.609 497.953 178.753 cv
496.416 178.266 li
496.285 178.84 496.067 179.262 495.764 179.529 cv
495.764 179.529 li
cp
f
523.478 177.618 mo
523.478 177.18 523.449 176.842 523.395 176.607 cv
523.339 176.371 523.241 176.161 523.1 175.975 cv
522.959 175.79 522.751 175.637 522.476 175.518 cv
522.201 175.398 521.898 175.338 521.567 175.338 cv
520.813 175.338 520.189 175.66 519.693 176.302 cv
519.693 175.466 li
518.296 175.466 li
518.296 181.151 li
519.801 181.151 li
519.801 178.576 li
519.801 177.941 519.838 177.506 519.915 177.271 cv
519.992 177.035 520.134 176.846 520.34 176.703 cv
520.547 176.561 520.781 176.489 521.042 176.489 cv
521.246 176.489 521.419 176.539 521.563 176.639 cv
521.708 176.739 521.813 176.879 521.877 177.059 cv
521.94 177.239 521.974 177.636 521.974 178.25 cv
521.974 181.151 li
523.478 181.151 li
523.478 177.618 li
523.478 177.618 li
cp
f
549.455 176.915 mo
549.696 176.631 549.995 176.489 550.352 176.489 cv
550.72 176.489 551.021 176.633 551.257 176.92 cv
551.492 177.208 551.61 177.677 551.61 178.331 cv
551.61 178.916 551.488 179.355 551.246 179.65 cv
551.003 179.944 550.709 180.091 550.363 180.091 cv
549.928 180.091 549.588 179.895 549.346 179.502 cv
549.178 179.231 549.094 178.792 549.094 178.186 cv
549.094 177.622 549.215 177.198 549.455 176.915 cv
549.455 176.915 li
cp
553.108 173.304 mo
551.604 173.304 li
551.604 176.13 li
551.14 175.603 550.592 175.338 549.956 175.338 cv
549.264 175.338 548.69 175.589 548.237 176.09 cv
547.784 176.592 547.559 177.324 547.559 178.287 cv
547.559 179.229 547.791 179.964 548.256 180.49 cv
548.722 181.016 549.281 181.279 549.935 181.279 cv
550.255 181.279 550.574 181.2 550.89 181.041 cv
551.205 180.883 551.479 180.641 551.712 180.315 cv
551.712 181.151 li
553.108 181.151 li
553.108 173.304 li
553.108 173.304 li
cp
542.86 177.014 mo
543.128 176.714 543.458 176.564 543.851 176.564 cv
544.242 176.564 544.572 176.714 544.838 177.014 cv
545.104 177.313 545.236 177.742 545.236 178.298 cv
545.236 178.869 545.104 179.304 544.838 179.604 cv
544.572 179.904 544.242 180.054 543.851 180.054 cv
543.458 180.054 543.128 179.904 542.86 179.604 cv
542.593 179.304 542.458 178.873 542.458 178.309 cv
542.458 177.745 542.593 177.313 542.86 177.014 cv
542.86 177.014 li
cp
541.286 179.891 mo
541.533 180.346 541.893 180.691 542.365 180.926 cv
542.838 181.162 543.334 181.279 543.856 181.279 cv
544.697 181.279 545.396 180.997 545.952 180.431 cv
546.507 179.865 546.783 179.153 546.783 178.292 cv
546.783 177.44 546.508 176.734 545.959 176.176 cv
545.409 175.618 544.705 175.338 543.846 175.338 cv
543.288 175.338 542.784 175.461 542.333 175.708 cv
541.882 175.954 541.533 176.311 541.286 176.778 cv
541.04 177.246 540.917 177.729 540.917 178.229 cv
540.917 178.881 541.04 179.436 541.286 179.891 cv
541.286 179.891 li
cp
531.473 181.151 mo
532.977 181.151 li
532.977 178.39 li
532.977 177.843 533.016 177.453 533.096 177.217 cv
533.177 176.981 533.31 176.801 533.495 176.676 cv
533.68 176.552 533.89 176.489 534.121 176.489 cv
534.313 176.489 534.467 176.528 534.579 176.607 cv
534.691 176.685 534.774 176.805 534.828 176.965 cv
534.881 177.125 534.908 177.483 534.908 178.036 cv
534.908 181.151 li
536.412 181.151 li
536.412 178.421 li
536.412 177.886 536.453 177.495 536.535 177.247 cv
536.617 176.998 536.751 176.811 536.937 176.682 cv
537.122 176.553 537.32 176.489 537.531 176.489 cv
537.82 176.489 538.034 176.596 538.173 176.811 cv
538.276 176.975 538.328 177.338 538.328 177.902 cv
538.328 181.151 li
539.832 181.151 li
539.832 177.517 li
539.832 176.975 539.781 176.582 539.677 176.339 cv
539.534 176.011 539.319 175.762 539.029 175.592 cv
538.74 175.423 538.388 175.338 537.97 175.338 cv
537.642 175.338 537.333 175.413 537.043 175.563 cv
536.754 175.713 536.485 175.939 536.235 176.243 cv
536.064 175.939 535.845 175.713 535.577 175.563 cv
535.309 175.413 534.994 175.338 534.63 175.338 cv
533.944 175.338 533.354 175.64 532.858 176.243 cv
532.858 175.466 li
531.473 175.466 li
531.473 181.151 li
531.473 181.151 li
cp
526.549 177.014 mo
526.816 176.714 527.146 176.564 527.539 176.564 cv
527.932 176.564 528.261 176.714 528.527 177.014 cv
528.793 177.313 528.926 177.742 528.926 178.298 cv
528.926 178.869 528.793 179.304 528.527 179.604 cv
528.261 179.904 527.932 180.054 527.539 180.054 cv
527.146 180.054 526.816 179.904 526.549 179.604 cv
526.281 179.304 526.148 178.873 526.148 178.309 cv
526.148 177.745 526.281 177.313 526.549 177.014 cv
526.549 177.014 li
cp
524.976 179.891 mo
525.222 180.346 525.581 180.691 526.054 180.926 cv
526.526 181.162 527.024 181.279 527.544 181.279 cv
528.387 181.279 529.085 180.997 529.64 180.431 cv
530.194 179.865 530.473 179.153 530.473 178.292 cv
530.473 177.44 530.198 176.734 529.648 176.176 cv
529.1 175.618 528.394 175.338 527.534 175.338 cv
526.978 175.338 526.474 175.461 526.021 175.708 cv
525.57 175.954 525.222 176.311 524.976 176.778 cv
524.729 177.246 524.606 177.729 524.606 178.229 cv
524.606 178.881 524.729 179.436 524.976 179.891 cv
524.976 179.891 li
cp
f
597.071 174.632 mo
597.643 174.632 598.022 174.65 598.211 174.686 cv
598.468 174.732 598.681 174.848 598.849 175.033 cv
599.017 175.219 599.1 175.455 599.1 175.74 cv
599.1 175.972 599.04 176.175 598.921 176.35 cv
598.801 176.525 598.636 176.653 598.426 176.735 cv
598.215 176.817 597.798 176.858 597.173 176.858 cv
596.306 176.858 li
596.306 174.632 li
597.071 174.632 li
597.071 174.632 li
cp
596.306 181.151 mo
596.306 178.191 li
597.339 178.191 li
598.056 178.191 598.604 178.153 598.981 178.079 cv
599.261 178.018 599.534 177.894 599.804 177.707 cv
600.073 177.52 600.296 177.262 600.47 176.934 cv
600.646 176.605 600.732 176.2 600.732 175.719 cv
600.732 175.094 600.581 174.584 600.277 174.19 cv
599.974 173.796 599.598 173.54 599.147 173.422 cv
598.855 173.344 598.228 173.304 597.264 173.304 cv
594.722 173.304 li
594.722 181.151 li
596.306 181.151 li
596.306 181.151 li
cp
591.431 181.151 mo
591.431 174.632 li
593.754 174.632 li
593.754 173.304 li
587.519 173.304 li
587.519 174.632 li
589.847 174.632 li
589.847 181.151 li
591.431 181.151 li
591.431 181.151 li
cp
584.79 181.151 mo
584.79 174.632 li
587.113 174.632 li
587.113 173.304 li
580.878 173.304 li
580.878 174.632 li
583.206 174.632 li
583.206 181.151 li
584.79 181.151 li
584.79 181.151 li
cp
576.349 176.915 mo
576.589 176.631 576.889 176.489 577.245 176.489 cv
577.612 176.489 577.914 176.633 578.149 176.92 cv
578.385 177.208 578.502 177.677 578.502 178.331 cv
578.502 178.916 578.382 179.355 578.139 179.65 cv
577.896 179.944 577.602 180.091 577.256 180.091 cv
576.82 180.091 576.48 179.895 576.239 179.502 cv
576.07 179.231 575.987 178.792 575.987 178.186 cv
575.987 177.622 576.106 177.198 576.349 176.915 cv
576.349 176.915 li
cp
580.001 173.304 mo
578.497 173.304 li
578.497 176.13 li
578.034 175.603 577.484 175.338 576.849 175.338 cv
576.156 175.338 575.584 175.589 575.131 176.09 cv
574.678 176.592 574.45 177.324 574.45 178.287 cv
574.45 179.229 574.684 179.964 575.15 180.49 cv
575.615 181.016 576.174 181.279 576.827 181.279 cv
577.148 181.279 577.468 181.2 577.782 181.041 cv
578.099 180.883 578.372 180.641 578.604 180.315 cv
578.604 181.151 li
580.001 181.151 li
580.001 173.304 li
580.001 173.304 li
cp
569.708 176.915 mo
569.947 176.631 570.247 176.489 570.604 176.489 cv
570.971 176.489 571.273 176.633 571.509 176.92 cv
571.743 177.208 571.861 177.677 571.861 178.331 cv
571.861 178.916 571.74 179.355 571.498 179.65 cv
571.255 179.944 570.96 180.091 570.614 180.091 cv
570.18 180.091 569.84 179.895 569.598 179.502 cv
569.43 179.231 569.347 178.792 569.347 178.186 cv
569.347 177.622 569.466 177.198 569.708 176.915 cv
569.708 176.915 li
cp
573.359 173.304 mo
571.856 173.304 li
571.856 176.13 li
571.393 175.603 570.843 175.338 570.208 175.338 cv
569.516 175.338 568.942 175.589 568.49 176.09 cv
568.036 176.592 567.81 177.324 567.81 178.287 cv
567.81 179.229 568.043 179.964 568.509 180.49 cv
568.974 181.016 569.533 181.279 570.187 181.279 cv
570.508 181.279 570.825 181.2 571.142 181.041 cv
571.457 180.883 571.731 180.641 571.964 180.315 cv
571.964 181.151 li
573.359 181.151 li
573.359 173.304 li
573.359 173.304 li
cp
f
332.733 190.41 mo
332.733 187.871 li
332.733 187.524 332.779 187.205 332.87 186.912 cv
332.932 186.721 333.033 186.57 333.177 186.462 cv
333.319 186.354 333.48 186.3 333.661 186.3 cv
333.861 186.3 334.063 186.36 334.264 186.479 cv
334.547 185.716 li
334.261 185.539 333.979 185.451 333.702 185.451 cv
333.51 185.451 333.334 185.505 333.174 185.615 cv
333.015 185.725 332.841 185.952 332.651 186.296 cv
332.651 185.56 li
331.912 185.56 li
331.912 190.41 li
332.733 190.41 li
332.733 190.41 li
cp
327.758 186.506 mo
328.016 186.253 328.332 186.127 328.711 186.127 cv
329.127 186.127 329.467 186.285 329.729 186.602 cv
329.899 186.806 330.003 187.112 330.039 187.52 cv
327.331 187.52 li
327.358 187.097 327.501 186.758 327.758 186.506 cv
327.758 186.506 li
cp
329.523 189.606 mo
329.311 189.765 329.053 189.844 328.752 189.844 cv
328.347 189.844 328.009 189.703 327.737 189.419 cv
327.467 189.136 327.316 188.729 327.285 188.195 cv
330.902 188.195 li
330.905 188.098 330.906 188.025 330.906 187.976 cv
330.906 187.175 330.701 186.555 330.291 186.113 cv
329.879 185.671 329.35 185.451 328.701 185.451 cv
328.031 185.451 327.486 185.676 327.066 186.127 cv
326.646 186.577 326.437 187.211 326.437 188.026 cv
326.437 188.815 326.645 189.428 327.059 189.865 cv
327.475 190.301 328.037 190.52 328.747 190.52 cv
329.311 190.52 329.773 190.383 330.135 190.109 cv
330.497 189.835 330.746 189.45 330.879 188.954 cv
330.03 188.849 li
329.904 189.195 329.736 189.448 329.523 189.606 cv
329.523 189.606 li
cp
322.414 186.579 mo
322.659 186.28 322.965 186.131 323.33 186.131 cv
323.705 186.131 324.02 186.287 324.275 186.597 cv
324.531 186.908 324.66 187.395 324.66 188.059 cv
324.66 188.661 324.533 189.109 324.281 189.403 cv
324.031 189.697 323.727 189.844 323.367 189.844 cv
323.011 189.844 322.701 189.69 322.439 189.383 cv
322.178 189.075 322.047 188.611 322.047 187.99 cv
322.047 187.348 322.168 186.877 322.414 186.579 cv
322.414 186.579 li
cp
325.408 190.41 mo
325.408 183.715 li
324.591 183.715 li
324.591 186.118 li
324.447 185.92 324.262 185.759 324.034 185.636 cv
323.806 185.513 323.545 185.451 323.252 185.451 cv
322.854 185.451 322.493 185.556 322.17 185.766 cv
321.848 185.976 321.605 186.278 321.444 186.672 cv
321.283 187.066 321.203 187.506 321.203 187.99 cv
321.203 188.486 321.291 188.926 321.469 189.308 cv
321.646 189.689 321.898 189.987 322.223 190.201 cv
322.547 190.414 322.902 190.52 323.289 190.52 cv
323.887 190.52 324.338 190.279 324.646 189.798 cv
324.646 190.41 li
325.408 190.41 li
325.408 190.41 li
cp
319.188 190.41 mo
319.188 187.871 li
319.188 187.524 319.232 187.205 319.324 186.912 cv
319.385 186.721 319.487 186.57 319.63 186.462 cv
319.773 186.354 319.936 186.3 320.114 186.3 cv
320.315 186.3 320.517 186.36 320.717 186.479 cv
321 185.716 li
320.714 185.539 320.433 185.451 320.156 185.451 cv
319.964 185.451 319.788 185.505 319.629 185.615 cv
319.469 185.725 319.294 185.952 319.105 186.296 cv
319.105 185.56 li
318.365 185.56 li
318.365 190.41 li
319.188 190.41 li
319.188 190.41 li
cp
314.109 186.593 mo
314.38 186.285 314.721 186.131 315.133 186.131 cv
315.537 186.131 315.875 186.286 316.148 186.595 cv
316.42 186.904 316.557 187.358 316.557 187.958 cv
316.557 188.595 316.422 189.068 316.15 189.378 cv
315.88 189.689 315.54 189.844 315.133 189.844 cv
314.721 189.844 314.38 189.689 314.109 189.381 cv
313.838 189.072 313.703 188.606 313.703 187.985 cv
313.703 187.364 313.838 186.9 314.109 186.593 cv
314.109 186.593 li
cp
313.486 189.867 mo
313.904 190.302 314.453 190.52 315.133 190.52 cv
315.555 190.52 315.945 190.421 316.304 190.224 cv
316.662 190.025 316.934 189.748 317.121 189.39 cv
317.309 189.032 317.401 188.541 317.401 187.917 cv
317.401 187.146 317.19 186.543 316.768 186.106 cv
316.344 185.669 315.799 185.451 315.133 185.451 cv
314.533 185.451 314.024 185.63 313.606 185.99 cv
313.107 186.422 312.857 187.087 312.857 187.985 cv
312.857 188.804 313.067 189.432 313.486 189.867 cv
313.486 189.867 li
cp
f
362.26 189.707 mo
362.139 189.707 362.044 189.687 361.979 189.648 cv
361.913 189.608 361.866 189.555 361.838 189.488 cv
361.809 189.421 361.794 189.271 361.794 189.036 cv
361.794 186.2 li
362.621 186.2 li
362.621 185.56 li
361.794 185.56 li
361.794 183.866 li
360.977 184.359 li
360.977 185.56 li
360.374 185.56 li
360.374 186.2 li
360.977 186.2 li
360.977 188.99 li
360.977 189.483 361.011 189.807 361.077 189.96 cv
361.144 190.115 361.26 190.238 361.424 190.333 cv
361.589 190.427 361.82 190.474 362.118 190.474 cv
362.301 190.474 362.508 190.45 362.739 190.401 cv
362.621 189.675 li
362.472 189.696 362.351 189.707 362.26 189.707 cv
362.26 189.707 li
362.26 189.707 li
cp
356.408 190.41 mo
356.408 187.762 li
356.408 187.141 356.536 186.719 356.791 186.497 cv
357.045 186.274 357.347 186.163 357.697 186.163 cv
357.916 186.163 358.107 186.213 358.271 186.312 cv
358.433 186.411 358.547 186.543 358.61 186.709 cv
358.675 186.875 358.706 187.125 358.706 187.46 cv
358.706 190.41 li
359.528 190.41 li
359.528 187.428 li
359.528 187.048 359.513 186.781 359.482 186.629 cv
359.434 186.395 359.349 186.192 359.227 186.021 cv
359.104 185.851 358.921 185.713 358.676 185.608 cv
358.432 185.503 358.163 185.451 357.87 185.451 cv
357.197 185.451 356.683 185.717 356.326 186.25 cv
356.326 185.56 li
355.587 185.56 li
355.587 190.41 li
356.408 190.41 li
356.408 190.41 li
cp
f
321.4 203.622 mo
321.3 203.658 321.232 203.692 321.201 203.725 cv
321.159 203.777 321.141 203.834 321.141 203.895 cv
321.141 203.964 321.166 204.023 321.216 204.074 cv
321.267 204.125 321.322 204.149 321.384 204.149 cv
321.42 204.149 321.478 204.138 321.559 204.113 cv
323.224 203.591 li
323.224 210.103 li
321.475 210.103 li
321.354 210.103 321.266 210.126 321.213 210.172 cv
321.159 210.219 321.134 210.281 321.134 210.358 cv
321.134 210.431 321.159 210.492 321.213 210.54 cv
321.266 210.588 321.354 210.613 321.475 210.613 cv
325.482 210.613 li
325.605 210.613 325.691 210.588 325.744 210.54 cv
325.797 210.492 325.822 210.431 325.822 210.358 cv
325.822 210.281 325.797 210.219 325.744 210.172 cv
325.691 210.126 325.605 210.103 325.482 210.103 cv
323.733 210.103 li
323.733 202.887 li
321.4 203.622 li
321.4 203.622 li
cp
f
362.027 207.955 mo
362.068 207.941 362.104 207.912 362.137 207.867 cv
362.169 207.823 362.186 207.774 362.186 207.721 cv
362.186 207.645 362.159 207.583 362.105 207.536 cv
362.054 207.49 361.967 207.466 361.845 207.466 cv
359.392 207.46 li
359.271 207.46 359.183 207.484 359.13 207.533 cv
359.077 207.582 359.051 207.645 359.051 207.721 cv
359.051 207.799 359.077 207.86 359.13 207.907 cv
359.183 207.953 359.271 207.977 359.392 207.977 cv
361.146 207.977 li
361.146 209.866 li
360.794 210.028 360.486 210.141 360.223 210.206 cv
359.96 210.271 359.675 210.303 359.366 210.303 cv
358.455 210.303 357.741 210.054 357.223 209.556 cv
356.704 209.058 356.445 208.385 356.445 207.54 cv
356.445 206.61 li
356.445 206.132 356.554 205.705 356.773 205.328 cv
357.102 204.753 357.455 204.364 357.833 204.159 cv
358.212 203.955 358.637 203.853 359.105 203.853 cv
359.604 203.853 360.065 203.962 360.487 204.181 cv
360.91 204.399 361.134 204.681 361.158 205.025 cv
361.162 205.142 361.188 205.224 361.234 205.271 cv
361.281 205.317 361.339 205.341 361.407 205.341 cv
361.48 205.341 361.541 205.315 361.59 205.264 cv
361.639 205.214 361.663 205.126 361.663 205 cv
361.663 203.847 li
361.663 203.725 361.639 203.638 361.59 203.585 cv
361.541 203.533 361.48 203.506 361.407 203.506 cv
361.351 203.506 361.3 203.521 361.256 203.552 cv
361.211 203.582 361.183 203.617 361.167 203.658 cv
361.154 203.699 361.146 203.818 361.146 204.017 cv
360.579 203.567 359.885 203.342 359.063 203.342 cv
358.496 203.342 357.972 203.482 357.49 203.761 cv
357.009 204.041 356.628 204.445 356.352 204.973 cv
356.074 205.501 355.936 206.045 355.936 206.604 cv
355.936 207.54 li
355.936 208.094 356.015 208.552 356.175 208.912 cv
356.336 209.272 356.559 209.599 356.846 209.89 cv
357.134 210.182 357.485 210.408 357.9 210.57 cv
358.314 210.732 358.796 210.813 359.343 210.813 cv
359.728 210.813 360.112 210.759 360.499 210.649 cv
360.886 210.54 361.274 210.378 361.663 210.164 cv
361.663 207.977 li
361.866 207.977 361.986 207.97 362.027 207.955 cv
362.027 207.955 li
cp
f
398.819 203.622 mo
398.719 203.658 398.651 203.692 398.619 203.725 cv
398.579 203.777 398.559 203.834 398.559 203.895 cv
398.559 203.964 398.584 204.023 398.635 204.074 cv
398.685 204.125 398.74 204.149 398.802 204.149 cv
398.838 204.149 398.896 204.138 398.979 204.113 cv
400.642 203.591 li
400.642 210.103 li
398.893 210.103 li
398.771 210.103 398.685 210.126 398.632 210.172 cv
398.579 210.219 398.553 210.281 398.553 210.358 cv
398.553 210.431 398.579 210.492 398.632 210.54 cv
398.685 210.588 398.771 210.613 398.893 210.613 cv
402.902 210.613 li
403.023 210.613 403.11 210.588 403.163 210.54 cv
403.215 210.492 403.242 210.431 403.242 210.358 cv
403.242 210.281 403.215 210.219 403.163 210.172 cv
403.11 210.126 403.023 210.103 402.902 210.103 cv
401.152 210.103 li
401.152 202.887 li
398.819 203.622 li
398.819 203.622 li
cp
f
449.122 207.363 mo
449.122 208.141 448.96 208.822 448.637 209.407 cv
448.313 209.992 447.867 210.285 447.3 210.285 cv
447.009 210.285 446.747 210.212 446.517 210.066 cv
446.354 209.965 446.225 209.845 446.128 209.708 cv
445.953 209.461 445.798 209.128 445.663 208.711 cv
445.527 208.294 445.46 207.845 445.46 207.363 cv
445.46 206.239 li
445.46 205.462 445.622 204.782 445.945 204.199 cv
446.27 203.616 446.717 203.324 447.288 203.324 cv
447.575 203.324 447.835 203.395 448.064 203.537 cv
448.228 203.638 448.359 203.759 448.46 203.901 cv
448.63 204.148 448.782 204.479 448.919 204.895 cv
449.055 205.309 449.122 205.758 449.122 206.239 cv
449.122 207.363 li
449.122 207.363 li
cp
449.499 204.945 mo
449.434 204.703 449.332 204.434 449.195 204.138 cv
449.058 203.842 448.928 203.626 448.807 203.488 cv
448.62 203.273 448.396 203.106 448.132 202.987 cv
447.869 202.867 447.586 202.808 447.281 202.808 cv
446.658 202.808 446.142 203.059 445.733 203.561 cv
445.211 204.201 444.949 205.071 444.949 206.173 cv
444.949 207.436 li
444.949 207.902 444.996 208.309 445.089 208.657 cv
445.15 208.904 445.251 209.175 445.39 209.471 cv
445.53 209.767 445.658 209.981 445.775 210.114 cv
445.962 210.329 446.188 210.497 446.453 210.616 cv
446.718 210.735 447 210.795 447.3 210.795 cv
447.924 210.795 448.439 210.544 448.849 210.042 cv
449.371 209.402 449.632 208.533 449.632 207.436 cv
449.632 206.173 li
449.632 205.703 449.588 205.294 449.499 204.945 cv
449.499 204.945 li
449.499 204.945 li
cp
f
487.245 203.622 mo
487.144 203.658 487.076 203.692 487.045 203.725 cv
487.003 203.777 486.983 203.834 486.983 203.895 cv
486.983 203.964 487.008 204.023 487.06 204.074 cv
487.109 204.125 487.165 204.149 487.227 204.149 cv
487.262 204.149 487.321 204.138 487.402 204.113 cv
489.066 203.591 li
489.066 210.103 li
487.317 210.103 li
487.195 210.103 487.108 210.126 487.057 210.172 cv
487.003 210.219 486.978 210.281 486.978 210.358 cv
486.978 210.431 487.003 210.492 487.057 210.54 cv
487.108 210.588 487.195 210.613 487.317 210.613 cv
491.326 210.613 li
491.447 210.613 491.534 210.588 491.587 210.54 cv
491.64 210.492 491.666 210.431 491.666 210.358 cv
491.666 210.281 491.64 210.219 491.587 210.172 cv
491.534 210.126 491.447 210.103 491.326 210.103 cv
489.576 210.103 li
489.576 202.887 li
487.245 203.622 li
487.245 203.622 li
cp
f
537.531 207.363 mo
537.531 208.141 537.369 208.822 537.045 209.407 cv
536.721 209.992 536.275 210.285 535.708 210.285 cv
535.417 210.285 535.156 210.212 534.925 210.066 cv
534.764 209.965 534.634 209.845 534.536 209.708 cv
534.362 209.461 534.207 209.128 534.072 208.711 cv
533.936 208.294 533.868 207.845 533.868 207.363 cv
533.868 206.239 li
533.868 205.462 534.03 204.782 534.354 204.199 cv
534.678 203.616 535.125 203.324 535.697 203.324 cv
535.984 203.324 536.242 203.395 536.475 203.537 cv
536.636 203.638 536.768 203.759 536.869 203.901 cv
537.039 204.148 537.192 204.479 537.327 204.895 cv
537.463 205.309 537.531 205.758 537.531 206.239 cv
537.531 207.363 li
537.531 207.363 li
cp
537.908 204.945 mo
537.843 204.703 537.742 204.434 537.604 204.138 cv
537.466 203.842 537.337 203.626 537.215 203.488 cv
537.028 203.273 536.804 203.106 536.541 202.987 cv
536.278 202.867 535.994 202.808 535.69 202.808 cv
535.067 202.808 534.552 203.059 534.141 203.561 cv
533.619 204.201 533.358 205.071 533.358 206.173 cv
533.358 207.436 li
533.358 207.902 533.404 208.309 533.497 208.657 cv
533.559 208.904 533.659 209.175 533.799 209.471 cv
533.938 209.767 534.067 209.981 534.185 210.114 cv
534.37 210.329 534.597 210.497 534.861 210.616 cv
535.126 210.735 535.408 210.795 535.708 210.795 cv
536.332 210.795 536.849 210.544 537.258 210.042 cv
537.78 209.402 538.042 208.533 538.042 207.436 cv
538.042 206.173 li
538.042 205.703 537.997 205.294 537.908 204.945 cv
537.908 204.945 li
537.908 204.945 li
cp
f
586.144 207.363 mo
586.144 208.141 585.98 208.822 585.657 209.407 cv
585.332 209.992 584.888 210.285 584.321 210.285 cv
584.029 210.285 583.768 210.212 583.537 210.066 cv
583.376 209.965 583.246 209.845 583.148 209.708 cv
582.975 209.461 582.82 209.128 582.684 208.711 cv
582.548 208.294 582.48 207.845 582.48 207.363 cv
582.48 206.239 li
582.48 205.462 582.643 204.782 582.966 204.199 cv
583.29 203.616 583.737 203.324 584.309 203.324 cv
584.596 203.324 584.854 203.395 585.087 203.537 cv
585.248 203.638 585.379 203.759 585.48 203.901 cv
585.651 204.148 585.804 204.479 585.939 204.895 cv
586.075 205.309 586.144 205.758 586.144 206.239 cv
586.144 207.363 li
586.144 207.363 li
cp
586.52 204.945 mo
586.455 204.703 586.354 204.434 586.216 204.138 cv
586.078 203.842 585.949 203.626 585.827 203.488 cv
585.641 203.273 585.416 203.106 585.152 202.987 cv
584.889 202.867 584.605 202.808 584.303 202.808 cv
583.679 202.808 583.162 203.059 582.754 203.561 cv
582.23 204.201 581.97 205.071 581.97 206.173 cv
581.97 207.436 li
581.97 207.902 582.017 208.309 582.109 208.657 cv
582.17 208.904 582.271 209.175 582.41 209.471 cv
582.55 209.767 582.679 209.981 582.796 210.114 cv
582.982 210.329 583.208 210.497 583.474 210.616 cv
583.738 210.735 584.021 210.795 584.321 210.795 cv
584.943 210.795 585.461 210.544 585.869 210.042 cv
586.392 209.402 586.652 208.533 586.652 207.436 cv
586.652 206.173 li
586.652 205.703 586.608 205.294 586.52 204.945 cv
586.52 204.945 li
586.52 204.945 li
cp
f
321.287 230.643 mo
322.039 229.991 323.016 229.073 324.213 227.891 cv
324.691 227.421 325.021 227.07 325.207 226.837 cv
325.391 226.604 325.521 226.39 325.6 226.193 cv
325.675 225.997 325.714 225.781 325.714 225.547 cv
325.714 224.988 325.484 224.487 325.027 224.046 cv
324.57 223.605 324.023 223.384 323.388 223.384 cv
322.994 223.384 322.61 223.479 322.236 223.67 cv
321.861 223.86 321.568 224.121 321.355 224.453 cv
321.143 224.785 321.036 225.048 321.036 225.243 cv
321.036 225.308 321.06 225.363 321.105 225.41 cv
321.153 225.457 321.211 225.479 321.279 225.479 cv
321.344 225.479 321.4 225.459 321.449 225.419 cv
321.486 225.391 321.517 225.328 321.541 225.23 cv
321.643 224.854 321.865 224.538 322.209 224.283 cv
322.553 224.028 322.948 223.9 323.393 223.9 cv
323.891 223.9 324.316 224.068 324.669 224.404 cv
325.021 224.741 325.197 225.127 325.197 225.564 cv
325.197 225.727 325.166 225.888 325.104 226.047 cv
325.04 226.208 324.925 226.393 324.754 226.603 cv
324.584 226.814 324.27 227.144 323.813 227.593 cv
322.833 228.557 321.824 229.504 320.788 230.436 cv
320.788 231.189 li
325.719 231.189 li
325.719 230.479 li
325.719 230.357 325.695 230.27 325.646 230.217 cv
325.6 230.165 325.537 230.138 325.465 230.138 cv
325.389 230.138 325.324 230.165 325.275 230.217 cv
325.227 230.27 325.203 230.357 325.203 230.479 cv
325.203 230.679 li
321.287 230.679 li
321.287 230.643 li
321.287 230.643 li
cp
f
362.027 228.532 mo
362.068 228.518 362.104 228.488 362.137 228.444 cv
362.169 228.399 362.186 228.351 362.186 228.298 cv
362.186 228.221 362.159 228.159 362.105 228.112 cv
362.054 228.066 361.967 228.043 361.845 228.043 cv
359.392 228.037 li
359.271 228.037 359.183 228.062 359.13 228.109 cv
359.077 228.158 359.051 228.221 359.051 228.298 cv
359.051 228.375 359.077 228.437 359.13 228.483 cv
359.183 228.53 359.271 228.553 359.392 228.553 cv
361.146 228.553 li
361.146 230.442 li
360.794 230.604 360.486 230.718 360.223 230.782 cv
359.96 230.847 359.675 230.879 359.366 230.879 cv
358.455 230.879 357.741 230.63 357.223 230.132 cv
356.704 229.634 356.445 228.962 356.445 228.116 cv
356.445 227.187 li
356.445 226.708 356.554 226.281 356.773 225.905 cv
357.102 225.33 357.455 224.94 357.833 224.736 cv
358.212 224.531 358.637 224.429 359.105 224.429 cv
359.604 224.429 360.065 224.538 360.487 224.757 cv
360.91 224.976 361.134 225.257 361.158 225.601 cv
361.162 225.719 361.188 225.801 361.234 225.847 cv
361.281 225.894 361.339 225.917 361.407 225.917 cv
361.48 225.917 361.541 225.892 361.59 225.841 cv
361.639 225.791 361.663 225.702 361.663 225.577 cv
361.663 224.423 li
361.663 224.301 361.639 224.214 361.59 224.162 cv
361.541 224.109 361.48 224.083 361.407 224.083 cv
361.351 224.083 361.3 224.098 361.256 224.128 cv
361.211 224.159 361.183 224.194 361.167 224.234 cv
361.154 224.275 361.146 224.395 361.146 224.593 cv
360.579 224.143 359.885 223.918 359.063 223.918 cv
358.496 223.918 357.972 224.058 357.49 224.338 cv
357.009 224.617 356.628 225.021 356.352 225.549 cv
356.074 226.078 355.936 226.622 355.936 227.18 cv
355.936 228.116 li
355.936 228.67 356.015 229.128 356.175 229.488 cv
356.336 229.849 356.559 230.175 356.846 230.466 cv
357.134 230.758 357.485 230.985 357.9 231.146 cv
358.314 231.309 358.796 231.39 359.343 231.39 cv
359.728 231.39 360.112 231.335 360.499 231.226 cv
360.886 231.116 361.274 230.955 361.663 230.74 cv
361.663 228.553 li
361.866 228.553 361.986 228.546 362.027 228.532 cv
362.027 228.532 li
cp
f
398.819 224.213 mo
398.719 224.25 398.651 224.285 398.619 224.317 cv
398.579 224.37 398.559 224.427 398.559 224.487 cv
398.559 224.556 398.584 224.615 398.635 224.666 cv
398.685 224.717 398.74 224.742 398.802 224.742 cv
398.838 224.742 398.896 224.73 398.979 224.706 cv
400.642 224.183 li
400.642 230.694 li
398.893 230.694 li
398.771 230.694 398.685 230.718 398.632 230.765 cv
398.579 230.811 398.553 230.873 398.553 230.95 cv
398.553 231.022 398.579 231.083 398.632 231.132 cv
398.685 231.18 398.771 231.205 398.893 231.205 cv
402.902 231.205 li
403.023 231.205 403.11 231.18 403.163 231.132 cv
403.215 231.083 403.242 231.022 403.242 230.95 cv
403.242 230.873 403.215 230.811 403.163 230.765 cv
403.11 230.718 403.023 230.694 402.902 230.694 cv
401.152 230.694 li
401.152 223.479 li
398.819 224.213 li
398.819 224.213 li
cp
f
449.122 227.955 mo
449.122 228.732 448.96 229.414 448.637 229.999 cv
448.313 230.584 447.867 230.877 447.3 230.877 cv
447.009 230.877 446.747 230.804 446.517 230.658 cv
446.354 230.557 446.225 230.438 446.128 230.3 cv
445.953 230.053 445.798 229.721 445.663 229.304 cv
445.527 228.887 445.46 228.437 445.46 227.955 cv
445.46 226.832 li
445.46 226.054 445.622 225.374 445.945 224.791 cv
446.27 224.208 446.717 223.916 447.288 223.916 cv
447.575 223.916 447.835 223.987 448.064 224.129 cv
448.228 224.23 448.359 224.352 448.46 224.493 cv
448.63 224.74 448.782 225.071 448.919 225.486 cv
449.055 225.901 449.122 226.35 449.122 226.832 cv
449.122 227.955 li
449.122 227.955 li
cp
449.499 225.538 mo
449.434 225.295 449.332 225.025 449.195 224.73 cv
449.058 224.435 448.928 224.218 448.807 224.08 cv
448.62 223.865 448.396 223.698 448.132 223.579 cv
447.869 223.459 447.586 223.399 447.281 223.399 cv
446.658 223.399 446.142 223.651 445.733 224.153 cv
445.211 224.793 444.949 225.663 444.949 226.765 cv
444.949 228.028 li
444.949 228.494 444.996 228.901 445.089 229.249 cv
445.15 229.496 445.251 229.768 445.39 230.063 cv
445.53 230.358 445.658 230.573 445.775 230.707 cv
445.962 230.921 446.188 231.088 446.453 231.208 cv
446.718 231.327 447 231.387 447.3 231.387 cv
447.924 231.387 448.439 231.136 448.849 230.634 cv
449.371 229.994 449.632 229.126 449.632 228.028 cv
449.632 226.765 li
449.632 226.295 449.588 225.886 449.499 225.538 cv
449.499 225.538 li
449.499 225.538 li
cp
f
487.245 224.213 mo
487.144 224.25 487.076 224.285 487.045 224.317 cv
487.003 224.37 486.983 224.427 486.983 224.487 cv
486.983 224.556 487.008 224.615 487.06 224.666 cv
487.109 224.717 487.165 224.742 487.227 224.742 cv
487.262 224.742 487.321 224.73 487.402 224.706 cv
489.066 224.183 li
489.066 230.694 li
487.317 230.694 li
487.195 230.694 487.108 230.718 487.057 230.765 cv
487.003 230.811 486.978 230.873 486.978 230.95 cv
486.978 231.022 487.003 231.083 487.057 231.132 cv
487.108 231.18 487.195 231.205 487.317 231.205 cv
491.326 231.205 li
491.447 231.205 491.534 231.18 491.587 231.132 cv
491.64 231.083 491.666 231.022 491.666 230.95 cv
491.666 230.873 491.64 230.811 491.587 230.765 cv
491.534 230.718 491.447 230.694 491.326 230.694 cv
489.576 230.694 li
489.576 223.479 li
487.245 224.213 li
487.245 224.213 li
cp
f
537.531 227.955 mo
537.531 228.732 537.369 229.414 537.045 229.999 cv
536.721 230.584 536.275 230.877 535.708 230.877 cv
535.417 230.877 535.156 230.804 534.925 230.658 cv
534.764 230.557 534.634 230.438 534.536 230.3 cv
534.362 230.053 534.207 229.721 534.072 229.304 cv
533.936 228.887 533.868 228.437 533.868 227.955 cv
533.868 226.832 li
533.868 226.054 534.03 225.374 534.354 224.791 cv
534.678 224.208 535.125 223.916 535.697 223.916 cv
535.984 223.916 536.242 223.987 536.475 224.129 cv
536.636 224.23 536.768 224.352 536.869 224.493 cv
537.039 224.74 537.192 225.071 537.327 225.486 cv
537.463 225.901 537.531 226.35 537.531 226.832 cv
537.531 227.955 li
537.531 227.955 li
cp
537.908 225.538 mo
537.843 225.295 537.742 225.025 537.604 224.73 cv
537.466 224.435 537.337 224.218 537.215 224.08 cv
537.028 223.865 536.804 223.698 536.541 223.579 cv
536.278 223.459 535.994 223.399 535.69 223.399 cv
535.067 223.399 534.552 223.651 534.141 224.153 cv
533.619 224.793 533.358 225.663 533.358 226.765 cv
533.358 228.028 li
533.358 228.494 533.404 228.901 533.497 229.249 cv
533.559 229.496 533.659 229.768 533.799 230.063 cv
533.938 230.358 534.067 230.573 534.185 230.707 cv
534.37 230.921 534.597 231.088 534.861 231.208 cv
535.126 231.327 535.408 231.387 535.708 231.387 cv
536.332 231.387 536.849 231.136 537.258 230.634 cv
537.78 229.994 538.042 229.126 538.042 228.028 cv
538.042 226.765 li
538.042 226.295 537.997 225.886 537.908 225.538 cv
537.908 225.538 li
537.908 225.538 li
cp
f
586.078 269.108 mo
586.078 269.886 585.916 270.567 585.592 271.152 cv
585.268 271.738 584.822 272.03 584.255 272.03 cv
583.964 272.03 583.703 271.957 583.472 271.812 cv
583.31 271.71 583.181 271.591 583.083 271.453 cv
582.909 271.206 582.754 270.874 582.618 270.457 cv
582.482 270.04 582.414 269.591 582.414 269.108 cv
582.414 267.984 li
582.414 267.207 582.576 266.527 582.9 265.944 cv
583.225 265.36 583.672 265.069 584.243 265.069 cv
584.531 265.069 584.789 265.14 585.021 265.282 cv
585.183 265.383 585.314 265.505 585.415 265.646 cv
585.586 265.893 585.738 266.224 585.874 266.639 cv
586.01 267.054 586.078 267.503 586.078 267.984 cv
586.078 269.108 li
586.078 269.108 li
cp
586.454 266.691 mo
586.389 266.448 586.288 266.178 586.15 265.883 cv
586.013 265.587 585.883 265.371 585.761 265.233 cv
585.575 265.019 585.351 264.852 585.087 264.732 cv
584.823 264.613 584.541 264.553 584.237 264.553 cv
583.613 264.553 583.097 264.804 582.688 265.306 cv
582.166 265.946 581.904 266.816 581.904 267.917 cv
581.904 269.181 li
581.904 269.647 581.951 270.054 582.044 270.402 cv
582.104 270.649 582.205 270.92 582.345 271.216 cv
582.485 271.511 582.613 271.726 582.731 271.86 cv
582.917 272.074 583.143 272.242 583.408 272.361 cv
583.673 272.48 583.955 272.54 584.255 272.54 cv
584.878 272.54 585.396 272.289 585.805 271.787 cv
586.326 271.147 586.588 270.279 586.588 269.181 cv
586.588 267.917 li
586.588 267.448 586.544 267.039 586.454 266.691 cv
586.454 266.691 li
586.454 266.691 li
cp
f
325.404 246.888 mo
325.602 246.584 325.701 246.263 325.701 245.923 cv
325.701 245.388 325.495 244.928 325.082 244.541 cv
324.669 244.154 324.141 243.961 323.496 243.961 cv
322.873 243.961 322.316 244.133 321.826 244.477 cv
321.475 244.724 321.298 244.929 321.298 245.09 cv
321.298 245.155 321.322 245.211 321.371 245.257 cv
321.42 245.304 321.478 245.327 321.547 245.327 cv
321.592 245.327 321.631 245.318 321.665 245.3 cv
321.7 245.282 321.75 245.232 321.814 245.151 cv
321.992 244.941 322.229 244.774 322.525 244.653 cv
322.82 244.531 323.145 244.471 323.496 244.471 cv
323.998 244.471 324.405 244.617 324.717 244.908 cv
325.029 245.2 325.186 245.536 325.186 245.917 cv
325.186 246.285 325.037 246.609 324.738 246.888 cv
324.441 247.168 324.063 247.308 323.606 247.308 cv
323.17 247.302 li
323.067 247.302 322.99 247.325 322.941 247.374 cv
322.891 247.423 322.865 247.484 322.865 247.557 cv
322.865 247.633 322.891 247.695 322.943 247.742 cv
322.996 247.788 323.084 247.812 323.206 247.812 cv
323.582 247.812 323.955 247.896 324.323 248.063 cv
324.691 248.231 324.974 248.461 325.17 248.753 cv
325.366 249.044 325.465 249.342 325.465 249.646 cv
325.465 250.1 325.266 250.512 324.866 250.882 cv
324.468 251.252 323.973 251.438 323.381 251.438 cv
322.68 251.438 322.017 251.205 321.39 250.739 cv
321.309 250.678 321.234 250.648 321.17 250.648 cv
321.105 250.648 321.05 250.672 321.003 250.721 cv
320.957 250.77 320.934 250.826 320.934 250.891 cv
320.934 250.964 320.963 251.033 321.023 251.098 cv
321.211 251.292 321.539 251.482 322.008 251.668 cv
322.478 251.854 322.932 251.948 323.369 251.948 cv
324.115 251.948 324.734 251.714 325.23 251.246 cv
325.727 250.778 325.975 250.239 325.975 249.627 cv
325.975 249.231 325.852 248.849 325.605 248.482 cv
325.357 248.116 324.998 247.828 324.529 247.617 cv
324.914 247.435 325.206 247.192 325.404 246.888 cv
325.404 246.888 li
cp
f
357.411 248.88 mo
358.777 245.169 li
358.965 245.169 li
360.376 248.88 li
357.411 248.88 li
357.411 248.88 li
cp
361.268 251.255 mo
360.296 251.255 li
360.171 251.255 360.082 251.278 360.029 251.325 cv
359.977 251.372 359.949 251.434 359.949 251.51 cv
359.949 251.583 359.977 251.644 360.029 251.692 cv
360.082 251.741 360.171 251.765 360.296 251.765 cv
362.197 251.765 li
362.318 251.765 362.405 251.741 362.459 251.692 cv
362.512 251.644 362.538 251.583 362.538 251.51 cv
362.538 251.434 362.512 251.372 362.459 251.325 cv
362.405 251.278 362.318 251.255 362.197 251.255 cv
361.803 251.255 li
359.312 244.659 li
356.743 244.659 li
356.621 244.659 356.535 244.682 356.481 244.729 cv
356.429 244.775 356.402 244.837 356.402 244.914 cv
356.402 244.991 356.429 245.053 356.481 245.1 cv
356.535 245.146 356.621 245.169 356.743 245.169 cv
358.249 245.169 li
355.996 251.255 li
355.602 251.255 li
355.48 251.255 355.393 251.278 355.34 251.325 cv
355.287 251.372 355.262 251.434 355.262 251.51 cv
355.262 251.583 355.287 251.644 355.34 251.692 cv
355.393 251.741 355.48 251.765 355.602 251.765 cv
357.509 251.765 li
357.63 251.765 357.717 251.741 357.77 251.692 cv
357.822 251.644 357.848 251.583 357.848 251.51 cv
357.848 251.434 357.822 251.372 357.77 251.325 cv
357.717 251.278 357.63 251.255 357.509 251.255 cv
356.53 251.255 li
357.217 249.391 li
360.569 249.391 li
361.268 251.255 li
361.268 251.255 li
cp
f
398.819 244.79 mo
398.719 244.827 398.651 244.861 398.619 244.894 cv
398.579 244.946 398.559 245.003 398.559 245.064 cv
398.559 245.132 398.584 245.192 398.635 245.242 cv
398.685 245.293 398.74 245.319 398.802 245.319 cv
398.838 245.319 398.896 245.307 398.979 245.282 cv
400.642 244.76 li
400.642 251.271 li
398.893 251.271 li
398.771 251.271 398.685 251.294 398.632 251.341 cv
398.579 251.387 398.553 251.449 398.553 251.526 cv
398.553 251.599 398.579 251.66 398.632 251.708 cv
398.685 251.757 398.771 251.781 398.893 251.781 cv
402.902 251.781 li
403.023 251.781 403.11 251.757 403.163 251.708 cv
403.215 251.66 403.242 251.599 403.242 251.526 cv
403.242 251.449 403.215 251.387 403.163 251.341 cv
403.11 251.294 403.023 251.271 402.902 251.271 cv
401.152 251.271 li
401.152 244.055 li
398.819 244.79 li
398.819 244.79 li
cp
f
445.211 244.79 mo
445.109 244.827 445.043 244.861 445.01 244.894 cv
444.97 244.946 444.949 245.003 444.949 245.064 cv
444.949 245.132 444.975 245.192 445.024 245.242 cv
445.076 245.293 445.132 245.319 445.192 245.319 cv
445.229 245.319 445.288 245.307 445.369 245.282 cv
447.033 244.76 li
447.033 251.271 li
445.283 251.271 li
445.162 251.271 445.074 251.294 445.022 251.341 cv
444.97 251.387 444.943 251.449 444.943 251.526 cv
444.943 251.599 444.97 251.66 445.022 251.708 cv
445.074 251.757 445.162 251.781 445.283 251.781 cv
449.293 251.781 li
449.414 251.781 449.501 251.757 449.554 251.708 cv
449.605 251.66 449.632 251.599 449.632 251.526 cv
449.632 251.449 449.605 251.387 449.554 251.341 cv
449.501 251.294 449.414 251.271 449.293 251.271 cv
447.543 251.271 li
447.543 244.055 li
445.211 244.79 li
445.211 244.79 li
cp
f
491.156 248.532 mo
491.156 249.309 490.993 249.991 490.67 250.575 cv
490.347 251.161 489.901 251.453 489.334 251.453 cv
489.042 251.453 488.781 251.38 488.551 251.234 cv
488.389 251.133 488.259 251.014 488.162 250.876 cv
487.987 250.629 487.833 250.297 487.696 249.88 cv
487.562 249.463 487.493 249.014 487.493 248.532 cv
487.493 247.408 li
487.493 246.63 487.655 245.951 487.979 245.367 cv
488.303 244.784 488.751 244.492 489.321 244.492 cv
489.609 244.492 489.868 244.563 490.1 244.705 cv
490.261 244.806 490.393 244.928 490.493 245.069 cv
490.664 245.317 490.817 245.648 490.953 246.063 cv
491.088 246.478 491.156 246.926 491.156 247.408 cv
491.156 248.532 li
491.156 248.532 li
cp
491.532 246.115 mo
491.468 245.871 491.367 245.602 491.229 245.307 cv
491.092 245.011 490.962 244.794 490.84 244.656 cv
490.653 244.442 490.43 244.275 490.166 244.155 cv
489.902 244.036 489.619 243.977 489.315 243.977 cv
488.691 243.977 488.176 244.228 487.767 244.729 cv
487.245 245.369 486.983 246.24 486.983 247.341 cv
486.983 248.604 li
486.983 249.07 487.029 249.477 487.123 249.825 cv
487.184 250.072 487.284 250.344 487.423 250.64 cv
487.563 250.935 487.691 251.149 487.809 251.283 cv
487.996 251.498 488.221 251.665 488.486 251.784 cv
488.752 251.904 489.034 251.963 489.334 251.963 cv
489.957 251.963 490.475 251.712 490.883 251.21 cv
491.404 250.57 491.666 249.702 491.666 248.604 cv
491.666 247.341 li
491.666 246.871 491.621 246.462 491.532 246.115 cv
491.532 246.115 li
491.532 246.115 li
cp
f
537.531 248.532 mo
537.531 249.309 537.369 249.991 537.045 250.575 cv
536.721 251.161 536.275 251.453 535.708 251.453 cv
535.417 251.453 535.156 251.38 534.925 251.234 cv
534.764 251.133 534.634 251.014 534.536 250.876 cv
534.362 250.629 534.207 250.297 534.072 249.88 cv
533.936 249.463 533.868 249.014 533.868 248.532 cv
533.868 247.408 li
533.868 246.63 534.03 245.951 534.354 245.367 cv
534.678 244.784 535.125 244.492 535.697 244.492 cv
535.984 244.492 536.242 244.563 536.475 244.705 cv
536.636 244.806 536.768 244.928 536.869 245.069 cv
537.039 245.317 537.192 245.648 537.327 246.063 cv
537.463 246.478 537.531 246.926 537.531 247.408 cv
537.531 248.532 li
537.531 248.532 li
cp
537.908 246.115 mo
537.843 245.871 537.742 245.602 537.604 245.307 cv
537.466 245.011 537.337 244.794 537.215 244.656 cv
537.028 244.442 536.804 244.275 536.541 244.155 cv
536.278 244.036 535.994 243.977 535.69 243.977 cv
535.067 243.977 534.552 244.228 534.141 244.729 cv
533.619 245.369 533.358 246.24 533.358 247.341 cv
533.358 248.604 li
533.358 249.07 533.404 249.477 533.497 249.825 cv
533.559 250.072 533.659 250.344 533.799 250.64 cv
533.938 250.935 534.067 251.149 534.185 251.283 cv
534.37 251.498 534.597 251.665 534.861 251.784 cv
535.126 251.904 535.408 251.963 535.708 251.963 cv
536.332 251.963 536.849 251.712 537.258 251.21 cv
537.78 250.57 538.042 249.702 538.042 248.604 cv
538.042 247.341 li
538.042 246.871 537.997 246.462 537.908 246.115 cv
537.908 246.115 li
537.908 246.115 li
cp
f
582.23 244.79 mo
582.13 244.827 582.063 244.861 582.031 244.894 cv
581.99 244.946 581.97 245.003 581.97 245.064 cv
581.97 245.132 581.995 245.192 582.047 245.242 cv
582.097 245.293 582.152 245.319 582.213 245.319 cv
582.249 245.319 582.309 245.307 582.389 245.282 cv
584.054 244.76 li
584.054 251.271 li
582.304 251.271 li
582.183 251.271 582.096 251.294 582.043 251.341 cv
581.99 251.387 581.965 251.449 581.965 251.526 cv
581.965 251.599 581.99 251.66 582.043 251.708 cv
582.096 251.757 582.183 251.781 582.304 251.781 cv
586.313 251.781 li
586.434 251.781 586.521 251.757 586.574 251.708 cv
586.627 251.66 586.652 251.599 586.652 251.526 cv
586.652 251.449 586.627 251.387 586.574 251.341 cv
586.521 251.294 586.434 251.271 586.313 251.271 cv
584.563 251.271 li
584.563 244.055 li
582.23 244.79 li
582.23 244.79 li
cp
f
321.583 269.7 mo
324.164 265.235 li
324.433 265.235 li
324.433 269.7 li
321.583 269.7 li
321.583 269.7 li
cp
324.433 271.832 mo
323.479 271.832 li
323.354 271.832 323.264 271.855 323.212 271.901 cv
323.158 271.948 323.133 272.01 323.133 272.087 cv
323.133 272.16 323.158 272.22 323.212 272.27 cv
323.264 272.318 323.354 272.342 323.479 272.342 cv
325.373 272.342 li
325.5 272.342 325.588 272.318 325.642 272.27 cv
325.693 272.22 325.719 272.16 325.719 272.087 cv
325.719 272.01 325.693 271.948 325.642 271.901 cv
325.588 271.855 325.5 271.832 325.373 271.832 cv
324.949 271.832 li
324.949 270.21 li
325.373 270.21 li
325.5 270.21 325.588 270.186 325.642 270.137 cv
325.693 270.088 325.719 270.028 325.719 269.955 cv
325.719 269.878 325.693 269.816 325.642 269.77 cv
325.588 269.723 325.5 269.7 325.373 269.7 cv
324.949 269.7 li
324.949 264.719 li
323.885 264.719 li
321.049 269.621 li
321.049 270.21 li
324.433 270.21 li
324.433 271.832 li
324.433 271.832 li
cp
f
357.411 269.457 mo
358.777 265.746 li
358.965 265.746 li
360.376 269.457 li
357.411 269.457 li
357.411 269.457 li
cp
361.268 271.832 mo
360.296 271.832 li
360.171 271.832 360.082 271.855 360.029 271.901 cv
359.977 271.948 359.949 272.01 359.949 272.087 cv
359.949 272.16 359.977 272.22 360.029 272.27 cv
360.082 272.318 360.171 272.342 360.296 272.342 cv
362.197 272.342 li
362.318 272.342 362.405 272.318 362.459 272.27 cv
362.512 272.22 362.538 272.16 362.538 272.087 cv
362.538 272.01 362.512 271.948 362.459 271.901 cv
362.405 271.855 362.318 271.832 362.197 271.832 cv
361.803 271.832 li
359.312 265.235 li
356.743 265.235 li
356.621 265.235 356.535 265.259 356.481 265.305 cv
356.429 265.352 356.402 265.414 356.402 265.491 cv
356.402 265.568 356.429 265.629 356.481 265.676 cv
356.535 265.723 356.621 265.746 356.743 265.746 cv
358.249 265.746 li
355.996 271.832 li
355.602 271.832 li
355.48 271.832 355.393 271.855 355.34 271.901 cv
355.287 271.948 355.262 272.01 355.262 272.087 cv
355.262 272.16 355.287 272.22 355.34 272.27 cv
355.393 272.318 355.48 272.342 355.602 272.342 cv
357.509 272.342 li
357.63 272.342 357.717 272.318 357.77 272.27 cv
357.822 272.22 357.848 272.16 357.848 272.087 cv
357.848 272.01 357.822 271.948 357.77 271.901 cv
357.717 271.855 357.63 271.832 357.509 271.832 cv
356.53 271.832 li
357.217 269.967 li
360.569 269.967 li
361.268 271.832 li
361.268 271.832 li
cp
f
402.731 269.108 mo
402.731 269.886 402.569 270.567 402.246 271.152 cv
401.922 271.737 401.477 272.03 400.909 272.03 cv
400.618 272.03 400.357 271.957 400.126 271.811 cv
399.964 271.71 399.835 271.59 399.737 271.453 cv
399.563 271.206 399.408 270.874 399.273 270.457 cv
399.137 270.04 399.068 269.59 399.068 269.108 cv
399.068 267.984 li
399.068 267.207 399.23 266.527 399.556 265.944 cv
399.879 265.36 400.326 265.069 400.896 265.069 cv
401.186 265.069 401.444 265.14 401.675 265.282 cv
401.836 265.383 401.968 265.504 402.069 265.646 cv
402.24 265.893 402.393 266.224 402.528 266.639 cv
402.664 267.054 402.731 267.502 402.731 267.984 cv
402.731 269.108 li
402.731 269.108 li
cp
403.108 266.691 mo
403.043 266.447 402.942 266.178 402.805 265.883 cv
402.667 265.587 402.537 265.371 402.415 265.232 cv
402.23 265.019 402.004 264.852 401.742 264.732 cv
401.479 264.613 401.194 264.553 400.892 264.553 cv
400.268 264.553 399.752 264.804 399.342 265.306 cv
398.819 265.946 398.559 266.816 398.559 267.917 cv
398.559 269.181 li
398.559 269.646 398.605 270.054 398.699 270.402 cv
398.759 270.649 398.859 270.92 399 271.216 cv
399.139 271.511 399.268 271.726 399.385 271.86 cv
399.571 272.074 399.797 272.242 400.063 272.361 cv
400.327 272.48 400.61 272.54 400.909 272.54 cv
401.533 272.54 402.05 272.289 402.459 271.787 cv
402.981 271.146 403.242 270.278 403.242 269.181 cv
403.242 267.917 li
403.242 267.448 403.197 267.039 403.108 266.691 cv
403.108 266.691 li
403.108 266.691 li
cp
f
449.122 269.108 mo
449.122 269.886 448.96 270.567 448.637 271.152 cv
448.313 271.737 447.867 272.03 447.3 272.03 cv
447.009 272.03 446.747 271.957 446.517 271.811 cv
446.354 271.71 446.225 271.59 446.128 271.453 cv
445.953 271.206 445.798 270.874 445.663 270.457 cv
445.527 270.04 445.46 269.59 445.46 269.108 cv
445.46 267.984 li
445.46 267.207 445.622 266.527 445.945 265.944 cv
446.27 265.36 446.717 265.069 447.288 265.069 cv
447.575 265.069 447.835 265.14 448.064 265.282 cv
448.228 265.383 448.359 265.504 448.46 265.646 cv
448.63 265.893 448.782 266.224 448.919 266.639 cv
449.055 267.054 449.122 267.502 449.122 267.984 cv
449.122 269.108 li
449.122 269.108 li
cp
449.499 266.691 mo
449.434 266.447 449.332 266.178 449.195 265.883 cv
449.058 265.587 448.928 265.371 448.807 265.232 cv
448.62 265.019 448.396 264.852 448.132 264.732 cv
447.869 264.613 447.586 264.553 447.281 264.553 cv
446.658 264.553 446.142 264.804 445.733 265.306 cv
445.211 265.946 444.949 266.816 444.949 267.917 cv
444.949 269.181 li
444.949 269.646 444.996 270.054 445.089 270.402 cv
445.15 270.649 445.251 270.92 445.39 271.216 cv
445.53 271.511 445.658 271.726 445.775 271.86 cv
445.962 272.074 446.188 272.242 446.453 272.361 cv
446.718 272.48 447 272.54 447.3 272.54 cv
447.924 272.54 448.439 272.289 448.849 271.787 cv
449.371 271.146 449.632 270.278 449.632 269.181 cv
449.632 267.917 li
449.632 267.448 449.588 267.039 449.499 266.691 cv
449.499 266.691 li
449.499 266.691 li
cp
f
491.156 269.108 mo
491.156 269.886 490.993 270.567 490.67 271.152 cv
490.347 271.737 489.901 272.03 489.334 272.03 cv
489.042 272.03 488.781 271.957 488.551 271.811 cv
488.389 271.71 488.259 271.59 488.162 271.453 cv
487.987 271.206 487.833 270.874 487.696 270.457 cv
487.562 270.04 487.493 269.59 487.493 269.108 cv
487.493 267.984 li
487.493 267.207 487.655 266.527 487.979 265.944 cv
488.303 265.36 488.751 265.069 489.321 265.069 cv
489.609 265.069 489.868 265.14 490.1 265.282 cv
490.261 265.383 490.393 265.504 490.493 265.646 cv
490.664 265.893 490.817 266.224 490.953 266.639 cv
491.088 267.054 491.156 267.502 491.156 267.984 cv
491.156 269.108 li
491.156 269.108 li
cp
491.532 266.691 mo
491.468 266.447 491.367 266.178 491.229 265.883 cv
491.092 265.587 490.962 265.371 490.84 265.232 cv
490.653 265.019 490.43 264.852 490.166 264.732 cv
489.902 264.613 489.619 264.553 489.315 264.553 cv
488.691 264.553 488.176 264.804 487.767 265.306 cv
487.245 265.946 486.983 266.816 486.983 267.917 cv
486.983 269.181 li
486.983 269.646 487.029 270.054 487.123 270.402 cv
487.184 270.649 487.284 270.92 487.423 271.216 cv
487.563 271.511 487.691 271.726 487.809 271.86 cv
487.996 272.074 488.221 272.242 488.486 272.361 cv
488.752 272.48 489.034 272.54 489.334 272.54 cv
489.957 272.54 490.475 272.289 490.883 271.787 cv
491.404 271.146 491.666 270.278 491.666 269.181 cv
491.666 267.917 li
491.666 267.448 491.621 267.039 491.532 266.691 cv
491.532 266.691 li
491.532 266.691 li
cp
f
537.531 269.108 mo
537.531 269.886 537.369 270.567 537.045 271.152 cv
536.721 271.737 536.275 272.03 535.708 272.03 cv
535.417 272.03 535.156 271.957 534.925 271.811 cv
534.764 271.71 534.634 271.59 534.536 271.453 cv
534.362 271.206 534.207 270.874 534.072 270.457 cv
533.936 270.04 533.868 269.59 533.868 269.108 cv
533.868 267.984 li
533.868 267.207 534.03 266.527 534.354 265.944 cv
534.678 265.36 535.125 265.069 535.697 265.069 cv
535.984 265.069 536.242 265.14 536.475 265.282 cv
536.636 265.383 536.768 265.504 536.869 265.646 cv
537.039 265.893 537.192 266.224 537.327 266.639 cv
537.463 267.054 537.531 267.502 537.531 267.984 cv
537.531 269.108 li
537.531 269.108 li
cp
537.908 266.691 mo
537.843 266.447 537.742 266.178 537.604 265.883 cv
537.466 265.587 537.337 265.371 537.215 265.232 cv
537.028 265.019 536.804 264.852 536.541 264.732 cv
536.278 264.613 535.994 264.553 535.69 264.553 cv
535.067 264.553 534.552 264.804 534.141 265.306 cv
533.619 265.946 533.358 266.816 533.358 267.917 cv
533.358 269.181 li
533.358 269.646 533.404 270.054 533.497 270.402 cv
533.559 270.649 533.659 270.92 533.799 271.216 cv
533.938 271.511 534.067 271.726 534.185 271.86 cv
534.37 272.074 534.597 272.242 534.861 272.361 cv
535.126 272.48 535.408 272.54 535.708 272.54 cv
536.332 272.54 536.849 272.289 537.258 271.787 cv
537.78 271.146 538.042 270.278 538.042 269.181 cv
538.042 267.917 li
538.042 267.448 537.997 267.039 537.908 266.691 cv
537.908 266.691 li
537.908 266.691 li
cp
f
582.169 224.159 mo
582.067 224.195 582.001 224.229 581.969 224.262 cv
581.928 224.314 581.908 224.371 581.908 224.432 cv
581.908 224.501 581.933 224.561 581.984 224.611 cv
582.034 224.662 582.09 224.687 582.15 224.687 cv
582.187 224.687 582.246 224.675 582.326 224.65 cv
583.991 224.128 li
583.991 230.64 li
582.242 230.64 li
582.12 230.64 582.033 230.663 581.98 230.709 cv
581.928 230.756 581.902 230.818 581.902 230.895 cv
581.902 230.968 581.928 231.028 581.98 231.077 cv
582.033 231.125 582.12 231.15 582.242 231.15 cv
586.251 231.15 li
586.372 231.15 586.459 231.125 586.512 231.077 cv
586.564 231.028 586.59 230.968 586.59 230.895 cv
586.59 230.818 586.564 230.756 586.512 230.709 cv
586.459 230.663 586.372 230.64 586.251 230.64 cv
584.501 230.64 li
584.501 223.423 li
582.169 224.159 li
582.169 224.159 li
cp
f
325.125 285.828 mo
325.245 285.828 325.333 285.804 325.386 285.754 cv
325.438 285.706 325.465 285.646 325.465 285.573 cv
325.465 285.496 325.438 285.433 325.386 285.384 cv
325.333 285.335 325.245 285.311 325.125 285.311 cv
321.565 285.311 li
321.565 288.694 li
321.565 288.783 321.587 288.853 321.632 288.901 cv
321.677 288.949 321.734 288.974 321.809 288.974 cv
321.86 288.974 321.951 288.941 322.082 288.877 cv
322.612 288.598 323.143 288.458 323.673 288.458 cv
324.19 288.458 324.618 288.633 324.955 288.983 cv
325.29 289.334 325.459 289.795 325.459 290.371 cv
325.459 291.047 325.264 291.589 324.875 291.996 cv
324.486 292.402 323.995 292.606 323.398 292.606 cv
322.679 292.606 322.012 292.32 321.4 291.75 cv
321.324 291.677 321.25 291.641 321.183 291.641 cv
321.117 291.641 321.061 291.666 321.012 291.716 cv
320.963 291.767 320.939 291.829 320.939 291.901 cv
320.939 291.991 321.017 292.102 321.17 292.236 cv
321.43 292.458 321.717 292.645 322.032 292.794 cv
322.478 293.009 322.941 293.116 323.424 293.116 cv
324.152 293.116 324.76 292.866 325.245 292.363 cv
325.732 291.861 325.975 291.205 325.975 290.396 cv
325.975 289.663 325.76 289.071 325.327 288.621 cv
324.896 288.172 324.361 287.947 323.722 287.947 cv
323.475 287.947 323.213 287.979 322.938 288.041 cv
322.662 288.104 322.375 288.199 322.076 288.325 cv
322.076 285.828 li
325.125 285.828 li
325.125 285.828 li
cp
f
362.027 290.277 mo
362.068 290.262 362.104 290.233 362.137 290.188 cv
362.169 290.145 362.186 290.095 362.186 290.043 cv
362.186 289.966 362.159 289.904 362.105 289.857 cv
362.054 289.811 361.967 289.788 361.845 289.788 cv
359.392 289.782 li
359.271 289.782 359.183 289.806 359.13 289.854 cv
359.077 289.903 359.051 289.966 359.051 290.043 cv
359.051 290.12 359.077 290.182 359.13 290.228 cv
359.183 290.274 359.271 290.298 359.392 290.298 cv
361.146 290.298 li
361.146 292.188 li
360.794 292.349 360.486 292.463 360.223 292.527 cv
359.96 292.592 359.675 292.624 359.366 292.624 cv
358.455 292.624 357.741 292.375 357.223 291.877 cv
356.704 291.379 356.445 290.707 356.445 289.86 cv
356.445 288.932 li
356.445 288.454 356.554 288.026 356.773 287.65 cv
357.102 287.074 357.455 286.685 357.833 286.481 cv
358.212 286.276 358.637 286.174 359.105 286.174 cv
359.604 286.174 360.065 286.283 360.487 286.502 cv
360.91 286.721 361.134 287.002 361.158 287.347 cv
361.162 287.463 361.188 287.546 361.234 287.592 cv
361.281 287.639 361.339 287.662 361.407 287.662 cv
361.48 287.662 361.541 287.636 361.59 287.586 cv
361.639 287.535 361.663 287.447 361.663 287.322 cv
361.663 286.168 li
361.663 286.046 361.639 285.96 361.59 285.906 cv
361.541 285.854 361.48 285.828 361.407 285.828 cv
361.351 285.828 361.3 285.843 361.256 285.874 cv
361.211 285.903 361.183 285.939 361.167 285.979 cv
361.154 286.02 361.146 286.139 361.146 286.338 cv
360.579 285.889 359.885 285.664 359.063 285.664 cv
358.496 285.664 357.972 285.804 357.49 286.083 cv
357.009 286.362 356.628 286.766 356.352 287.294 cv
356.074 287.823 355.936 288.366 355.936 288.926 cv
355.936 289.86 li
355.936 290.415 356.015 290.873 356.175 291.233 cv
356.336 291.594 356.559 291.92 356.846 292.211 cv
357.134 292.503 357.485 292.729 357.9 292.891 cv
358.314 293.053 358.796 293.135 359.343 293.135 cv
359.728 293.135 360.112 293.08 360.499 292.97 cv
360.886 292.861 361.274 292.699 361.663 292.485 cv
361.663 290.298 li
361.866 290.298 361.986 290.291 362.027 290.277 cv
362.027 290.277 li
cp
f
402.731 289.685 mo
402.731 290.462 402.569 291.144 402.246 291.729 cv
401.922 292.313 401.477 292.606 400.909 292.606 cv
400.618 292.606 400.357 292.533 400.126 292.388 cv
399.964 292.286 399.835 292.167 399.737 292.029 cv
399.563 291.782 399.408 291.451 399.273 291.033 cv
399.137 290.616 399.068 290.167 399.068 289.685 cv
399.068 288.562 li
399.068 287.783 399.23 287.104 399.556 286.52 cv
399.879 285.937 400.326 285.646 400.896 285.646 cv
401.186 285.646 401.444 285.716 401.675 285.858 cv
401.836 285.96 401.968 286.081 402.069 286.222 cv
402.24 286.469 402.393 286.801 402.528 287.216 cv
402.664 287.631 402.731 288.08 402.731 288.562 cv
402.731 289.685 li
402.731 289.685 li
cp
403.108 287.267 mo
403.043 287.024 402.942 286.755 402.805 286.46 cv
402.667 286.164 402.537 285.947 402.415 285.81 cv
402.23 285.595 402.004 285.427 401.742 285.308 cv
401.479 285.189 401.194 285.129 400.892 285.129 cv
400.268 285.129 399.752 285.38 399.342 285.882 cv
398.819 286.522 398.559 287.393 398.559 288.494 cv
398.559 289.758 li
398.559 290.223 398.605 290.63 398.699 290.979 cv
398.759 291.225 398.859 291.497 399 291.792 cv
399.139 292.088 399.268 292.302 399.385 292.436 cv
399.571 292.651 399.797 292.817 400.063 292.937 cv
400.327 293.057 400.61 293.116 400.909 293.116 cv
401.533 293.116 402.05 292.866 402.459 292.363 cv
402.981 291.724 403.242 290.855 403.242 289.758 cv
403.242 288.494 li
403.242 288.024 403.197 287.616 403.108 287.267 cv
403.108 287.267 li
403.108 287.267 li
cp
f
449.122 289.685 mo
449.122 290.462 448.96 291.144 448.637 291.729 cv
448.313 292.313 447.867 292.606 447.3 292.606 cv
447.009 292.606 446.747 292.533 446.517 292.388 cv
446.354 292.286 446.225 292.167 446.128 292.029 cv
445.953 291.782 445.798 291.451 445.663 291.033 cv
445.527 290.616 445.46 290.167 445.46 289.685 cv
445.46 288.562 li
445.46 287.783 445.622 287.104 445.945 286.52 cv
446.27 285.937 446.717 285.646 447.288 285.646 cv
447.575 285.646 447.835 285.716 448.064 285.858 cv
448.228 285.96 448.359 286.081 448.46 286.222 cv
448.63 286.469 448.782 286.801 448.919 287.216 cv
449.055 287.631 449.122 288.08 449.122 288.562 cv
449.122 289.685 li
449.122 289.685 li
cp
449.499 287.267 mo
449.434 287.024 449.332 286.755 449.195 286.46 cv
449.058 286.164 448.928 285.947 448.807 285.81 cv
448.62 285.595 448.396 285.427 448.132 285.308 cv
447.869 285.189 447.586 285.129 447.281 285.129 cv
446.658 285.129 446.142 285.38 445.733 285.882 cv
445.211 286.522 444.949 287.393 444.949 288.494 cv
444.949 289.758 li
444.949 290.223 444.996 290.63 445.089 290.979 cv
445.15 291.225 445.251 291.497 445.39 291.792 cv
445.53 292.088 445.658 292.302 445.775 292.436 cv
445.962 292.651 446.188 292.817 446.453 292.937 cv
446.718 293.057 447 293.116 447.3 293.116 cv
447.924 293.116 448.439 292.866 448.849 292.363 cv
449.371 291.724 449.632 290.855 449.632 289.758 cv
449.632 288.494 li
449.632 288.024 449.588 287.616 449.499 287.267 cv
449.499 287.267 li
449.499 287.267 li
cp
f
491.156 289.685 mo
491.156 290.462 490.993 291.144 490.67 291.729 cv
490.347 292.313 489.901 292.606 489.334 292.606 cv
489.042 292.606 488.781 292.533 488.551 292.388 cv
488.389 292.286 488.259 292.167 488.162 292.029 cv
487.987 291.782 487.833 291.451 487.696 291.033 cv
487.562 290.616 487.493 290.167 487.493 289.685 cv
487.493 288.562 li
487.493 287.783 487.655 287.104 487.979 286.52 cv
488.303 285.937 488.751 285.646 489.321 285.646 cv
489.609 285.646 489.868 285.716 490.1 285.858 cv
490.261 285.96 490.393 286.081 490.493 286.222 cv
490.664 286.469 490.817 286.801 490.953 287.216 cv
491.088 287.631 491.156 288.08 491.156 288.562 cv
491.156 289.685 li
491.156 289.685 li
cp
491.532 287.267 mo
491.468 287.024 491.367 286.755 491.229 286.46 cv
491.092 286.164 490.962 285.947 490.84 285.81 cv
490.653 285.595 490.43 285.427 490.166 285.308 cv
489.902 285.189 489.619 285.129 489.315 285.129 cv
488.691 285.129 488.176 285.38 487.767 285.882 cv
487.245 286.522 486.983 287.393 486.983 288.494 cv
486.983 289.758 li
486.983 290.223 487.029 290.63 487.123 290.979 cv
487.184 291.225 487.284 291.497 487.423 291.792 cv
487.563 292.088 487.691 292.302 487.809 292.436 cv
487.996 292.651 488.221 292.817 488.486 292.937 cv
488.752 293.057 489.034 293.116 489.334 293.116 cv
489.957 293.116 490.475 292.866 490.883 292.363 cv
491.404 291.724 491.666 290.855 491.666 289.758 cv
491.666 288.494 li
491.666 288.024 491.621 287.616 491.532 287.267 cv
491.532 287.267 li
491.532 287.267 li
cp
f
537.531 289.685 mo
537.531 290.462 537.369 291.144 537.045 291.729 cv
536.721 292.313 536.275 292.606 535.708 292.606 cv
535.417 292.606 535.156 292.533 534.925 292.388 cv
534.764 292.286 534.634 292.167 534.536 292.029 cv
534.362 291.782 534.207 291.451 534.072 291.033 cv
533.936 290.616 533.868 290.167 533.868 289.685 cv
533.868 288.562 li
533.868 287.783 534.03 287.104 534.354 286.52 cv
534.678 285.937 535.125 285.646 535.697 285.646 cv
535.984 285.646 536.242 285.716 536.475 285.858 cv
536.636 285.96 536.768 286.081 536.869 286.222 cv
537.039 286.469 537.192 286.801 537.327 287.216 cv
537.463 287.631 537.531 288.08 537.531 288.562 cv
537.531 289.685 li
537.531 289.685 li
cp
537.908 287.267 mo
537.843 287.024 537.742 286.755 537.604 286.46 cv
537.466 286.164 537.337 285.947 537.215 285.81 cv
537.028 285.595 536.804 285.427 536.541 285.308 cv
536.278 285.189 535.994 285.129 535.69 285.129 cv
535.067 285.129 534.552 285.38 534.141 285.882 cv
533.619 286.522 533.358 287.393 533.358 288.494 cv
533.358 289.758 li
533.358 290.223 533.404 290.63 533.497 290.979 cv
533.559 291.225 533.659 291.497 533.799 291.792 cv
533.938 292.088 534.067 292.302 534.185 292.436 cv
534.37 292.651 534.597 292.817 534.861 292.937 cv
535.126 293.057 535.408 293.116 535.708 293.116 cv
536.332 293.116 536.849 292.866 537.258 292.363 cv
537.78 291.724 538.042 290.855 538.042 289.758 cv
538.042 288.494 li
538.042 288.024 537.997 287.616 537.908 287.267 cv
537.908 287.267 li
537.908 287.267 li
cp
f
586.078 310.261 mo
586.078 311.038 585.916 311.72 585.592 312.304 cv
585.268 312.89 584.822 313.182 584.255 313.182 cv
583.964 313.182 583.703 313.109 583.472 312.963 cv
583.31 312.862 583.181 312.742 583.083 312.605 cv
582.909 312.358 582.754 312.026 582.618 311.609 cv
582.482 311.192 582.414 310.742 582.414 310.261 cv
582.414 309.137 li
582.414 308.359 582.576 307.679 582.9 307.096 cv
583.225 306.513 583.672 306.221 584.243 306.221 cv
584.531 306.221 584.789 306.292 585.021 306.434 cv
585.183 306.536 585.314 306.656 585.415 306.798 cv
585.586 307.045 585.738 307.376 585.874 307.792 cv
586.01 308.207 586.078 308.655 586.078 309.137 cv
586.078 310.261 li
586.078 310.261 li
cp
586.454 307.843 mo
586.389 307.601 586.288 307.331 586.15 307.036 cv
586.013 306.739 585.883 306.523 585.761 306.386 cv
585.575 306.171 585.351 306.003 585.087 305.884 cv
584.823 305.765 584.541 305.705 584.237 305.705 cv
583.613 305.705 583.097 305.956 582.688 306.459 cv
582.166 307.098 581.904 307.969 581.904 309.07 cv
581.904 310.333 li
581.904 310.8 581.951 311.206 582.044 311.555 cv
582.104 311.801 582.205 312.073 582.345 312.368 cv
582.485 312.664 582.613 312.878 582.731 313.012 cv
582.917 313.227 583.143 313.394 583.408 313.513 cv
583.673 313.632 583.955 313.693 584.255 313.693 cv
584.878 313.693 585.396 313.441 585.805 312.939 cv
586.326 312.3 586.588 311.431 586.588 310.333 cv
586.588 309.07 li
586.588 308.601 586.544 308.192 586.454 307.843 cv
586.454 307.843 li
586.454 307.843 li
cp
f
322.896 309.933 mo
323.26 309.597 323.638 309.429 324.031 309.429 cv
324.44 309.429 324.808 309.603 325.131 309.952 cv
325.453 310.3 325.617 310.739 325.617 311.269 cv
325.617 311.836 325.455 312.296 325.134 312.651 cv
324.812 313.005 324.424 313.183 323.971 313.183 cv
323.521 313.183 323.131 313.025 322.801 312.709 cv
322.471 312.393 322.229 311.867 322.076 311.13 cv
322.379 310.555 322.652 310.155 322.896 309.933 cv
322.896 309.933 li
322.896 309.933 li
cp
321.924 309.66 mo
321.924 308.725 322.248 307.918 322.898 307.24 cv
323.549 306.562 324.269 306.222 325.058 306.222 cv
325.305 306.222 325.511 306.262 325.678 306.344 cv
325.75 306.384 325.813 306.404 325.865 306.404 cv
325.935 306.404 325.991 306.381 326.036 306.334 cv
326.08 306.287 326.103 306.228 326.103 306.155 cv
326.103 306.054 326.055 305.973 325.956 305.912 cv
325.729 305.774 325.446 305.706 325.106 305.706 cv
324.605 305.706 324.137 305.808 323.707 306.013 cv
323.275 306.217 322.896 306.48 322.574 306.802 cv
322.25 307.124 321.99 307.498 321.795 307.922 cv
321.541 308.474 321.414 309.068 321.414 309.708 cv
321.414 310.559 321.55 311.333 321.82 312.035 cv
322.039 312.597 322.34 313.015 322.723 313.286 cv
323.105 313.557 323.517 313.693 323.959 313.693 cv
324.635 313.693 325.164 313.44 325.55 312.937 cv
325.935 312.432 326.127 311.876 326.127 311.269 cv
326.127 310.605 325.916 310.047 325.495 309.596 cv
325.073 309.145 324.592 308.918 324.049 308.918 cv
323.641 308.918 323.27 309.03 322.935 309.253 cv
322.602 309.476 322.275 309.82 321.96 310.286 cv
321.936 310.002 321.924 309.793 321.924 309.66 cv
321.924 309.66 li
321.924 309.66 li
cp
f
357.411 310.625 mo
358.777 306.915 li
358.965 306.915 li
360.376 310.625 li
357.411 310.625 li
357.411 310.625 li
cp
361.268 313.001 mo
360.296 313.001 li
360.171 313.001 360.082 313.023 360.029 313.07 cv
359.977 313.117 359.949 313.179 359.949 313.256 cv
359.949 313.328 359.977 313.389 360.029 313.438 cv
360.082 313.486 360.171 313.511 360.296 313.511 cv
362.197 313.511 li
362.318 313.511 362.405 313.486 362.459 313.438 cv
362.512 313.389 362.538 313.328 362.538 313.256 cv
362.538 313.179 362.512 313.117 362.459 313.07 cv
362.405 313.023 362.318 313.001 362.197 313.001 cv
361.803 313.001 li
359.312 306.404 li
356.743 306.404 li
356.621 306.404 356.535 306.428 356.481 306.474 cv
356.429 306.52 356.402 306.582 356.402 306.659 cv
356.402 306.736 356.429 306.798 356.481 306.845 cv
356.535 306.891 356.621 306.915 356.743 306.915 cv
358.249 306.915 li
355.996 313.001 li
355.602 313.001 li
355.48 313.001 355.393 313.023 355.34 313.07 cv
355.287 313.117 355.262 313.179 355.262 313.256 cv
355.262 313.328 355.287 313.389 355.34 313.438 cv
355.393 313.486 355.48 313.511 355.602 313.511 cv
357.509 313.511 li
357.63 313.511 357.717 313.486 357.77 313.438 cv
357.822 313.389 357.848 313.328 357.848 313.256 cv
357.848 313.179 357.822 313.117 357.77 313.07 cv
357.717 313.023 357.63 313.001 357.509 313.001 cv
356.53 313.001 li
357.217 311.136 li
360.569 311.136 li
361.268 313.001 li
361.268 313.001 li
cp
f
402.731 310.261 mo
402.731 311.039 402.569 311.72 402.246 312.305 cv
401.922 312.89 401.477 313.183 400.909 313.183 cv
400.618 313.183 400.357 313.109 400.126 312.964 cv
399.964 312.863 399.835 312.743 399.737 312.606 cv
399.563 312.358 399.408 312.026 399.273 311.609 cv
399.137 311.192 399.068 310.743 399.068 310.261 cv
399.068 309.137 li
399.068 308.36 399.23 307.679 399.556 307.097 cv
399.879 306.514 400.326 306.222 400.896 306.222 cv
401.186 306.222 401.444 306.292 401.675 306.434 cv
401.836 306.536 401.968 306.657 402.069 306.799 cv
402.24 307.046 402.393 307.377 402.528 307.792 cv
402.664 308.207 402.731 308.655 402.731 309.137 cv
402.731 310.261 li
402.731 310.261 li
cp
403.108 307.844 mo
403.043 307.601 402.942 307.332 402.805 307.036 cv
402.667 306.74 402.537 306.523 402.415 306.386 cv
402.23 306.171 402.004 306.004 401.742 305.885 cv
401.479 305.765 401.194 305.706 400.892 305.706 cv
400.268 305.706 399.752 305.957 399.342 306.459 cv
398.819 307.099 398.559 307.97 398.559 309.071 cv
398.559 310.333 li
398.559 310.8 398.605 311.207 398.699 311.555 cv
398.759 311.802 398.859 312.073 399 312.369 cv
399.139 312.665 399.268 312.879 399.385 313.013 cv
399.571 313.228 399.797 313.394 400.063 313.514 cv
400.327 313.633 400.61 313.693 400.909 313.693 cv
401.533 313.693 402.05 313.442 402.459 312.939 cv
402.981 312.3 403.242 311.431 403.242 310.333 cv
403.242 309.071 li
403.242 308.601 403.197 308.192 403.108 307.844 cv
403.108 307.844 li
403.108 307.844 li
cp
f
449.122 310.261 mo
449.122 311.039 448.96 311.72 448.637 312.305 cv
448.313 312.89 447.867 313.183 447.3 313.183 cv
447.009 313.183 446.747 313.109 446.517 312.964 cv
446.354 312.863 446.225 312.743 446.128 312.606 cv
445.953 312.358 445.798 312.026 445.663 311.609 cv
445.527 311.192 445.46 310.743 445.46 310.261 cv
445.46 309.137 li
445.46 308.36 445.622 307.679 445.945 307.097 cv
446.27 306.514 446.717 306.222 447.288 306.222 cv
447.575 306.222 447.835 306.292 448.064 306.434 cv
448.228 306.536 448.359 306.657 448.46 306.799 cv
448.63 307.046 448.782 307.377 448.919 307.792 cv
449.055 308.207 449.122 308.655 449.122 309.137 cv
449.122 310.261 li
449.122 310.261 li
cp
449.499 307.844 mo
449.434 307.601 449.332 307.332 449.195 307.036 cv
449.058 306.74 448.928 306.523 448.807 306.386 cv
448.62 306.171 448.396 306.004 448.132 305.885 cv
447.869 305.765 447.586 305.706 447.281 305.706 cv
446.658 305.706 446.142 305.957 445.733 306.459 cv
445.211 307.099 444.949 307.97 444.949 309.071 cv
444.949 310.333 li
444.949 310.8 444.996 311.207 445.089 311.555 cv
445.15 311.802 445.251 312.073 445.39 312.369 cv
445.53 312.665 445.658 312.879 445.775 313.013 cv
445.962 313.228 446.188 313.394 446.453 313.514 cv
446.718 313.633 447 313.693 447.3 313.693 cv
447.924 313.693 448.439 313.442 448.849 312.939 cv
449.371 312.3 449.632 311.431 449.632 310.333 cv
449.632 309.071 li
449.632 308.601 449.588 308.192 449.499 307.844 cv
449.499 307.844 li
449.499 307.844 li
cp
f
491.156 310.261 mo
491.156 311.039 490.993 311.72 490.67 312.305 cv
490.347 312.89 489.901 313.183 489.334 313.183 cv
489.042 313.183 488.781 313.109 488.551 312.964 cv
488.389 312.863 488.259 312.743 488.162 312.606 cv
487.987 312.358 487.833 312.026 487.696 311.609 cv
487.562 311.192 487.493 310.743 487.493 310.261 cv
487.493 309.137 li
487.493 308.36 487.655 307.679 487.979 307.097 cv
488.303 306.514 488.751 306.222 489.321 306.222 cv
489.609 306.222 489.868 306.292 490.1 306.434 cv
490.261 306.536 490.393 306.657 490.493 306.799 cv
490.664 307.046 490.817 307.377 490.953 307.792 cv
491.088 308.207 491.156 308.655 491.156 309.137 cv
491.156 310.261 li
491.156 310.261 li
cp
491.532 307.844 mo
491.468 307.601 491.367 307.332 491.229 307.036 cv
491.092 306.74 490.962 306.523 490.84 306.386 cv
490.653 306.171 490.43 306.004 490.166 305.885 cv
489.902 305.765 489.619 305.706 489.315 305.706 cv
488.691 305.706 488.176 305.957 487.767 306.459 cv
487.245 307.099 486.983 307.97 486.983 309.071 cv
486.983 310.333 li
486.983 310.8 487.029 311.207 487.123 311.555 cv
487.184 311.802 487.284 312.073 487.423 312.369 cv
487.563 312.665 487.691 312.879 487.809 313.013 cv
487.996 313.228 488.221 313.394 488.486 313.514 cv
488.752 313.633 489.034 313.693 489.334 313.693 cv
489.957 313.693 490.475 313.442 490.883 312.939 cv
491.404 312.3 491.666 311.431 491.666 310.333 cv
491.666 309.071 li
491.666 308.601 491.621 308.192 491.532 307.844 cv
491.532 307.844 li
491.532 307.844 li
cp
f
537.531 310.261 mo
537.531 311.039 537.369 311.72 537.045 312.305 cv
536.721 312.89 536.275 313.183 535.708 313.183 cv
535.417 313.183 535.156 313.109 534.925 312.964 cv
534.764 312.863 534.634 312.743 534.536 312.606 cv
534.362 312.358 534.207 312.026 534.072 311.609 cv
533.936 311.192 533.868 310.743 533.868 310.261 cv
533.868 309.137 li
533.868 308.36 534.03 307.679 534.354 307.097 cv
534.678 306.514 535.125 306.222 535.697 306.222 cv
535.984 306.222 536.242 306.292 536.475 306.434 cv
536.636 306.536 536.768 306.657 536.869 306.799 cv
537.039 307.046 537.192 307.377 537.327 307.792 cv
537.463 308.207 537.531 308.655 537.531 309.137 cv
537.531 310.261 li
537.531 310.261 li
cp
537.908 307.844 mo
537.843 307.601 537.742 307.332 537.604 307.036 cv
537.466 306.74 537.337 306.523 537.215 306.386 cv
537.028 306.171 536.804 306.004 536.541 305.885 cv
536.278 305.765 535.994 305.706 535.69 305.706 cv
535.067 305.706 534.552 305.957 534.141 306.459 cv
533.619 307.099 533.358 307.97 533.358 309.071 cv
533.358 310.333 li
533.358 310.8 533.404 311.207 533.497 311.555 cv
533.559 311.802 533.659 312.073 533.799 312.369 cv
533.938 312.665 534.067 312.879 534.185 313.013 cv
534.37 313.228 534.597 313.394 534.861 313.514 cv
535.126 313.633 535.408 313.693 535.708 313.693 cv
536.332 313.693 536.849 313.442 537.258 312.939 cv
537.78 312.3 538.042 311.431 538.042 310.333 cv
538.042 309.071 li
538.042 308.601 537.997 308.192 537.908 307.844 cv
537.908 307.844 li
537.908 307.844 li
cp
f
582.169 286.271 mo
582.067 286.308 582.001 286.342 581.969 286.375 cv
581.928 286.428 581.908 286.484 581.908 286.545 cv
581.908 286.614 581.933 286.674 581.984 286.724 cv
582.034 286.774 582.09 286.8 582.15 286.8 cv
582.187 286.8 582.246 286.788 582.326 286.763 cv
583.991 286.241 li
583.991 292.752 li
582.242 292.752 li
582.12 292.752 582.033 292.775 581.98 292.822 cv
581.928 292.869 581.902 292.931 581.902 293.008 cv
581.902 293.08 581.928 293.141 581.98 293.189 cv
582.033 293.238 582.12 293.263 582.242 293.263 cv
586.251 293.263 li
586.372 293.263 586.459 293.238 586.512 293.189 cv
586.564 293.141 586.59 293.08 586.59 293.008 cv
586.59 292.931 586.564 292.869 586.512 292.822 cv
586.459 292.775 586.372 292.752 586.251 292.752 cv
584.501 292.752 li
584.501 285.536 li
582.169 286.271 li
582.169 286.271 li
cp
f
323.176 333.687 mo
323.151 333.759 323.139 333.816 323.139 333.856 cv
323.139 333.921 323.162 333.978 323.212 334.026 cv
323.26 334.075 323.32 334.1 323.393 334.1 cv
323.45 334.1 323.501 334.082 323.545 334.048 cv
323.589 334.014 323.628 333.943 323.66 333.838 cv
325.714 327.278 li
325.714 326.464 li
321.031 326.464 li
321.031 327.431 li
321.031 327.552 321.055 327.639 321.104 327.691 cv
321.152 327.744 321.213 327.77 321.287 327.77 cv
321.361 327.77 321.424 327.744 321.471 327.691 cv
321.518 327.639 321.541 327.552 321.541 327.431 cv
321.541 326.98 li
325.197 326.98 li
325.197 327.211 li
323.176 333.687 li
323.176 333.687 li
cp
f
361.79 327.491 mo
361.912 327.491 361.999 327.468 362.051 327.421 cv
362.104 327.374 362.131 327.313 362.131 327.236 cv
362.131 327.159 362.104 327.097 362.051 327.051 cv
361.999 327.004 361.912 326.98 361.79 326.98 cv
359.907 326.98 li
359.786 326.98 359.699 327.004 359.646 327.051 cv
359.593 327.097 359.566 327.159 359.566 327.236 cv
359.566 327.313 359.593 327.374 359.646 327.421 cv
359.699 327.468 359.786 327.491 359.907 327.491 cv
360.85 327.491 li
360.85 331.755 li
360.85 332.156 360.744 332.517 360.536 332.836 cv
360.327 333.156 360.085 333.393 359.808 333.546 cv
359.529 333.701 359.223 333.778 358.887 333.778 cv
358.36 333.778 357.905 333.581 357.52 333.188 cv
357.137 332.796 356.943 332.318 356.943 331.755 cv
356.943 327.491 li
357.885 327.491 li
358.007 327.491 358.093 327.468 358.146 327.421 cv
358.198 327.374 358.226 327.313 358.226 327.236 cv
358.226 327.159 358.198 327.097 358.146 327.051 cv
358.093 327.004 358.007 326.98 357.885 326.98 cv
356.002 326.98 li
355.88 326.98 355.796 327.001 355.747 327.042 cv
355.689 327.094 355.662 327.159 355.662 327.236 cv
355.662 327.313 355.688 327.374 355.741 327.421 cv
355.793 327.468 355.88 327.491 356.002 327.491 cv
356.434 327.491 li
356.434 331.755 li
356.434 332.241 356.557 332.686 356.804 333.088 cv
357.051 333.491 357.351 333.792 357.703 333.99 cv
358.055 334.188 358.458 334.288 358.911 334.288 cv
359.588 334.288 360.165 334.045 360.643 333.559 cv
361.121 333.073 361.359 332.472 361.359 331.755 cv
361.359 327.491 li
361.79 327.491 li
361.79 327.491 li
cp
f
402.731 330.854 mo
402.731 331.63 402.569 332.312 402.246 332.897 cv
401.922 333.482 401.477 333.775 400.909 333.775 cv
400.618 333.775 400.357 333.702 400.126 333.556 cv
399.964 333.455 399.835 333.335 399.737 333.197 cv
399.563 332.951 399.408 332.619 399.273 332.202 cv
399.137 331.784 399.068 331.335 399.068 330.854 cv
399.068 329.729 li
399.068 328.952 399.23 328.271 399.556 327.688 cv
399.879 327.105 400.326 326.814 400.896 326.814 cv
401.186 326.814 401.444 326.885 401.675 327.026 cv
401.836 327.127 401.968 327.25 402.069 327.391 cv
402.24 327.638 402.393 327.97 402.528 328.384 cv
402.664 328.799 402.731 329.248 402.731 329.729 cv
402.731 330.854 li
402.731 330.854 li
cp
403.108 328.436 mo
403.043 328.192 402.942 327.924 402.805 327.628 cv
402.667 327.333 402.537 327.115 402.415 326.978 cv
402.23 326.764 402.004 326.597 401.742 326.477 cv
401.479 326.357 401.194 326.298 400.892 326.298 cv
400.268 326.298 399.752 326.549 399.342 327.051 cv
398.819 327.691 398.559 328.562 398.559 329.663 cv
398.559 330.926 li
398.559 331.392 398.605 331.799 398.699 332.146 cv
398.759 332.394 398.859 332.666 399 332.961 cv
399.139 333.256 399.268 333.471 399.385 333.605 cv
399.571 333.819 399.797 333.986 400.063 334.105 cv
400.327 334.226 400.61 334.285 400.909 334.285 cv
401.533 334.285 402.05 334.034 402.459 333.532 cv
402.981 332.892 403.242 332.023 403.242 330.926 cv
403.242 329.663 li
403.242 329.193 403.197 328.784 403.108 328.436 cv
403.108 328.436 li
403.108 328.436 li
cp
f
449.122 330.854 mo
449.122 331.63 448.96 332.312 448.637 332.897 cv
448.313 333.482 447.867 333.775 447.3 333.775 cv
447.009 333.775 446.747 333.702 446.517 333.556 cv
446.354 333.455 446.225 333.335 446.128 333.197 cv
445.953 332.951 445.798 332.619 445.663 332.202 cv
445.527 331.784 445.46 331.335 445.46 330.854 cv
445.46 329.729 li
445.46 328.952 445.622 328.271 445.945 327.688 cv
446.27 327.105 446.717 326.814 447.288 326.814 cv
447.575 326.814 447.835 326.885 448.064 327.026 cv
448.228 327.127 448.359 327.25 448.46 327.391 cv
448.63 327.638 448.782 327.97 448.919 328.384 cv
449.055 328.799 449.122 329.248 449.122 329.729 cv
449.122 330.854 li
449.122 330.854 li
cp
449.499 328.436 mo
449.434 328.192 449.332 327.924 449.195 327.628 cv
449.058 327.333 448.928 327.115 448.807 326.978 cv
448.62 326.764 448.396 326.597 448.132 326.477 cv
447.869 326.357 447.586 326.298 447.281 326.298 cv
446.658 326.298 446.142 326.549 445.733 327.051 cv
445.211 327.691 444.949 328.562 444.949 329.663 cv
444.949 330.926 li
444.949 331.392 444.996 331.799 445.089 332.146 cv
445.15 332.394 445.251 332.666 445.39 332.961 cv
445.53 333.256 445.658 333.471 445.775 333.605 cv
445.962 333.819 446.188 333.986 446.453 334.105 cv
446.718 334.226 447 334.285 447.3 334.285 cv
447.924 334.285 448.439 334.034 448.849 333.532 cv
449.371 332.892 449.632 332.023 449.632 330.926 cv
449.632 329.663 li
449.632 329.193 449.588 328.784 449.499 328.436 cv
449.499 328.436 li
449.499 328.436 li
cp
f
491.156 330.854 mo
491.156 331.63 490.993 332.312 490.67 332.897 cv
490.347 333.482 489.901 333.775 489.334 333.775 cv
489.042 333.775 488.781 333.702 488.551 333.556 cv
488.389 333.455 488.259 333.335 488.162 333.197 cv
487.987 332.951 487.833 332.619 487.696 332.202 cv
487.562 331.784 487.493 331.335 487.493 330.854 cv
487.493 329.729 li
487.493 328.952 487.655 328.271 487.979 327.688 cv
488.303 327.105 488.751 326.814 489.321 326.814 cv
489.609 326.814 489.868 326.885 490.1 327.026 cv
490.261 327.127 490.393 327.25 490.493 327.391 cv
490.664 327.638 490.817 327.97 490.953 328.384 cv
491.088 328.799 491.156 329.248 491.156 329.729 cv
491.156 330.854 li
491.156 330.854 li
cp
491.532 328.436 mo
491.468 328.192 491.367 327.924 491.229 327.628 cv
491.092 327.333 490.962 327.115 490.84 326.978 cv
490.653 326.764 490.43 326.597 490.166 326.477 cv
489.902 326.357 489.619 326.298 489.315 326.298 cv
488.691 326.298 488.176 326.549 487.767 327.051 cv
487.245 327.691 486.983 328.562 486.983 329.663 cv
486.983 330.926 li
486.983 331.392 487.029 331.799 487.123 332.146 cv
487.184 332.394 487.284 332.666 487.423 332.961 cv
487.563 333.256 487.691 333.471 487.809 333.605 cv
487.996 333.819 488.221 333.986 488.486 334.105 cv
488.752 334.226 489.034 334.285 489.334 334.285 cv
489.957 334.285 490.475 334.034 490.883 333.532 cv
491.404 332.892 491.666 332.023 491.666 330.926 cv
491.666 329.663 li
491.666 329.193 491.621 328.784 491.532 328.436 cv
491.532 328.436 li
491.532 328.436 li
cp
f
537.531 330.854 mo
537.531 331.63 537.369 332.312 537.045 332.897 cv
536.721 333.482 536.275 333.775 535.708 333.775 cv
535.417 333.775 535.156 333.702 534.925 333.556 cv
534.764 333.455 534.634 333.335 534.536 333.197 cv
534.362 332.951 534.207 332.619 534.072 332.202 cv
533.936 331.784 533.868 331.335 533.868 330.854 cv
533.868 329.729 li
533.868 328.952 534.03 328.271 534.354 327.688 cv
534.678 327.105 535.125 326.814 535.697 326.814 cv
535.984 326.814 536.242 326.885 536.475 327.026 cv
536.636 327.127 536.768 327.25 536.869 327.391 cv
537.039 327.638 537.192 327.97 537.327 328.384 cv
537.463 328.799 537.531 329.248 537.531 329.729 cv
537.531 330.854 li
537.531 330.854 li
cp
537.908 328.436 mo
537.843 328.192 537.742 327.924 537.604 327.628 cv
537.466 327.333 537.337 327.115 537.215 326.978 cv
537.028 326.764 536.804 326.597 536.541 326.477 cv
536.278 326.357 535.994 326.298 535.69 326.298 cv
535.067 326.298 534.552 326.549 534.141 327.051 cv
533.619 327.691 533.358 328.562 533.358 329.663 cv
533.358 330.926 li
533.358 331.392 533.404 331.799 533.497 332.146 cv
533.559 332.394 533.659 332.666 533.799 332.961 cv
533.938 333.256 534.067 333.471 534.185 333.605 cv
534.37 333.819 534.597 333.986 534.861 334.105 cv
535.126 334.226 535.408 334.285 535.708 334.285 cv
536.332 334.285 536.849 334.034 537.258 333.532 cv
537.78 332.892 538.042 332.023 538.042 330.926 cv
538.042 329.663 li
538.042 329.193 537.997 328.784 537.908 328.436 cv
537.908 328.436 li
537.908 328.436 li
cp
f
586.144 330.854 mo
586.144 331.63 585.98 332.312 585.657 332.897 cv
585.332 333.482 584.888 333.775 584.321 333.775 cv
584.029 333.775 583.768 333.702 583.537 333.556 cv
583.376 333.455 583.246 333.335 583.148 333.197 cv
582.975 332.951 582.82 332.619 582.684 332.202 cv
582.548 331.784 582.48 331.335 582.48 330.854 cv
582.48 329.729 li
582.48 328.952 582.643 328.271 582.966 327.688 cv
583.29 327.105 583.737 326.814 584.309 326.814 cv
584.596 326.814 584.854 326.885 585.087 327.026 cv
585.248 327.127 585.379 327.25 585.48 327.391 cv
585.651 327.638 585.804 327.97 585.939 328.384 cv
586.075 328.799 586.144 329.248 586.144 329.729 cv
586.144 330.854 li
586.144 330.854 li
cp
586.52 328.436 mo
586.455 328.192 586.354 327.924 586.216 327.628 cv
586.078 327.333 585.949 327.115 585.827 326.978 cv
585.641 326.764 585.416 326.597 585.152 326.477 cv
584.889 326.357 584.605 326.298 584.303 326.298 cv
583.679 326.298 583.162 326.549 582.754 327.051 cv
582.23 327.691 581.97 328.562 581.97 329.663 cv
581.97 330.926 li
581.97 331.392 582.017 331.799 582.109 332.146 cv
582.17 332.394 582.271 332.666 582.41 332.961 cv
582.55 333.256 582.679 333.471 582.796 333.605 cv
582.982 333.819 583.208 333.986 583.474 334.105 cv
583.738 334.226 584.021 334.285 584.321 334.285 cv
584.943 334.285 585.461 334.034 585.869 333.532 cv
586.392 332.892 586.652 332.023 586.652 330.926 cv
586.652 329.663 li
586.652 329.193 586.608 328.784 586.52 328.436 cv
586.52 328.436 li
586.52 328.436 li
cp
f
324.781 353.825 mo
324.432 354.166 323.998 354.335 323.484 354.335 cv
322.971 354.335 322.538 354.166 322.188 353.825 cv
321.837 353.485 321.662 353.084 321.662 352.623 cv
321.662 352.178 321.836 351.789 322.185 351.457 cv
322.532 351.125 322.967 350.958 323.484 350.958 cv
324.004 350.958 324.436 351.125 324.784 351.457 cv
325.133 351.789 325.307 352.179 325.307 352.629 cv
325.307 353.086 325.131 353.485 324.781 353.825 cv
324.781 353.825 li
cp
324.684 350.008 mo
324.362 350.306 323.961 350.455 323.479 350.455 cv
323 350.455 322.602 350.306 322.278 350.008 cv
321.957 349.71 321.795 349.363 321.795 348.966 cv
321.795 348.537 321.959 348.165 322.285 347.849 cv
322.61 347.533 323.008 347.375 323.479 347.375 cv
323.951 347.375 324.352 347.532 324.678 347.846 cv
325.004 348.16 325.167 348.535 325.167 348.972 cv
325.167 349.365 325.007 349.71 324.684 350.008 cv
324.684 350.008 li
cp
325.336 350.035 mo
325.572 349.711 325.689 349.351 325.689 348.954 cv
325.689 348.396 325.475 347.906 325.045 347.487 cv
324.616 347.068 324.096 346.859 323.484 346.859 cv
322.877 346.859 322.357 347.068 321.927 347.487 cv
321.496 347.906 321.279 348.396 321.279 348.954 cv
321.279 349.351 321.396 349.713 321.632 350.041 cv
321.803 350.272 322.073 350.494 322.445 350.709 cv
322.017 350.92 321.694 351.194 321.478 351.532 cv
321.26 351.871 321.152 352.232 321.152 352.617 cv
321.152 353.221 321.379 353.743 321.832 354.184 cv
322.287 354.625 322.836 354.846 323.484 354.846 cv
324.133 354.846 324.683 354.625 325.137 354.184 cv
325.59 353.743 325.817 353.221 325.817 352.617 cv
325.817 352.228 325.709 351.865 325.492 351.527 cv
325.275 351.188 324.955 350.917 324.529 350.709 cv
324.901 350.494 325.172 350.27 325.336 350.035 cv
325.336 350.035 li
325.336 350.035 li
cp
f
362.027 352.006 mo
362.068 351.992 362.104 351.963 362.137 351.918 cv
362.169 351.874 362.186 351.825 362.186 351.772 cv
362.186 351.695 362.159 351.633 362.105 351.587 cv
362.054 351.541 361.967 351.518 361.845 351.518 cv
359.392 351.512 li
359.271 351.512 359.183 351.535 359.13 351.584 cv
359.077 351.632 359.051 351.695 359.051 351.772 cv
359.051 351.85 359.077 351.911 359.13 351.958 cv
359.183 352.004 359.271 352.028 359.392 352.028 cv
361.146 352.028 li
361.146 353.917 li
360.794 354.078 360.486 354.191 360.223 354.256 cv
359.96 354.321 359.675 354.354 359.366 354.354 cv
358.455 354.354 357.741 354.104 357.223 353.607 cv
356.704 353.108 356.445 352.437 356.445 351.59 cv
356.445 350.661 li
356.445 350.184 356.554 349.756 356.773 349.38 cv
357.102 348.804 357.455 348.415 357.833 348.21 cv
358.212 348.006 358.637 347.903 359.105 347.903 cv
359.604 347.903 360.065 348.013 360.487 348.231 cv
360.91 348.45 361.134 348.731 361.158 349.076 cv
361.162 349.193 361.188 349.275 361.234 349.321 cv
361.281 349.368 361.339 349.391 361.407 349.391 cv
361.48 349.391 361.541 349.366 361.59 349.316 cv
361.639 349.265 361.663 349.177 361.663 349.052 cv
361.663 347.897 li
361.663 347.776 361.639 347.689 361.59 347.636 cv
361.541 347.583 361.48 347.557 361.407 347.557 cv
361.351 347.557 361.3 347.572 361.256 347.602 cv
361.211 347.633 361.183 347.668 361.167 347.709 cv
361.154 347.749 361.146 347.869 361.146 348.067 cv
360.579 347.618 359.885 347.393 359.063 347.393 cv
358.496 347.393 357.972 347.533 357.49 347.813 cv
357.009 348.092 356.628 348.495 356.352 349.024 cv
356.074 349.553 355.936 350.096 355.936 350.655 cv
355.936 351.59 li
355.936 352.145 356.015 352.602 356.175 352.963 cv
356.336 353.323 356.559 353.648 356.846 353.941 cv
357.134 354.232 357.485 354.459 357.9 354.621 cv
358.314 354.783 358.796 354.863 359.343 354.863 cv
359.728 354.863 360.112 354.81 360.499 354.7 cv
360.886 354.59 361.274 354.429 361.663 354.214 cv
361.663 352.028 li
361.866 352.028 361.986 352.021 362.027 352.006 cv
362.027 352.006 li
cp
f
402.731 351.429 mo
402.731 352.207 402.569 352.888 402.246 353.474 cv
401.922 354.058 401.477 354.352 400.909 354.352 cv
400.618 354.352 400.357 354.278 400.126 354.132 cv
399.964 354.031 399.835 353.912 399.737 353.774 cv
399.563 353.527 399.408 353.195 399.273 352.778 cv
399.137 352.361 399.068 351.911 399.068 351.429 cv
399.068 350.306 li
399.068 349.529 399.23 348.848 399.556 348.265 cv
399.879 347.683 400.326 347.391 400.896 347.391 cv
401.186 347.391 401.444 347.461 401.675 347.603 cv
401.836 347.704 401.968 347.826 402.069 347.968 cv
402.24 348.214 402.393 348.545 402.528 348.96 cv
402.664 349.375 402.731 349.824 402.731 350.306 cv
402.731 351.429 li
402.731 351.429 li
cp
403.108 349.012 mo
403.043 348.769 402.942 348.5 402.805 348.204 cv
402.667 347.909 402.537 347.692 402.415 347.555 cv
402.23 347.34 402.004 347.173 401.742 347.054 cv
401.479 346.934 401.194 346.874 400.892 346.874 cv
400.268 346.874 399.752 347.125 399.342 347.627 cv
398.819 348.267 398.559 349.138 398.559 350.239 cv
398.559 351.502 li
398.559 351.968 398.605 352.375 398.699 352.724 cv
398.759 352.971 398.859 353.242 399 353.537 cv
399.139 353.833 399.268 354.048 399.385 354.181 cv
399.571 354.396 399.797 354.563 400.063 354.683 cv
400.327 354.801 400.61 354.861 400.909 354.861 cv
401.533 354.861 402.05 354.61 402.459 354.108 cv
402.981 353.469 403.242 352.6 403.242 351.502 cv
403.242 350.239 li
403.242 349.77 403.197 349.36 403.108 349.012 cv
403.108 349.012 li
403.108 349.012 li
cp
f
449.122 351.429 mo
449.122 352.207 448.96 352.888 448.637 353.474 cv
448.313 354.058 447.867 354.352 447.3 354.352 cv
447.009 354.352 446.747 354.278 446.517 354.132 cv
446.354 354.031 446.225 353.912 446.128 353.774 cv
445.953 353.527 445.798 353.195 445.663 352.778 cv
445.527 352.361 445.46 351.911 445.46 351.429 cv
445.46 350.306 li
445.46 349.529 445.622 348.848 445.945 348.265 cv
446.27 347.683 446.717 347.391 447.288 347.391 cv
447.575 347.391 447.835 347.461 448.064 347.603 cv
448.228 347.704 448.359 347.826 448.46 347.968 cv
448.63 348.214 448.782 348.545 448.919 348.96 cv
449.055 349.375 449.122 349.824 449.122 350.306 cv
449.122 351.429 li
449.122 351.429 li
cp
449.499 349.012 mo
449.434 348.769 449.332 348.5 449.195 348.204 cv
449.058 347.909 448.928 347.692 448.807 347.555 cv
448.62 347.34 448.396 347.173 448.132 347.054 cv
447.869 346.934 447.586 346.874 447.281 346.874 cv
446.658 346.874 446.142 347.125 445.733 347.627 cv
445.211 348.267 444.949 349.138 444.949 350.239 cv
444.949 351.502 li
444.949 351.968 444.996 352.375 445.089 352.724 cv
445.15 352.971 445.251 353.242 445.39 353.537 cv
445.53 353.833 445.658 354.048 445.775 354.181 cv
445.962 354.396 446.188 354.563 446.453 354.683 cv
446.718 354.801 447 354.861 447.3 354.861 cv
447.924 354.861 448.439 354.61 448.849 354.108 cv
449.371 353.469 449.632 352.6 449.632 351.502 cv
449.632 350.239 li
449.632 349.77 449.588 349.36 449.499 349.012 cv
449.499 349.012 li
449.499 349.012 li
cp
f
491.156 351.429 mo
491.156 352.207 490.993 352.888 490.67 353.474 cv
490.347 354.058 489.901 354.352 489.334 354.352 cv
489.042 354.352 488.781 354.278 488.551 354.132 cv
488.389 354.031 488.259 353.912 488.162 353.774 cv
487.987 353.527 487.833 353.195 487.696 352.778 cv
487.562 352.361 487.493 351.911 487.493 351.429 cv
487.493 350.306 li
487.493 349.529 487.655 348.848 487.979 348.265 cv
488.303 347.683 488.751 347.391 489.321 347.391 cv
489.609 347.391 489.868 347.461 490.1 347.603 cv
490.261 347.704 490.393 347.826 490.493 347.968 cv
490.664 348.214 490.817 348.545 490.953 348.96 cv
491.088 349.375 491.156 349.824 491.156 350.306 cv
491.156 351.429 li
491.156 351.429 li
cp
491.532 349.012 mo
491.468 348.769 491.367 348.5 491.229 348.204 cv
491.092 347.909 490.962 347.692 490.84 347.555 cv
490.653 347.34 490.43 347.173 490.166 347.054 cv
489.902 346.934 489.619 346.874 489.315 346.874 cv
488.691 346.874 488.176 347.125 487.767 347.627 cv
487.245 348.267 486.983 349.138 486.983 350.239 cv
486.983 351.502 li
486.983 351.968 487.029 352.375 487.123 352.724 cv
487.184 352.971 487.284 353.242 487.423 353.537 cv
487.563 353.833 487.691 354.048 487.809 354.181 cv
487.996 354.396 488.221 354.563 488.486 354.683 cv
488.752 354.801 489.034 354.861 489.334 354.861 cv
489.957 354.861 490.475 354.61 490.883 354.108 cv
491.404 353.469 491.666 352.6 491.666 351.502 cv
491.666 350.239 li
491.666 349.77 491.621 349.36 491.532 349.012 cv
491.532 349.012 li
491.532 349.012 li
cp
f
537.531 351.429 mo
537.531 352.207 537.369 352.888 537.045 353.474 cv
536.721 354.058 536.275 354.352 535.708 354.352 cv
535.417 354.352 535.156 354.278 534.925 354.132 cv
534.764 354.031 534.634 353.912 534.536 353.774 cv
534.362 353.527 534.207 353.195 534.072 352.778 cv
533.936 352.361 533.868 351.911 533.868 351.429 cv
533.868 350.306 li
533.868 349.529 534.03 348.848 534.354 348.265 cv
534.678 347.683 535.125 347.391 535.697 347.391 cv
535.984 347.391 536.242 347.461 536.475 347.603 cv
536.636 347.704 536.768 347.826 536.869 347.968 cv
537.039 348.214 537.192 348.545 537.327 348.96 cv
537.463 349.375 537.531 349.824 537.531 350.306 cv
537.531 351.429 li
537.531 351.429 li
cp
537.908 349.012 mo
537.843 348.769 537.742 348.5 537.604 348.204 cv
537.466 347.909 537.337 347.692 537.215 347.555 cv
537.028 347.34 536.804 347.173 536.541 347.054 cv
536.278 346.934 535.994 346.874 535.69 346.874 cv
535.067 346.874 534.552 347.125 534.141 347.627 cv
533.619 348.267 533.358 349.138 533.358 350.239 cv
533.358 351.502 li
533.358 351.968 533.404 352.375 533.497 352.724 cv
533.559 352.971 533.659 353.242 533.799 353.537 cv
533.938 353.833 534.067 354.048 534.185 354.181 cv
534.37 354.396 534.597 354.563 534.861 354.683 cv
535.126 354.801 535.408 354.861 535.708 354.861 cv
536.332 354.861 536.849 354.61 537.258 354.108 cv
537.78 353.469 538.042 352.6 538.042 351.502 cv
538.042 350.239 li
538.042 349.77 537.997 349.36 537.908 349.012 cv
537.908 349.012 li
537.908 349.012 li
cp
f
324.899 371.043 mo
324.693 371.302 324.474 371.496 324.24 371.626 cv
324.008 371.755 323.771 371.82 323.533 371.82 cv
323.121 371.82 322.75 371.639 322.422 371.277 cv
322.094 370.915 321.93 370.456 321.93 369.901 cv
321.93 369.33 322.094 368.862 322.422 368.498 cv
322.75 368.134 323.131 367.952 323.563 367.952 cv
323.988 367.952 324.36 368.1 324.678 368.397 cv
324.996 368.695 325.262 369.255 325.477 370.077 cv
325.227 370.547 325.034 370.869 324.899 371.043 cv
324.899 371.043 li
324.899 371.043 li
cp
325.6 371.645 mo
325.6 372.579 325.289 373.358 324.669 373.979 cv
324.049 374.602 323.309 374.912 322.445 374.912 cv
322.239 374.912 322.057 374.873 321.899 374.796 cv
321.806 374.752 321.734 374.729 321.687 374.729 cv
321.617 374.729 321.559 374.753 321.511 374.799 cv
321.462 374.846 321.438 374.904 321.438 374.973 cv
321.438 375.07 321.49 375.151 321.596 375.216 cv
321.826 375.354 322.123 375.422 322.488 375.422 cv
323.039 375.422 323.57 375.294 324.079 375.04 cv
324.453 374.849 324.787 374.603 325.085 374.298 cv
325.383 373.995 325.608 373.682 325.763 373.357 cv
325.992 372.879 326.109 372.28 326.109 371.559 cv
326.109 370.632 325.973 369.818 325.701 369.117 cv
325.49 368.571 325.195 368.154 324.814 367.866 cv
324.435 367.579 324.013 367.435 323.552 367.435 cv
322.904 367.435 322.387 367.691 322 368.203 cv
321.613 368.716 321.42 369.284 321.42 369.907 cv
321.42 370.336 321.517 370.746 321.711 371.137 cv
321.905 371.528 322.168 371.824 322.498 372.027 cv
322.827 372.229 323.17 372.33 323.521 372.33 cv
323.901 372.33 324.272 372.213 324.635 371.978 cv
324.998 371.744 325.311 371.394 325.574 370.927 cv
325.59 371.235 325.6 371.474 325.6 371.645 cv
325.6 371.645 li
325.6 371.645 li
cp
f
357.411 372.355 mo
358.777 368.644 li
358.965 368.644 li
360.376 372.355 li
357.411 372.355 li
357.411 372.355 li
cp
361.268 374.729 mo
360.296 374.729 li
360.171 374.729 360.082 374.753 360.029 374.799 cv
359.977 374.846 359.949 374.908 359.949 374.985 cv
359.949 375.058 359.977 375.118 360.029 375.167 cv
360.082 375.216 360.171 375.24 360.296 375.24 cv
362.197 375.24 li
362.318 375.24 362.405 375.216 362.459 375.167 cv
362.512 375.118 362.538 375.058 362.538 374.985 cv
362.538 374.908 362.512 374.846 362.459 374.799 cv
362.405 374.753 362.318 374.729 362.197 374.729 cv
361.803 374.729 li
359.312 368.134 li
356.743 368.134 li
356.621 368.134 356.535 368.157 356.481 368.203 cv
356.429 368.25 356.402 368.312 356.402 368.389 cv
356.402 368.465 356.429 368.528 356.481 368.574 cv
356.535 368.62 356.621 368.644 356.743 368.644 cv
358.249 368.644 li
355.996 374.729 li
355.602 374.729 li
355.48 374.729 355.393 374.753 355.34 374.799 cv
355.287 374.846 355.262 374.908 355.262 374.985 cv
355.262 375.058 355.287 375.118 355.34 375.167 cv
355.393 375.216 355.48 375.24 355.602 375.24 cv
357.509 375.24 li
357.63 375.24 357.717 375.216 357.77 375.167 cv
357.822 375.118 357.848 375.058 357.848 374.985 cv
357.848 374.908 357.822 374.846 357.77 374.799 cv
357.717 374.753 357.63 374.729 357.509 374.729 cv
356.53 374.729 li
357.217 372.865 li
360.569 372.865 li
361.268 374.729 li
361.268 374.729 li
cp
f
398.819 368.265 mo
398.719 368.301 398.651 368.335 398.619 368.368 cv
398.579 368.42 398.559 368.478 398.559 368.538 cv
398.559 368.607 398.584 368.666 398.635 368.717 cv
398.685 368.768 398.74 368.793 398.802 368.793 cv
398.838 368.793 398.896 368.781 398.979 368.757 cv
400.642 368.234 li
400.642 374.745 li
398.893 374.745 li
398.771 374.745 398.685 374.769 398.632 374.815 cv
398.579 374.862 398.553 374.924 398.553 375 cv
398.553 375.073 398.579 375.135 398.632 375.182 cv
398.685 375.231 398.771 375.255 398.893 375.255 cv
402.902 375.255 li
403.023 375.255 403.11 375.231 403.163 375.182 cv
403.215 375.135 403.242 375.073 403.242 375 cv
403.242 374.924 403.215 374.862 403.163 374.815 cv
403.11 374.769 403.023 374.745 402.902 374.745 cv
401.152 374.745 li
401.152 367.53 li
398.819 368.265 li
398.819 368.265 li
cp
f
445.211 368.265 mo
445.109 368.301 445.043 368.335 445.01 368.368 cv
444.97 368.42 444.949 368.478 444.949 368.538 cv
444.949 368.607 444.975 368.666 445.024 368.717 cv
445.076 368.768 445.132 368.793 445.192 368.793 cv
445.229 368.793 445.288 368.781 445.369 368.757 cv
447.033 368.234 li
447.033 374.745 li
445.283 374.745 li
445.162 374.745 445.074 374.769 445.022 374.815 cv
444.97 374.862 444.943 374.924 444.943 375 cv
444.943 375.073 444.97 375.135 445.022 375.182 cv
445.074 375.231 445.162 375.255 445.283 375.255 cv
449.293 375.255 li
449.414 375.255 449.501 375.231 449.554 375.182 cv
449.605 375.135 449.632 375.073 449.632 375 cv
449.632 374.924 449.605 374.862 449.554 374.815 cv
449.501 374.769 449.414 374.745 449.293 374.745 cv
447.543 374.745 li
447.543 367.53 li
445.211 368.265 li
445.211 368.265 li
cp
f
491.156 372.006 mo
491.156 372.783 490.993 373.465 490.67 374.05 cv
490.347 374.635 489.901 374.927 489.334 374.927 cv
489.042 374.927 488.781 374.855 488.551 374.709 cv
488.389 374.607 488.259 374.488 488.162 374.351 cv
487.987 374.104 487.833 373.771 487.696 373.354 cv
487.562 372.938 487.493 372.488 487.493 372.006 cv
487.493 370.883 li
487.493 370.104 487.655 369.424 487.979 368.841 cv
488.303 368.258 488.751 367.967 489.321 367.967 cv
489.609 367.967 489.868 368.038 490.1 368.179 cv
490.261 368.281 490.393 368.402 490.493 368.543 cv
490.664 368.791 490.817 369.122 490.953 369.537 cv
491.088 369.952 491.156 370.401 491.156 370.883 cv
491.156 372.006 li
491.156 372.006 li
cp
491.532 369.589 mo
491.468 369.346 491.367 369.076 491.229 368.781 cv
491.092 368.485 490.962 368.269 490.84 368.131 cv
490.653 367.917 490.43 367.749 490.166 367.629 cv
489.902 367.51 489.619 367.451 489.315 367.451 cv
488.691 367.451 488.176 367.702 487.767 368.203 cv
487.245 368.844 486.983 369.714 486.983 370.815 cv
486.983 372.079 li
486.983 372.545 487.029 372.951 487.123 373.3 cv
487.184 373.547 487.284 373.818 487.423 374.114 cv
487.563 374.409 487.691 374.624 487.809 374.758 cv
487.996 374.972 488.221 375.139 488.486 375.259 cv
488.752 375.378 489.034 375.438 489.334 375.438 cv
489.957 375.438 490.475 375.187 490.883 374.685 cv
491.404 374.045 491.666 373.176 491.666 372.079 cv
491.666 370.815 li
491.666 370.346 491.621 369.937 491.532 369.589 cv
491.532 369.589 li
491.532 369.589 li
cp
f
537.531 372.006 mo
537.531 372.783 537.369 373.465 537.045 374.05 cv
536.721 374.635 536.275 374.927 535.708 374.927 cv
535.417 374.927 535.156 374.855 534.925 374.709 cv
534.764 374.607 534.634 374.488 534.536 374.351 cv
534.362 374.104 534.207 373.771 534.072 373.354 cv
533.936 372.938 533.868 372.488 533.868 372.006 cv
533.868 370.883 li
533.868 370.104 534.03 369.424 534.354 368.841 cv
534.678 368.258 535.125 367.967 535.697 367.967 cv
535.984 367.967 536.242 368.038 536.475 368.179 cv
536.636 368.281 536.768 368.402 536.869 368.543 cv
537.039 368.791 537.192 369.122 537.327 369.537 cv
537.463 369.952 537.531 370.401 537.531 370.883 cv
537.531 372.006 li
537.531 372.006 li
cp
537.908 369.589 mo
537.843 369.346 537.742 369.076 537.604 368.781 cv
537.466 368.485 537.337 368.269 537.215 368.131 cv
537.028 367.917 536.804 367.749 536.541 367.629 cv
536.278 367.51 535.994 367.451 535.69 367.451 cv
535.067 367.451 534.552 367.702 534.141 368.203 cv
533.619 368.844 533.358 369.714 533.358 370.815 cv
533.358 372.079 li
533.358 372.545 533.404 372.951 533.497 373.3 cv
533.559 373.547 533.659 373.818 533.799 374.114 cv
533.938 374.409 534.067 374.624 534.185 374.758 cv
534.37 374.972 534.597 375.139 534.861 375.259 cv
535.126 375.378 535.408 375.438 535.708 375.438 cv
536.332 375.438 536.849 375.187 537.258 374.685 cv
537.78 374.045 538.042 373.176 538.042 372.079 cv
538.042 370.815 li
538.042 370.346 537.997 369.937 537.908 369.589 cv
537.908 369.589 li
537.908 369.589 li
cp
f
582.234 347.724 mo
582.133 347.761 582.066 347.795 582.034 347.828 cv
581.993 347.88 581.974 347.938 581.974 347.998 cv
581.974 348.066 581.998 348.126 582.049 348.177 cv
582.1 348.227 582.155 348.252 582.216 348.252 cv
582.253 348.252 582.312 348.241 582.393 348.216 cv
584.057 347.693 li
584.057 354.205 li
582.308 354.205 li
582.186 354.205 582.099 354.229 582.047 354.275 cv
581.993 354.321 581.967 354.383 581.967 354.46 cv
581.967 354.533 581.993 354.594 582.047 354.642 cv
582.099 354.691 582.186 354.715 582.308 354.715 cv
586.316 354.715 li
586.438 354.715 586.524 354.691 586.578 354.642 cv
586.63 354.594 586.655 354.533 586.655 354.46 cv
586.655 354.383 586.63 354.321 586.578 354.275 cv
586.524 354.229 586.438 354.205 586.316 354.205 cv
584.566 354.205 li
584.566 346.99 li
582.234 347.724 li
582.234 347.724 li
cp
f
329.049 392.583 mo
329.049 393.36 328.887 394.041 328.563 394.626 cv
328.238 395.212 327.793 395.504 327.227 395.504 cv
326.936 395.504 326.674 395.431 326.443 395.286 cv
326.281 395.185 326.151 395.065 326.055 394.927 cv
325.881 394.68 325.725 394.348 325.59 393.931 cv
325.453 393.514 325.387 393.065 325.387 392.583 cv
325.387 391.458 li
325.387 390.682 325.549 390.001 325.872 389.418 cv
326.196 388.835 326.645 388.543 327.215 388.543 cv
327.501 388.543 327.762 388.614 327.992 388.756 cv
328.154 388.857 328.285 388.979 328.387 389.12 cv
328.557 389.368 328.711 389.698 328.846 390.114 cv
328.981 390.528 329.049 390.977 329.049 391.458 cv
329.049 392.583 li
329.049 392.583 li
cp
329.426 390.166 mo
329.36 389.922 329.26 389.653 329.121 389.357 cv
328.984 389.062 328.855 388.845 328.732 388.707 cv
328.547 388.492 328.322 388.326 328.059 388.207 cv
327.795 388.087 327.512 388.027 327.209 388.027 cv
326.585 388.027 326.069 388.278 325.66 388.78 cv
325.137 389.42 324.875 390.29 324.875 391.392 cv
324.875 392.655 li
324.875 393.121 324.923 393.528 325.016 393.876 cv
325.076 394.124 325.178 394.395 325.316 394.69 cv
325.456 394.986 325.585 395.2 325.702 395.334 cv
325.889 395.548 326.114 395.716 326.38 395.835 cv
326.645 395.955 326.928 396.014 327.227 396.014 cv
327.85 396.014 328.365 395.763 328.775 395.262 cv
329.298 394.622 329.56 393.752 329.56 392.655 cv
329.56 391.392 li
329.56 390.922 329.514 390.513 329.426 390.166 cv
329.426 390.166 li
329.426 390.166 li
cp
317.66 388.841 mo
317.559 388.878 317.492 388.912 317.46 388.944 cv
317.419 388.997 317.398 389.053 317.398 389.114 cv
317.398 389.183 317.424 389.243 317.474 389.293 cv
317.525 389.344 317.581 389.369 317.642 389.369 cv
317.678 389.369 317.737 389.357 317.818 389.333 cv
319.482 388.811 li
319.482 395.322 li
317.732 395.322 li
317.611 395.322 317.524 395.345 317.471 395.392 cv
317.419 395.439 317.393 395.5 317.393 395.577 cv
317.393 395.65 317.419 395.71 317.471 395.759 cv
317.524 395.808 317.611 395.832 317.732 395.832 cv
321.74 395.832 li
321.863 395.832 321.95 395.808 322.004 395.759 cv
322.056 395.71 322.082 395.65 322.082 395.577 cv
322.082 395.5 322.056 395.439 322.004 395.392 cv
321.95 395.345 321.863 395.322 321.74 395.322 cv
319.992 395.322 li
319.992 388.106 li
317.66 388.841 li
317.66 388.841 li
cp
f
358.959 388.562 mo
358.413 388.562 357.906 388.702 357.438 388.983 cv
356.971 389.265 356.603 389.667 356.333 390.192 cv
356.063 390.717 355.929 391.23 355.929 391.731 cv
355.929 392.771 li
355.929 393.124 355.98 393.446 356.081 393.74 cv
356.182 394.034 356.372 394.353 356.648 394.7 cv
356.926 395.045 357.16 395.292 357.351 395.437 cv
357.541 395.583 357.781 395.71 358.073 395.82 cv
358.453 395.962 358.829 396.032 359.197 396.032 cv
359.621 396.032 360.042 395.938 360.457 395.75 cv
360.872 395.562 361.246 395.281 361.577 394.909 cv
361.752 394.719 361.839 394.577 361.839 394.483 cv
361.839 394.415 361.816 394.358 361.771 394.313 cv
361.728 394.269 361.669 394.247 361.596 394.247 cv
361.511 394.247 361.434 394.289 361.366 394.375 cv
361.041 394.759 360.706 395.047 360.36 395.237 cv
360.014 395.427 359.621 395.522 359.185 395.522 cv
358.455 395.522 357.816 395.242 357.265 394.681 cv
356.714 394.121 356.439 393.459 356.439 392.698 cv
356.439 391.805 li
356.439 391.449 356.496 391.129 356.608 390.846 cv
356.768 390.461 356.98 390.111 357.247 389.795 cv
357.4 389.612 357.608 389.458 357.866 389.333 cv
358.215 389.159 358.585 389.072 358.978 389.072 cv
359.577 389.072 360.111 389.252 360.582 389.612 cv
360.931 389.875 361.114 390.177 361.134 390.518 cv
361.143 390.627 361.17 390.706 361.216 390.754 cv
361.263 390.803 361.321 390.827 361.389 390.827 cv
361.467 390.827 361.528 390.801 361.575 390.749 cv
361.622 390.695 361.645 390.606 361.645 390.481 cv
361.645 389.065 li
361.645 388.944 361.622 388.857 361.575 388.805 cv
361.528 388.752 361.467 388.725 361.389 388.725 cv
361.313 388.725 361.25 388.752 361.204 388.805 cv
361.158 388.857 361.134 388.944 361.134 389.065 cv
361.134 389.424 li
360.527 388.85 359.803 388.562 358.959 388.562 cv
358.959 388.562 li
358.959 388.562 li
cp
f
398.819 388.841 mo
398.719 388.878 398.651 388.912 398.619 388.944 cv
398.579 388.997 398.559 389.053 398.559 389.114 cv
398.559 389.183 398.584 389.243 398.635 389.293 cv
398.685 389.344 398.74 389.369 398.802 389.369 cv
398.838 389.369 398.896 389.357 398.979 389.333 cv
400.642 388.811 li
400.642 395.322 li
398.893 395.322 li
398.771 395.322 398.685 395.345 398.632 395.392 cv
398.579 395.439 398.553 395.5 398.553 395.577 cv
398.553 395.65 398.579 395.71 398.632 395.759 cv
398.685 395.808 398.771 395.832 398.893 395.832 cv
402.902 395.832 li
403.023 395.832 403.11 395.808 403.163 395.759 cv
403.215 395.71 403.242 395.65 403.242 395.577 cv
403.242 395.5 403.215 395.439 403.163 395.392 cv
403.11 395.345 403.023 395.322 402.902 395.322 cv
401.152 395.322 li
401.152 388.106 li
398.819 388.841 li
398.819 388.841 li
cp
f
445.211 388.841 mo
445.109 388.878 445.043 388.912 445.01 388.944 cv
444.97 388.997 444.949 389.053 444.949 389.114 cv
444.949 389.183 444.975 389.243 445.024 389.293 cv
445.076 389.344 445.132 389.369 445.192 389.369 cv
445.229 389.369 445.288 389.357 445.369 389.333 cv
447.033 388.811 li
447.033 395.322 li
445.283 395.322 li
445.162 395.322 445.074 395.345 445.022 395.392 cv
444.97 395.439 444.943 395.5 444.943 395.577 cv
444.943 395.65 444.97 395.71 445.022 395.759 cv
445.074 395.808 445.162 395.832 445.283 395.832 cv
449.293 395.832 li
449.414 395.832 449.501 395.808 449.554 395.759 cv
449.605 395.71 449.632 395.65 449.632 395.577 cv
449.632 395.5 449.605 395.439 449.554 395.392 cv
449.501 395.345 449.414 395.322 449.293 395.322 cv
447.543 395.322 li
447.543 388.106 li
445.211 388.841 li
445.211 388.841 li
cp
f
491.156 392.583 mo
491.156 393.36 490.993 394.041 490.67 394.626 cv
490.347 395.212 489.901 395.504 489.334 395.504 cv
489.042 395.504 488.781 395.431 488.551 395.286 cv
488.389 395.185 488.259 395.065 488.162 394.927 cv
487.987 394.68 487.833 394.348 487.696 393.931 cv
487.562 393.514 487.493 393.065 487.493 392.583 cv
487.493 391.458 li
487.493 390.682 487.655 390.001 487.979 389.418 cv
488.303 388.835 488.751 388.543 489.321 388.543 cv
489.609 388.543 489.868 388.614 490.1 388.756 cv
490.261 388.857 490.393 388.979 490.493 389.12 cv
490.664 389.368 490.817 389.698 490.953 390.114 cv
491.088 390.528 491.156 390.977 491.156 391.458 cv
491.156 392.583 li
491.156 392.583 li
cp
491.532 390.166 mo
491.468 389.922 491.367 389.653 491.229 389.357 cv
491.092 389.062 490.962 388.845 490.84 388.707 cv
490.653 388.492 490.43 388.326 490.166 388.207 cv
489.902 388.087 489.619 388.027 489.315 388.027 cv
488.691 388.027 488.176 388.278 487.767 388.78 cv
487.245 389.42 486.983 390.29 486.983 391.392 cv
486.983 392.655 li
486.983 393.121 487.029 393.528 487.123 393.876 cv
487.184 394.124 487.284 394.395 487.423 394.69 cv
487.563 394.986 487.691 395.2 487.809 395.334 cv
487.996 395.548 488.221 395.716 488.486 395.835 cv
488.752 395.955 489.034 396.014 489.334 396.014 cv
489.957 396.014 490.475 395.763 490.883 395.262 cv
491.404 394.622 491.666 393.752 491.666 392.655 cv
491.666 391.392 li
491.666 390.922 491.621 390.513 491.532 390.166 cv
491.532 390.166 li
491.532 390.166 li
cp
f
537.531 392.583 mo
537.531 393.36 537.369 394.041 537.045 394.626 cv
536.721 395.212 536.275 395.504 535.708 395.504 cv
535.417 395.504 535.156 395.431 534.925 395.286 cv
534.764 395.185 534.634 395.065 534.536 394.927 cv
534.362 394.68 534.207 394.348 534.072 393.931 cv
533.936 393.514 533.868 393.065 533.868 392.583 cv
533.868 391.458 li
533.868 390.682 534.03 390.001 534.354 389.418 cv
534.678 388.835 535.125 388.543 535.697 388.543 cv
535.984 388.543 536.242 388.614 536.475 388.756 cv
536.636 388.857 536.768 388.979 536.869 389.12 cv
537.039 389.368 537.192 389.698 537.327 390.114 cv
537.463 390.528 537.531 390.977 537.531 391.458 cv
537.531 392.583 li
537.531 392.583 li
cp
537.908 390.166 mo
537.843 389.922 537.742 389.653 537.604 389.357 cv
537.466 389.062 537.337 388.845 537.215 388.707 cv
537.028 388.492 536.804 388.326 536.541 388.207 cv
536.278 388.087 535.994 388.027 535.69 388.027 cv
535.067 388.027 534.552 388.278 534.141 388.78 cv
533.619 389.42 533.358 390.29 533.358 391.392 cv
533.358 392.655 li
533.358 393.121 533.404 393.528 533.497 393.876 cv
533.559 394.124 533.659 394.395 533.799 394.69 cv
533.938 394.986 534.067 395.2 534.185 395.334 cv
534.37 395.548 534.597 395.716 534.861 395.835 cv
535.126 395.955 535.408 396.014 535.708 396.014 cv
536.332 396.014 536.849 395.763 537.258 395.262 cv
537.78 394.622 538.042 393.752 538.042 392.655 cv
538.042 391.392 li
538.042 390.922 537.997 390.513 537.908 390.166 cv
537.908 390.166 li
537.908 390.166 li
cp
f
586.144 392.583 mo
586.144 393.36 585.98 394.041 585.657 394.626 cv
585.332 395.212 584.888 395.504 584.321 395.504 cv
584.029 395.504 583.768 395.431 583.537 395.286 cv
583.376 395.185 583.246 395.065 583.148 394.927 cv
582.975 394.68 582.82 394.348 582.684 393.931 cv
582.548 393.514 582.48 393.065 582.48 392.583 cv
582.48 391.458 li
582.48 390.682 582.643 390.001 582.966 389.418 cv
583.29 388.835 583.737 388.543 584.309 388.543 cv
584.596 388.543 584.854 388.614 585.087 388.756 cv
585.248 388.857 585.379 388.979 585.48 389.12 cv
585.651 389.368 585.804 389.698 585.939 390.114 cv
586.075 390.528 586.144 390.977 586.144 391.458 cv
586.144 392.583 li
586.144 392.583 li
cp
586.52 390.166 mo
586.455 389.922 586.354 389.653 586.216 389.357 cv
586.078 389.062 585.949 388.845 585.827 388.707 cv
585.641 388.492 585.416 388.326 585.152 388.207 cv
584.889 388.087 584.605 388.027 584.303 388.027 cv
583.679 388.027 583.162 388.278 582.754 388.78 cv
582.23 389.42 581.97 390.29 581.97 391.392 cv
581.97 392.655 li
581.97 393.121 582.017 393.528 582.109 393.876 cv
582.17 394.124 582.271 394.395 582.41 394.69 cv
582.55 394.986 582.679 395.2 582.796 395.334 cv
582.982 395.548 583.208 395.716 583.474 395.835 cv
583.738 395.955 584.021 396.014 584.321 396.014 cv
584.943 396.014 585.461 395.763 585.869 395.262 cv
586.392 394.622 586.652 393.752 586.652 392.655 cv
586.652 391.392 li
586.652 390.922 586.608 390.513 586.52 390.166 cv
586.52 390.166 li
586.52 390.166 li
cp
f
325.137 409.417 mo
325.035 409.454 324.969 409.489 324.936 409.521 cv
324.896 409.573 324.875 409.63 324.875 409.691 cv
324.875 409.76 324.901 409.819 324.952 409.87 cv
325.002 409.921 325.059 409.946 325.119 409.946 cv
325.155 409.946 325.215 409.934 325.296 409.91 cv
326.959 409.388 li
326.959 415.898 li
325.211 415.898 li
325.089 415.898 325.002 415.922 324.949 415.968 cv
324.896 416.015 324.869 416.077 324.869 416.153 cv
324.869 416.227 324.896 416.287 324.949 416.336 cv
325.002 416.384 325.089 416.408 325.211 416.408 cv
329.219 416.408 li
329.34 416.408 329.428 416.384 329.48 416.336 cv
329.532 416.287 329.56 416.227 329.56 416.153 cv
329.56 416.077 329.532 416.015 329.48 415.968 cv
329.428 415.922 329.34 415.898 329.219 415.898 cv
327.47 415.898 li
327.47 408.683 li
325.137 409.417 li
325.137 409.417 li
cp
317.66 409.417 mo
317.559 409.454 317.492 409.489 317.46 409.521 cv
317.419 409.573 317.398 409.63 317.398 409.691 cv
317.398 409.76 317.424 409.819 317.474 409.87 cv
317.525 409.921 317.581 409.946 317.642 409.946 cv
317.678 409.946 317.737 409.934 317.818 409.91 cv
319.482 409.388 li
319.482 415.898 li
317.732 415.898 li
317.611 415.898 317.524 415.922 317.471 415.968 cv
317.419 416.015 317.393 416.077 317.393 416.153 cv
317.393 416.227 317.419 416.287 317.471 416.336 cv
317.524 416.384 317.611 416.408 317.732 416.408 cv
321.74 416.408 li
321.863 416.408 321.95 416.384 322.004 416.336 cv
322.056 416.287 322.082 416.227 322.082 416.153 cv
322.082 416.077 322.056 416.015 322.004 415.968 cv
321.95 415.922 321.863 415.898 321.74 415.898 cv
319.992 415.898 li
319.992 408.683 li
317.66 409.417 li
317.66 409.417 li
cp
f
362.027 413.751 mo
362.068 413.737 362.104 413.708 362.137 413.663 cv
362.169 413.619 362.186 413.57 362.186 413.518 cv
362.186 413.44 362.159 413.379 362.105 413.333 cv
362.054 413.285 361.967 413.262 361.845 413.262 cv
359.392 413.257 li
359.271 413.257 359.183 413.281 359.13 413.329 cv
359.077 413.377 359.051 413.44 359.051 413.518 cv
359.051 413.594 359.077 413.656 359.13 413.702 cv
359.183 413.75 359.271 413.772 359.392 413.772 cv
361.146 413.772 li
361.146 415.662 li
360.794 415.824 360.486 415.937 360.223 416.002 cv
359.96 416.066 359.675 416.099 359.366 416.099 cv
358.455 416.099 357.741 415.85 357.223 415.352 cv
356.704 414.854 356.445 414.181 356.445 413.335 cv
356.445 412.406 li
356.445 411.928 356.554 411.501 356.773 411.125 cv
357.102 410.549 357.455 410.159 357.833 409.955 cv
358.212 409.75 358.637 409.648 359.105 409.648 cv
359.604 409.648 360.065 409.757 360.487 409.977 cv
360.91 410.195 361.134 410.477 361.158 410.821 cv
361.162 410.938 361.188 411.02 361.234 411.066 cv
361.281 411.113 361.339 411.136 361.407 411.136 cv
361.48 411.136 361.541 411.111 361.59 411.061 cv
361.639 411.01 361.663 410.922 361.663 410.796 cv
361.663 409.643 li
361.663 409.521 361.639 409.434 361.59 409.381 cv
361.541 409.328 361.48 409.302 361.407 409.302 cv
361.351 409.302 361.3 409.317 361.256 409.348 cv
361.211 409.378 361.183 409.413 361.167 409.454 cv
361.154 409.495 361.146 409.614 361.146 409.812 cv
360.579 409.363 359.885 409.138 359.063 409.138 cv
358.496 409.138 357.972 409.278 357.49 409.557 cv
357.009 409.836 356.628 410.241 356.352 410.769 cv
356.074 411.297 355.936 411.84 355.936 412.4 cv
355.936 413.335 li
355.936 413.89 356.015 414.348 356.175 414.708 cv
356.336 415.068 356.559 415.394 356.846 415.686 cv
357.134 415.978 357.485 416.204 357.9 416.366 cv
358.314 416.527 358.796 416.609 359.343 416.609 cv
359.728 416.609 360.112 416.554 360.499 416.445 cv
360.886 416.336 361.274 416.174 361.663 415.959 cv
361.663 413.772 li
361.866 413.772 361.986 413.766 362.027 413.751 cv
362.027 413.751 li
cp
f
398.819 409.417 mo
398.719 409.454 398.651 409.489 398.619 409.521 cv
398.579 409.573 398.559 409.63 398.559 409.691 cv
398.559 409.76 398.584 409.819 398.635 409.87 cv
398.685 409.921 398.74 409.946 398.802 409.946 cv
398.838 409.946 398.896 409.934 398.979 409.91 cv
400.642 409.388 li
400.642 415.898 li
398.893 415.898 li
398.771 415.898 398.685 415.922 398.632 415.968 cv
398.579 416.015 398.553 416.077 398.553 416.153 cv
398.553 416.227 398.579 416.287 398.632 416.336 cv
398.685 416.384 398.771 416.408 398.893 416.408 cv
402.902 416.408 li
403.023 416.408 403.11 416.384 403.163 416.336 cv
403.215 416.287 403.242 416.227 403.242 416.153 cv
403.242 416.077 403.215 416.015 403.163 415.968 cv
403.11 415.922 403.023 415.898 402.902 415.898 cv
401.152 415.898 li
401.152 408.683 li
398.819 409.417 li
398.819 409.417 li
cp
f
449.122 413.159 mo
449.122 413.937 448.96 414.618 448.637 415.203 cv
448.313 415.788 447.867 416.08 447.3 416.08 cv
447.009 416.08 446.747 416.008 446.517 415.862 cv
446.354 415.761 446.225 415.641 446.128 415.503 cv
445.953 415.257 445.798 414.925 445.663 414.507 cv
445.527 414.09 445.46 413.641 445.46 413.159 cv
445.46 412.036 li
445.46 411.258 445.622 410.578 445.945 409.995 cv
446.27 409.411 446.717 409.12 447.288 409.12 cv
447.575 409.12 447.835 409.191 448.064 409.333 cv
448.228 409.434 448.359 409.555 448.46 409.696 cv
448.63 409.944 448.782 410.275 448.919 410.69 cv
449.055 411.105 449.122 411.554 449.122 412.036 cv
449.122 413.159 li
449.122 413.159 li
cp
449.499 410.741 mo
449.434 410.499 449.332 410.229 449.195 409.934 cv
449.058 409.638 448.928 409.421 448.807 409.284 cv
448.62 409.069 448.396 408.901 448.132 408.783 cv
447.869 408.664 447.586 408.604 447.281 408.604 cv
446.658 408.604 446.142 408.854 445.733 409.357 cv
445.211 409.996 444.949 410.867 444.949 411.968 cv
444.949 413.232 li
444.949 413.698 444.996 414.104 445.089 414.453 cv
445.15 414.699 445.251 414.971 445.39 415.267 cv
445.53 415.563 445.658 415.777 445.775 415.91 cv
445.962 416.125 446.188 416.292 446.453 416.411 cv
446.718 416.531 447 416.591 447.3 416.591 cv
447.924 416.591 448.439 416.34 448.849 415.837 cv
449.371 415.198 449.632 414.33 449.632 413.232 cv
449.632 411.968 li
449.632 411.499 449.588 411.09 449.499 410.741 cv
449.499 410.741 li
449.499 410.741 li
cp
f
487.245 409.417 mo
487.144 409.454 487.076 409.489 487.045 409.521 cv
487.003 409.573 486.983 409.63 486.983 409.691 cv
486.983 409.76 487.008 409.819 487.06 409.87 cv
487.109 409.921 487.165 409.946 487.227 409.946 cv
487.262 409.946 487.321 409.934 487.402 409.91 cv
489.066 409.388 li
489.066 415.898 li
487.317 415.898 li
487.195 415.898 487.108 415.922 487.057 415.968 cv
487.003 416.015 486.978 416.077 486.978 416.153 cv
486.978 416.227 487.003 416.287 487.057 416.336 cv
487.108 416.384 487.195 416.408 487.317 416.408 cv
491.326 416.408 li
491.447 416.408 491.534 416.384 491.587 416.336 cv
491.64 416.287 491.666 416.227 491.666 416.153 cv
491.666 416.077 491.64 416.015 491.587 415.968 cv
491.534 415.922 491.447 415.898 491.326 415.898 cv
489.576 415.898 li
489.576 408.683 li
487.245 409.417 li
487.245 409.417 li
cp
f
537.531 413.159 mo
537.531 413.937 537.369 414.618 537.045 415.203 cv
536.721 415.788 536.275 416.08 535.708 416.08 cv
535.417 416.08 535.156 416.008 534.925 415.862 cv
534.764 415.761 534.634 415.641 534.536 415.503 cv
534.362 415.257 534.207 414.925 534.072 414.507 cv
533.936 414.09 533.868 413.641 533.868 413.159 cv
533.868 412.036 li
533.868 411.258 534.03 410.578 534.354 409.995 cv
534.678 409.411 535.125 409.12 535.697 409.12 cv
535.984 409.12 536.242 409.191 536.475 409.333 cv
536.636 409.434 536.768 409.555 536.869 409.696 cv
537.039 409.944 537.192 410.275 537.327 410.69 cv
537.463 411.105 537.531 411.554 537.531 412.036 cv
537.531 413.159 li
537.531 413.159 li
cp
537.908 410.741 mo
537.843 410.499 537.742 410.229 537.604 409.934 cv
537.466 409.638 537.337 409.421 537.215 409.284 cv
537.028 409.069 536.804 408.901 536.541 408.783 cv
536.278 408.664 535.994 408.604 535.69 408.604 cv
535.067 408.604 534.552 408.854 534.141 409.357 cv
533.619 409.996 533.358 410.867 533.358 411.968 cv
533.358 413.232 li
533.358 413.698 533.404 414.104 533.497 414.453 cv
533.559 414.699 533.659 414.971 533.799 415.267 cv
533.938 415.563 534.067 415.777 534.185 415.91 cv
534.37 416.125 534.597 416.292 534.861 416.411 cv
535.126 416.531 535.408 416.591 535.708 416.591 cv
536.332 416.591 536.849 416.34 537.258 415.837 cv
537.78 415.198 538.042 414.33 538.042 413.232 cv
538.042 411.968 li
538.042 411.499 537.997 411.09 537.908 410.741 cv
537.908 410.741 li
537.908 410.741 li
cp
f
586.144 413.159 mo
586.144 413.937 585.98 414.618 585.657 415.203 cv
585.332 415.788 584.888 416.08 584.321 416.08 cv
584.029 416.08 583.768 416.008 583.537 415.862 cv
583.376 415.761 583.246 415.641 583.148 415.503 cv
582.975 415.257 582.82 414.925 582.684 414.507 cv
582.548 414.09 582.48 413.641 582.48 413.159 cv
582.48 412.036 li
582.48 411.258 582.643 410.578 582.966 409.995 cv
583.29 409.411 583.737 409.12 584.309 409.12 cv
584.596 409.12 584.854 409.191 585.087 409.333 cv
585.248 409.434 585.379 409.555 585.48 409.696 cv
585.651 409.944 585.804 410.275 585.939 410.69 cv
586.075 411.105 586.144 411.554 586.144 412.036 cv
586.144 413.159 li
586.144 413.159 li
cp
586.52 410.741 mo
586.455 410.499 586.354 410.229 586.216 409.934 cv
586.078 409.638 585.949 409.421 585.827 409.284 cv
585.641 409.069 585.416 408.901 585.152 408.783 cv
584.889 408.664 584.605 408.604 584.303 408.604 cv
583.679 408.604 583.162 408.854 582.754 409.357 cv
582.23 409.996 581.97 410.867 581.97 411.968 cv
581.97 413.232 li
581.97 413.698 582.017 414.104 582.109 414.453 cv
582.17 414.699 582.271 414.971 582.41 415.267 cv
582.55 415.563 582.679 415.777 582.796 415.91 cv
582.982 416.125 583.208 416.292 583.474 416.411 cv
583.738 416.531 584.021 416.591 584.321 416.591 cv
584.943 416.591 585.461 416.34 585.869 415.837 cv
586.392 415.198 586.652 414.33 586.652 413.232 cv
586.652 411.968 li
586.652 411.499 586.608 411.09 586.52 410.741 cv
586.52 410.741 li
586.52 410.741 li
cp
f
325.021 436.438 mo
325.775 435.786 326.751 434.869 327.949 433.687 cv
328.428 433.217 328.758 432.866 328.943 432.633 cv
329.127 432.4 329.258 432.186 329.334 431.989 cv
329.412 431.792 329.449 431.577 329.449 431.343 cv
329.449 430.783 329.221 430.283 328.764 429.843 cv
328.305 429.401 327.759 429.18 327.124 429.18 cv
326.73 429.18 326.347 429.275 325.973 429.466 cv
325.598 429.656 325.305 429.917 325.092 430.249 cv
324.879 430.581 324.772 430.844 324.772 431.039 cv
324.772 431.104 324.797 431.159 324.844 431.206 cv
324.89 431.252 324.947 431.276 325.016 431.276 cv
325.08 431.276 325.137 431.255 325.186 431.215 cv
325.223 431.187 325.254 431.123 325.277 431.026 cv
325.378 430.65 325.601 430.334 325.944 430.079 cv
326.29 429.824 326.684 429.696 327.13 429.696 cv
327.629 429.696 328.053 429.864 328.404 430.2 cv
328.757 430.537 328.934 430.923 328.934 431.361 cv
328.934 431.522 328.901 431.684 328.84 431.844 cv
328.776 432.003 328.66 432.189 328.49 432.399 cv
328.32 432.61 328.006 432.939 327.549 433.389 cv
326.568 434.353 325.561 435.301 324.524 436.231 cv
324.524 436.985 li
329.457 436.985 li
329.457 436.274 li
329.457 436.153 329.432 436.065 329.383 436.013 cv
329.334 435.96 329.273 435.934 329.201 435.934 cv
329.124 435.934 329.061 435.96 329.012 436.013 cv
328.964 436.065 328.939 436.153 328.939 436.274 cv
328.939 436.475 li
325.021 436.475 li
325.021 436.438 li
325.021 436.438 li
cp
317.66 429.994 mo
317.559 430.03 317.492 430.064 317.46 430.098 cv
317.419 430.15 317.398 430.206 317.398 430.267 cv
317.398 430.336 317.424 430.396 317.474 430.447 cv
317.525 430.497 317.581 430.522 317.642 430.522 cv
317.678 430.522 317.737 430.51 317.818 430.485 cv
319.482 429.963 li
319.482 436.475 li
317.732 436.475 li
317.611 436.475 317.524 436.498 317.471 436.544 cv
317.419 436.591 317.393 436.653 317.393 436.73 cv
317.393 436.803 317.419 436.863 317.471 436.912 cv
317.524 436.96 317.611 436.985 317.732 436.985 cv
321.74 436.985 li
321.863 436.985 321.95 436.96 322.004 436.912 cv
322.056 436.863 322.082 436.803 322.082 436.73 cv
322.082 436.653 322.056 436.591 322.004 436.544 cv
321.95 436.498 321.863 436.475 321.74 436.475 cv
319.992 436.475 li
319.992 429.259 li
317.66 429.994 li
317.66 429.994 li
cp
f
358.959 429.715 mo
358.413 429.715 357.906 429.855 357.438 430.137 cv
356.971 430.418 356.603 430.821 356.333 431.346 cv
356.063 431.87 355.929 432.383 355.929 432.886 cv
355.929 433.924 li
355.929 434.276 355.98 434.599 356.081 434.893 cv
356.182 435.187 356.372 435.506 356.648 435.853 cv
356.926 436.199 357.16 436.445 357.351 436.59 cv
357.541 436.736 357.781 436.863 358.073 436.973 cv
358.453 437.114 358.829 437.185 359.197 437.185 cv
359.621 437.185 360.042 437.091 360.457 436.903 cv
360.872 436.715 361.246 436.435 361.577 436.062 cv
361.752 435.872 361.839 435.73 361.839 435.636 cv
361.839 435.567 361.816 435.512 361.771 435.467 cv
361.728 435.422 361.669 435.399 361.596 435.399 cv
361.511 435.399 361.434 435.442 361.366 435.527 cv
361.041 435.912 360.706 436.199 360.36 436.39 cv
360.014 436.58 359.621 436.675 359.185 436.675 cv
358.455 436.675 357.816 436.395 357.265 435.834 cv
356.714 435.273 356.439 434.612 356.439 433.851 cv
356.439 432.958 li
356.439 432.602 356.496 432.282 356.608 431.998 cv
356.768 431.613 356.98 431.263 357.247 430.948 cv
357.4 430.765 357.608 430.611 357.866 430.485 cv
358.215 430.312 358.585 430.225 358.978 430.225 cv
359.577 430.225 360.111 430.405 360.582 430.765 cv
360.931 431.028 361.114 431.331 361.134 431.671 cv
361.143 431.779 361.17 431.859 361.216 431.907 cv
361.263 431.956 361.321 431.979 361.389 431.979 cv
361.467 431.979 361.528 431.954 361.575 431.901 cv
361.622 431.849 361.645 431.76 361.645 431.634 cv
361.645 430.218 li
361.645 430.098 361.622 430.01 361.575 429.957 cv
361.528 429.905 361.467 429.878 361.389 429.878 cv
361.313 429.878 361.25 429.905 361.204 429.957 cv
361.158 430.01 361.134 430.098 361.134 430.218 cv
361.134 430.577 li
360.527 430.002 359.803 429.715 358.959 429.715 cv
358.959 429.715 li
358.959 429.715 li
cp
f
402.731 433.758 mo
402.731 434.536 402.569 435.217 402.246 435.803 cv
401.922 436.388 401.477 436.681 400.909 436.681 cv
400.618 436.681 400.357 436.607 400.126 436.462 cv
399.964 436.361 399.835 436.241 399.737 436.104 cv
399.563 435.856 399.408 435.524 399.273 435.107 cv
399.137 434.69 399.068 434.241 399.068 433.758 cv
399.068 432.635 li
399.068 431.858 399.23 431.177 399.556 430.594 cv
399.879 430.012 400.326 429.72 400.896 429.72 cv
401.186 429.72 401.444 429.791 401.675 429.932 cv
401.836 430.034 401.968 430.155 402.069 430.297 cv
402.24 430.543 402.393 430.875 402.528 431.29 cv
402.664 431.705 402.731 432.153 402.731 432.635 cv
402.731 433.758 li
402.731 433.758 li
cp
403.108 431.341 mo
403.043 431.099 402.942 430.829 402.805 430.534 cv
402.667 430.238 402.537 430.021 402.415 429.884 cv
402.23 429.669 402.004 429.502 401.742 429.383 cv
401.479 429.263 401.194 429.203 400.892 429.203 cv
400.268 429.203 399.752 429.454 399.342 429.957 cv
398.819 430.597 398.559 431.467 398.559 432.568 cv
398.559 433.832 li
398.559 434.297 398.605 434.705 398.699 435.053 cv
398.759 435.3 398.859 435.571 399 435.866 cv
399.139 436.162 399.268 436.377 399.385 436.51 cv
399.571 436.725 399.797 436.892 400.063 437.012 cv
400.327 437.131 400.61 437.19 400.909 437.19 cv
401.533 437.19 402.05 436.939 402.459 436.438 cv
402.981 435.798 403.242 434.929 403.242 433.832 cv
403.242 432.568 li
403.242 432.099 403.197 431.69 403.108 431.341 cv
403.108 431.341 li
403.108 431.341 li
cp
f
449.122 433.758 mo
449.122 434.536 448.96 435.217 448.637 435.803 cv
448.313 436.388 447.867 436.681 447.3 436.681 cv
447.009 436.681 446.747 436.607 446.517 436.462 cv
446.354 436.361 446.225 436.241 446.128 436.104 cv
445.953 435.856 445.798 435.524 445.663 435.107 cv
445.527 434.69 445.46 434.241 445.46 433.758 cv
445.46 432.635 li
445.46 431.858 445.622 431.177 445.945 430.594 cv
446.27 430.012 446.717 429.72 447.288 429.72 cv
447.575 429.72 447.835 429.791 448.064 429.932 cv
448.228 430.034 448.359 430.155 448.46 430.297 cv
448.63 430.543 448.782 430.875 448.919 431.29 cv
449.055 431.705 449.122 432.153 449.122 432.635 cv
449.122 433.758 li
449.122 433.758 li
cp
449.499 431.341 mo
449.434 431.099 449.332 430.829 449.195 430.534 cv
449.058 430.238 448.928 430.021 448.807 429.884 cv
448.62 429.669 448.396 429.502 448.132 429.383 cv
447.869 429.263 447.586 429.203 447.281 429.203 cv
446.658 429.203 446.142 429.454 445.733 429.957 cv
445.211 430.597 444.949 431.467 444.949 432.568 cv
444.949 433.832 li
444.949 434.297 444.996 434.705 445.089 435.053 cv
445.15 435.3 445.251 435.571 445.39 435.866 cv
445.53 436.162 445.658 436.377 445.775 436.51 cv
445.962 436.725 446.188 436.892 446.453 437.012 cv
446.718 437.131 447 437.19 447.3 437.19 cv
447.924 437.19 448.439 436.939 448.849 436.438 cv
449.371 435.798 449.632 434.929 449.632 433.832 cv
449.632 432.568 li
449.632 432.099 449.588 431.69 449.499 431.341 cv
449.499 431.341 li
449.499 431.341 li
cp
f
491.156 433.758 mo
491.156 434.536 490.993 435.217 490.67 435.803 cv
490.347 436.388 489.901 436.681 489.334 436.681 cv
489.042 436.681 488.781 436.607 488.551 436.462 cv
488.389 436.361 488.259 436.241 488.162 436.104 cv
487.987 435.856 487.833 435.524 487.696 435.107 cv
487.562 434.69 487.493 434.241 487.493 433.758 cv
487.493 432.635 li
487.493 431.858 487.655 431.177 487.979 430.594 cv
488.303 430.012 488.751 429.72 489.321 429.72 cv
489.609 429.72 489.868 429.791 490.1 429.932 cv
490.261 430.034 490.393 430.155 490.493 430.297 cv
490.664 430.543 490.817 430.875 490.953 431.29 cv
491.088 431.705 491.156 432.153 491.156 432.635 cv
491.156 433.758 li
491.156 433.758 li
cp
491.532 431.341 mo
491.468 431.099 491.367 430.829 491.229 430.534 cv
491.092 430.238 490.962 430.021 490.84 429.884 cv
490.653 429.669 490.43 429.502 490.166 429.383 cv
489.902 429.263 489.619 429.203 489.315 429.203 cv
488.691 429.203 488.176 429.454 487.767 429.957 cv
487.245 430.597 486.983 431.467 486.983 432.568 cv
486.983 433.832 li
486.983 434.297 487.029 434.705 487.123 435.053 cv
487.184 435.3 487.284 435.571 487.423 435.866 cv
487.563 436.162 487.691 436.377 487.809 436.51 cv
487.996 436.725 488.221 436.892 488.486 437.012 cv
488.752 437.131 489.034 437.19 489.334 437.19 cv
489.957 437.19 490.475 436.939 490.883 436.438 cv
491.404 435.798 491.666 434.929 491.666 433.832 cv
491.666 432.568 li
491.666 432.099 491.621 431.69 491.532 431.341 cv
491.532 431.341 li
491.532 431.341 li
cp
f
537.531 433.758 mo
537.531 434.536 537.369 435.217 537.045 435.803 cv
536.721 436.388 536.275 436.681 535.708 436.681 cv
535.417 436.681 535.156 436.607 534.925 436.462 cv
534.764 436.361 534.634 436.241 534.536 436.104 cv
534.362 435.856 534.207 435.524 534.072 435.107 cv
533.936 434.69 533.868 434.241 533.868 433.758 cv
533.868 432.635 li
533.868 431.858 534.03 431.177 534.354 430.594 cv
534.678 430.012 535.125 429.72 535.697 429.72 cv
535.984 429.72 536.242 429.791 536.475 429.932 cv
536.636 430.034 536.768 430.155 536.869 430.297 cv
537.039 430.543 537.192 430.875 537.327 431.29 cv
537.463 431.705 537.531 432.153 537.531 432.635 cv
537.531 433.758 li
537.531 433.758 li
cp
537.908 431.341 mo
537.843 431.099 537.742 430.829 537.604 430.534 cv
537.466 430.238 537.337 430.021 537.215 429.884 cv
537.028 429.669 536.804 429.502 536.541 429.383 cv
536.278 429.263 535.994 429.203 535.69 429.203 cv
535.067 429.203 534.552 429.454 534.141 429.957 cv
533.619 430.597 533.358 431.467 533.358 432.568 cv
533.358 433.832 li
533.358 434.297 533.404 434.705 533.497 435.053 cv
533.559 435.3 533.659 435.571 533.799 435.866 cv
533.938 436.162 534.067 436.377 534.185 436.51 cv
534.37 436.725 534.597 436.892 534.861 437.012 cv
535.126 437.131 535.408 437.19 535.708 437.19 cv
536.332 437.19 536.849 436.939 537.258 436.438 cv
537.78 435.798 538.042 434.929 538.042 433.832 cv
538.042 432.568 li
538.042 432.099 537.997 431.69 537.908 431.341 cv
537.908 431.341 li
537.908 431.341 li
cp
f
586.144 433.758 mo
586.144 434.536 585.98 435.217 585.657 435.803 cv
585.332 436.388 584.888 436.681 584.321 436.681 cv
584.029 436.681 583.768 436.607 583.537 436.462 cv
583.376 436.361 583.246 436.241 583.148 436.104 cv
582.975 435.856 582.82 435.524 582.684 435.107 cv
582.548 434.69 582.48 434.241 582.48 433.758 cv
582.48 432.635 li
582.48 431.858 582.643 431.177 582.966 430.594 cv
583.29 430.012 583.737 429.72 584.309 429.72 cv
584.596 429.72 584.854 429.791 585.087 429.932 cv
585.248 430.034 585.379 430.155 585.48 430.297 cv
585.651 430.543 585.804 430.875 585.939 431.29 cv
586.075 431.705 586.144 432.153 586.144 432.635 cv
586.144 433.758 li
586.144 433.758 li
cp
586.52 431.341 mo
586.455 431.099 586.354 430.829 586.216 430.534 cv
586.078 430.238 585.949 430.021 585.827 429.884 cv
585.641 429.669 585.416 429.502 585.152 429.383 cv
584.889 429.263 584.605 429.203 584.303 429.203 cv
583.679 429.203 583.162 429.454 582.754 429.957 cv
582.23 430.597 581.97 431.467 581.97 432.568 cv
581.97 433.832 li
581.97 434.297 582.017 434.705 582.109 435.053 cv
582.17 435.3 582.271 435.571 582.41 435.866 cv
582.55 436.162 582.679 436.377 582.796 436.51 cv
582.982 436.725 583.208 436.892 583.474 437.012 cv
583.738 437.131 584.021 437.19 584.321 437.19 cv
584.943 437.19 585.461 436.939 585.869 436.438 cv
586.392 435.798 586.652 434.929 586.652 433.832 cv
586.652 432.568 li
586.652 432.099 586.608 431.69 586.52 431.341 cv
586.52 431.341 li
586.52 431.341 li
cp
f
329.139 452.685 mo
329.338 452.381 329.438 452.059 329.438 451.718 cv
329.438 451.184 329.23 450.724 328.818 450.336 cv
328.404 449.949 327.877 449.756 327.232 449.756 cv
326.609 449.756 326.053 449.929 325.563 450.273 cv
325.211 450.52 325.034 450.725 325.034 450.886 cv
325.034 450.951 325.059 451.007 325.107 451.053 cv
325.155 451.1 325.215 451.123 325.283 451.123 cv
325.327 451.123 325.367 451.114 325.401 451.096 cv
325.436 451.078 325.486 451.028 325.55 450.947 cv
325.728 450.736 325.965 450.571 326.262 450.449 cv
326.556 450.327 326.881 450.267 327.232 450.267 cv
327.734 450.267 328.142 450.412 328.454 450.704 cv
328.766 450.995 328.922 451.332 328.922 451.712 cv
328.922 452.081 328.773 452.405 328.475 452.685 cv
328.178 452.964 327.801 453.103 327.342 453.103 cv
326.904 453.097 li
326.803 453.097 326.727 453.121 326.678 453.17 cv
326.627 453.219 326.601 453.279 326.601 453.353 cv
326.601 453.429 326.627 453.491 326.681 453.538 cv
326.732 453.584 326.819 453.607 326.941 453.607 cv
327.317 453.607 327.69 453.691 328.059 453.859 cv
328.428 454.028 328.711 454.257 328.906 454.549 cv
329.103 454.841 329.201 455.139 329.201 455.442 cv
329.201 455.895 329.002 456.308 328.602 456.678 cv
328.203 457.048 327.709 457.233 327.118 457.233 cv
326.417 457.233 325.753 457 325.125 456.535 cv
325.044 456.474 324.971 456.444 324.906 456.444 cv
324.842 456.444 324.785 456.468 324.739 456.517 cv
324.693 456.565 324.67 456.622 324.67 456.687 cv
324.67 456.759 324.7 456.829 324.761 456.894 cv
324.947 457.087 325.274 457.278 325.744 457.464 cv
326.215 457.65 326.668 457.744 327.105 457.744 cv
327.85 457.744 328.471 457.51 328.967 457.042 cv
329.463 456.575 329.711 456.035 329.711 455.424 cv
329.711 455.026 329.587 454.645 329.34 454.278 cv
329.094 453.912 328.734 453.624 328.266 453.413 cv
328.65 453.231 328.941 452.988 329.139 452.685 cv
329.139 452.685 li
cp
317.66 450.571 mo
317.559 450.607 317.492 450.642 317.46 450.673 cv
317.419 450.727 317.398 450.783 317.398 450.844 cv
317.398 450.912 317.424 450.973 317.474 451.022 cv
317.525 451.074 317.581 451.099 317.642 451.099 cv
317.678 451.099 317.737 451.086 317.818 451.063 cv
319.482 450.54 li
319.482 457.051 li
317.732 457.051 li
317.611 457.051 317.524 457.075 317.471 457.121 cv
317.419 457.167 317.393 457.229 317.393 457.306 cv
317.393 457.379 317.419 457.44 317.471 457.489 cv
317.524 457.537 317.611 457.562 317.732 457.562 cv
321.74 457.562 li
321.863 457.562 321.95 457.537 322.004 457.489 cv
322.056 457.44 322.082 457.379 322.082 457.306 cv
322.082 457.229 322.056 457.167 322.004 457.121 cv
321.95 457.075 321.863 457.051 321.74 457.051 cv
319.992 457.051 li
319.992 449.835 li
317.66 450.571 li
317.66 450.571 li
cp
f
362.027 454.904 mo
362.068 454.89 362.104 454.86 362.137 454.816 cv
362.169 454.771 362.186 454.723 362.186 454.67 cv
362.186 454.593 362.159 454.532 362.105 454.485 cv
362.054 454.438 361.967 454.416 361.845 454.416 cv
359.392 454.409 li
359.271 454.409 359.183 454.434 359.13 454.482 cv
359.077 454.531 359.051 454.593 359.051 454.67 cv
359.051 454.747 359.077 454.809 359.13 454.856 cv
359.183 454.902 359.271 454.925 359.392 454.925 cv
361.146 454.925 li
361.146 456.814 li
360.794 456.977 360.486 457.09 360.223 457.154 cv
359.96 457.219 359.675 457.252 359.366 457.252 cv
358.455 457.252 357.741 457.002 357.223 456.504 cv
356.704 456.007 356.445 455.334 356.445 454.488 cv
356.445 453.559 li
356.445 453.081 356.554 452.654 356.773 452.277 cv
357.102 451.703 357.455 451.313 357.833 451.108 cv
358.212 450.903 358.637 450.801 359.105 450.801 cv
359.604 450.801 360.065 450.911 360.487 451.129 cv
360.91 451.348 361.134 451.629 361.158 451.973 cv
361.162 452.091 361.188 452.173 361.234 452.219 cv
361.281 452.266 361.339 452.289 361.407 452.289 cv
361.48 452.289 361.541 452.264 361.59 452.213 cv
361.639 452.163 361.663 452.075 361.663 451.949 cv
361.663 450.795 li
361.663 450.673 361.639 450.586 361.59 450.534 cv
361.541 450.481 361.48 450.455 361.407 450.455 cv
361.351 450.455 361.3 450.47 361.256 450.5 cv
361.211 450.531 361.183 450.566 361.167 450.607 cv
361.154 450.647 361.146 450.767 361.146 450.965 cv
360.579 450.516 359.885 450.291 359.063 450.291 cv
358.496 450.291 357.972 450.431 357.49 450.71 cv
357.009 450.989 356.628 451.394 356.352 451.922 cv
356.074 452.45 355.936 452.994 355.936 453.553 cv
355.936 454.488 li
355.936 455.043 356.015 455.5 356.175 455.86 cv
356.336 456.222 356.559 456.547 356.846 456.839 cv
357.134 457.13 357.485 457.357 357.9 457.519 cv
358.314 457.681 358.796 457.762 359.343 457.762 cv
359.728 457.762 360.112 457.707 360.499 457.598 cv
360.886 457.489 361.274 457.327 361.663 457.112 cv
361.663 454.925 li
361.866 454.925 361.986 454.918 362.027 454.904 cv
362.027 454.904 li
cp
f
402.731 454.335 mo
402.731 455.112 402.569 455.794 402.246 456.379 cv
401.922 456.964 401.477 457.256 400.909 457.256 cv
400.618 457.256 400.357 457.184 400.126 457.038 cv
399.964 456.937 399.835 456.817 399.737 456.68 cv
399.563 456.433 399.408 456.101 399.273 455.684 cv
399.137 455.267 399.068 454.817 399.068 454.335 cv
399.068 453.212 li
399.068 452.434 399.23 451.754 399.556 451.17 cv
399.879 450.587 400.326 450.296 400.896 450.296 cv
401.186 450.296 401.444 450.366 401.675 450.509 cv
401.836 450.61 401.968 450.731 402.069 450.873 cv
402.24 451.12 402.393 451.451 402.528 451.866 cv
402.664 452.282 402.731 452.73 402.731 453.212 cv
402.731 454.335 li
402.731 454.335 li
cp
403.108 451.918 mo
403.043 451.675 402.942 451.405 402.805 451.11 cv
402.667 450.814 402.537 450.598 402.415 450.46 cv
402.23 450.246 402.004 450.078 401.742 449.958 cv
401.479 449.84 401.194 449.78 400.892 449.78 cv
400.268 449.78 399.752 450.031 399.342 450.533 cv
398.819 451.173 398.559 452.043 398.559 453.145 cv
398.559 454.408 li
398.559 454.874 398.605 455.28 398.699 455.629 cv
398.759 455.876 398.859 456.147 399 456.443 cv
399.139 456.739 399.268 456.953 399.385 457.087 cv
399.571 457.301 399.797 457.468 400.063 457.587 cv
400.327 457.707 400.61 457.768 400.909 457.768 cv
401.533 457.768 402.05 457.516 402.459 457.014 cv
402.981 456.375 403.242 455.506 403.242 454.408 cv
403.242 453.145 li
403.242 452.675 403.197 452.267 403.108 451.918 cv
403.108 451.918 li
403.108 451.918 li
cp
f
449.122 454.335 mo
449.122 455.112 448.96 455.794 448.637 456.379 cv
448.313 456.964 447.867 457.256 447.3 457.256 cv
447.009 457.256 446.747 457.184 446.517 457.038 cv
446.354 456.937 446.225 456.817 446.128 456.68 cv
445.953 456.433 445.798 456.101 445.663 455.684 cv
445.527 455.267 445.46 454.817 445.46 454.335 cv
445.46 453.212 li
445.46 452.434 445.622 451.754 445.945 451.17 cv
446.27 450.587 446.717 450.296 447.288 450.296 cv
447.575 450.296 447.835 450.366 448.064 450.509 cv
448.228 450.61 448.359 450.731 448.46 450.873 cv
448.63 451.12 448.782 451.451 448.919 451.866 cv
449.055 452.282 449.122 452.73 449.122 453.212 cv
449.122 454.335 li
449.122 454.335 li
cp
449.499 451.918 mo
449.434 451.675 449.332 451.405 449.195 451.11 cv
449.058 450.814 448.928 450.598 448.807 450.46 cv
448.62 450.246 448.396 450.078 448.132 449.958 cv
447.869 449.84 447.586 449.78 447.281 449.78 cv
446.658 449.78 446.142 450.031 445.733 450.533 cv
445.211 451.173 444.949 452.043 444.949 453.145 cv
444.949 454.408 li
444.949 454.874 444.996 455.28 445.089 455.629 cv
445.15 455.876 445.251 456.147 445.39 456.443 cv
445.53 456.739 445.658 456.953 445.775 457.087 cv
445.962 457.301 446.188 457.468 446.453 457.587 cv
446.718 457.707 447 457.768 447.3 457.768 cv
447.924 457.768 448.439 457.516 448.849 457.014 cv
449.371 456.375 449.632 455.506 449.632 454.408 cv
449.632 453.145 li
449.632 452.675 449.588 452.267 449.499 451.918 cv
449.499 451.918 li
449.499 451.918 li
cp
f
491.156 454.335 mo
491.156 455.112 490.993 455.794 490.67 456.379 cv
490.347 456.964 489.901 457.256 489.334 457.256 cv
489.042 457.256 488.781 457.184 488.551 457.038 cv
488.389 456.937 488.259 456.817 488.162 456.68 cv
487.987 456.433 487.833 456.101 487.696 455.684 cv
487.562 455.267 487.493 454.817 487.493 454.335 cv
487.493 453.212 li
487.493 452.434 487.655 451.754 487.979 451.17 cv
488.303 450.587 488.751 450.296 489.321 450.296 cv
489.609 450.296 489.868 450.366 490.1 450.509 cv
490.261 450.61 490.393 450.731 490.493 450.873 cv
490.664 451.12 490.817 451.451 490.953 451.866 cv
491.088 452.282 491.156 452.73 491.156 453.212 cv
491.156 454.335 li
491.156 454.335 li
cp
491.532 451.918 mo
491.468 451.675 491.367 451.405 491.229 451.11 cv
491.092 450.814 490.962 450.598 490.84 450.46 cv
490.653 450.246 490.43 450.078 490.166 449.958 cv
489.902 449.84 489.619 449.78 489.315 449.78 cv
488.691 449.78 488.176 450.031 487.767 450.533 cv
487.245 451.173 486.983 452.043 486.983 453.145 cv
486.983 454.408 li
486.983 454.874 487.029 455.28 487.123 455.629 cv
487.184 455.876 487.284 456.147 487.423 456.443 cv
487.563 456.739 487.691 456.953 487.809 457.087 cv
487.996 457.301 488.221 457.468 488.486 457.587 cv
488.752 457.707 489.034 457.768 489.334 457.768 cv
489.957 457.768 490.475 457.516 490.883 457.014 cv
491.404 456.375 491.666 455.506 491.666 454.408 cv
491.666 453.145 li
491.666 452.675 491.621 452.267 491.532 451.918 cv
491.532 451.918 li
491.532 451.918 li
cp
f
537.531 454.335 mo
537.531 455.112 537.369 455.794 537.045 456.379 cv
536.721 456.964 536.275 457.256 535.708 457.256 cv
535.417 457.256 535.156 457.184 534.925 457.038 cv
534.764 456.937 534.634 456.817 534.536 456.68 cv
534.362 456.433 534.207 456.101 534.072 455.684 cv
533.936 455.267 533.868 454.817 533.868 454.335 cv
533.868 453.212 li
533.868 452.434 534.03 451.754 534.354 451.17 cv
534.678 450.587 535.125 450.296 535.697 450.296 cv
535.984 450.296 536.242 450.366 536.475 450.509 cv
536.636 450.61 536.768 450.731 536.869 450.873 cv
537.039 451.12 537.192 451.451 537.327 451.866 cv
537.463 452.282 537.531 452.73 537.531 453.212 cv
537.531 454.335 li
537.531 454.335 li
cp
537.908 451.918 mo
537.843 451.675 537.742 451.405 537.604 451.11 cv
537.466 450.814 537.337 450.598 537.215 450.46 cv
537.028 450.246 536.804 450.078 536.541 449.958 cv
536.278 449.84 535.994 449.78 535.69 449.78 cv
535.067 449.78 534.552 450.031 534.141 450.533 cv
533.619 451.173 533.358 452.043 533.358 453.145 cv
533.358 454.408 li
533.358 454.874 533.404 455.28 533.497 455.629 cv
533.559 455.876 533.659 456.147 533.799 456.443 cv
533.938 456.739 534.067 456.953 534.185 457.087 cv
534.37 457.301 534.597 457.468 534.861 457.587 cv
535.126 457.707 535.408 457.768 535.708 457.768 cv
536.332 457.768 536.849 457.516 537.258 457.014 cv
537.78 456.375 538.042 455.506 538.042 454.408 cv
538.042 453.145 li
538.042 452.675 537.997 452.267 537.908 451.918 cv
537.908 451.918 li
537.908 451.918 li
cp
f
589.207 459.791 mo
589.207 460.568 589.044 461.25 588.721 461.834 cv
588.396 462.419 587.951 462.712 587.385 462.712 cv
587.093 462.712 586.831 462.64 586.601 462.494 cv
586.439 462.392 586.31 462.273 586.212 462.135 cv
586.038 461.889 585.884 461.557 585.747 461.14 cv
585.611 460.722 585.544 460.272 585.544 459.791 cv
585.544 458.667 li
585.544 457.889 585.706 457.21 586.029 456.626 cv
586.354 456.043 586.801 455.751 587.372 455.751 cv
587.659 455.751 587.918 455.822 588.15 455.964 cv
588.312 456.066 588.442 456.187 588.544 456.328 cv
588.715 456.576 588.867 456.907 589.003 457.322 cv
589.139 457.737 589.207 458.186 589.207 458.667 cv
589.207 459.791 li
589.207 459.791 li
cp
589.583 457.374 mo
589.519 457.131 589.417 456.861 589.279 456.566 cv
589.142 456.27 589.013 456.054 588.891 455.916 cv
588.704 455.701 588.479 455.534 588.216 455.414 cv
587.952 455.295 587.669 455.235 587.366 455.235 cv
586.742 455.235 586.226 455.486 585.817 455.989 cv
585.294 456.628 585.033 457.499 585.033 458.601 cv
585.033 459.864 li
585.033 460.33 585.08 460.736 585.173 461.085 cv
585.233 461.332 585.334 461.603 585.474 461.898 cv
585.613 462.195 585.742 462.409 585.859 462.542 cv
586.046 462.757 586.271 462.924 586.537 463.043 cv
586.802 463.163 587.085 463.223 587.385 463.223 cv
588.007 463.223 588.524 462.972 588.933 462.469 cv
589.455 461.83 589.716 460.961 589.716 459.864 cv
589.716 458.601 li
589.716 458.131 589.672 457.722 589.583 457.374 cv
589.583 457.374 li
589.583 457.374 li
cp
f
325.319 475.499 mo
327.901 471.035 li
328.168 471.035 li
328.168 475.499 li
325.319 475.499 li
325.319 475.499 li
cp
328.168 477.631 mo
327.215 477.631 li
327.09 477.631 327 477.655 326.947 477.701 cv
326.895 477.747 326.868 477.809 326.868 477.886 cv
326.868 477.959 326.895 478.02 326.947 478.069 cv
327 478.116 327.09 478.141 327.215 478.141 cv
329.109 478.141 li
329.235 478.141 329.324 478.116 329.377 478.069 cv
329.43 478.02 329.457 477.959 329.457 477.886 cv
329.457 477.809 329.43 477.747 329.377 477.701 cv
329.324 477.655 329.235 477.631 329.109 477.631 cv
328.684 477.631 li
328.684 476.009 li
329.109 476.009 li
329.235 476.009 329.324 475.984 329.377 475.937 cv
329.43 475.888 329.457 475.827 329.457 475.754 cv
329.457 475.677 329.43 475.615 329.377 475.569 cv
329.324 475.522 329.235 475.499 329.109 475.499 cv
328.684 475.499 li
328.684 470.518 li
327.621 470.518 li
324.785 475.42 li
324.785 476.009 li
328.168 476.009 li
328.168 477.631 li
328.168 477.631 li
cp
317.66 471.149 mo
317.559 471.186 317.492 471.221 317.46 471.253 cv
317.419 471.306 317.398 471.363 317.398 471.423 cv
317.398 471.492 317.424 471.552 317.474 471.603 cv
317.525 471.653 317.581 471.679 317.642 471.679 cv
317.678 471.679 317.737 471.667 317.818 471.642 cv
319.482 471.119 li
319.482 477.631 li
317.732 477.631 li
317.611 477.631 317.524 477.655 317.471 477.701 cv
317.419 477.747 317.393 477.809 317.393 477.886 cv
317.393 477.959 317.419 478.02 317.471 478.069 cv
317.524 478.116 317.611 478.141 317.732 478.141 cv
321.74 478.141 li
321.863 478.141 321.95 478.116 322.004 478.069 cv
322.056 478.02 322.082 477.959 322.082 477.886 cv
322.082 477.809 322.056 477.747 322.004 477.701 cv
321.95 477.655 321.863 477.631 321.74 477.631 cv
319.992 477.631 li
319.992 470.415 li
317.66 471.149 li
317.66 471.149 li
cp
f
361.79 471.545 mo
361.912 471.545 361.999 471.521 362.051 471.475 cv
362.104 471.428 362.131 471.367 362.131 471.29 cv
362.131 471.213 362.104 471.151 362.051 471.104 cv
361.999 471.058 361.912 471.035 361.79 471.035 cv
359.907 471.035 li
359.786 471.035 359.699 471.058 359.646 471.104 cv
359.593 471.151 359.566 471.213 359.566 471.29 cv
359.566 471.367 359.593 471.428 359.646 471.475 cv
359.699 471.521 359.786 471.545 359.907 471.545 cv
360.85 471.545 li
360.85 475.809 li
360.85 476.21 360.744 476.57 360.536 476.89 cv
360.327 477.21 360.085 477.446 359.808 477.6 cv
359.529 477.754 359.223 477.831 358.887 477.831 cv
358.36 477.831 357.905 477.635 357.52 477.242 cv
357.137 476.849 356.943 476.371 356.943 475.809 cv
356.943 471.545 li
357.885 471.545 li
358.007 471.545 358.093 471.521 358.146 471.475 cv
358.198 471.428 358.226 471.367 358.226 471.29 cv
358.226 471.213 358.198 471.151 358.146 471.104 cv
358.093 471.058 358.007 471.035 357.885 471.035 cv
356.002 471.035 li
355.88 471.035 355.796 471.055 355.747 471.095 cv
355.689 471.148 355.662 471.213 355.662 471.29 cv
355.662 471.367 355.688 471.428 355.741 471.475 cv
355.793 471.521 355.88 471.545 356.002 471.545 cv
356.434 471.545 li
356.434 475.809 li
356.434 476.294 356.557 476.739 356.804 477.142 cv
357.051 477.545 357.351 477.846 357.703 478.044 cv
358.055 478.242 358.458 478.342 358.911 478.342 cv
359.588 478.342 360.165 478.098 360.643 477.613 cv
361.121 477.127 361.359 476.526 361.359 475.809 cv
361.359 471.545 li
361.79 471.545 li
361.79 471.545 li
cp
f
402.731 474.911 mo
402.731 475.688 402.569 476.369 402.246 476.954 cv
401.922 477.54 401.477 477.832 400.909 477.832 cv
400.618 477.832 400.357 477.759 400.126 477.613 cv
399.964 477.512 399.835 477.393 399.737 477.255 cv
399.563 477.008 399.408 476.676 399.273 476.258 cv
399.137 475.841 399.068 475.393 399.068 474.911 cv
399.068 473.786 li
399.068 473.009 399.23 472.329 399.556 471.746 cv
399.879 471.163 400.326 470.871 400.896 470.871 cv
401.186 470.871 401.444 470.942 401.675 471.083 cv
401.836 471.185 401.968 471.307 402.069 471.448 cv
402.24 471.695 402.393 472.026 402.528 472.441 cv
402.664 472.856 402.731 473.305 402.731 473.786 cv
402.731 474.911 li
402.731 474.911 li
cp
403.108 472.492 mo
403.043 472.25 402.942 471.981 402.805 471.685 cv
402.667 471.39 402.537 471.172 402.415 471.035 cv
402.23 470.82 402.004 470.653 401.742 470.534 cv
401.479 470.415 401.194 470.355 400.892 470.355 cv
400.268 470.355 399.752 470.605 399.342 471.108 cv
398.819 471.748 398.559 472.618 398.559 473.72 cv
398.559 474.983 li
398.559 475.448 398.605 475.856 398.699 476.204 cv
398.759 476.451 398.859 476.722 399 477.018 cv
399.139 477.313 399.268 477.528 399.385 477.661 cv
399.571 477.877 399.797 478.043 400.063 478.163 cv
400.327 478.283 400.61 478.342 400.909 478.342 cv
401.533 478.342 402.05 478.091 402.459 477.589 cv
402.981 476.949 403.242 476.081 403.242 474.983 cv
403.242 473.72 li
403.242 473.25 403.197 472.841 403.108 472.492 cv
403.108 472.492 li
403.108 472.492 li
cp
f
449.122 474.911 mo
449.122 475.688 448.96 476.369 448.637 476.954 cv
448.313 477.54 447.867 477.832 447.3 477.832 cv
447.009 477.832 446.747 477.759 446.517 477.613 cv
446.354 477.512 446.225 477.393 446.128 477.255 cv
445.953 477.008 445.798 476.676 445.663 476.258 cv
445.527 475.841 445.46 475.393 445.46 474.911 cv
445.46 473.786 li
445.46 473.009 445.622 472.329 445.945 471.746 cv
446.27 471.163 446.717 470.871 447.288 470.871 cv
447.575 470.871 447.835 470.942 448.064 471.083 cv
448.228 471.185 448.359 471.307 448.46 471.448 cv
448.63 471.695 448.782 472.026 448.919 472.441 cv
449.055 472.856 449.122 473.305 449.122 473.786 cv
449.122 474.911 li
449.122 474.911 li
cp
449.499 472.492 mo
449.434 472.25 449.332 471.981 449.195 471.685 cv
449.058 471.39 448.928 471.172 448.807 471.035 cv
448.62 470.82 448.396 470.653 448.132 470.534 cv
447.869 470.415 447.586 470.355 447.281 470.355 cv
446.658 470.355 446.142 470.605 445.733 471.108 cv
445.211 471.748 444.949 472.618 444.949 473.72 cv
444.949 474.983 li
444.949 475.448 444.996 475.856 445.089 476.204 cv
445.15 476.451 445.251 476.722 445.39 477.018 cv
445.53 477.313 445.658 477.528 445.775 477.661 cv
445.962 477.877 446.188 478.043 446.453 478.163 cv
446.718 478.283 447 478.342 447.3 478.342 cv
447.924 478.342 448.439 478.091 448.849 477.589 cv
449.371 476.949 449.632 476.081 449.632 474.983 cv
449.632 473.72 li
449.632 473.25 449.588 472.841 449.499 472.492 cv
449.499 472.492 li
449.499 472.492 li
cp
f
491.156 474.911 mo
491.156 475.688 490.993 476.369 490.67 476.954 cv
490.347 477.54 489.901 477.832 489.334 477.832 cv
489.042 477.832 488.781 477.759 488.551 477.613 cv
488.389 477.512 488.259 477.393 488.162 477.255 cv
487.987 477.008 487.833 476.676 487.696 476.258 cv
487.562 475.841 487.493 475.393 487.493 474.911 cv
487.493 473.786 li
487.493 473.009 487.655 472.329 487.979 471.746 cv
488.303 471.163 488.751 470.871 489.321 470.871 cv
489.609 470.871 489.868 470.942 490.1 471.083 cv
490.261 471.185 490.393 471.307 490.493 471.448 cv
490.664 471.695 490.817 472.026 490.953 472.441 cv
491.088 472.856 491.156 473.305 491.156 473.786 cv
491.156 474.911 li
491.156 474.911 li
cp
491.532 472.492 mo
491.468 472.25 491.367 471.981 491.229 471.685 cv
491.092 471.39 490.962 471.172 490.84 471.035 cv
490.653 470.82 490.43 470.653 490.166 470.534 cv
489.902 470.415 489.619 470.355 489.315 470.355 cv
488.691 470.355 488.176 470.605 487.767 471.108 cv
487.245 471.748 486.983 472.618 486.983 473.72 cv
486.983 474.983 li
486.983 475.448 487.029 475.856 487.123 476.204 cv
487.184 476.451 487.284 476.722 487.423 477.018 cv
487.563 477.313 487.691 477.528 487.809 477.661 cv
487.996 477.877 488.221 478.043 488.486 478.163 cv
488.752 478.283 489.034 478.342 489.334 478.342 cv
489.957 478.342 490.475 478.091 490.883 477.589 cv
491.404 476.949 491.666 476.081 491.666 474.983 cv
491.666 473.72 li
491.666 473.25 491.621 472.841 491.532 472.492 cv
491.532 472.492 li
491.532 472.492 li
cp
f
537.531 474.911 mo
537.531 475.688 537.369 476.369 537.045 476.954 cv
536.721 477.54 536.275 477.832 535.708 477.832 cv
535.417 477.832 535.156 477.759 534.925 477.613 cv
534.764 477.512 534.634 477.393 534.536 477.255 cv
534.362 477.008 534.207 476.676 534.072 476.258 cv
533.936 475.841 533.868 475.393 533.868 474.911 cv
533.868 473.786 li
533.868 473.009 534.03 472.329 534.354 471.746 cv
534.678 471.163 535.125 470.871 535.697 470.871 cv
535.984 470.871 536.242 470.942 536.475 471.083 cv
536.636 471.185 536.768 471.307 536.869 471.448 cv
537.039 471.695 537.192 472.026 537.327 472.441 cv
537.463 472.856 537.531 473.305 537.531 473.786 cv
537.531 474.911 li
537.531 474.911 li
cp
537.908 472.492 mo
537.843 472.25 537.742 471.981 537.604 471.685 cv
537.466 471.39 537.337 471.172 537.215 471.035 cv
537.028 470.82 536.804 470.653 536.541 470.534 cv
536.278 470.415 535.994 470.355 535.69 470.355 cv
535.067 470.355 534.552 470.605 534.141 471.108 cv
533.619 471.748 533.358 472.618 533.358 473.72 cv
533.358 474.983 li
533.358 475.448 533.404 475.856 533.497 476.204 cv
533.559 476.451 533.659 476.722 533.799 477.018 cv
533.938 477.313 534.067 477.528 534.185 477.661 cv
534.37 477.877 534.597 478.043 534.861 478.163 cv
535.126 478.283 535.408 478.342 535.708 478.342 cv
536.332 478.342 536.849 478.091 537.258 477.589 cv
537.78 476.949 538.042 476.081 538.042 474.983 cv
538.042 473.72 li
538.042 473.25 537.997 472.841 537.908 472.492 cv
537.908 472.492 li
537.908 472.492 li
cp
f
586.144 474.911 mo
586.144 475.688 585.98 476.369 585.657 476.954 cv
585.332 477.54 584.888 477.832 584.321 477.832 cv
584.029 477.832 583.768 477.759 583.537 477.613 cv
583.376 477.512 583.246 477.393 583.148 477.255 cv
582.975 477.008 582.82 476.676 582.684 476.258 cv
582.548 475.841 582.48 475.393 582.48 474.911 cv
582.48 473.786 li
582.48 473.009 582.643 472.329 582.966 471.746 cv
583.29 471.163 583.737 470.871 584.309 470.871 cv
584.596 470.871 584.854 470.942 585.087 471.083 cv
585.248 471.185 585.379 471.307 585.48 471.448 cv
585.651 471.695 585.804 472.026 585.939 472.441 cv
586.075 472.856 586.144 473.305 586.144 473.786 cv
586.144 474.911 li
586.144 474.911 li
cp
586.52 472.492 mo
586.455 472.25 586.354 471.981 586.216 471.685 cv
586.078 471.39 585.949 471.172 585.827 471.035 cv
585.641 470.82 585.416 470.653 585.152 470.534 cv
584.889 470.415 584.605 470.355 584.303 470.355 cv
583.679 470.355 583.162 470.605 582.754 471.108 cv
582.23 471.748 581.97 472.618 581.97 473.72 cv
581.97 474.983 li
581.97 475.448 582.017 475.856 582.109 476.204 cv
582.17 476.451 582.271 476.722 582.41 477.018 cv
582.55 477.313 582.679 477.528 582.796 477.661 cv
582.982 477.877 583.208 478.043 583.474 478.163 cv
583.738 478.283 584.021 478.342 584.321 478.342 cv
584.943 478.342 585.461 478.091 585.869 477.589 cv
586.392 476.949 586.652 476.081 586.652 474.983 cv
586.652 473.72 li
586.652 473.25 586.608 472.841 586.52 472.492 cv
586.52 472.492 li
586.52 472.492 li
cp
f
328.88 491.619 mo
329.002 491.619 329.09 491.595 329.141 491.546 cv
329.193 491.498 329.221 491.437 329.221 491.363 cv
329.221 491.287 329.193 491.223 329.141 491.175 cv
329.09 491.126 329.002 491.103 328.88 491.103 cv
325.316 491.103 li
325.316 494.49 li
325.316 494.579 325.338 494.649 325.383 494.697 cv
325.426 494.746 325.486 494.77 325.559 494.77 cv
325.611 494.77 325.702 494.738 325.832 494.673 cv
326.363 494.393 326.895 494.252 327.426 494.252 cv
327.945 494.252 328.373 494.429 328.71 494.779 cv
329.047 495.13 329.214 495.593 329.214 496.17 cv
329.214 496.847 329.021 497.388 328.63 497.797 cv
328.241 498.204 327.748 498.407 327.152 498.407 cv
326.431 498.407 325.763 498.122 325.151 497.55 cv
325.073 497.477 325 497.44 324.932 497.44 cv
324.867 497.44 324.811 497.466 324.762 497.516 cv
324.713 497.567 324.688 497.629 324.688 497.702 cv
324.688 497.791 324.766 497.903 324.92 498.036 cv
325.18 498.26 325.468 498.446 325.783 498.597 cv
326.229 498.811 326.693 498.918 327.176 498.918 cv
327.906 498.918 328.516 498.667 329.002 498.164 cv
329.488 497.662 329.731 497.005 329.731 496.194 cv
329.731 495.459 329.516 494.868 329.084 494.417 cv
328.651 493.967 328.115 493.742 327.475 493.742 cv
327.229 493.742 326.965 493.773 326.69 493.836 cv
326.414 493.899 326.127 493.994 325.826 494.12 cv
325.826 491.619 li
328.88 491.619 li
328.88 491.619 li
cp
317.663 491.735 mo
317.561 491.771 317.494 491.806 317.463 491.838 cv
317.421 491.891 317.4 491.947 317.4 492.008 cv
317.4 492.077 317.426 492.138 317.477 492.188 cv
317.527 492.238 317.584 492.264 317.645 492.264 cv
317.682 492.264 317.738 492.251 317.82 492.228 cv
319.487 491.704 li
319.487 498.226 li
317.735 498.226 li
317.614 498.226 317.527 498.249 317.474 498.295 cv
317.421 498.342 317.395 498.404 317.395 498.48 cv
317.395 498.554 317.421 498.615 317.474 498.663 cv
317.527 498.712 317.614 498.736 317.735 498.736 cv
321.75 498.736 li
321.872 498.736 321.959 498.712 322.012 498.663 cv
322.064 498.615 322.092 498.554 322.092 498.48 cv
322.092 498.404 322.064 498.342 322.012 498.295 cv
321.959 498.249 321.872 498.226 321.75 498.226 cv
319.998 498.226 li
319.998 490.999 li
317.663 491.735 li
317.663 491.735 li
cp
f
358.965 491.455 mo
358.419 491.455 357.91 491.595 357.442 491.878 cv
356.974 492.159 356.604 492.563 356.335 493.088 cv
356.064 493.613 355.93 494.127 355.93 494.63 cv
355.93 495.67 li
355.93 496.023 355.98 496.347 356.082 496.641 cv
356.184 496.935 356.373 497.254 356.651 497.602 cv
356.929 497.949 357.164 498.195 357.354 498.341 cv
357.544 498.487 357.786 498.615 358.077 498.725 cv
358.459 498.866 358.834 498.937 359.203 498.937 cv
359.629 498.937 360.049 498.843 360.466 498.654 cv
360.881 498.465 361.255 498.185 361.588 497.812 cv
361.762 497.621 361.85 497.479 361.85 497.386 cv
361.85 497.317 361.827 497.26 361.782 497.215 cv
361.738 497.17 361.678 497.149 361.605 497.149 cv
361.521 497.149 361.443 497.191 361.375 497.276 cv
361.049 497.662 360.715 497.95 360.367 498.14 cv
360.021 498.331 359.629 498.426 359.191 498.426 cv
358.461 498.426 357.82 498.145 357.269 497.583 cv
356.718 497.022 356.441 496.36 356.441 495.597 cv
356.441 494.704 li
356.441 494.347 356.498 494.026 356.611 493.742 cv
356.77 493.357 356.982 493.006 357.25 492.689 cv
357.404 492.507 357.61 492.353 357.87 492.228 cv
358.22 492.053 358.591 491.965 358.983 491.965 cv
359.584 491.965 360.12 492.147 360.59 492.507 cv
360.938 492.771 361.122 493.073 361.144 493.413 cv
361.151 493.522 361.179 493.602 361.226 493.65 cv
361.271 493.699 361.33 493.724 361.399 493.724 cv
361.477 493.724 361.538 493.698 361.585 493.645 cv
361.632 493.592 361.654 493.503 361.654 493.377 cv
361.654 491.959 li
361.654 491.838 361.632 491.751 361.585 491.698 cv
361.538 491.646 361.477 491.619 361.399 491.619 cv
361.322 491.619 361.26 491.646 361.213 491.698 cv
361.167 491.751 361.144 491.838 361.144 491.959 cv
361.144 492.319 li
360.535 491.742 359.81 491.455 358.965 491.455 cv
358.965 491.455 li
358.965 491.455 li
cp
f
402.731 495.487 mo
402.731 496.264 402.569 496.945 402.246 497.53 cv
401.922 498.116 401.477 498.408 400.909 498.408 cv
400.618 498.408 400.357 498.335 400.126 498.189 cv
399.964 498.088 399.835 497.969 399.737 497.831 cv
399.563 497.584 399.408 497.252 399.273 496.835 cv
399.137 496.418 399.068 495.969 399.068 495.487 cv
399.068 494.363 li
399.068 493.585 399.23 492.905 399.556 492.322 cv
399.879 491.74 400.326 491.448 400.896 491.448 cv
401.186 491.448 401.444 491.519 401.675 491.66 cv
401.836 491.762 401.968 491.883 402.069 492.025 cv
402.24 492.271 402.393 492.602 402.528 493.018 cv
402.664 493.433 402.731 493.881 402.731 494.363 cv
402.731 495.487 li
402.731 495.487 li
cp
403.108 493.069 mo
403.043 492.826 402.942 492.557 402.805 492.262 cv
402.667 491.966 402.537 491.749 402.415 491.612 cv
402.23 491.397 402.004 491.23 401.742 491.111 cv
401.479 490.991 401.194 490.931 400.892 490.931 cv
400.268 490.931 399.752 491.182 399.342 491.685 cv
398.819 492.324 398.559 493.194 398.559 494.296 cv
398.559 495.56 li
398.559 496.025 398.605 496.432 398.699 496.78 cv
398.759 497.028 398.859 497.298 399 497.594 cv
399.139 497.89 399.268 498.105 399.385 498.238 cv
399.571 498.453 399.797 498.62 400.063 498.739 cv
400.327 498.858 400.61 498.918 400.909 498.918 cv
401.533 498.918 402.05 498.667 402.459 498.165 cv
402.981 497.525 403.242 496.657 403.242 495.56 cv
403.242 494.296 li
403.242 493.827 403.197 493.418 403.108 493.069 cv
403.108 493.069 li
403.108 493.069 li
cp
f
449.122 495.487 mo
449.122 496.264 448.96 496.945 448.637 497.53 cv
448.313 498.116 447.867 498.408 447.3 498.408 cv
447.009 498.408 446.747 498.335 446.517 498.189 cv
446.354 498.088 446.225 497.969 446.128 497.831 cv
445.953 497.584 445.798 497.252 445.663 496.835 cv
445.527 496.418 445.46 495.969 445.46 495.487 cv
445.46 494.363 li
445.46 493.585 445.622 492.905 445.945 492.322 cv
446.27 491.74 446.717 491.448 447.288 491.448 cv
447.575 491.448 447.835 491.519 448.064 491.66 cv
448.228 491.762 448.359 491.883 448.46 492.025 cv
448.63 492.271 448.782 492.602 448.919 493.018 cv
449.055 493.433 449.122 493.881 449.122 494.363 cv
449.122 495.487 li
449.122 495.487 li
cp
449.499 493.069 mo
449.434 492.826 449.332 492.557 449.195 492.262 cv
449.058 491.966 448.928 491.749 448.807 491.612 cv
448.62 491.397 448.396 491.23 448.132 491.111 cv
447.869 490.991 447.586 490.931 447.281 490.931 cv
446.658 490.931 446.142 491.182 445.733 491.685 cv
445.211 492.324 444.949 493.194 444.949 494.296 cv
444.949 495.56 li
444.949 496.025 444.996 496.432 445.089 496.78 cv
445.15 497.028 445.251 497.298 445.39 497.594 cv
445.53 497.89 445.658 498.105 445.775 498.238 cv
445.962 498.453 446.188 498.62 446.453 498.739 cv
446.718 498.858 447 498.918 447.3 498.918 cv
447.924 498.918 448.439 498.667 448.849 498.165 cv
449.371 497.525 449.632 496.657 449.632 495.56 cv
449.632 494.296 li
449.632 493.827 449.588 493.418 449.499 493.069 cv
449.499 493.069 li
449.499 493.069 li
cp
f
491.156 495.487 mo
491.156 496.264 490.993 496.945 490.67 497.53 cv
490.347 498.116 489.901 498.408 489.334 498.408 cv
489.042 498.408 488.781 498.335 488.551 498.189 cv
488.389 498.088 488.259 497.969 488.162 497.831 cv
487.987 497.584 487.833 497.252 487.696 496.835 cv
487.562 496.418 487.493 495.969 487.493 495.487 cv
487.493 494.363 li
487.493 493.585 487.655 492.905 487.979 492.322 cv
488.303 491.74 488.751 491.448 489.321 491.448 cv
489.609 491.448 489.868 491.519 490.1 491.66 cv
490.261 491.762 490.393 491.883 490.493 492.025 cv
490.664 492.271 490.817 492.602 490.953 493.018 cv
491.088 493.433 491.156 493.881 491.156 494.363 cv
491.156 495.487 li
491.156 495.487 li
cp
491.532 493.069 mo
491.468 492.826 491.367 492.557 491.229 492.262 cv
491.092 491.966 490.962 491.749 490.84 491.612 cv
490.653 491.397 490.43 491.23 490.166 491.111 cv
489.902 490.991 489.619 490.931 489.315 490.931 cv
488.691 490.931 488.176 491.182 487.767 491.685 cv
487.245 492.324 486.983 493.194 486.983 494.296 cv
486.983 495.56 li
486.983 496.025 487.029 496.432 487.123 496.78 cv
487.184 497.028 487.284 497.298 487.423 497.594 cv
487.563 497.89 487.691 498.105 487.809 498.238 cv
487.996 498.453 488.221 498.62 488.486 498.739 cv
488.752 498.858 489.034 498.918 489.334 498.918 cv
489.957 498.918 490.475 498.667 490.883 498.165 cv
491.404 497.525 491.666 496.657 491.666 495.56 cv
491.666 494.296 li
491.666 493.827 491.621 493.418 491.532 493.069 cv
491.532 493.069 li
491.532 493.069 li
cp
f
537.531 495.487 mo
537.531 496.264 537.369 496.945 537.045 497.53 cv
536.721 498.116 536.275 498.408 535.708 498.408 cv
535.417 498.408 535.156 498.335 534.925 498.189 cv
534.764 498.088 534.634 497.969 534.536 497.831 cv
534.362 497.584 534.207 497.252 534.072 496.835 cv
533.936 496.418 533.868 495.969 533.868 495.487 cv
533.868 494.363 li
533.868 493.585 534.03 492.905 534.354 492.322 cv
534.678 491.74 535.125 491.448 535.697 491.448 cv
535.984 491.448 536.242 491.519 536.475 491.66 cv
536.636 491.762 536.768 491.883 536.869 492.025 cv
537.039 492.271 537.192 492.602 537.327 493.018 cv
537.463 493.433 537.531 493.881 537.531 494.363 cv
537.531 495.487 li
537.531 495.487 li
cp
537.908 493.069 mo
537.843 492.826 537.742 492.557 537.604 492.262 cv
537.466 491.966 537.337 491.749 537.215 491.612 cv
537.028 491.397 536.804 491.23 536.541 491.111 cv
536.278 490.991 535.994 490.931 535.69 490.931 cv
535.067 490.931 534.552 491.182 534.141 491.685 cv
533.619 492.324 533.358 493.194 533.358 494.296 cv
533.358 495.56 li
533.358 496.025 533.404 496.432 533.497 496.78 cv
533.559 497.028 533.659 497.298 533.799 497.594 cv
533.938 497.89 534.067 498.105 534.185 498.238 cv
534.37 498.453 534.597 498.62 534.861 498.739 cv
535.126 498.858 535.408 498.918 535.708 498.918 cv
536.332 498.918 536.849 498.667 537.258 498.165 cv
537.78 497.525 538.042 496.657 538.042 495.56 cv
538.042 494.296 li
538.042 493.827 537.997 493.418 537.908 493.069 cv
537.908 493.069 li
537.908 493.069 li
cp
f
586.144 495.487 mo
586.144 496.264 585.98 496.945 585.657 497.53 cv
585.332 498.116 584.888 498.408 584.321 498.408 cv
584.029 498.408 583.768 498.335 583.537 498.189 cv
583.376 498.088 583.246 497.969 583.148 497.831 cv
582.975 497.584 582.82 497.252 582.684 496.835 cv
582.548 496.418 582.48 495.969 582.48 495.487 cv
582.48 494.363 li
582.48 493.585 582.643 492.905 582.966 492.322 cv
583.29 491.74 583.737 491.448 584.309 491.448 cv
584.596 491.448 584.854 491.519 585.087 491.66 cv
585.248 491.762 585.379 491.883 585.48 492.025 cv
585.651 492.271 585.804 492.602 585.939 493.018 cv
586.075 493.433 586.144 493.881 586.144 494.363 cv
586.144 495.487 li
586.144 495.487 li
cp
586.52 493.069 mo
586.455 492.826 586.354 492.557 586.216 492.262 cv
586.078 491.966 585.949 491.749 585.827 491.612 cv
585.641 491.397 585.416 491.23 585.152 491.111 cv
584.889 490.991 584.605 490.931 584.303 490.931 cv
583.679 490.931 583.162 491.182 582.754 491.685 cv
582.23 492.324 581.97 493.194 581.97 494.296 cv
581.97 495.56 li
581.97 496.025 582.017 496.432 582.109 496.78 cv
582.17 497.028 582.271 497.298 582.41 497.594 cv
582.55 497.89 582.679 498.105 582.796 498.238 cv
582.982 498.453 583.208 498.62 583.474 498.739 cv
583.738 498.858 584.021 498.918 584.321 498.918 cv
584.943 498.918 585.461 498.667 585.869 498.165 cv
586.392 497.525 586.652 496.657 586.652 495.56 cv
586.652 494.296 li
586.652 493.827 586.608 493.418 586.52 493.069 cv
586.52 493.069 li
586.52 493.069 li
cp
f
326.631 515.735 mo
326.996 515.399 327.374 515.231 327.768 515.231 cv
328.176 515.231 328.543 515.405 328.867 515.752 cv
329.19 516.102 329.353 516.542 329.353 517.071 cv
329.353 517.637 329.191 518.098 328.87 518.454 cv
328.547 518.807 328.16 518.985 327.707 518.985 cv
327.257 518.985 326.867 518.827 326.537 518.51 cv
326.208 518.196 325.965 517.668 325.812 516.932 cv
326.115 516.358 326.389 515.958 326.631 515.735 cv
326.631 515.735 li
326.631 515.735 li
cp
325.66 515.461 mo
325.66 514.526 325.984 513.719 326.635 513.042 cv
327.284 512.364 328.004 512.024 328.793 512.024 cv
329.041 512.024 329.247 512.065 329.413 512.145 cv
329.486 512.186 329.549 512.206 329.602 512.206 cv
329.671 512.206 329.727 512.182 329.771 512.137 cv
329.816 512.09 329.838 512.03 329.838 511.956 cv
329.838 511.856 329.789 511.774 329.693 511.713 cv
329.467 511.577 329.182 511.508 328.843 511.508 cv
328.34 511.508 327.873 511.61 327.442 511.815 cv
327.012 512.018 326.634 512.282 326.309 512.604 cv
325.985 512.926 325.727 513.299 325.531 513.725 cv
325.277 514.276 325.149 514.87 325.149 515.51 cv
325.149 516.36 325.285 517.135 325.556 517.836 cv
325.775 518.399 326.076 518.817 326.459 519.088 cv
326.841 519.358 327.254 519.495 327.695 519.495 cv
328.371 519.495 328.9 519.243 329.285 518.739 cv
329.671 518.235 329.863 517.678 329.863 517.071 cv
329.863 516.407 329.652 515.85 329.23 515.397 cv
328.811 514.946 328.328 514.721 327.785 514.721 cv
327.377 514.721 327.006 514.833 326.672 515.055 cv
326.336 515.278 326.012 515.622 325.696 516.086 cv
325.672 515.803 325.66 515.596 325.66 515.461 cv
325.66 515.461 li
325.66 515.461 li
cp
317.66 512.321 mo
317.559 512.358 317.492 512.393 317.46 512.424 cv
317.419 512.477 317.398 512.534 317.398 512.594 cv
317.398 512.665 317.424 512.723 317.474 512.774 cv
317.525 512.825 317.581 512.85 317.642 512.85 cv
317.678 512.85 317.737 512.838 317.818 512.813 cv
319.482 512.292 li
319.482 518.803 li
317.732 518.803 li
317.611 518.803 317.524 518.825 317.471 518.872 cv
317.419 518.918 317.393 518.981 317.393 519.057 cv
317.393 519.131 317.419 519.192 317.471 519.239 cv
317.524 519.288 317.611 519.313 317.732 519.313 cv
321.74 519.313 li
321.863 519.313 321.95 519.288 322.004 519.239 cv
322.056 519.192 322.082 519.131 322.082 519.057 cv
322.082 518.981 322.056 518.918 322.004 518.872 cv
321.95 518.825 321.863 518.803 321.74 518.803 cv
319.992 518.803 li
319.992 511.586 li
317.66 512.321 li
317.66 512.321 li
cp
f
361.79 512.717 mo
361.912 512.717 361.999 512.692 362.051 512.647 cv
362.104 512.6 362.131 512.538 362.131 512.461 cv
362.131 512.383 362.104 512.323 362.051 512.276 cv
361.999 512.229 361.912 512.206 361.79 512.206 cv
359.907 512.206 li
359.786 512.206 359.699 512.229 359.646 512.276 cv
359.593 512.323 359.566 512.383 359.566 512.461 cv
359.566 512.538 359.593 512.6 359.646 512.647 cv
359.699 512.692 359.786 512.717 359.907 512.717 cv
360.85 512.717 li
360.85 516.979 li
360.85 517.379 360.744 517.741 360.536 518.061 cv
360.327 518.381 360.085 518.618 359.808 518.772 cv
359.529 518.924 359.223 519.002 358.887 519.002 cv
358.36 519.002 357.905 518.807 357.52 518.415 cv
357.137 518.02 356.943 517.543 356.943 516.979 cv
356.943 512.717 li
357.885 512.717 li
358.007 512.717 358.093 512.692 358.146 512.647 cv
358.198 512.6 358.226 512.538 358.226 512.461 cv
358.226 512.383 358.198 512.323 358.146 512.276 cv
358.093 512.229 358.007 512.206 357.885 512.206 cv
356.002 512.206 li
355.88 512.206 355.796 512.227 355.747 512.266 cv
355.689 512.321 355.662 512.383 355.662 512.461 cv
355.662 512.538 355.688 512.6 355.741 512.647 cv
355.793 512.692 355.88 512.717 356.002 512.717 cv
356.434 512.717 li
356.434 516.979 li
356.434 517.465 356.557 517.911 356.804 518.313 cv
357.051 518.715 357.351 519.016 357.703 519.215 cv
358.055 519.415 358.458 519.512 358.911 519.512 cv
359.588 519.512 360.165 519.27 360.643 518.784 cv
361.121 518.297 361.359 517.698 361.359 516.979 cv
361.359 512.717 li
361.79 512.717 li
361.79 512.717 li
cp
f
402.731 516.063 mo
402.731 516.84 402.569 517.522 402.246 518.106 cv
401.922 518.692 401.477 518.985 400.909 518.985 cv
400.618 518.985 400.357 518.911 400.126 518.766 cv
399.964 518.665 399.835 518.545 399.737 518.407 cv
399.563 518.161 399.408 517.829 399.273 517.411 cv
399.137 516.995 399.068 516.545 399.068 516.063 cv
399.068 514.94 li
399.068 514.163 399.23 513.481 399.556 512.899 cv
399.879 512.315 400.326 512.024 400.896 512.024 cv
401.186 512.024 401.444 512.094 401.675 512.237 cv
401.836 512.338 401.968 512.459 402.069 512.6 cv
402.24 512.848 402.393 513.178 402.528 513.594 cv
402.664 514.008 402.731 514.458 402.731 514.94 cv
402.731 516.063 li
402.731 516.063 li
cp
403.108 513.645 mo
403.043 513.403 402.942 513.133 402.805 512.838 cv
402.667 512.542 402.537 512.325 402.415 512.188 cv
402.23 511.973 402.004 511.805 401.742 511.686 cv
401.479 511.567 401.194 511.508 400.892 511.508 cv
400.268 511.508 399.752 511.758 399.342 512.26 cv
398.819 512.901 398.559 513.772 398.559 514.874 cv
398.559 516.135 li
398.559 516.602 398.605 517.008 398.699 517.358 cv
398.759 517.604 398.859 517.875 399 518.17 cv
399.139 518.465 399.268 518.68 399.385 518.815 cv
399.571 519.03 399.797 519.196 400.063 519.315 cv
400.327 519.436 400.61 519.495 400.909 519.495 cv
401.533 519.495 402.05 519.245 402.459 518.743 cv
402.981 518.102 403.242 517.233 403.242 516.135 cv
403.242 514.874 li
403.242 514.403 403.197 513.995 403.108 513.645 cv
403.108 513.645 li
403.108 513.645 li
cp
f
449.122 516.063 mo
449.122 516.84 448.96 517.522 448.637 518.106 cv
448.313 518.692 447.867 518.985 447.3 518.985 cv
447.009 518.985 446.747 518.911 446.517 518.766 cv
446.354 518.665 446.225 518.545 446.128 518.407 cv
445.953 518.161 445.798 517.829 445.663 517.411 cv
445.527 516.995 445.46 516.545 445.46 516.063 cv
445.46 514.94 li
445.46 514.163 445.622 513.481 445.945 512.899 cv
446.27 512.315 446.717 512.024 447.288 512.024 cv
447.575 512.024 447.835 512.094 448.064 512.237 cv
448.228 512.338 448.359 512.459 448.46 512.6 cv
448.63 512.848 448.782 513.178 448.919 513.594 cv
449.055 514.008 449.122 514.458 449.122 514.94 cv
449.122 516.063 li
449.122 516.063 li
cp
449.499 513.645 mo
449.434 513.403 449.332 513.133 449.195 512.838 cv
449.058 512.542 448.928 512.325 448.807 512.188 cv
448.62 511.973 448.396 511.805 448.132 511.686 cv
447.869 511.567 447.586 511.508 447.281 511.508 cv
446.658 511.508 446.142 511.758 445.733 512.26 cv
445.211 512.901 444.949 513.772 444.949 514.874 cv
444.949 516.135 li
444.949 516.602 444.996 517.008 445.089 517.358 cv
445.15 517.604 445.251 517.875 445.39 518.17 cv
445.53 518.465 445.658 518.68 445.775 518.815 cv
445.962 519.03 446.188 519.196 446.453 519.315 cv
446.718 519.436 447 519.495 447.3 519.495 cv
447.924 519.495 448.439 519.245 448.849 518.743 cv
449.371 518.102 449.632 517.233 449.632 516.135 cv
449.632 514.874 li
449.632 514.403 449.588 513.995 449.499 513.645 cv
449.499 513.645 li
449.499 513.645 li
cp
f
491.156 516.063 mo
491.156 516.84 490.993 517.522 490.67 518.106 cv
490.347 518.692 489.901 518.985 489.334 518.985 cv
489.042 518.985 488.781 518.911 488.551 518.766 cv
488.389 518.665 488.259 518.545 488.162 518.407 cv
487.987 518.161 487.833 517.829 487.696 517.411 cv
487.562 516.995 487.493 516.545 487.493 516.063 cv
487.493 514.94 li
487.493 514.163 487.655 513.481 487.979 512.899 cv
488.303 512.315 488.751 512.024 489.321 512.024 cv
489.609 512.024 489.868 512.094 490.1 512.237 cv
490.261 512.338 490.393 512.459 490.493 512.6 cv
490.664 512.848 490.817 513.178 490.953 513.594 cv
491.088 514.008 491.156 514.458 491.156 514.94 cv
491.156 516.063 li
491.156 516.063 li
cp
491.532 513.645 mo
491.468 513.403 491.367 513.133 491.229 512.838 cv
491.092 512.542 490.962 512.325 490.84 512.188 cv
490.653 511.973 490.43 511.805 490.166 511.686 cv
489.902 511.567 489.619 511.508 489.315 511.508 cv
488.691 511.508 488.176 511.758 487.767 512.26 cv
487.245 512.901 486.983 513.772 486.983 514.874 cv
486.983 516.135 li
486.983 516.602 487.029 517.008 487.123 517.358 cv
487.184 517.604 487.284 517.875 487.423 518.17 cv
487.563 518.465 487.691 518.68 487.809 518.815 cv
487.996 519.03 488.221 519.196 488.486 519.315 cv
488.752 519.436 489.034 519.495 489.334 519.495 cv
489.957 519.495 490.475 519.245 490.883 518.743 cv
491.404 518.102 491.666 517.233 491.666 516.135 cv
491.666 514.874 li
491.666 514.403 491.621 513.995 491.532 513.645 cv
491.532 513.645 li
491.532 513.645 li
cp
f
537.531 516.063 mo
537.531 516.84 537.369 517.522 537.045 518.106 cv
536.721 518.692 536.275 518.985 535.708 518.985 cv
535.417 518.985 535.156 518.911 534.925 518.766 cv
534.764 518.665 534.634 518.545 534.536 518.407 cv
534.362 518.161 534.207 517.829 534.072 517.411 cv
533.936 516.995 533.868 516.545 533.868 516.063 cv
533.868 514.94 li
533.868 514.163 534.03 513.481 534.354 512.899 cv
534.678 512.315 535.125 512.024 535.697 512.024 cv
535.984 512.024 536.242 512.094 536.475 512.237 cv
536.636 512.338 536.768 512.459 536.869 512.6 cv
537.039 512.848 537.192 513.178 537.327 513.594 cv
537.463 514.008 537.531 514.458 537.531 514.94 cv
537.531 516.063 li
537.531 516.063 li
cp
537.908 513.645 mo
537.843 513.403 537.742 513.133 537.604 512.838 cv
537.466 512.542 537.337 512.325 537.215 512.188 cv
537.028 511.973 536.804 511.805 536.541 511.686 cv
536.278 511.567 535.994 511.508 535.69 511.508 cv
535.067 511.508 534.552 511.758 534.141 512.26 cv
533.619 512.901 533.358 513.772 533.358 514.874 cv
533.358 516.135 li
533.358 516.602 533.404 517.008 533.497 517.358 cv
533.559 517.604 533.659 517.875 533.799 518.17 cv
533.938 518.465 534.067 518.68 534.185 518.815 cv
534.37 519.03 534.597 519.196 534.861 519.315 cv
535.126 519.436 535.408 519.495 535.708 519.495 cv
536.332 519.495 536.849 519.245 537.258 518.743 cv
537.78 518.102 538.042 517.233 538.042 516.135 cv
538.042 514.874 li
538.042 514.403 537.997 513.995 537.908 513.645 cv
537.908 513.645 li
537.908 513.645 li
cp
f
586.144 516.063 mo
586.144 516.84 585.98 517.522 585.657 518.106 cv
585.332 518.692 584.888 518.985 584.321 518.985 cv
584.029 518.985 583.768 518.911 583.537 518.766 cv
583.376 518.665 583.246 518.545 583.148 518.407 cv
582.975 518.161 582.82 517.829 582.684 517.411 cv
582.548 516.995 582.48 516.545 582.48 516.063 cv
582.48 514.94 li
582.48 514.163 582.643 513.481 582.966 512.899 cv
583.29 512.315 583.737 512.024 584.309 512.024 cv
584.596 512.024 584.854 512.094 585.087 512.237 cv
585.248 512.338 585.379 512.459 585.48 512.6 cv
585.651 512.848 585.804 513.178 585.939 513.594 cv
586.075 514.008 586.144 514.458 586.144 514.94 cv
586.144 516.063 li
586.144 516.063 li
cp
586.52 513.645 mo
586.455 513.403 586.354 513.133 586.216 512.838 cv
586.078 512.542 585.949 512.325 585.827 512.188 cv
585.641 511.973 585.416 511.805 585.152 511.686 cv
584.889 511.567 584.605 511.508 584.303 511.508 cv
583.679 511.508 583.162 511.758 582.754 512.26 cv
582.23 512.901 581.97 513.772 581.97 514.874 cv
581.97 516.135 li
581.97 516.602 582.017 517.008 582.109 517.358 cv
582.17 517.604 582.271 517.875 582.41 518.17 cv
582.55 518.465 582.679 518.68 582.796 518.815 cv
582.982 519.03 583.208 519.196 583.474 519.315 cv
583.738 519.436 584.021 519.495 584.321 519.495 cv
584.943 519.495 585.461 519.245 585.869 518.743 cv
586.392 518.102 586.652 517.233 586.652 516.135 cv
586.652 514.874 li
586.652 514.403 586.608 513.995 586.52 513.645 cv
586.52 513.645 li
586.52 513.645 li
cp
f
326.91 539.489 mo
326.887 539.561 326.874 539.618 326.874 539.659 cv
326.874 539.723 326.898 539.78 326.947 539.829 cv
326.996 539.877 327.057 539.901 327.13 539.901 cv
327.187 539.901 327.236 539.883 327.281 539.85 cv
327.326 539.815 327.364 539.745 327.396 539.641 cv
329.449 533.081 li
329.449 532.266 li
324.767 532.266 li
324.767 533.233 li
324.767 533.354 324.791 533.44 324.84 533.493 cv
324.889 533.545 324.949 533.573 325.021 533.573 cv
325.1 533.573 325.16 533.545 325.208 533.493 cv
325.254 533.44 325.277 533.354 325.277 533.233 cv
325.277 532.782 li
328.934 532.782 li
328.934 533.012 li
326.91 539.489 li
326.91 539.489 li
cp
317.66 532.899 mo
317.559 532.934 317.492 532.969 317.46 533 cv
317.419 533.055 317.398 533.11 317.398 533.17 cv
317.398 533.239 317.424 533.299 317.474 533.35 cv
317.525 533.401 317.581 533.426 317.642 533.426 cv
317.678 533.426 317.737 533.415 317.818 533.389 cv
319.482 532.868 li
319.482 539.379 li
317.732 539.379 li
317.611 539.379 317.524 539.403 317.471 539.448 cv
317.419 539.495 317.393 539.557 317.393 539.635 cv
317.393 539.708 317.419 539.768 317.471 539.817 cv
317.524 539.864 317.611 539.889 317.732 539.889 cv
321.74 539.889 li
321.863 539.889 321.95 539.864 322.004 539.817 cv
322.056 539.768 322.082 539.708 322.082 539.635 cv
322.082 539.557 322.056 539.495 322.004 539.448 cv
321.95 539.403 321.863 539.379 321.74 539.379 cv
319.992 539.379 li
319.992 532.163 li
317.66 532.899 li
317.66 532.899 li
cp
f
362.027 537.231 mo
362.068 537.217 362.104 537.188 362.137 537.143 cv
362.169 537.098 362.186 537.051 362.186 536.997 cv
362.186 536.92 362.159 536.86 362.105 536.813 cv
362.054 536.766 361.967 536.743 361.845 536.743 cv
359.392 536.737 li
359.271 536.737 359.183 536.76 359.13 536.809 cv
359.077 536.858 359.051 536.92 359.051 536.997 cv
359.051 537.075 359.077 537.137 359.13 537.184 cv
359.183 537.229 359.271 537.252 359.392 537.252 cv
361.146 537.252 li
361.146 539.141 li
360.794 539.303 360.486 539.417 360.223 539.481 cv
359.96 539.547 359.675 539.581 359.366 539.581 cv
358.455 539.581 357.741 539.331 357.223 538.833 cv
356.704 538.334 356.445 537.663 356.445 536.815 cv
356.445 535.887 li
356.445 535.409 356.554 534.981 356.773 534.604 cv
357.102 534.03 357.455 533.639 357.833 533.436 cv
358.212 533.231 358.637 533.129 359.105 533.129 cv
359.604 533.129 360.065 533.239 360.487 533.458 cv
360.91 533.676 361.134 533.958 361.158 534.301 cv
361.162 534.418 361.188 534.5 361.234 534.547 cv
361.281 534.594 361.339 534.616 361.407 534.616 cv
361.48 534.616 361.541 534.592 361.59 534.54 cv
361.639 534.491 361.663 534.403 361.663 534.276 cv
361.663 533.122 li
361.663 533 361.639 532.915 361.59 532.862 cv
361.541 532.809 361.48 532.782 361.407 532.782 cv
361.351 532.782 361.3 532.797 361.256 532.829 cv
361.211 532.858 361.183 532.893 361.167 532.934 cv
361.154 532.975 361.146 533.094 361.146 533.293 cv
360.579 532.844 359.885 532.62 359.063 532.62 cv
358.496 532.62 357.972 532.758 357.49 533.038 cv
357.009 533.317 356.628 533.721 356.352 534.249 cv
356.074 534.778 355.936 535.323 355.936 535.879 cv
355.936 536.815 li
355.936 537.37 356.015 537.829 356.175 538.188 cv
356.336 538.549 356.559 538.874 356.846 539.167 cv
357.134 539.458 357.485 539.684 357.9 539.846 cv
358.314 540.008 358.796 540.09 359.343 540.09 cv
359.728 540.09 360.112 540.036 360.499 539.926 cv
360.886 539.817 361.274 539.653 361.663 539.44 cv
361.663 537.252 li
361.866 537.252 361.986 537.245 362.027 537.231 cv
362.027 537.231 li
cp
f
398.819 532.917 mo
398.719 532.954 398.651 532.987 398.619 533.02 cv
398.579 533.073 398.559 533.129 398.559 533.19 cv
398.559 533.258 398.584 533.319 398.635 533.37 cv
398.685 533.42 398.74 533.446 398.802 533.446 cv
398.838 533.446 398.896 533.432 398.979 533.409 cv
400.642 532.885 li
400.642 539.397 li
398.893 539.397 li
398.771 539.397 398.685 539.42 398.632 539.467 cv
398.579 539.514 398.553 539.575 398.553 539.653 cv
398.553 539.725 398.579 539.786 398.632 539.836 cv
398.685 539.883 398.771 539.909 398.893 539.909 cv
402.902 539.909 li
403.023 539.909 403.11 539.883 403.163 539.836 cv
403.215 539.786 403.242 539.725 403.242 539.653 cv
403.242 539.575 403.215 539.514 403.163 539.467 cv
403.11 539.42 403.023 539.397 402.902 539.397 cv
401.152 539.397 li
401.152 532.182 li
398.819 532.917 li
398.819 532.917 li
cp
f
449.122 536.659 mo
449.122 537.434 448.96 538.118 448.637 538.702 cv
448.313 539.288 447.867 539.581 447.3 539.581 cv
447.009 539.581 446.747 539.508 446.517 539.362 cv
446.354 539.26 446.225 539.141 446.128 539.002 cv
445.953 538.756 445.798 538.424 445.663 538.006 cv
445.527 537.59 445.46 537.139 445.46 536.659 cv
445.46 535.534 li
445.46 534.756 445.622 534.077 445.945 533.493 cv
446.27 532.911 446.717 532.62 447.288 532.62 cv
447.575 532.62 447.835 532.69 448.064 532.833 cv
448.228 532.932 448.359 533.055 448.46 533.196 cv
448.63 533.444 448.782 533.774 448.919 534.188 cv
449.055 534.604 449.122 535.053 449.122 535.534 cv
449.122 536.659 li
449.122 536.659 li
cp
449.499 534.241 mo
449.434 533.999 449.332 533.729 449.195 533.432 cv
449.058 533.137 448.928 532.92 448.807 532.784 cv
448.62 532.569 448.396 532.401 448.132 532.282 cv
447.869 532.163 447.586 532.102 447.281 532.102 cv
446.658 532.102 446.142 532.354 445.733 532.856 cv
445.211 533.495 444.949 534.366 444.949 535.467 cv
444.949 536.731 li
444.949 537.196 444.996 537.604 445.089 537.952 cv
445.15 538.198 445.251 538.471 445.39 538.766 cv
445.53 539.061 445.658 539.276 445.775 539.409 cv
445.962 539.624 446.188 539.792 446.453 539.911 cv
446.718 540.03 447 540.09 447.3 540.09 cv
447.924 540.09 448.439 539.838 448.849 539.336 cv
449.371 538.698 449.632 537.829 449.632 536.731 cv
449.632 535.467 li
449.632 534.999 449.588 534.588 449.499 534.241 cv
449.499 534.241 li
449.499 534.241 li
cp
f
487.245 532.917 mo
487.144 532.954 487.076 532.987 487.045 533.02 cv
487.003 533.073 486.983 533.129 486.983 533.19 cv
486.983 533.258 487.008 533.319 487.06 533.37 cv
487.109 533.42 487.165 533.446 487.227 533.446 cv
487.262 533.446 487.321 533.432 487.402 533.409 cv
489.066 532.885 li
489.066 539.397 li
487.317 539.397 li
487.195 539.397 487.108 539.42 487.057 539.467 cv
487.003 539.514 486.978 539.575 486.978 539.653 cv
486.978 539.725 487.003 539.786 487.057 539.836 cv
487.108 539.883 487.195 539.909 487.317 539.909 cv
491.326 539.909 li
491.447 539.909 491.534 539.883 491.587 539.836 cv
491.64 539.786 491.666 539.725 491.666 539.653 cv
491.666 539.575 491.64 539.514 491.587 539.467 cv
491.534 539.42 491.447 539.397 491.326 539.397 cv
489.576 539.397 li
489.576 532.182 li
487.245 532.917 li
487.245 532.917 li
cp
f
537.531 536.659 mo
537.531 537.434 537.369 538.118 537.045 538.702 cv
536.721 539.288 536.275 539.581 535.708 539.581 cv
535.417 539.581 535.156 539.508 534.925 539.362 cv
534.764 539.26 534.634 539.141 534.536 539.002 cv
534.362 538.756 534.207 538.424 534.072 538.006 cv
533.936 537.59 533.868 537.139 533.868 536.659 cv
533.868 535.534 li
533.868 534.756 534.03 534.077 534.354 533.493 cv
534.678 532.911 535.125 532.62 535.697 532.62 cv
535.984 532.62 536.242 532.69 536.475 532.833 cv
536.636 532.932 536.768 533.055 536.869 533.196 cv
537.039 533.444 537.192 533.774 537.327 534.188 cv
537.463 534.604 537.531 535.053 537.531 535.534 cv
537.531 536.659 li
537.531 536.659 li
cp
537.908 534.241 mo
537.843 533.999 537.742 533.729 537.604 533.432 cv
537.466 533.137 537.337 532.92 537.215 532.784 cv
537.028 532.569 536.804 532.401 536.541 532.282 cv
536.278 532.163 535.994 532.102 535.69 532.102 cv
535.067 532.102 534.552 532.354 534.141 532.856 cv
533.619 533.495 533.358 534.366 533.358 535.467 cv
533.358 536.731 li
533.358 537.196 533.404 537.604 533.497 537.952 cv
533.559 538.198 533.659 538.471 533.799 538.766 cv
533.938 539.061 534.067 539.276 534.185 539.409 cv
534.37 539.624 534.597 539.792 534.861 539.911 cv
535.126 540.03 535.408 540.09 535.708 540.09 cv
536.332 540.09 536.849 539.838 537.258 539.336 cv
537.78 538.698 538.042 537.829 538.042 536.731 cv
538.042 535.467 li
538.042 534.999 537.997 534.588 537.908 534.241 cv
537.908 534.241 li
537.908 534.241 li
cp
f
586.144 536.659 mo
586.144 537.434 585.98 538.118 585.657 538.702 cv
585.332 539.288 584.888 539.581 584.321 539.581 cv
584.029 539.581 583.768 539.508 583.537 539.362 cv
583.376 539.26 583.246 539.141 583.148 539.002 cv
582.975 538.756 582.82 538.424 582.684 538.006 cv
582.548 537.59 582.48 537.139 582.48 536.659 cv
582.48 535.534 li
582.48 534.756 582.643 534.077 582.966 533.493 cv
583.29 532.911 583.737 532.62 584.309 532.62 cv
584.596 532.62 584.854 532.69 585.087 532.833 cv
585.248 532.932 585.379 533.055 585.48 533.196 cv
585.651 533.444 585.804 533.774 585.939 534.188 cv
586.075 534.604 586.144 535.053 586.144 535.534 cv
586.144 536.659 li
586.144 536.659 li
cp
586.52 534.241 mo
586.455 533.999 586.354 533.729 586.216 533.432 cv
586.078 533.137 585.949 532.92 585.827 532.784 cv
585.641 532.569 585.416 532.401 585.152 532.282 cv
584.889 532.163 584.605 532.102 584.303 532.102 cv
583.679 532.102 583.162 532.354 582.754 532.856 cv
582.23 533.495 581.97 534.366 581.97 535.467 cv
581.97 536.731 li
581.97 537.196 582.017 537.604 582.109 537.952 cv
582.17 538.198 582.271 538.471 582.41 538.766 cv
582.55 539.061 582.679 539.276 582.796 539.409 cv
582.982 539.624 583.208 539.792 583.474 539.911 cv
583.738 540.03 584.021 540.09 584.321 540.09 cv
584.943 540.09 585.461 539.838 585.869 539.336 cv
586.392 538.698 586.652 537.829 586.652 536.731 cv
586.652 535.467 li
586.652 534.999 586.608 534.588 586.52 534.241 cv
586.52 534.241 li
586.52 534.241 li
cp
f
586.144 371.955 mo
586.144 372.732 585.98 373.414 585.657 373.999 cv
585.332 374.583 584.888 374.876 584.321 374.876 cv
584.029 374.876 583.768 374.804 583.537 374.657 cv
583.376 374.556 583.246 374.438 583.148 374.299 cv
582.975 374.052 582.82 373.72 582.684 373.303 cv
582.548 372.886 582.48 372.437 582.48 371.955 cv
582.48 370.831 li
582.48 370.054 582.643 369.373 582.966 368.79 cv
583.29 368.207 583.737 367.916 584.309 367.916 cv
584.596 367.916 584.854 367.986 585.087 368.128 cv
585.248 368.229 585.379 368.351 585.48 368.492 cv
585.651 368.739 585.804 369.07 585.939 369.485 cv
586.075 369.901 586.144 370.349 586.144 370.831 cv
586.144 371.955 li
586.144 371.955 li
cp
586.52 369.537 mo
586.455 369.294 586.354 369.025 586.216 368.729 cv
586.078 368.435 585.949 368.217 585.827 368.079 cv
585.641 367.864 585.416 367.698 585.152 367.579 cv
584.889 367.459 584.605 367.399 584.303 367.399 cv
583.679 367.399 583.162 367.65 582.754 368.152 cv
582.23 368.792 581.97 369.663 581.97 370.764 cv
581.97 372.027 li
581.97 372.493 582.017 372.9 582.109 373.248 cv
582.17 373.496 582.271 373.767 582.41 374.062 cv
582.55 374.358 582.679 374.573 582.796 374.706 cv
582.982 374.921 583.208 375.088 583.474 375.208 cv
583.738 375.326 584.021 375.386 584.321 375.386 cv
584.943 375.386 585.461 375.135 585.869 374.634 cv
586.392 373.994 586.652 373.125 586.652 372.027 cv
586.652 370.764 li
586.652 370.294 586.608 369.885 586.52 369.537 cv
586.52 369.537 li
586.52 369.537 li
cp
f
1 lw
0 lj
255.991 203.342 mo
303.631 207.078 li
.160784 .956863 1 0 cmyk
@
255.991 219.78 mo
303.631 227.654 li
@
255.991 242.27 mo
303.631 247.918 li
@
255.991 265.689 mo
303.631 269.243 li
@
255.991 284.262 mo
303.631 289.123 li
@
255.991 313.26 mo
303.631 309.958 li
@
255.991 328.397 mo
303.631 328.397 li
@
255.991 350.853 mo
303.631 350.853 li
@
255.991 369.11 mo
303.631 371.687 li
@
255.991 398.833 mo
303.631 392.297 li
@
255.991 423.299 mo
303.631 412.874 li
@
255.991 442.669 mo
303.631 433.45 li
@
255.991 459.879 mo
303.631 453.774 li
@
255.991 488.498 mo
303.631 474.508 li
@
255.991 505.373 mo
303.631 494.924 li
@
255.991 523.208 mo
303.631 515.859 li
@
255.991 539.099 mo
303.631 536.033 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (supp_band_annotation_example.eps)
%%CreationDate: 2/15/2015 2:01 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BlbfJFWbp?=^I\QQM92FJ1Em85S\I(QO?i3i4`IeEWo$r`$G\>!;I>?m?YE+Z>A3W/6fRL-VKbshQ"$NG[nq&ATr5iFA0W+
%B4=&HFMui'@D;@=9Cj5P:G,XML"ZM@0:uX&OY!.T/!lH4bEM+"%M,J;GEqbtjYBhaH,:F+4+iC"1E)97'>^X-L#M"ddRLL8b2X:k
%GT8L8j3`)_jc9,2_(^0[ifD'q$$\%#4hJ<T<gmgsl<1C>86=!bH=Og[I\fk\/f-.fPCdkZ=>!Z^Ei.!5ZYT2.EZoIn/!Z%'CAk$V
%FG`B!JFAB3j4%A6I(jWFF'>Y@3)Pt9IcqW8]%oWjTp"@r^)oFC\3[S^Mp3S`19)%G),;jR/b+ggE/O;6^&OYT^\HX"q8RWnnYq$8
%ju3c5XRLPDG#P>H6NQC(P)/mcE?XD%LIH\T+c%u0<q3%f/i8J'1r2T(+*!$f!rC5kB3A*pE&Qo`)#fF[,iXd$6iLIq#Wh"^KKg65
%YhmJE/A>49^,4eR99UE8/`^pd?HIM7Zh+jZI5)]W"S/0Kg:/XLle@\&'6Sg^2F1YVY+?HQW3((P\T6YlFq^,as/.lc$MDSO';7_"
%I+KoL.hg4<<!sV/I,U?"SZ?;/<ig+;GArbdK*_S;719/J$;kFE^;`_R;+M"m<`/ilbD(VA(fip2`c2Fsm:s=V=fP0"(<2BtlD8QI
%]OM53j<*fD5L-).9=1t&lcj%H_HN">/\TA:No4:$UigKZ+oJAT8nAjS3)4I,:o]?*Osr3q#c(p7'V4j7Q^t*WR`,JW.\KQc"TP5o
%pn(*ms)a^c%>E^Y$Gk1f#bHc;j=)-Zp0'9[fqM@='obPgBG@a@UU_?p1m*;NM$2m2TFZK7Oaq8)"D!.'n/ns4duZ/PL0)i<G`kfh
%Sm2bsk&SitIQa$M%(R@'M):YXRC%e"8Y3f"m!1"4?AAo!K7:Xda9MTP]d;!t;t(n"5c<O)mQ1LUGo?G^s5=c9$N<Ci"B_I5kS3s8
%I>9Ip)u9`G&t"gt5W7gEr.dDF*8G&!KH!]09jgOX"ol]FV"^YeV"pg/Ujh*D2H248q*6k%,Q*=ka?Yo[P@o!qi!X(J5-g:tTHPsU
%+5oH^JdrDUJH*"HE!uY42WuC`-\G";K`IIH!:"+)J/cfgM%(J>,(Vmf,J[fn+h]6D^l9^9,;k[jfs$SiliVO+K+(8DKD9T;F7L1E
%#lc%e_0+rdJI?`@r^.aj+F9Se3MRi$5#MX%FGA'LBc,^c`Y4R[8AU+8N@f]FBchmhWL3_s2kCHelQ9h)A7P:ri^j133Vh%A'1+"4
%9u`b)L_Puh++hWjoojUHl\p.$3b,sgl%!/&UB)5Gn`qqg1!5hQS&&8L%;6CW-[o>*$#;//196fW9O:-h!Is$"=f"YR_'""K?c`Pk
%)gp]sq4Q=a&TUOYP#!VuI`kg`M9!a,G[.73:-ZiGGpHb=-^>mjjX^/"f/":b9>6Qb2G8MB=7Qs!&*<C:L@Cgo0DWkAOXp&Y(f#i2
%\P*L+Wr##3TU^t95;=%:A^E:==--n]>Xh8X>9^XJ@[UIj']E@D!j;pP?n<,W'BBM?"B;&p&.Z](628?!&Ntuj1@Q(d63\hj&r)ib
%;0[gnL0^!_>WZg3CD:WYgsC!I$4b).Pu"pYn<GgG)BDM5/#a2+%=]V<8nR<F:-lo`P-5aS'Z).#%mDq$?(FhK+n-sgKmV0ke20!?
%))6q^aJ*Jh0=.)JO@"O-)uKa#@aI3*/^(F%)#9uX_+9sd*>O*Z,#*eG(54eWBOY[2M"lk!L/T?&\`1U:#s>YH,]WUskTNb:M6!cb
%V'H`fF)d-soH>5)pkB!6g``%$+dm=6`>';po18H[35AMt[0re=E/Jd(Ze:dK>e?i6U>2/E1)H"-n-_TI(kY%<??-4ZUMg27+b!Re
%9on>4'!1/F9;i0G66ZLZ6^`mR;O"A""N'nCm##,)05=CDA^X0"U+![iTM2:+E)_e#U@IPGRZ*[<Rh_;#=P/5Fo';#>"Lol6&=4o3
%\;ab.b\^Mk<eCp()^&0S1uFH%VsW]uf%1M8d5BLD9h";IQkeR15bb-`,KOW*.-'4Wp"%mOpB\r;-ctjTK&rA@7Yrts?Ap%h.'S0<
%+DTJ&Mb2?49Yp=)YCtmHL2-mP(+5sbM\\YsTJ7YRi4hsiI#SH`2m""o%SB%pf+QL3<ZHY/H7jE*+?9CIN]k=R+gR\JJFl!jM2)Bl
%dD"'<KXR_?\Q>/OQ"7(W8?1C/UWrkX&cj>,-Rsg,mR.N"@S(;8H^.i-0(L"iLR/=NMm-NggQ5HA>6,+@6KCX>.YsiPA^UF"#!,c/
%r(@0O/[&Ul@>YqTX[ng:%ks`X0o3n9P\S6HOO-pW@qglY\.*CW-^]!hgt#+i/4bICLbQal$+I_p5s_SU<3O7A.)kGW,J@1#>og"6
%/P<fc;G8IcQ)+WX*@L'_lBY1;UdO^<(5lg`+klfmCQnR3i;lUaTa<guY#mqf'$VSb4@dC,mJp[9Js.X_P-UO@.5"1]4\Y^B8ti+*
%EIf$b&pu'Z`\H#JKJj20Ck4Fh"8Lc:;Q;[iReIG><'nsOE%28PVJm0^TKdOX78QoMFGTEDM&7b3?Z:iD!A\VO5p7ndhZ+,6k;5h'
%3g_p]Lm3`nVC6RG<9uFhoptV-29k`&0CpH4:LY-=\Y18]n)5Nd.CdBljM%-\mj$4"9;!2sM_YZ7JFNql%C5ka#I'LBZjX$t#_c]S
%0S2b3b#22mVf<SgPD$fG$Yo>g&leHd`2l55NKQ:,]M<375ZU!4Tl_oPU1Db/*E.P+X+_['.4*A2#r*`;8^.GN,>(3W8c]bESrAc7
%#g+k//t,V6BM`)>;2S6q9!BhEKd%.*,!fJD,.&U(!\c<aBoUO^Tg'S:J2U(-;,Nkrcf<LW6OM;U7rTPV(I?TGc&7eJ0c!'Xq?`&d
%neFmt!=D*oJVY/$darPN!,9.mO7s!X<7][NU`hZ[*p.s].&F%F-/VQd,+"K"<b,-D4;E[?N<!`9PB!mK&6%:8#`P/[<:a8s[k[$Q
%XhX,1[m0.W!Xb;p9'cS],3?(WC1X8!O`>:SJkWU.?E5:O'`qQ3#c]1Y4:EGFIrIi[j.F+&!-ihA*$q[+SnD^#Hoju<<g:p\G`6V$
%Oje$oi)F))BQ!D.,je_iY.Oh&<T^$>clANujUd&887NejYuQkdJ7TUr2*@fSKR#lsQ-?C'fgi<-MEY2@-"Wc],l9PUTqj:>W[rmk
%I4D$mF#s]r,./6*R,*:S(?'Cpb(+:C=3APDKF>adMm!boe0)o(Z6NO0.3Ygh!bJbO7%=087]jdk1"[2RB&1?21MZhfOThn82Jb0D
%;ZN\_?&.Y8J8pJ:CumEu@['GdD+Q4/O<b.^2YJ/L9md,XNr7C!;H>&M"o;RK;O:2\eu/UH-&rmB%\Aj4bL@jr?Ii0q`$pNm7Y96+
%jL\s\3"ChHKo).niD4#6-Pl7qri4m;a[At"5K/m(@4Hu$n#s0M<*rW].:WCX]E^f^Yn".0=G1?HE!<X2.I[YCTMbQE?82\:EJMU(
%'sr+o#^hW[aVYuJ*4ms08MPiu&h@Hd7UhQb$gD=PXGTOh#tkJXBfDic8BZiT([tdj>VQAUGV0Yf7d*WSUP+;nTpWeA=QCkPVOU5%
%%]b;r"OH0[a),qf>[B@Nmc"i)@C8'e#WB\9)6:_J5(W?iF^AApL+D[RoF(L+<s4.4`pFW2AWX5=A=/3CmU43hP"8FPSN]DR+!F63
%GR]O+'I=T.V(n$0YgF;*:JNZn^k_3]GRf@KH[0XpKZOONOUs/@-<U_Ab_[]S-)J^3b]68WB-]u)KkO3_*?Ie2B:QLWTuKC#7&C'd
%gIbY)`1BOY9ENi`B;\`d/YOLmRD8<Y";T>t2UtFUH6g_0NLijB2YT\jAAqE9;CuV]%19*2SqcJs8u+<N/<Z64.P]FLJgCk#i^_Xk
%bB-F4kH4S,99P-9]t?Y67^#FsNdN-O/1'TN$7OHq(#$AITJ^jm/P?s]@*&NP.jo$7d4"+I;X3f%+GgCo"Kc,u9diX3Cb^><nW7\%
%.+1&'9%-&%4]M;YDLRT??n+le<]N$]-'KBZpu<1t23.03Ub[u!Z)kVUP7_(sUT\5(gRQb$@C@bnG&^Ok@O^DT+f<flXQ=D&niD%1
%8qR?TiNB^l%8VCP%%O1Gf-O]SZn]Xj,GQJm'+h(3@M,TJ7P[mea)eYk6psXtA$hOH2E>YeRG]?<(e.)L@&X-bn;lZ]=j0b#VouS$
%$ic%:A!=35,,lto@R=oHk?(*'Qus^/.71C+ft`Wf4<7tNTeJGP<Gib5FcmNj81ebEPcha/XGB_^YN@nj+WU-@V/'OCSMb)nR+GfB
%<3FcU[2Hh6&nodIA7iuKIX6uf$;bFdc7pi;<-]?r9_jjj9TL?9Pb1c[!DZb';JGY53_SM";A'<f#ViXge?3ANaG:GI(b:9G$k#ff
%dMuVZ9M`Zn8>K?a,Q+*C,Zi!g-'><MftjjbP<8'mK)G_7JiZAG&#Hig+YOkn"!_5KX:#C2hO9]:lQjNH'@Jb8]qgom>nrei'E^-/
%XS9]tGNj7IZ)^-b`LJfiNap@<)P$3u9u3cn$sO@qU>0!g2i08i2WhBj,,Cm>3!C:G<D$]pcX+Z8B\97o8Q[e1?"*FM$[D%ECX2,h
%he'`/%2CX^`q,`XRJ-]tVFe[]a\TM-6)7hSnhZO<_lSP82RQGsU,W'3XP53].u?[3d_Mj3Z6VdYM3ugLW>;$f8(YoAYBAe3"tiH\
%ZE%tS95WaIf-6?a,-N>pMe:(2WADpQ.;!s.8MhfnN&=b+k3_cOWF_qSctCjD2j':>Dj'\88K&1h?QdluW)^%\VgiGnd41e&9Gf-u
%eGG-^T'A9(]MsRV4fLrKZ7P+Z<5EFYB;`b4Q-lOb;Q?Eh[sB4]$s`,raaDkYCG=8R_NCsT`sJM.H2c*/Ej[[>94'!ce!L3[odC[\
%d=!_3Q1R6Fo/TBXW.a;7Be>L8G9gU.idns_96;3*^q>>g(]8%@F&MM=((ZHOq^*&EOu3a/((H2C6.nVo9(e]r("I(Db3--T`@F?V
%.<HGV1tYWFN1)*r,m(-N9NXrZ&*d#1/OCb`0FbrELgm(HkRt]iii&po140=jWm^g@9eqn&ag"C5cUX.t9"^j'@;o/.K,XbI\u(_\
%SB2qj?Bn)M/kjR2luft5:KI&XTa!DWrKQ`e2+q5%W+&5.&i!OM<Amhjk9Gk8A':2Y"fR_=<GRmDCA)AH$jq5c`sj2\0OWL?4S;W8
%@8!$RR=gZJl+0^5[L6fsMRf_5DjnVG+;mdk,.Z^$9N&E;W*3)`Q5(jX+^$$6M,.M.&l`lnT(A(&405Xb[i.@j?2^+KU?H_/B4!4S
%+bE'>GnXh?+k,F!-$,.`U/C-!I.mp5gGO!6e7>@3EJN%IN64?;E[A.dX[bMQao2iCdV#FT82`!+$ro(ng3C1Q_Zl5*S^t;cY<XG2
%oc$IW,EO8?WVA+i9gNiBH''[/EpKPO;lA3hD`k,i5ikhP-K::tpp7E9J=#`tL5@H$1Z,rT<*gN.\rb9@=Q)imN0"arM>kAkhE?nF
%ZZ2k+mM<.+<cZ9A;HAtAVFgH!C*Aq?QFY'lF;E:==`LQF3J(7W1pWBrbh_MU+W3BtOKp<7'$qt+;1?KA8p;WBA1_,fh^T+T1MA)T
%Z\APhq6$$_bhJ8IKchiTY.WqmKD6>g@sCS#CHQSGUjSF`GUr#WYpS#8SAPOi4S=8-S1)dh5gt<L=I#2TU9$,l=2hru`KRH@bDFr4
%&lL(i.aYSTNN([nSij':R[mjaLFD65Wta1hEspR6ijh6YV'=WIg7p7<PYS)q_Y:FM)AT$e&5$qqq;g1K3U7/aOuaeFiLaYa;\H,g
%C"EtZOMc84Um>MTb4c-.97'B*:/WfEP1HG519%(Z(6;HFjWhnhCJ^Nb7r<n<f]#'])j,P'oit#$nqpRF@Ie0DP2JDA\NkRa)!G?b
%ME.Kr&uV&b,Y/lPE`>c#&LHS7QUU%#@^,iL4V<",I6%P2jCD$Em]FITLj[hDZbTk/?+t<[=Ng9H5U!=!>@[3AO@MJ%*(F)';=RaY
%O;$#_-n9"Mr6e3<f[/aOC,K7#ChW<!I>riBEcaXtjoW-jb%=Np,mVI+4NXd!-=qWW,\GRN*+c&'3+^l:=na/3+bW>^cH%\PH8Stn
%B@\#<cq@5!/(qJ>:g=Wu8p?s3jmtluZXRZ)CqP(FJQZ\4B4tmSD->"\g>m90QH@pIa*&e'A:'m>.M5E<eL=&oj$JRk#Q:W`V5qP9
%^hD$30TK.i0\jt437Tjg=hS"5d&:O7BT3?6@\Okj+U,^)h@7J:eTB!7)8DiAB23*YdaaP':<LcWQt\9K21[*NeM5MM(4oP-F[^3^
%l?aGQ9/J4M<3qr1N&pOC2).L"U+G>I5scb`ZK>h^&Z\u:(!S4082XF7Pt?FiXLTgI=B)KIN*&s\V5r=>23DGC/^EF2N=X5=+f*ZV
%pe!0/P<>DCa'1,<.9B?JQ:Y+%+suO^I--+AFk(dU)*$c`/PpA&m!9,bM:\Vu39J3'>^.:%2m7U?/:l5q;Hr-QbY!rI>?43,8r63G
%cJ3D*lWuV<CF?_Ea;Zs<fee9*j*7VlEgm9'0h46>&d^,20pF9&[#g5m[.P6a<4oB!dZ#'leB1?,8)8Q43*VW%[2E:Z%SOO1`4U@t
%U*-15@7(L*(4[/5-SouPot)?2hVuk[QP^6RB_^=aI$Ios_\8Mm,bchsn[M6#.4H^P7`bcj">h5N,0%`H^sK-Y<N^,P0!f<#CK-<g
%%scJ8\2q\`/,ZMmY'AaD=)d]T1&2PnSrDCHX"6h?`gZKP]k.^nhAWLpM??Yf[PpaNaanZ'd<^Ju-09.j0X>/uY*`5;g6:<T\IO+U
%R%p*\2&((6!E?e5TdmtuT2..)hd1=?7dJucQZBT]-/$-`QB<(=P9ElB3NXL.PjOA*S0rBDImgM)7lCN+fQYA%2Wq?LRub32:]sGm
%A3V3lGID.FQr<;qPZ2R',c!-)i1d00)W-RUm==aS<V"F"Ce$!`)H`d`G8<MAVSE<2*So%6[6Y>G&Z9Wj0aVPSQbtYjOr!/T*Cn2r
%56SW>`2X5k)BY^1DMr=47(Pjj1=jkB3jNOZ"<^,W$emCRruY:#+iPn^UOoaQRWO(%Mp1WLK:>`t+Fn[m9#d:r*aRJjX3!(0+hgu\
%S)[$o"k'8A*'$n39_*"!Bm+_S0c52KUR)Va0mNmu`i,24d%]-[A^O&:#lf461[A^'.7nD]2#0>q2Rk;`3u6KaNpPoF,QQT-75g*6
%c&1:%fYiYU1\M(^ko%cIc=&e7qDDQlJPC)l1KCa2l<:l)Y$TPSndkY7Ze2pk3QUWnpr;hr'tmGD^j`GH(KSV`q!hP`%R$>_=79l3
%Q&D[&"aBOMH<PFY'[N5uHKcZnF6DiQ1\ATFF<?/=i?0D#%tZMJ?UFn+7\``N-$0\*`CP_c#j%?.pD6FZO%EonEhQf]P,IMLr"E?h
%i+hBP9_"i\^QAmHGI*PNMre]5.p0A]W15rA'^@P+Ks-aLPsX;`+%Trb"J\iDoah@ki'Ab("Ak`ri@oZk`P7$;%&4Yo;_T+W2c,AU
%i!!UA,:Y`]H4a.Y5\"?(?,_,bL7jK4_Kf*t1s!HqZ;ahtH0%_bMj<l<#6EW?#jG+nq@u::O6Cb/>hr=VTU#@4?b&2!Q:m2V^33JF
%.,n8M\UqO'W3Q]O+D&"6ZY$IK=fmc<f'aMYcE1ih/6@MF1Pcr%5_UrDn"AH!e<42bCoQ=6HBV>$^"tXrZY$h$0nT-4mf0n;=1V3\
%QS.TXg/[B2VeJH@%<+b0&8isih)/'-<_F]^L9XOPXWcIF%*E7MB\-Eb%lB?1XttE26;gX84WEP:I&YIT]5m%,VtEBi<&A$IJ;+l:
%auO5#k$=qm_NQ*h,`;CQ:&p!H#e^_s'ZF.LX@O3`!tWCJn"Tq5+WLT0J]c;Yjiac_*$a9lf.G"_9sp!VhFWfAYfhOfPqq\S+'>OB
%?`N$kc3XW+rU7JtM1>Eb2u`1`T0;g+""T(pU=4m<D3f'Sje@u6E3@&BnokOM2qW&r\HH8.qJc0DppGpl4[\sMEf,HifsuS\36rW/
%+aOO)kheNn<FCsVS92F%$m87I^>K3j:3+T:n+U"Z>XTu+R^700.aU5B!?0R?*ii(P=?Al!-.aH.fH,#'V++Aed+0h39HB.j.$03P
%<^T`FfR6_dqQ=-6[+Xef#c]?r#M9J&DtmHrK<lI'oiL@:h<"Q,ot76pGgbi*q5.C_)9*8Bek;obbp$&4HoQ2Q?8"Fm@Vi&ubBJ,0
%.\G=N'q-Z:$nNMt8WVh;o9ELA5'Dud)TOKHlA\A'<1Bh@b,$l^MhU_mPSkN!F>?l.7FHRj2%AZnms.`0Wg0:n.$^iGf>Vf(?t*8e
%mthOGQLNQdU6SItS3_5C(#0`9*TaW^M%nbJ75P4+2,KMEVraX!b-3YL%upq_1PLZ%Xg82PqqaS_ki^W)UKP9U&$Wfq7F?r]!V@Y!
%Tnj2\A*WZY)q:PT>'kRRPT(Dl]a+'(H[q;=b,)H$@H5aCe=R<!$otOh/<gUTI8qh(?<O!g.I2>4In)rT*u-"ddgj)k3cA>-l6":H
%T'.4WIaG0?03][SpIMK`_\CA,onoS`^%*6/(1KJ,C=T7IVq!+l2"JVD-99W&;YO@%HI(dhQs"<-n*4OSHtqej6`E>VmQJsXRpr^C
%NjLAW)O'Br0n\Z=A7>l.\D08B@L>OAn^\'1D"]>4!k9[9Y15qfW)]>PI"cTtTkoZ"f6OLZVtVD-elfCcQeRg2E$k%B<TciFd4E02
%UUnt9Jg`Z_#FsB\1r6?O24^)PmV7uqe>U7SVTr+B[mD3Pc(/h)$FO@!fdP\3Tr\MF.c(/.Re9"D;(J<u4*q-2><5:-5>kJ>'kAlF
%S#=e'rS2Z&B9fc/#K+BfDC0!-[8%W@e%D%?U4bq3RHp"V+rZ;k,5PG2^($rbq)4UPQJ3NO6h-8&Q!+%5L!#=-`hig/geb0(MiD3E
%`M.FSpi7#eh@$6XEiJkl4I!?@3:Jh/0,B^qKiC]F<F`[@cU&jJ)kAEa'^j,V8L#!HKUoAM9^mrAqM%RPX]h_]0pT??0sq?@cJ"I2
%2/;6i/'EW-,96H%IeTVpIJop90Z@j08nWrL);T<JMMqtqOrJ5)g#9UG=8tap]N*c1<Kjkm<?!7J+FY;pR_qnu[Jm>]_Sd:=0K<&Q
%jjp9e+PUCfCU!eEgaP*QA>hDUKdQ+m>YH7D09h8R@gUX?+VG9n5ZP;7X_J;X@tPF.Bj%rFb@U&T.](-"JimD-gou$j1b<7P@4<bU
%q;V%^P:K_8FT_F&]uOR86KPlTEirA[R+8$^B<uh`XY=LK,pKG*+YelN)eu._l!h2nICUfMPB\p=8dc$o%)iEE4)>iD>airGFFnUT
%Gq,oEKspW*%d&O6$q-B^/sk5mEPXXV&Hq\<MBLGU/7Q9@"L]]a&lTPLk63kE)MuBnQH/#=@^dKCB`U*O9T)L6n'i2dY.e#>f3n!D
%@IhE@\Ptr5!\@J-,@PSK\.F#+^&QolIcg\-_frlmlQ?#Ln,LC9/)S8X6<ZFer_q+4<&,409de7l,6DAY+KLfdN@RTd^p;iHT+fKs
%CkCZ3e[oE&W?*B>E<'ii?bT@I]IR5&SSQcEUqXq;dNZ6P>2`/@G[a&o0AoA>WU1\&C1kK+Y^1<:.'fos`XNd]L*X\^nO-V=aI/4a
%LgW%fL(1H6nZ%O>>87\T_<J'kr)IX;Bi_CMiCH).f3XtKdGVOnO=<`N+>5'\'jYUa!27+pYti]2mPiH!j]7dbSXfiF@L<-gO+'%G
%TR0(h8Eji/9HpQrW;rYtiN/EJ>aEWU@j%bWlXL@KY/D/`9@_6=@uMRXkHMo2ZZ'4l>MR$`r;noX]1t!>m`K+\*-P-b#i+XCh?6Pa
%!n]&ik6k#VHG58+)L,M>f?X#/UZN?X$Q2B>rqR<HbFr[1GnnZ5dJU%MWYD"`B"`LBR43_KnCWn:[Uo\$OdaTgdi[Rpn5HGik'>,r
%?ZMA]\PR"+S7lA8@''k%((1P8Ru'g*^9_SQ]QgS6.*fV#[AeQAhC&<1fW>pcO?bptU*8[IF3($TC1knM-GN"_9A(b].78$:cl76k
%bDTD+@N&clR`a+hKhQ@*]1N+=W>J2m0ADdT4u%?>8+I4j(a+:GcBML@:ukn^lN_:E:3:+"2VS3Qj>MW3.FTL987lr<.J)d(OCYX&
%6!C"6MNr-]Wj3,s/6/p3"gbk9(5(#MAJs&"fc1lS<^$--OS2RB>)^%$/bu()6FgoqX`7XHSYD-NWu/'%?bM9,djRNrlR#c\Wo^Of
%Ge7/p8+d86C=,ecfK7lW)7<QH`##JPi99@bGc;S!6Q-]j)ZDMW[h0$GQI?H\C&es4Vc(/YE2F5<>_",VNZ,%2CeMc?'Dp&lAL`U7
%?D/f&?A\9R1,c9BBN09Bd4,Wg2mDr^C7j3`U<9IX-4q/gmH'dD3N!/i>4nV+ot">C`tJc]XHtMAFYY09+`qUBi_F9*jbuUSRUej7
%bICT7K`re"e&bapSQ3pT1lR/2k;^5_3gEXW>#B8/QGO612Z1N$-nB&GXX2`@?0099>t?:l7O43Q@2ep;6DYlo^pViAc:5HD%#43:
%`d`X+@5T\RC5!"X5M1]@#U9,&R+]#iK2<GnHM+!Xl,Q*WM@a\UEcZ`t9PbJoG4US'=6=O(RocIlq6\Ya.Fb^17"^4IDm'%PFGo>4
%M[MaP0k7f-DZ6+lrOUC>?^#+PMSEp@Om8EfT:G.sG>0ss4H_Qjbh&+\gm0u?c*IA>(mqQ6Ol0f&C@E9mJYNQ&0@e>KXi_CEmAc^]
%0:niEr/)iMY1:eE+#;4Jn.ore@7FDqja8b"8)nnU'oi`tDLnW'UsL5=HXSdIZRXXFiZ\8TP0A'O%ImiCTXc>_!dEJXq1Cp/cE%!7
%h,iM4c<pUkGJ<ufcL65H&&8#,++NJ&D]"NG'W5K8X]:slJZ5:-8i=rC/$-m_PRNFJkA001O:AD)RIHI4@\\$Jd9=$.<8114U:+Ku
%3%*$E%5Sb<KWeN[2GI`:=h2h9"2-6Z0;qm?7NI)^dQ@N/fk68;a+Bc5lfW^R[k:^M"VVm\EaBlBj/Q;_#bqTpCc/f8A;D)4i_.$@
%1=Ak?fi6I%-m;dslsEY)VAW_tl"T1Z<^(lLJ;KC^B9ecO)0MfgWN8q1FF&duXB_],!!gb^e,_,fbdAaeXT<tseo2Mi-et7;(+V$]
%.VP-:14AtN&RD)j,Ql8[<K,'cU75^TX&k:fA=Nn%\0Wt[1Wp$h'hC,>UD6Z[.!2A@HGaDeQ&5kqP:Yd4o)1>eb_mbT)AUj:$b>Ab
%=NJ^q7#S?'.S]qgfn:T59XX^c[:72e+^a9t<2*:PUclgT3d",h&U?6HXn6Y=]N2+@'[P:2cPIKo[Ud+6iMVWN+c4jek3@YA@'qu&
%SLd5J/jGK-nmFmQ`T+G3=%(59b.<D:W9qaKCDL[F!45mRZ+,bb\5KG69WIG(;RVmfL9'T4o;-M'8(G^_Oeh?>LA?L\iDYGs6"`aD
%)0CBlFM&08#Q-/-b9T$q$OcJqV?e.MQgC9'SA`&r4/W*&i*@Duc<N4on1>K+]KQpj*ir#ln:Sj0bZ6Nb\OaqMcOXne'f$TBhR)o3
%kagF`?F`O@>IQ6Be['O#NQZ\2pUJ3nlU@0/pcS$9:$1&4Sl0jfjaB19kjjDh4m8@siu28um.j$EpmlX*1ftL5P#JcE/+$IM2aTkY
%NBl#2[f[O'%/')$I)4U8b<=bP_,%!`iUT`>eV7cq#RKCWeWX]Ura^!Q5SWrf8&kfi`HpeZ<Km).kFZ:N(0m=[6g!)EBLLu1mk/h$
%RDGV9+^710a-6,BlK7/d\.d0sT&4*81Lj(?aeqeTji>8igGJ3N7$[(CH@0NRg^*&;\=9E8%D\/[6$nAja!T]Bf-_MAon00V"X+H6
%FRpM5/uBTX>]V9;<4s=bc:>e[<5"0hOisjK$B<(?qK&eOe<n62lWefi*5A%lL47F5dHc,sAZZ41_rZMnm98[^8#Vlt`57XDY*c9_
%BP8]q>ALUQ1cMLAlXQ9nh@PJ.Eim\-Y2V>/+?U4*(t5Lm1$Vsaf;UWJjXuM[A[Q:_n*S!EjFjdLc0c)&cD*b3%F9o4X[6pk8OfW/
%khtsaAhkge$KS1bpdCJgI(HFcleM:%kea<K<tiFUcO*NQle:R$$Gra1ct'J1N[mRiH(%_Cm9]`F\@;UJH<Q*T^E9%N:4#j?iMsK?
%_kY74\Q0OdA]9f&l9J:OejB=KA9^VBf%aE81)^U9eV^B+2j/q>^$a1$X8@6Dm91SB\/V3JOh+Sqot(lWf]/RV5K'r26E>l"Oe((&
%2**_(\Po-MXu3k9.-(m$2md<geKBN[9FbD7FuHb>/'RhW<ci*t/RH`*lL`UA5S@aI#\kBtR&0rUH>[OG2X=O9[DltH>4]!5A(,eb
%DH3gdc2@5EWAT$ASWdiCZ)NMNc3jCGC]mhpK#[DkNS*p^H;q6%jfs,'\(96uj"qo#</mne<9q7gfUO?JZtiqc5?Ks"qO3k\DB@+t
%C=S3A_%j-nbV,j#\dPpCKq6WI\9>"M_7Rt8e+:(]XZLg5MJL0t]!]0)F+Lm-?EHl;:+\<';sTBTkNL#Z;H55HK.DC+F#p0+jQ#92
%o8-5E#@ZS1Fj$OclcSMSZe`i8^bj=(*]Eu_]!^CrGt3&NC<[(*laMpT[6caHimh1-I6ZCUCY"r&2BLDJ2*UJTZ6J@$XbD>gS<A,/
%l??%t_cTHb2n^f]ZT:)13P)g_7^Z"Ae[;!-D%+fqY7kCqaYP+lY=*?3_9luk4JrRKMZ*4fjl.E43o2?3np]3,?o3XRSSb=9ET<^\
%+LTM)ZT]+W?-1me-rC4H`J;]p70Sc9gYU'JWC<aCd)m06`UR&Zj;FsTGGhUO?CLE2=sqo"\5lK:eX3dD_]t4^XeD0MHsQj7_>Qja
%FFOa7'j;`mOr,(hD6>Ob>(\E>\t2"fkML.FE9OQML/`PBD``HQW;6(gi-Hq**-dr6:Ih>%6=XjD5Lj/4"1arJ24PT-5R%Z5G?TjC
%E^M$5D8D`nq5YEtD>[<MU$!s!f]qFC7-F5T1G2EeNG1U_(idg'509tn4Dhql@qf@kYb@Ur8N=q@]obCIVpXOig$-+GSYo*sCD3tD
%EVrd/hQ/gSR<T2;>.KqQ,`QCdiod']gP,Um[-FV![/=G.:AXLE=e4/C@o%jEV3K9SH/EU&\oj\EF;Z/cpM@tcnn;Z<fsl@Z36lhm
%T'eeS#rMcMSYnEUea_s7*'_uj[(XAbkXJuckOl`tI0n#"T,unX0[?U+[)-^"C;:Y/Btn!0?-+r/<f>[-08.6Dd:WghRSS^2XIl8&
%G206c)6F>?qUG%]BQi5!L8Y%%Vnpm"l?__"T!n-`HLgj.iAqste/)d%)Ice^m]k`kXqT(3mnT`BA$\tN$M)[1RceZ"Ifo+>_q\uf
%0gG:=ZS=9?>Q[,`R_Qi6B$GE]3jpjo\pTp*-SF<%d3_OP[p8?LcQ.C;6dsEJZtk'R)!OQ&f.ljMoMkK%2.purYthk'^iI(C.KlVl
%n*k]1Z.b,V;QYS&daY6$WI=qP1`6WKR:q!k3'+H*:+&Cr<L#0j4W#)+2([UGq9\BQ`jI?RpfbS,"8uC.E_#0$[Gkn"._<dE%),c<
%1fm#-a#^Wr*?!?fkDH2MR]fh\S#c!L[>#C'`odSFUNZsEf"&(!_M<N@iQWOV<`%?,la%O8GL&cK#3B%%PND0HSQ[7>J9*U8>/P]6
%Eii=&(fCA0;UDN\:G$['75I[qY;k(4Q)Ntp"l8Sj+:Ajo[:1FN[oQ='[Q.VY%:l(sXgs,t'gda@Uk%D"nMc?n.sL0Y.%m,RFg,PU
%aFVkjQZ53VGX0jVh=:.la#]mR$@<C]_<?$6gRG3$<X9#)DeW#V(GK56E&VFoCNHNqW#>g'AKUk0,B23TC/5362L)6*)aV,WF?`J=
%;:nEJj3r+pID2Q?;5jIni2W.^7b,:s:o[r_YCR93C=.K"*(rH<6'`'26Y:kte(J0t+6&Eg-;No6S<X3IYDq>C>dVgtUP6\.n1ahH
%(nm=Pd"\YpIE6Z2:IF_/$o&+1d%B'!6U+'@/agWcR\ah!_miEldbochs$P<JW"S]^b*kj$T>*/d]_$,pT=QP!#XH:uS.V+Y*27-?
%&H=9IArOba1paNrX;XIJ#g!ONDjfSoR5/LME,r%^0pF'P>/N>/=_SCQH:;7S1UgkGp/Z0>\/;p8eH.n,5eHek'amC(o4A]4!'Rcg
%BgY*m(Br'S2C*tD!+%--[-+Kg\PVuB?,OY)>X/?VRj2s<'si[T3N7Oj((:KV/<*J;9`odrK@M=+iKiV6<ptZjqn.J^M`e="eR$\_
%j-o&ndHt1PBQ>Q*lC8W8RWRt*d'.R.eg#j6Um<D[\%".ZZ#I?mg+UbXm[#iWn+g]jW=`#7!m=llp_E!FdA$d!L#SPN"A<5_,>]S2
%(0,EpgHKH'J@V%d5@lrO6[#Y+a<M(1Y<cl:s1Y'C5`,WoWF)*O!)J5I2$"HsneQO7LfFou!\EE./33ptbPK:E3aQ?jK#8$8The#X
%<^mi';3m$?h\lbu(g%PR7EN_@-pupmlCD[,gVg3PhOXpiK;kc*7I>!h;JoVpj+1f!/D'E\C08jKgN>llbAe]&6YeD#a?Kp6alt2[
%WuGZN,\QO7q9S5g>ddX1R1;!sHl]uN&lVn.CXoJEPq(;];jT5OTSEQY9m$>'UKNES?0Ndsa'+t8"q@BkXNV$1KaAVa6Ud'[Dsg(H
%$mQf\/R?]>(s4<55E'_VH?G2ZF[QIg/=kdD?^gMl"Og(,V0.Of3^>K"ptBBu*cTkaVW;X^"-&bc.(TR\]6iS\g$Ln`9\+I:64qpN
%F)F`g1(d5d=-ogjc<Jo7Gt['Fh^.B;]c6OTS.?[tV3]i&:6S[d9h]?J%!Mdrg`.'<d+-U(!Aq9/@s&uhhj`j7jq->XQ!t(k<=Y54
%BXPd;+"1<eX`_puBUp0O7+SsqG92tDj(ZT0.C2paa'fAN!i@,dr^^'[-1a+b4Z.d,gc'J9\3&0HMNLT=dB\9&J/2N:4D/:*i7LT1
%WWbaP2X[Z\gt/&RlaKH@(!(P!bH0XT6MmiL:U<>M*3lJu1DB);jgH,D@q7:E*cNtdjOMZMK85F:Z,7V4h0I'qcL'09Z$bb0h4H8)
%(ZN6%C?!W$]TeU29oL2]g'YJ:?!r?(do_s6ROuH10&B`u`YmO*W%hj\:$h6d*KUaoUtZk#"RXDn6:2Do;)"J#WsuVnJm_HXhfmR1
%\(itYH0X$K1g?]?e4,0(^,JZk^KD8.NU%rtG%pIV93GT3e[4W[)i6mKM;,6<4G7In?uoS^?nO1Bm1;R6!+]Kod:*FiPCuiY#$5J(
%WFddq>Gjg:2QK,6bsqV[d$/Fl;/=9e=j'JkWf<+J-)G;)6&Sbq=eg%]d*32hMH8,1=%H,g]9EB%'6Kl"*Y.-]&T9a(Al7sc;TV0E
%<^9^nous/<-!::mbR+nhG^GkkCeWAa!)UlX6<dB04`7IO.0T<ZGLMrUaF^5,'dCSZ/Z`i'TnUA7$$Q2c@n(-3r'=0\Mf`HHV1m>#
%)`VpXJTUUg9/HS8-=NIr`Lq*7/aJCR;CL@'/BAGQC6]ui%?Z7R?K],#Zj9!4mb*UOA>PhTXGU#3c`OWAI;ZBcejSJ'>K[\5Fm@Z%
%TJTlk&&C*P?>8B>i_#ms1q0ibWBE/PDJI,G`\b3[[MF)I0Wgo=DaYgeEAsGbDbrCqG&b"2[7Hkb\mL)AdXjA*:_5Cj3FDq*fX?LG
%D/4,MD+l`=W(l\,.o>M_]'!tc13_bqS_VYQ:i("S-n]6"#Kf?%'QiNkGkmK.Wb^oQ'I.9a7aX&<H;*EV-Mp^)G29GofBuBmPAPR[
%(QE1]CVj=R8rfrfLGmc[Ten?V$8%8_]CotNp;Nu,M5:MYB+Hb(Mp02J+;=EC@Q((e[HCP`D6q%^RBU4[c-`=0`F?*G^9/rf4ZafH
%=W#7NT8%`@df/$+G>0"GZjsKn*`^/[d<&9"=[&S.65D<#Jp]t_F\5-9]Lekq.LpUErh!j1a%jS,'4^Fe\la=-NV9P(KaL=+D`dQB
%Ncj/V38nPT9XLf:[,mscHo)V!fZ?H'+2JQFVim)m4uM^g)Y+6bY*"+m]t@n-%c.,ZL)k84<olZ^>2,,f;oc<I'+'(m;^QNI2AYM(
%_JP,bonZjeIR'_u/<j`IBb8W@_ZiAACBD(_;&ttXi,mWDES\^uD;G#K(l31<oX.g08uP?Uq,Lm]<jQG&Po-Bh>%1*)#8Q*8k/4L&
%EoAr(124!q(M-LVf>a#P2I(U&Zs*p4`l*q1("F;4bF#SJaUZQbPNW'o^5ckl/U@3@dWG,AZp0'C@hd5&H;9ZeZ=q`74_lf=BQH50
%js!rd+HGY((%Q?kmZ!nWlluV`5mYr_]>imka5)F?Gn"9Z:c7s"o,5U>JKV0CSBj0\%om+831k1AT0j@)fPrmCE@`22@nSeRE@`1T
%:E.1HN+;Z'YfhhCiHuOTp6gRdFqW)5*6Y7#9B\L.cT%6:TaW@84IjaM!?9cSD$]<'3^C01E*5`8NRTLQNd6=S57VL1mG$29ekDMY
%[Ae$ZJ2_W9Q8Nl7[tO^=RK&4GK@JVrS_@[c%P#.7KsB^-^Akc\[^-%8;%l/P'r^b+f_71:iNMrY!kE5$*mgro.I78>-@HYUBI.-,
%+Ge?Y&"*S.RcWuLn1AKT/d4P1<!t5-!O$Ed[Qlcg`:)rje65DDjk@?0X*8>,bc:FhBBZY^@\SaoZF[ilE</4DoA7!RBI:XBiN[+7
%`C-UM^7)<VM<o1q(3X>"BsqOpcIu^[Jj;?6)1cq_(p$aTbu1n\\n3Zn9RG'[FRVW'g,UeiR]KZQbbjeD)+@tAf>n#)H#cU4A23;5
%YYO5gf0[br@GI$>NE8,\L7STM$uJU(UK=n&E#e_%c7DN&H8pq2irOisXke6/rMHiWfN(\>dPTE&33D[Q#E:/he]F,XZAm&#:!K(p
%XYs%gJE9TtdO'CgHYN8>A#R"gF.F.''>p-VYVPQ!M9*.uW,os53DAaTUGS0o)DmB#p4o4qhl*6>L@*OX"I_Wp:'X&5?V0JbBM.^D
%AiH"Ki`M`Y!eh^rF4t^h'J!qdjh,CZG3B)]8S##/L05'6?\%:mg?#srn(A>q58.AZS/G3XYBE#MCp=8T%]"_n!Yj!]d=S@2JJ!ee
%!M':8O8YqS>^<i%^g\@jLIOj=.F];NotlUc6qoo4cN4n:LPYq%AaA,M(F!_<41tfWH/^o!7e'M:bhupie?;h)(U/4bEpY`U+m[/e
%<D3JdH%\'aJMIV_;_fK'B$':OcPC?&"ediRWC4;bfbWrs2VhEuQ80D-:lTW#.N)"6mCFlR:e*6dNYdH)C0$hT)qH@$JXA>GA.PUq
%G(Afs<$pRL/VYlHZ]s%1)0)pTZJL7h&iF0+q%cZQ$P3r;\i+LY@dB#:flV&D\QLbthT/_-$NWTRdV+E,j6*"lh-4e?*_sn),9-*R
%a2=>?LhLqQTam5k[)71lEGu9NNL&8C)Jn,b%`0We(EeA2'^`b7Ki=eh1=>Go95*\1]$&;la,2'H>I#PAEb8NT]-(e3*#rM$.H=RU
%;V0ZpEC.7FACXQ/W,klYXj0djRRKWH/TnSjRF4qM#2[-5_Kq$1g+Q)pjY.)4CXZ]uEuG3*IMMueoR^52d(s<m$OCUo<ut@)33$/D
%7JGRrAtG+8f%[8pjuLZZ*OI1L:\'9A#3Y5,ps()T3l/05,4i14@5mS6bj3OleoG;m_`13<Y/i_WBf8AY)b9%uYYLb;\r=jsoeaj3
%,+V-al$M:A)O[K\@5iBLCcaDu@352^D-[F+0)A8`d8o%+cFDL&L<1451Yo?jEp'TlZK"At>[Z<dEmGN7FO4m&C;\W&W"_@&mrnR;
%g`4iY>;(`e6:%/\!?f^,E'^Vo&R#Qok1jfX7>q`L<ab=,=F2phECWHVg274_kRe8Yjfg9r.RF7)D;""f(ZiGZGON%XU;uW:Su.Ql
%H`B,YH"W=XV5b#gh%"aa;A@(%fb>5=A4VasG8VP-Fh8q).0U<YZ-C:_i_N0FDMY'mMddWPi]n$f.[(\(1QRX)2Y2Y_-sM:6%rQ4l
%P!qgm(aOHICJU%n3++&ta$bV0%,`.kD(3PZM+X4rBgH%D[^&^B.*0Qn-g&ZNDfi+K'O$<g;\=o'<j8_*9,aKLC3lChqc`3'_JM%F
%Q<eiS%E]or;+J34VG0@%dY,<Ii7iF-nh>jM%DK5%.$"A1@VeU%4t'3>m]"+B3Y'<]2F#h8PfKSt;J@rsb-S*&VYu6Hhehe1%j?B/
%T*r&*UI4Wh,,5^aNjaVi*h,=IcJ*lD`21+@Ra#P6\V7?gC6Sn9SG!2H4a;,D5iu.C+R%0[a/q72"_s6[(:9Njgg-niBUtZgVhrro
%;]e1h1j6-R&^*;]m;1&PR]1\CIPc10[?\9<e#C.BPK[ESEAKE2h;"I!Sp7$ogY<^i2k&%Z*otV!UXK;_,+Pm&R'T0/DhD"0A3jWS
%1ON#d.dV%lB5`d=Ft)FtVC0ghH[83G_3*`g!H<!eTr;0G5)EOBf'"6H7"2'Vm'gUElrOSZf*WmfldgrnJ]#P^on(%C#%;^kOW[`+
%1(Fbcc7RT#''pFFJeLPq3WX1@K4)HF>f!UJ/$R=SdURQ9>JfgF/"%'aYe+D?,P6_b9&mT7fPbYUn>T0bnbM.odW.XWed^Y\$<NO:
%FLs&6ZeIM%cjl0I("bG`'R2Pp(!t2q"G)dpPSPea.@c>k,VA*K:/m]c/52HmLcW6d<bn\_)N]](9cLY>\+o\Y>'GTtq<*eb,9Gqr
%;o\0oK2rTPd,*C`'g?2;05<"MTOASG/WVO_i1dT8kGm72bD,'MZkR#hC6Um%lOcrB[q'Yq*$Ao4<6AM$bWWNG:5T\npIeTb%N:sn
%B@k7O]&)/RWbs]DZYFg58kT]&rLl%0V^kkePEdq)/-4UZa/4!jWL=h<T]JJaQK0<6d([:ZXf+E&Cc:Ro5-7t>4RoX-YYWG+VR!,Q
%&_O!mWob:/ljE+.ng\AHK^:b(:FiG@8N4'\p9eK"mQ@^LX!kb?RfiPpUAE(r+Zftrdir;ed:HruT@WA_TaEE]+g=`C0?R5$=)khZ
%lsjnlU\aU-<]U`Wj6#4r@D[0mp1]L?D\oW,YYQdL:MVDRbJ6<DW'8@?ljW70)FI2ip'15Y.T#gAp1Y71Zqag-qm;6$=?1rC]tcfn
%JS(c1[Kj07!rMV@AnteH<`G\p:U;4K:Q%_(?EcSs:TFJNqQ,M@"8e$$<br32dgAB>9QBG+m*k6_C,O.o^cnktifmZZ!rK(F4hD'f
%dfP<;ODe?2T,+t!N-A%FdoW5;mE?/R*Ej1AjNc9*LD1gg/ktsJh1.\S9>!@PC5;QI7pi7jL8i>Cr[E;"C64:pdE*hdH7F^G.=P;`
%V0`EN@Pu:@W(aT./Ne!Zm[4-sgDQX:gI@Y\;rCNg14#tTA1ii]MQMmJRUr?2(q3(G2Y\O__ioE$!*)lj`WjY!6Z:,ChHcG#Ft"\i
%k.7H:ZWU@bs2dM^3rcB8I9l1.^D<JF[5>@:pn+.C6[AZ<B8.Ann@u.(TrfF9BBTjXSc@;AW"^6NB7gfEb2Ig[o`6"XNXsqdr[3'I
%)4gfZ[0I":#=C<%hSCfH;eeu!`H]U#XBQ%Q<N>(?CMTki'CN"b-OWj)mg&/5I@:XnD0gCZ[=@On<gU%gYlt@Ldpr7`*/6#"`rU"f
%$-6++>V9.f_Qas+[!&45:-7\(EQ5lAU?$s:3PX]i[cnF>Bre;bVL>UJRoWgs9YAd)DN)91X9W3\g0[EKQ/Wo*ApClsoHg?taZu8:
%=tIab'X^P1Qlg95p70#lMNY>KA(G?Kg/he]ATVjJ'AV<B;3h;jd"A]Fm*%/e$^_(0T[JFX6@(V"VEXp2#O&MRR).dHk%)r^AK,?'
%*^&gk<R\JOROQ[N67B9BH@;]B0frAs%sQg.g3L3g::9C.$io5^a"8a"OCj'2P@GVJ_@$%benpd9MHN3@W)oH/SHP:gDSL#=*,V#S
%>`^_>UWp]4<)h;O=DSU=@2;0aH99[j68<e%*Z/CL*_jrYF'+Frm-`XnQ.`>5ke@Vl;0D;6kGii4kPc?tlK%0Dm`>a)2Jec?=ul?'
%@4aC;gN3B7g]<!RH^J#s:=2,s:P[V*N8:^cm[qXma(jsq37&]Toluq9(Pl)Q#8MADi-<()KTDsChnm1.^1"idq/ksNh/'4Thub_$
%M"ZO#>)cnVHZVP>m6pj:=k-)0h+.?/.>E3([248k`,JSC\EkmS(lS#GY!J,\(<g11%W+[r'5i^?1YRCZC9_qe2ia_L-]i(ET&!%L
%e+)jOW&4,!]rVU/:%3?Yfs_E,SP#PXR,qNZ>+0F-ja"Ro\YkId6Qk44B@A>i;.?)Nc*E-@qAQ-GgC>dZj"3l5g2D::\uE^5O:Di/
%mkDu8mZi)O$%Cm]DVT*_DfSOR_V<?emPaIA'Zb1U#9l02T[LD1Bi:V'4@4-kUF[E.B^mcM[e-[H0&Z(]3tB0HD'CcM)rbaH1)9r%
%j)H*c'Gg4>9\8Sdi\1ZUgmX)eAY/&X[PCXbp"ADRFDEV%nt2c-WPB/AMf.+5+;uj_>=WO-;YZO[LG$U0#IeL1II3-3a0'iC_uJ:8
%ep,tL7-8bBcW6B4%fXVGl%U:lWd;_Tm2EqGSd2W;"e^uC`3%NMD])WraRRYml<6uB%f[JD-k0JIUZj,<%B3BNN*LW%.R0mGKfJ#A
%MNJ!jBGttAlA#Lg+&CbW+2_`1jC!4nN%;ZUWXM;.d1:^@En.9Dh-*>>`N+&[X]W-1'c.=2/m$VJokVgTm*Fo_(a&%aaW#AHf3<tF
%d3u+=J"u3k@3H_m#-q!-.PcC5\!G@H7e0DT90TBC1;\i,G?7fQ;l+nF`L4*OT:eBd6)hqO>;sZ.)l\#ESZ2=qhp7\#fVjcYqXI(b
%Egp%0ZTYo6C6M)A:UWr-&7<tBj-Hh\9Ji7;N'32*TE]'j\EPtX)M:Z6EN=`]\@*BdN.M[NWRG8m*bQLoWl><Zh.nF6lPjT4LT619
%1s;mtZ<<ZWeZ2PQ`$JUZ!OG$MX_qN%'-kb9SHgV>QG;_33&,$k=0oe&I?\S/0r>&rD-K*Z0qdd!_m8teJeMa;PjNdb#^,RN#(,'$
%[Mq#iCemD#ht?iTY!lO13j")]G-\`_>'`M+U:%Kgdod+o`I,HXD)R[j11psgBs=Utj"1]#DbZS4/MWaDi14^@Bl$9,g4i;Q#]bZ[
%H0lIX?kYEj7U:m/!\=-o.G*q-rY5d$KK60*+^3G&/B?E]LeCB&=`F2?j%Xk%g)M%.Vf`[;V5)O#V"6`LCF]1#G"(5h(p'_%I'Zf=
%h_6\1GRQ=q2ccS&a-J&G!kDjB\s9eDSad1EJcSSKRcu!;ef2VIR*g=r-EE)B!_r]VUJ?>O)Ok9N@3Jj+(=m>i,(Q)IVQW!pLEp&o
%nPZs_1aLI`4JE.-R[%;=*g'[Jmj'0`>s!.`+c.0[(rdd]e;)Yb(QrGh*YD&kc9i6+;)4/%`'EWN,ge)4Z.Dh8+c07[&N+1Km=Z`'
%BorTmGfCn`ZoK`:;CPTaLD;jRO$1"6_[9TZg+[cQj225S'9@K$XAHrRB/uR:iaIN\:V4rj$Agh=CuLrr.l8s7fm-\n:;i%GLD;:%
%n*fYJ6AKkoFe`R1_ZtL6osVhFXh$[b:k'r'V]FLLD7=3AY#]->*k&DU<>Pl]Eh0OH="Crd%uj:SXZCQZ#9L=4QS#gQ[2aF)CgPRp
%@;l%Y6fZW*XWb&/7kB;A%_7EdLN['Oi*l?\AX3fg1cA)g=?r9[_,/j`*Qf_Z/e:'\cdpe>JVU7V<uHQhl<rc[*d6NOgVJGr>,.nP
%$/+;*i6m13((f2[!tUA;+3+Pr47LTpG[0tJ*_KjORa,^fCBWcLXk&&YSR>V+#9IW)5&mJ@nh)/X'kAaCfO<a/_QFFJA`jc]E8[F0
%=?aL`e^]5+`dW">SS`H%54HpD/uRsih8t5'3i#JG4&jK29SJo6JVV7ljN"-u!tUAs]N$j/6Po3cd=I)?Ku\=`i1W2&6Fil!J_&N2
%JVW'$!Qt]h)FnXB6.#R]LW94N33:-%R2pP)eiAH?LKnMbG0!CQ\i]CX/*'%jTp8kP\ioOZ/*'$>%_E_d*ZCYokV*<HZ;-I8V]G'm
%['gK-Cen("pqT6#]!\&OW)tB]Z_03O+4YQZDtCb3K2N78=qPP9%QlR%Qa+=C3t=AhG8$VZ%m2\?G&tm)])rT*0JY6A7lA9Qr4k[0
%jbFtc%0mpmKEd>:&K@g(jM4,e@WBX'4L>r`g[0QI;CS(+X#<,P1_)XT'WS?H<H%oQ6Y!SIk`%/!*pO('?&bUa\d?#)4RE^GBm(J@
%BKWoY*Lh3_4>]7hYWH'e&nhKI*O\!&e3EG!C[S16]\<14LH9:HF*)9j6O*i;C1rR]Bns:nZuusB1lfR$p,!]u4>[PrD:-fn4n)9X
%Cq.q(NK'$:*-c-JgF[2!Ad9@qY=p>a0"X.5O<[_adgl'L3nlddck%dRPH*Te0);`d798Ke"p*mT9JAC<"m],jKL8+`l[[,%Cq(7\
%n*eS=S]Woa[8XBZj>EZ>!:Cf_5).atF;>2n:65RFo5WV`Y+2^_A=C]Tn%!M!#=b'YTmU=*A]ZmrojB$/)S<)S#KDNH7RBn:,KWL+
%gULDm<::0ho>Pr`ChA/&$s`t<Kr2nUb\[Iep5Yj\6^p0fjR@;'1I#'UWf9M-o=)cFlgt&9m.JKCeP^BCO]XW2^YRQWCJ,J5=6l^R
%p0;#$DWc8ij$#Y%HTf^K,0s;.f"@1_2=K#IApnpQ%BI#3H>(AW:b>]M_nsdNUuuIkCr`%70"\$"LMl\"q/@WYYKonD\],-BQ<h>V
%C=t[o(7l7]_T]BKgNo"rjp%k:_VFG!<P;_-)6_q'9oh2%I4M5BFVd-;coX79S+TOq=8$')>W;^ZaR7!,l]'*,5p<I9e7A5oCiI&Q
%FJG7LRS2da;ou!pq1).Z]]*Vi(</f_?=bk(H*oeW>G&#c='SO%QG!'B]fY`pNK"A8Xpr>tbGjI.c+1g@PKef\E+3?<lBR!4,?JQc
%%^P-"r5^[I*o:.3+La&mWg=1t&5g#i7*TIP8QBJrN)#,N$?Ic"+A`_g$?o7:h_9W""(N[_5.r%0Y.03%D^#ABAKl3.2Rc^=N9t!0
%!8rVm,f`r<@WOGfS"I?mjr;F=-Voc8);d-$0':s\$a;qmbsCdMZbM/aCbGk\HjH+'%p!Peajac\EmT?/!Qs%=o:s_m2[M`;!Zind
%oB>(2'i4a80:I/1f'o6;*sCuD?[=Ndc0jrD6]2EcF0;@fV*[E]!n1SeeC6kEh!L\@%jo<W#@dC?i\>d6$e<>EOJL#pZY)9_pYbQ/
%BU1g&$h=D6rj`=Go[Ui\4ZD]GR@tOL+CG"NDHmAtK&LSLh9-%Zg(p&[(#U?,0B-k.:%WKg#_e<_L=o8I!nPe+aPoSe@MSNV@9aQN
%+PR/t>Kcn`/m?0HL&`i=,5QKn5Bf]0Tp`$?T8]IVaR?t:'d9fjJ4C8QP85N[Xa@*t<_XtW&&foS8"PY2<A_1R.`VeS*+PIE)nEd%
%9M/55\#L;X.X*,1.MPlm8%IB+>]+Y1C*K5(*go,^?cA=GafT+8$0BNj?tt2XL`j(fCpu5_R<R0n\o!-HF?AH:q_[c*L9H-GRf<TJ
%g[G<XHk>W(+l<V/46-)TEIc^^_`uN?/2RkmCCd,iis#@?NqDRI"B,kk^;&Ou_nfM#)T+O@&048p-f*if@449-Rr_j@nsFTXC=o+d
%cS!,GCiC95q.W7^c"Uj'3sQ!9SY-58VrO11iUP"-AS#sFpGa+@-4=+Zk0E@s;j.LAm@("aN!JMfoB=l_%mVWGqiYIM>P;IP9>5Bt
%DdJ1f]jPU$RoM<N<>0e,1LJF4$obV,+4';.P=rO)+NegD5qHX(NDVSj;ApUuSmC5#bkWVRMo'=9;A*#@="@&62FiYPq=pW+2;hiO
%5$r*LGaBBBTqcr5EWi^uoo[F^4Y>Me$:^tI>DIrO&L2q[+`26<fssO"j7<ABFE;7r@VjPX4<hB,H*$er<:hu$!BH$pg^N5[@2=*G
%]8iK.NjHNN:q3)@X_4P,BV`-RHV>Q&Ys#@q\X7P[1j_Ku[e((OLq_7e`4mNi*mFTin+S,sUc4D^YLMc'e>ri'b3:b&GW5,[lVr/&
%OqW76Yp(Ek-,DY`gR1j0>URitr"Fg")5!:UTG&,]%oG4DgpS.klZ*`R^>d%N6(GOq8)U;;r1"jt%:g4r<s?f/0d@/;9jT/Li=c/Q
%nQ*$$6tVu^6kS5R8JtA^YU&N)X?8ptbF*hqrhWl6?uC\roK6HJE;=[;(-o4\E-^%?!21RRVJA:3RYH=T0&Q6f]ZX6Wqcl>:af#d'
%^#!Ic`G8CY3#@r'i13$Ph*Sgm1hRGE9V9QF:9rKXQ.s*rm*=f!(l4A[PL&$PL&L4EEq@R>J;>T9Qh6nS>V83_4E*/_odM7PQ>6X6
%?-8/V;4Y>.ZdnmJ?LHH)5F>]hI%3uMA\pg&MtP'oej(.V_pJnC%]>m""YWr/RBtE]$WR99[+;s_\JV:T:5%&`;q1]Nj#/r'WMB#B
%_]%)lXE'hl"@pS:&TieajU+iC3,,5I)2\eg,?%19Y0A$M16KXL>?-mD*$j%?40)?dc]6%X-P*A?1]EAtHMV*NEiK:c1<%cJHmi-A
%ANCh&c7s0^qfjZmdaor6SAY6L/De_o2dd[RD*rpZ2[G#OM>YB[7(-2i?+\qYg%i%=3.%,',VofeV+*(9(/pGG_jM.+[r!sQ4@fA/
%q;dOdE,,KEn?e3ah?*27$.q*\1#SV:)f`8<79Jr*LL#[l#OVJ<U)U,PV"Z[/dj+d\\o9a6DN6_Q"kJP!N/\<2G56#kH!m[uQZr:P
%#sB-/""2oHq)l!>o8]YpY4;;^OipZQ,<f=75Cdq]a?2hef\AqE$:s*[\HfEATqJ3%=Q_Y*`S$fYWJ0,IF3Bh3M6:/f5X@M@#I<f;
%oIY6R:2r/fgc=A.F;X/3H@<e&#;igX4(;&)]54i6ZWX@J=D&QtN>UEq:o9N<R!%3rdlQSMXXp'QWa"WVm>H)ne(TrN('KR'oVe4*
%;.W]I2Sq9i,q>q76D%!"/N%9J22t`&C8<`OX*[P+5`;D]7Z578nC1)(;,K=ui7HC+^C\UQ8aWW*I5PFkH+(GMbKP2UMb.8u@Pm[5
%f/uaP7o)D,b[,,9-F<B_e(%"boOoXo='/[t%Fgk7WKWV*AhGeTREd+52U9d,MhCVbGF-dmPWrF1$'*;ic,m9u]_928-jpFamJF.#
%K/;9@8ag%3lRb958oF#YWD=9CokO[3f2_0\INtI:'Lr&SVrn.`)#E#I$s*tgTJH_ur)m9$oU;u;JTl`^WL[$P1kaA:gB/8t1^*'<
%")Bqe@tj>EVMN2Km5(g98MK3!5CS2$r1Q)3\Tker[8oNn[:[gh8ngSj,/,&..]$FV%96n<Shm4#LUgE8@nc2&ju/&Rqnst,[H_(t
%0]mT_dqhi1N$UNV7^^EXmrcL-lAr&eP;b1@=iG["BiLSK=4b3jl8<W#Z!#5n:J[e\(E'bXD6Vl9J-WDX0XZ7VB<_:jEuCH,>['rG
%@1n8g<Ze6$e/2H,59E*2Da$YMA1ioGd:Rhcd%"5?'UXqtqiM$8fgL%;gr)`@1Q`P;NsbV+D`VLF>'!j^mj6N:4f<.r>2bcTSb(I]
%l.#B>jWNTENA`>D=pNk$(/*EF/8nX_]+T7D%\mctqi$n:D5_6f%4J^QNATYcj-B.Zft`'`!N&RD%:p#)F)t:3LrG$b44L@!^Hc!I
%[s]GF;%_CDX@&K[Rn^@;D?8os2/U`DLIA"AOR.k0FGFRI0c"%=l]A$P94Z\-\.(LbON:6UmE]20Jgg)qUu=)hbA7<t!k@7\5'>1\
%lX2`CF8:jB(ZEZ<bBNXG&?L=2YjsOUk.ju`kN!fs9/9Yk(NPKg-MH.K(:LP=d"Mcr6fkfg'@&bC&ZE+>G1R!N9P<g(->cVt`Z3\r
%>uP[)_rT)@)/XBlW1"4@QYdn[<I5W^\*^DtFg<LM7b%_:['"!ZcdQnbc``^!9k0&NltM9eh".)hdjhbODJLT3MruU@!f;K?R#Q/)
%7dd&>FNLrZ_3>GR`gk\<]H[Y(PbLs0(L:dbd'S\udb%rd(IsD.oMt7^BT^Wsie$+Cc'/+.O\P=jQr*U?@`dpYgOGRss-\kOKB1VW
%ZQi,s%fSqf.OTYm+V(%(Zq[&`k)QXgA%?-\nB@9JR*'u0&1:$#e=l5lj6oOVk""<tb0fnG99EQT48K`#c>H,o%m;WYhrj40AYOMm
%I6@.0;SCu8QW=I^GP&SuKD;$.*tNcInts+JB3[]GoVpj-SFKeWJsMqp($Os\:Y<W)s5nH59_+gq^5ETr,X^u!aLnOXd.:"LB$\#1
%cSJ"'!#Dc!Q_)9ED(rYG)O?kMn%msDb=q4c)-.PmGIhrJ,;%,X7\0f#\NXDteMXaY,>DXV($ENnJ`#L)a<Qg^:0g+u@:(WpPF/tm
%1Lq]J]oKT>kDi&bSsr[fh!a(YgsMquaP`cd$FaO;hXuC8SH!,,drUedKf&P:4.-YnnpsQB:W<_Y2o)O:%RF@#&pJcub^Ps)%t$:H
%FF93mrllTVg6:Xc's+F=('idNT(3:1[lcR\Y%f(PN_6=Lp@]g']Q0VSD&e@cJaf3+$mdkVJcY8a79?6Tm"-bCfH4NIk(-I0&qb4_
%GSJ)cg_1gSL:iCBX\K]E_>tM[W#B?s[<b>d!f'HZ;hDmf%u7dq<=&r26a;#B5emZ-J4"!nh<h(Y.*SbBi%WPdN.odHiePJY#S,ti
%L6r<GSg=[Qo8!<rBA42`!P"4VEB1IR9n<kg'/:&cjVApbVM>S%V^^'bi8qO.65^Mg&R%ZHNlo//^;^?7^_jsEZ3Sig(+;PbJAT*l
%<ruQ<*T>DoVuQqj*(9pSDnMR"OH"B#coUIu#rg=#/QDh=DD]Ki6r3DD\9ZlR?k2!NS\'1&[)OL>5p2H/ULtsu`m*Nj.t@]GlA2r)
%H>5:r:p1IXW^H&J))?O'O3#P`FbQ)8VM557RgQfkg_.gm,,8fJ\4N!CQJF<B)?@[*7bfb:$M0\1;sC6m8dj!.1)Alu&Z)Raas'!7
%0MTru(/4=%@"a9Mob_)*<G_?LR+<&/.Y),r&aFOma#!rV<L@CJ&K0'OB0[0[4F3B,)4K-0ZthL>YYN@I2NF#5N2[Y&gPm%K#\dRP
%(cT;5(W8YoW#\!HG(LK>$6e4C'-$7(8E39EnQ?HGds7Q@=SW<T<1^sIb#;D1R<SI-4[)!IL.KU2&d1VbHrGB#eVml]kTqBN>eFM5
%pm=J[X]8L@gLa1P?!^:dW@Ns.]H/3cM^46VE;K__5cRpGG11BUMWB<[aLm;JQB'h=FF)e:InmL>c(#lR5P&;e`l7X>P6G)@E8dF:
%\D),L,<ru`'Y+b';dM'XQ&C'[:60HnVHh4!oKn(d1?AS*VH62HC/jo8S"#RN>`\Z[kL)Q^!E\sL!fdZ]+r56MKCXOi4M*rk2FJ0A
%27)[:5M'KJBMo_gGh4*\4,60j!LJ]nXG;F^+HBsfE@<WcZ5OjJVlAM,+nTh[,b_(\c>d\c'Nj5)L5F4lK)ach6.25g0+Ff6bKI+M
%@F^a`._<<@XJ3(5K[(WE_0c;A[?@tr>e*](C6W?c^7L/,j^q#@>FC3:.2N@dh%^eoD[#7d\tGsK4@mk:Y7Tij9K@2V?'W9!l/_ba
%4$ZBrFB9#Lo*ZW3D-s*dLo3bZl,3XlE<]/G+nk:cN6@k=ID%@1,#;Ws#P<)(`?J[X$P'U2;rILC7_hqd@f#p``'$)#KoS_YmE+qd
%0^[-X:"2.A=H88HLXWR(7J;dYN$F,P2L"7Bm5'V[bp,NE'5-.b><ufWc@^.$#EHdZ5b2^T$b*JkdbMs(H);s!46$Fd\Wc,`**/L8
%N>sld_W%(%_@@*Oe@%Z;;3re*ZfS,"]#_a34Y6/FX\&W)HgPB1o1'8,^IeTD,81#k0TP0@P9EPCOYG1D&4Og[cNt-cir%00Bu5k+
%&5r/KNo7m=o<8f2m#CGRfIG/eq-iHqq1-bnS+?^<=@:fFO6kOi&/rDcS("j@:T0dS&Y11l?hC1MCUDL<ZT]!(9#-D<R1MAaJlSQl
%59EC!9+*RkP;+s#%@&<A9Os4sG@Nd@nRA62,6AkdL:oA1ST/<-i`p=%7++[m$8='[0R(IaA1i\c*K)engR,0hj&`-!0>uk,YVR=8
%K?h9P?+F'EXd:Y5'dk328]M3ijFSdt=3dkWHEjt[I(>ZET&&3:.o#2[1Q^Bc0.b$dRGqBB]]eubif?Y>A=W@H=r7!/<YT.9Cf=&>
%/eW6Wo7Iu\L!57T2m)e$(p.Z2Jp5,FK7lX<^h9>H*Y!C]D_f'sr#!(B7h8msd(BUr+Yq^#JX?MTn:Un$2>4]1C]l^*)7BVc0b!aD
%PMfL9I)?1RpP;7OHE,Q%V$hLiHsn8=q2Y&>MpqL"Q/f`IBCb+;Y[=t]%5%B7ceUMbH.U^9@%@\bB'+Cil2qonN\q*Cl@X^W@<\_;
%=B-F_M@D,jef_&o%u_u"e0(im%h?0T:59a@<V6A(g<sjD8kH2tneO%e3d\/;UgdWQ]$fN040l5i2mfbFJ>YrmH:.R%"83FC=)VbZ
%C#J6qZJNsBdJsb+\p=JIA\kQ(+_\$TV%o@(PHCV"cKel?S%^jtb^&dniL,D8FiLoH=KaXG9,hq>4KDJ\-gg4Hd$qJoPP0,43_=*_
%4_\7^OgVt_e<BTK'5S7q=$9FE-K\DsSV8oohj$,N;f$#7-L7ubCP)`RjFFTq\>-KNOYT%H)89!L<JEFq1m@%P6/@C2OD5eX?sn:m
%Nidq7a&G.`_><[e/iP>J+VY/*!EC#L]5(!;N07D=BZub3E"b@T*__TL7OIju`4n*Qp4NX-lu.Yt"(qDO]u.iEaHhG_j1!''"n\q#
%)!NR\86qqtT6L\5mURdq0>52*f:gJ&UphO$6"38UZ3XT>K&#rtg0]/)pa>AFjK0?^]GqLVl_.5]KF*e:^ljT(:X>(=*;nh(38c#_
%GrW/4@;L`%_G'g7Wnd7LaKqB/BFF,oAh/(V0%Zj]`'cn>q<0$.#!s2niSb!YYQ1=8SMJ3dQD%@[LCpJRN[Vg*CTA%4SulR_GM<_E
%MS=p-TY6?gg2DYun&6MnMcui42Z][/HlcQS2^WQJ&=iO83\3WJ^]nE2oBDKJ#qa44f/IT@$q2Djd.A7f.H:J!NZ5\B:eOrA^f6=H
%aq--i!``_u,JG9N,<@5oMoNQf;Hf290IGs%We;_NBYN7r:lT/iI71?kYCJe=;IGr%)1#Co$/Gob"\]KH]FcJm_D'6=%&$>*%>[-D
%FkDhLKgl'>)7:]"hMD!se8j89$E-`j6Abhr?DWbO";jF!V_,#?84'nq*F5?S'YqgK&CR,rIaEtp,BGOiUt&-i-lA_WDBnY"d:gZ`
%Me6=Y.A&`S^g_/,UQjN%R<Y1&UY0=$5.WMA/mL"m_u>b'NK)0R`f^Qu0CQ7E`(d*JnhcNaoQ@QD_6ZsS)VVkG%j'&hqs]>BAA3KE
%\AH6"ZE#.;$4bu777Wcj#^q=]7.<;Xs-2^"pa;WZ7V9\Dp])eLM!)CFTqTMf:U"[>2LE*$B#o?u<E!Pu6$i<*HJmg*Cl@JT)X3Z!
%rd6_K_/9&t58YJG\7,tL4ENs2r'3QZkN+Ioak.J[5e+VP3<-(7;0GC^@<b5V0&kl<1_2"=6>XR!l-Z_7ppuf&3N\-'#OCE5&jCsn
%>t?j=`7J6VMl*2@Fb*6GcfS=!:Km2>ds[?qQCIJ<k")dJA^D*]31'?$p%&bnj\6")b5)aBUY/4IB1R*H:,_*JfrL=.eq/bfW/B(S
%NsGg171+EA945!ofXj:LO%sVK=-Bi+F#S*)pH78R0gk!8@c,iP)9IK%]CTghq^3B+">fXJ^d"D%,S+LY/s*2!@Flp=O`[J5*MhT\
%p5d:D$X$7+XFp.8n.P)%:PaL@nG)6!'`$7>=#Y`Ojh*ib5JGmFKqEU5-(K>)0=RNHSj/D[KX$Ysp?%V*c,gW#>$;p!8<s.?A')-b
%MgT,N_6k`H>DRo'X*mT_#[Jo:I()r5kiOQa."3GO*N#=[:@:X9[nK*ANqb:roBk<Ye]h5kD]Rsqjajc!`n%t>p2k]U$/Ur6E.KNO
%Q>P3I`1k(+]oOQW;$%ul>XA^2\O'Y-/WLE.9"PpMK.CP:@.GQ-+Qcj'Z3A*XMM5QQH+08Zg0AH!j5%E1c+X:rbkSmgo3c0AJb9]6
%1@VZX+--0LPr>H2i8[uql\sm+g'9u5('N/g`Upug)#N^r<BGin^*4&8^5lJLqXRs#$;9E\2o*AacE`=%_-tc!-JR:TfGS<)bRaJ_
%&*IQ<o(KMVCX;+^ak3*jP]=SFi7&AGS.+k&)pQQ[bNt2TTU:Cd9*foujiQP!jd]\H7(7s!Xj(>HY(j8NN`3p?;C,[pV23d'kTkWZ
%qLegQKMr<!S\[i"rJ88Fr2J][pNO@DM=81TmW\]p?)Qn+k!A/l%OCAb9^/W]W`BK"=.Bs!hX5E5HQhF>E6<)=UGjNjDU^T'(qkMB
%Hgp=a0shcpZf"No^YP4r0AOD\dM?rb(&51m^-+jX??1pTF4n*R-ofNnkhua59<M5H:@S59-o@C>0t.D$[>Rj-O=@nG3\.(opQh>]
%.ukG>SUs'AO%'d;;NX0b(BcJP$qL94GU2L3a23:&#Y1D?c<rKkN/"#l]2rj_#g_2Ill()&i@aP*(k2d2)9.Z]'Uj^^B/CZi,gbmc
%GN"6GrD3IBs7APS:]JoDoKW:Ms3q#?5Q+CXe,T&)rD3IBs7APSO6)GoB7KWKRpb"66SJB,UEB<YLE=#E[XEW(-[tX6pOE5;5BJ\t
%qt(N(_<8M[T>uQQBKeV"YA%ESimI(aqolm)fCQZ'7uA*)r9\h/B-+W)G,7G'SPQ&Q/hB2247#RXr6]-b&)E!/ec*5]qqnU#/)G^A
%bCBAJ5C`@XmkoOXeW9b/gTUXdql]+c^\l'srr(Sir1E_S^AZ?Hs8C\j^\L+^^TQ2ggGe$dlJLB@K"A\lk%ikgpU]5Zl<h6rL!Nih
%4+6FsYPlrAW9<P4q>AL,TDsQ'IAai,o<j'q*qapPXk2EPr33n>`Rd<JRAYCQ$]j^3J]rH;:]@S?ht>dk4afQQj*dhD^&@eW_/t(N
%p&*@,?N'i+I/<RqmQ:A#YC64hOBqTdc^-lh47f+@hfnqFms[%h4R2`rTDU-#(VT;0l>M)uk'>JJfjFQ?;'TCunF:_:o'&rPhK)j*
%gqW<(&AFe9e(<LVT=pDLrph^ls46N9qgBhsceEC9o6o3mo)=u)qPPFkG62+@4R2aQTD4755[3uRrq*[K1\!Tmq91MlnrOHe!<)&R
%Bqh7!IAD@;kKX#glLd?Pn+>=HIW+Ote2-6/55O1JrU@KJi"aS5Skjjs,CNnG:[a/4m<@F`fA"3\&);C*c`_fV=._uG]=I`-5P&AL
%IdcNZTDZXoo;Lhns63U5I9t;smtLCpn%A>nJt;eQe$n1[j*uCsomH"&^GE?aaum9(o[Y+6mdbYQ"8^Zb(LHWmn%AJrI.N?$If$hm
%fJV(Sqk*>jY.%_apM\saauf?g^fCL0V#.@]X'^?i*3h;Jlg6Y1/$(\eG659;O*]Z2mE9uf`%(gXrW2!#I4)7kh00mD0)'/CRif92
%oOjfkbpflnhKM+)]e4g0=0>.;]'fdfJ%o!es7C`k"9!LYqR/22r<;_Ls7O+T\%hq)^HS!1hL>'GR&kpfi]4)mXMW]XIFn"Chu(aO
%K\ugn^=2AkbbOQ!p>5+lH$tajDYLgl=OWiY+2@PrTT4f)ms[#e7_I`gci!e9g2-=W0;QRDa[a,@;a8egl">MD`uk94IrP$RJi1Q'
%VM0KaS6(65#PaPU63:D>*^2+#.m_t4#JU3?4d2O'%o!H1e2a`-PMc0.n.5QW%mK9DoKtk4"$Misn,kn*A%Ht46(`W#V&+W\<tb9\
%rUI)k>-M)V]3kNbkDa]ijEYEa@qYYPn,'hj9(.,aqg'T;htu=2aRul(f/%.%(Okn:0Kdc>$#K<)]]/N)qe4o]EQHGTs1Gg*5Cdj6
%?:ge;_7ZdLP*q@in;?Cb.fI].o?TeI'&.Q*pOM[G=8M"6h(SDG7K:j:oKQr[:H%ZjY0SWpTDkbg1&LTg7K:j:gs65tp4p*<gR2Gd
%Vp?miTDln1&(&ph3ZL;HbkAXDr3(NBKXImf8Io\(l6kWA9:l`Bhuf$hqF?%BB9HCk3qfaBII<Bmd-GBDA=O^0=4ruAhgXi\I^E`#
%iY>rm]]'=6q<O/up9h9VB+oY5HR1t-*ZCo!Vh^QaFs\&u%tF)$4d/),++JRSbfBUSI@9Ir%o!FT-Ld)ln-;2-;sC"G_er`V%ki=7
%B9JZ9(@:/Wd/;,%oUuMF\"/BKWL)%#e$kn4Kcg/b#Id2e:YR5T'b??mFsMmgHt`D=SI+G?5Q9UPpJcHPqR/0\?,;qG]orBa@it@_
%nHt'gH"`\)>m^3@*W!`^ka;Qd:dCP!Y9_b]j.YXYFs`;FUVHFo4d3[)BuVZ2%!s,uDtFPMp.U).Hg(EOlqFY(a@";>lqAOo@,Luj
%8[,Cg&[1uhDh!/sTjrH:8qTA.o8b(::X:<di:)Bb2Kl!ReiiCoTIW/^4RGi#5@MJ\@/o)=k%Ai`01sRN%%6:D66i7dHijI6Q(H$A
%@*^?SY4U(!L?E9SpsSV[1@rlf@ojQj(rZ=)p.Af*7;o#XTA/%a@'?&T?G!Fe*Q2I)/$]ZpF8ODTK?kM'9X%UG_o(!\'HQf;9EJMn
%H(6\e]TS\4"e8lscnMpbJ_o66.53UVi4>B5H6;MNh^]"Xha@8IfU9t]2DMC[&'W:89CDn1AQJrHih:3SG2&3%$UW/bi9*?#i?.<P
%A/5^H(Vg!^M\"()m7\%-A$@`i/j;+?gW_7?a&u3a/&D!CoJm_2-8XCg:[ncKIZjf+B+iiJ*h'h1:3#09cQkJCD;aT,^1WV^Rd!m;
%rMfI3,l4H@dVL>]1C<O_k4lWQ@"/.&0XW]fme>)o[WX"MpWAFrA7Ml7]oY"3fV;\6hD5I[MhbWJY^;pUl1%a!UhMRYi:D]d3<sis
%1V^ElcnMpb/b`(6Ku4G8(1V!/3S!B:lMGlR!PUi.;Qh@PIBe*T<rd[9A9'hsTMH)8^U#`4g;-:_b9-/;FLA[P^5%`"Z86ps5Q.MM
%IkTu\YKs'em4U$a9S,Gk[!gKM1_U9\qRos:G4eIB*2!/E6e`HLVnM)L5Pf3Tg%LWul]lS*dlZf)H0'IT1Gb)<,loY(5N6!@+1\n+
%iM#;FlqFWRSe8/NrH"Sk3*T[<?SA57qW@[*fCql=hY/9WpS_0AhV81('DG,qQ)i>g*o:4>?i&7/qY6iuYB]4<T<E^F>lKjl8AA3>
%q6Ah[f70Z!d]\s/NpA()n*cN`ZhO+j%o(r)VI-CZr7FBkkj1uMq=LRcNHiELrn3qA8+>p4OlQUoP$U_!%b-DjZQJIto^_8"%tgJ.
%.ga5YTlk'2e*DMYfcq_JnQ0(Dob1^/eF1WS6387Y2u`$IVnJ8-prQ=UI_8k]adu)5[@[MMSmG!lrmo,&*ZV%8VSE&gT75:G=8__u
%I.;8rs2c?gpHjK-e2P,6lGn5t!Pa/-XBnKVlgqMKq"/I-,iBKC[rnmMG@17<T,R6W^\QSj]_T$TI-$oj88itM0>I2Rli3e_&r[jJ
%adjJF]3kTT+#eKlIH/ZRlskPB``Kq3/*ZN[IcLG^iYC?uj/_):p,d3kCTjO`qYJtHZWGR>]`#i7s7M_npt8tGB[6LC?:dCh%uhfW
%-R2sfGAk4hNt:'\IaV!knFi@OfAF7?Q+)&g^&->5J#uf#2rB#MgCK8gG,IO-pte^%Icnt*q7F,Mp5cnO^@h1=s0Yo@kj/h>,BftK
%YP?sJA7"rkJ+'<0D#0KR`Y#g]T3(Y`5P:5*eE7SFe5-$R-1uOP5P7r>=\4$Jd80_j:KCAc=7fEUookZjk8!sF:]4fMom&tjoi"(X
%8UXpm:]8d=<`5PkoM\!IPEjY\(&cWXrF@5IGsssj;a4DVI9t;srR=VD;P.%_e,RbNRlFPNAGP7%&6`3>A5Qn%'&8'/mL(Yo#VNX6
%mRu<AMW+]Eh(%'5#Y;;CU4CU,K#LVa$VY?FXY^C@0ekE1&JNH6-71&d@bQj&M2@V7j-QC^]N\8+?Kj-/jfA"D9RN_:j1Xp<S'*0T
%Sih;H^n<V?>[_#Jcl3h)0JG3E%1H;T(`;lLL+<Z@%!i#n'a=jH]n,,L!s=24^i5!YJO+3^\AH%sTJnQ0@:3Ki)]5_30JM]"$s+8_
%)"\#e.gugpH3;&""pP:FJ`-q<",#IGE.pTki9SkZs%NYVDcV(-WeTI>K6k=ediJJ[C!5I0<:IlKA*pkN<&GSJ.k[@Vpg8$L3"<+\
%q7H&M<E_Vbg]+]tp$-=li8dBi+4jeqW_nU'^2,l[)LOgOBA64Pqq]XE];a_)gPPO5gQ"mVs5&%cj^D,-B_053GF@$F.t2^/aI`*R
%+2(2GD84d&gp%C!0;*pC=q5K"h0)b=`S3$u)+Fc72f=RrQYA%^ijU!OG\>@VG@saf^@gf03P&_T4]F\+.kh4]r;,_\;??&RGF@$F
%/'`Nii9f?9f%`LkHe5H:mQ@`J'e9!kp#n-dD+?$VSE]f1pm_\!a6G;+>&jedY1?l#4A#XUm[jHYZgD,!i9S[sDnbKr70_p9gAZ,5
%c`X1F!,EahqfXR%!b9jF-][VmJ3UC^4f,cl<T<r@pA[,,ET.?eB`4H\9tR>(lN4ZP81h@R^38<e/a?eTgAe1bXHdhFRJ(RFFe8Fc
%*OPbilA-'p[um,"7Jhp_BTj]<#AlsWfGru0^u]+RhF_MlQm/QL=6R+feH+Pp"di5n3T=Hs@,KG-].^,$f:D=/%Y#Q8_!\8A'q]qq
%Gf/LbRq>U7U!9'Eh6Zh2S#P>]Y;c5.gUGJ'!buM0i:>u*s5XeB^tN!=XuLiKheO0ss*Q@$]XM_Q'rtYciA)lb[rglr>Mi\*2&5J&
%l`DMPiDTdTS+jk-/1Np_?R;j7[:e)IcTepY!!W;erWfM0DS)GJ*hRYCp#8?"%%r2R*d_]'id%I&0bu]CR:9%0_2TCc8mKcTlbgaa
%RPWQiJ;(=B>B>4b$l7'ueU$ehHcY+mpF`[(:S`U8bEe.!G4Ho:$8CYF`"gMa\Gt,aCl8X<ZfrUo$S$\/[-=u*N2)!VSpk;@N2]`-
%._oB#C0[IE:T2,NNbdGca.tCRMT>d=iqIo9r!FqKj\L@eGh1*,()7hB\n+V_XuO.:a$[H8K.:9q>4Tb0"/l5!QUg5a,D4&!c*uPW
%p=UTgnEOLZ%+O[*XJKhKEUD('\DO"\pc!?a;c\_icTO3tfoo2@U'0<O<L#h=dqu.b"P0q1E<Yns^m:^Ff,$"Wr9c)=N1bb[0>B8I
%2d\#QOsNI3h=lFg"gF9O))KC-g)Qnus.5Q2IMpWWd'qT?qWd0A!<.?1mX$N8J?N"_5I-Th:$gokD3q9>dO1V+oJ2p!;o/%&SfX\s
%Y>bViVGr('qW;MDOTF$a/&l&ch7ZAR]MB8Kq!l6((,(&k%.HEkrMurl4'k]/0F+kd]:KEphQl\F.X&dP9-8Xm+;J98V?6PGFnZ-k
%comu!`7)r=^cFUnZu"V\^CjUU^PM<*aJuK@V3cr8lM8Dc;$$U&]&uAZ!WJhqfR6j,V?4\T2q$P;h>LP(Yc\'M$mk,GePlTnXDU*o
%-/ai_Cfft-Njs6>J?N8QHs@sODBU'Z&eGjR"c14I]sa^LfFM&#c#i&gM_Cn,N5N7$Y8QtkLZdMcMC[&gFQWd(M9es;4]uVt\o*#4
%.NgoEGO1f6k`2-6$,dGA[ae@:rAWTGqHV(_5>f8me*[0<0uj*cSW>!k!X2uedd9\.$1*Gr]l.!F*ameY&LrA04h>]UWCF;n'o4<4
%!6!:LmLLdu\6JFu)p#h0nODp;+I.IA?$G2/-!.mbd(NJT$E-2F[X^u#.rMok3\it5cb6YsOhnW*b=:dbgP.5m5?HVXKOb);6FSP>
%g9/e>X/Q6qlfdck2<KcDFlue("o'Y2"VDWf[Krd,-O&?'UJq;7RqE5u?UY-JCi@#689T^TID%+]EEIF7:^u5@,unE_lWLf/MH&TE
%+!5a*8e/N<])..1KK%e!9c>s^%"<HO<S"O6'1lU^+^@6GZ8H^g1bu#<-iK6G>NXete7;DVl>G,@iFFWg`!G[dbNWEYaH>3R[n9?)
%nk*]qW6o.+o;a?\"jR5fHKh7A"^F*!8<;Z]+(`6<!S5%PK?2u69.mK<VbJB<fR8tenKO7.@fM2Wgqf<c[O;,md7F5Y^juTqpM[qa
%4\IZ8^tD::HlXF@/;>\?>7=RMW>>S:9Q+YiK?</olRl)3dMo@)]U0$1>r%3E0ZVdNSgjcD\7*Mo171%E*<.?8fXbP2Uh]md*t03"
%;1WWbW_22rFRtbi^n7Da-:0#_Y'nt6IR")ZXBIKho%pV^*e!O<400X1%^,]B^CS]+n?#Z?DaOJu!r/CW-;5NafG0_`*S)lp\7"[H
%/co9SM(:c*3P5a1Z\h"s@]Vff2h3CiP<];M;r)#b)S0EZ<6)c;Nf!PF3:d'Gfr#AJ?Wk>#p=Ahpiia39g0ume"rY5.%f[C]^h0Ji
%i',t:YUXYNf,OX&Yunmr^!*4$Oi)ofO-<QM`1lOgPH+i?,:11YUjF269'fiuY.50Hi!`!/D+GBQGH9K,;[L['FiQ5;`&/42eo#i7
%"T0par=1<^C\?t.X6^k=+1]WE!.2b.YJ[;Fe'U<+=,E'WL26OMW!)BVGHA)BCk$6^Pjc0ndU+`\p]#`rPk?@c-D:qCEMrri9m->k
%<FYaMbB,ZTV,Al\Mpe2=jCg>I^B3iP4g.cjpr=dS26JpOH.-Tcrc(r*0P3uf9@h1.'l\lpIISdaWF,<gWQ#ZT-db*G;[F]A/V=9=
%-3J#[RN$*.L_1k$^7Ud@VFHL]l&?O_0OhskDktdj6MJ3#eM(I.<mjND!IogkpaMIn%'f66TrLCMGl12TN$kX0IDs@Ne^d$.pBfCK
%M[Hu/]aj&t<5M3)8i=6?d,n'3NZ1"$U&_9?lX#?$0^D^:<I,=:FnOCl('PhHcA3&WhbU9,'cRhBEV6=s/`tW?O]k@%SI^<4^@&L<
%Q,)6%h.:@!'oaGtZjm.%4)uTC!TmCdQ)F[C&u^Y)s,TeEAj;)hJ%mHU2c_nd3Z31ohk9oV%$e>Bb*3h<ik?511[8lL.^A$9\!ef/
%`Hn0%5#[sReNE4[6C=X`IiGQS=ceh7pKgFVW0[&Tps'ljc&X',!q(#4m5YVT6h`XK9&Q4]9%%BXJ\5+Zh0-D!!Q^1qgQ#2=e=Z.b
%=&acTc@ABRK=#IP3a_V!ZDqjG0cS_8I1(&slK2H=W+K+-b5%*'[RQ5*8mj#P5A;kj<')14hg=Z0h0W2H^.]dM;5RTDV7#II=,'Yi
%R7$jQ2+i7M&L4[tprC,63;"q(E;iQ.[tZDl(f;poB&.5#ktL:?;1da6,=^1@i<gf!N:]RJ=7fic9Y9`![?SQ'C?o%AN@QFE1Bk#F
%9a0G_,P<SdNAk%3#PKaIK!Xhlc8ALIL$lX#-BD-d#gRJ).uq^OkET*.$M6%[TGBn2UqR#@TC25H-$I$$p9do`+E_Y[RhD)n.Rn/$
%gcngEnV=-KFiB50e`&K0cc]>*L_1lh:O89n:U`Jpm##Za^.mEr.&[=r_-!enQ`h%Vhc`%:R_JoL*@ZNmhD*NPmP7cKb_[c?U[9l9
%Gg"+]YI\2%701nYW??\hDL\p+BTH:n#hZHH>?%hBp$.FK:#s[=IQ7a#/mI0!7ql1<G(o?h8ZG'J?ruRS?BqIt%e@`M/T[$ZOTM`l
%?['dkQ'a7;N&>AFE&'[@![VP;J&TNjG!>ohgj'Y=r-6MJXD%G=1'hg4ah$Tflc9(:bB2KR8jP!4^Y1_>qnA+tI.Q$(LJYeWVk+r_
%r^@""hI9^`cC.0+L^hisG,b]-+M-TZCO&+bmuOsEeK'FJ$:f;V]4^-UE>B;Af3N;XFn`R[nG'Z.[/3Kq!c&%PrK4M[D16Kq=SnHP
%-[n\ha8r/":0&[<9q5l[4SMT+^`63u%$!Z)06HsW>'%[9p(O&q!4\bI1UI'(=9lj[B.CD=Su"T1=XC#c^JnDBq>A1YPCI7/g-Pf\
%qtIa&_lheXJp!Vk4S.%<<3Y`2Vaq!M2qg=6QYe+qSEk"g-OTXMjm]\s2O-ImLZZeaQg^gR<^0f1Q`6+=V4)>oO6s%cFQ_X\"m"sI
%@F=eZ/:$=(!P6HR--i-#s/U$E^WA.WZP]k/^I"&5FScnS6T8'q>r/Ug-f&`1r<burcs<Lu"oV)<%L/3N^1-27_\N,K$s1rf^ol%4
%??%RC5,Q=7]'VJBGk/"aXKrop^7^'BZlVA1_lheXJiI])q*7p=K2o[tVNJATGC5EC+A_WV5@8jC's(WNo^WoDjZXLM\b808$;kXM
%67oo<2`Ic?@^3f7e*5fQRqgT>NI4g,[LU`2@.,V\H@GBq'_(Bt:CPb?+&WE`dco$`U(Z*k:IuJLXuO.:a$Q<j9EF[BR5Je0I4sN9
%CF;n%K;fM3l7Pu2Jlp(@,=[d2mPSctW0k>/c`X/^h=lFg!Jkfm,k+mN2baJE^[^I:\ns<iQo&]n"^@9"g@su`Tq];rp#r[,:UKJ`
%!9E.d]f/n:?@Lt_!FKu>qM#@VfQ$J6mQD(1!F$=d,cKY%cF/4>P][PE7GTsO<9!9k98;^a;jBUqL$nrB&dr?uDQ'n&.<3>;c;T3^
%IMaQeYl*ZoFdK(":tlM$hefhAY3;cCf@fkY_+cjk<3Yo#f>qr#mlWK+6]dL!GF>I#UMpD!+M-/.<T<B^QOM>KVCFlk.qVPIB!q!X
%FuL-YeuDTWib[A+o=E7M:^Q3;62r-^s/9@-mW071C:*[#!tPm7Jl@#?0<2r*T76A$qL]_G7MLA9[CYP*.Y5$QB+U6B*7(Zo:[WR\
%J+JQ@8!(RT2/@*0G4(ac1NQNe]gGAqNtLOh;?A-FTBhO-:l/q,RlDd$pKgs%^j[dY7VX4Pm>?d@S)=Y0q^Ifh&pdfVHQJt$Pb`$1
%"DdD*Y?js-B0JNKFsX:N[!?/Uqj^;Z\:!ME)RbmE(Q.COlfK[^_#C+T=q:"q!p$hn`"b849D>ufWmElq\f1;'^)-FD+'s()).4Ie
%\%b<W*k^NnL5N1MfuK/uRr;.(cHN(0'Y/gY1g2H]WBIkbH/ZdS&"iomQ`8^l<=/G.0X%4&9'riI8u$CFnXUaaXS_?F<P\IEDS&jo
%i2bDA[\Oh+"R"FtN)(qu]!Ldn8mLoVQAr?u/qF'8];5>:#h<Q`(o^kn599XAVuV+H.WNFY?Z5FR2EV.J8o39<;W!)=F(fVo:b@b&
%-el)R`>Q9%E6X':[HH"=$2?#ma7?3aOnt>X\Ts<)n!O@R>82Uq&D_?g.WOS6dG"P]WaV]PV0X3OIEUMP[epI>5TZn/Y.`,TJt&6u
%['+P>2:J-#4sf$q\Q!&8>:ZUNiei4FI.5t*ldn!m!5;HW4IA`cfAFC>JdQCc18T^g\aK]C.eG;BfX6%u[?\8]oYGsZl*^gr@FY`=
%>W/.\8LcusI,4B:PsF2A8j[Lc=N*Gf-U6>\jAU9[CJhm.kPWC>2f]TMi66q<_hO9S21GdWcaqke9'f^Xm`h$,U1O5QH+Iik<L>[a
%U@pU>C?UZ_;[l?NqU'`j:G'm*3k0/sTK=dC`)df?O+R)&q^a[k5cg6m?X^m/H5SMZUkLs&<7&5B_oF7]'cSCRr`<+8q4G7m4/`9>
%S"6!U56u::;o)O8p4FK*o7e\m/.-pB@cXcPA:Qi-])<#:TmMi[8j(I.B*fa-pPTPF14TE;]88Cm.R9"Pm"_>;ptBl2c)Uumg=G)h
%CWR<IgXMeW:DHno\+ik>02VbqWgV"G,q?]Z*SiaR<!%CRFSG1VElHm:<kn:T0FIU::ObE-p\m&#d-VcR$-X!(n"itiS9a]&j"5VW
%i*8e,?Q*Jco(9U'XK/K@@o0)=?9$d?@[2J)9R!SD8moD(2;b;!nO=7t5=p(U4-`'["RYO%MP7Y3Ws%Q.](oDRp8hO]ZP$@+>JKTl
%*rhuI,Dnp6*3;b/bK!Is:V,Kl,IJ6AZ+VUfgObS*XtWa,JpEXLQkbl'G3NSLMc?ZTjbif`41\p*<.^9PT1'cbWA4l#Uj[`W8t]PU
%Sd25_[9PYHnO@=O"i/`c]g!nJCg>e9o;\M=(/P=nB6("A[=+oB[VhLcF`.UPX:P$r:r1)Tj0ZjeWW^liFm!gC$.P+*S.i<S?\*:=
%Spt_<!")hMhZMI--mAb`Q\h(A.X:NeHaLh]Ws%ENFK]c:Em5:YoJS9#q,dthS@@qA>UfdB>Ook1"/l4_80U8O-0WWuX:k#.<of-*
%qcE31l`DK@f_kU3=$AA=DMnk+([bkca/B!C[FiMo"n@P><qE]aaPbG-9t+0_MY;H?^%hGu7>!$sq9qR=7/*+L.Y0U9m^)(Vj(J*N
%5R-.fS=rRZ/N^Ds>qJ"=mdX3jckbg@4rN,hcf4hnWSlaGG?SoKqs4kD=SCfSK66:^Wb#M<j#_HIK`,pj0\c9Ai8.VC\3H&^i87eK
%FQqmdJA'43AZ5ZVc7<nRYn+>$YIdT/!ph>ko*1J1SYY!^W=n]'r9F*sQVkT1V9;?r=o7Uq.eqi),C:op'd#Q>]2,Aqhs9,8Y7eTp
%k,3iSO.E;UoSFq#;8Lfu.jgg(5B2\j^@#h7[n9oq=j,bU7sAd]LB90%qX'D4l_o?ac*kr&Nuk"sjAU@(p"-CA!jjuDH)tbK(CPV2
%r_33u,]L?nYI_p2TP%Lhe+(1[[\*=H'qFSPok3)lWZ%/4ifEK/(NdEaJUp+8^i5!YJO+3^\AH%sTJnQ0@:3Ki)]5_30JM]"$s+8_
%)"\#e.guj9j/^I(s*T4WNeLI%`Q;WWL+<\t!>j%'r#P<J<.MX4](c$$7,)X'5B"'KTH8Vc3SjSR<T;[:*n7pE7O>'S`S't9o+t02
%s,@B4*i\)`cF.Z:G-l]n"^dc\hP!#LJP(GGhY>d16`:"JTNC+[ln-+4'S'F.3<,?QO<4LKk9rW?s&KHmm;(ChFWM9FhKnfr[2aKP
%(OuRK6P">`(&[.L"krR?W.s^[)Cg;dZb#n,W5Mc.D?$dP=.K*]^tZJ%YJ-;(E,Lj,>h(<TEU/6WX/8bqEhY`YGFh5,RpQ!238Hb@
%eYpD$fIMoee1%'X2nP]on$^t&.X:FFbHJ]$T*kSEHF-+b*^>qBptBLnFnb9,EWr:^&?L*AcJbZ6QriN);jDmJ<d4R%>YuAu`"g@+
%9*MQSFdK("J1H_RQO4XJ%RQ%'3_oX3DL\!Fi641:laBF5g&>?iqmT0?2m;XpSP!:L^/;E">Y!OUFQ`R$$(Rda=j,c0<:K-"LH"E\
%7mSH:(N1s016`-k*8LQ`7Gm6aU\h;363/J.m!;iZqb[[$1$XeF;$k1"9Q+[OVuZ"@l&Hca$(Pj;na,;L],0_W=02gc8^Mm'SP%f[
%K=g-1$uhfEm^(/<_S5Ga;WjTY]WHSTnbun\5-n?+f"Cq'E8>:G.Y5+S,?qY$Tn5Y$2^Xk$).HGDcD/cMY>^:!SSeC+M(ASPHLqpF
%U/D!^jQ!<o.emE%YHGET]&S:=!<15oK*GIXnA&nM>Io6)WmNN79u`+&c];(_m4244em5.&@CW'2d3r7ND](cSZpb-KT3H]BmP7cK
%E5a,i>[gP2cFMD0VQ/#l>_-sYHMl-=.**j1]1c3+>k*H_6S'^;m>$,D<.J(?_\N,KYWk^g%nJ"N5(D5rIUH$he;4jLs-X3Tp@!:+
%&m'n&W2KW_!^:B[r*^&HEh?"r[-K:!CJ-..F2`:rDjA+#;>7Z58pmp]bM5RDYB]@#H``FJL69;P=,aDeT/;rEY+7[H]0B1>VD5\L
%2ufl\p1d[gMN>5_]`$"#UFch?0P1`s5:X0hlr\&eV3d>H,s_s`<un3QT`U`+?AU3+]slkGc-NBiIoA=T3Z6`.e>,5c;'e\m(fA2B
%h"QC`41]i^W_nm/euu]^L;hoF13i:rmJU68i3-g_0S'X]Gh#g*Rtsrs>g\%4cm==GCF3:\#-]V0Rr0DPs2H"#2\Dn7BO%fl_gCg5
%+[[df^`;G+Tu4rZd^\h[Io-7?>#CGPj,*rRhVd_VK;0'D"PbqRj<uc#1NK;Z,#p+[=6X&'W9$&GV)\f=))uT.2>E?NUd.LZb@9ju
%$MLQLG=FHm(bf?J70Sp/F2d(RUd.MUp86T)<XJ,.Y/D%[2f8nU?$_o-!JmSI,hS`b]1c5B8Grn@f;Z\'LGj(^(%Xs'(c?]NG.U3i
%i31KJ'4KlN)FpfI`KBmRc(8t;PnjNGc;F="AX1%jN,PElb__>/Y>jNh8ho2l[HjFUW<CdHFo/dM!rH1M$#Dj$Pc/!UMA;=)q^XQo
%_hVQ1;#nUEh0sg<JH&(4]Ku317/+>h-/dP-h*t?FkM2L#MZ,&lLZmT=XW"e&@8oR;m%J1PD!Gd$+M-q@<M6d]Od]Z/*]\$r).8K'
%HYcXfS;CC*.h6LS1g@H89,0-&et#l:-"'eN&o`Qm*2Y3:3L0%3>t_=c/f`\-:fIHU+2A[lJ8pL1J1K!]VuX8[mf$L-Y0``g72:o.
%8b]c<.RA(15^.]3W5KF9j#1lmPjWgh.Nfd*pV(F.5g0Kkd@Ce>-'/3pG79L(<*KSn?7aq$W!\pP_mZ3>`/>J3Dpc79WtNtB/&2nX
%7gd$MZ0m"N.KR0.Llkk4[CAr&DmKp_``,5_?`=1;FmG\o<Ph<*8l`#Jq((`2d'n,ClVp5q]TGf_bK"&$UAkS_OLf9JPlOnLc:b)K
%e8cZKY3=c;gY\iLrrfZlFN6eJ"Cd'6M;\ddoci<%h6qi+:tnoV\ACd"M=/&m.Y0I'8lCX!ORliRIQ_6bk%g\>\pYp*f;U/i26O_Y
%;r)(kWe-'tW.328CT/#depn]R%YFM\mX-0-J[*CSO]k=pjrh7eWKjT0Z[%B#Z,V`,%3oS)/1T;d@ccZcHcM6JRK=$:9hD:k7=^PO
%bB;R2[EP=gAF#OA](_Ag!l]SU7d='j'tS6rQ)L!9%pYfT5G]jfHq>PPC*hA=n>k4WeBS[^@`6@^PA7g+jRLeAe"R1]c.%Q3mk<5$
%!kET!T/!)J3)<*>S51G=(E08kdCmStQFUlo&+!N7DX#Tm.:C[603i[iD-Ks>J$"k0'tt0P4'#K-WqeRQf\Ur5:M2`gNrmV!DZ<MN
%Mbq6Q7ii\DH`U'R8clV#GO@;Qf_s+\lPkX1rd+FfrfpHek2f[!lcs!Onm_8CL+E*R(g$V?^6]0Bh=j/D>J?6g.Yo\*SYs5g3WCOJ
%`E/V.rqW.1Q:1s:,K*.O8u$CF(FP9OJ(]#C1^0C0[""A/(_;nI\aN#Q=-+4KS3EJPNkE,@FsX:NF)_-uRst0knJ(Jnk80W5AY`pi
%=CI0-<:F&6iGFjiin0%@n%\N2gS+]J`Z&^G;N*HDb]Z/8Ctjg<<:G$CqnH4lMO*X6k;Q2+Al6@';l46#o;RDbo2X\R@+MHGDBGEa
%<8red>ou3*^hpPb'EEV*pjrhaLIt,L?\,XV"]*@W]:l_9ELZF2o#_4F5htLSGMHV(!Gj&SK(o]/B@!Wsnu&'#Uq:QsOt6OjnA0>C
%XF59s"X$;-iOO/9<8_&3KD*qHPsA*[nE-4]i.W7;4Q+[a5$h"gk;lB;W=i:&5.LWZ)ddr//-W]Xd`]OGApdAX=-"B&4f<j'@*aDl
%H(@P12r/"-2K(bs[-me[YtA8@C<s%qSpt_<!"*suhHej]QVe(-=6T@]WeTrTa=73CT/:FJ)=1YDY.7DMkl("NX0gX7Wblq8qr1TW
%BCAXu\.A+3<3U02l>%=d2t(_Qj/16^;eEB%hA9qR1Jg<r7u\jJ4_rrg\Oq7g4PfUL<P\N0pKEMJ?nI&#kdG>-!rYddSfs@a>\6ES
%`STF/?@:t!!>Md/\]'o,lTFiQ._oB>)Kt.)(Q?>;rM\Y/.9!<L*d_]''t!GarBd:G1Sk<BjjALJLItr+AB*,uA2)'q/B%0W!S0XJ
%=7f9rI]2"6U(TG,p(#+hK6]c$@lLCFj@;9RYJ_/ggKW!238O*h1sl62Y<1LQT`X:Wf,_o5&m,C!VU$B;=j>3]0<!gmNc"MiiefDD
%:7QlP5llIK4kbLt>:Q!^7G;SZQ,'p=\ml"F!qBCeh0(jt*8e;:@C<Vi9s=M)*!II&'E0=.J=iBq^pf/G#Sga^%aNRsJkoS\DlU_j
%+)fhWqc-^VYpa#8aAFg2q*l9.)Jr82Em*e*-_M*`@kC]4>)muFdYM/%q^cr&(d(p4?)eNnpRrqFq,\jra4K.VCWR<Uc9B5f7(9p(
%,nTO?4-!H$FJ!iZ&s(>/f2,^lm)/2uiYaO($:$4Qh>Ts15[H"tnP^og]l<`n.X5XP>jM"4UW9=kX,^-9<6LuEE;"++!q)U:bA*J"
%JIJ]kI"ZZ)>:CCr?nX2KbaLQ@>5clB_l*QJh,WHlj#_HIUcScK'p-UCpV't!^qOGRJiO*W5#B'Q'<^Kp'rg-\k/uk>+HC^/e7f[%
%>X)qC%9pQ/mjd6&h0BB-A+YQhA?^F*RN&9G=6Rp_U^AH_UAdT*m&3Olp=&Cb;2K&`/!0'd2kR&Ned\j$8d4\f;A8H`l3`(^LUqn;
%.^AHUohHg9^`5f;]MB8M>NjocV%T+-N3CTF$`M"b@DfJHmoj`8V7]ni?W+?tdeG_I(AKD%k;u]NfWr(uE)`RZEq@.cVZNqU;A*`Y
%9rr'ph?0Se3+Jj`I%/XZAPs5uo*1IF^R@-**#V_`/)K/?Hh-t%('VKdTfq7'0rTqHJ##\ESiE"gZW)Ig@?ok25CDh<F+.Xs^g1s(
%rCp6VdC6*%5Dna>/b"m"6(3S2-c+KVCL2I$3!Ht/B[L5Do,s<Ks3+%4$Fj@8g4dstOS.pWWPfN2q\[p]_#&&_H*qO>QV(Xm3]5=P
%@o*K]O7"p#'%Pu"cQ(ZRC?O>i?V:FcQRs/QqqO5t5jf\.U:YoU"Qgi<@rPDAg)5UbGCK$8k4o^A]jjOs>BHJPV@o7@@Lj(d*8J%I
%W#"Eqg\+JJ1V^,Cd@EWl-)NUY=aS`&SOj""5Mi]T&m$3Y;g4Y1"?"TolW4Nf1=u9&F.I1J6j;a8g]+;u=0,bQ9+?g2aEJ27T5H_p
%2(2%kjlSF*;87]BDr(CSeY"1Ia;);R;M4B<Y0aitUDf@"kJEcSh>X%"nCL9;JQOM[@uX+E5+b7-=XO@N09cTPV'Dl?'n"kaoPgS,
%K-8d*mW$^o=#>p[(/&l.8<j/k<8rdf)`L6to/*BIneC?Fl_QZ2[I/J5W^05G4_Sn9J9](KCSn[[D,m7[(@b,1gQ-(dWF*L;a(??f
%IgS'9TX_ajOr1@c^OeJ%DP)bg#H98cf?.'%l\ZF@$s3's62g&.K/IYV4UZX0]'%m!Z2Lei;[c_E0qr!i'tV_F:l-32^"$Z'_MAfs
%6B*LS?"(ZBh[#i!l<[On#ii*B@`1fU`2nS.0k-q;@^r04$8ib=0N,Yp\>'"\fop<LQ=@@us,,bB,IJ6'(&_4X*5kB"`GgMC,=Zu(
%L+A3"1"%!q>g\&?lj#7C9/0]!J&QA\O]k@7Y/!'_](<_<K^QO"-?kN5r[PV?$Jg&0Pi7eA2(VlT7VIXHK,?=PUc2bm_MAdK]b/-s
%7Z82KNE"qqj#]JMptf/[X<Oeg419l^BZ,^h>0F"81TdhYrn*"\n#sYE^H6aPGM@%Z5@;?ikPU/5$2Y[GG$r7EOm97LS^l>ar+P9R
%7=<d3i_1Z$pit!%gW,?nD,J(`Q]J(RBcAcn9<-6&NbmN,kM"%A/.212<EEmq2)6kj=T)7"ElIpFAiEGO?r=_8ET?`4GUN^gE22j"
%!9ZlkWF)XE'fbXrB*M;Mj[4f;pR.r_cK_u]oOp"q4OH^u8i<b2\8am/qs6@D\EjGbcu*?o"MRBMs#+-03)Y_d52!AUme)bj>82U5
%#UR<TI_,Ks.PYi%.,@=,Uk2S+MU,H9mlL9lc6k%@HWt5e[!aQ:7ZOin]u;<#XQ`XrC3e"&SIb;3p=9V$3n*nS'QCMJ`-L^oU]U0A
%n/iD3=o7X32=/J60'HZRpEJ5[4B#-_dGB1ukbXVL<3YGG7gFFlEU"Jm5[19t=71,1=6Ns@;i,8PR8W(&Oi)oV<:J)'rcGC410'2&
%Vq_5T_lheX!j9n@Y=0`UMC[=!7!DCQQ!"%8dt;b/WG8T_4g.cj^0XeEIYM&%.m@l7HK_h.%]uLVj#_HIUq=9>iak"QdG;Q;F+s%L
%'pYGX\#e:E8Gg,^?Mqbu593DucTepY5RiX[cXl7gC"D!>?bMs:<kn:T0\s0f;S-B\Xn,;fECJ(EXn0md.0)(<]&T\f!jS]8b>]d"
%9V#A)Q>bir8l`%HZ0cGtqAUsm5^V#J@o*KuS%Wga'Jd1LJW`jQZbCk,b/opY!rLQ@R")S6!VbDn]Cu6+&ei9DZ,2uK+p7kb)f+)i
%qd(2#.o%2?^[h=^hRo9YhL9IdYSoEb4r;.ShVktTJClX5rBVkNb[9lNLC_+WS=:4sl'K.%?c/W*F28oTGsOh&F+%Emg4`Z7kuk$+
%7H]6Z/:H]XQ\SE<iXop-[!aRJHhu*Z\R_p`p2&PRC8?G\j,2Dn+$QR6%B75B.&p^tp:\7Z5It@Z4]HqOCq@g>8C(1n/!+Z_ithm7
%Ar"-X$C26^`N!@qmrLc8l&P:1M/'b!E!>e>:]T&`FdKR0]_^7o"*O?V_\G<Br0t:Lb#IAQ<PQ,B&m$(ME;P6#q@&8`m-Ch+^/n)V
%Q9Oga\c!X.m)j`/n8F=*5+E%)Y?>p6-*B4KB`G(C<iqf_!UH%()l_R-:l1h"]7BA;UB6rM;8]Qlk5qf:/P?8+.rK*hIAZBZcIK.u
%oXQ(S(&UQ*CL2I$\F)+P.H#:.-DuH$X&iYD\>"H[lL+op)bg@cY<tmC91nq=$7\o4/!0?'o104]B&af/DaEgdk%WG0_4f,CDQUhl
%IqV"!K)E7qE,s:-VeapaqHVrk7kS^05jfpjJog?6YG)*n/h:q\WP,n[@3(sAT"OB\)RbmE(T_-2N`f3cm"M2[a@lO0j"5VWi2b.%
%s4g0.NbRBHU_)0?(=/@>#3#4=2=/G50+2CJC?bH>WCA2:f_=6K8,(`1._sZ34.\keE'ETY5tD3$4KjK&\aQBB\,thOkft9O&ieL(
%$4sPH4-u5SMq,-j)HRp8]P7*#n`)2.^jK7nD5.`"h:-jBM/)6,;jDUsN]S/:.us)RYn20a-ie8D7d=3"pMZ>4]F&<":r1bSmJgMG
%\%1a(ps:Dh1$qHq>BK>i<=,bo+D2#rFR7oV;FTL*qK9:2/p!:3@\d%Vr?.k*N$*afHcNo:2(W&Y7`\,qjfcH\M!jl&<<54cH_"(]
%i7g(d^V\;\Y(OBZW_i)QoE2kbi9TeE.\Sp/J4a5<R-kq4W^031(@,:.=,EJd^KkjJfTGnec#/t(_4gq2S*Jk2V\7nph.rO\5tSk?
%])DFSZ"NI92co'tX]spm4*cuX!T4@AZ!]&4rDpMs1tA6Ei/0$TO!XtK'f2lW#LVpg<J?RQ80'"pI:p.cUo4JD!E\L10rkr;lj?Aa
%$B2klN7:JX:WN5u"k@YLQo.ee7_YKkZhpc)R2W4^@c[CmqNpXJ5q5_`kJ,s_,=]D>@%D:`;\L#ggpf(RU_n#B0N-d`D;ms!a'3I>
%;8HlsLUU9AgXI5sV@pK'HqH,4?k$>SOmad/fs^Qbqha3._,m1Es&qR@Sphc_$K+"n^C9BDPbc]Ih9_%_TX?-fI7s;U)qCT,NQ)\<
%2f8n?c2e*af4;fjXea@SJssH+Or1g*^'2'hIs:P+DCRWtg%J3Rc*Vs-p+bimKf/`nH5=Ffj%L@@3;LtI`sl,B:GI#]I1*bZ[m+4G
%G/(B[qJ,mnFN9<=K^NhY-)f(fW(EcG`M0^L!pIo1TG$bG)DP,?g%sigWuEA:c'0`^eD@qL<uC2*;N321[Vq^lo:RMi`[OinchUOl
%RP3#YI7lH#pgi-F\^sWGCf/!tM%d;kDj<T#M!d5q'=ZXSd[N6&cIernjP/2/="8d-C38XZ<!a3g=5VFF]Aa$,]2QMHk%:[]2nP][
%K%2Nf1e`+2B@S\6^J^%A55jR&oiO/LJ<h51mf*')qgVNFeu3]26^[Y+`fY"@EOPha\au`Rs%3?*g:u/Y:TkBj_nLk"`CPVS26Q^a
%Hg:jkIDWd=Kb=8m\>'#?E.sEX8gA>pKeja!a'LbU^q%uQCaqogUED0mpXsX<;(^u2fsVRWc_'Y#Q3+ec3;(OCbEcL$"V8qmZ\C'h
%aENn=4*U&`U&?LNY#mE8!nK#/2QD&V1lD\P?X]aZ"m8EO(c-mTWc?"_&%CGGLZ;PPJG>"kS!qCuoqsr;Y[UEAbX$?k\#Dd'F4--<
%gp(gYk?/KQg\!,t`Z*#"qr)Y[))HQ]H5=GWkk6a\dU."bURb1EII@5q!hPd/[l#gpa8iZ&men*I;$XOh.U^Rt3.3h*@)#2XXuNh%
%f/&=$4u@ck(>\_8pAV0,fJcGtZu_L!>W[3D?Y?0d:Kn<IWb,>rcL[q@O3bF2HiH!/d5]QfH+Zr@g%Ftn$gtL&i$W=n63Z>m2q>.o
%)u6YbBO$,eN(Y7B@NYie^1bpP,?qY$T`TU?%@b(omjO18'q_lRrXeZ4$>A>kd>R0KgAXDB]@X,=L.*+UUN$I6(iO.Cqa'LOU?OHb
%p]IMR>j&(N)m8Cs!*:;H4=*geX0*:L/U?F)!E9&KK].gf$,[MN/VnOcSou+l*88'i<l5[N'4q_Phh!uV5J6821>)?XHD_BWi65-U
%GpQGkEFh-(SI/a@f!+BXq2U()Tt9t,WPlW4)l%.fRm4Ob!K.#N]),h$EO%%pXuB7n!j7p9qA9rHisMmJ:Ra>kU4@#+>ciGSNCoSE
%K^)c\I]i*[/lZ<KqK:&J\,s487h$PX;8C7]_g24n.PQ.OlW^T3p57$`O9+?d.W`S+>K;^CAPn"r^/>8YSjn,9los7g9rS8CA<jZV
%dM[`=p01Apf'dbMV,RmrJiQ$GWi4hdX[cTqjMb;QHr;4DF!fd_70P[F?$ADaM6H,GmYYLIqjBE9dID'"Y/"1G_+cjk'S-/tc^79.
%nC8GV?YQnG+>)?WcC6P2W^R*&A)C6pin/6.D#$Q7X#(_r?qke=d*!tmq?,=0N7>$f)HZ:_n=H[B?`PZD2+AguP^@&fZ7_Ybru2u#
%r(eWA5Rb0j*2b-]]TN1ALe2i5mQ<7<h=\UZea*Xq\eHj:`&ZD^k['$A$,k#H)**igp8i]:k%\n*Lj,YFbD-SV*^?;1eCGH[]'$%B
%J[:#O[h4n@fmVD]@[KRf](^0Bh@H?-lr4GMrBVaF(V8@W8lRlFkeOA\ph5jjT_k6<Q,($>@i$Ff'!sU9^ed>)r"]+[YIgWc`G=Nr
%#^j%kpTLP#-%R(pF"sWoELDP3qPR^@enq=a"sj:OkW\H>-!I`qSSu$4IgY>VL`)lh8qM>_meeoLb]RF*_MF?C-h(u5*\i6TG->%i
%KAd.^7Z::[S:=cqDH"#_>SS[,D<bHf<"1)F/(M.]mg#fos0sQBmL)Ws&^3:lOW$i1ljDQq3)i5RmnP/?ZTda(b=FpCr00fMZ]hD0
%"YkL\DQZkDN5N7([W8OLK5stHJ[BG!2B#Xn&rLJ%gAAA<MB9`UKopZoh*)tAX6j$u<u<Z$Uc222/$O4kGMWXi^VYd=rDJV*E.3W2
%rKO<ID8-*?dCj^s)O.%[\,ti8l1Wr4"LVJa*4l*2$A&'$D+gqJ#HN;r9ssa'h0hV(hl;;eAC*+\$,/q(^0R$!@+D9V`jaVc"acGT
%a$Zd0-%VTi*uPg[GjDIY_\N,K9`BqG(Yrl8.Ugn%qlcfB67BZ@rCWjP#;K]+aS1n`lQ@,kjN=A#SEjh+81d:)]V1X4OMdPHc+\Mj
%=Gm7#NuG-M9i*"3`=Pr]HKu]=f1\EcZLN,10e1Ou5)Dm.oEA,*liYhphGp<(\RUld+R!06NZLn!Q0QVMI_e(?DHg9jp8hO]ZVf:>
%?k\P>3Jn7'J'gE7<=MQPpcmTpUInKIGO5+M*=pDU,--M+A&d$&`751J,3$87^mmJehpS.q'm"f\=u^kP$-.7=n8K\VpoNTHY#B[j
%4]B:N=gutd`/XC7n8ITPRo^%kd\"&OH$2:Cms1mgZQ1F-BTtL_2;tfBFg)p^&sNOr'q;+,7g=`,Dn=J<Kb5Qpjk@h?pc9W7YW9_3
%7bVKi`(7!5B7QT@B`4G.^?TP3J(=+!l1X)8Jr)uO;G2RJmn[RWs,Rd2M(<\oa%b?$A^Oe\.WO?_[l5"&:n!":aSA()'^&H,pD0dI
%CtH#-3-Dld$GPqEqkd5<Ri$p'T>@E<'Y-PS/=9%'RlJfAs,At@VLhT.3P;%_\,rDZ/iBR98qJqL>HYZ"%*Y/SrtaF#Vhss3=hoHs
%oA5lTH:Ekc&(/Y8.^=-8MFiOQN#5DFk[1q"h^Yo0Xd)hbk0U/]H*!DE)sM9mFZ8,::/k]s40,PDq)43L;(icE7unKQ#.rKg\Y0X;
%*8RmeSnRs/MZSL"DR-F5E&AM<EVYD/[f!iUf^-3@#H>Y?iPW'aN@IfM?ZGY3SPMFtmfJCK*hRYC'i(Ar#2fmFm7/H60/@7sGVYr3
%jjeDC[f'h4o1L0T@NYier5bW8*h"n:U4QN(B55c;V&G.sU&sDHe*W3tV/PtThVF*UYWbMW00]$LJ>_hLf:mkDi`Xk)VC#3.b5)qi
%J1G`^7+=!+!cnq/I6n[?R")Sf<udF@]HADN4+g@Vs&Ouuj2Y@KLCGV`C?m"$.iu_nT)p(*H`)&eW_2&YgY021-'6;M\%c#k-B9+e
%o-[I&DfYH$mjS847^3^q"l[]bC%ne\"oB@sr^`<)s$c[rC6ba[Y@(V?E/s*a'S*ISogOcC;o+ZAh.+]s3gCDV>^7V5J1E$>Dq73\
%II)fA'_'C@0+U-o])Ag3d!9$f.hCKVLIDO+of%s5nnm[#"dI^U.ooEJ`"dc84aMtm^2-%(>MXRY<8ss=;u_H>!`\[DNt8l*>DW\p
%a22IT"aek)CTbSjIr'&:TY!u:1^;6tmeBh,%$!qBZf$<"rbn&]Z?=>1_\ECK!-#pJVgi^n'd35=dCJj".VRZ2_4u`8%-dlOMWZ'd
%3.M?D=6P\3<JbI''N3otZpja@W8LoNgL#&hWS72_s!qPUW;uo)h/NKGdB[9:h3GJOD=XaQ;u]Ml?acLbZ[UT5;,hLJo>]k_et\#!
%i-.\Pm%2b_Cf(5Y'%5$+.WOgmmIs[Bqfj(B.26`Go;:3Pf*#(TG4(fc?PuTBX'^0e)"tjE!W&.#s/J\un,)=f8mKbhi&=<dIH?_+
%'X2K>d`Zd*$)nQ<??kEaS8C[u3."/>h?&seHc_GEB+F?ZK*oo4\"9d4=*t:G"pJD\m((EMJ#%\F#PYodZ'Yk0.u-7m<7&5B_oHlr
%J5i9V=.F+lEDC_*U,&6Qs&O>H/+s/GLMm-l;RDuSK/d9h^c8C,NRX+A.'8+=e2K"Ml1j/n*BUQ^$E1oM",8<7l2_\rGPoeUO14JP
%!bRXGVRoN%_f1;q4b23#In),).QDK_s!li9WZ$UB%-dj0::L643>/7jrcHt-WZ$l6'sM\mmVMbZ.Y,97GF>J5TD$%5p[dKJ:]]R$
%[/9H[U>sutiejp#g]!HFYg4Bd:atAULYEVA!TkM<F(B6ej*r#%.oO*SJhKk>ml9h&%6bLHgpf)em>j*<c,s]FY+Po3)u^'g?lhW=
%B0-$p]8`bDi<fYhKAOC_Kn4e@Dd^)l^qcU%0O/$_0@7HdW".6gn\:;r\AFm[J@9^2j2;aEd!"D2EgKW(ps3o56+m8FJZ/X[f`'k!
%_0;m:Nu]T$(p5PH0^&rS<u;bkoEL%#$k*Pj"2biX"pVbli<fYhKAOC_Kn4e@Dd^)l^qcU%0O/$o@*fi0XtVO`kR@r%(`4+^#)4W:
%$k.Fa_\E@[#/,TH$3LB_hS=)aJUp+*@(=(h^n<V?>[_#Jcl3h)0JG3E%1H;T(`;lLL+<Z@%!i#n'a=jH]n,,L!s=24^i5!YJO+3^
%\AH%sTJnQ0@:3Ki)]5_30JM]"$s+8_)"\#e.gugpH3;&""pP:FJ`-q<",#IGE.rjo6#U/@_SEs[2_\KF?sq>#(p5PH0^&rS=7f:Y
%5Mbksq9J^6U'0:`C/>e&/,CX=T5O\p\W4,5:r-3RVuB,/RB!B]Nc2]#D#6.@5^P:ld6E2%ph\]Ao465)H<tf`.]jfD\%XhE]RpP.
%?[Q@nU435SnSaI.>"8agIe*#Th.<T!?a7>qH/LVSWShU5M(^>u"o'/:8-*(iDZ=Y2m7/J<j!R(Fq)B+Zg9^)_h.<T!k;qAsZ"<g`
%q,HkZM5)FKEQ&_AO0sJjG5O0'[%I+FqA0nErclWCem0@[8d1/,T%)T2<<D4Mp(])*;o,@`LGr5mMU,Lf*l^&_^hhg"I36-n#J4>V
%qp"QlVuY_N]76ja`n;*Q4ZA$$:*89c>"-'_eF=%<,6e"=ok;PB[oQ7tJqG"$"Q0Y;kWH*D(#Agm-%:()aIWWS]A935j#_HI<7,(#
%hKo1<l1Vkh!.7M1?Mh]$.bM.TosJTW3KFN-mau]Dmf'=$T=#Zq'$lqZ;8JBs>NRcb3lopDmJm1%WaB%!"hWBf\`po52u$?kB_/**
%Fght5>S0`'DGe64pG^@"`"gL656_'7"i)HQs!!)><aWW5mC09q!dp4"riHf8#JRaJaeAj\Gq3k<j2PrV52:TO&M*o@;Sg2/)l#Q3
%hjm%:qqbQGkjI>#\`2WOn,2[TX"5aQ[sm-bQ+5i'hVF)rI-?[n'_&0d(LMpL1FccprZQY)<5A:gB&3Di--dLcs2N,g__!?g*F"@N
%>'GDifL'`B=qn45M'iPmDEfV%H.</#<_]Cl2@$cYGF>H6eeg%\1;omge57NpJF,P$\_3^--h"XedN(EL&r:t`D$q2mU1YT$HLN55
%/LnOsI3l&33gO[`X")nKg[,dC67P6jj8KMV\Q!N]o>X1Bs&R;Xqj-QV"k;6@^Ug;"?*QZ(4eN.+33K[Q^'D^ZZ#mSUOiFl`1JT%G
%^N.Q>OVS[>SZ3<(+BE8a&6T]dB+S7_9fJ3Nj7D]EFN9$5`;=JcH+!)>XV,8154J9!0k2aafX#bgbf[ZE%j$/gN]Sd!\9HLTCW=l'
%AFT*D40>V8<_T4hfXSNi[o0A:o>K$$7T`Vdc)q%Jk`/#3KtH?sRQ>F4)*E?9!q&jY!bT>&eD7l>U=%OX.*Y%i]:Lm>oe@purm]DL
%&6DL2a;[AJLGs.?rI_pR/1TkKDfb&7MZU-_7CS=D,r!Bk4a*h.p@f`MJdUB0fs=%fa%n.D`F@`S.'ZnD"YP<$-^RX1pAO7Dhb(H=
%9ZQ%Q)iG'-[K@Th'd2)-&m&Jd[=6f7;&$8!QbOAE#CB@5!AWHBqmU%;ptt[Ug:sJ9ZgB,(e%Ks,,sFQ@ZEIG</@7tUq"0cf)g(8-
%<!fY`J(]#)$lQ90^2CY_$,kCM^,SUdaST=%f+#%q.H%7e;r>7`m'B'X!;j:P*88/b$Eu0^GQ1^g($@VQreV!7p\\[!jLRA'H0W^3
%VbXRsi:TNs"uEm[(`Ai'H;\r+;;9s]rX!?B<.On?Q0jGBTBY3ZXU;-m*Z@6715cJ\RlB6A4G4&L>NfD"<=-k_FiP1FcF:?g&m$3Z
%4T(Z_J=MW%#7e,>+IYL3d[lq$0m(HrWW_<gFK]c:14KJuYeTo(1P7.7q$.]Gkj_%;Tj0D4C.idM+I-'An=]m@5:X0OaqSXLTL!+=
%1IA+[D(\5h,6_I^3[M=_lr^tLKF3/jk==+5Oe^"UntEsC2\Dmlp!"4Q=5o+'*S^#5*M98;n-;jSM.=S/O3X:d#)JVp^$f,N)N?9*
%s3to/WPU7=?<>%-m<cBaoOtr\NXFo=OYqF^GVT8+:m,Qu5q+Hfo/'WUJ[H'Fqq"g,g<#P[gME>fO>fG6O.hm=$LBd'%ugY+oos".
%O<N0iQ]E6kbjfi=)H-t;a='V;])lV2N?:%3U&a9?THrG&h>'iG!]Kp3$goBp7cOiG2)OsR9.^K9^(*beDpj'JN(Pp$R)",B<.OG2
%,h9C+q3?*c)HVVc0"Id4-/80Gp__ic5pbGbdVX?2`5lAH[1:'a@PI+`'YsK1[sppp&7;+mmT1\Mbdu=CFNGX\5\r"uWQ#Z4_m"m!
%e#+s/^]<c1NClmTnk't<6j:Z(X?3>U8dlk$kA<&Y^c[8WOG@+c%TAX[lhfE!%;$*uZSW:r5]lJh;@0^!h<,9H`:ToRl`)JTO9,8N
%Pb]d1]XQbF4mu;U8qM<olAcL3?$[A+:g8.E*ac0,))ZfO701oto8OTdV,ZK4:UY,.MqD5@^`'p!,=]D>oO@:ArO"VOGhJ9V%I37l
%Gh:hLP;5S.18T59`'*$0)(L5dKTr95hc"YnqY%&_q`8Y+o<`4Z5AOUj#J!?>+`fc,T-$Tm2D"n(=A!oeWVPjqof^j8io;U0Do^_t
%^'&i'37"_1T7d)6[1L4jodtnK^7SBb$Ci9ff.eeBrSRoC5.%Mc;_'r`E(,1J/\(p;4adce:G&/j*2:%).hF58BC4E@IJo[>M;a?g
%Q<J83qH#7Xr=RXX&,@^a=+#3H>Z'BV/$;.LY!oFAXnHsVIr"-[_\Hq*E5hPbN5N'E9lP(3`i)ou&;J[7n.X=23BQ)DX3#=7=ts:P
%r<-BQfD]Ue\__)k*9?Rf`W#+*m0,FlKmGIYnbiWr[=&MFHE5#+?sD,i?P)s5eDN@;I%.l4G%=D3J_r$GC](HtjFpc"V\]'/jmXmm
%LT()5<8hX`lfU5lYSPPGI;o3>q\hH7[hd<+=a.8%ZWd#BS<[E;.r_Z2Xgcpe"pP:mp0S^m@`4'7,=[V/0k/(W&L0c((boKqn`7:I
%k5Y@5H-a2"gk_Y"hD8X)F[*Grp_hOCr7i60^A.P\Tb!/#lA*WU(FMqK@lN/Vf<fqD:cAZL*Oh\G<m\gJO2'/u])5^@j5gk?T,9<T
%k9G^F1h(.HFQ6(i:U33'?85ofdkl!]:qPt#r'.eR8aOfFRN2#sgU=d@C:XqB]\;F)]f!Y7Qnj\k,26h?6RUf1(O=8cTD5s;=]+Fn
%c#/W]:hFoqV^pR#7e+p23=HnBr1I"lHB9('a*nYeI^D1BiTA"0_SBrIOtL++.>n]D6bbX<=h,5qZs-hpk2M#fW&aL@Yl(.n=aEma
%2of78R(Cf_DD",oNgbC"l[r)Hks8)"*4gu6qU+_QKq!u2@fPpaa"'A&<L+]ERUm%pl_@ZiiTA"0JhUZ9\k=&Tb2S&*-uKOME\V^;
%/)4BW:gu@F?!CU3/:A+G[U,:9et&sgF7DQ!e*P^ml6oSs^;sf4-L(*ph<>8*(EX@Dc$n=<Mc+-N6(u3m8%C'mX"2t1G`^5ij$cD'
%.>n`-=]=`l9\nt@2]!R#KT+U>noLV0oKB;'\mFB]hRsk6iSNQm4M*V^S[eTb<*B&;EGp#1QTkke'Rr;;RNp_SneJ.0o^`ZiAhOJ5
%-.@jVE-'u(N5qF$aDjf_b*8_-frUZr?-9#`?1I(:(HHrN(O%I8<*=O/)`.f$9M,i\:04s9pdHnfdE(_G7B(<1kqcU'Zug`nDKLT%
%fn40k9FQu*dm?5RZN#!7QK"O?Z@BME,%.V>6t$bpJ^&2)n35'<]^VU&r$Yu:LG^R46_SJPj4N8'cc0JmmC6KO@WkPg(nFsTW2Vc`
%f[(SAJor;n/)i7+Th$0Xbn[aHFVH`G(+tK6UY'YLc`jT\%=r^BnL/Q0mUEB]`8[>Un\?f8fuK!eG($S7ZN0d<fme!OITOV#/+H_-
%g?]oQSM5e.+62q,rP3W7In*(taErStd?3mPr">L4'bnC.hNo[-QiF#5bRB(k^0^1'&_A=+*8k[c0ZHO6H\KQ$+!k74(#L[%,4U88
%lhhS9`Jg5[T:q1JTK*?(nTP[/U<KBE47Z[[9=uZ<]nATL%BnG[m$LjRm.aiEqR.nib&_rMObXif$J1IXnRc!)`"!_f`*H:(Z\QQu
%,0u<;Y41d#Jg-!QrjSL&:>.+$gZ,k!p-O.\PCu77Z&7\9jZ#i7&1-;h;;iGED:r]\?]"[tMV++g$H#u3\K+3"GMI]Z<U>,YO+.7Y
%)j`'ODYu#50<JPBiSWQNLN^H^#eF,cHP1\".7Ng>4P/PW(WEO-?Dl-oj$5^jEL=_f'^X`PLk)lQp<0C@htFU42==RqBFokMfD3)*
%`2p6@*`iL2%8]0gdc4RUC>JPG[r>1mbX:nV]HVS(i,<3fVq'u*[^a=cAel?\(e_q:9mkO3R3ISWnXX)*nse86D"43*ls[,7p?b6r
%Cu.uD"Z$bn5ERm93_&0-)V,r(hbN2+r'=X#M,oNe/oHR+ck3D7nH@l3JS=J&j7/3$>Yh_L06#C$$<X]USa2$C,q"hfMnK4o-$D^&
%\n;Z..H`[Am*r;bC*2!aM`r075-G.h%T%gb(o=o%QMir8I,:A5;)=.;lq"Le7,I#\;c#@[hf6S14(qttKLs*BL:pqn;FIZ=p4=o9
%"^T1n[99-n7,qme-`@G:6JU[U+]m??a?)s+ZbkZ8aGKt)j[gYUU+#DCN5UB%N*2c?feE+8$;V@D/-oE/6j!kMPcAg;Ig`DEpI:(Z
%==<=a9501S96$<^OK:nr=+5f9]7P2O6$oc,hIS'@/BYhNpeTX&mqH0DdCtbt&f&647PlItdm*&4$t.83%PNYX6RUk&*b-)eG$2:f
%\nE@R4eST\5I?)`"D`Wr+9nenig.5VnWrA5r5(-!Ut;.i]+mA-12NQ/XcE-i-V;Iqf:@qESB0mUA`6WA;AJVA7,<'b/%nN@Ds^kb
%6:&BW]Q0uZ=EhEj]sC?Veq4#g.dP_?g0qNoR,R)"SX+B!mSXtH?CJ97f8[p6E+E4&l)q5AK5M!3UNucMj)gZ!br+LQ_jYJaq`#N7
%n>ODD7*$g?[5KG'ckVGZ(G29D>h7oQ71&i_VI8PZ,CTjPMpGkf-o_lNZBuGlRtrC2\t8gra-L8%X3**KK5QP<O$p]!d#3%2l8Z2V
%Y/JMO%3_DjZV1Ts\SrFULt^'&'YFbCAdU2Q%F5Vc``/))QPb_ZlsciJ,;J*`5=YWr&7kO2.f:t!FDNZa3FU-]Jo_YKra@O<HNG%_
%]\)a>]LsO;JHXcM'R\\'.q."dGZ#dk"[49fCrCu7+q@"*iAM.Z3DAL1)DJK_gu\=:)gVg<2N7%UDs%Rk.D.Vm[)g5!2(+p&njY*/
%V=r`QIX9A;NARh#%,*V3JYDM-.Df)Z3b(C1EZMm1EMR#t%`K-"i6/`K0t]94+%>200gMIT!bo=;p<+.I,5uc5"(dV+M0P0mirk5b
%&ktI)/AJ,S9q%g%$"Em_HiQIEiStGu[Oj&m0[*i6VA;+Xq%q[92u$c'7(c_$-k(19iaR1)h6Lq@YQnIfLLSiQilESATj5XZLtPD1
%*qM)3m7tX&&^TUQ.L%7'5n?"XfOVs*]2@\YaR0I>]C/$eBR2@IPFu,cZ(51mXZbm6j:b5m*9Oe?WI1@L2KOF`*T!>3?9EUSFLX1M
%$)<(+nr%L[0;^m[qA1ncb!H'H'TZ&h=Aa$sl\32hnJu'!60X#*q36tD;>d`HpOtmIq2tG$DOka16r$l))[;&$[?qE_2F6<sYqSh&
%+GdPI%:(uGH!Zlp-VE'#7^j'#X*g!""QN!:E/GQGYBmpThNo\%3QchCf^ip2k--6)='u^e3YC\1fo%noW,!2j.""gD\I\/5;'N_N
%p(>lK__<SZhT7_l_B_Jta1a($)16><.jIYX:/7H&rZInd/L2f'/f6%an4A+lq&F;M7V,4;;\iTb`D*6XA]fMtR3X?2++FO9/,*?>
%Wp*1k9&BPV3NihDQn?$T%b#tZVP:a%$(I1X8"3Z$]`#rD&Kg7_o5d&T@)3552*YHl2OVN*nB7W\_koT"SWkua)Pk#C.TreYD:*8"
%6k$CClQBHKISj@eD..]3@mA@56O\(LR[l^h)A6-DYf-(-`LYY1hSV;f@#ZHHXW`KGR;nRH_l]Cnf^<_jAiFbZ4I]/,]QMq*:3jK)
%dMo`/EE6^@?L1jTh5cDY,:];pnjs[?@2c*Zh>p-R2THS+25Q&hYi<P/TWD\3@nT#kGKghejXWK&GBU#<[<6Y>50qQ>m-1,)8eO^6
%L[Qi.ZPt"X9kY_?hkJCYoK&iU;0fg#cm0Ec)acQKF"&qX#BNDg*]Uo"j2J0g!6*BP6##k=Qhr,!i'i4O]s?EP]@K5C8dq:$COV+^
%/#KI=ej:7PaLNPi2*qse"OF(QMF:2dV6c;4,4"9,OF%q?OY/o`8T^InGV+gP7OVd(.pWpsV@geXa3ij]7R>/V#[NV7Tn9lr)<%k2
%(\kPe&K95YUQX(<atSdD18c?2SAI(k@nDkF*XbU)HK;i*GoV52lKj(Y:o(fqkWFV>A^^A[N@g]Sh"f%+0,1dW3Zk&Z/dCQg6qJ]h
%\-*$^'J@&871UZ$S_%'-JqSlF>3:IuobW9JP<'k\N++g/&YfXhFs%5]9WC^Re.5\Y8k1-`Yq$8,DRJLFlp1Co;dUf7DN^Hu1%,\t
%.oEq:I)Is)W=ph*7m\)Nd5S[r9mqWCSq^/E)UD0N.".7T#&$Sr;\GP?Z/l*$:(XQ?L3N'O7$Rq<.n5TL0?KK1S/<Q()d*%DEjEem
%PIs`sWUZUg?.JuWaedcQaWDu`GNk[Zp$]ud;<jb6T.(\GoM>%Pi(NjEmu`r=i:siP(,bC`EUg?YI4'E,]MX?e\0Q2p65_i4s2enh
%d!3Eo0&;c=32)n3]ttHbZO"=<oMe-ja.=u=CseV*:%#&5.5>Pr^D)LXi6Fso3'.]cO47CU8Lq/:(ZMSaB`,daSV-eiGrn`2cU](B
%]O?,;\;YbcU#C00k-@C3g<q"0\h&-;H`lSt_FR)N30GAnf+K!9d,](;?E\piO1Quhk83e;rKb)NKX(<Ke8Ye+SD"h8F3,:r=>\HC
%;pqJUbEA#M0?$`/EJJlo`=j7PVFgM.Ik`T*3&&=`#>XEtjA]uO:<A43Gq+Vj(FCf90IaLZq+-$*<-2TDi&O";0#QsGm,r7[hJ/J#
%?h.^t3_[R!fnUFGq4[^--[$eW#t=.$jPsF2c6GGA$uCA<9eYqXj;MCV:?p%kRgdcF7I&.Y9"ljD\hg%:6KnO5%aBn:gpF8LPdt?O
%9PPZ-,*&TTRgo7BR.c];BubrkBKVZ6I/IKl4O_)c,<`\EK?&7V1!@[AG+%C%d\WJ,[(M3S"bE2!g!VKa8j:Df6A7o2)E44Uq6mr`
%(.H"Z0`3i=So*_HG?G10)H[2h:WYJMi,Q+#;B6ik\L*9S6ACjSiGm(N'PnB)d=E_e;*/TUK%C5G03qbt65KSbdA;7G/!'pE$P0Eo
%L)4/ql$<_e(MFFN]X_XZW!Y0bMcV5#*$rP/,-O='?Gg""@Ss>#m0H=+@9Pq6f2;@"!e2XU_HHs\L4\c>7NJp:L@CK]'?]s0i^VSK
%Z!>q&`)"EoTWgRn$SeJ[ap.$=2MtQHe#B#X..G?P>8UdZ=`MJriNe8<!Zt1a@X)t!jn]m&l&q=#\C)D7rCP@H6Sce&$LW3%",/=d
%-ne7!4qC_glIg.<3mu=45?(HiPIFd'$C9#%K[0u2%Sg[mk<\%KJ^;4pD'F9tK%2X5qCl@>r<A1m]_MeQ/ql`.g%_k`!;ECcW44'*
%2fO$e9$6Jf]\qW*_E4rk=RmWAY@M,KgsiM?-Y[@85W>2=@U@TFR,JCX"0XEgV^28hY*1`X..lUT"*`!FTa^ljg`%TS`ujTYY*]7#
%n1%eh7uOu(.EQ&PgsGf*SPbgo8mQ.Ckek/DGF8U1U$2#X,o^MaBe<pQ_c0dQZ5CO,<EYbiq,+^=>#Z9g]X!qKHd<rhAMH"5@J9P\
%+Sj7.L]>CD:CR2<=Z;lhq?ThF:(2OZ3c_6f9alHR=d3jp`>CIYILjTla*&p1*d!ba#,"]*bA\,&3P[-T2h;BiaiBMD7.#(6DOAk3
%P2^Eo0Ja'%D*H`/9n8'fBt.SD4u^T=RfH<]DK3/mi,JA3isjIkO]rfDQmNBpQ]=#8-6I/`3\fLLQ\8e:N].!_!l)p'K@^_Wp2mrU
%Y:c/"jESQVIM-fADjW9q$VKZ.K<k((icr?tga,l;Dc$"5>eGqo%c`qnG_8%Nf4_J[-LfJrS;oO%j,(t-nKpLsPk1Sb^u5[-8XBG_
%bI=IW;r3p&oY<fgD)(Gp#+P\ZCJJlb@2cjlPE.!ajrikCi%V!t#A0;_c,-t_#98u>LuBck32ePZ.1S=2_bJ3g^^7<6PJVk1-`I2+
%*H7AmEr7m=E/KNh^r_l+JE&#V:Gs54nA'.Z2&gK9YcI(*"roHaa"%WZJM]<D!tLb8fI%b[=Ad2@dZFYYlFU=+**2PmI#j!)]KAGF
%$oho0IaDZA$02.o52`)^G]n)B6&^Y1G8YAPNI4=&1uR:(?;_b^!][T?\1liG`(5fuUT(D.1ZBtfgF\IGWNtU<%,"9cnOs`L$f$Wl
%L<'mP;AO._&$hBO$U:&b7)KhSB2?[uE/GAkQt<+t99jmJl%XRCXe93Q#_"#"'8tKk=8!pkc?cpXp0mP5?GK[[NTASK@J'X)l[k91
%6Y?9W;3FE+8I`Ef&Ikd_=cc14gr;Z;1f<1&lO=&e]J1#73A0VQ+GUe6S&f`],a"Nt?Gh4W]P20iO.:0^@G(aO8<Q!>\"]V:aiB9<
%=Xn`p9Z!smB<(%%qbbj3aV]PT*M<_7f7A\cEK+al0BK5Qo!uV>Afp<5UW"'PABB/];R%hO=PQ>X45"J=_oY8?5U/jdp#\[!kbJfG
%!GF&:fe`h*PU"Yuj]a]Optp*tSc:;-5B<;C^EaR9'(IL]UO5p@Q?%SU`l4[_AKDi*]I2I,'0/YYb#1N4e?4-r_Gl@t^(/F+dcM^b
%:aKg$/@Q4#p9p)g(#WN1:@,<9&EX=+[#CJ:Bd%(i-27N?9ItfWE<'K7cnAb0j#7/dp]=&/IL-JL?.*NIn63]!,E_\ZW"GnI*>qbp
%$74[JH+%h(7*I><C)jsN.IWH]=*ccl`j%nGfLH#5&+25pdQS;b^fbn>q:EaP<Dg<49FB;lj2*e$YOGGfV'f<=:t/nrkMnZ=Fg3?E
%<aEQU(H_OlN\Hpt.n:_F>U,SIq2Le?/sPjt6JpnD``Ft.eG%s\Rm:sB15:MJ8;Fb242@><m>@iq`.pF5Bd1ku@s$Z:/JJCjU^]`%
%pBk!@^3!0s5.jfK>a$r"LAQR5_0]UP`^r4cJbUG!!g[e%<d:3@B[;r_josa.DDUg6&M&OoJ^PR)7!A:$ETULnrt=cQ_m9Hs%16B+
%.V+8)E[Y0=b=_[Fek4@7'eNR7V-+O(&!&=0aquIqG]Q0/o'^%1B.D2#Kcb;gI<KW'/afc:$ZR;*[bRDGfQ9ZK3r\J6loQ]^pk0(`
%a-A4jo`g*YP4I&h&>tF$m(p+Nnn\$',n\_KlS0/rGi&-K'9G/mG*5<s_5A+tWM_]r+Ci>Za'O$2AP2BU/6s$Jq#P8NLnoSk"qA3?
%r#i8`>G;H<>MRCd"bD.LNQhl=H&GLb=?"(_1[%-H%GWr-W^NKtH>6pP7L*jYN/*c(T=X5LkpoM*/!:ha\<`iIcJnc&R3nJPA7^sT
%9&uL8?KI'I__o+"1(>W1CaDd3./dAO^]JdaABQ,X_M"+g![k0cH!bC2+60L2Xq>ijN#a?\*'Q_\mrN!:9,W%b@-CY5b:j\nX\)2L
%YCK*FCNs;/"<+fZ.'3RH>WGkt^B!FLs)Kd:LN?dTg%%d>)_%CLU>Yj500\=c&0Y)TOlslp(PI=[[M/N.1*4@6N?8DB\7"?'a>L,&
%1e3L-qMo"q.=]<mgM!euPJWEFjC+HRegVl`b"H2P.e4\?WspdA-`"?]S?rZMT);khBY;6\<g)cVeeB@g9cBga>ia"K"f$e9>\PR.
%eWgT`/mQnY%c!<lr(#1OC;qMSl6J/qY`14-$MFd)6mB^P@)aHI'XD[\`;3gZ7)mIgVMRZ#YKY4X"=lKP_2:fn@DM#+9G._sZ!bQ/
%.:V.q=tt8ZP9^;^-J.<Z9Wh$jQiu`Z@9g$GOuTjk$<@R^pV_7(g?%39UIo*]Q%`+Pe7#r#5[G)a"=*9#,S4s2,s*G>:n?t0_N%4c
%Ht?U90tF/8YiX$WNknNe8\pAM>2bCOB`pjl-@m,`/_`!O(2T;j0aXT(m'pGs'MBZ,AC*`%`XNW&d5n[FOso.);6XP,oQg)+,FV.=
%rljbsU*?pREb0"+jM-r51&QSg>de/;HV*\*Y[dI/Vs@K;j0MKW0P&U`-sah#.lV!LOd>@$";[>fg/n2H@<'Bm/Rcc^RUVNuPerm2
%Ik%j<]%5j"DX+W;bIHJscmo@/B$-kF_;u9>;%G\r'!\(o+tjP1JO^D>,Icu`,+JY%X:=]MLW/7Ba)rZjn\kqS:6D(Z1]E\u951kf
%b"Y5lpa()%fAqcH"c_jsm-/sET4R2t`*C5o\pX02FVXE8*3>?]NGbn<N:F2IK^2Q)eK?K+'3?U+]I;daTV17Z9^.Os[&UZ$(7N<f
%;Eo4NIO^A2T@oN*#QA%Y]'0E9b"_h7S4)>)ih%Xs4c-CEjGhj$9C=auAJGpAShAnri0UC5f0U+:Y/5uIj8JbGk]1U!,jc]g:6'o]
%+*K8S?9K`9'#JG-?$7FMHb$(cgQ=A0@kh6F/_n3RMLS:_4&&-V_E7:TiPK/D)Q5,gLptYXNNi-*Ad((fA5G9)!WP:>'qI"4o;ADC
%Q;Lfm64'j0,Dn-tj]35M9gnOA3%)uYGR&Mhk=MR%rt,2#^0dNVrf'JfgFR&p(IbbRT3fO4TLqp*(>EZ@6R#-Z\!kf2bZ?-bn_I;b
%8sB!@7Ga2#9('q?>qD5(.ZBQ-e`,S+C:9VQ:=o/,\4VU<;It]2>ZV&LpRj&KOph.JnI(#g1qmTm"[[7g=gQT)=q["aLkpnXOBb:l
%OA=J`rTtE7),Ss_=L\?`;&g;6aMf3n\BIFFSW6u))`_;XFM?`BKj8$,aU$$3SR[NDH\`)g6SBg^Os[6H>Ude9bp1O[)=]*N^/JVg
%-fIF3hQlY9JQrs+A:tK3:fehcPQO5WF#$(V#Ie)Ao!1pjVp%W5gui"Rbfr'i$8t5I-ZYDs`^[ME5WfjjY+Cjq)nECZM(5eCe&>d_
%:Wc0%QFLVp5U2b7JW6$P:Ac;M\WUcM2F>k,@8mCg646QL-5aQg0)3Nr$>`\kA8IJ\;`<W"-2C-:&Y9i\\=ee?cl_Tu)7`LCnUb<@
%Kjdk;M4iqDgVRNF5#c&E-B."nQ#RBSNLMQ?E%Z1uF>6U4;6D<(jJ#Ok;:`K[.dC2kMn>t>U.+._U(rqB81Mf!'BRW+h'e0q']jC;
%8O:Sc%+C:^5sa2tmNMg'BpsU3Js[u*H'q/CJ,AI=4Dc^EG]It!+C_hf,S[$d7n"1#6o[KX68!Z7;7\UE$VbA.Ah:lBgbkY/OR&h7
%74ATZ20n:pb*7TbCdR`G!Xmt<;<X?L#k-kF?EmA4GE7r\84*EMhiq7l&Da%q6C>.a-%6.hpgTYG,2o7E>Sa/_G;C.pZ>Er/$`1EY
%hfN^B4XkFb$I[ae"VN<),mEkY?,nVBbP7uk7U%,]KLUZlbG')]2'\eCha*Tm:mCBea@I^OG8Fj:<7'\OPUSC$_GBu9ObBHVGr[5q
%)0fIqTeNZpaY+fQ0i$ATL-cJq?+:;?a%fNM1$M`*N._6M1Ri@qRrHK?)X0DVkB:RX\P<c6f!dC=l;E+i];a9IN$46:1TIIn7&dK%
%i6)shR<!<"PHm_T=m1+>b2VfKki1DJ99&\?pZtJ^"FAW;gn9RZQR^2)8pGl)pU\5rZgWj*/pkJDb2V4_rH5aOUf<Z;^?]"sUr4W(
%:bjZl7S7gBIFO53dn+1Ll)2-%V%O]\gE>6Xc,dCTote`JePQ'U`XBMs)ObKAPt,MP2!H@QOqQNN>ojb^fOiBX3_6#HjZ[IHLWdfj
%^c,HgQO6t0La)sYfSdpL[=##4ru+sn1@U\m1qnp\iO_!9&\)l-To;?[GoW9OBtg5A7?H/U+>dc%P+.'\QhcXLXW^]1Wj?KKoq9KA
%331JTc_7;c1^#aS;8/C"cU]?=15J>9]>cdBEO4oDCFEK!_hF/[-n-h*na8r-V"B'#2(rFnP<37cBH`h+,Mgu,$nc;CBW%#V]4dlE
%K0U8C,6%o)_+it?_X'FV7/H($MW46oeEFd;C0iN5D'RkgSX3]t"oG#Lm6R'BgiSn@E@JL)X6=LI8!l^f.Kl"MUD\AE.2F8(!ImAP
%%C2.OcV>;")cNRM2P>Ua+2MF,1,sb-U.?IlFUZ1o&kd-qPTH_0XGOsV4ruH\"ZEi$$@\Hp[^L-$G$gmZ@RmN1AP-W4"'bkN3#$pk
%.DEBt=PUn`W5P1"/n.?=MpK/8TZKF0T]@]1n5G@'i67dJ*N@JYaBm"$b>X,hB!W\_[hM#%CA<4K0[ql>ZBEXRp)MaT&8Hb":ad=h
%2K4V[L"Ecg1*Rd^?WCk%X4c\fL!+;;]:&[5O2sU,$PqWm$1(4<Lp/$]$Fl6(c9T9'+lLO,QnS[Ihgm%k'091todq]Z=GK-U1_f;+
%"0UTg%@UB5]J"HHo685IBe5JiY=2[>*2(*-:FLJG7)Vf1&`*a=O)0M*#m4$[4R3e>_q?\hU0=fl4B&%-d.N84\KW#_C\YbA/17.h
%VbnQ,5/_8'-am+IKld5QR0Nm62it56[Wh)f%`M66jI'8*S0+nE)^r4[$(?h:TLA\g0.DSO\NG0`9R(9kM'IHuF@G^DAlmj/[jaV`
%h*]QYkUN`$W%Kn5,&K,qm*7`/[W!+-)Fj:qi4Fb6FqQH4N9@kq,V,l/>=1C]"GumpClp5^Jum(+b!7q3QZZ/_Xgn<'*Dp0@%*$>'
%?p4Q"hm+e_NI+7Mf8IU_nO:MuilZC-I!<Fl;(,t#nQ'#0L`<C"JJ^pamKa!9j3mi,U8F(;"7O%9c4u`npjEGr?t?N-dLJs`_Q<.p
%NM+YgFYRS)%Ss7d]`r=3aT%Q#4`m7S7D.BpU8c1(*t4,L\Y:..=O(t"E1$>Mr54NT\h3B6Hs&8WaK@)_P=jNkQZZ0r5\=\SUaaA0
%iB*]o\AjF1?"Hr%6oi-AbGbc#^g@kH9-ZFrpiJJ.n[D?am?&j>^i4g%(e1#[^lR+NlLMqA'+[CH_\cs1n]b)Hp>mG7681Uhls+$n
%K'0J69I&kYLVXcZPMU;^iA##EH:0\WPKg#P8FUa#)LU,ORNIjTq3sjf?g%XJPo9C'3^Ib!JEJ'g"YJkq#XF:/.*Xj8`E'e6mS!^s
%[:af=Ce%gb@Xq1r2[O)n!2@0oP/Y4XAotEt@!0%,MZJt$@EDtD6B\:J`IJpLERA5\OqP.'b[O*X-&Vdr^T5>8.^Qr/5G$rr2h-B<
%)nuQ+nb4Tf$i.7G2#/L8P[\!1r_l"ih=Kh*L";L&OtYh!$ZGEjDGp6hW@?L.WNp%f^s9p=d#u)X*GM#`;gSQ5Y-;FiUmdI[OC+=-
%$h0[3-$oYs)8`QM!oJf?ZkkE#8da\^MDUl%ANIb5MKE,m*M54Nk(4V1X<+p_J99@>=*)34a/N`)fJ3dq[hkEdqg1s/!`O+ECi1mK
%Bs-dt\\4(SMY9Ac;/.cBLSBsF^sbVlYns'#+@g<&i2n\i8aQ]\hFU0^_Hqaj(aII8Y[nMfDD0Yp[-r`\HN?PM4+>"P?lC(lOP(#_
%WLS(8(SHteSM1jV$":q\82V]7+hoQc([t(8a]uUhpi0Co(O242bQWA(pQcUQ3Q#IOQru=Qblp0@HOt7>JSFmkVqbO]'+qEL1)K:F
%V?>&d"WQj7BJ)hEa]p6!,g6Gi:/itbn2RnX\U_kTU:Gdr$;0H4Sa]f4R1%@f-$-mtA?V-X6MboJ>f\P?bQX4<GKOR\!ZJ?$`EYZ,
%F%YQrWgUJJF,fP/-$(6so-JI/;e0"7(AO2tP-ohn]\Ct?!"nbsB4`a2>9=Z`"o*RFhgB#fn2S@L[=J(#m">OX_04:([bP!+B(VLr
%J2fr*q52.uW[Senq.6P1J=j\CEauqO5/NJf^is#tN<LA";DK#4lt,7#klShD+Z1&1T!slfO<k\.3rYI^"f^gn)b+pr+(lNPE.3X#
%iFqXmLRD&#9KWG3;f\a&EWKk?,SDmX)j(@K=?$fMS0;aCN$D[@.A'^-'6/aX."WR\e,(ns(Brg4m$Ct\r&Da=LK4.NQm5,\1@aK=
%:NIY)YP>n4,:st.p`rcj'1s=%;ReXs!Nh(5a3')PGBo0E`&_Gt)N'>lnMP\\>0mD$b1$T+'\_P9*q[\"eDjL5ZRJF5\Hd-Y.1QJf
%o'14k=iZ/Z$5F>4/Z"l4>g*dR7H(N2K<6MDM3I4L4Ai!:I"T?[>[r,T0CmpX+a`N7O_[\TZIfls-(EWq>2lfsd'1X&=4[.4mXE6A
%bSh)BTBrHqcgL?l>O7+p]GIH*OdJASGK1a<3.%tbP`!sq!psSlBtu\EFU#&d(;@=7Zj#i:o&1K+[OGlJO:?mQ0k!\$IbIh3*^@G]
%NUkOecl)bWXN>cU;(6ens!^$J@6AV0Q^!tJ,VgY,NKrZP/bT?q+0rYHqgpENI*6rS&LLYS00!Fl;s4TE0"p$V*3id*lO+nA]$M14
%7G\\u*Hi`qIRMUTiE81qA?V5[;Yo*m5=iPle.6@-5uK&C_Ng's]p&gjUn?qP//)_nb09aC2heXNK#ZeHSBqim-JnE@'4b-ap=g(O
%Up;M;Fa&1.b)9<ZZF<0CHB4>.M=XYWM=XYWcE9:%H\q?>L@QH9F+/XA<'Mp14AJgoS?g$%!j>9eaF>8P_,gOJEmr`;nUVjl_09=9
%St%n5$`jku=(;,-;e#])=^q@-hN[^)hbRCioGT1EkAQh&3r^D6@WDpPEYH43q^<N#`;:raa7]kQO0\Km\'4`J,$Vd]i;L=:;Vk2,
%V4nIq9[G<[51_)uRJ0WkcEABb*%r_EE6'sI\n0_/Z+m$Oq]U+nP^#F2#0sBa+2Z#*$a_!b2b/_uR3kH;Vp,#]:]2%FGTRj-aSVs2
%`;?O>`;@L`OmtW"4sg=Kn"WdjadpjDl7MS%1@:i$i/jP#cZt!gd=/>fjN=hsA@.sdZ&JI9/MSRNXM(LLT/Gklpe0Ed-+m-"8/X8Q
%%OoT`h'"*);KkYl47<ZBeaqXZ.Z0c?f6MQ!'Y$B*PO*9Xf#cbu,H'nQZbDNL@'MA\gg;8?m)lh+`Ie!!.*I:tPO`2N%hK!j,@E:p
%%hU0.pgrkhY?]Z7m6)nFk'i)`G7VmPT.3LhT.4oBKuOUd!YsHPm;Q1iIN*"3I'5g.R&TX_;q(rDhh@1HVoH5MqC*42UST>!Y$>,U
%?4?f67kTRQQabqeQ$sA9NN&dCri*1krqX5Vq<,MbP(2^R;Y&/k2J%%17@mT3"I\X`:e"<5qGF>#OqakPiGPp19`:n#GXHN:cg*-Y
%r_ufGBV#4,bkt]\a(=C/PrZ`Kj*5HmL`O3'PE_K-V[g(d!m`)GU>JDU4&Uq1Od<5qr!q%IifkNu]5_(fIYU""K*(Wh0k0@b3V0/+
%'(`$D'(ZpO6cT%#7^cZ3IV>6".Sr?EanGZgoqOSoN`.'HhAuNuXNA%@;(9(D7f?HlbG`2.%TDZ=>&-b/=bG"u^XO-!^+4>\PX+ic
%OHOG:),`(>FbZ-do?JI]4mrch,4>lL0(S#3WUr989aZs)8LJqeS=@qcchg'*JYg)B;LaQ#$<PBP\iKAKF_*Ju8U3&\4%PMP\n0lF
%OE;mib/BoY\ZEEtHW!JqkPcR5cU6d;Mdn\M']MQ6'P3+KCdoJ%!"D_K<mks5P@U1WaV/:HQ[F6qUa$[VI1\:A"coUE:+./X"/T*o
%J<()=93`-`M0(9b2;+^#S-W\n:9*AI8#G>t0UO)Bh[cP`OhMWmi(Y#BYTb2r<n])JCJsuk'GU@5(R-,u<rPI0C/nllZUGM8FC@_Q
%Q7ZRlo/F/?BeB,c8kllVJ3su*jg(W/K2XU2(.(bEW9i0%0b0"@$]ul6Y)gOV\3MN!cGS;%?%b)/=T#O.\E.Km^<lXpDHqPZBma9c
%=PE;`bDWm>U*fIXj@WqlYR=;R>j7+gEApUn&nYk1i7N`2+.Dgu"4$61m<oKa"So\#Kbl.(>6^D_P\\W6WA>.06D:n@nKV2g0)p'=
%AHPe3;8Oh\C=4Hm3H=RE=/7M-)X`ZM)r^U24'le.@5SKd<]>&-#iRN9[=hK9'?PIoX#j'_qq03uAKY&d4C3e64(nG2Ba?>7B_W3=
%\ho)EGpmMk%4+<e,0DR!d\S+JrtO?[Of]'9K`Z@DObbZ?n::g%_2ihu$\+u<6HJe"]L&uPr[U+\*Xa`tQs?H/b/6cuC?O@<"VW.)
%Ir2GbYGb$6`>+V._3SWT6E*__Y%0a-T=B!RqjoIDiP(b&=U;9KbRd@`W-kl-KknVqYqM88A=@UK#YPAUbL05gTqZq@%n[j^o_aPd
%P;9=U6o=GW@_'.=+AX?aWE;st?Ts4]nWRchdS"iL#9kLU0+Gnk]j*dad8'd]Bi:-H%Y]V;Gk]/oK@b/"FD]*cbr/8$Bd5qZH11;:
%3D[W6<aO>)bpX=44/]NE:tiIpYc)),_%d._NXc2I,[kFU@>b=HJX9nB;B?Xi$-A=$AfcF0c4\7hq:ZC=D(c[J,q7B[&;F)Q`lT$P
%!l9\?4;*Q>U%g&u83;CI=+ipD7#+Vb7fr[ef_lG=_1M-[a>E/@O:rA4E^cc3s!8`WJuZj\4D6G"VFs:tONl\!QRb?a[2h)Ag4)NV
%`WpgDF]HiMMaN+*H55J!>c!FD7#]S=3Sm2J5e8pS;Po!j3!U_G)1P2Vk9R%S^mB74ls!$_@3Y27q]XjDS4$qJn&VGXU,#8XoR&j?
%K$.BTk^jG@M>_fnK*S>?RID>2r`soGjN-QjNWd5a@A]1+bG0fG1)he?7`SI5"]))5Im$J,r#KYigP%Kc="Hi3G>78']Q=M<;paTt
%rVuE\2S6EY3g84o!r!_\YWXG2rhX8s_!(b%h=Cda%/7I?r;I@B"Fii$b$Cr3SK6(?PS,9><0.Mr0"Q/<WbWK3,;D(Bg;gPn$^f)2
%G+D0%P:OAn!8IL8kKL0&"61p"2gC=Xa%=-a,EZS>/crP_5ji^2cO$I#!a+\tbp/6uk:Qid#qlmQTlbe&@k&aSnjJ..?uF+ert=-$
%IO9>#@+Tqp/AoPnX9M-OXB<3a""Ct/?@8p]f!?e1X2sa1<Vqh$3[X\b"iK97KkmIt9+lMncNKJg>iK9?M>VTlBp*`*@H*Ji7tYa`
%ABRdL<Ra?8.ZW6@.CIm5+Pb]D/cYZq#3c$mP.N@oh8M[!fh2h6m90jtEm3?4?bA?h,l,$REGkb3mK4'kDiWbijB>QMrK&W-#,OOP
%^LSgkr/TVQ5$P\P,6Mpf2]M)(+u$G/+BK;IY/^u"R6^2X<\+p>egQ&M#psTOG_M[MTb\:EAVDOnc7S>plOK#"/O+cQK*C0b\Z3VX
%VLd*6&/,6U6sBgLKRBLM(d.lf4-na'iPl48QtS3_Y9UV48S/=K$N7\@rG&>;G4%a,iT?@IC*`_o;ME-nCEjX$D_1rMUA?[^_IE'=
%_mYr$GTuJlr&TWtDl6O,5;LLRJ2[A9l2hs9oR3tJ12FPf!a5,7eSTqF7/Ntl5`BQ+eHJe@j/NJ`:$$]O,r4L\f9(=.-+G!t>mL='
%.J8a@oos>VY.E'7E7Nd:j$<P+!)=]1H:8*ZOcT3T]t!uqg+?W*re-jZZhF/!.MAqr%fRI+I2(i(WXDAG-.u97LgR<)9emhtFa#"B
%lEZunYIZudcmIUld4Mp$fmT,m9fLab<!bW%n%*@dGPeo9!j(IpfNf<7luh[,m]GQ--5>p[!(Hq8].SV:ia!AARb99<]^.N\$8lsl
%)8D:SF2Z8),Or&YMWn]=85['W\(tZL6fW#"+A#gegL\E/]^<#rol8^i3(CFF!Y@/<h0+A!o!n(-]S[:EECBl%]OnkE!kITAgVq7k
%Rp=^W>p;jY]Db=5mD]cZgEeV6"Y&K-NWJ[Y/!K7f_3/7ba4i3O+H=Wt'Q>a9hTl9C1Z!9oPE&\UF5rKONnDidbNE^Yi4T5IgFeU'
%DnD%JgMSF:[p:1i_VfHJN/dbFmBTj:CYs;daQBJ2>ls&+gMPF@HJ,c5+sYrf*=942?-7&slkW:cIbU^OY2uIJ2FXnsoRgFP\M2b?
%\D#uOlV%9@!/imlgMI`4j88XhQ^^]VY41qhb<;iEgFeRld1<_B2Nep7ib]JSj":+E(C6'I^[2*Eo=XGlPGm2YgEgmZgTDd[[Mqj'
%D3p'h4n5rg,k^c;b<Cl0gLWT>]^5c/%]=@c`7%"j]5lE>gFi6_'Q:Ud$H1]%K>2CL>>s6pHlI2^^5Y2;:QRh^l`tBtV%O&$-H<Ml
%J<t4Aoe!<i/Gm$TM(j$_I'Nk,MI&?O.SVu@>/^9lY#!cV,$AZ)hhu#?%\K[jHl@,]5)k<SlI4t"?=-1J:?]l7kc6mmb4e^a%`kmG
%4(+!IkYIrn^puidj3oDH5!>K,$-r<&)Q$3#7NFM/\R2XbKsspq*cIe`qAU[kH?&g\,nT2BLi9'_V*NONJ+Wr]//\]@D'+f]l.8F*
%H%ktGg2<nHXW(6/V0*eL1A<8YKEC[XeA:o:HE7<t)C<H52"icKi?pS;Sjp7/N+[')UR]OH?:JK\e93%M(a:Ad_-TU?JD&-0+c#nL
%lGBP3UKa8U@J!e3qAOT2"as\c90md2]bL+4nluOuSf*iG4F)[HY^s%o=bA,oTc2fZ]X>9,Gb9@fnp^HsnB[$Y5bCKkD9kj5=jQVD
%oEh*nl#5M3_e<hpY(WVj+%BIu7&KK[e-l8grVAJ"haOkr'=W#(gOV9'3t=N"ga_F"Tb/1=MG6;Q8*mfU>JMk7WBQC>99s?X;tg=7
%ANA_#;3"jeOro[aS80<%%GLuQUf*d3BWg*<K%`\cP4FF79oTM-C"dkUN9O_C5et[_r9(lLp'@?b((bJ35VKXC)),dR0'ML,&;HrB
%1_3HYn$(ZY$Jl41>uB@"dR(etJBTE5H,a&/&.,@&CFP$.&_inV+mrg.DMM4<IJ.+o.j,lu#>-Zt12G*E=sU-A61u4C<+PfneGULu
%.d9F[g+HnY`_lu71E-m;>;Z5.JWth)MTANc?YUj*aoRZK7i@Y],7gJZ8)\gu`4\L*Vq2OZU$2K\=D:ca-k8+R]UVtPhq%t-i#n>m
%>J*)&>=C\<(u&3)52<o,=`!keI$:7u#8,!A:^&c+1*^O>r]<-ii>U$5agb6cDi"`%YAj&P]edSb_,>>*VHH:=i2)oGj&$$\BFRH`
%GC1EV$"/F/[hOtXfglp]h3Osh6S<=B%o@Yi@*le34A.MY*iB9#aMg0ZhGJ8m"?7^[`MIbV]UY%%E>bo"CC8fW[uJ%2Ihu<^PoZS/
%j[diPc4RZ^jTomR6XD#^fren*X_6a0?i([cN87$=kq!V'V(V:&/J;NW+1#^g+#<ft_5iHr8Xg%uFo&HA2r]Id*<h#.=TE_OOfKl(
%+%uM6&O]H*,1jOVo6,ng=NPHhgnb3NG-6D=2*I[0'SE=%64DboC.abf1O*f3[C0-R4g$cjib2BC/9N1KW`,Z;r*m9`<#oS*48jGT
%4Ag;#"\J)s$/I"c*n&i^.(q3W<pd24aThiL,DFH%`)\q\/Jb+]5fDG7jm!/jc"Qr=b\djNi/=%/W&]`o9R,5_kHg)0.&cp7m%-Wi
%=%eHMS[siFf^26BI(6\q9:bgOO#oU8BW1BG]0pKsJDmal!m'$Xmc!">W)cX#oPb%U?TVMAki(C,8"b+:2oak-i"b%$$ucUCAYh;/
%Mn\0\Ed>Q#Nlkcu&VFlM0'o^%::J[#&Nndbf*#W6F9%f9l*R=ppD7Ns8\bhBn$5k`dN"$k-[h`HT9h\,]NFd0<uLdSJ<qO_O$;t3
%BkVK.pW<bf_]8"2^,f`t'_o1n@d<"1Qmf6I66CCoHsEt8&`40ON3E&Wo?1QOLqlVQ8/r%#P@4AXb`ib3EGs&IV9C@@cn=.pbe?`0
%i2Ye2mS<181rb,.\Mn+*]UZ/XC)/%ZFe*>$^WVlMEH69=6kHr^/u281X@SD.V%n?Y89Job%q_+$B=bT3b<IYOcdM-!D9FP:g^17h
%r7h%H?%&a;hqf3I/XU\>f$7^hHM5_#*QZao4$Cd612Nm0+J:>E-F4P(eHNpb=h4pMIGj0@`([dKVbW/LK0/D6<<(A];T.:#B*b-f
%3M0G+=>X%;H^^@G%<:Rs%5s%oqssfU/BJpfJIHPO<sSK>=;]-j5i/::8tmt[E52'd$+)2))o#5^ZgI>Z4;JSf'3-od):6Ep/R!8;
%WBT`$<\u?/S_R@JdB.pomQd`9R6H6"0#=57$"@>Q&QRuXjmIW1BfF!tk2jm^@>7bQEi0W7&XZ69Id.<ET'BRFdI#cAZIourPVrL4
%^rkqZ41R;IORI6P\HDB[8*8mX9oX(@k2_QYMABT@EX0D<jgN:d,>F7O]9>=<eBO*^:@:@u;l"cNf;1(BL4:;05_e&AeB?Y[1[W'&
%4VUgJG9W!U2q?(l#c$V;&J$O=FsF!S">(Ah_md4!o+QcAVBR*X#5*!afJU1/kX:BE.[?PCJ14S*B^.orE6Sa1@s#[Bq)J0Udb7/b
%q<e9FWU?_/b%H63nOj1B5e#rTW)%c2_jqbQ+#*YJNu=WC1TT[@(35ra0i`,dQQXDY-@6N,Uc<'b#%#c0>kpFB&mBB2bLHG0?r@%M
%YP@I6P,Bh@ia3NT#^$MVr43/+O@nAZmUZ`Y\]+C'=Aa4BrAqbemKHICKrd.D!g#1KhX[fY\,l<[-?c(,Da=@cj9]aQ5^M@Uo=Dh'
%<.,ft,$FV<6GQS-!==G1!)iunoMo3<X5<>3PlWYC/"aoLFl2Zle;WplLf3*&-=*W9i^*Yk0>DH^Ahs[`M.G"4]UfcSqS:2,OX#%e
%cd-'"o8,;P8'-Q_/X?32A$Ss>ASS^LkUkW=[EVEN\mG+?Io&NcH/=h:/lV6*`ejoT*%NfQi?88R?NKk0'K-*kk9.r0D\gNl,AnKl
%,o4,20#m`V*PUT6@Sb_a2uG#YVqG.IPXq+5,6u)Qgj[-ga=!jqDtjYp_lm>8\MU=`.cDC4AQbU9\G%8P;3c&o9/KH,Cr=[:Si`_O
%=e1*tgmP/'M!kPP2%Of*L^%V:,%ckfWJZW2;67r;1g0fe1s;H22@gLY,0k)YSPFC=B(<t1g$V;/iXO(Kq3CV_e((K@QO/aVe1Zo`
%FZ%9aC#Y(Q%AZZDV!Fs7]J[X3l4umuLu%X&<.>?7@rZc+Z,eDR@d/[h0fY#N@cUf+TjE`mVsB</f-?-;;RsHiX<;lCe/VHn14:Zm
%YfYbuF+@OKgUm:lk$jCBkTW67c'Q.fj8SiJF:%X_5$JV'm[6^.'MG)s&BWXS?>s&XY<M<RMIjK&:RK>X0.'['!Wi`+m_PJ%09#fL
%P=:n"aS(;)nMl@'=qS!Z'u0Gl$@]YI"6:3DDt!EXlS%"f*FSBuGfL%[6KI"kHaAfIHH-9=7X*PE*?UpodX&q=0J)2tme@:142-7B
%*J/KH#OORsb"3#g41B<?]>F*p+[%]L'jMs#f*#W6["Hm]"^VqhSe2pCEm"cUHseekL5o?W)'-GpH5:50cTCoCJ40lTnWI5s-:#]&
%ElhsQ!-Qt\9>2Ri-%?`[90NoHY,%D3+I9+b0DXfN%mdh/"-?np%Nt1fE$QRW`PL^"`4G5R]]@sk,B)"ZaTk_Pfp?o1?lJZ/n+]-n
%S>P-4CS.=,`]H@L[g_ee%n'pMarTAjE5rKCoT%7TL.3nofE#uo6n\:g/:K-m;0IinVd/fGD7?V4-(ghmd*"SET52FJhXc<*9hM'.
%a+9]%60C*ILkM1^CHh_mlZ(/sGUXemf6kk0O4SbLi\`q7dq_.Jaru]a4&C>ik9XKt1LBYJ1#`QXOQkcii"R()H%;sJQ@_d/rS^(]
%pId[]hX9AL+(1L_'(C2M6sfo[P4(rSj<)@NS$Aue0/TCuTuHr>jKk5,6e+gnX&<CLn+Zlb6+l4k'SF'TnUXe5c-cI8Gf08"G/<@G
%/.FSU$U."hSelcH>)F,Dc8*XK)sQ*SDM,OYIh&\TQ@$C+""@7'!kdN&K3A"i`TKF,.90Vj!F6dFr/0C<OK+<k5!k^Fj,/nZ-E;11
%%3K"MC@K[6%K?WH4P_so0$+h$"i'Nm$@]ba6?^%44\8!kaS!8_7_.Q*cd4*1HJctAF3A^_es?ic1I85="K+_@jn54WE=^ZJ5Q0X8
%hSFu>;M@an[ZTdO"Ah8Pe,cPcBr\7`,5YXlJCT*>B`lfNLZCT"):^C%jI63\VFD`)@?nYJc>Rs#[Q@sM,]57<kNSo*TK<:]ra(32
%&::[Wjme=sIBCX:PL8(@'9N1G!PGV4lJTU\3.gGS.Lfj[a#kB-!,;L#lT5Z)3L!;r`--W8*$"l:^b,lb$%cfj0q@a+%"MDXpJh:3
%FHgsZ_>?#RZ4GGd$%GT?&9CkREg:#8K;*JrqL/)&8FnY@U/r<,<cZ.HXk0<^2g!Wh]M.IkKEh1j7mkdcE!LME,TmND*=s5+rLJO[
%r7%;#"P)`a9Sb_6Kh55CTlY,%bp\Bu\fq;4$-8F0!34CK<Eh/Z`@/IOY:\hdpUq.)'+N?;'[.4t=M\Q_00aRgg+1YmLuLHR2l"(?
%bnXrB9LSfJ,FIhQ;O-]:hOn^cqEoFaF#!Rc=PE@XSk-m'g0b^Kk2u`6goB1C$&H7%Ra2V#d*G)P=e`"[0t,C@&BS^&5"e.!+%(IB
%!(tNko3&)ifZcdSQ@P?Zh0bN=0jj:U$l2\5/T*XP(lmhV'YSW*';$T%^7)e5FDa^9)hmNPCJ$hiH(R#9XM!D)!;]![&M,O_oiVV0
%8tD:A,^u:VT=:T\H%[=ZqfoX)!mEI3g/^ZsO05oV]"bKQE6RN\$Y8A_C0U)9juC9J3)bkom-5A+g<Qq'+&N8RK.$FR_A(`P"_qtr
%$&24)`sKbPV<DV44sqI9]IZ(A+hpBEH!X!n/Jsed?^fh#FPX#*rd=hfkEfYu8HfU@b24=!3Bt51^!H-,lVa@Gj7kri\JC2Y4C>RB
%H6I]aI^n)5jHXGO?9iOM[5B(u?(m2s>tc/\**pdGHQ6>\pe8`UKpS9L**kHHa3bWWcF3D%g#hbp@->G!.Q^(Z)7@@o:V7]=>;u\i
%ALN'YC8!*l7rL*fXnU"-gUl=uk=iXo]47;#>$&'akc*YOcAi-:PCA>+V<_cRYAc^er*(B)T,b\9USI55GBSnU4iLoh;fNd]2HtVG
%KiPIa,YeJ,%ks:/ciP_m7n6cUs*?ZY;G'l0Zn:3e[!68LV6m:JBE@11qOn'<[s2Qe8bq=Z>O_L"ii,?l7o*>Zii*ZMaf38EB0<R/
%1T3N#D>B#K*aA:/%\C*mV"*)pX3",=CYMJCd./X`3er__bJ;0)C/ut1nZ7TN60=gac`06b/h)'I2<9!ah8S_l(%p`=$qkkKbs<<<
%QW5_hX%"oXlUfA_df-PpP[cRUfl>V6qI8T3o%-a7@d+ZZ;iiN:BHZp"W$=P1F4OSXdf0F[TP8Cn=hPEZOo*%2)OaUN+'-kcb<crj
%_NE?Inp"20rE^SW@>j\u,J4'EG?%"jLXf\S?<0p':.DOB$/e;@Q0*CS]W@hHF3<g"]W@u=8MBFA23%*s@&EW:*-.4pPNe'_n&n1t
%4@pSIWsO/M963Umb)Oo86lV8TeMMu7I6=W@jR)2!SlTc?(qWqB<Xh'\<b!k0>")H8!UNU_XF**pakJ;\X<!M6<HLndF0qIBlct`[
%LK/`[(#DsZ^EktO^T1h>G*4S*<_Ys<AbNG[&@(QUZ`51hZg'/Tc`1Y4.>_3oJ8#?$n9A!QYgAj):SX"p;KX3>lR&hALujidq5T;t
%8A]SZ=&l%PbfY*m=&gfr1#*BoYH#YN-kDO8Wesd5;o;h\X")PK>9"f9<FtT?om2p*<M[IZnWHCB"cbOl:e70W!G$=[Pp]S]m(!br
%8JQZ8[!q_EMLK_+ZH8:[^1A%O=F!fhGoPZ&8JULLbqE6A175OuCZ"]YM@>9ro"&o\dAl>RGu2a7>hns;'ksNjIt^%ak2;p^08kQ)
%&#un%4Amqo@$>^XDjabL\FD^>)]dP%7%(/SXltZ+pE%Y[=U"ig!GW6=X'O2RL+\]uFRl"q)SPVp\2tUu6G?Tbj#&\0PLn=Nli;B,
%"VPM@Hqe0Y4l`p@2)SV#F+6nQfB76ai6,A;n2ct(0ug!^@;.F4nJ`QK%=:47(@hh#VW))8^tr+:3s?g-fSK%>&78AZF;K;[idnVK
%$=?^>?amWT%d+^;m;=bHhpIM0?;hl#YGoKIUuQ6*g!A1=DTU&A[BjsH(H00_mlStHn<b+X`f^&@!?<tT(8Ead2sbFcM:5^S9J*&A
%aLd4N]@iqMY>Z^\V)nBmJ<frCj&9\9GN+ZJUuLiB]g_WnOnb"VMWmKCR=U%8LK#D0:3VENr_l@)ansnY?TlgC5aULm4JW$'mHc30
%6d@Z@8Hn)`YZ"#>MJ4M'V#kJ4R,@2!6o91c5,A=S*6+o+q^dj#bb%dak`./hW=FTZe5/].;HZjubIAtp;kL#*>:TM(X"8A,V#m&`
%4fYgc]ec5E>:Mop52\#XheS:BHqOW@H9!'G3EG9b`Q(q#Qaj!9CFTO53LriN;ZSXoMSH#$WTq::f2P9"CMG8pYGnU1pup6Dak[+r
%6`0=O194P:@6>4nKA*7OdTpT.>XBJ-H%<ehVKbl?U9Du@Sm'^QYO)+U$;@G+qO@m\<-WabFX0/K*lTDf4fW8.V,N@_K@eBO`>tJf
%bcd7'+fd(.rXnUu5Y=RHanJbd6b-HL:B_r#7ikY.n+`Wg$e^^n8&e6=PZN`_*nph#$]N#!HPPYZS/V;u&REcR7FbK=cN,rqJ^>4`
%6Joku+&oMC@,m:9WSH+fY\4k9F^S1?((DK%\?GImZ&pK77CaoASdIk-Jb25C#i5=9K5.*Z:W*)#6+(*dWd7b97FdOqU`,-TRqe?7
%-Q)+p=Wou,Z3M__GYTi*)%9CP'lZ@T59:1.QqFS5/WPmkgl\Wd>0$.T?W.t%2f/I`;q!mEru4firn%2FpV/15)o<LFM%D1CV=12Y
%(<F$Ep_,sg#r]=9n"7@HiTG\p%4N<7OUPR>=a5S(>6"CKGdd9N/_[4!R))9s%Ye_*47LtS^TE6qcF+9tXYR4fBZn4oXoJ;6I'gj2
%<^,5(oN$^]LkRc)X7`+"Jrf`5Gshij3lOSAE:E$LJU%o]mlDPr&_ljWO+gqRiDg<#l[6dnd?]X*dFPA6r1h1ogTl)eg+kBBg3OL$
%2_k*1o-#'X/Jj%Apf1^.`SeARVeglH"WR7\)[?<>-89@In6P3U2F:Vp^dI)4=a1[6mlI)H&_h?ZLi'g4bWe_dZRqfifTs]MD!P)/
%hSe?acDPK3[^L"*_QO%4.L+dQ5%UL4KF:#j'F0,:'::^5poa3;)kjAsi1]Z+/A-kVGF_O_Li'[>`3rtUk+<snd?`*gCs0d?[e2+(
%Ddr3Ak>O9*>?_M&iE(SU'nbs9T<aTk4R=)o@GoIM!qR`ChfV+o,IFi`4;<78Ki^#(Y4F(]Yq6cEf[d+=r3O=*g@BNJD7LM%[U'."
%9anc%I*+olCPtJ,r$jD(@dm[d;`<P^]-L\L('=YgIM8)-1&.pC.3"t_4lE%'lR]]+_0;GGfnaLU(rWjh"m2F'p<f2P@r0?-+L^qm
%0Q1Fi?0>-E6<dY&6K)!sGnku#3ZkZT@$F=t6-@0^_4TTfk"Q8ul[6cCCs*&G(4Mg.=#'KQo-#&C>:'PE>H\,"NtV>+bNA>.bJ`=P
%lW%?L`8J8QLMXo;>RY*#=+PW3KC:jnZI(2_'-EsBf["Kqng4KH2*M1R2m`g:(O_j)<seZ%nL53H+W$$_d&Wi;USL'lo'$Mk\O;+*
%?DZ_"m_<Lab/8+1Mo.1D.O)&0s&J)X(m(0k<n'JT%/foi6s_5>]>ga*KU2<kLVdt^s#0K+2*Su&[cDKO>C$sGJ!A;M90R^--(k+f
%d[QK6bl)aF:Ord'mF`#(ho+Smo"Ssf8d*#Rc$ith*;oV,9\uZH]?[<JKXUS^LVg5Nn1"FqFZuWG[cIQ%gNjU"J!SSS><[tM/Jiuj
%euQ$f$,LhV:WWlZD'91=?cD,,%)2%Tb/U9gLC`&lnE2`]GnYi!3hN\ig=cWM$GXm'Wu-69q36lkQA\%FlW%?l=^iIiq)l[*>RY(G
%Y6+;B#2aPeAL"Ri`?5kD'pr&Wpoa33)[ImSi-c\Y_nhu&"QiDe^?^0f7Vp6Q4;NC:Ki^#(Y4EeU7p@;E7pE.uo8aO]Cs1u2BZn?P
%B^8Z+hSe?acA-5S[Tj5MiE(SU'nbs9T<`GIEbj^JN]?h*S%u[n_0;GGfa)H^!=slkBAli!^?^0h7Vp7Z,I[7p0`NQ+caJ3B@p:Q)
%Z)q)YGnYi!3hN\ig=ihE$GQqlWu-69q32>5.,d2[O:;;A^'(<n(GU/diTGu4KXUT)LVf*TctZ?2G_0R4hpidR&_f>M7]Ln(^h[!^
%fnaLU(rWjXJ^J4.0mJ;2[X9,`>?_M&iJ53^[AOj(_8gs!4D$_4Vc2JlnE2`]GnYi!3hN\ig=cWM$GXm'Wu-69q36lkQA\%FlW%?l
%=^iIiq)l[*>RY(GY6+;B#2aPeAL"Ri`?5kD'pr&Wpoa33)t4L`pH?ZRK0R*WbaTGsfD1MffTm%m/GqO:Y@@!,k<h.f[S.*i[U'."
%+!pX6QHeI;QANH*euQU!M8=D,&(ubU\JW9%Y6+;F#2aPeAHV:dHCD>PqtWrkhLsgf`i!52LA#$DU9>7".KNm65,BG[j?aFsH52Zo
%Pgi2j5(0+JQ\a#8X-C9ArE"tSH.WRCES*]e7HAUN^M9!fr]`tiF8bnV`p63Gr_F)Orh"[I,kVisQ3)tl<9=Z\:Grtpp]'OgO+drI
%>?u@0s,*&$5*9e[eD;cKB49t6`55^sNl%8b&IO:24UX>%+r9%AEY`h%6S,l?p*b;i!9WFB;dp:&kKt<d_6^'PBlpd$>W&g&6I?$L
%7uBL-6]+&F*%W#chF#]2K>&$/:U-VWj*b!dL6oGIo^U]a7DhJe./J2eOeT[0^Pb8t"'@AuF[OR*:+R^#YqHf=fFOfhYl06L%tg#Z
%%AnYPoO2*gU>]^oMa">6//g/KU$1P1+[s<A+V]>QUJ`qI&Y\DU2j'in<7s^47hps%/Ot`IaX/VW#9O=C2RCnn_@HRN\e+&&SD?'h
%m-V?G8n[m!pg93Ojgt3""MYhaKs$B]+n?QWb@onta5+5PBB]ls+9.!98+?QXpV6^j^]4!,rqg(&rSRWYJ,\4&n`PE#c]DW&qX]4(
%%JbM2?ZC!$%A#-Ra`EWH]2BI0Z(j%UrS>#AQiU\.ThAs2QhZ_'o!s8%P%6fd`Nn)p1K^M+1BnYGSqPBpRdsbcc3m<JUaADX1A2(2
%"!SE8i8PkV]F'i7.6&\Gn46$%(r2miNl!YLA8$#[!$]u08C,BG"n*]Z]jH@"37\+5R_\tH4b-$9=TC^!5(L*6P8SrUaB1kM<7cAF
%$dM'U/*;d09U4-2@DWd&V+G&2N&*Uf!&=jBkCR1PdQ+m8O`[Wu+rl;t9Hc2I$tT?(8ie(g.ftC<<X2MJ.d)Aj[UeeDPnqH^8SY!C
%!K^I'jT$F@OH0lA3,mg'ou(Es%g,D:Ba@^/<+n%Mh1T8,Am&'5!iu>j`o+-jE#'TC"(Z'YJAPQHZlsGi5A7=%9_V!bc!&f>NTW'e
%3@(F7+o$i`)eTe/]=65-5&`8*V3gn>^-k#c%1\%YJllUO._ej@<Um+eh@Z=11teT<j#!W%UspmSS84<1dSJdG$^MKFFCS%DBGFeJ
%.O38Mks4I?b0G3&_ZgY^#TQf3lRm=9,9+Z60guTugKJS.WSm?IXI_p572MPm5j6r,n[<D;!9pB+[0#MVMUL"N5mL'l"2>n8N-^+O
%m"KKui4+7^&n1+6k=[*&jE;ZJp$NFn7j*=/&+E**hZ]F6.1_ph/::0s"L,sR#6/-lrF!1%/=XX'dm#%O<hFdFR0/=H_4_?0^5DQ6
%8]e2,/`4';KE)L@(D&WB!hn?a2HY5$)5';@H>k:Ni#o*+;1UI?UQ38&d'(q728XmJ=#(:(hS8it_b61TrmUsLs):XoSO,=f8[K"Y
%UIn8T;G3PV$P@3b1"2-JlU^iaSMP:^.(:IXN8p,[^Af8UYM"`>%(?=0LR^Sb6jd!?#Qbuj*9$Z$nH(b/?/,W]'iLA5bhjDgTI,3o
%`gFddZq9fQ-C78e9?HGXGm.^gnOtUg8nW&]r"2d!*&o!ZDO:,\!Pqh;W3aUC^3>5Za,K@bgk-rK1iP<=B^mqpLPI,.q,(=T`O]S#
%i>-VFhi0mHaATLdpBAXb"?_n3(5)2pDLOhf!@/f^HKjGM*l'DM;c2(f+%A#a)3H4!"7Ya`;D)1G9t[3FqI;lC,(NZM#!2'X@S7d^
%dBR+ZKMW*Vi0Pi)[j!>tba_*e/@@(FNfAd&f6Wb)YVgN0C@49-oeDdZURN&X1AN)ZN%";uR1W6HZ?2ic&V2LK/<b5ao]JrkIs0g;
%8ljECCol,s$$=;A+]FLk!1CucRRT24L<h##NF%?r"!,!-eb97sCEPR(qcdRs";p1N&R@I3iQ"<jWRkG,UgM;i&8Z=>EI)hAAEdfl
%+eE]qZgX=:U5#W9:].kRpWkMNhl==)"MTR7e)3-r6s4XDo2m;V?g19)jPE0N=I8e''h3+J;i`l-Jr&qfAH;R+a*e#5]")oK'hL%\
%OSN&4"?eFNp)!-mHR1EmkFC^em9-SITidTuU997DKTfZdf;=sW!)]TTC5",>jB>33)(B/"1>n;Fm=u&*6VAfVXr6%DN<kdP7!7'-
%hRV?97\ep"!(Nlh=\AB;m-5(,/Cq!'k+NVijm$#<qJlRIaK"DL9ZOL*]"bZ%`^21]dbLsoj,9D/<('us4kN%8MOuh!q$lsr\7`Ju
%i8>1"WY-M0,;l_5/W0-`RkX01f8\u2LgCpV1!6Jch;!4[ACG(IAM"jC4'se\3YY%D9sWG]<!+g"`gHbL5pVFu4fulh?:GMM>>'M7
%@ojp'!/7Er[LbK[W!Q`$$[8lD2^:abpgoK!(o@oq3ig\#*q5.)V,6V,?)(]2?P<Ypk-+%+^rQN]U/@uo`i(]a46@"+=1tddr4L9i
%ge^JFfgI1..GBQ0EUOaADn^hUXK'o8!f.CGd*e!r]pGP;"=A76%`PYdQ@q't&Jp2bcil)J!CNZSW^SDsc&FKcoP>D6)M=d8E:sbN
%:*Omn>S.4(l!A3OqEnlU4c3N4Q)]QXiOpU0*$_moP7$'-Zq!7N&9@jXF.16?S9r5L\Ur_e<Nendk&+gH*E%<L^Mj'am_8uNWXo-W
%F*!rdI-_l\F7KWDBqVA&!`/>"([fb.2_Jn(4s$$WIFG>%aPr%BmB45[rG3XO2gC"V:W9oW,q>7Uhc*Y3%Xh0kY)1h6.tBm2;h[\_
%:e\:PW"984%rMYE<pRjEfP2OIQW[+'D$%TP=k(GJ5"GZRpj_.$`,FSk@Y4%u5d%`V(o*PdSaT$?1?#!/IO"SNS2\=QFR]nQ`O\I.
%hTG_W!-V4`*sg*Fj`hHpI5K]?9m6h?<PNb6*AJYs1^L\i:aKL"n&PR;Rd=fhh@XN5&I&a,*M2@aYJd0JhquN=.Jo@E4"hOe<!GgY
%>]$/Oem;-<HQPcZ>blDlhFEiYk$*0S<Aa*F]l,00mi++NrC4_Ui7e(,&k`/MhFEc?,[5W140ND6b:E^KX`3u`<(rCU1_cG=R_H1R
%GiHV\s3TW]G[L)H+kf"iUY'.ab(C^EYT1g_R.e.b]T450`O>>d,E.PjQ1q1AIpRdj.LcrjTf,5=h#S]LcW8jNUNuqTeK*,!:caBs
%%XGgP>RNuC^Cd^W\P`n\=oltkQE-$JC.Rp8Xh$k>A^:jd4,.:6nP[ANRPJHS3tRgITXoW$pWkLcT<sDf1R%1mD"BjrLqjF%6Fj1p
%4W7T-%aZgR?QrpO#hCOfHS-4.?rXi#e>`dq/5`T(&pTIW$$oTMC!tWFH3iMn%_]`rbAdF5[a+XZWlH=h-3N3LYf0qXLnha[/M:s0
%I_Zn(.$c.n,TCQd6uPm819Mq'coDrh35d,UB)`$n4#S=>ER0%:LD\g=+D$N<+&H[Jl[mWfG(HAZ]`?2q_Yk"r4a^D7-I^<_&<<Jj
%;U`3&?lc"I1fGFL-'9QqP]90R=n<?uWR7Z)@Z2)IMFO$q"\FCFT$1VAa$:HHJQ'Xi"L2?)99r[J`=*jD<V;+U@Nd4CQ>f6l7NmX`
%:FC0ub0ti"^BWS,r>!g^nJd;5FsVRVK(.Xn':7'<WY\#J3%XBY=E-Xf@.I,sg6/G'ZpV)Il+lB<d@`#UWd</h<DsJd.I"dShBauh
%c-tH)b)$PSC@m8gG.j%mrmJrh>r(ikOPI[biRnS>44`+dHeA.;>VTl=TsB:U6]jjNYhm:Z#7m):+A?"Za/:7mBZeJl[8JC5;0jGq
%iPMo&iWQ&'4\(DWk='6nP[W0ASRPk;]4J%V2o6+^4Gk6hltPdcl<b18MSX@g?<t(H(p'V^))+PMj4q)72PP9I&BOJl`e;4qrfneR
%<3T$M36TbP3\$7tVBfde%DAj!@.*lq+"B8CZ&)Hih:ZQqg7BiU9d@GKF]2_[`isIq^S]<B.VancU&uW97U?Kj<E2r9KRsf\.[784
%3$Ws&-"YRo:/4DZN%]N5>tH+eQ4!T5qCIA1?#kW"eG`r0'bMc^[\;e0P7dFl[%FgmCb,Ea!1$B`/(?N!TR^7?^(EiEhO="M'"IU2
%W)kba0bhgEW)\EVokG,3.r*QAYHXA7X(]uj0hdqtc_=:?.Uak=NI'Ot^OhpQUL;PP+OR-+KSf,%UL&3-8Ion;_TQcHF-7I7lB30)
%moXf&jbIhc>?0P!6F!P&9@p+D1&X"De>psMYSHFB86JY6\dLJ1'^?-r6G54QqGsOrO^)7K6G3s'9=HeDdhqm\>MQEN"RA:][;K"o
%06SH$I%th4qF2=elHlGIn=Fb7'@E`0eE_l?e8%ZO^dFg0>FYsiFXY`u.$([::bUo,e#sI>qFdPIDdjbfC.Qoj_,U=S"*=FI<U'bJ
%P!11,]JEf9e+e!_e4XilCmFidQq:fR&PFM9:cGVuE`BEV%Y\_,3]0+q.]W!*:5tr>^&H\Gp$*/*II#BJA2afUp",!!quZjLS.b",
%0]Xr?]G4;LZS4$EcBoB`MR;bNip&:0/<Kb5>nSiX#&?ToIXmY-G6]dUE4JDq2/EPWUWOBV<%cZ+##;#G<i^&0N&f)!]L'^m'$jTb
%mD*>5nuBf6ft@#X"I1>rpf8"&c;G7VoDG)D@/eA9NT)?P\$:!U>jN"C3bt/cnD[?0i3NDpq=*@U9+5)E>Ck/2."Sp;mD1#jZ]66q
%/TqE4QF9F7\C>;FgafWB@2Sf+g4W-O`jt^o`<J45c34j>%^J*lL?bAc4:ru<bfGb$/F+4EN@=n-oj*OpK^4IKc*@8p_0_/VPj5ma
%TnuP(9%-J$`87FW>Vo12F1takfj;Z$_@gI+N*/'5;POWEMIdDk'Y16*UD_gO%I2\)#5+/(m*b61&2taG>]NLng2E^B'2]8&Y\BV/
%&hn)("3gKVnr_(bFtG:[G\P6u4:.oqC)QZ/:BQg.I4r2d1Kgo/p7`9k!1hafgU\,OWLK=_g+=4/>jEsg%M2F)^VEoR&hCT:gMasX
%WW^IFU-aGlW7qj5&9JH1A@V%[W?F6IM/,-peJ^7Qo!^G82rj-)aaHe:FBt>kJ(UeZG],-i+Jjj&[#usTk*/D0NH?EI>fidm!F3/J
%QV>'u1ACr-l1cV$4,m^aP)Bj<#MDLr#4FSuEB?U?n%KNT"(KA_lt9!15\eqVWlR+)jOOlX7(QW<Cdf:f9:A;F`h%W(\&'dM?>u;5
%U5UsQ*jM!8O)\]%AY^AMoeaM#kdI@E$4M!C+3!;,"B?T]!(3=KVH[a[o(>\q&j%:9q*D/o+RT?p>-c!o'HERsLJ9oj>(C<Xi)5<a
%QVY8T3"\'ZmU072500oPjn!Z@-m(Z4AM;q&Iof,1`hj.dQfjOAcbG"\,.6<3UnkAH`PB&&fAjoT?tHoAnPJ*`H395#=5Buc_9et?
%GQ38Ko,?kaP]NO@A#tb@9($Yl_34FK*f&Z;ng9(W^r1%!ageq]\4\lD'*M8!Rcgko0.`/bSpgMG1n>'tT]bL"cL@m'j>k%G7-^XM
%_jK4co&oE'^O]uk]Jgh\k_$fjCbUSp.]HRRjp-WSW,%_%ck55^D`^tJFV@mjD&"1gp9I$pn_U5TFk&EiRKJ\M#B#:elrC(hS)o[`
%Dus$6M8`bcLI?!"FE@&UWS$\#I"o5[Qi)r-@]<VfXTeo36PI)J!V4d0<QU4T$!2\+.$pG`pF%lqi?cKc&F&8&Pb)r387:EX;$4s(
%ZqV)2>#YqT+c[!Ih475E3#//(/+O;BA,:^Se-la@q4-q]0UKifhQ_H!Wp8/4Z]S&u6ne3RMUYShG#p8Ma+f&6l39fmO59l]L=@tt
%*L6_&Q%^sH<FF=4FNI5W8.s>hZ=[D(7$t>NIjcG(_lLihKb4WSk]KJKC#K28D`Yj`.b?MIlLHr`R_kN"r6/0n9=%U==8/l?/i.M(
%\lE$ni/S-i6]Z?MF3K/da0aJQs1HRr0:6XB'jTLZk-;WZL+QGXcrUcSqem<RKQ:Y(eB^V_%7GfGo(_kc(44s*f(':TH):r>$Pp\V
%q9?Z^J&e$c2lgR.Vief!3Y.'e:HP1K'EbT7P$2SR\OC=6<B+upPOnd."sQY17L+N;*R4<'-5jXMLunP(Wna.r%>AJAW'e+oe2Uj?
%!@$,!C+m/+7[JcH<9"/ja_M@SF8\A^OgKV8+Ptt1[)Y;h>X5jA&*;dFo$"u;<M@j#r+NTaU>o2&E$cR9!?oA=^,qO,SXtL+'fM(N
%Qd%-W,UVPZ2J!e<iN%%D$XWr)S:]c&do)FA,eN-YG!ubMUsF(GT]ai)K)(Edd'qHL/J594Ub^[;n^K3=6=c4r%18Yr70NQi-'it;
%dP$ep]#H+)=c[ni$o&$2C[4V.=hHW8lbU7`Jrrq+ONi.3,u"K(m0L/X/W+Qqg`'YL6(ar9?uH]UF9HlMo]id!JXkoOSlR_AG.#]R
%n-i.*=)^<T2U7o;P3J.5&Dq,H3n`Wk]1XG5/bZO'EpP&/"6_1,&[d:5N0>[@9B8>OcM5D6W=h+F+oGUYoB!7W3>ct;YNc&rF<(`a
%9ZR?\ln*s#P4*[//Vmckg,^LA$,BG!Yp*>sc6!uB$T<,IH,JV[?j`(N+(/!0/uB9pXF3cOWXC-C-8+KV)]6'1a&)\crGBhd(qr!U
%d_]FW6S8`:^>(,lLCueZ]!Vu#=]O!o2p/8G'LXI+Q_pUu`$gCBKkcn=*f#M%Z#uI3%M)]Za;-Bt\`Lk>0ZpM6R]ICg<n;J729NnQ
%h'f`u1WlC819'%WL\CLd&<1^T@-L`Lb2%lB.*O*KP$37-;=4W=G?$TEiH;9'qBSP@`Kts4+l"JiO)rE7MMY1?F&?*tarpqEOO8\X
%%_4"mM+VBE"(LPf)!)t$7_&e^;%C[K[V9JVlIQT+E_IcX;R"=64YO9PDF4ns;M(H7`?r^EN>7'gV&HIVbLqK`.`Y&`@$AJaZg^<*
%-3n)BFkYml=Ju,)aT6I"R5R(L[;A`LPJb!M[Fo5W_p".lK2%A3XhieIO05BP%bX6`nF/3^W3KrtS'uPc@$F$1&[?)>;%BeYoOr<@
%gl7+&*0#!f(cc2l])cNMff$BsfYQX9gZ7ifSjea[,^0@MK+LatdqDEmP!a8]g1?u),R;Ft^&9rbE``E<Pq/<apq"-15"h(ZSkR[6
%j>K"(!`]rL*+S!7?E%Y%_j`\-:ngO!JR`"SG8$/[O>We)DBltC(I9dtTmh<o\OgZbjm359*+YhD)3#ClA?6B$NLAM)Zc\jT/92RY
%?AQ6.q=XR02TYE6>?b#la20,I`pIbE\I[F92pHgrg>aO:N:Ok-GCr9.'!oYR4QpA@Q<<4^cBHT/+nN2d[$9ZdOYp@!p6=suf#1S#
%V.=aU0WXU\0bC#i)"PKRbuVT;?%9u0U5M;JJ>a/!(f4c4]*i@u(N\*=[j(n6HVg_[9csG?0?ZL<J4n<K8OZ;ENss#/gCjt-jEY8p
%01dZ=(\T-3kD"uO/jYa#WQ7R67\5ifZ)h#i`iRUBLqhD43V@nS+_kBgh2C@NBDtN7&!i*EVkP5+<,*_Oe%H@^cRIdkr<T?_W0d"o
%JJ<+K6/o?sLj*sJU7Vm-%)""Wd_WZKZ1gS62,2#9_rPLU\Mm@oZ8t0^@7C@hjt&Gt6V%Z3'8A63!Uutrp2N`pAOL'dh*HOhi3<(F
%c+27e;;+t5VZXM%_c"Hieo&>`<E!(f9!'O27!*Uj961n"P&ZAj)^lam`.o6=.1)%CUFcC21saFgET`q3Xe7V@$)+k;=&[WN[5#4]
%m#b45Z(]R5jWgb4;J`p^,!;:-Qg<gO%Efr6Gd64q]G:'u"Wb56Q)^B5l%ZRDZ;(LfNEm6IlsMB#[$H!N@mQN#9Zl$1+<F"X^=J['
%hXI[ieRuuVM([]%d.hZ1I_gU^r]WB.]b#D-]^2'*G/h0?GLkXA1*11W4*S[QQ>G>/mjj2HA)A1\\8ZS]>@[)a\_O[6N;Mb-HY_D%
%fGZ\^>@VhOJSgAa[,=',XV&83/aSG[\7iC\j^h8`judiW$q%;?>Ud,TPGRW)(t"V0NNl`uo<,;PhM<))D.bE@/=4hr1R>D_`coEA
%**kd"G/f](\SaK=8c*j^B=s^I&n&S"7eDu+B:BsVH3HP=CRD5.$A$s*YIUr[+khm7MslVX=iRm+k%5Qmm>Mtj46$N^B4P"Vq9I(T
%aujl;FGp'8h\ib4o\NeY<o2Z;1M1]&nR@lWZ:`aebG@,%\2+mIgC5)HVC)$Y2Fbnu=#,MKN-Aj52MI,&D=V,k2b&VJ:jkVf`imqh
%H!A.s0p\uLc`f,b(/,aX9UM'XJmm+WpE`:bSZcH!3>co#foUbnIsUhZ(G$I>)BHV?dAq?OoAK^jK-6n1(+)m+^utiI8s23!QjEP?
%!)%NO)H]U+D"p(tWdbIhnMYX"dG55S'c]O_UT%NHiIr&'?Ya_HRma$PRk/6=\T_0GS43bi!JK=-!.P(S8Y8MK:mDDBgIhBE$e'^R
%(m:22K5pd]f4Q,=J703)<p!Ta(Mo`LisVAZ&4DI9"TBd!Q&G(elG%kQ^`s=@)\pO+T2kQDORXZJ#RS6q\Qs\4E=-YRK_Yn0DCZU`
%*u]uafA$X]#"qa?'GFIYaF+lOd9!*b]n'emiCNe^Ekrj%OjKJ[-*e3rS,MtAjIBG$r,;9j[0o]#5T5^bC<5rfcI;P(`;:"mFmp>p
%>_\\Z_rW%)KjNNt6?:1S<b:J,V.@[h$h8-N.7X$_.@Uk-j-6E6p"ko$@VILd]("7/R[(o_pqs1Lp0A*HhI:<4=bu:dVo^fb5HM^g
%V/cWi)e4k%eM0U<%L<8+&,cr4DVJ'Qbl1V1[/a"\6Q_V\\=`hdj\H915\r5$o\"9'#M*oHfa\WjO(Bs.$("rGi@Lu1>eTII09&Q=
%-_">W_Se\gUTjXn9omBFkef,tpObU3LaqXfN-54>0U5W7U$M9.ZkBD(@Q=:OR*V6=KkD0Y"[c\FC7-?W-__AfICH+hL/:B,3EY9:
%,U7"r)$n:2[%L\5Pk3El9j,.5XZ[CR2jBL$%7Dc/(_[0h5R%paA3X$)()cHH].2'B*a7nQB3"i&p'XW'QcQo7]h-kTn;3%d-gF6I
%0cqsMb/Z?IGl<n/m$8!XF<15A7M$#"=<%?P>3Pe&/+TB[cJ[l&>/O!)lcn#4ei.nVkPh]$D/@"f:qf3W;nmN/-$*S,Aq#S#9Mrf(
%lN9,9J;c8gUa1;I+%<2=!""P+ZCPd0&HG^_E-OXdaj(D&\4PiuNXYn`qf<Gb'.lROohIn;gOlBN24_71qW+#>N?l?3iWSUH,>d<+
%\Q60]8piQ[^r%K,A0jBF<t9`?eRfQnQ!et"iW&>lh-\eG6cKe0YW3B]q@(30$P:jWVdt2Sa:Gm(huf!t!(8?S-Z]*9pNG(UJ+*..
%];2XPS;`+*/^T961'.R-F"6+[r@!n%:>r\nFrZQiWUC>dGBfJ']ocBD+N4Q!nkulXiP$<5$mSmJ9@Ys*[Ze53*MBiE9Q*M3^;I^t
%#W#^N[)jMI$ae6?/+k=Ql&I_P71bFuG_pE/]/l0Q>k!!S^=+-@8('qK]8u+jSE>fRCk^Bp)2@5L+$bL=!OXh^C(p'&dL.]QPSd_!
%EKn9n%O>+EmYfJs+'t`':^k\EAl4bl&3I\qce`,T7^dH@e%&n@1KX1:*s_D!@$/(J0UK4@/1T;1`%<>0e%qt@qj-s``]`c0_\I#F
%Z\8N^%%coF#>GVUdmg%--:VI"R/h@k].m<r9bE"BFNnD$KSBY+n(rY2`ZLZ$g+Kh`WRhli)d2__)&0?42mh.g,).K7Q%L.?5Z#?<
%;_<sY.*k3/0Xdj&.p'X8WAK5CL47UN_'RXfH@e,of[OE)rmt!C5IE0RV:Fm8(gOQgGLNrRT+b/?p<3[dN"HE@7R\V></knV9%ZUb
%'"1))_KJqVKRLtbk=pK$&dFI0c:(RHmLaHb%'!'TC;C>4'aJa_I7qP4_3oHq*-!E]MWVYF\]/Sa>>!&9(WBic3(MT:2A1,9%@Rd8
%X"n7![hprrh(M]s]^)G!m10UTfH,fE9S^c+lC5bu)slRE)uA*e.T=2B&sTU0RM*'0o$Md/iTG&eUDem];_dfYDD_JSF&P%,2\*^S
%;4D!i&]q*Q]k#m!(.L`Z&00!?Y%R&/^?b>$DhZu]T<SD'jP!%-(`&)q9<oHRG7c;A==[Y`MA;8@!]&R,3e/5jRd(uo8T1YnW>i0a
%=@)GD<P+)XG[pKanCc=UhY03]>ZE,\DisO[mq'FH<T<b)Fb9?R!3/+]E=r2k@-48>`OW9"P[rEQRM#"ZPfSqj-qSU,I]20g6@<+s
%Y[^jD5i37CmunTU<T?7B7mMKI"`$Bcr%`t/oI>Lukgr3#69'd;.^TllFkUH7l5/WdDdTjHk;>-pE#M.X<M8fEA40sa9Cp1,<gOmE
%0ZTC>GH<rPPd%iucO21KHf>\Fi@%8]B98@5LZMZL7b.L@Ll+&Am%IP/pda*Qf\illn^sOPg0-$G&X*:=@h*)R[F3L5'+cke=7mYA
%8qFa\jXQtpr2(&Q^?>"W2R,L(/s?0bXu"D;!V,&9.gY^O_7_c-e%dNG2r)X`0ufMBJ8?mQ\i98^D!sM9A<FfQDZEW,Q=X8&0QG=G
%^#@fbn!-&Rh@Pd^2ZutO#$,<"l,dbVTYQM-Dd]cmkf1;e*Nqb5_UkW\MNM`c!*+LT`MRMrg`/"eilW&q#EED7F)MORBF"4T!Jo1Y
%pZ<#Ph[&qo^1#'p^4<XPi.KS,\MjbD&m@R[#L7=)@<2FC>gC#C!0dbZ],4"!kIil0ofsG9k.jj@Wu3i$MW2._jq*Wf3<W/;#8tjq
%pBEO"l+*mB"$7fU]C$-pGb8D_i:iYOY&4]5"Yh*DWF?i:h&:h99A+s+2#s`OeB+fn880Yl%0>-d6ND7E?r`tVXl4U25B#!he:eAB
%K`qA`>=*p[E''\c2]/uVUt9J@&Q5pUn@I6c\9"Dd3s+%ai?EU*/C]a72["J?4a$sXEV:D]$86gG#R86G^bFXUVD0K84)eXog^Z/]
%TC3!K1?*nfF*q/*6$qP!-*s[u0bF,%K96$S6!6eBG&WM<^9H@85gkWu\n!l&"[Wp3YT7P!07BJB2scp\(XTXDF;[S,C^4@;/:B>5
%G*"<c]&Ds;iGgtp%lu=+VfW\Y$mk;q!QKXu(rCHH;-8#>EBcu0Cu4o=NJ.7<K=2l+.co:'L4BK/qLI:SJ8SZ80UE4L>u,4QQ)0Ko
%2!*/0":Tr#UV,6U!HWZZ82,V=F$iL&J>cMD)o=?ORVrIl`!p-l[q+/'dUi=agCV*]nFJQCa+dt9J8N<^=Er*Xn4Ltdr<AikVSpe^
%0`2pih@c[M%?/a5kiFJMhrmte(a.di*'=!\b_GctL;%:Ff=ut.kO:oUc\;i:SU^A((CVBb0&ot!&)*D_G]qFIjCp\`#jE&G!RU4$
%RB8a*\k]`\?AcF4W7r[2YtM+K-NKio"L$-Xl<fm\BR5(.d$JA;q?/!1o&00IYaa=0?CsK;0X0'mF!JNeo)S%J#t,gic0H#K\"MsX
%M=-<$Vd>tqjRb@6:EZX9LQd"3@^p$R.LUq>B'$gsFC6HfHG'3E3k-U"C(DJVqhAipn=8rS0]0>I]Jcst0`NAjngP<L-qJSREVj:]
%PLAO:m1Z._?L%5UJXK/+Dn:@;"RLq'[nhsJ4$q?^PG;b$WHA#"&9Ia(TXfKVW]Gde-Uj9)A:iP`]5aguTV!H[prr,hh]hN8g[123
%D>,QlI:B-#,-:T]!niV?lLl*m@(Ui)0Wt/R$2G$X?J(?P6Gi@/njFbU*M1@9#>l&7Lm]fk^<RG+rA'Q?IAmYNr*-Jc+:d+&9EIrF
%882)1eRU,WRYH7/;I]Q\dNj*7Tb@MD9Bj<MQ*`]a`0DsYHMh2L)gt#`O<SsY`:4:^UDQTT+s)#IK=A.PR3Dfm(J5Tnoa:gX6J@g@
%j$r6(UL!!(]J!0=g*h5uQjf`Vl85,l%#lDMR]1Ko0/\a/J0:%U'#hpb3BXXG7K=f]ZO9ls^'NEsq=a#4]T*'q%g*82^VMP:DQ$.Z
%?5UJ8ONCjns*9faYk"3F##nLmk5N,K(PSQR@6k7;(G6;dOg0QoEm37H`C1@P(TPccQt/^KW[,3=W4Qm9au0P=&&06o=ctmMNTj:I
%+p;],(.AEO7JZ:1aP%mq%^\2d&;H#N/fggc).D1$.Ab+mPeLYR.-_(XX9^"2m5bkdbX[RkBq?Ca<4#bE(<#dfDBU>F]g]F6&`7T:
%'A<!F+9mE!l;_8sg7Rh*r4L9j:t^qo.H-r^.de2fF+X`F.5'BVS3gUpjt<6l"Y(bVO<X!mOWkHf-6N&SB]0+\7B5DqX&M9f*\YbY
%-Eh8g$E?fVV%iCrOI1DeWj'GZKg5ilG[I:g!;O/UlgQ;k0.A):d^7ALN'4D$j^<NleO5*dYU#G]9@@9i$-s!8L?l,;hD>RFg_?2I
%([t<kj/o#P^7'NDO>=:QH>Y<o05tWE<t$3SaCSLhR%ihZpk?n?-Q&jZ)IJVPRHckG'E7SM"i#U^3.sR;%uF/bAr0j=hbOW'o*/Z6
%_!4ut_RJG2R<386/,^cc%SUQ3?[#lGFc<U'CXWkacqL=B.`\Iuo,<ILe'5YTMff?FbCO,sQ7aE_p-?:s+X,kEKPc+A(sL,\'6(Nn
%g)`EjA$oShb)Kp>XG[)qAcfE,)<Gl@A"O;Eb]?DD'&t&'C$Ll"5p@rc:I;r\.KN\"-ZZM+Tng?-BOW4f*nOn_N:8&P\]d@k28#h/
%r/=0.K#V2>5u-8hL.K?jWhMA'3GbX](QCESOh#[TMr$h>I_h$I5dUc(ck1\#'*.QZN)N[:M^=1h+%fr1Q5P]3r=jMthSl?]?f9Uk
%BX:ALUO,ZQA*<B]](lf[i^5Z\JqJUnQm4s2c.N@>8:J'J,c=-#[N8C4)Tg%e;C-&dq%QD0ji7sSIln2mB(J%n/T?c7$;-T5<t_j-
%8!Y2>=:MX0Tgrn?cbp]aB3+7EZ6e/>\[-h6CQH@91&@KSceFDu6OP>D(j!*,3ACIXTZ!YGV^-)K@"g@,XFDdA\o9Ta@fe]*CQDp@
%D9EpT/9uf6Vh:bm1obRTpKEL_N\<sYe3mZUn3RXRW;2,rUGQ[Y[5Ff=O+C:r7_f\5aadF<kG&$c+0V`e)8%fVda5<X?^bn'[YuLR
%,TdmTNH:e2r>\"@Bs^#8K9a`A'*E:i8ZGWsQ]t_tpXNfQVVCKSlB[3XPDQNbTX9m(Kl1t%*7.)-qE"jHRK"N)PbNKlO:GN$:G\k/
%Z?bCZ9!O%qm!"AS*+nqZO%jGKO;DsYUrdAeE/IG+BsK^@'#_Li1_C=4JT$D/.KU:dOWhcrSLrMdeat?d_V?H73V!?q-*<)MYT%+0
%YdU];L5mSLH!;))O+[cp8-^E803L)6M38$[rA*Pi4>WHjOb,G3'3[5akq6"Q/_EbuIAU(.\&do#PW2b6&a;s,;]]%\ks:=O,%S5"
%2>l[.1/P0,573QUL#7n>o$B!(G%P"WqWuPO:`OgT(IQ-7hJ=ko`#COe(^Q='\j?hjf?bbX2<&M6B!)_uYc=UX.)\kTN=%DhIErTA
%i]bjam&D\:WI:mI,6g5pmp!EVe2[K*&L3&AbtLtZ"r1.N-%\VAVj[-M,6ferQjLJ[i-;lbA+LP+:cB.gR[L.nr9i?9Q'c[M;M.Ts
%]11CmPo,q2kcY_#@`P5>gRH0!H39qZnKeLVJ\guq0^;HqfWcm$bF]I6Gb>)aph3BqkRp@5fZ'J;-6e0(4uHTHfSd#FP9"$"3_C$Z
%?YF_>kRSKe%sG4jm17Vf;S/ASFj4pF\Euk@[<2+!RuV1E'Z;4>\H73Jbqf?UIk2-,-,g_rT-%@2#]3rF6NtB;05PJMr<B:)q#gqs
%3=s;Y7]s]Yo0q\P@rJBYM$"I0e5CDu;93IB`!FU=!R2og")\+`L'Uka,3)-o-%(:_)3ot,UJY$q/K:h4`.olR/Z'[qClKQJ$[7]B
%PaI,tVc`<6nE=+%RNd;(L>:MUJ28b!4u*<n?0'o$1#1Bi<rR\b*.E`(!=]AZY;?a(4II&mjJ$u3eP@A`Z?u0KZ[gt.UJg\clOpXT
%C.4lX!&10?SsjC6TU?@L"ur6A2V045I6`bj*^IsOnKXUn=Z=oM0TM_(r#N]piRG]Ek.(J]ASVf1rYtqICo@14O"T,3ha*c/FaSac
%V5=:Om<0UT24D)uQR6on*?U-@8/4[N?`1M-=;M0uB?1):?o9P5Tf`;kNSc1Ij-MB6VBB,!mga_UR$hg^-md(T+B5NU9A_XeTijMO
%S9;s3WH0DsAZ4B[ND!&BB9^S<Hp;O)rUUC6*DUlEB82_2([@aZR@A00#q"kW\Cf8rL>^e@C3]Q@^Y@l%HBL!<JrL0n#;FR9Oa>Ok
%nPo2eR)E["3*I1`hFUp]35Ni"Mk8g.K(.ThCtRr2;eZ5o<:a(JqaU45@`=>G`3g.Id4Z7Z-4meU^p_$T7i7Vml$OIE%CskTpTp*B
%:J_>m#0J;m/U$GPqPDiMJ-5r`7lE4bgLSCp=fI62_MNpKd"Y-3q+sq[R`=$Mj3cffX1dN3qWN3f`6R<D4a0&J+?[.B<6L(7U%WDk
%q?u]eQ\NFB\q(*H2I^Tk&/W1g"iNVe@PTp:-69nKi#_%-0:e*LGFc#.M+#Q76ac6ID$(BkIa7;#ENHY,5WttiF>s?E,Fb)B;\uCn
%"Hh1I>8#8+!$0B94NX7;+hYEMY5j5)Lg\DhV*Yf0Vb)*o'51tWcG3C3D3.);r&I@?eKc_e.i>uNMGl)/R5`fR(GB2U_Yo2c.ii(-
%0h$jpe<4QPW]#_)B->_CWYDC]?&I!&&#AWh060Ib\'1@?1kjofTRcCtG0k8\mAfYLM0mB_&OSe\LY=HlL_i*Jb=MFB^/5J,\6:<S
%F+?uj9Bt1Ya*#8*jcI\A@d8IH(+OT0%B,BaDRr24"s?1SPTtKnC(bO:e)V?RWZX=3]2\W"$^&b0SPP\A(kC]SXs@Tf!n&=Q(_nei
%bGHH9<WY&Ndbj!Z9-9f;N4HEB.A;Q/kcpR'8dlmLf3c/I/J;2]M"I='>Y='uO<4J"0']_6QGIa:\pniL=WI_\hY!iqF(Jo\]O^q.
%p'oDX(>@t)B#t.#`YG&K/k=H?\ncr&Q;-Vq4U7_Qa;0fMY:?RY7l%etCk[Y*fSK?%MWdKcOi<``j,uMlOouSWV-*pL5HCF^i,>=>
%!%CSW,XHo#csOns5*h@ZIR%FH1\E@>9:)^$'!$ocBB3-Wq\%`IDB"]mWbZ/Q@OuX@h4X$TU&$=S/YNt?XI#!5Fu;qhWUMoNFJ\r`
%$L$qH$&bWb8Re2a;)>6s\bKhEo`VsirMSoZ^ti>Ibf&F=VJk.h19!)oEHIasD?Ul62GScOMcGMM5o75EAG;e\'`]_sgrL<?_@RH*
%$.-&;,u(b#Rd_S_A[?L*PAQLTNR?qlBb.`>dCG(LTe8pe-8$)0nmKfE)+YR#AWWU9RGdjfMF9#Wr;43NC1^9IFgq-+^`fu;=?14R
%@+aQbI?:s]WGb]O3`\Q"8pk#N\tohg`pV09*D;pk&foBnQ=?:_>K+UZWbTtok)/2u%eU!#-p#M)\Yp.ri3M.;-+H`["BW4e6N@SC
%/Oa,Fmp^NH<]0&4>n-m)CntBKb-'nI1Y%@,3OKAkY3N%oLIXtu>^)7XLc=(:O<Nk7;f1T1Oq$_V>"fen5gaO#Qqaq*L?f)[O_lOW
%3<0XiR9`%5j:O;#O8MgC?Z.&T9T/'Cj?W&9Ee=%I&g2,IDBNbWL@oKf+h1.SJ["Tcm@+9oOQfia"b^:Nj".XA(+p^tBPIehO@o*%
%F^@<k(pm)<0R\Qde_@n<"fCk5LL0r+N;(D^!\Hd*g/bLT,`OskMG[eHC8)C`%@R?;oSZe(U[Pib*1pnG&0rB\a/a._6"UhQK"-;g
%a39fXrK]2&kf-F+h<sYAQco=n)t:$@O:4j^7Y`Y([RW?"8gbj*>UM(MTA;_nMWN[pdUTQl%/5hO"nrs\U`k8,(cRaS-?tkZf4L+t
%C4Z^\5id2;e$Zn$OY"O"efX_H`<:9bPW3A&c?IkTcOWNXiRIM4SJI%uMgigCD\lG#&f6aVOVr4DO@3eLWj&HGrFaOqeP&DU+1Ve(
%^8`0r$bQTbH0r@2&lcO<UWfS&:<YeDn&C.rm[$%*D#.i/E&mNRE#7fdXD:XKmYu/fct,@2]O=a1rI6#G2\Kh#,.&\>[jA?P?C0(W
%ecXloiO"5i0Di\,'fbJdCoU0V5NSgo=3^HV`YZB/]Pp%:i?1D7?VCS&P$h:XlrU[ROmGT+B0:O"(&9jl3d;_H,$[mE3K"7TVg/K4
%_^SV'<];JT#q+QihkFf+h`@AD*&!J?'u75H7!rYd8$@gSdk."G!ZsNQGK%"^+ZIDkkTo@&("Cq5M'+Dm-N<!j#rS+?SY+*fo<ss6
%IK;U<"$@qK63KlsP&MKF395pNMb*8Z>lm<2]nd[/JX'4lOStX\^+_D!d^V?^Q?;4Jilts>Ea$mobjki)L+*ce6oJ"m/Xp+V*8Lj.
%@]<USCZdJV7>2X)KMFlL:ng?]qHoC`A1;fW;P$`B9guTL2mPuYWZ&7?!i[q/6Q=g:Ni;qR_'MClINk.F+4fOMoWkm_&&sVfh;]@1
%:-Y4703d_id3>P#qDEZ3AB3qM,<F'03Q+gZJ[TWcG9>&%";\hF;`(0E1hsb\IlPhtLnqW=A=M,1_2MIQ;iBBsj_+5=5pALg^nY.G
%]bS,u`'(ai^%+%CraZ+P1%E:";'"$0RkXm?!ihY,+_J^V.]A/_.4"Qj6PU1=W,&OZ'&Z]!ck$NS3Su[3`bEYBCPW4)hg9tEZXuqF
%D[hg7dm4-HOW>a[eMKZ<UWfk;nI(9.YuO4<3259^loO6@Bf#'D<"T_?="#[e7GM9I&6L*NG!A5PYmlpn(r7[O?`NGIPa=P?VW2X>
%VOde;K2+hPcU=j*ADL&qQ*-lJe'3o%;2%+.:,VM86rO[0F-Y(15so0&<cU=s:RcS0mFn$n3Zaj=`:fn.(q2QdpB8FL3asj&TdCep
%d,5u-h(>1VcuYb^rI(Od63,_UO/Z/2k_J&rm5OM?]SLf*BcQC],?XIOC[*&S7drA(O<L%99P3!e@s/f>lB1#%%+NeHedd7e4rq!t
%7W7;0\nQqU^a+A5VB&9B0/`csG0&lA;h%@*OJ//HW!spPP=5?TqB<a3dBR*r"(+_r-<(NoBW[`^8/4N^BZk^!V1L,#RRZ-Pi^SNW
%(r36u##LOP!0msE;\CBOS=6TT8L.uX%Lp?8KTg.3+p5m5a!Bl)$oCt(1Gp2XOftP'N(P9Yg[CE-,Vm(RaTA=b16*)ZGajl;ODlHI
%"XO`_/Kqr)8HcncI8L"7V`9:?Nef][bD6oOf2`1q'G!O[<V&$fOYSsts.tas\8.&5C-#fh[Z23?XWq`1F@7=C#h9O%QHnZ)3W6U#
%3ujF%Nsk6H6`M,H%IjX5b+Sr"/)sG9)=3;g,GlI'i_XK!6:gRMhV'.9K5mJl0tJC(Elb2-7IS%0ia5Fin8-5j"i:[`eCD()a?0gP
%Th&'RXrIM)CnddH;C385.4Brq\nW[iE_$MG=#"F8J?9`-ChnccWFEsBG]PXZOIa=:>Z;.-J^^d5D<X;#<U_7h&4W&bR@kAuA@9#d
%VP^2l(c!cchdh@KaM<LO(,X!lP>(^+;[g2pL@.R3(fEQ_0N4:UbKEu0>;N'O'bt?4PWV$qBndsmVAHg[DQWCW_*>-M=3qa1SQ6]8
%SNECelIug#*"]Z4fYQ$"R<^c:!+*nCC'RO)+p0XEj4jYXE=p'ue+ju[4$:h0+;+k6cCN6n/@EIL\HB$QM(`9"%M3o'[KEAt\MLYR
%h!$Y:Nu!W_HNMW:VrPaUhVI/G!@Z@QmG-qto-!h=Z]T4p"E9tp!L.X1eVe(ASNB))r=.p"5ru4%\\im<"0!>(5Up-X_SH>Y[Ft;j
%"%5Vq%NZa-:>Z9e^h&T#4F"g9hO"jaaq./^j)FJfjSPr!4I?ZdDCig8-\ts:T0.Z!_!XWBl%GWj'Vh?[:ciqN\+1fG-P)<qFU-sK
%'9IY5"E9tq)mkfa85]m!-dVPPq7J;YT3jkXa[Rb)?H'eO'0n^2\<a!e0b5D0)njPOq#a;$D*<AZO`[oc?TF/A5(@*HAr=Q^mW*UR
%!>)0TI/nE(6E=S3",MOpB"T-L>[):Q%0mFj9'@pK!)`0i.LnRk.%?18&e6#riSO;06qO"C%aYD#fgej=pDL>(4bVH7IGsQ)@Rj.`
%[R5ima`nGA#`54p,=cpK&M+MTbl,u-`/@>MjRa/'**u:gFZY9WAgWPE;i"@(#H44\>UNHo-U!/O8?V<W&D)s+oQgjAZ=s.DViY`W
%FWWqS,4-3S1:e!jDe]4H"k:F\>i*g:4N8R>MY_Mdli]j`.6X0Yb0WEW]\=7#.57snSO$MAnP7XlP&aouHjP0FmPdBJapn\W*?_Bk
%V_0]nr-_/!pl.P-r,@MI3lt&4'Hh6>s.P*f=\,t%k81@qi)9tNprJ3F?";GMrLIHB+!SoW-n&06IB%)?+]K8`LFi<hM$&6=KYJ'o
%4F,ts1l;`J_mnh<q$<N`mUWq3='kWTpM%2NFq(R1atMr'abA_HF@@C[Ns)HjJKr<:FrQIt$g%M%Uk:/;V0'O=Z%R3HJ_Mfb=W[oT
%>P*[\dcHSs/OMd$;J%0bq?smVp8=_NJRFp=&*-(Z#(EPHA>Tlm+o4P4%1nF(UPr1j!aQ!qlh3-n$ir_O<=THKn4W"%7!N.SkQ'Q.
%FW['R]M>P1:4;BdTIRL'0>*2^0sBnY+QS*\-29T3X15\!)lI!dnJS'"59\gUfMkYTMp;HWFOJntLVmXl(D"<^-sofLl.;c75nV6'
%EpB?NQPC_m'rtfh+]U73.p#L&l];]A\AiKu7`TcBO`d&14-Q\4XOX]0"^[_0WY(@q]SrbiI%$Qc%PZ]@@FPc-<&0fEO)W0#)5V;Q
%Ta?ifi\33!4#42eJ5p&Ts4F>@Ul]f)M=\t*A7d/s:Y%pe9G6bFi27+eleaT?fnGjtTAiUGFUM4?m1R`)7sp6D(;3g!jfF<*eRsLk
%f,agaj7:TA8%-Hd!3aqD_!1ap/'(*92__Nu3FUiV791eP2Thn>&t-FO=sjm0S3MSU8T=;riWO5X6HTBJA,jh>3i*dt'>V:Pa/3tl
%ksc=a=slRT(,oDE&TP<X>,NU;5jK-2pa""@FO8^)6rL"RA1??ehD"#"8oOUZ,gPmF!SQ?N^`n4lTrNH^4BeQH_'dSjA_L>aF*+!D
%q=0G45(UQ7i6ME^b&Cm6Fs6M.c0D+/2<B+HAr-]&<d)J3?iC=_,3Q&Q:A.J!cK]N0'3Lg!'Nq!n!$fAuX-62XRKt=BZVr!M^u5D?
%lp_5A-#^+U'gs0[$/631-*.)ZFTSQ%&#H@&m_)o>Pb$@HZ`;<dlF[\B:qJB^:@A/*.9OIP`*lYK^V,h;C2)P+:.%4-e[^SUX4,BX
%Vfe`Q1pocIF^F^..tQ9.@l97[Bq<j%cU0$>][^AU3Sc-hPIfFDmNje(,+/7g'0G<S8nAYtM)9?c!lr]>:EXg%V0Mi0:!,"5WKPL0
%7OYg6"K+:5aic5]54UfJ3a(2J"b`58q?o\fr1fh;GpP2KDf-qE\5]!'VRfCZc#Q`E!N]Nb[F9Y%UisaUo)9)O^@"b`"B)jQ8Q@iN
%cL@]SU8.>FJ_CF+?CS/lC+$e^j2<@%B4!q%TQaimRO]gB4/!J<:YhG0L3t2OEu-WE-e,'DkGEE3bb*,).iD.5R%9=KTtD;MP;e-V
%qZDg6$Z@Ajh"[::Gjp.rO=<;^:S;_(VXa6XR3Tb_S_.b)*LkbSKh&7c:@7CicVl$cK\;#<?-5ed[BnV@gV/99aZVSB[&KVK-FkUj
%fSR?\_WqkkSH*C$Eai[Z,?uagf]gI)&3E66-$HRD]'C<?PA46+:@oj;PMJKUFshHR5L7?,*i?ef*4c-A#LXSDSn6(2'P.1<eltfg
%35?oHP=mgAPLp0Q:7n$.a_SbY"0iMq7,-@a6""(lDSda0igEOe)t3(miKUR'SJ:?H!jNE[V2QLo+(?1->5ur,FPg+h+Ee[oM8[\A
%9Sf6)Wd_8c4+X>?`o_5LB^Wdt+Ehf!Yan0kk7]+$dR!m7;&su?4A-:Q#A'4$"7gq$AWt3#eql)%QOg3MUFDJXX6M4;fOB!j+`sg.
%dLVnPn5Pg*_D`t8$-Z-L,I93(<_8OLIcXb)h,$^UkcM'I_Zt$dJ+gm(E'c]KJDONNBCD*]L\KT%bWepd:LJ16dr!T0>!BN]Hd=#4
%)u*1q`"%fX(^IG^\lC#!@cKt[QVHg'Z2R.#-WfD0!jNE`[ug`sPG`7t5+`EKY9XEu2R2kJpVR9T:=s_H%aQJF_C1(P2mF#%>\K)K
%Bn(U6Z#c6d@OEYO2=NZ1,f*tTOk30g&8'h`R8@W0[D2cWZSqQ<dDjlbY>[&tfA+;>WmIMY?718hS!2jM?H]tZS=A+:jLUR"8mWm)
%O"!.:Q+Tl&neueVbP@N6OE=eV,u(/i3j4a*!-^KeF`QHbZ"]c7"M<.^BHlISG(8nVFil_B**f)HNdLo91DEc.-Q=V4dODe,mO9TQ
%n<)NU2V2_^/uL*)A/.2#;t1/^:7nkb#?V);;`*Gnrd6AhceE42q$$[?GL?o$5+W!M0+fRUi`g;[CMn/?^NZW((qGhTZ``TS::]AD
%FcJMF:EXk9@S6(L^,E.!fq#3+)4+Rb<[gLPbY@PjRk5o=kadsOd@>'a]'b_+kIgV]PiPm:k'$m+,6`gBf=NAC9?tqL$iF*S@Ql1@
%S<=3Ak5^i.12_[kp:a1VVaBn6Z<*'q'0IqmfWtmU<3t`p"A_BKJ`%D=$,I:tpm`cE4QX"[1FrAu?6neCr(^oopQ,W/-Zu*CHs\%A
%M@DBr4>.qS42V^53bR?>H'(bU*2WT?;Q6pX"/80ZH'@Ha?be=LB@%AP_p`]rB6]lF\/ClB<SZ@q;\_64do=9g0id`HTdjr7Vl>QC
%i>GV6c1!PiEAK^O$/>s8TIXo7B.PA_Rs(`JL1ejJ2jlJcM@N*=_<I"V0UnW!TJJ$&3H;oIe7!`@?.Er_VQ3&h@S5)M;RJQcU@o=*
%ge(c6R-J^co;_85Dqqpu;';X6kX<P^;rLW/g6HZ'G!_%RTs%)F%,V_[rRh5$d0Wh;#^VDKTWMQb*Stq21Aekh.N4rNS8@;3#"A'/
%^&8/LE]euG\2g.T-T]/oeATW$$u4d6Gab)2)4m]PDMDe#'0!hXeATW$1c98/4G0*4)4m]PDMG'gJ=GL8'ZJ>dgr562WLDfnGQpl^
%'0Jufga#Tm'ci.B@K<mCG_"9ZS`+;:U(]Ya[cdiif+sA(l,o_64JT4G"A`)7S`&bdU(]Ya[cdiif+sq8C"f<Q4/97Jr(biZNSiu(
%TX,-'ZKN:S?-HEBXt2WY1Fe;Xo5nQkWLBt@#%T6B!SkiW!S0O,FCjuXnU+XYeB^5M@!P4)0gO5$S`T*>U9ctWQKTkqf+OY9l2'9l
%hPMV\bO[.%49DB+3mBHqM9b^7/^\j8XsH-T1MVclo5lS3M4Ujr3mf`uM,*\b/^a?^Xs?KPFMs/U'ld``+`=0TBo&8C))T:VoJ@"s
%1HeJ,gJ#qd+`=0T(GhqdBo&8C\M_<"oJ@"s'0T&WgdKJ]+`=0TBo&8DBe&,>H3P,3WLg7:\j39Ik^RODn0u@AYL"6=ZZ`uqi.6;W
%,FQZ+0]%Ae;L59\"-MnQetDk)VT&uj3='Ui3g.J2l3UM=Jn5]P>nK@9a?[s>+O0\:9/=\4gl8n,gA#aiA7:"Zr7&>((&99('3<d*
%,/4514KBV&/u6'7@LWfl6U"-6A9O#>$o[T%SQZSI+do#Sk]i^l5jZWn^dj$A7]If]Mak<GMo^u#o:q7>!Pu[<5b\LNE2XAZa/Wk?
%(\0a%-P&bqK]5>s`/leb7R37e,$3Z:T%`!dT&W0m6K#>\R;Ojj2bd&iO5rR5WpC(s>EMad,ER=oC)p4^"/Gm]0_\sEC^@USA,pnV
%+H1`KabLaP/-,9Niid_#i4CBKk/Y=9YUbI\]HY[#.(7'/`VO5:8lt$h+pj;WDT`[U&>)<AJHSW'.k*JA77:cTJ#Asbg!9[o$,0&#
%V?88kPl,^+T$PT;qK^+*c]e"bcG8PZ<hNoXNBnWEOuT$uDV:,J`@SXl[FmRh)*8LE'IoY)'("UPK*`W0:.-IfM$lX)brYsehU.WE
%GqU1Z%2;F3-TG+BYuCFPKS9Fn7l_\.mSfZ:)KKi&;N,%KS66;3?.W!M<:NaoD(3I3`@;JYd$Wcs8((^/H?XD:@L05Y2<T5laAd.W
%)4*';.TI7;]Lc8q1]:o?`F*aP^oD8Q;RhEd>t5da7KZVo><U.<-B:EGC[,WU=G`tZBa>upP9J=,M+5bgOcNrlee0:K@s>o3S!CaI
%>nsh%G't^nHU/2&2GV3ub6Y?uJM=I;D<"<i#W_';[,mG?Jg6q`q0A+`T6JKsSkF3C,io7%9/B2%En"N[?-5;sQXQIX3QJmIgYqZ&
%_.I9fZA)o.5\=$W>52KmNf)6OPhH>'R0J63c2hH"((;rkd!De/7u:Xo:+t+N1rjpB#4\28LhN`U*lX8A"i./b@0IDbk1IqM:W0P@
%SmY`MLLUJ(GA!KX90S`M#AXmu(]d[ZKVQp3M,^=Yd3m?SrLrR/YuiAHIkmgb!&2A_h&:pD$3-LIdNF@/$$5[=(QKmG2tL7ZO!dkJ
%btI'a0gc+^8[N;@P+81rAI'RC^sD$Y4H47,L:i+^RUVO&m*fV(%ckSQVe[\=jj[c<81-tY+`*2*<8U)(EoHgSYR-Gl8?s%kZZ?>(
%ni<91jrdB76>+52#%HF8f7Y\L>7B67MYn_"qpgt\MZDU!PQRsHVB#C;Z'1b%"@r!,RW@":O=X7"%=kJC*L8QbYA<r!P6*nEO@b6:
%!V1R7SP7ft`["/H2&F0bZaD@Abfj33UEa9k#/Z:^nqtluHdimQlnC1CU>\/-5AXTaZ'_I/"#l2cS5H::K4g\B!^[><6]u/H=iq_Q
%")"*d`H=:/2pXC],^p2U&5Id\GltH:Od)3UJq@)k8fq\F:a#MK/CI&UH/LTZn]i6b8=fmejXcYQL&D5^YBo8R,PI`S3Y<BHLI3e=
%-Xp'an&K+E;n?oO)D`BK#VM0=bOKA,eggc43A/Ro2B)f](:rF07,ZL!5cg3K\_49Akmg<#^l-_-.OjE)cW*9LLre`P8!(>Bm`_cH
%b$uY8jI>XugiF=\lmsSdB3n3Q`d'\.4<r%p6X)F0FEJ[&fg\IdR^RtE#;R0ES68rrPp/8E.3GC`,e6;8(C=1heNt571sbP&:isR?
%U`3Ls-A0./O$u;jgp[4/_-=@%U<EJ:5cE4[-s"DI5MCe&G?GWsJ\dAc?#uqVMp,pRLKNPQ-c9AM?>^Ni9r.i2Z%AMpnp[2-[O_pX
%@4!9*LRKe!#19IN,?,\\#'Ec,T!u!B5gfsMCT*])$&J5eb1?;a]'%RO^+Vc="QO8QQ;109!4(;`,"=HWW/$Ei7rsW`nWA9HYO:dR
%BTM"k-<WMrON9r%5pXi>W"H#jY.fD?oi0]=1KW(RF9@9BX2Wp^=Sdn^'Ti:L!S#L'<TsL<(ABeDNp1Y=cKg^KD^=mN/esm7cfm'N
%)\e&dpsmN9*NG5jN+'OCPiN3@&0<Q:c-jcE8@=Zd9KM$Tb2;BY;!%J"7&8$?R/QS(L^oHEKNkWo#TLu,]];'!+)8PCiGXC`?Xicc
%?`:b1)7XP-%I.TlJJn`0\se&!_Gg,1!-7<9,;V4983$K,TlVY-hrc$$:e;5OLkpsc"@^aJ<?dF-72O\10p1kUH'/.%NI1%<;39,3
%PN4/OXIZ0`hd/B'6EcM]m3KAMn$Soid'.ZpZI_hOFmXj^FR=_spY#ooe$TiMYA5M5j'Fg6&ljt"PD!5!dt"#^\prR'PTJb(qu$ur
%`'[pV11g=G_Pd<m8EaG2pHq9R,\T9U.NYDbo:NKQIfoA(kqjtEe61BhQQuh@N70)0Us_2-OpcT5#H;WVicZ\9E^>ca!7Ku17gEb!
%GIf'''!lD_,_<aW'M@8YCN4L*Utik6g2'>N5(P;2'I-hF8Cn'fQB^-m2/'p!nlFH^#*ZBPC\>N0I"4OC1iRpFFf_VImNN2g]'k1j
%7S[tB,`pe&8CgaK#=q&R;&(nA+"`XFG76(=A40D]HkH+sn;W<Q,$WL2K.XW`CV7Sk^X3jYDA^Q:pK!-4qh$f25C6m$32%B6^sLjX
%kKk`MNj1HOSML4176ZhcGtb\u1J+mVT=5R0)u+V"rZ0/q=(2_*p@8>tYGE,&-P2`Fipm6H%ri9Vnh`7tXj6^N/^Amgg&s*PeMW?9
%aQr)q2?@PsZ8BtrC/u!#3d_rSH]GK?&.ViU0g;c8g'#lDN-29tC*`U[RYJda@<LHE*FAFjZhl$S!^AH*;dOi>?*)&Q41g>U6sMu%
%-t40s&kS-9qLT"OP%Cu3DG//;0W[m.'JE!J>a8^Ob$Dr79#feXTm@i'MMdr)8PuWYelSb$qY*Cr5<FHP3jC02?%s,CTOZ#Q5'H++
%b4[cKKaH=7Mr7A6j21^tCVPE*4,&n:0t6_,r/VJ>`"]I%/KS%N6U[P,rr?jan'gM[am=nog&NUi^2?U8#TIk1PM.(CoVmeP$9q,8
%B].AFTU%#2<r%ljbJ=1JQEtaF+2]5:2?uXroH[;BJM<.N,Q(tNK?u6jLk!jP<ep1G##aOG4i%6`Om9iF^(@!YaD\Flo*'@`'36=E
%We3YY'RpT(OU\=Ra,2?Y9Z9XG=%QjW=fNYY>ZkkFj3$r1]Yl!m9+hTgr=:d-Piag02KV+-U(f:=NR]%"EJdJh])+LBa);g(5.ER[
%R7%=L9pQp]EQPV5q%&m[Pm3Aek`:G$]*&b!58M?Uk_Ms8R#8OY<T?-,EE5Bbb;5,_eV!e!Q(^dh`Q]\J>o`,2U6G,(PV\f;T*OTG
%5d"fgo/D-#T?k]LqK^,OTRq:g0$)[obo>se$nB/0-Dif/c+.NC2Rf!U,\@MHN+-.WAYO7i(_'opX%.$b`3a="@UQgjhb^oSGACr@
%1ljbL67"mD0EY61\mA,kq-73K36ekaT8O5gke.><\Dn+EHnEe"U^6XB(Lh-!L`[k9/f&<:/fqh%[bB@J6J,)PQMBf)"p<C9RTT`-
%1'=C)pu+QaaAQJ!cjq+<-,<0m,U'Q$+k7/Fi\#OQ-oUaH.`5N9NK-4%1J)$kSPs.JA:pEl?.I]7]mg&sHG@#2XS]/Xbuuq9q:R%R
%'AGM$YKA/H$\OSoZ<Dmmkq-*TVsN4Oi,F-OK_X^NHP0;:\TJlW7ZZ=0O:ii5!Fu>TirCidj?A*Q+Lr"*,=ij\O:`c:!&B#!*^E2T
%4:WJY8+$K#aH?@10ll>p!#[dP'N9&55(Is(WUp;6fTH%2Ee^>25T:"7cj%AgZp?d(S/pi!OOGH7!T`lD5Ce\6km*=!,NAgcoLM2s
%S0$o"OOGH7!T`lD5Cf7Fkm*=A,NAgcr('&&N$%:3Mt?W$!Ta/L0BW1'5Cf7G)%RkQ8,<8I*(N5D2A-Lm%>Fs5K";GN+mB6YF8^Jm
%f$r#-p1-_6o>dN<@hJ!QLRgZTOGr@`1F2qsEJC82/:5=Qq;Vn*=A1U`4+NhE)%Rj&8GWAJ$qW[6S08a\+D47!!TXAT5Cf7H)%Ri;
%8D4)T1e0c\*!ce2A)RE.bRPcU8+$K#plWStAGjMs!#\"AT.J!C4:WLo8+'j/O5'u%nKX(sa9[t+!&B/e5(JS7H(7,hORs4-plU",
%)*ROMJXdeG-]gop*C0L?5CX_0r::9[l/V:RUKrJi]:sZ[g*Ohd)g]TP/jZ9S<XFrc<j3HfGXo)4S3X@cH3"_*AT1,P?8N,>GSteE
%lk8Y2G<RfV&F'$"+l3_(4GHB7L'`J*Gi6R%!SG[o,"jMcS";GoE_Wc3CbXX;V8=$FfM)Rm-e,RX_t'XMbI'F<&$4TgA]RKRI348N
%dLVF`q,e<6qaZ!F'f`cnj$Dn?)Ap=-DW:k6M.""cirgf^294U+?<F@<q]IXi!suk>JuH(=CEY/$pI)qa4+]4KYppX-d%Cnjm$>l8
%m^gZqrk`N@+PUa$n0`h(2"A97IKPWI@5&n*Z;=WIP&)%Vc=kce:miur9PGUe,Wlj`F'Zp;+kI0F8'<.d*fUe0BC8AHWlf#rGg&10
%DX[6193$J>'t'oh2qP4p'Gg/&d&]RSPuA=0O,1L#PEBIM"qk_D$f8WUo!VW7e?XRG!_5UQZ*+q+Ck#2J!_L3^*L]fg%UWmg%s$m"
%c:-s.c<'d-,/uKRo.edM+ZO3/3,ABN'@\oS%/jiFUU4KS_1*Ea0g8=Wg$n*h2)HMKX6fo=piFqQnp"iP$O>f6+5N2Khn(iqL/1e0
%(a$`VpjbikoO47u!3m[g@$?97ACWT3X9UG>Up%[;n=6"%nF)Gn]<1i7s&$cEn#2f'Qi4#J'g05(=m'_]o@gaI2WNrZClJ-d:>0Yq
%F^g+6[.?MVgcJ6KQ\R:eHj'\hQ<AmN(1T5-?=RcbXCJ.Z`g6@'p4rEg^:-'6,OR//f@[hq:5;nhb`AM47M+7$2%n%1Squa'a,]E*
%KUR#P6A%(iK(j0I<.qF?FG2C?]u?rta&F#.,RU+T0cl_7!=dhK%Npp6d[2-K0X9eh,DZ?DRQ+5:,lJA-ZNJ=UllS957B-YBiDga?
%hV`f.:++Qp?t8'Ed.^2]PO:(LE)97;4K'THd%#j\!/7Q6Zf$cPT.).:`!LR8LsN\S86e%s@M3cjPd=JUaC8u475jjtJfVHUZ6-i#
%Y8\]p*:(VS)LL9WT>T9?Ys+1jPI;-[XrAUIlu`u(l"h0VFPVV=FPVTSpUU[edWH57Y3RE^iVu^*R2ed.,>2!fd@hl]7W>7fBf;k/
%rNAFqnHDoq[k;T^aT[3Ii/7m6)dk!k^B%pZc54Yf'4s"V5DS(0`8?s(EE81BKUGN9':?le!].[\mr-8E9DiKCon!(AE01X.b>7L#
%1/["PSWN%P[8gCW-lpU/E4QV,SBiFM/sONBRc/?cS8LD'q2pJ]moWM$"Or.2`!\F)lJgiPY*^]1/u4q?,+pQQcZj)bEWLeTR>KAo
%l9_QWUs6@IZ@d\=:psjo1#+M:<H/$FW"UY5J3$UC:hQL(l6^L=rj\ado':(Ge;]&GY,,`Ya=S(Rfoql@g9QhAU]ThA4Sd.)A+=Xa
%->:SI\kj)h(%HBkeN($84C)X@]lZYC`7'G2H*QY$JShIB>b&P4e:h"_+VdiJjCXgZ]-?>\:"-Op<7PU"<f`3H[#N?XZ4Tiubm<I"
%T/;)0UgY76O,r'fL!uS>.%3o"K'B(R/6rTo\fFH<X6[F4FJnkWNCeUXL+b<JcErV.b?fja-RsCSIl[5cT81k6?$j#V_U4Z$]5@2$
%SnVbpSDS0OdcE:T5e;>Za\laoh-CPjQCTOfmQn2C#eUSAH`C4:!h0[q40)Rs33*52AUCGcdZJXF<&E`D!)kf"9_=cI5Aoo?Bob'5
%m\nA[=`QsZS[6aQ0W$:^cG]KWEVFD6+Om*,H(GlrBVBNnNOe\3:qCQ+MNY"`kLcY.\n$jWUdghB/rsitQnFUqepDR*;X\jCr^m=B
%jb$<u+bT$F)J5=P+;R_=NF]4(c4'`q5#X7iNi(!S[<6lQfXbO'NoD'h=IG9#,4Bj82au\I^Dc_@]CsF#O;?#&#`7a*5tF-d%moQl
%ab,\$:*,)<F7LHLSsqhJWTW>.83J=26L$Qi+_71.#pJo1gncdP9bu6HkA6X54=:A#lFG#f#f+f<^k:$b.%($>HF9XKQr`Xme8o^R
%k+4C+@Hol,%o^fjI[GE+m>%+mBKsR#8,$HS3HH8hStl0:nJpA?RHN@RR!F_[_p!0Y(?Rl'qdJVID2-8UoH.\:F8o\23Vj9^.N4B_
%F!-<O5n`-BbWSH,qUp!t?b4_`]Cn>VS9^2QGS'Jl_1S+uc96ttkNG3&4%FMb>>>]<g,X#)Zu\&IVO_cA@bNi2&C\qPKU?r.9o*NH
%BL5BS7i,Xg3HlXDSYHQIFW=].'tB>^F!6BZ+_7.=$R+cij?cBu-Po+t3Va&Gc:p4H8`utQb-U>!83/]?&@0U'KogFP/qg<IP7&Q"
%S8>.1cH1d%F`)4CAt>\)WD16`UmMPgCsMM<g+R=G5a+l4g`T:Hg`S^Mgn8qS\3YA$\3YA$\3]^/EJ*a'JV3G7Z%MTiTnDhWTnDhN
%TnDJo63jn9cp?<Gcp=u]TnBQmiIC>?;e/9Cb)%H"X[qXuX@VQJX@VCpXGGqF4-@<EF!?0fE$BjcYTeXNZ6F:@YTe(>YTe(>Ajt\`
%@7B5]@53Adb_a7IC,9g]E$B:Sk!\25iC%/Ti'aH`M+j-IRFk7[D@fS8ZhqCapSdgfknc0)(R!8p6tWYd8B@HLOH;bQOH;c<bB14%
%6:(ma=WrF%+<cAL5sbca5sbca5sbe#JqOQLK#A)7K#A(d"c4+M"d/b9"1cb_,Y@t[XmJX&@,$a(6*hXVK<QF@K.n&aK4[>7#(8;?
%:8Rmp))V4&1'mah1'mb#12-)#A.\/RAe=Y\B[H*9clh[FNNq;0K$<Cj,CY--r^6t8H:SImH9_neH:SIUooL#dooL#dooL#4lQIuR
%lQJ#SlQJ-!ejF,4ejF,4SjI,;XbY8r2?Pd,lQJ+KejF,4ejJqfeg&/88"s.IMe,&)#&-5R#0hJ8%+9I;%)R=H%(c*C)5Qp:)5Qp:
%))UY&0hCUR0hCUR1$I1U@Z].C@Z[0JIa,!M`#pu`0hCUR1$I1U@Z]/.lAsL@`N2S(=cYsQ%uESUc]@McqV@q'?_sC)TK*Ms(_:=H
%3"KF`G94VQF<8;NZkU:.F<8;N^0-F6YTCZ5DEWXVBg%+QBg%+Qh0K>7dX"FldX"Fl](M.#V"K97U\0uSl_.k?6OhU6=qK7P=O=1*
%YTU''YTQ)_Yb522@6nc8=HM*$=O=1*YTU''YTU''Yb6=R@6o2MBgI%UEC'=?ie$eD1e1XYr\ir-g[P*0@^+cUKu>NDe?E=.\;eVL
%"+9Q'`M,=kJnQRe1-j;/WpHs&VN/k6Ls4W.4UKlWM)&ma]b7%I+FBbLbML9*qTEkrbU0iA4g$MK"r@=j5V72X7*>``.PFVF.)1AY
%Wk`O"nQqY+h!.MO\i5"\,I_8t@(RqaBe\J<^:H"fCY9%Celf2I$[)(nW=iE*V7ZG*=ZN/PStONR"$R7t9AE;%E](,4FZ.gnd\PcY
%gst#YHb"<_l_hkJ[F=gr%*>QN^L)]HFe+B;RLS'?`V.LQJR,1P%\9GkQX`41&?i68<9KZ@$rN6sq5%1n?]%XSJUO?.Fo"85_)a/1
%#G!jrQ**oYIo:g?oCLA=QoUjMZM+:K\c*6A>GP4-?/&<,K$GcGYLX6uQHIg2:h!m5,qrh*g>gZO68!-4@uVhRZ]f`9m\YE3KMI`:
%/kSV]n\U;GeE987Rt";3G]@2>^`-(I"3Qf<jm3+6FcB4(NAP5"H&-ATiraDd/N5CW[o[mQb*3si\lL`"=t,H7d\QNp@nOt+6<lSW
%>U;$1Aa+kkoo]i^GJ)8k+lDYNUMj?a=\:M"PYR(*BreOA<sGs;CSuB7=-W)%/ie!FAVO&1Y=?NPG-&sVqB?_GWq:[_-O,LT.1[('
%Aa/X0p3io%?*-1Q&G=MFP!^sqG);hd[s#W`S41A/^:SEtA[8<l52TWTcigP<$QJVm3-)W3?Fi8"/II4JV7J<7R>-;4PM*dZfia:m
%P`N(KK"rp9*2emt^A:-+<S,Th]<W-RR@^Ur8(NkQTG^Aj2e!-T>@l'4<0jFc9V9-B<C"/8+:VD.9;W<V)k;t-SbqqE;,]9UX*c"[
%Z0\6Uf="iEZ1t>T$C#P`\[iUOFI\WDX-Rb7>dE_WBCS<[q(L+DOjGUUJ-2e8ipAZ1K$&T9Go$2j!t*ac1=b)0C(T:1=XFWdnRnmH
%e_OoAIIs(da8r.&g6e+a8nN8m%,0]D<KcrMoo!JEPcjSj0al^<69"d@lRV6j4I8[t[H6`!(=eJL6CG#/T40<(!7fgfDcY6f>KiFo
%Vph9/FmRH';*3#[ReX_"DuE`8i:F6uA\Q?oOsk^29Q\qaQ.EkGqqJpcQT3LrNa>lqh,OY==GY0na"kG%7uU&#<St\]\PEir<<bEH
%->*EiJ_s9*TUZ^]jYcRg%lC?i]Og'o(.N65N/PV`"\s`<,<kDnLN7Uhbc1aRjn0^r"2+:hYDL4JV$g/^G4YKQ,rr$9Q;H.d<J@Ju
%Dk?>E(:=MIl@M_"El8YVo7T.g&+t30h<&'<Y-W?5M&i#Xdn`0n$r>KRb/5Y'$h6B:6/,X+@';$_**k:_hm!`3NYq(HeH$/-@DA&c
%/\f6B-uuM6l%Kn+E\(5XGf-J-i$P0.YdUPm^ki4Xof%BgIaA3o#<5P9a3+I$1%JYsX?6SVV'ngtnr6=TMcY="<#so\Xa;(iaoH@B
%T9'%\<WN[^(J%X334djbGET$Ho;M?8Gg-uUYXP_DXCI5CRp0F)*q^A^iO@5o\^oZF=]YX,6`oZ=<WUKQ]RUuF(#V3Z!1d3q3)BNW
%Wt/e>`CJR_Qu=Q#J&GT@<>FGQZM&1$n1sFUNAAaY"?<3ZMpk]=i(unpjN[0)#ea;JUV9_[s5fBSc=fqioB-B'<t4(IVsV$rp1Tuj
%g,4ni,QiZ>97/47m/)Qo)q0S'K^/Hp-P<=%Dq<Y1F+%e^Yj9-4RTJ<3moPADIB33N*Qkg6V<))`;cs<_#8`^=B2R\"k9dH]EV)Um
%4u+bQ3OiSM!)E&DXQXTZM!_]aKiNE1$?.'c5&6sqY_YFmbLF%%nU=<G_,lY*D:V^;omY:gJFa1O*Z<l!j!;WJh)rj\B1$"n6G9]6
%E'@CJ<_s"qdsX$mN_9,%N@ste8rNm94-J6+`qtPd\Z%G)<#OVrX"1.ZE(j""_6^($^cBSTik1Rr@k;ER]ZLg3q'E>VqrX3D`)Qt#
%&@28u.`sVq?'XN:Fau8pgSjDs<<p#HI+>`)Fb$1X\5II"[2J60B+hG^CnQ$5XcM-eU?Va!<,Qfkm&C/X[+d>.`E3WLdI1[/W]</3
%$rqfk.bqZFE)0[l)0"t5#b5#<mB-haGiKY>Noo#P2i`X#)K!,UPk\"fm6kkRUE,7NN\1?O\S1#:g#kXpZp;Ci!7u90D4IfAR>n:^
%j*X'SRhGsC]LUI[nqY#?pEclDLc0/0jfgHu!c+=0dedISnWoef=<G"Sj7&(=7K)&CHIm>DRk%bUlK),f?IguGei77la1.*d%Q&/i
%KGqmXiM3c$`>WAjlB8g!)Wu8!S&*,7DK)c`C\H7$X+QQmNk%h/TGD;_s4D3eV$.gY!S6(/j(Qt56KMU7j&EH>>Y3L+c?SDaJMkHZ
%%d@&A,9gp)NPHImKh/;M]b$#Xc8Wg\I>nZuY<5iU(m!We>VVi%He,e(K/F-CXcrV7DdM<^e,'[G2f?:i$H>!q`\F3^)^S2sG7[C:
%`c89\8P6U>j1$](fSqi0S%e=#ecWu4qaSODk7i)E`Z%Fkk`!^ENT9d$L=M2fMDhn"_cscnro5ukUoM*rjRRVR2i_5T-:YXf[/GDX
%C;TpueW4.f>8_ppQ+j"HB8be9N\3$N@P20t38UC46Y"G2*+tU&fTV1Pc?Vh<fL[&m<DUOfPa<'(g'ko>/.`lK0]G(3a8"TbEoIp7
%/.oo_+6YD=,*'.1C<U'nh.ufAQK'a[G`-*Yq_7"hRO81N5TE:@hfltrj&Q";[TU^VqYJd5hg^H3,KK4>A<,nAA<,E"80#5POZ93K
%OZ93KOZ7M+,&p9u,&p9u,&us=7-'_)7-#1+e&8NE&:e8.!T'1r7,HR%LqGHJ#hUh*Lk9m`27"E?E$4_kE$4/[DF*?CBgLg>BgDl^
%h1>nP_h,ZCdt,RZ])rX)L'*PsV?;r>FpB409Eub[9QMBTl4ueE=IXk#V?`5BFq5d89Fi='9G<Ru/gSh\a@/#eif31i^\Z4@>A&9^
%+oXrkh1m8a%hUh!&!8kq+!Pc"*s-LWLXBrt+!Pd-c+k=JLr^RJ&Wo)N&Wo)N&Wo(s,9h2&,9h2&-R*Wu:.463:.0&g:*dfK8>8,,
%Mrd?[Np/s-NnoO_*Rfj9*ReLh*P3&;3qf\u\`lMXNnoO_*Rfj9*Rfj9*P2uI3i3XC3i3RQ3d)kpFUTWqUP';k67;W[T\k6TIq$H1
%7,j587-'BOLI</P%uE?%%uE?%%uE>**ti])*ti])*ti^44s]J34s]L)>t3>KS4M!]2Ze%/.hZo><[?fE<[;Q"?=\r;a@*S$M/>al
%Nn]SI*1It*3JJQ:3JJIZ3]8o0FPLaZjqr7ek1K#kcuIg&Qt+d2Qt*HI0upLC1<6U:;6]1P@ZIi6Qt*XgQt(1^0un5XEPl`?;rgCp
%b)Ia1I@us;\C%LooD6n-hVY_JfWdH!Zn`h7a7(6la6#bKNo<@bNo;[8a(7ZuNjW#0a06_,a(@]uNaY<7NaY<7Nm3<s*Q*WM*Q*WM
%*LdLp4,+3,+,1.pO9nLB#J$-9,k)Wd,kBS=8E;KV8E;ML7HC^VON:qh/75Gc5pDB7Jj^ZtJj^ZtJk-rP",T-p",T-p"c5?"$PIa?
%(8TO6%cd["kZ9QhJ(OZfO559+*n,SR*k2*04EgTFGte)YGte)YH0k5lnsK,<nsK,<o%<>bkV;I[kV8T]jK[AK_..?cm[3]8mb$o^
%gbJ2OlnIfsMV4%YZQG%.+*,E++(E9.5NIi=5N%Q956R&'IL%"4I`NPYI`NPAr=D)GrK'+<rK'*aq]U/WqZ1n7?QfdBp-\88Ruoe0
%rK'*aq]U/Wq]S$pqiP@],LPku`U3idNbL^Bqp+M#IsQUrI\OmN5*4KGL`Y#na<%tjO?KK<O?KJCk_>T(O?N<^C>=@<O?Ida+aZo[
%+aZo[+a`SL6hZo@6hZo@6h]1"L[6b_#7N?SLP"1i27"CRb'jU<dsah0]D[gTVZ!$>\!=.Y5'HfHIE]r$+4G[0+1qK55,S:?5,S:?
%5'HrLI8'YaI8'YaII-r#qAB3ap'CQChfPJ4Xn_ipqR_u=e8gR&X&CVE&Xh/Bc"aeMaI'El<m*Yk&T>XdWKqms,`[(HeoHfqdmsF>
%eT-^s`:l&(F3j^4]@Cq_XY1[!nCp&LCEr#?[J8QG6WqVrPd?W)jppM7`S@j=MRdAZn?-M4`SBKY`Z]poB>ii5RZK#?5%;Gp-`'aL
%^V"I]k9$+4mQHEsP'@BNF!#sSogr+;pQ)V_bK?#>$>F=IS;>/>a4AoE=j29srF4lio;h-.lDq7K\W;eg4Qg.lgdf#hD#D8Pk5GsR
%4d3I/X8FC#4Z6;]+#*e&=5N+N/]ZQeE*:HaUFc.SKuI93A'J3Fg^'b3j4A>)SYb-%`4(1V.-2N%S@=^DfLJn7lXnmD5DPS,D9!<:
%:ZA3G:o2r38nL3aeTkKYHIVg&nTQ_^&Y.OgcIL]7Vg`2g@odXm@BRXce_KbJ(Dd"QDgZP;mKDEEbrqZTZYf;.:Z^]ggpJ$"\W8.]
%QG!CNguI=`fNct^7ssprVd.d-5:<mUIESXZHSiF^FHFbI[=+_<j`d\;a,u"?e_EC@4O2t`1QFaX\k-NOY-L"H^sAF3[hS_)GZJG%
%pEW6*4mFE$RX8QiXq:p#gp>HoCtc;P)#$,G]?7\)@$Yj9P]MWL;E8sYVTQG>)o("fT?=^b^p>[QSn`g-"1;H<c@%fTF$Kob8!qIW
%33q[JM>3dPa5)bG\9l&`"l5p[g`&=D<Qc:^Qap1]b_ff+.joD/rbg$M5K$q)1P>5S3c"DEr,ht.`'>"L6B*XlB:\I=SB[3Do,Msu
%6RL:.H"Z!]\7K/#VL-"f.qMN%!k%j[BZRUqKcN=tE3h)qR*'*=-6[BX!s7g0X)rVLRqG\qf/n$nLN5\kFpYk>B+eY4FtS3)4oYDJ
%7I8hsp'SN)1"+<IZO'D'>VN$>`CE\Gk5c"X822>>o2$gSe7C6.q"(Laf5[F`eJ%@JY:H](Iel%^U*sQ4o[4+gr8,[XBX><8lGep/
%G.I#kB:h1G=SVr4nsn%bmb6^sNAVdAZe(DE+X!491)ljFW(2>3K(A,1h4koS`YU2\eP0^gZpIJ.@R*<-!Cr*pI.EYi:Wm/l"\5&)
%S@.C>!5mI4Au^[c1O<^jCcNl!0e*A^S@EVm%]B8KCVR<$g773tXXP)BgicqF#O<m3HY+!J^MZ!]Hk]^;OrHQT.Q<?0YD:hEXqsZF
%TY5N7bp_%kNr\&)h3GZ[RF0`s%\!5&q\B%W/p:3+j%<"('^jSt5.G^Cr$&*"eB@1'8l(kK&(SF!ko7MoWo!+-%jj<C3P#sUeO2T'
%5)DnP),mL^)sN41(Q"H=d30o^S[tE2d4[n-4]`F&mfDaQ>3irD[F_n(meqp>AB3*oqknJ6Y]H/78b1KhWs>8ZE]FB[cRKC]Q^3,F
%9DFGplb(VXWn%2anb&qbq55k+?8pEi5!(AL-WrGDp>mWF-G^T%[4Q,8,:o^iXS^O?cOjZP"(<4BZc_XFfcMu@k3eUoS>KgN_c<Bg
%<&"/e]d#K%bDFclI),LIeF.h^2?ONaX(O&Q*';n@c+cH??CdsG%7\:d0c5T*"EL**%4\,85"\lMq>L(phk'*0&+T+!dr@A[]f@C.
%L,^KKL8_c1Gq6mCl(:=GX@W0CA',\.g6kJmDeemH'En"pg@t4<2]ZK\9%JH.gTDX?VIN<3n+5FYip4.Ys/,*Tjn0_=2@XZK2Q_Ci
%elg#u<&U9OP!nVPO[rYWABLUu%;?@H_iafhfam@#gNiJ0Y]K7<As\n-lT^\QH@"472iYA$Vjm[ZeYaB^3geJY-_Aq)fq1VtC`\d.
%k:?N!l)&Nf])G['CcZ`mpj)e8jdX8KeUB7(]@nTS@N?.q-i[%/+P.pJnG84-Rt`oaS+aJ6Cs5,^U=K&VR+IaeMWpc3M)%^\+$;>N
%ZZ/Z22^-eQU%shN1&;Edc2)]ce+Rjdk3nY8Y(Li?;qF=dAp#,)G#m3\!pHWL%)$=tf0M$'FWFE5F^09t+-+iVa*pija3L`tNh(N@
%*P4^^*Ft\3\dgJja2%[g4EJO,8c1UBr[%Qh3#r[+_"ssfdo6-3`p$&_`bFf=rcZN#`4n*'kAnLCB*93TIR:hceSdAPgfF@VJS2aS
%08%'Fl6ckm<rE/PpTgD.n6GZ[%(@,D>kM<g`jHY&/Gk8)a")leE-i61"g6+#J`h@-ob[mNbC7=DEs:KDkW>.0%PQg*3i)?.`4%>q
%RFo]3_SBsGD\iXrl[Ij/CY`nG#EEpkET"CqGP$$1"4),)AN(15f):O0c[")6g:''2>kYcL"OA.'49gE#?nn&'],%eqh/AefK(k`>
%WFW]5&-M)BTYPW-l'/[Lc^U?&6%NP!O"`Lnr?Q((:Kft8VnfRu-ORMQr-nC1f=12?r^6SmJ`h'pp*8gD0);&5JRcet'R3l!(P!&#
%SkFO'`H]Ff.qcVG^G/5*"n!<E"c`aN;;f"C[kJ[[<skSIc)t0S>juO5\g[(,fJt@!XS@nZa+Bp3E*MiG"l:bY!kIp!@pH@'GP("0
%\#oFnQn*X*J7HPo%!_L?S%YL4n6GK&Wu,fW'8Z`3:1StXf4JF+CX$cV#2If-`.2@B:CMJCX00V_n=2e8A@[m)cR$@'0EsY+r(n)8
%l^OPl&MW-Fo!9[r97EaOamXFpIfCSj%=u,)&H\jD&H\jD&Hd5)+pLdi+pLdi+pRI16jt&16jfGZ6jh_OL_MhNL_Mg3VD3$K,&lJo
%"s>mRL`j5)&4(:3&9r*H&-[+uC1]f^i'@L^ks6T2h1S=NdtC8DdtC8D]*XT&V[3A-LBiqEG7Pl(:(JNU:(JNUmN+b1S/t'4*!SbU
%fh@2E3&^mD:)>)ZmOgm;S1[3qRl2P2Hq9tLOi0mUJ=iTW#lN4o?Ji?Cq[`3U#4>53&Pb_(S5)H^gms6@31U<p3'G9"3h;'H\2FEo
%:+ILnmT)^cS5r#fS5r#fgoZAP33@uV35(+f\9efJE-MslDL.EqoHK.S72"@58:f6J8:eAhOTMEsOTMH(O90V^!X8!r[<'6D8:eAh
%OTMEsOTMEsOTK_[+pC^t!X2=P+pIC@6jfGjUdbYDP%%biX$ON#&HB\ac&.1*_hs8$_heMJRhH)2LD'ssLD'ss2^]4DhG,=+*)7ah
%gmgnT31NMZ3*\oq\9X3-E,>dn*+gH1grr;;36XoQ2r)Igfo_-^,88gnKS%+'`.FI%M$8YXOTgL^M$5h&&do16&e*WO,So/D8Luh0
%8ME+48MIXlP$i5G&n1:<)Ni/4,GF&N#UDD-80k_@O[sHdO_AY-OX]iG'BM_2?Kqa.!`sjCX7s9@oVhM.m2$%G?6lYTLa4sM80k]*
%O[sFNO[sG9b]LU.73]RU=cqVr,*Ceq6mBHU6mBHU6mBI&PNO()@72<U@72<Uc%nc>[h4bcL(Cfp)j2NaP#`nT%NHf@%bs`K*&pV_
%*'!:R*;FJ*)]ZA+L0(E4+`ZFP6K5dh6K5dh6KGr,K>`>YK>`>YKZ&G2$&Jb>$)oej#>(!\rG'@@n(OBV\/PuFE#K9QE#K9bE&So6
%i%uRNi%uRNi,1eJ_-oSS_.c.[_;0W4K%#6@K%!kYK"D&G"kR@:_.c/f_;0VIK@>>VFOPc9QiTc8"-Nol+q.3K+q<rE6lMR""<*d7
%6lOhiLbq(#Lc@@&LbuU\&8?)%&92Y-&92YJ+QD<9+Q22I(;e1*5_QtY&Qs&k&6Ws2+L9o^+S+;E+=Unf'$YqP_LT^Z_gm40T%B;M
%p&;,m7)@]/+MiNJK%#4jK"M&E"fMB^"fJX#mABoF"o$8Vk^W\r"a:%m$VgdJ$VgdJ$gn3e(7YRs(7YRs(>K@T/3"%D6oPRr"<%h/
%1E^FL5U=0[5U=2%J4P:@J4P:@=\+.V!KdNJAg"p(5U=2%J4P:@J4P:@J4P:("-E_a"-E_a"-E_1#9jIL#=<cj!T@tgT-(31rDi]^
%M)rcOO&J`?W&)b!NFeZ;]$apdDn.n:==0nlH2?U(^EFiDFQIigoA<Ibl;5LRb9NF03gHNbML&ZuY&3f[B?*n6"f*j^Fj]lq\DMQ>
%>'X6hl=mTMX`@K\7&6O%@ugY4ZYn4">tdU+MofaI?q-mQ+'N5sL<,%o&P;RV2']',cl('6N?@mL!cE>SY$UVWUX'E($-IBsg2VA/
%Wp*@CL0W[3`=1J[h5p3/[^1OZ3q`8GgFmP^LUa5Nnl4*MVd.a,Q!'`)GUA4>P@+`3Sh%-@o6O[#A\2&g`t)0od!q0:g/"fALJAnO
%9\7q>bL9<aNuMP=ESg,1aumoip6YR3-MoQPrtBQ[Pt4e8,O-r#EE#-Pr1nO)hQu8<+Wq;gMjaK!Q$<H=ja,4M1UBQ&qbUb+Ii26%
%ib-83WGK$poF]5gCn56!U3*(#Nq)(Pg+)P^*GMVt9_:>pE:&%C+i[],MW\Z3/QV8!@KGcLcO>hk9AISp?>Bu-cWtZFhNJe_`N"'B
%l%&NsdN)KTefW=QAir+knTL^+R2[B-E6PaX=`,OscCDTtDGb@9ng$`F\Q"m.\A2W8W:Z+<:j:VEa4KQPae\n5`FD(*q8=a"d8-?+
%?6OKFG^]K/G:^LMr[A&Cnc%*%rt>?97)TfkAY.:TJIS$cDI"<?RBS<pVt2a3Uk$b5#Fil@1!+9e^#YqpQD1+:kY(#BpK:pZB,<Aq
%qfJd,9h`<HXZLafM<15QFRj^LVJAleeHjqikIVT\"gdo\G2;^.^E*:E?5tC@kEC]e^-5YkCOAR1M5RMs'OA/(I<Y$SI0]-UFea(c
%rAa/nqiU+E;g<HM_cU-?pn#Dp.fMfhM?sRMb$a'shA\8mUi,o(`V=o&PcZr1$B=p7;7S$<N;_#nRj38KXNB;2Sg,!`Z[#l*qO'W.
%8!55Q1#BF#6cuIY8"Mm+ok#qgmWGJuCrJ1NCJ91%V'cpAO8<1RVr+It1[SdZiI5#ajF):gPLPcQ^JXepB<baXT#V`_V:2'i>3SZB
%-i:G)bN7&7QM(".gP@:n8g\_>duh4=g@)$.g1b[C[o;a%?rs9:'Yu/FI.j3p_GkCd;[FGNNo,LrIPsf0gPEn@ceTW(*Y$"mh2glR
%>iBh;=LTXgFnm/E^Gt-54K[R*aA9LAQsHDscr(t"kGM$O?&6p0e'Z=5HBb_j!STcOCm3ZY)0lHV\J;"s.aTr?GeEJj;\q`,l,7ed
%d_oWG)iX5UB=47W0aK(>X9@-1_A`jYhU=+6S&O!;X`j'GcXV'`NSoXpRD`4"lKc!6Ostq-I"pD=So1SZl9^a5rr$r4^Vm<Y;EqLN
%$H.-V0#ZdV/PBh,pG%C6\MWH>HpeTffkU5'(Eo+SnEBeJ8]Xot^.;eaHfgO\+fc0b:m1PX+rA,m+;8B4EZsl23eYSN')2hH3@Z[L
%jD;.ljRW*9Koq1]GBG*M2+cK?_o81gn1.GK%)L+p\9Nn!Fnko&h!T"m+W$2(hl8u`V2MFR:>^_02NiE',32)4Z4eMEU1rFk_)BN$
%j*g#Q"j!OJ/=iAQX)Vlc"="5`RYLR]8OBSkc[C\4b8Kf+`/lg^GVO\!<GM5lB+Z=Xi?^t=2JPdcVXIe>52U%Z6g^g[hiM)LFktGS
%h;ZFZKkNg*RJp>m5I'sa*VZd;WM+]g`)<G;o=Vg1W:qCn01milkul%j;0!h?I6U-AV7E1WWTO)*?L=RQOd',-QY/HLaW6H"D'FpO
%G-b1N>YQ?L<ENK8=uS1Z`8\)IN5q*VL6AriLrEpu]<4.SC7ak).62.Og>gtA`T;o*D6'+B:,=f`ph&:?k'VXIR?bF?014[WM(LFj
%]mkj1T=P3Gj`%\FQ5m;Yq8oBX(meacq'\7<#g_1gBS(5'?3\F&Adub6OrkGF`oU=ODl3`und"n1h%GZ>pKind?sJ"sk5tr+fC)D!
%*&WN?V#eaBj0CsoScOF_ftqOs@4R9ZO)(5M]VhrO/bo:"pa6n;q%(8#q%(8#q%(8#pE+?onfMgjnfMgjPQ-/kPQ(WAPQ(WARg]R1
%S.#[2S=HFk\B01<N3d@>N0F,=N18T-?l\"#nMZdG"nNdMAj*#Vo72a_o72agX9W"#X9W"#X9W"#>7[qt=\iOIEZT1>POj<_POj<_
%POj<_S"'^gS=BghS4j*Fempodj(u%kj5`?gj!O3q)COtShBqiV@dYJgm)R*9T:9mqps6.hoD7%5hLC?rfXT%Q>V,mU)^kXd)`RR'
%fJr\&ZZ54a]&gTZ8]9///pOFJ!<IqE$j\PW$j\PW$j\QBA3b\(A3b\(j?S7S-3jS\-O0_#-3nRF%OBFAaMi0Bi,E]Zi,Fk^!Jcj@
%!JclJ!/I$pW,]=]X*/;=&9,/$JUkY[JUkY[JUkX4%KmbH(=Y=6*!eOZj?UN>j?RI8E$/6G5el%Bq[`3M*6o"L3#iA53#qmP31TdT
%BfPr"BfPr"BfPi/dW"h#ic+N3ic+<M`8ToE`8To3`8TL&Lr7nX.onU`Jr%=T"VHNB"d*Jn#FQbL1/TY\M.o>QiFkTSiS9/Y_pO3(
%_pO0/_jLlEL8,+gL8,3?L3":X%7_?]%7_?]%HfW;)NH]Y)NOMX4Nh#d4Ig9>5TF'c5b,FtJN14PTf0KD.<6RFj[,/u/jphB0(c1H
%]tSTgpNQ!P&a'Yb=rIs.3;O/B3;4L-EV(=cEB.sbh<'\lihHE.&NJJT&NI6A,&jn2,&jn2,&hEa7,V`C7,V`C7,ZjLLqqDeJ?mRN
%>_)W@PP;SQejB_'ejB_gXbRH-XbRH-9na.K>7VmeBf!CkV=bCOF6atP8*_<$8*^0YkKZF#Nm9utNn-Q'cE2j5*3D^?Yarf<(sfCO
%qu3bs"i3pA!shZ1dh&$c#8!E[%N%1Y%N%1Y%N)^tG/1o8FtTqp_KGpq9st-0:::61:4<6MDR(9JE4/n:E3^KLE0KYhJtq^`A!?:N
%1#%h([c:iM%N%1Y%N)^tG/1o8G+*uGm=9b/gAq@'gAq@'gAqC8fa\iYfa\iYfa\k/a`bJ8a`a,(PFmBJRVW3CS2LHR-eeY+2q\Zp
%38"d<2VF*)ZQ4m74"cid!/$L&r9Q\P0:hD,?2MIS9s,_?9EuQ->R)8(j>u5Wj>u5WdTCUtaXAM7LB"@6!k&4#D6b14DmCC6DmCC6
%Dj0PgI$<ptI$<ptI%+pWi1"P\!B/Vk$+(^fAillTm/VQum/VR(C^90nC^90nqul6<A33'6Zrs/BZ5oTVPO/?uPO/?uPO/?uRsYJ)
%RsYJ)RsYJ)gZ1F]hrHk4K!69o:"T3gE8P$!Dcop6,Ha_<aIqp_kp.-Gn(6qf8Hu<a0^UnpF[t'*1hZd[-VYu!jpbZHgN8UfY2R&g
%V\8k!Rn]>H;MOA%5PAW^LmiOqkp.N7HBE*[OR'*I.5II:=Ekk#)=a@)\M-&jURP#1@'q[nVGf$R^6Q+jQm1!6;5Q.+Bf_*FXo0t1
%T7!KQlH_FD*Tda)l/[+qrj%aP*QS,glX\_QqIJ$WPORXmR;5]>OZok\/B`/k&`b`K\P?afKNFu8<//V>T3N`WC$sT7lQk,o/bZW:
%:M<u!qbKH1Acd]BnK_U<gW@HWp$<[,PE!%8m^;G8Eh:04pm<8[0i>A8M.o&NN1Nu/&GWjJ]tSWjpE-+W6QJ\j0mV(j%KO"q0[bBT
%qm?19I)ta(I&aB7Vt_k,h<oLR$6cqK"gI#107:*kqdckF]>"KFqdc23a/=$O8sXh+PP\m#\pIbImZVLj&A*+Xb!D!Tr0NT:IbNX-
%pW5m22l#bQ;W'bdb((fn*@QF0k\h[05^BAs8&KoK1@YN2)g\o4pR<(D/mD]K]6l7.0lM6QiR3<5B]\K(3\75h<mFnb<,jGeb1*]4
%%k^?f<)'.FLH6(C_0!CC-lZ-fA]o[?.,X,Oee$Sg-3Z$o]+MgX&:^TCIB#X%ECG0FVc06XG3jUu3GT?`e*/1+EWn>)DmOJf$ZgL"
%Gf:;CV-bcls!V$K3AW8LXR-?-U5P@.[`+c;h8js=\T@SniqpeF!-QV56jp3@>BeuFAK.3=iDdjSO0H[pj4B<kL284P7<>4OlGT[s
%opOIAiJ7K'X`%3:OnH7-Ds0[U1,Gh^pj#`n4/^u)6Im7"7"DftEue2&^bVd&YA2%K"'nJu>S.%BS94mW`ej%%NUo7GVnKO]lmH35
%UE#mDn#Up!T\Qfk=E)sZHE,*-`.(ua\T<jjM9`F]Y@,2Df;P%UHoTZ^Q;@+a07SYWoTQK2+Dpgd$d[K(:euRbSpp2Y!o$K:l1G4N
%4;GV#'.\'>n@Oh4Zu4LE$$_fa2jM-ZY7Z'GF18c%Mq?Fg.n+-6J($ctHdtd8qPe5ZeK"9DK=Mr8^@fbF+/1N6hE?>.Ig2qP^Cok?
%j!0"*(TCT13^tIbb=@co%[:%'[e61dRs!:[44Mpk&GX4^7C?`rSY@:fb^Z*&-\@%!j^'"rfOAC'^@'9tRZHSeG?g`^^q2d7Fl$bJ
%IOe2F$S'q3^EQI&KPOk;btRIB>NopNVN(!nAmP_r.Sjclq;h!-CdUW[`G%aFilZ(ae;:@*1+@3sb4SGJ7oLp);)dh(;ga"?[,C]I
%s6D)(B?0Li=5N(EUK[(Hij,*)A^dlc0=K;Q0b^&1At<J\%X%JH?i2+>>:su&_>-5O//?9O72SJV6uF=Iio%UCn`,9>?*\lK(=.'f
%?efB-be3CmW\msL:=MJVcTB6OST/`qhS-p/qDS&"j(<;?p<=*_[rhN;HOki[SlS=8mX=B`3\-s]#"f7Q&nu!B%bJC_+5uP[;jDF1
%g3W\<'k@1A>0KFJ&F]9Iiqs-M\InHP6aoZsrb>@0])$$ZP&;aL?t?=12J%r774'UOGWh>H1g`qZ]l$f?6#Y28f0%CMq7Qdc"PiP"
%eg("7UI%JL]F*u+f8C388jj?\.iqZITo?:;3;uh_A4M+KN3daEArL$`j6;b5cePTe<F(Y9]PNI0'W<D[]FVEhSFZA\h!4c:n(9"r
%rSQ.]H_:19YA/6;Xh:)q:!+@5HP/jE%Oh'_XjrI'aip)uIg-;4N%g8g$:>=M?:=\?MC+-SIr'8l`B]-_NWT$c%N4&KG$dN&p@q\K
%s*CG9T<>s+kLOGgY9Jh,Z1b\H`XFHOip+ZhJSKBT>0\k,,NhSMY22C]cO9$h>]R9Wi)Vp8CP$@E+^U18NQ[ZJSb5uBZWNf9.QRJU
%-D"RtY#oGqQ/FMSoT+5SQ!E69bTsC"*b./+<r*lh`r^+d=(ji>BjLUUSM^Sqm'EmAWYo',kI'_ZG)pIFTe(O;*/us_)/68FUYXG0
%g+UgP,Y/tKrgEJG5'1Tgp0+)sVR(`P9<k&\EYD')Jg]H!;Ti,ahl8k?jH8jk;GYlhs6H#;d!B-hF%0Z=Y$]7?.*k%gj]XTdMAECA
%omZoPT;QR"+9&DqC*sUsA\(fgY-ICZC9tXG]5ug"Wa"]c$=rn5MPph--L#e?ZeAY(42-F--7:hiingVZ%hA-XF4R;BZ\2QSaF)9;
%c#Gpc"o[Lt+S]45Ec/5SC"NY/d;c(TgpJbr@4TG8?ag)>Q>><PFE?pF,]4Bi,aZF2=h.AY\,F6!$'luO8,$%uQ7KHtAk1HO)3oQC
%F]PcTmc;Ps/SSMBMNXp'n*?oM.$HD_A3sad)"1&Ol:ZCDIbi_NYKe(MC8b@c-Mo'7LA`"KNe(SnWs>r<#HdmeY7b-VUk3Pd6qFLO
%h]!9cMHN4$5ErJn#<L48Pu[AikfFoOHSmLA0ksD=%_O-2q7DTLWZ2&pluW-kW&=6![[7RiJ[8Gp^CGrm4am1KRUiJ3HTnr>`"5#[
%W"4N%f:2^e(GfW6&NtR7FQD(i=u"?,0H6Ct5@Yn3NJ,,D0bH,?`g8*m6tG==/8]?dV:S$NpV[L=1SM:b_)4Vs()%;)RqZiHp`(pn
%gG(6+ijpYUNA2$Mm][1qo6fH:(M:WS`-OjG[hKJVjlJ3/g'f\JnUp^KBnL18\XHGd9LN-/>n@&VXpioh>reX$c($[Ok=o$s(7VfK
%S#;p8Yj1CKg>EMR-Ej(u.pMOY5nWWr^29nS7DpHr]B6K:2=2EF77CH%\uVcc>RK-H]YX9#n?KXBq<_f'b8ZuM^_5)HGG+.POT\lc
%&_X!a8PUAEbG$2f&Y^JD6cG.jW/-fNSR(!?;%Zm2qk'p@+EBm(D\Mt=]IX*cO3F@C@\0o:Rn$FG^1-7Sr9QVNDggpLL\Nq\,2S)a
%BUGM<ip?uM>:V0I*rFctHS%qSeY71/.O#pJbR,("OV>iRZWl;'bMjaoUL*7*'oB%8M7D[Eb#jE+P)/#MGKV"sA,"Yr#ITY`+1IMW
%\.H&]UAM&0M.jh/kHM*+M(:pgcVoh5hm9W4K&Rd>MI9'6d?fVU?u9J4OU+J4cXAO@0m?pLgL;G2%XihPN'n(kbdG)(mH+4W0bR;h
%*[@B'&0hcZ%'#2IaD&n,E(.ON#>rmD?,]@QeDN+q>)^CbCrV]%\E;J&,nJ;[I!mPkE3?!Ym:!t)jM_&N/L'23$9B2r6m_<dlW\^b
%ruq@^,N4*i(^^$N@jL8.N0/'D@ZU`kLd;[C,K<9a+#-6:I`*'0q@R3_glN?t5so+?"J)E",i"Ck,GArc,=+7tN.eeT@jL8-Lio@.
%;(sYtAl_;/:;e7]3Y?uigklpo5q?E+"KdJG&oL-sP+WO58qKgV-jb)A7S1s`(aVHq@[)O-&YgW87#[;%aUm-L.q4`r2FE]3]nfMu
%mR<(tTGK?2JS$1Hgdn0mO[SsVUEo%n^UhbW>G$6A+o[LbE'KKk5@Ti[rJ4;`mRN5!TH>=LJki*<DLTNK$#PEi#oXG/-JX\"1dOK<
%ciaf75ne-,%%;\i0kQ#t`0^jT,fWO)OVmgX8!7>A,gdT'+rlFo'6GM>9Xl<%AqH&]QjJ'J@j]uo&2W9L[=Q5X(c1-2`0^il&n<9P
%8;rsU7q0[F/I=-FF<nk"\0E_?JrZX-#tK#iNqBA@^]+lFN0u@e;To7PM(o\5,K3?D+":k)I\`Wnp*7OMQldbh!e-r4$2BWl-HqMb
%1BB^<bQPRJ0b`\?MODh'Lm`c>.;$FJ8MLm_,R$BIP>%)fR4),lZ#*&u'<ibd9pdL]BEGW\TF&,kJgS^,'K#nm;Ubhc8Pp.598]0g
%/LbE9[\Ti.ZR&%7^m5fp!P8raDm#n7$#PEq$+Q.m-Hq_h2$$cVj9&Z/'Y0B`E[;CRPnZ(V=8LI$?=1:oqn)PPC;Lr^g87iP9>CA#
%+":sAr('Zun0:@r^hN/$bE*E&U!6Vc6qTO=&;Af"Jgb"s$DN%k.>Yk-83mr,7uF!j*@Z`[lpriFYTnlh^l9V\N24RRUpUpdL&tDO
%(^dSn`DF@-'LMnb;%/.]O^]_d1V@=r'e+mSX@P&[YTh%_^krsr@8<U8$94/W-t#K$TeIup$jE_'c*<h\"W5XjG5V?Br>@u]2T-F>
%g(7^ABL@`PE#W6t"`9&]'X/b#:q-rhL4V>%(^et.@jp,e(dgS.@LNG=KeX9Z6]@_cAr*.R%5EUSD29n\ZloW?d"\?`%7rAqOpE"9
%&-Zp,5nn3(%&0C(+c(_.`#oDr+\#>UL)<?F)e'M8gCU,.BL@`QTFEW5_JP*+'XT#O;:&YUp:CbgMLq<PMLmb)-jmF,7T%Ne(^WJI
%P%$<pd;2>tCktq&[%X*tkk1cV]t\>IUF=oO+Do9`>#>uU+\#>=$SdNj0#T.Fg5GC/\IddMI'X_U?pb@&E#W7_"`9&]'so+g<O`Jm
%VuelqQjVOY@k-8g(fN^>6>-L=Lk=:k27"H@YT_"cd"WB9iASWA$JH&$.d/OEWGiec9Ed@B9Ef9h0bnRnN2`HZ0rBO\`0^o++i[L.
%LDWrU+(@otq[d6ekX0$FYT`s>(])O<hd<3u,jUl<Hc.]/Z@c\)0`[0-fXhQ&30*\3$5ADWEq/pbaA@0g'8fuN+c^=g6E\\pA#\T=
%@M?nb3QPlf^=AC'dQYg;6p`#5aaStbh+Y$J\S4S5?tOUWe2+kdLU&"UUn3]=QqHfaKs%>UC/hA]Pq_2(jmO3X@/#&V$ZUT0Z[Ind
%jZ)q7cT<T!+9G1j-[2PCeK%L3GH3MQi;03r-CdF"[aL$K$*5Z7N'>C-XApBiO0"+9?4A&ie'hn`=a4\f4[)?ue%0mqCXXN0A[]7g
%I.RG>717@q\e\CO#p#((n'%t)[dq*W)FT%TN`MC:7m:ePZ[KYsf+g*_CdiJZcBpJJPS3;>>4agXr3X/`'OXi4)P_Vf(5(u+Wh+Le
%E=X@go\re6J"BZ0[SO2HqGf&hPrpp.@n\NGn_I264d9RkDHfOLK"HGo@ge_J0-udi2@Nc[*(i0V-g)2t/:j8D/CVOL>L+V=Hph^'
%kIT6$/^YKB_$'"Lj9$L)/"]j_?A&Y7-KpUABTK_XbBasFHK>e2&]Je00NZQD\BF\23h"b;_sjq]W0@#7d`Su(lW0+sZ.3LG8m\$#
%&8V4@rJst8WH8fU(GotEYkb6BNcS/54ngYDpq`!+b2uc<&bX6NTYae:3;*\6.MfdPHe6.gOQ@].>9\_Yph`Y[`q+0EqDLgWrt(_L
%m_LC<&W@`\C"8XHM#4S[>H90J\EDK"[ii=E%_CO%?_2Ds9+4C3l`Rkgk@a-5c9FOq6Kf@nfbq1t5U6$ZkBtbmh=J6fSC>A'qKX\`
%h7TPp1)qE;V?1Oo)a,YE`A+d.cU%<#):U]FFG'8Yhi"t3P5oHleu'2Lfa4jZ4[8tfhH7Zs[Z+>7KPK`2Ap<EiNC."-W+rmT<ciU#
%g1qfZE:N.dhJoPch;kIuYbltV_V)C6f<lMj0'jR)V(_lIk[36$_tsu7QTq6M24a#^"eof>\j1(rEEnQ]Q$@M`j_5n!6CW=*OGl-"
%2E`XV")`KmPAnJ`NSU7eX&pbkk<*cDqmgbKe&degS$NchEo262f[n`tX14Mm;@i;'ijN12pH<k4WoJ^\Qql\C/G"%nJ@9ShY40"s
%m(6b_l5OEOW;FdP_pdPSo7?EED6!.L$>+V:>K%A^b;@h=RA>=G[;s=%'j+KR6Rq-!,e"L>mfjJ8d]4P2R$:2q49m'ZDYpMG-$eiJ
%E@gd@4B,IAs5LU@(O"krNFOWqN@-s!#$#Z".D-QP4g&!u?[)6`]5*NE3!n.X@Y'Gb%&)b!"J4*`d3Ilqp,qfA@s@_#DiPuS)Qp:J
%9k$";5?'L0s$aA!SJRa'c5k/:Qfq^&^uan[d<.p.Y>NmhrFJQ+-g#IDp7pqaVZ5U\-Pii0h7J[tloHJ:f<I\cf<J[^fAVR[lgW]_
%Fa/c"FdE"J4a!=CM)p[)_NoN;/.?/(Iu_3lM=ga3(Iq\Iro8LY5-Oi'5MG;S9/;^@GEaS#It'QB?XeA;GdchH5m[LonZoS"i-t'!
%c2R&nfL\Wc?=:sF&JrXD(Bti73GXTVE/VI->l,%C]7+9!cDh_*D=t!d9d;&5IrFe&ORJ1BhjI,F)+SfaNH\r0N_nM.qdho:._X`Q
%T@^_YOZK0uRBQ:Y,[6XE:,d5CT?1[**,92FO(,K+k6BZ7BO$YOF0QMJ$3j>M[6O7QUHY:0a,OBi*MIB(kjbFR<1EHH]Bm,8&=68G
%`C#'&B["5YGC@353RZKbm#tdkemm=ab,YQUdG6XuVVa.Zd.Y^n8&LC;eM>9p)HX+0lYN'5dfl/TbEg^<a,\V-d!eaaR:jLZ_)(7!
%irum^C8gH?nND^`;a6WTHgYm'M>q_6a1Gt,2t]4imWgr)m':tmP1b&lHc@7UVI`$e"SBUgklNoDC"YH*n%1Yep!*9:X^?_62acrh
%Wid5;?-NeK0!6g.\@ca7QljVObn=/eh[H1Al>_Q,1N8J)S\$4+HRa<NhcbGWj&=7PhlJ!^7?25&0=mol<Ys1GYj&^8#!.UoN;ZT'
%det!8+a@>W2EGu&/RG+Cb!;)T?4(/F%'FJRIFk9HT%a_s8k/^Q8Hap8PVURME"]?e;K1;A1:JtK<Hlf>OZ-Gk2M;)(alANJ)QdKR
%g2a^uSj_n3^\ZYkid\`%+n>D4Tn9"+iWV64"R(qL?@)%_kR]RbHl>[>,eKhV+U:1_&IunhqN$#mnQq\!&)!&>UKGHhA10Epc%6C]
%RrB]R!]D=\N"ZL@)Zg2]6@NOuAme!c(U&QDM@HiB"L0+ie_>$U,hI#,lRS6k:Z')Ben=H>%69$l2)=6sP_6[K\^h#3Q]iR_erp[_
%E^U,!0%O67a>#/7$GWR$g2&j_J8X8!#W*F2JK[OHCWnur0,I9:%h];-hQn5hJK`\Y:SfX+Hi834FK3T>`8=dXLP-A7i3Alom@/Y7
%M5.!AP7*3\I2:BmY>:TW<q-aSEPuB=9MnDHL6hubG[M1"Ot2LI"o@mC<iPQdhp7ncqV@Rr?_q+#8?DQVcU<H)bWNZ!JI"9eHG:.+
%Eo_QK+b1b'i_f-e0Hqd6=pF3dc,MN4L_+E(6qE>McXT@6h!,Q0'L@Djn"#m9&Oa]1=mngOBM"Ttj5i["1sHDFDXTKt//s,9U\_g@
%+uL[.OQ[\7.[o^[hK*%6'!>/[/_([+B,qWt;K:g1&L"D_SH1Ml6F*5%U0q_M,"C"p_BM<UjBCt[6jT$D'-Y(mILV74c0a5D#g&NV
%^f`pU<0[5j6qAs!D$!%E\hc17-4l@3O6nYE,ejhj[fIZB/W/a/J<4I'q,MsI0nt/[6uY4p^Dl_?X7RbK@]i'8KWYCoKW[ZZ`*J-P
%8@o@/&@r?S&9Akd+ESWu+ESWu+RV9Y60L?t6"hW66/6U=JnVJp+&SD!YYYmT*MOZu*TA&\*@^,3'$YQ(>W2aNkW/i4giWmS^idGD
%cumE\\Ef4YU$IdBU$IdBERu?=6J!@c6J!@ciiYWY"Khh8KQ][1_-Mg5#WEt46J!@biiYWWUg8`u#@0iW\W0(!*Jn_U66LB@+$Jf[
%]/..88j<Un1E@n5*!.6>*<I@$3Wq]]3Wq_3-@W.43Wq]qZPkRV3Wq_'FU3NEFU3NEFU3N-lOX&il];+?l];*df-(/]f)`rYf.d</
%6ciSg)I/$t#[N2cLqCrH?ZaG5#_:8s#_9GN&-1[$!'oa/"@1ab#_:9E#_9^5aFC_eOT2!@OT2!@OT0:S+oaj_6$mG"_4P=#EuTRX
%;ll:,B/-osF*0)!JT1RKTiQ3Q%"1mnV/&_JMM<+d?<rR.pa)sdG?EJ1?2L^.(NsjSQ5&ULB8%%iqd%>6$76(*k.+J+\iA)>&\)S^
%E?]-!V40!i-^<J-4i]Eu<hE2TffHG]l-`6gq<DdKB+sf.jFhbR@RPK+/0MTbo=*A7JM#G!n0&j_dRH.hk;hZdg\F8f!U!<j=-=?*
%dd5=+B!)/!;Wc;oIW'&gXZP:8<QRSpbVO[jFFgF(\qp"4fjRhG,^P0VE8S_`\TLQj_hW2TN[12ajK%'^>#XUQ3A!<15[BC#]]r)4
%S)]:()sG&Xg[+*':W(MlSsWko.bu_WDX6r%.Ge'inboT%r?_Ge!jb@_;;QW_qd51;jbQb39S52Pj')A/-=Sbl1aeN)BbDNmrYTAp
%?Lu;B@AB,";d%-u/*CV.69HI%30aoBbNMjjR!gt=:iBmC)Y$P$G0CKrWSC:?fNqq-8$B0bkoFPYpWY23GfqA;.GXaT1kZl6\.o^A
%\*HFrA;X#Kj1agqY5O9'Y'D6rX=MqLZRmtsN@s_5/X6?\^9pTCjE8dX'\O[PC]C(:Op!BaTOgVs+u4H?_5/N#3j1CBgWmNoH1%Bm
%lgmo=#c7'Mr/:^Eh0<'Jf!/MA/6$LW8(NFZ,gJG>44gf'lgo.%i'j-fpVr6CpWn:b\%,:-%g-II#M.K3+a;ZK/t3n>['!@,rmod%
%&gMVUq.Wi5pe+"s8,D6FPuutdQAN-NKi#l:5C8GKZAa0qic2OQ`sJ>Q:J%9&7Y[g;mPBURr7/=,F%(_p552'tk(\-A(`m$M13_DA
%g%&A48,5jQC<*/?Mg/07Rck`^/244kOJ?kR^9ClLFbPpVGp'a,[lY5uj$lZHV8ocNdH(A&Ge5"CEiZ_L/Z*W:+^Oi57u@ERS[bkg
%h&\Ppa:.a3+D+e^5=<KBZq[^hD8@s!"nF3['LCTM@e'ET2"JQ'2C`EYjcV`!g$Y]$)W\@aVuuqak?dO5?YKikgIh:S$3;qf]&E#a
%J$>)a7mi=CjTH@ZjYD-UITo%3H0<'7'?.9ggum";D(4>04S#7HFSeSM[DRAUaWNmcA$)#*DRS,$1&L@lm3l=1im^IC<7,S>qI.Rs
%3n82UZ,A4GVH-;RMr(_XIVS<n,'lQ#[c2#ar9JRqH%#!Vmls3hBg9(u*H#(-T_dOkXq`%?]d[[=D,aiplo;Q>)]&q$mT^,na]fF'
%BD.L>JSNh3DkS7R]aAbScdTMT*95RpX)>3b(oDo7kl'(I0?;P&GiY4dBOu=RMMU)SM-dgsUr`9*FRIASSK5keT(bG]Nm[RpI8q5H
%KrsP_kNIk_F]6lkl^lj\pUts*k=os"=l4Q=%jAVVh=@=VHfp5<:NuV(r8Nl\!Ad6Ra=>/p^@`FDhVqe(g@Pl?UJlUeo$+I2Gpjma
%.QPfILqX9-O-TAg^[0gf:$"U!JMsSTqo@/Qds::"O/kNi:-YoL2>OX.dr:i-YptZ3[*)e+WI[1(iR%ai)WMl-XLD?cOBV6W6[o%Y
%16ptT\Qu[>ino^:^?.e#0lprd\kA[]\1=[^Xuk_c(ebrN\P$En[rdA0cSa6bq*IoG]ge"6=^e"JXNY>)&rsS+UaIUpcda%_f6sR&
%m&IYRi`=52mn$c2JA..+IZ$l%pK;4OC'#9@M\![:j&rAmUe0_%<q@8Q9CdrqYP[Im]OG"!X/e._1s3M+ULoZFe6L=f8_\,_#/I;E
%ko1_6#Xog2];JsXEAQk>W**-[acWQ=]1TU,[1LMJs.I#^nuE9Pg2-6>YW1's\J4eaZ&^r@AOXVX*I[G+mrDSDf[>?8dBdt9_7Sl0
%pBc*5kRUX4YE#sS\(?42N0d=Qm%^kl+dr,9D=rfG%(1-4*=\KkE":<UQ&KR<Nd`1C@3=`9qZeW,!_Vo`nJT&DV3HhshaciF]\;G=
%L\Uq:H@hpSZZ3=S!L$k@"_c6DQ:aj,[ra&H>:R=]Ske)%A)05/lF'@E_r%?9#4>/)Ik;.J]m;*Qd#)_8f=G9OCY=VpX;iP6.E:nf
%dOC6'7uGX#XA&IniofUXZ[,7*.1FjC5J-5g[0^n45?R4)K)Mk2TR5fun(`3^RDL1h(Z":&HY2W&;<6MIUHWq*,#efj"F0naQ`3<\
%RPg_tW2+l*iArKGHObRo],aLfQ#=k%Cp-Nf3OIm1-6U'Lqrj7/kF/`\S@BdIk3.qekqjnZ@>sTtXaB\DI1S]L&ln0D@mUu!@SX&#
%e#bcc=]QgN>VcX4mddbd(TU>BU$P=-q=Mar9(0:Qb)UC@)4pCqqrgegpCEk^@[1XQ`6-MT^jG+Je:#P5qBU581%&a-aA67t0\GpM
%CO$P*2*Z373n5bW;'udSbIOWCg/YW14'&3rhe^PV!C'PDE^,%.'>3%%oi&42VioYeh&ti(2"8kof-$Hs\>X3]mS@2=I5C3`+6%d@
%(pbM1JXa@6,An0152nJ;bstGMepKkr@a/O`Yi[`u\`P,W'5KcU2f6f0GTkXc88_lg8*$O!q2!huc&1<C2e@Q02HGX]Zm?e-ou\qd
%nV>b?e=p56Y;-BY['^1OZb9lm+qr-<PCh>G=^7#;due\E0`<+p>BF1RPgR$Oh+!`E90U32D9YTCU\4j7WT+)VS5'1!V9ZN39O<eY
%c&7n=\&Jp,\'KLtG8Vd)LOg,j"2jfbRZ@a!l![N?WmC/5p6RaIS)-/^D5)*7g19@l[HX6G?m%NYLeRM:'A,0:X.Dn#P<G,bVY<c'
%S*ZO'2VI35D0jMR[lJ;kga7=oYta\T5W$/a;R<8&WptjFN!u=6n45G?6Bp>5FA(#_aCDO?\\\P3M<j\M3`<A,s$:f5S/+0qc^Z!`
%fB7RF7&0KJJre]PE$PriL=/kLW$TcT3$p7j&oc5Nf"LSuec#(]jDF%)nS.LJq7q63hCZi^qSSV4h==WCqb-hoD;(_cW6JY5-+&Ld
%=[AN\P81E\2-EeG=HaK-Bkt#k2R+SZC_LTi_DZ7*<nM#fabng=j]4[:>*B]-ac1ge@SKnEVQIrIfu0>\YY2(>R\DZB'=B0&@^!l\
%g;KG]TM8XS'srfd=]1_kP81K>CU0ZmYpLu9'5OnJ2Jl/he0`aW7;ZL2<n*uub)4okU+EQD/@LE]Zo(upS(\;'-5L0HD;(_cYY?[k
%$GOHQX=7>;2,T:;PDEPl0<Vu:qlB>$^3$=JGO63XBa_5p<i$8+-e6DF@Q/-a<pXEO`sUYhPuc^Z/]S4Rj@1YcAo]V,gnl[CMVH'i
%XLQMYNYSt43@,#I'?dYT2R+5PC=AJY7;ZKoQLnaj`p->O`_+]`XL);k'srgo=@&Fb'J!i19<j(,Z,S8,F*!3Od&(`I":nOB"`8!'
%<m50jL^DbQ;Cn51>DX*$M3V0tRokL^ZY:qp@Q(J(X&dj\YqBE)p/gj6J(O\<2ViSuD8LLID:3WaD49pTg8+2!gSF:C[RO$L+h1,$
%+h1,$+h6dN6Z<^Q6Z*R'6>Y+uLX[Y0!jkPV+ggLJ6YM[t6h$8Q,K5%#UA9g;p^XQ'q@9c)pDm_4oGqn?oGqtAmQ9Jfkr[rakr[ra
%h06qWdW`cLdW`cL]'ka8V!e<=UnJ>HFPe7Oait*/dWYt7]'g3cV!el0V!gi/hiVTdj'qZ_OIPm5T:P0<V*hr2CHpcP[iJ#?Z@qmD
%$>bLiVV;UF:"Ts79fNJu\(M8=:"uU9%JUFT:%oZkS+I_aS*`;u2ViSuD:3XLD:3XLD7]1tgSF:g^MMfdTB85bb]g#%GDL+aGDL+I
%mh"6Lmh"6LTb,t#h]]GMc%'ZZGDL+)muZ7Vmh"3KmuZ7Fiutg%iutg%iuthp`^=L)`e/F?hpL>gSKG!.rDi^+'"YW6.\X?;W";"+
%7to<$4">mngL27I\;goiS*R!a3a>1/d,@#8KPmrf6KmetWe9/_U,(qQ*E>Dg7OWiuf23-%Eubu]L[1n%3F'T=\W2Me*>@1M<!=;F
%UFPKi3i[cAf239)fT)u)S*d-_3c%;tcs]!cK5S,m1?bq_PsL2mW!p8jNln$4G#SYdL8(-ljuY&FY0BcI*PS:(kiOrVK+?d9.<G9E
%.InJmjZAZ^IaF^Yg38#?T@^PIp&7>V>m9'.a2GD.<C)E=YR7tPO/ek^qksdH)iJUFgdf?1\If1C_gYPrh<[W8d:#6hLgKeMEp.+"
%.YeN2;)raNO34/crMU\slpiAHbCAks)3B\q+;<L]<"'c_UgiP"5q7U!$W8^$G`.HQRg#c.\o1Wgd,@8?L+X!7/bJ`ZPsU62W>)ph
%O@l4aK2`0u*i)]tk!:PP%L]SnfHrF(YbBr+q>H*D4+SY*ae6P4l^9cpK^?`+:cV"Y8;8<bH"=U`cBAD92T01DOu#;\R"aYQDUcZ\
%$r`/eqnV[^:`%9['>c=pH%]bs7Oa+SfEj!<-nhK_IC!ZZU[*:8;\%o*m"@cIgmItBB2!T-_=9X"9_jHGW%UQt^nDa;6,Q@I\X;gN
%OsBR19_-WNk@\?H#(X2XBq3qmktq6dQ5mYq$ClQKT=NqU2kBf2aaa3q;gB7W$uM`'[;4g<3]`pB56mk#3`FtW\f+Lhd4X"`Ys\3_
%ZQI\6enN[@YS6KGV9;NjAO,hYTNh;P:RU8:rN3!r-2uN4gSnC@<W(@XAUNgR%e#a.^F)_Ro'R$olBabUfe6'%PdsUooh/8,=20]7
%n1folqIP%2M\fIgbGS3LFh#a$k%_c_0:r^Yo$(pc7/c]@jDs*1"6Ia&o%l#K:/;'9,(>>J7S++/=2;8khsRB8K%m;;FnbN!:!XQ_
%:_UGagS)3`lNc)fm%h5MfSOh(ZKl#(%%'1$"RhY-%d,b^m[M/_H._XS8U%MI#UXd<G,D'iGr;boU*h\aN?,!9TDoo"ZC_l)A=e$/
%/\aLCb;7/Gqj=!4`MmMLlth0.m@Kk"%#$f6b]1+)Y"9[DI&g.>o$KG3MNWIR0i3!.7EInjL7-T35>&f%ZU0bq`,//#Z&=d#n9@[u
%Yngd"]2_`!&2P)Y7EId:1"K7&-omODJ#k&DMKbsI6t("iWr3sYJ+cnuU+9$7j+UT,I.TJ6Wf?=j9_$j#'Jn6T3n3<rm[AV[+kke8
%-^J\"e&c7MoB@/n"s$]u+hf=DWQ3f(;$D1t:Xs,Y<Usg]gK!$A/VZ[RB9d",,nG"+le8E)@!%k'/95IjVOkZJ)+ACB<QX8(MK_Be
%o!'lc]ulM!8Dgm5O-j3nN5G9^=^qRW4ksM"c.j*A7>RQPN[>I@NCA<Oc0LORk'UM8Z,5QHGe::i_n)G#dMO.AcGZYG^m:ZJH+q5c
%"`^*sZsC!TQ-#`lIBM[YD2-3oBm'1FVon(m?d+r4lT\F<HlQ.6<P2J)Ht)(8f>_.i^sI7FZ/[&epP[2T+6>QWVVj5*0U1Z7D-4F3
%VeHkn++(ssZ:m31hQ+Xnhl=C4jH6mFk:5+l,X3g10T4>5G]nr).]tZj,fBj5EgIX=c$NQ8ENOi64T&>8bB=Y6Q+64VouRE&E]+kA
%(NaigAR9Nf]jDr?^/YoQ$g"n0"FO7c#\C]j)O>+"=e$l[5PbiQ"FlemPVN!NF3Q[uS:<+sM`_*2JLQn*7'U\DhM%!OU=!/^@oXlu
%>ms0Pae<gG0BuW.TfW#59_,8[*[eqLmASf!3mG"2P=Ji;[jY6(+7Ycnj<0STb_W@P\!80;FRqoi-Y9o5`<klbSZUjLM4a3@XU2tg
%#D->cS:$:db<Cc_:-Kkg=k=kd=4@]s:j)>kOTn%mPK/LU>l-aN-]cs'[8^[*Pp_V1%8t3P4S_KPpG?oT-XU>KlIF!\k`M]dG]&2g
%jDg]4W>L.8o,+g8D'?o([E3ciV:+EZUb?4[`sWCqa7H(dc)-^5N:Jch-;Wa&ai-Af_44mGItFfr1*Wq;rBXsE?:I>kg<5;N8\Buf
%=m_Q<8a)M'=W>C8Xq`T7i`b_\7/1?.N"BdD989ZOHP[:FlC7HNe:H'1i*,MR6jTj,Mb(4sW1_HY@^2U<FTFW+(1h70ADL;1VT#TF
%_EBD40;$1Q^/'O,.K8str>mY`<k^.ZVk.f@dhUkZ7+eENNJJ(p^*#shI"8)C(;NdiY"c"_E[9kC9rhK.a6D>k^S\VZ-WSL0cFY0b
%>om<A"L(X^)PXp(r9eBNM?!NXUcF1taG)DaBo]aG2&0hc0n5gQ1o!p_:t,%&%[f24=en&RTW=,SQ0-Ke/7/@].a@K8B/r_fdMrY>
%=798\C45'>2SglfZ"tHNCT>gQ+,[-l1]Dk%7oc"c%B;8*_*8`J<LO0-R>FCl\Qone+IX75RY_!,Yj(+F>9aeoEK-.P]h^MS7jR5"
%*im]d;*HSn7ucYn6#Dt=BHE)32HPn#YuJQHhQ_*1NslKP<MMS:qOJt@ie4)+SNEn+(';$/?+l[QR^;%U]9R'T0"A0:D3\d0+3_U8
%.+'"MGILJV/1CHbX$j9P6]'sl^0SUf\;$g^#eTV,M<;>7lh%id0hI2D'W0BTGW?Fq8+rOm?!X*Q1ri;bSglRln%?AWW:qCnmg@=3
%F39i8WBt[MGdaS<o8&H=;haAH@$JZ#L$#m&[o[7g+`"jUgR_$pp6t/Y1K8&5OmO&fTfJ,r!;PPhF%i2MJWM?<a1L`IDcWQW//8;A
%VNoCQ:-W'U<2)CAo$M`(H^Z\sc=9d:lXdDo"Nr@:.t%>j.sY'?`ti0noe7t6MgM7_pCb`GhmHFXH#tTI?[.iLcDged>D_M?/p2Dq
%Agi).1JZ*%WY3SH[HubP6?Bl^X?3"i<G9BFO=E)"lD%pu$I,!WWFmKXcl>FG2MN\<a(TAPRA4o]LIUj:?Kf[UWm2SI,-!qtd^Si@
%XYmln&:7,F=L(X6',!M*'rIF@d)EIG=Jq6/O3J88*5arcM,Wh&iZp&T:L+o0+$F\(@?-^I/jn>41!_Yjq=bj`Kkn"*8U5`P6,4h(
%.:,2Z%&H/Y_G?AIcM;ub&efH59LC^0P\?864CDW^5K%SZLiilf4s\[$Fsi&tl+UVmPIKmr)p"GoXRpmS&p%)2*@`FCdkCFeCc\\g
%`(d/$'><W;0hG'gJ"'N@PH2uAW*PH(rpAo>jaEWD+]]V0iOR8K8@>V?'OA)(F`6VCIK/X=FdmMW+LZRTrO?rpQm9W25CT\8;mRA$
%n"06>ptp"_X%a-/\mg7^dM;@@OfgT,'^CSOThnh7%u%UKr(s=Bk(c9/0g?B;C@afdY*^;gFiE-3YcH"[7D!:ji3&Fk$?t#7;7%jN
%La#kS7l3Yu6k_RRS@&,T5hHh#7)?#a9bcrOBd-tebRt)kg+6+*.qXWi?$i"gf%$XS@U1]_'^LWjU0(Kd-Alrb1m+jiVLO1ND3cU$
%Q(*nY`@OlfX3D9r\mgsR?59e7;`IE,9s[5$GOu!AY*^O7l9DI*IHpc:qoQG'"HcSX&&l+hH77@pVMAVd0g-6;MM^54__F@imcp:$
%'ApeK>V4g_VMF/:0g-6>MWpgj=.:7gGfB;O`%.^?,$o,4.,kuj6_^WK*P-dCTet"'V=i>7bU]QF@U<nd.-;7C6SYd3oSIk$WM,\\
%D?f72VhRNED/(K]'iRIcYF$48HF9`GTN=er"hj'R:rKEsL&t[92e6FbR3DU]]^TPIIXdX^#%#Q&"MDU"7(gBc7(eue#^M.&&:'!,
%#^J<%&b6;'&b6;'&b9]),NKU-,N]`L,3[S48(=Rt"83)r&b[^K&bQM*&\/8C0h(M?,2Hn[dX;83_L2R#RemA:L&2.%L&D:'2>\!X
%$MtG-g@ccRea,fM/*odM/*odMX4`Q$=4iS$<u?kb9Cj5[YM'E//,Vo]X8.gD=87id<VVV(oH2QC5:5g`$,sQoIsuU8f=-5%r^6V.
%]UB.pfJY#;'fJJBeQbYh.pPWl/*piYm;O4WYM'E?.r7c3X4`TE=4iVE=4iVU=0j'4YHT14YHT14Y@^-G?XZ=]=5cN1![BHt:1Rg<
%Ok<`;Ok<aA,-e>U,-e?@(pU8V7:KVPZXR:rMhJg5(Q!Qo(C>PE(C>OJ0,"0i0,"2O?6o)A?:=8t<b+q1c,^UPdI65qr^6SsI,-T^
%e^u5<28su.$,38jQ<iG7?AYhR$Z2n!`RQZo&<9F21b">qO_lftbt5Y;RJc@'7D>Y)hNgWSY8p]?"A\SHQ(ugLju4Y;010*Ec*A@d
%E]/?8k\DZHrWpYh7mU'D?hZ+&=]psqLAhmN+/MNJ1mLUO:(fFLXn+.7f%s2N(adb$8u?3CA_HfJpGU!@,QT.AT`S`BNqJ=><O:kF
%h,U'':-OQ7s0F6"^L%%L>B0"p3u)%97r8HQrp^YY+F&p+ZeBOun]Nepmg9TE43(_#)iXCJA)N48;;pM<GR8A\+*)-o;E%KY]YF-G
%^Vn,ue$\57T3%*pfP>r_fJBMb?"l;Tid$SqAsm6,*'"&T1OYm9lm=\/@OAY0A<:5/U#[U$bki7V^BZ-nYFQ)BX7FtkZW<>"3;8?m
%R/:S%EP5;mlCbgtelgY3Q?%@t%jb"es,??)4@8gbF7%O^c8Z2EI&`7qV6'@`(!=Gm+qd#PW'r#lX&EegD<:_WDeGbSEcrq9iaR!,
%[*=mDfFK9,X2dAQmcZcQm,dIt-W#K&`$4QREr/o#FWX\]&'aG[3QrY#=b=RT4=7.s`RNqYk=&I(EDo%WnJaPfbVBu[W$S(\hIp">
%8)B^u1:\q8E-s`?0p@PB:Rf8WSobAs%7B>0>jcEpg*g+K3_oVo(Jm?)n@g/QQf<E0n%?Z150rd:FeE1fipuf4q2)TXm/+*>D9jW,
%I.@jUQ4G1GZ@oQ+WKkUkgE,u,90L+]]'N3SEBX0qP4C+#p"Z^n2[_*XFNYSnN]!0#nd/W91XU9(HE<NS-%!qOej\KDKdJ*=AbV3!
%bAT]RL4%<FihI!KfiYQ;Ch)Q[7LK.]@53ZJV$DuT(7;#r4Qr[JHUUWoZ:COpgCeL2HY2Y-Wh8?s&B`%8fdi*\JfB6e]%06mp(X8q
%(A3VE7*@WQ&QL$1rohal3TR75jFlNjFs>!%kHUA9AP0QSBHk8`.d*h5cT1jW:O>YA)$*d8P%7iH6[s/^_f"+?a\27.AZEZDpS-A]
%qaR4/>&uYbF]4=>*rc+Z-=C?]="ssZ^Vh#+mS&#]S>/#h/mX@UV-?[lBa-,S8$c-2[o1@T4mHY#)0>')+E_Lc@P`)iAeVWfS&so+
%o8PCqb_MYs1Fg&)Z:5o!g/6k.d[T\I@Lb[pV&R9"\@5E$7`2n-Q(20XdLEGc+f*NqA]=<^<u^D8'!4fc0;%!A(/UC/FR-C0%8="3
%AeITYCRn*WB-A5:NB]=Bl!1e[^KFV.M[:8SGSVC3ilh+&1KZ!QV=OJDP3L\4SP1sQQ1Gq?e'274<hXY])ra!+Ap3d20e[KaC,8AE
%CuA"dfZA7,FtHp8QD'O_7s!ZI.DtXZMX/^?Br6ik8$Q(Bd!W;1AQs$RX@Wr"Gc[IgoBJ^)&BAUu<-lTb(@.IW2=<ptYWc$oX/1?d
%hJ^4dbUFsHkuMjbMHA#D\p:dQK-59Uok',<(O19jnM^35s-QQJ$D7>VD:[rnoD$p9R:S1FDVfW6j@;8eCu7n5WelpM^Gshd<h?IY
%ARYX4k;-\u9p<)ql;PgTL@X$iqT!]hAO*0=i]>9.4u;!jdI*Ur7R&pQDu^^=N(>jfN4LaT/7U+S^Q4uuESlW=Qs[Ie;)`+jB.#0'
%1dCs7==P>6I[m7_rM>si2X?=5okM#Oj.7-2GuFTS1R>[c.VBF=CL,o5n!g!E]F0XO8)tq/$eVh1]C)+W5GNm:bRNMem9sYL7@Fo\
%VqoU+-ZAp(m)gkPV0C,d[*rWTUc&ak/kT]E_R55#h_7]1Og7$beoO<DEGhp)XG.`g4DIIOrBnfj!'>Xg+31UlLc=LTi,51Q;4l>(
%HB/"m5Yb[/$,'QZ[^K%Fe")M_flV`CgusSAc`&"[SMuhH4R<;-hdAR;DBA1K/'9'f"O(q:>4_'L?bcUP-akatbGutKqo=-n5JAUG
%B>#0Nit(SK(q&%\03"(>'5o8ahM>XZBjXAST.OC7,5LBX4lqQ>kb7?YGHq#_"$<Z1D2O0j#k^+S`2\&/:d+C8H+l+X@CJD+<*]C1
%2%k-4SB\A4C\!bdEFV^mfql=g).'LfpW^-)UaKrMQ'+_!lWK.1:0;VA%LDLsW_k:k`g$,L"$<sd)*dk4#C9!^O''j6J&bk/P3$H,
%pf_Drnen3(*3<L:A+n]jp3ke7Jq8I==[V,]gL9QjKB#](.Vh&b>$"jN+roU!WBsj6"A@eqniR,"ba=p-Q6X^kl^,SX&):sVl/bOM
%oJ89f2\Ol91@m,I4E9cY?j;cbH:Im)kXU!dX)A];g#>FIIW%m1r6ph7ET^Tlg<l(hfL0%h^2l,kS.iKL-m\GKG_oSc,C@a?pO]I/
%:,/'ja1pNFkOkrM^&JX82b(Z:I46+0U?[5l(i[u1?1,5j\rqB[g.kANEqua(>e]m_SDpVFYpZ*7o7FKQ]]1U9P</S(KH"c*r#k/G
%k>`$B8VB4uf[)DKrfV2sfeW9'V`F:,,Wf'[KAKBU25!N@F,=fHGrrLR)R9eo9*t:R(%[.N<YIZ3%_qXB$XPI]F05*5m/:+H2moP>
%)OpM\g9h0[Yj\WW,?O`9a57:%&Jn`YWHUG-JbD)"(.UapQ$tX)`50]Yc3tXF:j4IY7*^\%B-m;dhUq@Y+Iu[u+1:-MSS^-EoHek*
%eRR'g'[ooPYD1q<7bPA7@ufV1/nTRnWu#^BrR"0Mei^"R+h#FnhF].An*'(A>CQSqrqpFp!-kdn@.plM@.plM@.od!!OJ+-!OJ+-
%!OJE"#adcW#aE$(#aG;K7A0#/7A0!Y1.Bkl:=PNAD:=`_N!P[HA446"AOMO$bD.L5%8ent19F4US@qT%SGhM8i9]Pli9]Pli9Vg-
%!bX/&C<g-4FP45^9aIE*9F.<)9F.<iA3p:`AO6CajY%aj-PlhtDjrUt0,jt+5M6T5HeAsDH23O91Eq\<6nYb],\^%)qUKq!hn%>7
%&+LHL5?X+:=:mfF=V3prabg)PbDI4FQc\I"RhYt2\'5huQPT\0G:s#10/!B>0/!B>5C!i#H[-2_H^PI*HT*0Wp,""UnhMF=Ak!EX
%N*L`k@=>oX^l/9H:M'aN?=j>]?8_o,IWD3<m&-u.\S4O+lmFRjAM5h@AM5h@Aaa46aBic6OM/jDSGctf!:=>eC6:1p=(k(<>4_V%
%nQ5#0cK=J"`0BNY,32Fq'es@4>7m'rdu'MLSQ<\)l#&p`RLUiWc?*5%F/HPa0kWPLLe6'01X)<UB#M(@[TVcfV].@/]"8O\Bt=no
%"_^E'aH'#Z+\cE,'(`!LOdJ)`*Jo'jkt&mb:.&LIF>kK-9rB-hD`SnqH.1T3QoCRr`4Y>V,j%gF7q1=s3YM"\dqP2igC9!bdquG:
%Rnc=[hK1\%k"V`sOhdk<R3G!R;2-oaljC-gfnT."#JIkDWqU`)BAR_h,AHO6aI>pT@bu49,3DUt'es\h9ucV2]SNQ9D6pX9inK<W
%45HE_WRL*"9V"p+@e+Vb+sp*`'/=bnSVYD:c&%fL*DV8-kVOIinf__Q+kI@87dbB0&9Fb]$Scid?&6&?kqC8OmOlH5l-j6h\OmZI
%mW<Xr-;UNI0mbre#hd\OKU=lm-H,!0F<Mu,G8F`ZFLmR&@[iGen=X-*q#+Lq.s_!P5_pkO"*I:o*!e8FP62u*6k4m;&igM48gXd0
%9F2^F+XM.OKTo.?KTHg,&40!"/I3en*!d]6[TSBMaFOn#1-#nT9&r5C%$:W`0aEkT%ch(Z&;!O85R8j-*!ehVEhEmlOTQc*A9&dq
%Q,nLf<$DQ6<6=2dLanMh+f[p?KW('UJIkg*#O86#=UTg$-3lk:M)I_#M&Zdu-'JESW^I>Mck&4!'QYCRk!1PB=6Qk$3mc1oo_R":
%hVY^_;'hD,6%]+ZW^I&EW058Q&60nV6<&f375s!1#Z2nsAiY7cJIki@%YUJf3=pd7j?Nu#R2cJu-#t+2Q,nLf<8nC@QkDGV7u#*9
%.$t*61C#Ze*=*6'EZdc79Fc`3&igLI8n9N0.%)%\&LH/4,>.#^#Uu/]#U(L7TSoEriBRYtE=5*$M(AoE-*eWrPtVsHW"N5E)C$4m
%J(&ps1u\11l-H:@pE)kid!lm463C[rM&R#$8n^JG.\ZkrWl4jk;'k]R#*mPb(f]Mo_k7Y=%tdJf/.="Js'\`\D:V!!oH+:&\Gn7_
%K`8m9&GhG:nfJP,5EhK6_lsdM&&V#pIi)3Qs']"9%>\F=DEnU\T`HmLKEfB)&iUrQQ-b$u=$d!u>_sC2j%<uMN%:U00YkLFLiF`L
%=iZfSJJ_JJ%`Gji3Y6p2kWl#dJP;:19d2[:M2sbR!rhUUYAZSirJ1.uY/G1u`&8gZQ-b<u=5lE^\.\WLj%<u=G2)+GN%;0X3j+-*
%`4-F9,)2B0L_s/Z,@Xc3)\Kt[BLE7ZTb0#\`/KLL,qpMIL<tcNOVO940:Kgl>`'u())8#,c%n)#1aC#)ct+%mib$,rP%h6AAs[DR
%TFuGn#*mPp(fWg\@Shol&S"Gs7Z8di)_nG4h$A!H1a?e!D+Bck6i,W/hg^H3a-Bn"NFc$na`UQ5A6_\3gU:6i8LTMYn'7cL.mP]I
%n'6`O$af])Cs0d<+Vr_L^liId)Gbo1=/;KoR>\`[90s'!=('.X(HJ2)&h#CD/Fgub0njXlE(^A#`5)\-&MYPN_m]N3"&!*\\F'bO
%W288k@`;qE<;]36Z0\2=O-kA:gHFHKHl9J<$R<bRkOHd=BCo6/&&_/GlUQgCXOHX?L^rq'>.5!piMfljC;3(NTgnYXZmiLQ]65$H
%NXe0_3XN`Xn5KuX_M^-7QY^-g)*:[P4o7CuA=Z^b$9Rd,>e7Q^?5?'e4m:J"U\M4j\'F]6pts)`'.g]&\=/<M8sDA;9WgWQ3b2`]
%%gO38o:iS%'#:JXV1t?G>lrV<]8F=KJ8;@NIOKP$kkZfld#-5\n&tcT<iP%SE`Pfo<IB*E6#![%dJZ&SIT/9rXV"o1Xsq'`UP.fU
%2\%*Chf56U[2_MpZH]Vbp1[;piLYJl]IWgQ(hX?olem5[_S(_U9e"jr@4]@'9'H5bm&t8k+"flN;"t<7?@'BPiT2ALQst_EVNP`J
%(\ktZ/NIanMn'_4;64WiL95OAIh$Fth.3%p[F?5B'K,h3$FYbgROM+[^p'H;DgM[Yn-L.pMU(^]8FUDaXo08'Nh<(g1ll^[[[Wpf
%\!cR9qpo+MD-$SY'hDqYIoeD1GOO2D(:b?!a%X:=brp'_pr/c>TNCcGUB^>*%n8G),qj8?08uS=H3U57bu:`+`1)&I$P%hl&P2Gd
%E-3%qCu+m&ZNJZCb:p"J(9c'<YJOePr*FCB:k5pbQn+!ATfuE-<pll7nC,*1lr_0o7iY<Xho*&Q9,C2=G?eU[f0\^lS*e*O)ng8/
%90W+$E@B@g1)tj@W++7cjXK%Cnd/<G*M#ec"(l;39TS#I:SgXq'&OdipUDuZn*5C@SaO+To*HJP7_1,u&B\VkXS-lCcPt$t>R^U6
%a1q\'<F`N_YAh%gW2mnaT0hGZ=qfmrdH.*O;][A+FH.-Ipi/b/eYAi$=R3W.Aa*A(jejh*$l#EiiRKYifckjFcYMXk8%MmWqtH,?
%Z!u>5G@o+`QB+pNB4>lC=RTBqDUldh32/FqU$>ZAi=7<,4VP?o_&oaTZs4'ONfFV8\O#=rNdDN";X)AQJMA/+8/eP1lX#S@o3,5i
%3(oe)PK5Ta.,@#Sr/.Z%<h#d.&=bI=7ihN]<n;Sq`LORu9/WbbT!:m&:J=A;[:?Fh;Ts*h/G>1o"';jp#;MH'/4ZLoI.];8=)5Q*
%,keI1ULf.-XYh0&[Be9+oK9_&*LT5S@lq<#?M@HJA=`h[(FSaV64\FGPDq:3H:[SO!/N9"OBlnn?$IN<P>DbO=O&r<EIH$9FZG9=
%m;bcV-K_IiV%[T>i][/-=h&o[icl5b8;.'I?0G_Ce[i)n60FHG3in*j*iQaNUI#J?T#W]'HD&?*$E<Be.MPkC@@Y?D1?EscB;i0(
%H4X5q_(NeD?FPd7H<$b4+"@W1SC9,DQ(Pg8lk>;t[at!Gj?)CS?"5B<6o#ajR2:1jXrU*^^!K.?R7dJ9Kc[70*u/9_*(_P/64(6M
%6]R-rho6ii6cjl/%R-cZo&ps.Q%^9&XJE2L6h]/J@D.CHoT5V%kAD^!&D*9]LSdK"!WGl7Xl]6M&+N&MLni\V<nYc$kTQ2:JC[6V
%64Z(HM24/-HH:BU\Q3BMI7_^u+6k_*Tnf/R?#,-1'Zq.D^":i_7\_>_WUtVA09+\e$U*!tnTOqBTniQb*<B/GkTN`<S\cVS]m;PG
%.^#Gga3D%k=b#IWmN#t<a[\S<dPW#q)UPp=pq>]k],d00]aI!a%D7ak'b;_b?F<hn>LfXs37:p?oYYb%Ng]+CG<@VDSYPKi'KR#u
%4ZV$(P-6@fZ,Fs/\u.S">e.)6a(j(OpdrEC00E:-CL$eg;/:Bj6Z(lRX)=X*X)LJaWX-:7@el@5*qIsMb$4(8B]mh^HdDNb9XE"H
%QYQ"lc[K[,9QY$jlp2iB%b1G*AWLs($pMm7lLjjnfBAKB*qK!_hQ!>Pr$[eIneI4_c+;1f?K8c's%ql%:Z:Xs&?,2^mgAed!GYd#
%+dD@8($h0.*qI,g%$QUMaS19DDW'?Y)Tk40HWJ^(bVue^NV=^<7"<_MP'%g4aiD4Y%l#E-?1qE3SVIb@pC]>oXrbp?)JcY&6Oq&(
%#+"VFq>"torisU5:8im^H,p<<EUY;fOb]GC4aB]4a?qFeX"#)ljag$b/+rJ3c+;1f.VDiX.>B]lCY*j,4_1)g0$:EF6_8"n?`H?0
%eXWXVd[b24V>U055O1WHV49ETQmXPS'27DX+]m>`c=[WtMW+GHR_M1lY)ErU/`\C:n"%+>Kj;Ta&]N`DEY\O%-a4#ib!(dbRo;s0
%7l#+D\[it*6LNJ\=0W%ZjY.EjQ"rf+H\@ce$[7C]=&<3EF/@+mF*2%`TOBQV3J\fN"Yj(uh>&hB\>^<@/$+<E=rc8>_lIfEKjk<%
%,JQh,0Z74M?UnsD`a!qFdB9=5X*D[Cd`%*S$Bc\>0#_)W>>g6(?j[l,10[E])0-J\/SbT`<QJ1cC`)>5&QdA'F6S>i=7P"-Cbd6<
%U)VmYj.-c`kUh\%$>#',L\Mqs08m?g7YnRsDVYmq'laseU/O@-'latl\eS)jJQ#Xh`p<)%KdrbgoC@F4Hs+N+O+=:<m]JK'GFmEq
%*qfM"r#KblY=DIWG)Eeep\Y;C<lEOV.9e@].NU8f?4_#iO)k^;[u-%'\BjD_*s4As3o%k:Wc5"8E^?)O<r(IJpns"YMP&Ykh;YPG
%e3:%QiiR7'iF#$S"jAt#]pmj70;)r'jAroncs"cd,N.ijn.7LkTB/Rj$%4mB*a9@4NTW4?>D3g[A$^]d)#2YlqW]rR]tT054Q%]%
%4WTHH!E\7=h8h,'WeHdp>B(lU>D3W\^(kK",L1QiY-aq*Eh8F=!hugf@o::O<jYj8]Lu<A5e'fH[-kDW>K&#)AoJ[*Xffq.1(eDh
%;u2G#@q4:D*J,__5@<=%nbWjemq=4q+\#\`Kc"Yq(Ljb:]+Ca>kX(6:U'i^0b$BhN<cfL>>LA-ADWNdpE%BWR_l`,U*H'scKQ&GY
%ZY5c:4G_rsmQh8jU'DiVMAAUr*/L%$&2j4n_l`,e%(C6Z@^m-^LuDAk+GO*g!AW;c#)$Y?q@B@'b^UIG7K6f#(&`p(<pi0\[\EdU
%fS\7sW#mr@#$Ydt"C'9)(i8:D`*b)V&-Je;5n_Co,ao$2gscQYequ*PX7O!<or.U,ipU8*G9Mf^+U2/eKc"T:0#UR:\.BjdkV%D2
%ksC?9dUn<BU(&j*b&)s.<jX$)>1&'AC?7@l:b1626`oQ>%(1*t@]U;mL]LHD+UR9u''2L/i'WI2U(9!0b'f)N<qIQT>/=\cC1Tkf
%81WGl/=SiA5V)RP#$TE0(hc>[@\B"`&0n;j7#84E%l)MTI>F"doH?(^plH3cd'&c5r^6T>d)p/qJQAuu#$Sis'PM&1Ud-H?O92QB
%641(T(K-n@>Y'uXE$7YRR0tIl$8/,F.l`J3XiuP7Br0&cBa#_ZUm2g[,->6@MO&i-R3F.:;-mdBRunns?q-$\1,Dh((!MJr<q%;%
%>02[:BE^%eTG>[AJQ=NN`EC$9'P@S*;Oj#?OlEHM7Z=[*aXHGp]L[$Cg'ht%n05hSR27<t$=9N1WV.MLj@(E<MbMpU&Lu!3?M(9#
%]tSTgpNQ"+S<`o3['h-t=g\VdbXsL`.'%M7"^/ZKVV;P!;NR/%Wurp[OFjRXKG7u$'2k&09Lr#]AjVB\JdEmK$7;Ps.l/?&=i#b.
%0%D#=^L]^ZkWk<bJ.uT!"&bMO)3D_:?pG(*C3*7:Pmg2L<jiUsVp^)0@q>k?(b6Gb@]Ws&N3P/<;32Oj7mU00+9bo9!@c(s#,HFp
%rZd!fo;hi(^MA>==Ln5]`ero2(b;$cA$"I5(h6#+@>krGLG;hI5)cb@q(TmIk//;l2]i6,d<ldA79<oZQ(&;:XL&jsXCsdFJumaT
%(h?),@A"=Z7uE^q6o,pA0HUL%d<ldAjlXH'/".!#XCsd+Z82#[N"sV#7#Vl*k<t8oREp^$/"4e@&1a3qM%D0r+,3nFHk9aU=(0%.
%Rh%lf\/@Z8BKcj0Eq<^q(!VMB;D91!Aj-jPHmHRV(h#l)q:U=*?TQa7]Cn&!b.S#mXG7s"n/b&$RJ/DN$Jr\q.[l7PD0c`QX*h5n
%3bU])iiCj^n6&lUF!ADWk&V`^b0B*;J/->l7"?#sk<sicRh$aFBKh6:K)+nS1EU?e+%e5Z'+n8%T+_f;DE]ElXCseVY_'&4^rjlV
%nQ"3IiDh]VL0(q]0YE;*_sf.E&&YI'I2H<[pL/Fah1tN#mQQT5UALT0_L1j^]]VfVI=IN2LKDH`68&YCTDl%5or>Re)4^`<WG+O6
%3jH[3m7j0%c60Jt_MSkNb>J.b7d!qt\>m?^qAC`S*\regG?c(mLdlPV>XZf0CW`mrA9m<"H`r^!m6m)0dAqZbh#>'k1MOND41G+"
%i;F-CnaIIibqO\f#VdSMR>9eW.OT2X%V:icD]_-eC35o$n[iQ9Fel.Qp"PY\dM#ZZ;!M8b0f3B0L,/N#ZdkTGH`sBZ;*6X:qUO\I
%<'m;0$*ig`XNhs+d&scrfdcMJo[L%</efM4[BP<VBkuP$4muPhOr<dmnnkKhOGU7ffCe+)Y?@+SML6n`[4AV91qA]RWgIq*/+TQN
%B'$jf=%qk/lPDUUA1rU+.j"KK1"V>ZGSiV!F**tr4iJS&W^LL]B5PQ`*+lEK%HXY)n8Z\t@i8EhI7_K<2!:hTnuJWl/>=B=(+6"d
%3472P+e<f-CkAcQ?JWma*6r,s6_&q7`Y-1rS254kTT1"BH]FP3WHXZ*oZ?;]CpD=?o0pSKfFH]SKmE3:p,kN5WTP'p\Z-O6h%&$6
%rZ[(M-7;_p-C9#gQLgtE'?<0cke2:[*Bb)15W)4"r,&e7GmQWrdab$\f?'NRO`&`AkYPD#DY#[F,>5B8K@0#*11D%cbjhWDYoKqe
%k"t)NZO&TB>Fha/](O];V`Ic.$>AkdR=f5\A+-KrSElZPcbUGNK'\fq__63[]<hOA`Tn4.QJqW`VE[:pFR5jP)LdV"e[_l*f72c3
%m\c(X%J]:o1/G@e,5_3"Mc2+]dCDO7<nCdS6e-E-'IQ`'f>h===e2IaIkZb*`G*WLno:oDZYE5J=DF16j':<9G$p96!7*07hjEP:
%cZ(i9@PD.]iEEtf*UOE!]PK^uOVM'f8p9IZdo_'J&\j+$ep&Eb%GY0dC0eD##=;E6`-YsIW^<,nQ\mQa;@+/9V*\U!(b"u:0u64s
%3i:_"<M<+XBVDF`Y.1[/WY"2WX&)fl>0^uj:_f4MLT8!i]f'0n?<Eo$:hGrS6%1:ECi/2R`?fDlQ@#LoY15pT:!odKikHo#ZlJ2*
%]6.qGduL.mE@G5fH<,/ep`]R)3$NTIS(_AL0E-lVXkq^8\RX66GWg5n<.tsc5!-V^*gWdWG0<kL:HQ7cXi#U.gBg9A[',9Yl$-Gn
%?;jkh*H$`taC"S"`d[H"E7]*LE.%?ILZPH37(9P#U$fRkV_HZ8M8+1.,[[)87Xm(tGs+Es+52>7LU7cdFW1i7Eu!GS5L9u%bPURc
%D5c1jG*r['=P'kU[2kb]rLBEMm1iC+FrY!YLM+LRiu#gY+&;pTHs<YdSMQ45S"H_]aaGi)I]flF7A185O=NG0'>&=q.J=j5dCU:n
%`KS,Da8+]qC-]bl/YB6DM5D%`j,J1VqN()Ss$Ve!Mb?$bebAa<]@VDu7#kiN]Iu;H/7f9TNq^g*m6!l(S2K0,T7/iPThIW+3MEQ\
%e>`.(Pdo8m!CF>>&&_]PXPjE?B?ZB^@.#5F.r,o5\ned8j;e(GhTjBHL1OtOmF&b(SaDhM&'!4tZ6$KWHku*OhmW>TCtr\!MmI+\
%<BN&GNEK/[Ui\6O]B]1cg@:$B#6_"2e1a-',K,C^VD<A%AN6P'j]E5CJ=)HThpSo5=mnSB`Dc[&\6mkDH.dbZk7s6O_qPcHlIlNQ
%hTUQUbO&*g1AbeOEtrc/mmK.ZHXjamiMTj,3ueoUcn8AVfTs,Klj)(cg9!OV[c^TV-B8RIC6jl(Q1T/Ik3oalMn.Kcas<C2>2leR
%7k<lHeIpgj<@4]#-Hi)IXBWk@\]3LWjU/H1EpX5BbcJ@BcYMW=]iS?o\=P=@'o5?olRM#D0&eFDU1Rmu$E9HE'm/`q),"%hHGHu%
%f%'SdehT29B1%u03'+f&ff>,!8XF+]34>sE,hsp1A5%CrVpdN2Ac6dMVnAq7;a9pW&.K.O3/UD2Z)/!'BXFD\TXDJuZ#0Bo_qtr!
%1M>qHU/.>Y@hTGdrG<tIkRJo=QA/9rO0KYE5TflH*kbsQU2F(^k+a;C*fg[klC403P?Zc>g64aGn)W9)dAN#nq:%j)E-Nl&<7Wui
%a,k1[a2I)\OW6"M[?Pc^Vi<mthcsZ0_d,W_#P-<O*.RC$:'E4YA4L/lj$jmjNO9(oku/NV/hP+e`K[f7Lb//QjZpiWP_'d>0@J?$
%DOT]oJ-Ad3.\PBlFdnWB8moZa0725X.aL[k*0qC,o*1q3i12m#V9e#nFfr?lRl>eUkG)mJ/8tGI2mhh/O(EO%[?<I47Rp_$jGdO<
%"kIGFGT6YQ`ii70Ct[#O^TLQ;Phu18Tc8:;A'pnt&:3Bgn-,?OW=FiNLO8(3%,UdS_5Q'<Dg^pKp0s#B__/,Mm-X+D`MH:sX:PEO
%iQi,1J%fUJNV@>9puUk`(7anfIgtAqcM6LS`tcnp"`\$5j0)=fY?o@[YBb0EG;!QfO%GKVLS?Xi`ooCsGiN:fNhRi]NN]n!Qo@3`
%ql%(Z%BquF;,-24a#p%ugL_,4nS/2FHu/a`7e=X?NZJUAPVkWI3dL+T-#7SJ')F^QbQa."ot5''"^m<sVg^St2Kp47-IhXFphl)+
%p?:.pq/21Q"oaW]#?^#MVHkFF]^^9O0TX*kT3&^K0mA!XI6)9eT#/D#n_U5"nZd\%qR:LckLF?YQ&ft+a7!k.o#b\`/!MIG-[0s>
%(LFcE0g)odGPS+Za\llKH/iDu>>^MhAXk^fE4Eq6_Tu*$%Xki!IN>KWm`cceU*;#AnLHe[6?dh&pleo4GC3X6`iaVEpZ:lak/6QU
%:`f%c=#1]S0BJ"d3W8KQl#UA>W;Q1$I\:71IsaHS4(e*)a2N8VFCFP_m#VmJrqO!dpSGRinS?u"Y.B_8.#>]Gf-(XF#hol-Qq*3$
%4q6Z;(\,+%hFU+b4@qqj4@qqj]T\0NG`mm^G`mm^GUF+%nK\_FnK\_FnW"gij,"uVj2m\^a#f+8O&m:qj2iJ@j,HF5a-/l0\J%=E
%N'c"s+d7dLFN9S2FN6Irk`.$Dk`.$Dk`0imd2l'h_&cAVd2q`bU-G4XU-G4XU-IKP7"7<:FP*@n_@+'2%O(]/eI;G%;Mb<sUCch_
%U_#]W`"3[DO>I'%MjsjVdNj\+k0E#9KR/(ZhsKr/+r?/*[)\@uoZ'%MBTOTui/f<r][o_!3ong"%XFe)%XCPV*V)T1*V)T1*V)N/
%rUE8frUFD1rUJ/WqW#[A]%kCO=3)SB`Zg7I&KUFQ&KUGf,!+f,,!+dV)-Z)A7e"KGX!0K)7$#!eL`UiIL`UiIL`UhS&O#]<&NoVl
%&M<S!,$O'L+q7,J8;a\9D)abpLgN=9L*Cp(JKfF$5pCU8NC<?YK1,:OK1,:O)i<X<#DqN(#DqN(2\O4W%hcu/&'Ds<D_.&A?HqDj
%#E7`+(Q;me#E327#E;ChN_C^ZDH[Mj3TL2d3TLW?El\>RFNB))El]2\A<@+XA<@+YA<AenaWh<=aWh<=aWk^hP"-QYU.68tO_NQp
%,`fU,_'9I3aWiG[aW_6:ala-T8J."W'9@#Tk<V?&D]ZU:T>u^Ip&(o)=lbQ2XsJs=OU$a(OZ*op,S(O0,nJ#N3ZKQ294#lc,nCR/
%-#Xoh9-,4=9-,4=9:d8h7iie97iie98)?KVO$#ZqZTC/-!\blo'U%#YP"Qi-P"XXS,aUV9,aUX_,+H5283V<;L0L^/OF6U'+o11"
%+o11"+o:8Z61W-M61W,VKOg9*#g"D(#\bhJK-U^gDhIi\=o7KJG6$#<:B83Y:B8cimf9(XScGK\ScGK\h>p$:497jB497jB]E<sR
%GlidcH'3kFGm=n/nnJB$497jB]E*gHGlie&G61<m!D&pbjB;S?/pRMS/pR[5?1J+0>k/"/?1JIJg>iP_g>iP_g>j8>oZ7b3oZ7b3
%oZ91Fk`[BEi0,NkkhL=]d3m7PoZ7b3oZ8&&BTjfok]J8'W#1&\)1YuYGlX<r!VAF&*ZsOoo<\.*PB[!s.f@X?:]A]gn,/kVT)>9\
%Sm_*f-@b6DpL\^@+Fr[?G6$#>:B8ck:B8ck0*'BI:B8ci:B8cimf9(XScFB$SH(Er!2='*U':VF.8Krk.IR82;k<u`;k@Nn<SdaE
%Y<8;j/.Va./+3J4=.TDd=.TDd=5F6OY<3+ZY<3(YX1T+%<d>;`UCdLC^PtH2A,,jsqHf&tn=rl,^lQ.%i/^Km(k5MB"T2[W'&Z9V
%8.7^470<Cc(('K*=sShEeKP$C</Ula;(WEuO(sfU)/>965H7-rr2:;9n=t"J^lKq]O,:g$:!5ht8gM35.ZkQs</CbQ;'ckE8!QW(
%5H7*QrhpG9pnLG,`ZJ2)!In(*"T2+C''#$&OaoZr6isZm,_c=jPt9C5Pt1lt<?`$*</:YW;DAa`8;[CXRK.FC3>8D&#lsT]KcZlK
%ean^o?AQNJF;'j*.RX=JYn2b#8;0Tb+Vc1%?Z*Oe%&jepR\:9!32Akd`Z\>+!JaX2"<:;c&opNc8AHD!+T[?tLVu0J66tKNWeg^D
%2[(H^;(+3)=enq@@$+'D(lM@N">!G"&jSp_8;ote7H2Q%YV'=Z8gFTc<?_I&</C`3;C)s.O\1`97OgjT0N'20K+TVrJ42@CRms92
%8+5L6q*k3pRa3@cnX=`cAcAclX4>gWdkX/<gZao6pnVLMZc\+uB>:E.B)&mrAgEW*)"5V]D(8opn[dkU%`qW;%C^UQ*KmheXKTZ^
%QMIZ>BkB6*<6faD0]U?RBpkT+.K,%V3@so:45SGidgXEI^G&r[h<L*o9A:Tu"A]i3R&oI%ci!>d-J>*W#XXrf`NfN2P$[idf1n$9
%A=q,SWHfSo]/#r#U9920FeojkWXQ$/MdrOC[U],IB]&P:Kj[E<b+h,kq10cH0[46n7=T[33)'V2r77L@\a@Ae&'D;d><hi3!P-)-
%2R0m72Uu)H^Sma4*U=AJ45VF1N\Qe(D"??NEkW^B93p2Bmo/Y\eAh<)H\Fg0nek_kUb#ja;`X`mHfNN2?a"hPYiFptm8JFS1+YJ5
%Pq8o4Wqh\R=RJdN>k!L_O/)^dS'$-7m0C+/TI63*[4R.M':AB2;,sFM+`9uj`'S71,X--UHp`)1ho,'/E5^G+>!eXW@)ncJDWe:]
%j7b5!od.<gIN2B",a<QMS-;4LYlg6i_b,r6Z[L'$Dt[\3:l\ck`%KD>IW7-\(NZC``l$d?F4`[S.ZhHZ9'+J"l?nu"AlEOi2mm06
%LWI6mG:hhus2spkXD-5L>H0`J;^qAoFXkk>MAk!]E8"(_A8ir"Be:@jq9%q?m-!6qL?[#_9r<%T.Kbf+iLGMS?9*kRX+8V=ZUCW2
%22`O3a&;KV?1hY.Vq2F>NDQ7)YYq>6MrYTCm;qXV]Ms`BN&=LYPWq@hQ?oTA`8M.q=(o[</lR7rT`6VPfVCLn>lc-DS5VO3g[;q_
%:].g?pK2m8^%nKW\Apea+'r5YrOL8L_6^k6SR#FR5Pn_ho[VIQBOX],f>jhYdQLd;bGK%e[EXtQWT"YZP+O>I;ir`+TO=^0^U$om
%`1%0<^POa+cHS=&fTPnUZ6-pgT9UF_5%.UJ_N]iq=ojEnk6QKZLo#PT7e3eNI<D$*[')P!,h;a+Nfl2(s!2?5Kk#$lHYH0N>jOfA
%,Kr2$enjPr5+rBpQcmGtW,pT*%]`M`eL\K'i2YIteRIZc#WL<_N>aDmU^Oo_@;1.pIX\l0IhV8S-78*C;G#0k9<879`,_+b7?VY/
%?ZZH7@hC%loU3d]p!oG+"l`R`QUt?%V*;5V<iRV:>4He?d<R4:D19GchjqbaVp!YVETp%BEN#lH:D]o;P*_`NDRcQg,]V>3]ds(?
%jg.s5SElI$28$(bD1AZMYDH35mBi@.__krZB6iJmbTAWZg<-HYk)5.bA4O9$B.S.$lS>U<Bt]?l7U/.*jI@Y'/ks4BS0]Ol9s_tj
%?Z+#RN5O=U&'m1D1!L?CB6QA$8*;_k343K:Q,WHcZfaH9'=qL9`'1DA`6s@:iZ\tkiqgmt>W\Re1%hCAXfpV$l:.kdl<TTnmZJ[4
%db!,o\LTH[AM,T@?_EuP`S%1>-Yk^T6<I*,AF1];e@0)drUP?g(s:>c!qH@j$iO^R516Z)90U"EN?;FL@#c1fgnBp%f=crt<+JGg
%j\-/=[D'tYc@`X:bt*45r<+F$6NoDnB!)VMcDhG=Kl<pZbb)@V\>+lIB6B[l`3Fq;IFjlu1"',<(XI4b]Bi!o4L7QkKpYX4cH4c!
%=H;A'MoZdDes^^)440QI[AL2ZAaDgr?fn:U\(>QL;lR,qpWhCB['S?+Jr*CoFQ,?eogC6=E]?poZ2X76pFC]*Q/t)froS9@2QIeH
%f<aY?Q&sV51-<f_4^lnn?T3lCF`0M%?Y'MAQD2&oI:hgD:jT^>Y1G?<E/0L$f5$bR)_QH8IRhdulEoHjO#^!Y3QX:J6'lks1/.Y%
%p#1hml$]]$?VBka`Ms/fXq_PBdXTnn^Xd4,g*`M!gR?T>]tTMY`@T0n(?0loPuT;CkP&u0.p3r3J%5/sbV\SU7?"j-gO),\R8;^u
%\3\uQL<%kAR_"k_*t[jLFPO"j+(gY<>I/%]bmlWhjgsg?(TTfVmoZ2Rm5p"a6MqkBAaQ!u7`a`+4.E.]ZXLo6gjR05itJbk?c::D
%OW9)0GgDDon_oX9-m1U7`,;JnAOl<j#!Ue&lprH2cE\qO,K9#=[7nZ,*JmPI&/E"0pXmf>nB:1>S=-tZ_!bPV+l*P;c]5q,mu]%+
%A4PeO@kDh`.m!goiRnf#6Zs`(&9GLi,I-]CS4hh'4DB5#l?fuhW4oetlDs4"Xqc#*[,VoCM+,O,espU`iBoU2O2N'eM>@qmO2P&1
%Sg5IA&erK"42W:_\Nc1`6$Qqo/"ij188r&(&5@jKK&CX4q=*lEh@5E'`@IPI/=;,9T%`,'n-G)n66]c`1-C/b5I1cAJ&(Q0)Bh4p
%qZDOB@b1j<Jrh%1AOLZTVa+]g2sqG/_3oOM<2@jmo.JS2;l3(Eg9l*`LAU=_I%!sZ0B.>)A01#'<O_Tkgr.]p%&?C&,s$0gPBmk6
%#E-ELoLRiek04&^J9fn]mFL=0'pn.VLc;@+81mY!L/jgt>emKn=]"@Fpq9p00g-/ECtO&S/cC>50id=*E^;J1cs-@LGFeRJE90T!
%oNR<.b)aI\WUkWKaE6\P90nn.4=UtV3?C3:nfp`.ScF0nMFl?VK$'/8Un8K6WVf:nWV[:Ugc&V^IK5)t&L\19O/Nre,B6^e2\2!<
%O'a[YIol`7pq^sQ'742o?OPqT=RCN^g/YIkkloEfpUhA)3*,bub`B^+>Z'2Xq2lN^b>d*k*iFh/\q5]^n&+ts7Jr`!E>gPr65hRC
%65hRCi\Y+nKJ[.eKJ[.e`+d0f#\h6T#\h6TLuX<e&`SWB&TXc?,7YsZ8(7b=&[I5g&SD[X,\.L=+@HeFObf0O#T>_A!!t[(!/Z>a
%!>:!?!>:!?!>5VL"!e!]![Qh<"!l/8#"ZfY#"ZfY#"Y7O%$6Q<%$2#TN&!AK(a)[3"@u'-#"Y7P9TY?(N.DO/<1HAi"XDWV7SJo*
%7W5WrnS(TY^PM=b&uQ=1dYJ2BdYJ2BV\'RfU_+4bjG^\+BZ(%1RNXs`*&0b=3+@Jm3+@Jm3+@KXEPr7lEPr7lH,L,Jo8"7snq]:;
%nq`1p8>>WF,'_$7$$jGtM=ZN@'(Uhr&s@te&dK%),i5Qr9cc#Wi]L\+KKN_"KKN_"6p+q3KKqkWKKN^u`-K90$$i>/$6H`E*k`$H
%k83Z(L;\&,$jgmk$jgUC%#NA&)%t:e)%t:e)%r^,1*iNT1*iNT1*f=6AOo'2AOo')AOqbMb)iP>1*cj_1*d&LKh)1h,sadA;au1K
%SXPok&PuA]"Ai!P`1Wn;$)#3J$(.M"M(qRF&hlm#&jT#3&qc?6,_2%E,_2%E,R,QK8,srj8,sT?)N75pOf0-a,[cd%,fV++8AHK>
%6,4`p`Zu5>UmmZD;MkTNHCI3]&$tQs=aNf((ltTr7nf%q7S8d[NKbUfNKbUfB<9.-,Gdr\XAU<oO]!G/,Gdp2,Gdp2,Gdp>7`phn
%7`phn7`pi1N0GOfN#2d#M^TF"UkqLf)FV`1!(=tl(l4D$!Jlsb!Fh9<0b>d(iluG#Portd`'C+@#sb:/#scEO#s"du#rn^t#sb:+
%M1J2X&qELtZoR1K0_@8^T:`Np3>.)YF!QDME[6;LF!M5=k"#b$k"#b$k"$IYb`NH'b`NH'b`Ol<Qm3c-Qm3b[Qm6SV0h7sMaH7$#
%b`Ol<(aL8XQj+^eU^0<8$pkX7+U1LD+U1LX64B"g63r_c64B#:KGYsXKGYsXKGYtS#Vek:#Vek:#Vem0&7U`S&42J3FCDDi+iGK0
%Rk[H##Vem0&7UfU&7QW4&>J.qOsgUH<Y/`'KFiI#6&uP_lM4S09p.Jg=sAQc,U%f-,]O#C8O<V98OBqc_i6rUP'F=-+<\TJM*m(j
%&jhCG&jhCG&r.%),_Q`8,_Q`8,Rtu08I-J-63n_?%O#Qk+_lN=ZQt28ZQp#(Ak<7OAk>N0Ak<t/b`]1JZ6Y)7_^#^8L.MXoL.MXo
%L.OcV7S-,o7S-,oAkALZb`\&S(nuPBr_3U1N8j"jl$J`7&>Ui`&>Ui`(o/^>0h>F[0SijE+@oWJ6]eT!5`i8s5`i8sL*1&!J08Dp
%^_UKQ$pi%!W#;ld5`i8sL*21AJ06.)J07dH+ObudM*R0>,X@I.,_dFq8Uqq;8\cI&8W5qBPCPq+PCPq+P8Jod-38`5-38`5-8>]R
%9EGDI9EMdRemK%eQpf1o=WnDE$Bl<[PU6Ea'F=enU_nbY,_U&=6:bf'5j3V/4[.,lk83YO9k#B2#Snj`!Z!Lb@OP-C"=R0:"H9U'
%(Q+G(;)>">^`oUHN($@&J43(oJ43(o(lOV+!K30i!K30i0bu36!Z!3u!Z4K`)OVunRFjW"Sch/RT#>lL4:-8.4:+9J4GiT!GnP$r
%GnL*KJJ&'J![Ri0![Ri0![Ru4iZnMeiZnMeng"Dbk"3?5)lcW.RfXqMO6GaCnTtk&0fjUummS)5HC;hm%--,TB\$Q.qZ[!%WJB],
%95KM>MCX@cN72(K`UYXA_dYJ?`jpI28j.h_=J^OMoSjYOj470U(d\P3W<<<frkhpmGdA;[A&$o!$&29bZ2Na^[LbS8F6Q_W@>IcB
%me7V.04J(n+KF'[-ocm[M%IhV7S%^iOOr^8C+`a`VG?U&\0("i(:Rl3I_KZ64m)VPY4HE@L1)TZaDKi+h9bO#(\UZA.=cRl_Os-\
%@L(UJ]ILC]5ii.:.Z,b?BM?f>]3'Jk>O)3o+&k17\,'XfT(`Q?nYP_?Ch.oReZFg(\\au2-JLKL[uN)**bO`KbG.lRl]\h/QJ1@u
%nU^="8(WF"cZ=TF^7X9EKHA<d?&(Yiq9U>qc2$nh(*4JfaJTVdFA:eCIhY5!D*KS'nSco^/:71r=,SQe&h`_HEeY3([8=;O=JYR2
%DIJ+12;@_dBk*V:;b9X=fWNO!__d%D(sgi5a]M.$kgI(<-0#+&6\oHocL'dbou9%B.ARbEKPb8^@bKeD:n6@J1DaOJeAe>&fB4WL
%[7PY.D1'X<'5D\rB$pu+S(]o'ZM#TAS[VJ#,*PfJ*k%h>EaKop?sEn:`kH&Gp^VM.Nhrmeq,SaC#h>\K*CAn#lJHliqp2,a08=!5
%EAQ=Q#->h<g__t]g(a'*EG46FCa_MC3?2$,W_tl<&U1eY=1kCOp3[;`#;[?J$1)s\AQ+J3Ir+cP+%n^JNf1t\H'S6_h'Jk81G^WI
%Bn1eVO=umLCauW4?$rM1S\=&e@;C6#Yq2q!<>UFcSn?iDr*^#>'$km3QQ+)Tm\LVH2Y^imZL:C[<7'_>F.&?+5&W=Wo;P8%@I>P.
%*\UOa_OD!Cm*69S9N<U>MORno5+W2Wb\<+ULPgoKRAceqX,.>\e0FR#kI3fkYdP<;<7a^RI,us0qZZBWkplH*,-n4;m!)QP(^D<o
%[gmU^n("5Vl=;'6'f>e:f@Ed0KBnemRWSeFg="@"`P$b\)6^ScCLn<XI5jmb`I"d]aVX'9gkPsMESgH8jpa3?lf74)K1?BaI-og<
%\n3oQB#M,ZZSD>*)-7'1O-T"f\EN)l'[^Hi6]#YZ8JRK[]7,X$39!JS],@A+hC7Vf,TX+of0dD2MBraT*#Xe#5Kl[EE;"AnqSg]u
%edK7E;tkN$S'R/D>:ktB'jcZ9X!RmFFZVoMAuk>3f>\,WBbUTi$YE(!ed72`lFbGeKgYP\`p:IqVD?kEqaDhMCq$_)DnB>ko-5Ls
%;/cWkXdk4H[-MmKl_s71qg]S-g/HK-dF#J@K/U"3`\uBGB0W>4eo'$KYT<2]V8Gsbn\Zi15eN?mM(*Saj)3irANWpj,VI8[H_?fO
%f9"k0T)>Z='([YlX]/50kdtKX'F>0V'9B),MW@r]fW:r@9XK%<XI:>0*^?a'Lmk$7#cBOqMSrh<"%+!ger9Q73s/C,Cke^6qPIfd
%4FUC,O]sc]l#@A6T0oL[2*?-G;!I"`HFk5S"p$3.BV:`en`4-g4)LreVYqRVYO,;MEng,U#^1Ta6`@ZVPDJ<\ppVe*P2#GMgl<]L
%3crl8Kgi4X=32!pcV;5a]3)baas-2gXt8SGbfV+h(V]'\]'KDSNDMImG,c_BVNH_+6:6$\CXD2+-raO6;L#ssnffeWeoS/!,;ICe
%E23O[Z+a\;$l)5a0h8f)N5WSLRs(hd!X80Kh]8a8.ZD=>LFs*::R$T_SGN"h'h2[4pO0H$,&sSI.YinY&]@m4^;B*'pc0l\::2me
%YfJdIFcN]I(l#i2Cr-o&_#oRMLIH5C[5#4RSg1SV:L@Om]H'?r!)M5,DCA!j_]jB\EE3Jn?\c[]cZ(X::goKrJ&tcHaGSo17Tg>8
%mnm+Rc&`Zsc&\u+<[;j1<(s'm,&mj?KLe7qRd^fW9&,r0;?4X;U'7Zk0B*7EG.kkNe%N.8/U;IFbK+-?'buSucV>;8;6.,TDp>4O
%XQ-m.\Y:987lqG#M:ke(Ajf'#!Viu.MSoX$g6#2tOVm$<o0Z>"+/too)e^0WC5@`):5>MH],tKU7#_`kakNLiqYi!_LF+@5.OL<O
%f;Z%qq3GqYC5`#aa\'@uE3_SQ16*4NLl%(#hsS8(S&_GKo_]oIa$bZg/kNO>a:Q\1]BW/16isQ-g\^:Kqln\cahqU4d4Ik"%Orc&
%.rOfnA=,D$U'?knM7(:QYLCWdO@tUd0osJ4`6)WW&)ibf1m[S&\I[agEoh8Qe/*ttY1Ife%uL1%'_\JQ86ktm9Lu?H%\*N04Q6hU
%5=d*to&3H-\7_p*2q,uHe!H]+n$<lB)=)b;iTZH6QF-m?``!G0L?ObbOs+Xp@*".=h@,-t]o[Sc0I2+JndPkZ,eqsB[T5'bW5b)Z
%Qa9WBF_3I@SDZ"i1aGO9@q:CM`"9+&%u+LdK<`m.X]/ps5)nL`(\)i-`6lJ5#gpP##gpP#LnfaI&>Fs%&>Fs%&4[7p+[cj)+[cj)
%+jM,U6bj`I6O8qeL,aGi$rIrH6O4_;6QA2sL&a?WGE=m#$p2h+3i3X6(^qR0(^r.a0Gd(@0Gd(@0Gi`u@4m5_5q[i;@4jsp@4HrW
%@4HrW@4F[l@4$ZS@4$Xi@5u*&_b>lT+VR3/0GEHu@4$Z[@B]jhO^R+@ki@jcCA?D^-$nG1c/[8`H@?I`1Ehc"M*MS-+[chs+c[UU
%6@^+F65hE3kPIn<&MucjK^<+a`7`$^#hd*L#hd*LLpMkF&@.("&Aj32&;Le6+G:7-*JBJ(KF^M(O#4Y-=V/H*=V-2rUEC!f#!i5)
%k!4khLk/ZtU,:iH'SsY^.1j@O.1j@O.1h7FF!.7hEZg#GF!(r7k!01o%Re0(MW"(aL7_hkY;$SuO('5>%q?_IO('5d*lUBp*lUBp
%*lUAQ4c4dj4c4dj4c4e-H5$HqoI'kEX=+6]n50N\c1oAjl(\rKd75XIVN6l[^lKr(O$j)s9l*T`;BR*D;BR0F66IB^6QcAj66HIT
%Kg5V\Kg7mGKg80O76j*\76j*\76jBd"[G<q#!bEh`=WMD$@o&m![%K)![%[i"[E&1V)TAY-3ujL%6u8#RKF9)!J'%hcJufiH@FH%
%![%[hC!@\'5_'mZ5R]d_J2DS:s!Y,,\pNTC.Z6$M<:U.P;=_WGUZ;[$UZ;[$UZ@2m8'):'8'):'8')8dO-1S-%g*dONsjkU2.9!Q
%;b+Y7:e/>4;+J0XU5i+n9b`:F6lfi&X:aliOueJJ(j-Pg!-K"O!-K.S0^'qW!U(s(!U;**@FS0<"4Z98"EYoN3H$/:q-!T`q/G=I
%o0M@Yo0M@ioARVrk(CT\k(CT\k/3%nbQj!BbQj!Bb_HjeR1BjaOUn1>OUifL,9LZTa9RR>aG1FaOUi"YYmh=9M@kW<'?A'9%O3&@
%%O3&b*%!j?*$d^=*%!k>3)"^]3)"^]3)"^U36Z`236Z`236Z`*3)"[\3(SB-,n(kTEL?H-1T!<+*2Ylh3)"[\3/h[(3"h00'V.2r
%5ocab8=\;BoCt#3StEFB["e_g&pV=$#D'e"LBE<G%fhAnO/@d.2NgT:HDjD@0gH_u4IeBiH&t"EH&t"EGrTd\o,r#io,r#io5N\C
%k!@uLX[1s65iP$bi_T\rR.;A>R.;rj0]^X"@Di7%@D]p<_ght1+l>TF0]1j-@D7B4@D7B4@D9XA_h88W_h88W_h<diLC"J8VoKp:
%K7=7g0*CtE;>M@'0]"59!T#6_!T5Ba@DGaU"2J?\"2%LH_g%r,#C*"o#C*"oL[dh7O62Gm*<:re*QB&[44F]7%e)s`%c`Q>*R,O7
%1r(&/`#FQQS"&((C?.Il)s'0")oXnS)oXl=*5suJ3/Vn[3/Vn[3/Vnk3!sj03!sj03!sj@3/VkZ3/VkZ--@&AE>7e:1IO;i*(;rJ
%3/Vm036GkjED-p`,T:Yr*&S*Rg&^3G:S5\*3VE:o^.16n4!lk1'^YmF)!s$F.,*)(;6lsiEpN=fo4WY7AG6ES!08lU"s.>:!$5]4
%!$5]4$p;[S!'JDG!'JDG(jM;0!-jaO!-rGhcm)ES0s0E08-e(J8;H,u6q>'`H&h$EiZ*Q2dN$i:_Ao50_Al#eKfMC?KfMC?KfP)U
%MK=;3MK=;3MK9V_)!:mH1_P?];[B&j62^X)ISFmZs/>m9#]nLNN/*%"NYLKT1=I5:jHn.6(-+p*7,`u2Y>6?\*KcF;i-Xi<k$qYN
%3RZh_T&U<%e-E5nb#lii'sLpWk"&qF&f)AIT^o<@a/rJSUN0TK-k<Pl'%Y]jjYkP!'"dL=Nqq>M:Zc)G="sdh'H*?1,qa;`<i"/`
%,k^L)"#<amWJmdS!bL`!lV/A-mNQNu.p(@VY.7qJcfT\Yoc2HS4fW(p.&\mr;B?0d;"HArrFr)TD!UI7\a;a30PjNHV-ul(M@S@Y
%mMjn[pE+n3],A6"PJKEF$,c;@n5+)aI]?T[LLXTGSfd+K([\\PZrXa\GIYN)l,Lu=aQ)R3rZC*&cGNHXiCt1KedJ-Qfr-GrZ1n&W
%f<T7cnN#B(!Win=8`uM"`Ek%QnOb)J]($X4fI?HbNG!M8XjNB$MVQKZId<s<!+thgbOO$7Oe$[)XVNN,F3#UmT'KOE$.bR7=cD_3
%>5RcoT9";1r^E>tL%;5q@C8hk`'n8*EY<ZJ#Qs'`l^nltLX(>OSL#A(f<Uc9QEQ\Q;o03jL-u)P30not&OW;%FOlWDre%+"Dm`f?
%_6?']AR4q@d.33uCD2rQs-oCVn`Qg$q+\Mg2V9Jm0crp=k'q;(*HWIAL0Ym=&*:kcODj51$"]UrFmc@qM4S0;i'W@-+%h"PrN=(C
%3W(&=A'OJiDh$&m]nCInIuiE;&\coFXC--lrK4Hq-^I*@pd]cVIpSs6b'04giY%:a54#phTGU:M)EsG_R/W%9FjqpshHEr%W1C&/
%<0r)4LLZ4%g;S;?J(mjjU2E3*ScaJHpZmo,]_DBg;DgMR6PXJ/)r%DNHeu\VTbl/o?L4@=_g1"-'bBke'N`bkX!3d:3C_U,0D8X(
%]i1Hpg64AXjQ.Q2nepop<sap0rQY?;oN(KE[ru0DJ+MiDr'/?j\rV-QMAcL_\Yn3&)q>.iq6%N<3lpZW`h]Mj;:8q.qLe`,^uAu^
%I2N"IQr(J*TQ.EGY-H/q3K7tIkL"t+H![Ne8A;O2X26%'FZ?5`3md9C+^k=_mZA$VH[2Z%A$^+d0"tB0'8E@4Li<5FI74FfmWm;`
%l,R?bZYsD:ng"$;^*LQ>(ccTGAI75)e[bF"g%u`fdkY"^jJhT4SEeF@/Y*+$AZr56.4.8D5Ah,1YB'/^CR't3CJ4UdrO%YnXQ#<>
%LYK,$+$UhuVQtF5K3CCI@PoW=S#Z&,o0qGSLqWVgN=Lm872VQX&R4RlSa%t=#LjQ1*HhhhGNlTN[Aq)7q<e#:3bQ5U's%X,*)G4g
%q\/jPM231sS2\1*c^P00f(bt1*au;f=+f]BS1uM:0le89a'N&8`lSWk<;'cjq_/CQZ]lO%mH\AjG^24>75CGiiOn5Hc23G[QBmlm
%M`cs>(2[@T-'N=/D0m15!P+fd'mYTokBiQ?=Vb6X-<K29J@2/j]P'E7Ug!9+`j9.5d5U8l+/^`74!3Qa4eH:]E=1l#?!-g7Q44l2
%-re,bGW76+1=`4BY.5EUZd`!bf$_ro=ktEkCoA*`St`qnaSXN!6X4@d=M`_$$Ek=cBVd@5Hh^[D=]B_bCPfRIB2rkADcA>-EU+CU
%3#CDP<5jj2K,UZB]SiPQfDE4-+k!X!%PoYj6`H@)lbWhkJX]cb*BMNQ'*;IS[hX;-<)3JDgnh,ng`8n5<2lpc9U41S[.PD+^[f;s
%U[r5J;q>I?hbb?ITO(LZ*7Oj<r<gGt19<%4Yf5q24KIdGS$2ZCELQFjVf>h8o\X4*qUV`'^Nk=bob>]HUHQ`37m!2[Dk7,lShB/"
%(odX24a^VTHjiG@8!%MA5([nBV)#h4N1Q$:6WKb74raCEC?Wts;TW@dY&1FQmb61EcNj-$/*"d\@t"Ae4+A^DkLMArnn?)AfWud@
%p8cf>;h#b4!70'%+4&HWo49lSHJr[e><[?p+:1)FC#(f)%Qfb:kP`W<ip#Bmo9AbF2o_66P.eF$F:mVbStDn82t=@Q^?3([`rdU]
%2<X6S+2GbFS<s5&!"3-i#PQ&_brIA^C_V9A[0+T%?ZQg'CgUrSR]F#!bY.`"C[#RU][(`oM,3KIXdR?gqO1>3LMP^Qj51CCR]T<]
%RWILfqh<MN>^Sd"OX0SBGIun\(1hnC$p+:4ihiS+P1#Ba#K,2aX(YV$e(>WO4/SFccs!"EmWSWiI43^4HC(ru'O"AmClXXB3DMQ'
%F1q#a][*j;Ba8Ep4]`L;=ds3lb_rRI2%//p$?L8dChZ7Lh(sY)1tju%Bl:@kD/QKog_S4`pRh>C3=U%N*d2]9*6MM<R*t0W@7Fk#
%[-*@g8W_9!CI,V85JPO9a/:BZr$&kcRq&Ae8_*8gn`Vn\E&YhbD##ggmcHRiR<'h5c.P%D2f!arDtL-gF[&ETZScN^F'[STs.:Y$
%h"HPE(&_;o`-b!FP;@,rBl_MHf9os6S9+GFA!>"pa)^=q?uc`ghi:E@\X+>u#_c3fmc2pTQ'7:/,[MiU^T$k<M5,5=?-ZU!/[MHr
%3W!kFg77Kc"?ff/c!G27l0M&`=IjB4%b07VO*AD)>k]4\lV4Fdast9nbkDOQ3p2rE5?1N*T5!Agn2Sk]SCd@@Pg_Y5-dsF0FQT^7
%#%cBQ)u$t-4o4q1TV#T0IPaO;Y-/Yj6G)qCGHMb2H@)_s/uDHh,$HUr3-J04>V=ICbN7_Xl/go1K>"e`O*\@(b1=leZ!>Kn*W%B5
%h,E"i6OU^m_RZq,ojWfj0-Wd*\"^fU\qG--@-be=K^S/J>;&UU[6eabMgrHs"`K3>#lCD$8f_VAFc]:&Mrd]Wg9Jn+'&=6QS8Mdg
%YA@.N!jc7`6Hs\Tf5nCl^#lY2e9Wk:nGNb9bJeQFj2lcMBfn>AII$EF@GP:6@dToHg=NbSg[UZ*_`"cHLRV``ne]!7Z!TU6gi]2D
%*2&UU0a(rBhbSE2[TIpLDr8Lj5.Eq-X[lMAf8=O$EiDT2W%SnM$KY0JY#$_ckmI*[,$gmI.af&hV'8X-^/UmWPY4HV6FdN#/(>An
%FG3o)G(jtE86;an(?l1fC6@(B/f.70H;UCg(em-NY&%;j=,aM?qMLEL:p(Yo$fuu&^///jdML%0,CQ7f1"$j&.n1FE\RM?hPUf3A
%6[cpECFE8CY_I0E8@,$D(hjFZ1K[#T@&,[0(Q>_UEkt:r-Pq`=BYc+E(5t2WB0pr4\R9fS6&uP_lM4S0nV6mDO]&@skmc`HOkroA
%.FK0XPp4JH>Q\/jCT0jWkcJ!:J.4"t>"!e88;eltMR81[V+?NCY7t[_j[tXN;6CUI&bVD5/YZK!_Wo6sU'.S3WS'%(g8J:JO!n(d
%oSE>nOX<r.&nr$@qN!g;?R=,KWb1W4`@@!>;-tWt.*>O6NM9Z(dO=C]6lJM)8u,;ub=)1pI@3Wu.$oc-O'![]^Tg1S*Q??cdT<3B
%,D\fd,)A]c15JCsB+U&sA.X]o6kG?PNZ]6/M'*^*JKXeW*C9=S&j\@3OtAMJ3eD#Z[:VMW%Q/iO'QjQ+-qXWim7@GK+p:Io"IXMM
%DqRl_,)Auk7hDes6kHJpA.Yl;c6-:ZaWObU_&td-SO)n*P!S_tP!S_t3eQW3-%kCs-!f_>F9p8GC<bHa8dNfrl4B[oPRsSNP7TK<
%&<^]<\qupbBbr(KhC$_2e'*,e&`;rL:*L@@7C7u97Bh\2MJ*ePMWbj&A$"RA,'l_\=h@/F,.^777<FNP7<FNP7<FMMMs)'*Ms)'*
%Ms)(%(=>!3(=DtM(muQd8MhET3,1D#2G,%<2X3E!Dj3AYF-N>kFjt\)n*$n,;7nD%d6$VYU3DheU3DheU3G+<7.2OT7.2OS7-gcR
%$._uE8>?ec\g_%8qhT]M&\iAN3kt3!ZK&s$&=:<*$R+l;TX:kK@EP8Xi\`#o67ITR@Q4]eTks*.,a:VXa'fXGY!;2%$`Fb35/VLm
%KfG.Z.4V1">C$=%1J*QE8\+A*=bW[,cY9t'(SVSG6#'8N:r^?rPr0Tq9K+5&,;64Ip[CM*dkU8Wd^j$K@MP%m=f:Z"+Xt>T&WmdM
%:mUcDdMi,1EF*NR$?>;Pm#Dq+[RMNr12K9[,&(?S]sEM/_KP8I;@%Qgk!08naYG4D;CM-V=G[/1%O>i@5ft0RHM/VG@RnIM*,e*b
%UHV/b:\;ksd$<&B_L]Y3p3[H,$'Ie%jJ/dMan,9aURki22]fq%jTeh9Ih@J%Sjbc!K?<T(Jk(+!qmP:)PWa*M!hst)kO1OYHafp4
%4L/SDUJT6aSA_2XppfcO*p#'oO$c#:AZf$Eo-hXc\F,kW\c:,@MFT[if8e<*O$["CBtEg_B?G3t*K''_$\6E+a\Ht"Xm8jg17gGp
%=uf<p/fs-ID\t(G:ih+HD`l2.gP4KRn0jN24W!XEMY$&_/9qrPIN4i-PaA&0_A)fu9@s&4*efd7q]h.g\]D>=Ga-hGH/6E6]V5p-
%a(-'l(nrr/jad*X6;EAORpB/rETCt!5JN$HQi>V&J$'1WY[>/2*p._,3rV8>r1AH91nDP1H[Gi<?EJqEFP\NnZq!'0Xm@]*Ien!=
%DJ8d"\%>ZTAP5n4/`1<FbIu`G=-Wc$=.^afBt$QflFMLL]B+Wh=OD'SiaZ>8aOVu,,NJ+h>pr6&S_C2YHkLkBs"6`U[pRs?OndcC
%U:%UV3O0U5AmoTghh*eUg+IYd(Z17bY#s7kkX<Ing">-d[EB@6nbC>_/c!CoS\3deQC7$hDQebW2%.UE^<cOcCHioIG0,;-JZ7Hf
%e7X-1h9[dD>J'Zpq<6(D;&sO6DjI#2NOS9)mP"V>a%q3]GQ2[]+922HJ,@DBs6nQ(roIK>iD9L8QbWOrhuEK5Im&;[j2XrFrPpSk
%kLZ>Uq:jg+rm+sNq<S'prmT2CrSuLZr:BB,r;-"Lro`2=D^b-Gr.@64l!OJ^J,&Q_rs*_+$2=~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 191 x Fj(Fig)o(.)30 b(S1.)p 1 0 0 TeXcolorrgb
33 w Fi(An)f(e)o(xample)j(of)d(band)i(annotation.)39
b(The)30 b(left)h(\002gure)f(illustrates)j(\002)n(v)o(e)-152
4143 y(pro\002les)17 b(\(SHAPE,)d(DMS,)h(CMCT)-5 b(,)15
b(nomod,)h(ddTTP\))e(of)i(CE)f(data)i(and)f(an)g(e)o(xample)-152
4226 y(of)j(their)h(band)f(annotaion.)j(Each)d(band)g(location)i(is)e
(directed)i(by)d(red)h(line)h(from)f(the)-152 4309 y(corresponding)27
b(ro)n(w)e(\(nucleotide\))j(of)c(the)h(prediction)i(matrix)e(on)g(the)g
(right)g(side.)-152 4392 y(Basically)k(the)d(objecti)n(v)o(e)j(of)d
(band)g(annotation)j(is)d(to)g(determine)i(band)e(locations)-152
4475 y(such)31 b(that)g(the)f(ones)g(in)h(the)f(prediction)j(matrix)e
(correspond)g(to)f(high)h(intensity)-152 4558 y(v)n(alues,)e(and)c
(zeros)g(to)f(lo)n(w)h(v)n(alues.)j(It)d(is)f(also)g(important)i(to)f
(k)o(eep)g(the)g(locations)-152 4641 y(f)o(airly)19 b(e)n(v)o(enly)g
(distrib)o(uted)h(on)d(the)g(entire)i(pro\002le,)f(as)f(in)g(this)h
(\002gure.)p Black Black Black -152 5284 2018 5 v -152
5336 a Fh(\003)-116 5359 y Fi(T)-5 b(o)16 b(whom)h(correspondence)j
(should)e(be)f(addressed)p Black Black Black Black 2015
2945 a @beginspecial 0 @llx 0 @lly 473 @urx 268 @ury
2420 @rwi @setspecial
%%BeginDocument: figures/supp_old_new_comparison.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: supp_old_new_comparison.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 11/12/2014
%%BoundingBox: 0 0 473 268
%%HiResBoundingBox: 0 0 472.1661 267.9170
%%CropBox: 0 0 472.1661 267.9170
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 76 8
%%BeginData: 5181 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD98FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A1FD04A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A8FD62FFCFCAFD1BFFA8FD
%1CFFA8FD62FFA8A8FD7EFFA8FD1CFFA8FD1CFFCFCAFD44FFA8A8FD1CFFAF
%FD1BFFCAFD45FFA8FD1AFFA8FFA8FD45FFA8FD1DFFA8FD18FF52FD49FFCF
%FD1BFFA8FD15FFA8A884A8A8A8FFA8FD78FF527D7D7DFD04FFA8FD61FFA8
%FD0FFFA8A8FD04FFFD047DFFFFFFA8FD62FFA8A8FD0EFFA82752FFFFFFA8
%FFA8FD4AFFCFCAFD1BFFA8FD0FFFA87D7DA8FD09FFA8FD1DFFCFFD27FFCA
%FD1CFFA8A8FD0EFFA87D7DFD0BFFAFFD1BFFCAFD28FFCACAFD1BFFA8FD0F
%FFA8527DFD0AFFA8FD45FFA8FD1CFFA8A8FD0EFFA87DA8FD27FFCFFD45FF
%A8FD0FFFA8527DA8FD09FFA8FD1CFFC9CAFD44FFA8AFFD0EFF7DFFA8FD27
%FFC9FD45FFA8FD0EFFA852527DA8FD09FFA8FD62FFA8A8FD0EFFA8A8A8FD
%50FFCFCAFD1BFFA8FD10FFA8FD0BFFA8FD1CFFCFCAFD27FFCAFD1CFFA8A8
%FD0EFF527D52FD0BFFAFFD1BFFA1CFFD27FFCACAFD1BFFA8FD0FFFA8527D
%A8FD06FFA8A8FFA8FD1CFFCAA8FD27FFA1CFFD1CFFA8FD0EFFA85252FD06
%FFA852A8FD64FFA8FD0FFFA8527DA8FFFF7DA87D7D7DA8FFA8FD15FFA8FF
%A8FFA8FFFFA8A8FFA8FFA8FD1DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD26FF
%A87DA8FFFFFF527D7D7DFD46FFA8FFFFFFA8FFFFFFA8FD17FFA8FD0FFFA8
%7DA8FFFFFFFD047DFFFFFFA8FD62FFA8A8FD0EFFA87D7DFFFFFFA8FFA8FD
%67FFA8FD0FFFA8277DFD0AFFA8FD0FFFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A8FFA8FFA9FFA8FFA9FFA8FFA9FFA9FD0BFFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0EFFA8A8FD0EFFA87D52FD0B
%FFA8FD0DFFA9FD45FFA9FD0DFFA8FD0FFFA8527DFD0AFFA8FD0DFFA8FD1D
%FFA8FD0BFFA8FD1BFFA9FD0EFFA8A8FD0EFFA87D7DFD5FFFA9FD0DFFA8FD
%0FFFA87D527DFD09FFA8FD0DFFA9FD1DFFA9FD0BFFA9FD2AFFA8AFFD0EFF
%A87D7DFD19FFA9FD29FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFA9FD0DFFA8FD0EFFA87D527DFD0AFFA8FD0DFFA9FD1D
%FFA8FD0BFFA8FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFA8FD0EFFA8A8FD0EFF527D7DFD19FFA9FD53FFA8FD10FFA8FD0BFF
%A8FD0EFFCACAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCA
%FFCACFA8FD0BFFA8FD1BFFA9FD0EFFA8A8FD10FFA8FD0BFFA8FD0DFFAFFD
%45FFA9FD0DFFA8FD0FFFA8527DA8FD09FFA8FD0DFFA8FD1DFFA8FD0BFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0F
%FFA8FD0EFFA87D7DFD08FFA8A8FD63FFA8FD0FFFA8277DA8FFFFFFA8A8AF
%A87DA8A8FD0DFFA9A9A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFA9FD37FFAFFD0EFFA87D52FFFFFF52A852A8FD12FFA9FF
%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FD37FF
%A8FD10FF527DFFFFFF7D527D52FFFFFFA8FD45FFA8FD1CFFA8A8FD0EFFA8
%7D7DFFFFFFA8FF7DFD67FFA8FD0FFFA8277DFD0AFFA8FD45FFA8FD1CFFA8
%A8FD0EFF522759FD0BFFA8FD61FFA8FD10FF527DFD0AFFA8FD1DFFA8FD44
%FFA8A8FD0EFF52527DFD27FFA8FD45FFA8FD10FFA8FD0BFFA8FD41FFA8FF
%FFFFA8FFFFFFA8FD18FFA8AFFD5EFFA8FFFFFFA8FFFFFFA8FD17FFA8FD1C
%FFA8FD62FFA8A8FD7EFFA8FD1CFFA8FD62FFA8A8FD1CFFA8FD1BFFA8FD45
%FFA8FD1CFFA8FD1DFFA8FD45FFA8FD7EFFA8FD1CFFA8FD63FFAFFD1CFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8A8A8
%FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD1CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD32FFA8A8FD2AFFA8FD
%52FFA8767D7D7DA87D7D52A87DA87DA87D847D52A8FD19FF7DA8527D527D
%7D7D527DA87D7D7DFD47FF52A87D527DA852A827A8527D5252277D7DA8FD
%18FFA87DFF52527D52A852527D5252527DFD46FFA8A8FFFF7DA87D7D52A8
%7DA87DA87DA87D7DA8FD19FF7D7D7DA87D7D527D7DA8527D7DA8FD4DFF7D
%FD29FF7DA8FDFCFFFDFCFFFDFCFFFDB4FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-11-12T16:18:28+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUrs47&#xA;27SWZr6eH9/PGsaLb8QsUzxrTlG7dF7nFVf9H3f/AFc7n/gbb/qjirv0fd/9XO5/4G2/6o4q79H3&#xA;f/Vzuf8Agbb/AKo4q79H3f8A1c7n/gbb/qjirv0fd/8AVzuf+Btv+qOKu/R93/1c7n/gbb/qjiq0&#xA;aff+oa6ncenQcfht613rX9z06Yqu/R93/wBXO5/4G2/6o4q79H3f/Vzuf+Btv+qOKu/R93/1c7n/&#xA;AIG2/wCqOKu/R93/ANXO5/4G2/6o4q79H3f/AFc7n/gbb/qjirv0fd/9XO5/4G2/6o4q79H3f/Vz&#xA;uf8Agbb/AKo4q79H3f8A1c7n/gbb/qjirv0fd/8AVzuf+Btv+qOKqM+naqXh9DVZlQMfW5pbk8eJ&#xA;pxpEN+VOuRN9GUSN7Vv0fd/9XO5/4G2/6o5Ji79H3f8A1c7n/gbb/qjirv0fd/8AVzuf+Btv+qOK&#xA;u/R93/1c7n/gbb/qjirv0fd/9XO5/wCBtv8Aqjirv0fd/wDVzuf+Btv+qOKobU4b+0066uo9QuHk&#xA;gieVEK21CUUsAf3S7beOKptirsVdirsVdirsVU1ubd55LdZUa4iVXlhDAuqycgjMvUBuDU8aHFUL&#xA;o1fqklTX/SrulPD6zJiqOxV2KuxV2KuxV2KqSJcC4d2dTCVARACCCCamtSO/hkQDfkyJFearkmLs&#xA;VdirsVdirsVdirsVdiqnLcwQtGsrqjSnjGCQKkCv8MiZAc2UYE8uipkmLsVdirsVdirsVQOvcv0H&#xA;qPEgH6tNQkV/3WfliqOxV2KuxVD6jqFpp2n3WoXj+laWcMlxcy0J4xxKXdqCp2UYqhNE80eWteWV&#xA;tE1az1RYOPr/AFOeKf0+dePP02bjy4mlfDFWEeY/Nfmmx816rp0uoR2eiIdLY6lHAimwt7pb8yyu&#xA;0xmSRmmtIo+TKFAbZQdypZL5IspZ7GDzPf2n1HX9d0+wOsWwUIomhjY7qRzDfvip5kkAKvbFCa6G&#xA;5e0m2FFu7tQQSelzJ1qBiqYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVrcOScqcq/BXxo&#xA;en0VwFItdhQ7FXYq7FXYq7FUu8xyGPQNRcAGltLXkSBTgfANiqY4q7FXYqlnmgyL5Z1cxNMsgsrg&#xA;o1qnqThvSahhQU5SfyjucVYZ+Tttp8UOqNY2UelQubcNpltaX1pbqyK6+uDe29oXllFBJwUheK1Y&#xA;1rikvRsUOxVAaJ/vHLvX/S7vrUf8fMnjiqPxV2KuxV2KuxV2KqSJcC4dmdTAVARACGDAmpJrkQDf&#xA;kyJFearkmLsVdirsVdirsVdirsVdiqDv7eeWa1aKOJ1ikLSGUVIBUj4cqyRJIqm7FMAGyd+5GZa0&#xA;uxV2KuxV2KuxVL/MX/HA1Hcj/RptwCT9g/y0OKphirsVdirHPzDuHg8pXf7iS5t55bW11CKGOaaQ&#xA;2NzdRQXpRLcGUsttJIwKCopXFIYt+TV5dTrcCRdTVBpelSXg1RtTYR6lJ9Z+uwwfpFm+CPjH/d1G&#xA;+7NtQBS9MwodiqA0X/eOXYj/AEq76mv/AB8ye5xVH4q7FXYq7FXYq7FUHDa3SalPcPKrQSIqpGA4&#xA;YEMTuS7L37KMrjAiRPT8ebdKcTAADf8AHl+lGZY0uxV2KuxV2KuxV2KuxV2KtFlBAJoWNF9zSv8A&#xA;DFabxV2KuxV2KuxV2KoDzAK6FqOxP+jTbKaH7B71GKo/FXYq7FUq81z6xb+WtSudGlgh1O3t3mtX&#xA;ul5w8ohz4uPUhoGC8eRcBa13pTFWK/lV501XzOdUe6vodQtbUQLBNHYy6bIszGVbiN4J5p3Ko0YU&#xA;PsC3IdVNFJZ/ihLbHzHo99qd1pltOXvLSvrIY5EQ8W4v6cjKscvpseL+mx4Ns1DiqpowItJN6/6V&#xA;d9f+YmTFUdirsVdirsVdirsVQcMV+NSnkkcG0aNREo6huR9vD3yqIlxG+TdIx4AB9SMy1pdirsVd&#xA;irsVdirsVdirsVQGpx3Lz2ZhgSZUkJkZwDxHAioqRlOUEkULb8JAErNbI/Lmh2KuxV2KuxV2KoHX&#xA;gToeogEqfq024pX+7PjXFUdirsVdiqWeZ7U3flrVrUJBIbiyuIhHdsVt25xMtJmXcRmvxEdsVYL+&#xA;STWDwavJb3FteztKrT3tvqY1RmM01xcmN3W1s1jCzXErqvxH4zU9KgJK/wAxxecI/Neq/v8AU5/L&#xA;Uh0t7gWwkEkcBW/FxHYm1RJC/rC2MnHk/E7njQAqyPyL5cksdKstT1WDh5nu7OH9MP6juguGVWuP&#xA;Tj5NDEZJRyk9JQHbc12xQm+huzWk1QABd3YWhrUC5k6+GKphirsVdirsVWSwQygCWNZANwGAP68V&#xA;U/qFj/yzRf8AAL/TFVNdP076w5EEZfgnJeC0Aq1D0774qqfULH/lmi/4Bf6YqrIiIoRFCqOiqKAf&#xA;QMVbxV2KuxV2KuxVxBIIBoT3HUffiqh9Wm/5apfui/5oxVa8MoZAbyUFmoBSLc8SafY9q4qu+rTf&#xA;8tUv3Rf80YqviidCS0zyV7MEFP8AgVXFVTFXYq7FXYql3mOR49A1F1UMRbS1DNxFOB7nFUxxV2Ku&#xA;xVLvMdubny9qluIRcGa0njEBRZBJziYcCjSQK3KtOJkQH+ZeuKvP/wAldF1XS5dabURIiXRgFmty&#xA;I45zxaaWYcEvdT5L6s7Sc3l5FnYH4VWiEl6jih2KoDRARZy1/wCWu7pXw+sye5xVH4q7FUPf1+rg&#xA;BmXlJEpKkqaGRQdxQ9MlHmrvqMH80v8AyOl/5qx4irvqMH80v/I6X/mrHiKu+owfzS/8jpf+aseI&#xA;q0NOtg5esvIgAn1pegrT9r3x4irf1GD+aX/kdL/zVjxFXfUYP5pf+R0v/NWPEVd9Rg/ml/5HS/8A&#xA;NWPEVXWLs9lbu5qzRoWJ7kqCcZcyqtkVdiqCtLZJbSGWR5S8kas5Eso3IBOwamTlKihV+owfzS/8&#xA;jpf+asHEUu+owfzS/wDI6X/mrHiKtNp1sxUkykqaqfWl2NCP5vA48RVv6jB/NL/yOl/5qx4irvqM&#xA;H80v/I6X/mrHiKu+owfzS/8AI6X/AJqx4irVmOL3MfJmVJQF5szkAxoaVYk9TjLoqJyKuxVL/MQY&#xA;6BqIWtfq01KdfsH3X9eKphirsVdiqQef7uK18m6s0w/dTQG1kf1fQWNboiAyvMVk9JIhJzd+J4qC&#xA;aGmKvPvyR0fQbi/1LV20nSk1KBLf6jfabaRQIltKs3pfAq8obmWJucyhzVHj3oaYEl7BhQ7FUBoo&#xA;pZy7Af6Vdnb/AJiZN8VR+KuxVD339wv/ABlh/wCTq5KPNURkVdirsVdirsVdirsVQ+nf8c+2/wCM&#xA;Sf8AERkp8yoRGRV2KoKwW7+o21JIwPSSgMbE04j/AC8ZiXEd/wAfNkDHuPz/AGK/C8/37H/yLb/m&#xA;vI1Lv/HzTce4/P8AY7hef79j/wCRbf8ANeNS7/x81uPcfn+x3C8/37H/AMi2/wCa8al3/j5rce4/&#xA;P9juF5/v2P8A5Ft/zXjUu/8AHzW49x+f7HcLz/fsf/Itv+a8al3/AI+a3HuPz/Y7hef79j/5Ft/z&#xA;XjUu/wDHzW49x+f7FOyEglu/UYM3rDdQVH91H2JbJm6FsTXRFYEOxVAeYF5aFqI4hv8ARpvhbp9g&#xA;+xxVH4q7FXYqhNYvTYaRfXwt3uza28s4tIhykl9NC3pooBqz0oBTFWN/l95v1LzEL/69ZQ2T23ol&#xA;VhTUELCQOKsL+ysOnp0HDl702qpLL8UIPUtY0zTFt2v7hbcXdxFZ23KtZJ524xxqBUksfuFSdhiq&#xA;3RgRaSb1/wBKu+v/ADEyYqjsVdiqG1FFe3CuAymWGqkVH96uEC1BI5L/AKlZ/wC+I/8AgF/pkOCP&#xA;cz8SXeXfUrP/AHxH/wAAv9MeCPcviS7y76lZ/wC+I/8AgF/pjwR7l8SXeXfUrP8A3xH/AMAv9MeC&#xA;PcviS7y76lZ/74j/AOAX+mPBHuXxJd5d9Ss/98R/8Av9MeCPcviS7y76lZ/74j/4Bf6Y8Ee5fEl3&#xA;lbp3/HPtf+MSf8RGWT5lgiMirsVQkC30MMcKxxOsShAxkYEhRStPTNPvyZom0L+eof75i/5Gt/1T&#xA;wUEu56h/vmL/AJGt/wBU8aCtNLqQKgW8RBNGPrNsKE1/u/oxoK3z1D/fMX/I1v8AqnjQV3PUP98x&#xA;f8jW/wCqeNBXc9Q/3zF/yNb/AKp40FXW0cqmZ5QoaV+fFSWAARV6kL/L4YyKq2RV2KoHXgToeogE&#xA;qfq024pX+7PjXFUdirsVdiqWeaXs4/LGrveiY2a2Vw1yLbkJzEImL+kV+LnxrxpvXFXmf/OP1la2&#xA;f+IoYIVtx64Cxxeg0ZSO7vIS7SW6QxvKZopfsooEQiAFNyAkpr5ji84R+a9V/f6nP5akOlvcC2Eg&#xA;kjgK34uI7E2qJIX9YWxk48n4nc8aAFWQ+XPLEVzoel3vmTTrb/FMlvZS6vdpGiTPd23pyj1JYuJb&#xA;hLEppXjt4YoTnQy5tJi3T63dhRSmwuZPc1xVMMVdiqyeCOeP05K8aq3wsymqsGG6kHqMINKpfUYP&#xA;5pf+R0v/ADVh4irvqMH80v8AyOl/5qx4irvqMH80v/I6X/mrHiKrBaW5lZOc3JVViPWlpRiQP2v8&#xA;nHiKr/qMH80v/I6X/mrHiKu+owfzS/8AI6X/AJqx4irvqMH80v8AyOl/5qx4iqtHGkcaxoKIgCqO&#xA;tABQdciTarsVdirsVdirsVWSKxeIhuIViWH8w4sKfjXFV+KuxV2KuxV2KuxVLvMbSLoGosnUW0u3&#xA;HlUcD0AK4qmOKuxV2Ksd/MMwDyZqZnl1SGP01rJoXP8ASIJkXj9X9MFq8qcu3Gtdq4qGCf8AOO+m&#xA;DTtL1iGOC7t4GmikhS/jv4bkhg5LTx3Q+reqT9s2zEH9qnw4AkvXcKHYqgNEFLOXalbu7O9O9zJ4&#xA;Yqj8VdirsVdirsVdiqmrD6w68KEIh9TxqW2+in44qqYq7FXYq7FXYq7FXYq7FXYqpyiMyQ8yQwcm&#xA;MDu3Btj/ALGuKqmKuxV2KuxV2KuxVL/MS8tA1EUJrbTbChP2D/NtiqYYq7FXYq7FXYq7FXYqgNFF&#xA;LOXYD/Srs7f8xMm+Ko/FXYq7FXYq7FXYqsBl9ZgR+64rxP8AlVbl+FMVX4q7FXYq7FXYq7FXYq4g&#xA;EEHodtjQ/eMVUPqUP80v/I6X/mrFWmsLdipJlJU1U+rLsaEfzeBxVv6lD/NL/wAjpf8AmrFV8UCR&#xA;ElS5r/M7v/xInFVTFXYq7FXYqgPMC8tC1EcQ3+jTfC3T7B9jiqPxV2KuxV2KuxV2KuxVA6MALST3&#xA;urs7mv8Ax8yYqjsVdirsVdirsVdiqwK3ru3KqlVATwILVP01/DFV+KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVA68obQ9RBrQ203QkH+7PcYqjsVdirsVdirsVdirsVS+PSZouYi1C5jR5JJeA&#xA;FuQDK5kYDlETSrbVOKr/ANH3f/Vzuf8Agbb/AKo4q79H3f8A1c7n/gbb/qjirv0fd/8AVzuf+Btv&#xA;+qOKu/R93/1c7n/gbb/qjirHbrzRosWsy6NJr9/De280VtPILMfVknuER4YnuzaNbK7rKnFfUruM&#xA;VpXi1bRZYjNF5zWSEQNdGRZtNZfq6Eq81RDT01ZSC3QYq3bS6ZPNDcW3m55m1ACK09OXTnWb0SxI&#xA;ipAeZBY8uOKr0vtMeGKZPN5aGaY2sMgl04q86ni0Kn0KGQNsVG+Kr9N1TTL/AFK70mx8xyXuoaei&#xA;PexRfVXMQkd0UOyQcA3KJgV+0O43GKpp+j7v/q53P/A23/VHFXfo+7/6udz/AMDbf9UcVd+j7v8A&#xA;6udz/wADbf8AVHFXfo+7/wCrnc/8Dbf9UcVd+j7v/q53P/A23/VHFXfo+7/6udz/AMDbf9UcVY/H&#xA;5t8tu7K3mWWCNalLm5jht7eUB1jJguJrdIZgHdV/du25GKrJfN/lRbVruTzaUSBbqYxE2yzMlkZU&#xA;uCsBh9WRUMMn2VNeNRXFaRqa5oLrdsvmuMiwBa//AH1j/o4DFD637v8Ad0ZSvxU32xVE6fc2+ozX&#xA;cNlrc88li6RXXBbeitLClwlG9DiwaKZGqpI3xVG/o+7/AOrnc/8AA23/AFRxV36Pu/8Aq53P/A23&#xA;/VHFXfo+7/6udz/wNt/1RxV36Pu/+rnc/wDA23/VHFVK50ee4t5beXU7oxzI0bgLbA8WFD/un3xV&#xA;MsVdirsVdirsVdirsVdirsVdirsVdirEj+W2jzeYNX1q9lnuZtSuYLuG29a4S2he3tYbeNmt1l9C&#xA;V1aD1Fd46g0p9kHFNsN1v8k7uHyVdaVpl99dmhsj9VtmiSJ5r5NH/RCn1nkKpE8Q5emej786YKW0&#xA;8T8okOp3GpXGqcrjUrm1u9VWKD043exmSeAWytJJ9XHKJRJ9rmPDrhQlbfkLHJY29rNr9yywetDS&#xA;MTQoLaZLdOEaxXCFWUWaEBy0IJIWEIERRSbZP5K/L9vLOoz3P19bqD6ja6ZZwiD0njt7OSaSMyye&#xA;pJ6sh+sULcV6dMKGYYq7FXYq7FXYq06K6MjCqsCGHscVee335SNf6do2k3WrBtL8tzWs2hwrbUlR&#xA;bSWMqtxJ6pEx9GNogVVPtciGIxTbFb78ltcl1G80a3mCaJqd5qGp3erOkbssuoWd5bBET1lkHpfW&#xA;1HDhxanPmpPDBS2yHUfyYa5+omDWmtzZS6hK6iFwsxv9SXUU5tDPBMvoOi8GSRTyVWrSqFpbZB+X&#xA;nkGPybYXVml6b1bhrYqzR+mVW1soLNQaM/IkW/Inbr0wqSyzFDsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -267.917 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 267.917 li
472.166 267.917 li
472.166 0 li
cp
clp
gsave
0 267.917 mo
472.166 267.917 li
472.166 0 li
0 0 li
0 267.917 li
cp
clp
0 0 mo
0 268 li
472.25 268 li
472.25 0 li
0 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
61.4165 226.75 mo
61.4165 20.0835 li
427.334 20.0835 li
427.334 226.75 li
61.4165 226.75 li
cp
false sop
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
61.4165 226.75 mo
61.4165 20.0835 li
427.334 20.0835 li
427.334 226.75 li
61.4165 226.75 li
@
168.083 20.0835 mo
168.083 23.667 li
168.083 226.75 mo
168.083 223.084 li
61.4165 226.75 mo
61.4165 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 226.75 mo
61.4165 20.0835 li
427.334 226.75 mo
427.334 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 20.0835 mo
427.334 20.0835 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 100 /d put
dup 101 /e put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/P <1C60D8A8C9B64EDF881FD1B4CC946498DA3C19C25C4B8520933678924FDE
4A210BE068A66633EA9CF0A18FC1E10710CF47869E1E8874BE0332D5C37713DD
48920646AEDE175969913994AE21EF> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/r <1C60D8A8C9B81F2C46C810F818CC6D7FA9350962F8DF74B0F191B25EF39D
AC43ECC82A5155465999170893BB853FBDB2F1E5E6657B1704EB4EA080223F79
E5CD0E9024AC9DE64C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KQJCJQ+Helvetica /Helvetica findfont ct_VMDictPut
/KQJCJQ+Helvetica*1 
[80{/.notdef}rp /P 19{/.notdef}rp /d /e 9{/.notdef}rp /o /p 
/.notdef /r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
136 243.492 mo
(Proposed)
[10.0049 4.99512 8.33984 8.33984 8.33984 7.5 8.33984 0 ]xsh
320.584 20.0835 mo
320.584 23.667 li
320.584 226.75 mo
320.584 223.084 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF867A21BA19EF0C570BB6C4AEDB905D3E548C322F786DA7
0CDAEFE3DEF4849E1D1588C3A22DCFB11573EC9A318A3B019A45D0FC4FCEE76B
AD39BBA1E526700FB4A11015D71862856C2D89337A110F371091E0B563CCFD9E
35D4> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0
AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C
76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/l <1C60D8A8C9B88C080EC3D3ACA1AA9447BE5E1701C51D0B115EA96EF55CA0
1BE9> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 79 /O put
dup 97 /a put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[79{/.notdef}rp /O /P 16{/.notdef}rp /a 2{/.notdef}rp /d /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
294.079 243.492 mo
(Original)
[11.6699 4.99512 3.33008 8.33984 3.3291 8.34082 8.33984 0 ]xsh
427.334 169.334 mo
423.666 169.334 li
61.4165 169.334 mo
65 169.334 li
427.334 209.917 mo
425.5 209.917 li
61.4165 209.917 mo
63.1665 209.917 li
427.334 199.667 mo
425.5 199.667 li
61.4165 199.667 mo
63.1665 199.667 li
427.334 192.417 mo
425.5 192.417 li
61.4165 192.417 mo
63.1665 192.417 li
427.334 186.834 mo
425.5 186.834 li
61.4165 186.834 mo
63.1665 186.834 li
427.334 182.167 mo
425.5 182.167 li
61.4165 182.167 mo
63.1665 182.167 li
427.334 178.334 mo
425.5 178.334 li
61.4165 178.334 mo
63.1665 178.334 li
427.334 174.917 mo
425.5 174.917 li
61.4165 174.917 mo
63.1665 174.917 li
427.334 172 mo
425.5 172 li
61.4165 172 mo
63.1665 172 li
427.334 169.334 mo
425.5 169.334 li
61.4165 169.334 mo
63.1665 169.334 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B7F37489CF70BD6DA577A0101CCD591A60AB52AAD593ED
DED9> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 32 /minus put
dup 48 /zero put
dup 49 /one put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one 29{/.notdef}rp /O /P 
16{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 174.82 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 165.578 mo
( 1)
[5.83984 0 ]xsh
427.334 111.25 mo
423.666 111.25 li
61.4165 111.25 mo
65 111.25 li
427.334 111.25 mo
425.5 111.25 li
61.4165 111.25 mo
63.1665 111.25 li
427.334 113.917 mo
425.5 113.917 li
61.4165 113.917 mo
63.1665 113.917 li
427.334 116.833 mo
425.5 116.833 li
61.4165 116.833 mo
63.1665 116.833 li
427.334 120.25 mo
425.5 120.25 li
61.4165 120.25 mo
63.1665 120.25 li
427.334 124.083 mo
425.5 124.083 li
61.4165 124.083 mo
63.1665 124.083 li
427.334 128.667 mo
425.5 128.667 li
61.4165 128.667 mo
63.1665 128.667 li
427.334 134.334 mo
425.5 134.334 li
61.4165 134.334 mo
63.1665 134.334 li
427.334 141.584 mo
425.5 141.584 li
61.4165 141.584 mo
63.1665 141.584 li
427.334 151.834 mo
425.5 151.834 li
61.4165 151.834 mo
63.1665 151.834 li
@
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 116.742 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 107.492 mo
(0)sh
427.334 53.0835 mo
423.666 53.0835 li
61.4165 53.0835 mo
65 53.0835 li
427.334 53.0835 mo
425.5 53.0835 li
61.4165 53.0835 mo
63.1665 53.0835 li
427.334 55.75 mo
425.5 55.75 li
61.4165 55.75 mo
63.1665 55.75 li
427.334 58.75 mo
425.5 58.75 li
61.4165 58.75 mo
63.1665 58.75 li
427.334 62.0835 mo
425.5 62.0835 li
61.4165 62.0835 mo
63.1665 62.0835 li
427.334 66 mo
425.5 66 li
61.4165 66 mo
63.1665 66 li
427.334 70.5835 mo
425.5 70.5835 li
61.4165 70.5835 mo
63.1665 70.5835 li
427.334 76.25 mo
425.5 76.25 li
61.4165 76.25 mo
63.1665 76.25 li
427.334 83.5 mo
425.5 83.5 li
61.4165 83.5 mo
63.1665 83.5 li
427.334 93.75 mo
425.5 93.75 li
61.4165 93.75 mo
63.1665 93.75 li
@
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 58.5703 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 49.3281 mo
(1)sh
61.4165 226.75 mo
61.4165 20.0835 li
427.334 226.75 mo
427.334 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 20.0835 mo
427.334 20.0835 li
427.334 25.417 mo
425.5 25.417 li
61.4165 25.417 mo
63.1665 25.417 li
427.334 35.667 mo
425.5 35.667 li
61.4165 35.667 mo
63.1665 35.667 li
@
gsave
61.4165 226.834 mo
427.416 226.834 li
427.416 20.0835 li
61.4165 20.0835 li
61.4165 226.834 li
cp
clp
[6 6 ] 0 dsh
320.584 194.417 mo
320.584 155.084 li
168.083 226.75 mo
168.083 165.917 li
320.584 120.833 mo
320.584 107.75 li
168.083 121.25 mo
168.083 104.167 li
@
[] 0 dsh
293.916 194.417 mo
347.25 194.417 li
141.417 226.75 mo
194.75 226.75 li
293.916 107.75 mo
347.25 107.75 li
141.417 104.167 mo
194.75 104.167 li
@
grestore
267.166 155.084 mo
267.166 120.833 li
373.916 120.833 li
373.916 155.084 li
267.166 155.084 li
114.75 165.917 mo
114.75 121.25 li
221.5 121.25 li
221.5 165.917 li
114.75 165.917 li
.923522 .746761 0 0 cmyk
@
320.584 18.25 mo
320.584 24.25 li
317.584 21.25 mo
323.584 21.25 li
320.584 40.167 mo
320.584 46.167 li
317.584 43.167 mo
323.584 43.167 li
320.584 56.3335 mo
320.584 62.3335 li
317.584 59.3335 mo
323.584 59.3335 li
320.584 62.5835 mo
320.584 68.5835 li
317.584 65.5835 mo
323.584 65.5835 li
320.584 63.75 mo
320.584 69.75 li
317.584 66.75 mo
323.584 66.75 li
320.584 86.3335 mo
320.584 92.3335 li
317.584 89.3335 mo
323.584 89.3335 li
320.584 92.667 mo
320.584 98.667 li
317.584 95.667 mo
323.584 95.667 li
320.584 93.917 mo
320.584 99.917 li
317.584 96.917 mo
323.584 96.917 li
320.584 94.8335 mo
320.584 100.833 li
317.584 97.8335 mo
323.584 97.8335 li
168.083 32.0835 mo
168.083 38.0835 li
165.083 35.0835 mo
171.083 35.0835 li
168.083 62 mo
168.083 68 li
165.083 65 mo
171.083 65 li
168.083 73.8335 mo
168.083 79.8335 li
165.083 76.8335 mo
171.083 76.8335 li
168.083 76.8335 mo
168.083 82.8335 li
165.083 79.8335 mo
171.083 79.8335 li
168.083 77.667 mo
168.083 83.667 li
165.083 80.667 mo
171.083 80.667 li
168.083 89.75 mo
168.083 95.75 li
165.083 92.75 mo
171.083 92.75 li
168.083 91.917 mo
168.083 97.917 li
165.083 94.917 mo
171.083 94.917 li
168.083 94.167 mo
168.083 100.167 li
165.083 97.167 mo
171.083 97.167 li
168.083 94.25 mo
168.083 100.25 li
165.083 97.25 mo
171.083 97.25 li
267.166 139.417 mo
373.916 139.417 li
114.75 148.5 mo
221.5 148.5 li
0 .960204 .946044 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6
C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA83C2CBBCD89A1827
CC58FDC85A8DFB6CF043CBC57E481A1BFB4AC131B9751770056C0E80F4764323
078BDA58184A405EE51A0CD263897356EBA37F07634C62A89D13BD3B9631D5DF
BA5DD765A30358A68432555538AB46A7C75E0621846302615DAD8C2BCBD5C891
F7CA482BF295A57FBDF509BCB98518A5F92E5A0834955E87097681F276DFB2BB
C57A72F7985B1447C571181C1100> |-
/q <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7C1606B5E4B0CC1666D106C
062CBF25548C316EFAE3CD807215447DEE7459A9D1F79881E23A7CD97C235819
3B2CF61D474D654F5D11A16B0F4A55DC2C0EBE047696753569C42AFD2B22ECAE
0F067510265AB7C26184F3B68C845BB80CAB35D9CABF5FAFF5C3DB638C995B15
CF9621519C> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 33 /space put
dup 69 /E put
dup 77 /M put
dup 83 /S put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[32{/.notdef}rp /minus /space 14{/.notdef}rp /zero /one 19{/.notdef}rp /E 
7{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp /S 13{/.notdef}rp 
/a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /.notdef /n /o /p /q /r 
/s /.notdef /u 138{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [0 -15 -15 0 0 0 ]msf
22.5708 191.406 mo
(Mean!Squared!Error)
[-12.4951 -8.33984 -8.33984 -8.33984 -4.16992 -10.0049 -8.33984 -8.33984 -8.33984 -4.99512 -8.33984 -8.33984 
-4.16992 -10.0049 -4.99512 -4.99512 -8.33984 0 ]ysh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/KQJCJQ+Helvetica*1 uf
/KQJCJQ+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (supp_old_new_comparison.eps)
%%CreationDate: 11/12/2014 4:59 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.=`6+<Z68;m#5B92D;<6:\81,"8tpK+]0pWf8X(WdimQZ?I5&\14NrEeD]$A&F,_n^@/P7W*#S;*?Z])iIrIkh<`N2*2D3m,
%hg<+-;e/m?A7f@_A40rr`o^l^0^X(qrO;^_pP_2%E!tn0GV"jRO1TkogoPZPUp34R80S)r;@suMNCDhU&]tmpmHKteT:ClFD.u*b
%%!mQR39)XhB_L9&br>9ll+W@-]tnXTI';6&AF#Hbr<XrXQ$U2;PA\"S^:TmFLV9k?0dr5ILc<K4Sl?bi^7#]o017etPSY86Bt)\S
%R=;Q>;9#.t$2D'`^qHb/;0Pj_i&cCZC`Ihr8!hY7K#WZd!AL!sj1?OZ0GufFs78DOm6CR<J,DN\q;X..rBL8D^HD='i1n-XX#^"Z
%!9h1B3Z\l2SEN_epdcmZn[-r6oJPtm-PFFuOA8:)m[1e`:Zf8o'FbNgK;$9BPNUqF2o9f-LiJ#.-);d-<*UK83X*s8?0ShWqlE%P
%I!&7<;gd[rPKWAYT],LI(rqb7qW_PDP=G4o(XPi:RjQ[H#9Be!qPo,qpR6#BQjAHC8P<;G7rQfYdEeIESTG,8N'!lCJgR>Fr#q&e
%7S\_:s(ZM4],ZiP]K;+o&0X*+::PREN4\m"DB^C:Gs7q/b,_-K2?3e4EW\n#a"oQ[Vk`Za\"Ae0Qu#_kh2XPR8VB_,JO^;D1&n05
%s(Q,ncmKL+0D?O8>2bjB*%l8Z8_^b$8+bDOG'bom.9Jb_kYGMO>q%ZZc&=a0Vg(VW^Us)%-INaEjNp+gK[3$f51=6@//70CU'Q6;
%&`/Bh]G3m+(/M/>/WkQmBV?d2'8e(K:b7_WQXuiS1mCS0ThHC'_q!4M.$dUq1&(sF:omKD@YFk_/JR,;T`AZHAU%E3-PEq8\I8Ya
%AQ"A,RWOtiLpTb16<3ip#TO!H5VX)lHpTP)QTSIB%L**/:^.+-T6T]X3_3g!(OX(Q(_h?!."WuO)?pA;GjOo'*lGL\<J"/t""4@@
%K23mo0#KJjQ>l!nV?nj]Wo0(?-)2gi+PeEY,OOO:b>T]'+oe2PN"J5S'U_KIEq55c*.3<H0Lg>b$#3"B(aFFF0,Ph*"8J[_LI^h?
%`F+Yo8LBX_$UHE0!OO<)!q*]p8b1An/eZr,0nMM*2e;Pk!4_WrCSYMC>Fm`N7/dF&@":"l_>nRu132q(`X&25N6jVEOl1pmL/03"
%"%:[N.[O3L5p'fn:qB?G1==0bLHA:&L(K'O8E@<-fI-VB\0ijAjPeD-'-iR!F<?C^m1\sl!-qB>dE[r08gp1Q4[BV[;9&VA.BBMA
%e3VXHeZ5i/)-Q5c+I"L^!L4:;Fd8EVQ*8KAN,*PoTMI=(EHN!BEd-Utb:OCCUaj]3p`KF1XHKL]"G+3`s,ql9\\UN'0DUC'a5c6C
%qNq+Q-HU3!0DUr,Ol*.&dX$fMbN6eqoe6--c]d8O?h+_-0,DYSoe6,B.ZrWR?h07Vr_YiiEsSCKI`ZO((\nGK'Olbu]Ncui<p=6X
%<A*H4n=TA\fY\[E2>W63cV]BL(V,q0'U+;X79ZOT&.j,O$b:;?cbnLX&QS!%j=@m]`J_hNGp:"S^SG$a-C;R;T^r:%IMo'&F8.Ef
%Xun5_^Z]rJ5gP"Ce`up0SA7n=eF'*Gi!RRMr!1-4IHBE@Xq$Xd\ca\F',AIc["IB-TS+S*S\Cr!6_2?`d6`@MS+p&g*<[:(;+SQS
%8`pIbpp?LjVQ=5r8ASYM"131f)u>uOTkai`I)kW?8LZuK[%dUhdnuL:1c&QO![pWQ5tDWkP#bd4mDK/k-p7XRG??Vj*bd`,604M@
%ORX\)*opalM(=^V"`du_QK(sbccujHON3rc>uOtNa_2k`A-,d:#IP8ij71+\d.)]:_d>`Q8co2pAS&QAb=qdaQ(._Z'G@dag^6^/
%Z%NNbo=)dgfcHmQC1TJAa++nTFQ*oOGX@Ri5>Ei"2ZCmYh69FRR=3!ICj#>M'M;;Z6"iYhY[!<tKo%`_IqpBn)3W3hMJ@:%5kDAZ
%9R?a^?If15h4uTG#IffGp4b4U(dNS)*4tq.]L,,ZU.W3p&2+LI^ECGX*be)Mde#)gn!SXk"H_[D$+n7r9b/CTF\m'tQ5dmQ[RA_(
%I$U?'V6(PM-;Vs;nEA&?ilh^_j`N&PY^g96/b6[!kB._39($dfe?;>am/ul,lp@7=ps48SWdiREX07CiOs#K^?'H/I>`fhe"^<=s
%TKMCEg^'HpQl&MaA\qS!f2pUjfrg*U*Qu8!F]Rj%$](Lf\:?JdPrV_;Ja&R(6CrNTqJ,8b'GQ_A[WGIb,G5e$Z(*p&1PC!Eo4Ea/
%o*'habf)@1N?Y=CI>BE(PugCk[qC5JKI.D_btIAY.VFF_oO?"`TQSLC4+DBaS-rA)Y4FlYH;RWi5bR1rFW'tC9ZYWiI);m1hr4T7
%N'&7W)kN0,M'XZM>SV`"aWq1.OIsF7+XpKEV'QMlTM=@I_4i4`L@>nf-s8kk7;u2e/1=#")te[^Q#r00%/DOU70&6B!_\d[*KaBh
%,G06X&7ApaQMMW+/(1VT_&!r@a,8.3Cc(>bhWS2:#C^kG9r:;00+Y3m`,tWu3g`IuDZ?gd\^QE!gSjqK"=D?+Bf[0BH')T/[$kJR
%qUumI\pa.Vdj!,6?EZF1G>[tZ:@mjI)UUe5IC.fN[ARB84mD_):`<'b#Ld\!hhb[JS"i86qDRa70^PD'3f0GogjCYJ@)E'L%t>[D
%hqf_QPIRRhK=kqndF1Zdl?A]WpSd_<s%L#;NYJ%CRN2].oa'2Pf-mU\OJ8;^UaM/B?*H[dmlF`gKLS(I8&rMZ)keJgMmfOYOjn=L
%5X,n/enFP%oio\'lPDaIMTY%UmD88sKfSG28mgD'[u[O:Kdaff\)$ED#F"BKO5[_#O,hRdN7$"J:@tU?L2J0AU.L4PHda^L3?:U;
%^CA1]KXC/T'V2mt,Y@g^CelEVoP<aS;dpG*la5(;@q]_Ye*Zf>AOHcO[0GpC=**/gp2H'j.<tYOD2qF5q"ik6]ok;;_m,\,$dfrk
%#6ZMH>0J_-R3VLO.AP5*!2@#%Zp;57/`H!B'!@1dPaL_^V;;5%F[2BT@*0H;AP/0\kQu,<JN5"k:.^.<VSXeHe#?76CYG8"LV4eW
%dr>n3U+QtT:+Fk`b&sQ3*I2r'4r>GXO[`]6@U$NcZq20Rb2[1k[@<uVV?3QMdF"2QD&F?,W@eeHP$/`SP*C8u;Q<A^FdXSf8f7r/
%UJDdJOQ$AQ:BRK2J/2#IFh5>2i;l6aPZ43:QDU,M9U.Y'aQj.%`XhmMl^+Xb3JiS72Qk'K0.GpF6%hXeV_Fkpp"KR.;9ZNhb#'4,
%W:pj'T1@EEjM^6HhM!*rr[#I%k;n6]FS0,ld5)p#8cpqtL2];lbNEDlhk_6(]d\81)%EI\KDt2Pons@4G$do0$0#@m+EcJ;XUk'A
%n+Jo%*;:lPYt#tZj1cdnr[&7qoL4-A`?Zmo'N&#0I\bX;qJ@-$pR3>K:#;VUpa>q8$@eVr01rF#d?b2j4>$5UQ$S'+"'Bi##h=@P
%*"AG=5O13(c&is[:gcKpM$+a.aIkqG']T7f!kjE/k_fTC/]9B(Or-t],)IA6rt>Z`6;fFl5hES\;`SWf3HEV&`-m@GbIA0;U[+[D
%!ToZBVOE]mGJ8k+NA6%d4Q8=<:D1Y^7g"gA%Q(7/.08Y.rQ?9iX[0-PraK)%XmnOAKoe^djuLpn*#29W3uf-tir.=i)<,<jIWo-.
%#!K@;4J)]?3!Tm>j`([nn5)o6Gg+RFF/'%UlCWF\Per1R&s@q9(#&[hhlf?[aaRnF)8:=L-=%9=2o#lZ,46qjT.JM]P?&\U\Mg<K
%PJ2pa9,NqN--:&5Tmm+!UJ'3uUc5XgR]pGJ17,a5-gc,%XkOa;#t_F2P<al+h0oTOoQ&ZV^ue4E4eBH:)?14L8FS=u)#Z[Ms!"jG
%.>SkOO@5j>E!/KY$2XmX?Y85s]nqC&_9*PPYcZE[8=_S_#JN6_+$K*%M&u<p^\.+MG6TbY+.tb\HID_Sg`c=dZMQNG8]lD*I0q&a
%CANUe4E[.(r;jYCdC0YYlo-lL\W>PW:Ro&W68'u_dG#-4M>(WV[d+`R'T!h!7GirW5Q:NJrolZIje)PC5<h0o$V1&6U%[keY.jGg
%ID]/SQtC;LO8Q=2dL\]2L=X[SU]D\N0Bh1.7]^h33btMjo4hJ:`;+#TL=AC-6>)'A$8"eH4@`]jJH8%7=7UD89`NVD"kmhHd>V6J
%)H$;2bW#Id[__@33Vl#`g`G'B"s(hHosWWLq\R\54&Qp#M,Ca9F:0@@KlH#+B[lslJltr$9Y'jY;Ro7pT9^,Fd0#%OjY_EZO9.dV
%qmQ@]`imY7GT/67b6_j@g9SIOHW-ap]GR+Pm%Y:ebL,1*[6O]EUT2k`m]!i49HfX,8s9pI'*m`1Mhh9GK1.?KXQu=+p'0n[WT.ZR
%Em[l"`U\iCXV'N.Y.MqZ:NEftSBUF$muot#;onn%S1R"Z56m=g38;pPAFT7>@"1D+6o3jMa@WUk,"CU_;Z@g(#'K.Uet7Fp96pI3
%gRj#1ru#eHENe-rQc$gs7*6O`OIA=j&\gtX>3'ABje@53ef@Bj&Ku$R]\g;kah+=qd?9!:_*R!X4=/^AmY@R"rV2S8.[dL]d-o8I
%c_"`5Lu77u"0:t!"qr7de>1\&M$\2Z]\,o,)DM<ba32;@e<Y'XhOd/q5hk%cU*!ajUtJ$8ed=I%?FhrY*GQm?6uu&dOPsX]Q,Ph$
%G%;VRP8D#9F8W"E']\.[U+b-bF_-_1b)<;Vlpg3F3.99toL<TQEX2$fF>@fB1r3Ciq[\i2C@6W8h=:R$T7*MI%]0p6)mT-@Q0jS:
%&00qP_0Hnbd;8'SHe9<1,PS_F2+9sG"$LRQ,*Pm159;_>HcFg=gHigY6.4-q'PrdVX[.$XEOR+>;'*+V'2k]]g]Hc319IurhaWbq
%7(.e>MDh&^a2PQ6;4d0-D-=:X[Y<6qn-K^#4Bb]BneIVl?^p(K%6g2Z4<$k%C%SIe^63r;@"Ws8ea7K,5Lc[N!$PT*2j0UiHnoI_
%Sa%Y1C$/loURa#0YK^dB2:EgLl'OQ#9QC`:6f7AG3?*);'>-qc365+;`T@(5]Am>'q;\tFOr'/IDu\Y.q;X^<)`O.NlMYT>X\jB"
%1(EgF1-E`caO;\qrc1^0(K0^:E']p>I5r7*].cMJ>#;dT`sXu4bKhjs)*\t/11l\3+%_:QKKI/Nq$7dt#rCdRcH7:u[K1a3FgKsG
%^S>5tEYK>p6%Hp`(g,2u0Q8^23u.+[`o*$EfGo=Wi3!8O(7%(VVWG"nj";Lsb=Qb!fi0Kr#(t;)ob^:_k]`i[bMCRuY)E-;QVr1W
%QWIZP*LBVUnd0soE=S3LUgC7sqaB79;McZN(?=PNL'pg:<^mQ9g'[(1L$+O?e-a2ORu3%XMB!jGKfOd*%YEFqHO(8NC;3B.mL56&
%F.C+3H-Z@\,1=l)35YQ4pfHgBjDHhP2qg_pR]SB1g%F9)Bf(M'T!;"LG-<tqRfsY4IWpFfi]o4\p`BG05Q@Y]o'cVTa++!Dr9]"/
%[nj>X'CQLTBbC&"FdEiaGjCa,=lpXcAG-@WeZgr[=/6>=pUes[#&"a6do8>u:52=3Yc5P`FJaPqB)c`%I$<>uK;#"6_BK5A3S9mC
%Ji5iK7E6'\*??)`:,&N6rCPV#Up[():b\U..n4;SZ)96T"b3pG^WK^k7+9RLbNss*[jkKFH3c<Mj+<Z0:L@JLP$HMLY?:<52VY5?
%!A]T;QbQ?BR!:*Oi[mdb<?Xt*#^jjjBSD`3CrW=9X=,>-8ZU*)mB1;'VSBB\.V[I@>ZT>4PU1K1I*/07k&*5WB&!Ku7mu;\]IhUE
%Cc?^h&pjqhD-7d?nRF`k\0D-],:)eR(_.E>V.r7m\_39hi"Bs4)C%g\gmhhmnQGFC>A[On`E;PF%(027(,!d.M[t!C#fl/.T=KUF
%[+CL%j#)F=d#Hm3Os_/RHSF_U*<UH7*Bb96[-rDR`1[tDdA$Y0Njphj7+m@YM.n%!=`G[gdqYr11/:YCJRdhmA#ai#];K(n"k_$+
%F>LPUCh>J7:FX2q1hG=.@TVh1OAlrI;MK!X;;sS%cKf[h:"`JD`]Q3JG^&E=EXq.rBfkYnQk%M6$JXT:>L!A&Ul[qP;MZ*o:"nDF
%W5=V-gW-T/W)njSC.$/oY+r!;0`!M;7>=?L(a8E8hm&SicucVGZRIg3ljd65TV&g7Y:hhtcu?u;FE(hi'IiuD<T<\r8o4>2ZFOA7
%@EEYZo-nE(!/r!0>2\)s"tVjS\5@m^rCNg6qa+St(c!Ns*5)h]=thHcT!f>e9f+7S*(P;\d8lHcMR9rK$B(cXRD/=EA;hWXV1:*e
%&<Sdo[E]KQ:U%$Y<M:HEn=$BDVef2@K&cT;#N@hH_'+7/Z>(KS:N%&sQ.-OI<]41KpL-Ij]ni1U];X@qU_i-tb$\3@D5O7'6%hJ0
%IO:!ZD`"q<5pF,!'Ldu/\lB=2Rp(8V;K=I-&*uoIXem2,kY.NsD7Z`qc*f>/*3k6<7-_[p]j=6t.J>gi\#m`*'VbJj68CH($<M!9
%qhhZ5Qp9V?`7;e8lIoSWL8FYTS&8j1>TN#D30$L9&bkWoG6l#%NWu[m72Q_t)a_bF@^LOC6F+>^rq^'2%59(5PBYbuT[fT\22=X/
%`*a%hI=4T3lq3hblYD0DNQHdQBmG(\i_4VbSuD`T*D8rebem5raM@Wm>9P&)DA(es[.`4A2TM"fUdIhtGgB:WAOC3/O&fXhKp,-H
%%Zj\on%<#FNcX]CXOSeT9RAb)-\!O442BRY%At'YAWQ2oN30ZQkY#Yq(O/l/?+?7X!n"[kMbXI3S&MjI=r/57I=Spdc+?WkCM;>o
%\,YPSr9YU+h`q,1YCHGas6\_CO8n/;j$3P?5Q:2&qqM/GIp().JCCgNfd>I"A=Ak5+OU>DJ@2deJCBjSjXa4:T<Hr;P`@Tg^@dI\
%kR?Rk(-TC?KS`@-XOOO`F%l@tF6V7fDeo):&K;#iMTBhSE*t,*6;^2ABYgOTZ:lM\(*@ZCK2EG&d^>3GT]@U938On8Ium`a8[0F%
%8$XBKh!eOdRM]`^foqXZ(+>m/(lUTb1u!Vsg5L./*qn;P/=78'eF(X&^ZZ&"\il&BAMQk7A\I6Q!BOm[Wr_/7c<a\k`PrGmif'1C
%H,AC*`T![+=p:,X6sX/Y:Y/9CZnm6,Y%(EH41\^kp1Rh[-0$bR;g4A<BNL4!VD,;[/#6G^kZZ6YfP4$dJdJb23@I%!a(8>>h3K$O
%<(p(-PZE.jTJ5+6XjWf)X0?>#CW_L7a!bTVhkf1t1jYG@HJu<`*)GY%l@U:]_9"&a`!06[_'KGe"pD8r;]s8)+&]-D<[7ehf>?q]
%1UXT,&SoeLNKIrc>#PthA&!I7r)W3.(g54]>eaul!d32o<B;J9>"H1A>Ka,DKSc&EKlY";8;n>n5^j$+I@qDC,;@=%/dhmhWH_8A
%L4UQRpYmjJi;RjLb!gs'iSa_47"fJFD!*o*.PK)4Dtq;[\:6BX(LPXVcg(AGDR9,\h<cY0L#DAfin`XA#]+`Pa1$8k),IIW3V.oW
%EkrF5mWc8*m[Xlt(&&F?kHV9G5"7[aI`D(W?hVEc8k^Q!'4:JqiKs*XGp@>Mods6^8;5H)Dmtu>%8RJ?8*TPMqW4`_Mjc)%m:YkY
%rn`(2G[GbhQdb9hVpT8IW19n8'&!3+8ZH+hKeFOYc;s'H3Y@ao';uetI\`u*2j*[h5'C3M4l18!qsrQCGrN4ejo`/)T/Ip335HqV
%7ZUCGBGC&kY+H4eiD_c?.)#9J?X?\#XQ0[F3cU4qqq:T9-i#A'cHctQ(:o$7H.8%u*$31-]"7Dt8:X.rf^n/U$JrJ(U07nRMaYUb
%MQjj%I7?FO4bU_bU-+OkGVn+q?]Q7TW?X#6]-NT@!_(A,b+#kLp>"gu20k.>;g!&SVa;LF&Sn@[E3J9S;C;RU)B2pdp<?ch*^)C;
%06+$H)K!Bjo'T0K4##_(>CB9%T:*)j?151qpI;9ZAk&O9cbk#+qX2R@\Du*7Y'2NtGW7Np27VJ&m?k8L=C8hW5DeE$JHYV_NSWE3
%ja?(;Ygp/P7r"ePDP%fSb*?>g<MNSl1UuBq+a-pB7WRju_c81]46*T3^["5FWWerQ%;+bQqj#""@S/`RH?E.:Nio/G\5bqbXcdjB
%+%B&FCQ)^%m(C?0@Zs>GXD8Q>+Uns_LNL&4XX6fQm<,a9gS<pGIr!j)8L^nCSX:I^\X=?'G^Yr4S$cGU(]+'CEN:ho?#[DW5LHkG
%c-WG,`c8mcX`ENuo=RYqM=o,<._]iLl<T#m&$E&hZS<<b>%M2fX!YO3%9os)Vlib7\eXp,ke*3&5KgQ:_UG1:SMgH"Rgk@Ne\FkZ
%e]*rgA<TB/X0mSD-edikfV][(1*2;-';!3%/._J=cdfbTPK'^GXA)X$]6;?$e^L*he[6m5:>G>9jEh_!C%WXj?.Q`f`iU;=ca@e=
%hdb=(eNrp0QD`DT096cJ04q=%\SLUnD;8kX]RJCF"Lci]@9ZYL^4+oZS$mY1P8Zfp<fae\n:'5iePZr9F-B=X$AQI3%p_>f[ed7P
%<Qgl=qO$34RP-t7<QujR?9>-15;ScV+i@?QT5P[GXU_.Thj[cLQj^QkC.71AQL"J&mH"2\W7B;Z,eQlVD2E_tiX)Ia-'>Rg>an^^
%[\bsqj2m7W@Y'/46Skj9meXYi9=J'RlL%3Xo4/&L+kl3o3hU7'27*,TYkEqn(@l\IJX0ABE2AbR$FC_CjbkKpH06VMoGB3G4sHfQ
%I:!;V://XrGAej"3L%%9.3*'tU(lBWSNK0<dFhP6RqoW[eLG>,d%b@kUeW(_qG&!TS4@\=r>=me5"VgPoib(J@C3k#]FXL\a&QKl
%$LCu*o&UH=rK]!TbSHR`H,S"[d("DGNu$&J>V^Xf654Fpe\+scB+0V:V4H'J.58),hsYTnX=3#9Zi'fOT;u8aa3<DW'usR]F-J@/
%:uI?s2^u)B-18-gE+/IK_-Ig?-Sj+^$Ts*PbNj;38bIiEGEk>bRD"T$FjG8"pQjKN4PXW88^[[H>cZ"Qf0-b,/Z^r!gI(E*/\H#q
%[Kb"3Cnu,a"\uRs7&aSfp5HUj:Hk2[rSX8bmfNpFAdUXI\YkM?O@f,c2"t84(<t]J\ON<Uf"GWCXYJf[JYT_HoqmdG^Bhk,Dd2OT
%Id=O\p(gOYnOMbXLF*2Y"9.@[kaK0Oq"_O_UFkN8n`To%p<MaU'PYGZbiA@<@Tgm01`]q'q_mVo<3pr4Xe#n-PFcD7G5.bXb95(0
%(u,_[cAemFr(k/"mB6o[D'9n/TLpBeDL4`Xk:2i@N)'^,gY3`dWlc9>VXu:uFda2KO7)V/g$$@Y5cSeo%P+2C(#Fe?B3`!/O0f:K
%I.ShCWa-*K[?o,ZF@RSc6IUfCYdZ62;:397U(>e0]a'gZ7ZUJr0@DXpVcXg'I.h\Q;/FjZh;+A=/]G+1;MHr>)V.&T'>1qi@9HQ"
%qU"I]_nF`(j6qQD*RDO2e_&][H)k`B:/ikSd"\OHI$HoTBb^s!VqpC1=fX2FXV.30%9LD\B"4D6X`_&%d5VdZ/$4[i%**8CCYNm1
%Q(A2tCHgOR.LX0I2q6fHVD!>8ZrKe@-ESJO'Bp6m\lLOOe)>&=<mrNbns<b<.TS,p>6V^7_oMo5iPt:2o2\d;kI9TUJrl^BQ&+]>
%aWRK<bZ[0%RG.=-LpiAZ;0'u"Q(r)YY3<;=OKlipZZ?%$U(O&mKQRR.K[u_?Yl(7Y7I%P[Tg4r0o-05!6c*JHjJlu[bD5A1#_)h?
%UV@>@8V#NYL?rr0$2+D>"_0+=451Z=mm,+3bd'><g-:O7DW21odMnac7U%iPH;k%7ZAa^_%3Fq9#$@jsTq>PYoV6]T8E)\**bknE
%IjjlaVf@D.1XkU%dO+nu*=iF-LdiLCB6=W=%LX0pb,C*CTMF[Fmo"-=4qM;nEsJSu_L5=>R.Mh,$BYjV;BA0I%'5:&nP][K`ufDV
%=EQPBiL'q4AhZdC#k>rhbo@r'qq-!#M$shLfU)m(mLtl-BS6J!VWXF9STU#&E]Z6.^<A$8RnOAJ%G?lW*R.[RL=W:nbrDOQmZh.k
%ZWf^BW+U3JML@R$FhE=73>M3J41$5[Bt7&N0Z/V46:9#Y@[$(d1K&gU<#?T)1T]P%r[gg5VT\Q`1sttef,`*#nHVK)2Ur_=YOm(A
%?_/ej2dW(D1GTg&5(?Nf*Ls]'jme`I0"c'b3:\5`7CMoErgfac-^8`t9NTNRm)QM&`aqj8cQu=)J)2"OM/3;N;e@pp6g]UO)O#O0
%BM0_oCFBY:<\_/oDIg[BoGb7`Wl*]<8X"Ib;NO5l7/J]lef($8!BO'"-EVir?%DilAc]>nD[3%<4%o2b_Za-HMq*Bt!c1QD8-h<f
%.I>1GJ.WN66L#$=Bpq8lRoT6Vh'^eB=TUl6eFGs2'Ll7Sn"\]Jq\D$U)u!Nl4I?QKoN[[,<7+B>E=Jflp,t2`T;dtGVJ!i$Yc'b/
%LsWYLa(@D5eu6>e;,WtD$>-OuV&A`$N[MA9iL:eCWp)E1k%7)c17mRQ[)WY`].KXPT/<uOgas\!T0>+"QI6ddI9O,64k1ElYaHVu
%IVr7[)s_Yc!BZ:,ZCZ\/PXgAr`C\<DI5M_T8KZBg$ArY890gsD0P6u.ff4NUlM\G&*R\a,^3PJ/Rdo4;%V[ul2E0'_,ttc#9_Q2C
%g9$IOI5^1WHF8\]lt2FP>Lg9mBY7tZiH1u4c-oeZqnd;tk&3K9<jb&jE!CA?O#lYeVmNq5\?UH]>7*Z.gd3Bdfc[4*EGBEr)NBbE
%/2U?9cDW+8h:Qn*l%oj60^4E`l@dFg$_i@BM1u&hShN\kdN::&`d?9IDeu]Wbpnda)14KFR`@-#.ILrt/_(>k](9olpd)7I>Wk7A
%HHd_)VfCVSP`lq9'X^_=(88slEOSX<1g.;""dBBS&@`49@0Lu!k2X6;/$L)R,j85uW-*`^)tA+"K1rg@C"AIH^99NT"8S#K1*`$o
%!1LoOk:>"RF[m?IjmcPF&Zeki-b^!)]BMq#I@q#=2:l<hiCdJ@PQW2:MuDs<]@]j-3*TUO\<0ouF(@tL1cg")R]:t>+]hN'XQB>-
%Slc]n$jL<u>g5`g`lEFm*h9`iI<DV1*1\#f>6ruIoJ\_D+b\Ru<3e_Vc!1dF*g1E-eQ?]0)i=:a_l6\iZnW2]lo0Hapfuqo1Y^1u
%[d?$uk]LC!KN?=Rc^[^O@^`dRht/=d['LOl`9cHF!ui1c2jU8I?g"Nr]^B07UdiEMrRPXU()BfR3]QN@\DXsOYOD>N-[5M94Zq/2
%L^T;kk1l`f#Y!PeJ`@nj`o^_6o(e92fT0Wf^]dg@6B&5A.BLu02tg]5+@s-9R1ls=2-GaG?I\VYQT<Pah[8S8c[h@/S^jO\(?"TA
%>c/N1UF+1Um*!3TkfCC?TF=N$7dJ'FPnlYA>(uQgBNRCpZ=\KO3PS@>;Re-JJ:m8T1U_gc995!uLA[a1+=M%5"e(ih0>u3]o5CZ\
%ZdB]@rVfqko_*%9isGCSOBmoK/),NGA!P&ImZTt9Cj*5io91`Mgp")`'mE$F:#)r4DWk6C>eHh%h[[V`g\QNW9t.5JJTGDX%=qEe
%)qELT5D);L*,mi@!=B7hi[VG<*:5iH9@eVmLC/B#ZNXmb:9:.nRPY60KTk&4-`YYo2;27+I1Y2!BusI@cq[ckl:d$pIZ-$_%ZTgA
%rQ+2c!Mq3;pDH?ES1o+V*aJsAikX%Gc(W(!H]=Ltd@'Lk[40/Hq[5Al]%>LC'h005'fhY8I5`u\]&s^4n][sB;qB14(6D;\2haRI
%blZ7$?55LLpum&7c.`qo[8.I51n?);Ccu6@o@^ff:pS09h]J>'Q(WSUCp);.kWFThUL#C^]ieP8a"!HoF#6c%*Uf$pRR7;hHcn!+
%RnNT:RTJ-[?MQH+p)+hChcr6Lc*i?,/\2m8[l";%C$-`M7;pj8n[>b/`9[+elcjGCR##%/r*%b;rb/u*b(j;2.1"2bNu?iF8qu$]
%L_]X>LP[8-/Ch/GFSm#KTuni,7;*74Y"Z/H4JYWo,m4krf6!Q.BIe)@,/S2,jCk)G@,`&2_?t!u.A1?4YFWb,l7oBF;Kutko:F/$
%&,1on=Q`Ae*!i7LD+_n,hM$+,'R%K`dgg5p`nad7;lAgF\L1nJ2+Kt3p>%P)+u;"a]bVeMb*,bB/-$EoR[^kcp]6g,/MCX.&b:-]
%>P"I:(_cP46Vh%jc%L_V`i:8LU#hS_R^Db&`-jDM-53Zbo7PRS)m[ZI*U_B*2p<qDOmeDmIBW:GRuQERB3Hd_2mUa^\BedUXL*(/
%+8(mSM<0r1[ACe:XCM'2pm.$WK_$(hWlFV?N'\<s$0SXTj`APQN%>pnV\#8)/0@7+bD#Oja7?d*d)@<Kq5e*%fTX1K_YJeLZ$\/N
%FE+:!53l<7H5*W331k=E+$G]j5+Kq[Q;87G(CK?S3^B0),%4)bi'bHgI-,EVhkkgb[l()>ZM#$R&s/7:53%r*e/P2!G*RJ(c5;B)
%;.ZU)T6["&Y<+`nHmi_=;N=U3F2D7Rg&,Jgfec<h<BQq*bFd$NT`m87!nE7V,%AMW&>.tpc5=,.5ePmML10!iHa)M>>BY`RlZKO!
%r8([pL[e8j/hLpZ7,:'b<6AK?aKH6n',kjLmf=MW+K5lp>M?`D#5>XqaIU@0m*;#K$.5QN_X8CIR]V<DN&Xe3m)&2Wr(H7bZ,;RH
%\T2R>775Es"3$ciGjVnlJLX^A<XsI$ZSP(u&uN+W'ZY3sc*bRF>Y!I"jfY;FW@]&X<%_it_]4!i=E%kL0ep%L&)oh[%V[LE,Wr6h
%.BPqVkYt6b3lObBGs#8F@OG[0'3"ZgFV+'%.&IO^ACg90i6fNr\BJID,h!m+//s*!W*:%/pSSf3!Mbr8Km''^c=72!DCIB2"g(n5
%<_m4%Z8'<>RSAHrFiUk?0aO6I#_%V=g0\>D%lEmaO%#.B'4ijFd_o^iC$in#Z:rL``$F-Z-@EjrQs8+1M@G0'e7EP5]'"lfR%CE[
%mI`cXc?WW#rDqGiPR+-M[gr&Hao8/9Fl$\QPJq'^b:*kK@'CNX"H2M&6]56kSn=:I4c$-p#:gRIRVCCrmskeu@`5O7B51F*%bS,?
%mnDd[(fJTO4r^U*AedYj.us7a\kh?F7\Oi?7XAbp9[d+=P2cOj(OO];;$b[!HF?sYQ@X,*_K+ANJSsl@jKs3`5!kOpFfXNDOO?<&
%k-G4o7'KNU&BiN<UBCB14k(jlHTLEB>h5C44t.6qgoZi<Q'(aZV%<9@N2jFi2`#35ep=Yad9CN3/8BY"N?P-H*A23B&N;JZ%3;cX
%-pWU,=#mYEaArd$Nq7D'$KiZk^6ij7GW8@^NQ^!<:cKM6$1!Re(P$b?V>ZMe9s$@Ug!3a%TXja8,!*f\Y7hK.+@+#Aj$cpRSsk1_
%iK7DZX<U%-81-s?(5n9uSD0FiFIE<>EYrOKidO&T+IL]q[:`!S^R<\Nf3iQHlbP#F(06*7[.Lb=`).C=r(LulRkM_+N8s1k%_E:e
%76N!ND=,Em:1kNiWf-JtQq^9]g+:NFk:;T1VH86iMk9/^@b)4@g!SlNOa3hXg1hl(>cYJ$bpkJe%SBqP1/Hp=Ws7ah3\kUsBA!#)
%o8H])_Q"jP>]ug!X,5&1&+[tNX^iSsiQ+.@F6b)HA?!Y_):/11LQ$)aa?84f=\WFu`CZc0F.pbL?kn7mYi"./Y</u'.]6,LRNkSe
%_"A=kd[parjq8cW>rjt;@RL<.LWfNDY#`M<Y&-bG+X!nED$#D4Y?D!2q?hc-]'Mh&HHJ%1Mm_u)A(B(<k]uX<`>V>4HNF(k/3OaW
%EN!kME4-hV(:`^3hJZMWA$=]/0@!js^#-^)4O)@jg2!T_3YKsNWjfoEUAF9M9%N%1BjAH$.P:qdBKb))14fNY^E0S$Mp^0hj&#6c
%crs0sL1K,uXB[+!#\P-Ci0cs?><\6/&!Ce4?'sKplkG46#'T4LK4Jn$)C0[9U*/.0mhGuInn[47"N_iQWsOpm5g'DS+t,7]K8Tf:
%clb]$T.33t7FLE9MT&T"(B-t,A><LmNR@*=ClB,dK?^q"(4JkPT#nFLlC^8A4-,qa^Mm#@iUU6%:u3[D:Bs12>2@Y\M(Kg6V_LE[
%3e4:]-r8TVrfZ>227V4>a.m`o$1lu%&(+H^T*mHQ7MgF%YuQV;VmYAlF5irbg@rU7]"3aW)*gnS=!cPTl*!oAZY)&=Ybmon_W`%b
%n64Y!%&6,$4_h52g.,H7qP:aLS9;-)a5'a\k4A?X&q^BG)=0"7P,K6okl'PiK>a],,[PD6!_;"X-WIagJ]-l@OEg`H'=c12i7f-6
%.sSp$NAq`frCkYaBm9'g,#YjFWDQPGP#C(J&U&@6j]G2l!oV)TN<,MX<guG%f@mb01_'/:q&c`Um[h=nXl<%87]j788o[RMQ9O['
%fdc@6'/shE16Jod;]c]c&HK<#H*TskGFlKU>+Gun_[3o>iJRIoL"Vs2cn#1bc74P))lNA;dtcaB<R$0p2F!tg/[JKIf"leM/n6_C
%)VFh.\8L$#kA`X^2oBUU1>$NII'BH:>$/7Bgck]a#6dja%a(JW`i7F0aU-%rdp8#eEhd@/PJ)d+'(h-I.PG714lk'pAZTu+$iaO3
%iV%*R96\N8F$nY$_*tq0qJ9q\A>c^eYaFVGb'rZb[=r+^CfAjI4M"R]?I,QGR!#Pi]q3XDc#:$Po<-=[S7uXZIONo_>LE3U>3'i7
%gA2<)5ukLSi+>5OO"MfRT(\"AbX\TdhTt$_[r><JUDtdZ&T;?(?>//6YI3#X,?1pk;LMLdD.]&aI<$^fW4p5f2Pu%R7TtC[[Td0J
%T=KMtV1F%aK6&a`Bs&kgccE.TnUt.Q@%Xd[H'Ss,F(4QD6!tcB9"'Vf(;%f/.^75IWmATsEga^,UN7KCHjS0b!rIq`CV"kq19f(Q
%W_]r5X<t0t.&q24@V,AN5,5&?QfT5n$O-6lfEG:rfOqQOWCION$g]\7PHgb);Ls6c;170[\Z!i?-EtfqJ6HetT+S$T_r@Kpqm<#.
%*+2e^fXCpX3=5%nNjPVaqm<$7-';dXfI,-')qF,WNV&Z$Yg5ie`V[np"8c1#1@Hs'$S31JBBfT,g;#mN'mI':I7?SErNc"05,27)
%mQ<!/m'G5*9eeD)@%S#lYZ6+ZJUL!T@Lp.G!rI)UL(!7%3hH&.):*sHq22V$a)%E;Tc3TD@$em^C%RYsh_5d*(=2"'>i]!:Mk<iR
%59#a&)6.Lo!!d$e@#M%/gJE;K3acK38-`gpZe+1.c"-:LF7?Y2\S%80Qg#/<6CN,AHst@O-[LGYSZ13iWY0A,)cN"ngdloa[49Y!
%?=fRJCgpoU/$g,=s0m+>*:#Sm>`=AJnit)^d@mC^_;p)l.u/-D^H#dXB9W?IiX`^fnioK_pItS$77*h-ao<,86I(ko:[oI4bl>.k
%]Td5!;FP`/r-q@bOJ$H"ST.;)1be$)Pqa>tULf%HZtF/fHqQsC*?"ZskY+@h@f!H@q-r4:0_%e+jW<YKN@c,XCt&+&HA7e2`aoc(
%LGSYWY\n)KC4MkN1P0cedc?ltV]dH"m<gZ*Yho;ZG<W7rgVfF=F,<CmNS3)%2i"FKed,=:C5)+'=J!qPcCK2_3=3W/4p<<bJj`aW
%&o\,tILd\/P4jFg=Gj!<#7P:>8:0A\c!HQH`&aGYqgM)MR:tIgao4->EPMs6jsWI",555S"9:%3Lp8\(R5$VAgg'QTDOiU`2D%9E
%Xp7"q?aeXhjRRnSc6$WV^mOsjP<7>sQe\j+6R\8`!nRMZ_S+,a+D,SA)8j7<'EB_5:/%=^i#2\!BX&*UXaUA&/A.,-F,NJfAG37[
%@2+F;HFt3BL/=OUHK4t@ld9.t5F5*WkOiRVRTskIhTFEE@G\c07J4Xjrlp>c]$u3;L]1uXr[k;4cB\.MAXbr(-$fN&Cc7<;obg%O
%]hhABC`GqAcCO^U2:(s_Q,i=sj3+el%7tt+naau#IJG`i[FB)0$Ujm_CJOHD]Blh5,FhC:i]`k8@]gj-pVtq^jk-=9"'Qu(=)V*Z
%J<l8i]s53(DU.JC)6Y'=/:smQfJ8b-enYNM[Hc=))RC:&$+oGJClBpriuEVLFBcA")GB0;ONP2idTcV$\XCW`#GAal#bNJ"J7@h$
%NMZ46IQCT&2M"g7dN$8)3=*_`ddo&4:QnL&j,;,'87c[f5i&_Be)ur4#u>?]SDE1;/(*:.r,$*31/B#PDqo1Q@X^U-AtAP4h6t>p
%TD4f"%>)$g>I@XrF`CE$[tRB$fkH\G"G4)lkD<)2:SVm#^6L"^7")ARA]/TDXh'Jcil?Jb#$$0:g3>Fe-6"dLn1]7qEJ@QaOnAk3
%O[BC//DrM*Lfd;g.+>Z%lQ,r$M3/a:q9>$p'>ptG9t)H[d`.Dp4)8&tOa3_d910j48.J[be9&R^\OiiYFZ&LC9WPG1H`JR5%pl0k
%kQ2?':G,@Gh;SqaD6m8)\emHmcD.24b?m$,C1H>ElgL!>A6u:IpV$*nN)^[^kJ'C/=QTS;[7\?'k00P2'C-SR?c'/'.Z?hQ>`8*l
%[IQ:hhJ+A/Ec'M[C;qe"P4*!+JJ"q`CL5Ij8)sH;7r9"02qgO8lr3[O1UU+aDBFA'PMn1MGJ9T3H_,]Z29a(9BO^r;\TE15>;#nM
%WK1qe&>Jc`P=:M"7Ju0BRb:BXduc)s<-LN)rCZa9U`^+APTG]TVd46jC#.(IA[[qKhFJDbq$apEe5-e@;FJpC_l%l_jt]\*K-md<
%I><n_+h3>f:-',6;9,eoU3-YWXi$tmWpCb8S;5,g9GOf-_W/"pTItld\2gM1W=PAuf+<nfee-b^KLG?\@(SGS^b#@nkUrbpNH,r(
%30t/Cjgs,'GGD"jRJ"JJnh'!E:I^=i0!.Oj-lLjI429nN/i9!R(1r<.dc7aCMiH1QnBu'3M=/7H/$Pq:<ac2Z0%"1'jY"-anVEK#
%:t9T%(QrHQ"f\m?"l2=7cK!LB[$m/?&(mEG1p&885C5B>'#'>p]`>BQQ<1"V\&:-OPMmWV^U\O3>Ij@LBeVgI1;3ITCsr#h52DX_
%B54BkX/!-q)Q%b%*bT+<cT/SY65u8)kD8RdgYd1=O^9WWWu+g0Nqs5TD7c&k^P]jqW35C9]4m@WK=p'0TL@&(UlbX77r5/AefQr.
%bdoO$`fYDBO9:A:2$/;?VoC]nYE:Gj<pS?t5;\.KmgNp=d6r%!D)M'_&5_'ocm=fd&K.L'@\,_6Sgu)6WQ&]nJ)`L6d:k_;na^cA
%P%`DQI68]8RKZ"jS]2o>GL-*&#p$u0ap7_h0^M+=S]2mX/*maXa]Ua#Q1oo`O@6#:Lb<>&?D\QZ(lr?N]W*"#>`hYp7sNT.M5PLV
%EQsWIOQC1@0j,[cRIV#T'iN$2i$Tm&e=#\DnrL>F'q4a$PpS$2*D$12A;(5"]:Y4e:`$D-Z]Z'7QHAU[4B\AK^Ar@KR[D7JUcWb/
%>4#'iZaX*iQLJjZ<7u)CMgO4C&ft3]AB7:tdi]VX4L@"H'+V^-KSS.3%NYF3fd/b&GcTB##nN:$5f:)]NA5"4KST0=H`eb*6_!Ji
%R\8h7G\EZ8cqs77,iR_!!G1jK4>\oji,"/a%P[K#4LEDDi,Y4Bdl-0Y,?s@%#nQb]ZQ6W!.4H$-GW:I7lnSkX=V@5^!mc,G/Xl1U
%H5RBCg'SH6>46k$En[#i%o(iOBXU9/^KE&FTs\6nf"9\^29R3&iEW'%M^LVd4eI\=*P*#Ba>Ze;BFVr5R'Juo6Sg.Wh0)ElZ:P_G
%?37K]_F*Y9@%@hXiX$-tFZJ$bH`;[Rf%CO=k-;Gf,s8P!OBbAo6YdKV`mD+u_F$iPEQ]^l<$Ka!fnb4/\QH_dKt+qr#nIKdNQH@B
%MM$fgEcg2pb<_`:KgRIl.)bM!"UP^!67u5;(fT-<&ft6Rct^38Q:Z=7IIi9K%'puk8U*5T*j*P-W&#"2*s*`94Ih>-/Y;IYOf6!A
%_S\O[Cko1ho+]Jqs,XDuq4\0+Xg9$OChrVg4>\aY0iC5QB).+8%PIid2W:@+g'r)VC(_Rk$U8l?>=HCrCZ3=\qdGV?LIP.1WZc_/
%l_#lhTf!Obe#9ei*a1o3&m.`B6gN*,B-(=_#nQ2,e^mrs(/K0gm.MZ:44H3qE5FuuHIQLfSDe1?-9SYYU2nA$$LOVSQFUaK(259,
%]OJ2f/nF:t+t^&Th:"[,6gJQD/g[T@Fb*Tufa]n%LLh)>1<gYH4.NRR/Xl1UN%'E"D:4FX*a/g5b&Z4a#nJmaS&oheCkQ%9iLtCU
%Y!(36&u=iVUK<dVG\EZ8E5o)&d=d;+H\Kb@Wo#G)afOhU9e>uF\kVDE85r_WYmA+q1JthS(d54`pX]?Cn4_6\E#b^/WeNQu(Rh#'
%K$"'Mp9A"t708L;:u\^JC]/j"k`VXeRLQ5M)XUgPZdHn?@?+.>>RK?$[3@4);-h`1eQHtSfmF3GH,+1UnNL%34d"Q]>]>&Y4!!,0
%^:4PWF[$+9WUtaccdG<C_j-;.F'O";X`9WtFI9*LS2@b0fBXB"g6:C(b@<9O>oe$j\bc+"Q+Q0*4mr/lGKS`pYC52SW:&i?>&1%k
%oCM?"f=2A>gl$FCj^*sqkG-G'"O2nFO+ZiIPj_t?VN$gYlqMAKS8^36:fD;BgSpcF:XZH"l_jV=:LIu0p1tt]h90`.>uhHEhENsN
%f$_qZhg2K>Gn<VeS[L_"M`Ur".+'g[%:^b="DPo)&qH<!?X7Mh)c?o(3u]$B'08'3hK:r8!8!YeSA0t:#r64@`Cq?5$R6%@`o8K^
%6Pu5?F"]W$rmBpT*4-Pub^USe&\V>MS3P/;jk'2L=#iG>)Qu@Q=qFBnTagF<j'*4A;^W)\[+t.9K]G-p\kY/&r^/;a.YVuF9"U$=
%W=3-]?`L.,1UoQ:I[<LCA4oNo;sPLN>3&"D6irFcj7-gCGuT.FK':UNOM;0h#a+-eK6rk&+)5ED(G(;!Ve'6.i.*IDB6FX<AsA(r
%JkLKjrV<"=f#'hLg'McHk'%YelNZ.`*/<_jS<$Y)YHLCQVcQn]co7&M\7e"ea$5].QlVilR3;KcQL"cQ!TVie3@R?lT#OY6IhOba
%G$`<#s2,HCqODuWDV$uqeFOonX!+YGU:^c90++1#j[D^gi?DER43G/@>Np#!<I)D80>\Y5n+)AM59;=^WNA%CB0iD6jZ1aYbp`%t
%m(4EM@d$sZ8o4#2%VK83X,38F5=o<c^@f.<!'_!W,-<"1L7_n.<&UsNf:ELrqst(BeP6eYcoHkecM2SU'`XtJg\24@2U-3g]5fTO
%I/,4c[oXaN<q%Il$=^.^U`%ImOb1+UHC(+t:tkr>h<(k!=N6(t,,&DGrTJo=SOS:j7THrZTJGh<$nfT9jeM/%SR?kmPh<%W:3+IS
%NXp2E_1-t!;$m*e6-+H`C?+*sc-;/=DM!Alq3:Dg_[ql*XR8R9)'O3tG^mMmF\lnH`p's=?,5?*DMlnuB=qj`-%E6e^BnguJ.X._
%)Y[A7GoskZ[=h![$2PK8@sUFl^\D^^lFRk"m_!@[4r?o(Ns/2.[oF8>M]'d_NMcc8@U%X&RU"p#OgdUDXSl<Q*Z]JX<L&]1F,h"M
%PK9'`c4l[^ji,L/JL%`$'I@OE9;omMJ&SPWLH,65Cj)(a+t\$;Q.'s?ZuG\;0)!k(h;g2k*keCN3.$8\K%^^KXe4eidE+(>/d]QI
%#Q.NGZ[2SP$43_m/5mJDGP>kHrC6D$^\r2&FP3gA2NAuJ*T,IYbnKkY+3gZfNc#G`8QYD$TD%\P$BY)SmTp*j#gkfYdiN+bE"Krb
%2L/59'#o[e7%!qQO5sf9`h20k?4E")OMhnLMW'=5ifLbq13E.HN(#2fX:PEcmFET@U52#2<0rE-UW3#'p]1U$ml@c_aeg46\ejsh
%VA%oL5$s&Ms1Jg^L_">/*Ur:0S`W;I+>BOb0]=I:CIX5;3s,tX01V61o`Y$Tp[Z#*ITau]@B,.%KU?G+Nj+ZU_?:kmPA2[@GD]!Q
%N6p29kY>!S7Cd[/BV2S*BHOKS'tDCN_q%d2'=:F]O(0D$OTjh"%3"oL^pgWhLQGPS>Bi.WPrYgD0B#n_LYs8'aTnObc1qhE_7+.q
%3ADTrm%KlQZr"F)$AR`^N#RVX($1(?Vu*FWrJ\6$#aD+?cp;!nnt/,)#3E0KUb-\GKXYa!n;*$<]0a;S"*Zl"Dt2@P:WZ`/?j?PV
%'";cL7D;YA+urfqo7HG5P?0o'GOK"feX43-FT-8QN>4oMLV%UEmHtu/`NAPt7ih#4`lafCl\Ctj.t##[Pf3H):bh:CQb.I.1V46%
%GY\@So$*`a]4fOo's`'))BTWl-M'UmY`_\;>9<24a\J64+3GSiP>9=u'je1M)L&1tIgEHI/H\dCORns_*f*"(7X?]IH2_j5X[h7R
%O_l59'WQ/2^:cXG3uBJV2AX1f+6ue_@p^X-!Yr)Ln)A$E_$ldpSTCR216,ka_f\"@ED&tAUYW7[8U(i=\+rXiQ4j*#iea+k`f?@5
%L_pW-QF'<hFNt]U<X!TYY<!9B'-@1qI2]9K_0>J24X$MH6@ScT:,8Efp%*_^*;*W_K'-oRnFk9DcA?o;dIDmMDlXqTXFr\Zc\iSt
%Ve[k[_\O*RCc;X[UA)rt*m<H`5)/gfCoR5.qTSZJUG(;9n&8T#CAYnM4EsC:jt<RG[Hu1f3MPl%h\[cu/#2R&K?t#mD`M[Bcn00q
%:kQ77fg0b&=)N\klabKRSQbH](u$IQSrYP/U-/-3H&L>$B!YhaNHXdBnO<mqf)B,QT,1kDL?f_^:i)i![i=U_60,6hF+8j.?H2W=
%M[BT=QWu12mubH;Km8ss8%EUOe>W<0=VciSnbC9Ikf-=]VO]W)2Zdj^6G!iNDEkioMNNg`;;lZ,hm,_a%dRSAj=0AurpqRUYMKPL
%Ae2SZAdF>DLj90;'<']:T9hpXm)=?E9I87G[>Sju,^&^N52UXbHIh2ahmmF'Gjs6(,?^5VdhN`NG):@'=u7G.C@5l:kr(mg:mqj=
%pG:u?9NV\j9t*4m%NRD_fB?k&mYKY/S'@tS9c<g,p>2)b[c+c2IYY$V5ZU!)i*G71KYE4!i2JTD)=7^C#`jM"?@"s;/7Q5B4Rb1'
%3#-o9pq&]-CA[1T:n<70qrFn:Q(u[3lud(b2)E:Y?^LrsC#&Jeb$H1W*g@V-.o5CUEVf*Jfe:We%*#q:T-Fi4%aaTj^d)dMBO4V9
%Cprp<hSu#hNak`+[+VB$6?98Y]hr$Rff<>Z=Bf!mb<',%W1!I*pA)1?f.T?YPZ`B<>@t[$[)LBTf76^SF=Yn*>MctY!R>4[1Kn6<
%TJU^UDJg4WlpL&8ctoXCY$&h932(GX^H9PkL0QXg5!LJ4pOi"R>\K5h(@TG1Vd)+LEftja)K(m2:T`)jYP#P*S2S\gZdI02,QDd.
%>aEk)n\&shj.]Is3a;nBYW[Eh$frV<d5B@O!u4rlh<\SM+o+=>.+ja/LiHK[0R?:opCcfP;QtNJT"DSJ)/W%2d3fjIk<8WH]r73b
%9lHhLhcY<H7hH%(bWK\OSdHSu#X\NN5L?@I:7L+m5dJB',>80UJ)U289WF+`N:@4f[W-k!Dr==#(l@V7+9qkaB=AC90BQqJ.p5s\
%<ES<a;P\EMh(c6U]YQ/-R3SEJV-FD>&C-gj*)6j-O="$O5T0(%L"jWLe1-+Yl_[tQmA%i2dalY9k:>ntrT'BZH]lL$e&E\Hh\c%K
%qb?WTg]#)G[K=s;_d0.NQRP$:at%B(6GL_&@ir4'grN#TgdcAYhiaD*Zf<mr9G1M#Z'.Zsa8-,A\[)s@m%>Aq;F;DNAM"jlllY>h
%nTk=T5M)7c-WeT0%>pS5H7-Q-SGgG>.o6[\#4-O?SQ<dXkM'njDAknQde^1EaFAO5O2XZ<4#Yo3NOIQUo6t2Se]B3*NmKr0J.]+*
%DQ!pRlSjegkpIEfn9tHL./e+bB44,o\,G]hNT+HQ;VD":r'c:G#BNW6Js$jWSTA\Zo2@\aAlWG!e##!"&O2!30\0gof',5"E57c%
%D$`h`%G6upFR*bZ7AfW4V_c$5,."+&h)\bZOf>7g^<Rbb`iD7O_DO^"$NZ3:-_B800C&r<@V&?6d5clP?>q'7!gDLJ*4p$>/b%9M
%IsFc)Gmr?!Tr:M&.Y,3Oji0WKp963jC(9i*+qK]k=KP#%\MJh+FaEkB?qGKa;,)@>Mh]X+6+F=g2-6O5.,bMSRkNr>hkB.Ti?JFS
%CG0BtF%Z5+)5Gba3;`D!Y-k.s1G-'?qGke]Sjj\4(UL%4LSOFjId@iN/EQNX1hic/(b%59)5f"AlRR'?%t:FG%b^=/)m#O"DW6Cq
%'?WAlS;JoePpV4ZjHF+e\Q)egGEBC+a1lL5Y-ot!6RkIZcf^TUp+HK.\Z>SIZVr^gIj;\OgEC$"_Nn+5l"*M/Qp\2jT.;iaH\$4?
%fDKTlcLEgr-s.O;G+W;HkiR(ga6[N!a%r4R4SA>?qBsQPSoE8JnoJCb:HaLR5Blhke5K`IT/c`="ggL>p@6Xb)r/c1r?.)(qoQ1*
%V]P:c5BZ\QrFV>$:Sn'4IS_o/@?Ep:*(#m`$!MpB&nIfcP92gi^P8EV+^==i*DjV#5i&EY'`gp,1?>)(A4RuUBD8^]ObMr+-H6/V
%XZK$3lJ=!)Y$*R)[5n$PqKHCp/Al_ceAIZ^cFt1\FR*6mAB'.lH$8Yj'FhLRB$b!dgcO)G]G2NQoe==:#8P6)JO.2_C;d"jiAK9n
%U@ATiYC$sFUO@OOq2M-gJY,,DIL#@P0)E*o"=N*:ikO?<d@amsdh`ue6*jr&Z8[=]V@A\T%YBE($e1-m\,XfbQ3[,#-]<6HlU&^]
%p;F'#m9]_o]"3W[WG*$dq:)scoaIQ@*57(X;#.^.AU2#e=rS9=Hugl?5s=3P)M3hTA>Dp_C:oWU2La;Af9cLQ?EC3`dG:,8&dC*4
%Z6FpVboP,gN/(M7`<15F;agaZ2G9-.*+(0dGf3.7opan5o\icc_lX[b+X9,5O<A/]I6NOAk5M=a$(8'`C.0*8Yg['8#J/"O__GEu
%H2j"YK^)KHmA$fs"'IPs%m"/"0#UUj:7co44:"lW-&2-XYo,9@$+!XM6/h4dR%Q!=0GJ4/J=Nad^`Z]O3J:fH!8iL*i1E!HcF5QB
%9(@0fiR6j;<72mB0b=tlX^0fuBoWE"$n*l\-eOEo$R$&.AOt"/2@7g%_!n>aBsc0f(HL.S&.F:UkCnHfYdCq`Zgk<]ahi!h(*F*m
%jCnsRm=ZO88t2\VMFer^fp?+M2YAa@nm$j^I@)o-Ub)d<V+h=kTETp=^^PraSm8[Jfht^up9j#[.LC.WX1Zk`2H;0%1qt8-ZP]%d
%RL?-[AdQA.d[ZK4?UJOcXaRqd/dS5WL;?^?63GV3g4BD]UGRBH=A%':_nd\enJ34m.0*fSX9B0^D:4=b,G<J^K2.L1adIT[1I;>;
%?tg::L$9q$0d?]H[&N.p1RiJod7kNdfcY]6+IH1sg;s5:lumfE^5(a5HT4EmH:"P/&D"/G%La899[l6aIZHYEfnrcKg3hKJ"!D3>
%<jZ)2Q\of'kM[5:j"*.e30"Xqm1=?ETG"?.%pe7KT=(cIptAM`d7PQMN0%ZUX<H%c,\YO&%\cj$V[ui9VI>P1n'm:rSb*O]Y].7f
%&lK4UUc:VfR,NYN5]/G53qLqsf#p.OfRT.TYeGgTKnK(XdDuAgS^dt<R9_?j#72n^)Tc004Q9AKCG6FoE#:JHj+6jCfbsE3Wd\5N
%$F(W91iY-bm#`^]r4Q34XW5HHk5Hu'1*<hJ0H5"uk)OheHfC>n4]IZu1pIp46#Pj=Y"uFlT4?U_XRCuAJm(0"1T;S0=[*E>AbYI.
%00h@\GAtSpF&0>E#iARe->n">LT$WW/g`kP<P*UVT7nsRE+iFg^rqP!3dl[+0qlapiO?`rUo@L_-^)EGL8*M;qN7.\I&,0!;bl*4
%XaGgD@ckQW4F&VG?V8O\S_(g8ajgQThF%J9Pkk#=3XLqKeS)EibK>sIN<uB\\E=@jP5F%nkJJIm8-t9.%>_m]_jfmIK'UZO]:j6W
%@PBeF/PtRsh];f*o>>]u(O%]PHMm#=O;<g'")@RM-o5"SA4ii[7_'C;]b<k`B6h>7(N?6W:T2[TLEk\n?s1P@;6or?j4jTk^s?6W
%Z#rH'F`VH-)HJ,I!5jdGHl^G$-ZGWoE0Ju^nMbJY6DXoGC$_lZeu6'/bZn3oo-;6\Gr`f?m<YhjCZ])qE',+kbP<>ZghC0mE1->i
%KET-gpTrT]1$7M[ZONo)FPlr9pJU<+C)U7\F>r0[rQ5dg`Zko?E.C&Qp@N@>-J+6K)i\#ZhF$4L9Jrm?J\o;fOOh*KBpM+";rTK%
%JlE&jYY"ZWNkl3H2%(HSi4%tt<ie;Jb+5a\[M_GMUgZ\RhIuZOm/Td[L_W(-q.bR5'1#9"7@Z3VU*X$TfcdGq_B30,[srHDDT[sG
%qC>?DZ?O'lLT_;_Pc!Qh+5Z:SY#Sjf\D^NH"(KC.QPpK+qbc'?HpK&H]C*)(*k4'P#1n_!i`u1je7Tt7)(Bsn`\q?f7\,pd\'Q1\
%Jeufl\<J1in@qKKXt(Q\QH-8h4;>O3"[;SV;$$Y:L;*$^0;[r2E8SFD%n>u=&F^[9!?I4TL4-FYll8O-nUl6tVqYZuoR\`bWRO->
%BFKqGRap,Pi-u:K$t/9:)`%YbZ,%,^r#7@K9$kJp(u)T6/!tg0^o_]B:b.[!%(I$lM.[\A3G4H*6Y7C2)Is"'q1M<.]j1bG1o?@>
%;PIK$eCf^%M4nr$!Pq!RR[3O8')*KFcI8ab3HneS^_`oA'sq0cNV7O"`Vn`V<O#AKHrAQTQMRT%TaN;.\T(Z9S^]JkZET.PLE_C]
%>\idnah-2Y[437GV]-ng52RfhCG4/IhnN+Nar=AB4Rd4jB+2!`JUCf)S?45A#&r#Rl&JTQ#fl"4)Y0J@49ZX0H(Deg8^4st$M[dQ
%B]f))/Ii3IMK"oq]:5J_,,T-Z!=%V\dgB>oK^YK%@DRLV.O:WuJ`!<o'e64<Su>M152:4*B?;a75$KfaVO%j&100fVI5?_uS(f/Q
%l&MY*b97/7&,8%FEZ,)ti_=fEGjPmXnFJgZC-Y0Rd`tuY$eH66W+6Y$.ep^e0c0=I'Gb`i[h$t"B=oXd\ZYEE7IBWIkD(US]7>$A
%G.<FVk\r6Z,CCnHTSSg5q+Tl^:.;i'dR:Uf4/2@0b(mXuIVUhCY._11B!5LU-X+-Ao?GoZnQ`chc;_e["UrA:@ub>JqudR64I'3j
%0^BN854f&)X/ohT(QMg=Pubt3BGWP-7<Z:L20[HQ(7/Te17#QIkMe*Tefl2,.XZMjmLn#h(F8ZljNsnfbmC66Y<A]TIq5h*+^`Y`
%":4Jam8slsGSsHhUn_EEYpitlRhjAbPiEIs#7)6N`5T4/mN>MK1INK^Hu&,k?5DqpUM69^i7YYJn8CGPBfq0ZeYfUjTh=Q'5ljso
%6HqKTKN,&Xm8V>n^/aZHJn1Z&4TN>oktjej+H9b_o9L,48:Z;M<Wqh=o8j]ESc*&+/.'7FL.BD22NL="Z/ECd<!@bA/-C(sbqPVS
%q#?9\,nF''hKI^j`No)(Y>^A"r%-:c2-*?Dn\ooe!GZk:4gQlQTElY8EA'7Xi<<ACb$SDrh;*.WR-33dp+O7k<6>,)%jT)WTtMBZ
%]8YAl>>&a80)<LA94_mQ9hR9$3b:r7Z,IT`eQf/.k\^N-XiujU>C5H6J*b0,hu*QL&2>^7D!au/^RC]s#[nYc1_X7W\UN#`5=CuY
%kD3@l74HJL-37PoJE%KPU;0V9/o:,p`:r)L._`OUr15^="I;9I5$$.[!Uid'C?2aLm;/^sSLeYCS#hG\<R\PQne^7*L8Qbh<M^]K
%8qEIIe:*LO;6h\?;]VLX>oJE"BAn,+ba$UFO@_E@fn%>X!Qc^fBP(&S[gO.)oTsC1*DT`o/UT,U9WWim;(og@j4rtj7M3'.L7&L]
%rB/C&PT0,i3cu4cggO#VB6csJ[q%2tQNJ2ZQ\42?*q*5^jOSDhY\N!CQl<%m'ta)NN@9l]H)W@QQT<@EJ8uVtd%jVes.)E*hG.K>
%,Q;u?%LA&tSHCiMiW$()7V]mTru.8am+\oZZ[k7^a>+^jFa[_n`#(dAcYPF-:rI/a,H.3eW-2jUQ\W6'%ZQ[NrZl*na9%VW042t)
%l\O6h34<P<Ct^V\E>V\IK1Kes'#en`rAD):k-r##gu2BZ_hWW;H$XI:X^4iJp]\UX:6'F:-/p`R*U`FgZn+=6HjT5KhT6r]IT00K
%+d$]nRcJMIQ'n+9H&lcs?J6l=D3AndKMG0EAZST]lqt]!<Z,\:$rI@5Y;b^1-?a9mZH=#PA4VLhohq>bDi,B7AW1PIPYEo$`Ee$p
%`nD]u;Y&g"BpGq]agfhCg#]:j(+'nr4N("UX^Pel.MI[_6G:XC/7rK$pgt:!h*+^NY7_q')jYVhZ-q]2Y+Z'58V>oN#/>6E9ff+b
%2Z>%eNu(ajQfE5mh_1(N:'/C!Y8RT'VZ.Rb-q)7dg/=*Y5(=8Q>d=B]1SU"J6>/*l1V9$nLg)rt4EE=I5>*kK5BA_c>)iCF"d'^'
%4YTp3g0<l^ns"l]V&3Z"Tf'??I2@pH[dbd\iG&'0lKaS9'[$=.lZJj)kY;MF"&G2^7q2,sZ*RV"nFrMu:q?G2Qoit],.\A\i;8oK
%'!#Z$("P+GiJD*/W:6qPO!;8d\$_\-L370Ca'"?C\Wg&G<\-hgO5SHMidJ@WNBZ4fn9l\8r+Lh_)7$'7q2n=0oWhjr9CjB;KNu>2
%\hu^hPd^?)\l4&'$W+hoa]AhsbLl"/[%>8h2=h!n[jGpf:oCX&m`>.H)6p!6q%:i14\JtI+"8ocQ7U,i5FQIY\^s=1S3>htq%4s)
%[XUY)%-J032^a]a!IgmYRY1.6HSJS/QOq>b/'dXZ5l)$$oC`1LDX7'0+H<ZPm0%-*'),RC,$oD4;?IAGH[^DHZG<ai&prRt\=+#Q
%a!@.k,!?].;)<0;p<7&eBl8;]P2$u4h7L2J%51C.9h.1mHKBETs#dZS6)tCsQ"1Dm$h.pT.UV6.%tt9a%M;QQ7b,C=1onO,S>IIl
%;q!A_ni*L#E*aX^-j%**L=CFI[tZMlKCC^GcH7eT*0]30Btoi$'6^B4NAp)o2Q2jiB!VhEb$jrH?$;=^J["C].0iI<&4n!O'D/U`
%!-#l\S!,Z4J95WV&gI/]XHp2FY^H4*%F?DB<f>m6["Ygo%[[N_5!&3)QG>qZZl^H4khh3kjm4r3GW&DT"b'ZEg>-Ir3V8H*rNCqL
%7/<(Qhh?HC&C??6k%^3I_6%cPjC`m";omLu[NX=)iB;HCb['?,36+Wpa?Kg!C$M2]XcfsN8lWn!Kq7X49r4@,e^.M:=CDI-]SMCf
%6sS`TEI+RFRM,iHIpl+s6s;YWp`#dgels,t+DM_fX@HZ:iN_JY^HfSU54Yhd;:nktmB`c=nnFd5lMIrhT5QI;BRCn7ZK(<'b>igH
%\.9CNc(-H*,PFLF&"%_I9#_Q*T8Fg-m',P2H&+d?JbjBfndQ#WjI=S=<:3K!cX[XI-&"@dgnVgd=1)+Wh&Kd5GP5rbZ8VUpLYNY/
%RUN,+\V8]^1#YshL_:88igrO"7V<)q_FJ5h'ES3pA,)D-ER<%m#i"=C*<glX%^@So[tWaGP5IPKUOC=g]f<J;%L7aKK_s\6k^#XQ
%=#ruPkO@)Lk.r`#lK`Nb;9<X\V<!"RJ?&a]P99TT;b#$Yr*AOn#S9KlV:/5=>6h*nHNd)u30<9djJ3)F-RC+mf3\$Z>'TkeF``QO
%kG5p#BnupB`D]-Ph3V"Joc`U?r>(;i@1=T]fuV<mE=bp`*"qY"D`J]F_UrO"_=Q=;^ICm>R7bNTW<=laUDMCN1ccY"hn"4p>#:"e
%7<8\r?gi1CjcLfo8\\&YKD+q1l;-1QG;OMH3&jIJMc+oKOk_*p01dYc*2\[Gne9EpDF^MGibQ-r=^AepD&-Kh]03jZ]m"_o%3FPK
%6j*FnI^fYT!m.e2$#S;>aQ5t/Hgd0=038$jb>Jr0T1%[sM;'=#+g[sfqG*\qXSW$h^t1D+OJEc.l8So2mmrhFC;aZ-Gd>nnpj(0=
%9@Wl9:XOscf1^WANGh!?k0p(FfK&.pQQ$C%eBS8c+d'=G*:ff4[lm4OO++6oc%tjW7M0;lI#:N-TSHoW9(793d=[?)rgE;-`*3\O
%;FN0,@A&<4O_(NpAhReBf3ZnOL^_KEp3))4$\jT,iR8!#A753$hEdB##c/16hC5Xc!0lFe%?-DcR&2BfO@Bpo>H]%)9g4@9YXcoG
%+b])iMI'QWABF5j4m;'3<X%?qYmKVs)/o'HQ#-T#9"@IsWYFG5VeCP*:8:49JFp85B:UDj"51',*^h<6*qlmFa%Vb9Mg%$YdWs6-
%Y3uC*%Q9oHQj\)h8`Q&1ef,J9j)>E)F'466@*a.qX5ZEXf-?1h\%KAW?3qMs/GOROFZI3C1WB\-%$@qmM-*#s[oPXaWP<T!nZCMr
%++8Lol)*!W(A?/]!h-;n'75G[+.X7'60J"6,#!Xp8:lbKhTFj=k6!)]Hfc1pJWY1A4!O:Ufd"?k>Vp`_n[E>3rVT8IP5RYS=(O5]
%"$48UB9V'U]5H>eA1#VBdO_^goW?6Yh`@cbe#%m'PE4?iGN+hPEkoH!S\,H9*LC,n2q,(_<8;5IPE9ek2Q3O,c@.2=[Eg29Fl43/
%mR$5u+:m;bCO9:mehXN/KBQr&<$._C-IqNQAV4R%o[JXV(UlRBa2tarBC)dlD3:J*_ApTO4,]1;E4W99`^jVS-/0j%N'I#lDP[Uq
%W5^\b'J.<]NduRKY^?[)4RWT37OjaEB'LjYO=TjQlCsKUDgc@uOt*Z>3M\f-lBc<HV\=r4V4?77S!A(ti8jf^3j,G:?I9@V"PG$5
%B7)GR$+]O7&qX/=)%`>]""BL[,cVD!L8b5U\YbQia\%:F(VR5t32d8kA2-r/jL@!]F5[Dp]V$($>jI%1#n0$+,Le=0?j$iVqk]s3
%^PX[m-`ULRpt=BThL7o->\+J./_WlXhHIJ6gi(G/C[n>5`pN.r:4^gcB`sDfNuB<q%SDf:@5,RfLjp5GVM$:RAFda$JMJJ2g!dGS
%@VK*0\)9lr?sa65?h>*?AOuG['q1P9<sU9WHGB\&:F>h)i$>Gk]d>?lGhE"1'@jq7_3H'-m<p$.p5W:^."A-\[Qt*(%jS>*,9at:
%eBHF@iPL$+=iNfSXMI8EA:)'a@"Ub^Ic5XHbln*jF09k-o_4g,?U!GSM'%c_mI,8(]&^m"P:bM4bqoV-AI69#9SOhnU;\%f#WRNH
%#(WBQeBC60_]P>J'<jT3@>'sf849r$M90SJJOJ\iKR=3$^u1M)/`$b`CT]ad6@RC+DS=-ANSl)s=:g2g?j4b$'Jb6uLb+@>)[\ZW
%U$74ORh=s8Q+;FqKi"HH84s>@P=:KX@.4X[i?FVGRB;U5+N$aOX5%0s<]MXCb!cDI\W+>5I7DDF^B?]r7El.Xfsmd=$qNa"Q8$O]
%`"BNn8rMC7ML?jgW'mL>9,QHIlScnlPd]L8":(It9!df<B]"Y]D"kFN,QL;\EDZg'#\l<_7?AZP\-\1;6J8/IqlpiL!<?_MK2$ZS
%[4aKOGuP9.2ebDg'0'du2!kG=1Yp36=[+lddknqn7CRZPT=HV7O>`Q.-;LRpk1ei"5(6RMCdcUEack855];$<h,)Wmk5=UGlDsXS
%gX!+NW-1M-q^#!=Nt3RN\pD=7PM1u"?RF[NH8[MW.sa,Q8JTs((./,+G6Cg\qQ<oTf\(NnDRH[off)>eB"P'ASXC:Jc'IoE`4i2A
%*>dM&:Z#mYkI98K`mCp'ct0%$-N)S$;gB-h$6s,`NF*5LE"Zd?%5Gtr.#5KtRf7-h$W>FU#r#NH(#\7@;PZ22@3(l=^'u%V#&Vf4
%3OuqkD^PklkaWkiI(O]^Io<fDqZgFk[k%b!F!Nc2&H%AY7lf"-07sj_QOl&W$Dm^Ifkp/'_baFdk5_EX1Dd?4aAl1EdKgoI#TSKX
%N396Rm+#Sn\`?]08,R9&pQlrSd.e`f#3$Gaa9;OMo-ob"L*7G.=PX/[EC5Oe.,H&-P9%_68^I$e]t-JD9coru"CB4-Cf!&<oL!j*
%HeJq>pCqKk!0HpeI(CIXH8U^^DbMf4n/),,6?Dl&e")imcA1s7L5f/S1bE;r0/oJSHMKnA(O6DLcJ#HZm/3s=>KFc`ZhC@mD.%$`
%gmfEVbdr(WOqk_Xe78,uEVgnS^D36\ambKbb?]VZo\DMZ>Wn@1]sW%Oip+oqC5'"hOElV#JTocu3uKAEO(lt&j-i=La$*`OiYVhM
%$VZ";*5l+JVUVF0qo![sr%?q*>T/*$08ffn0]CWX68ABL`&q-.0g^dRF:::6&D9]X:2cCB83]jl:Q@?V;<mnWZ)-L0("q$<*#[cQ
%HSKmc?ps1RJ]EX-FQW]!Qk.`!^_DgGnn<Q1a_-GKrsVa#HfRFja3M&@rH*^XCf!:AUg1N0%[4G;EKkHq0*\gP![kluR>I@>>\.Pg
%>36eE>_8RN*)AIbr=402M&pT08!hY73lFJHNP+o7mFRdk,fEH'2u/M%s1r>'mH0+e>DU>IO#T8([9UKArq7H6h&l[lf0B8d^Ue^*
%]*:#t,FTQGMV\!%46SUn5MR.Sm.Rqi5:F*!DRDq9e_#'B:uAbeWe+RSn`a]hHAkl\kK^oam;K.7VQO:?iVP(rlOCRjNhNpHi7B.K
%p48h6k2n\uZ2<L:F*CmQjb<#eAAT@J`?Oi:kl/H6KOb/a6D@LCQAPrfK-t]!Su+^Jor<O5,SC(g.e!c;;,;UN$7)T"NeF2If.RDN
%kH81?DP,g7Hc$>Ya.qS3A0f/BibjlS7T(EOMt/DO`$2I.3fY0B`/#h]%%kXaHNru\fJkgsjfZD>LRX4?h7lfDr]N;]l1u\[KhbU+
%@"0'3^,58I6'IYA:Zm@E38V4"T*MBH#_l!/R^237JVUQ-U+EU;LKl+L-Y*Y;WOi6$!a(t_3so:%i4T-6&-$Hp8I,3SoK,0+\YGLT
%_<?[F5]B5eDQZ4g2LF9B\D)M.D@fV`01-O^RRm-Fa953ap-P?VKt>2ZX?Fge.$$2pPb56K<1ba"_W4K5TfVAYGXR@aadf8[7B"OS
%jJeH(F*pA_N.ECuN/`B:aF$GZ;(3q]A;dDu'5<l@W=\;M*CR:\Kr?H?5YTC^RQf1f9^"sJ.E4Uei/8'hH)?@qPa!>s`DhZ`A0e/C
%,CQGAW0X4j28pDg!o=$d&BQ^k7&?[fOY*Fs7*@Tm+#SJDK;b*3&2hF+Lgk1DY3@__7(":oW$u=LiA'2\\C!@W@'g+#?GD>^XP^RW
%N6g,:goM\ObRu1LVSf97P"q"6Qi]"^$'B=5$W2AMKufK(&@KJVLcdW&YiTLYLh]Kg;,`F)(nVskq3`:5>YF)1@OadQ1!#i<$;u>O
%K?9@S5d^b5W%h7=e,^lAoIuPn1.\hj!tfSdI6Zs`4\W8b$rg/%Kdq+!$XA.XK;k04+>q+TLuRdBkqbIj;)`Mi0ggbQA_7'J=baBC
%gaj]DpLbB'cXe!!32]B5o$l$!3c(fBl-sC(W=T_*#`r5GoU-2`>*;5%'Or8_B$#fldmHgna@B0&KpWR*2sD*<r(mW^.8,5,$SkOW
%1NJcY9FiqUQ)h:2</<!>J.]m6FYK5h'WAG_"#W8(kOb/`Am@:XRUQ]DPQA^e+iKTd@`f6kRPu(or(mW^.8,5,$Q;A9^0qOKi>gRG
%F0cA8n'=&)T?B:T>\[m.Q(Md\acn(BUFi?0jO5pEYP_'!;(Y?_C5Vt21'7M&I1p]e,i%#TV<Hhl6.s*(B/,ED7V#d?9$5o#nk;_2
%]sfm.+TA-RgkmS@3'>0cngKc8ZtnkemPsGh0/#-87;*jd7?THt7QMVb^YD+WAuP_r>i0+A(6'$$G%P989SY&^q2*g4H#79X8<JTp
%geITA:OU1,Rc.5k_!@C*l-tD%8IJ(+'@=Tg`Y-Ar0hrd((0d5dQ;.sP&U>R!#&6Os-R/g+QmpQOTf@se(c1`AI]8AB@R;AN0fiA?
%cPU-<6dsHg)HS2ThukY:?Xa<o(8E+N4[[^f,lu_FqEWfc(`-8N=7-iP,h"_+09W-BE0Apf]&`p$bj67+Bo4ZBA\)KIWg'W:WYB$;
%Z:,M,s'KPR\(Vr5"lT9ohSG[JGL7![IpPn6?r5K(h#ka`Cn]CRG'j06?':Bbe*UW1jlts+6'IM&j%:MeeZXjTedPAfjTr7pQGP0h
%3&\%iaaudW7&[Nagof^G26kNN3M7uo&F-@H/RG$7qSs8q+["B\;[fQY=9QIeXI#6PRE!LGYZj'uRonm>)5-D(*21Bp8E!QX71]m?
%/BoAM>JbeJ0CnR:TY;&[%g@ssWC2/]P>jkiN*<9dh]kZ\,a7HV^i:^KZbZmKd;9W6k\h6PQi^r\%"ZF>/la)XEZ5CWdR.k&_l0gI
%YOGei:uIQ`XADh]&SR0PSMNM[rK@FF;\-96L/DHGOjVAIk[e;s1-0`pkG%`'far<^63/pc66abn@Ai.ER=A7mU-/_mlM,ige>N>P
%1Om*h_jlp;Er"PUqt+&M0?]-[\+=UqNKn*M"&l=1S.bKSlaf.@%VLnd*D]s*-=qC=[mRI$habSi4T>Rkn!flE1TAr72.Nf<AN,Y*
%dE5HUp_ht2-erie]:2f7]#)X6Hg(hi(:n)T;Dn-EYP&4W,]8A%UJ@hte`3i/lE@#JlTr4;3Z3+sViKu!g]b%;o(hhLjpU4*.`_~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 191 x Fj(Fig)o(.)i(S2.)33 b Fi(The)18 b(distrib)o(ution)k
(of)d(mean)g(squared)i(error)e(\(MSE\))g(for)g(the)g(results)i(from)
2015 3219 y(the)h(proposed)g(method)g(and)g(an)f(older)i(method)f
(without)g(e)o(xplicit)i(peak-matching,)2015 3302 y(respecti)n(v)o(ely)
l(,)c(o)o(v)o(er)c(the)h(95)f(data)h(sets.)g(MSE)e(units)h(are)h
(normalized)i(so)c(that)i(a)o(v)o(erage)2015 3385 y(distance)i(between)
g(band)f(locations)i(is)c(unity)l(.)p Black Black -152
5542 4185 9 v -133 5640 a Fg(c)-152 5642 y Ff(\015)h
Fg(Oxf)n(ord)g(Univ)o(ersity)g(Press)g(2015.)3293 b Fe(1)p
Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black -133 -253 a Fd(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black Black -133 1446 a @beginspecial
0 @llx 0 @lly 872 @urx 634 @ury 2420 @rwi @setspecial
%%BeginDocument: figures/supp_eterna_comparison.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: supp_eterna_comparison.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 11/17/2014
%%BoundingBox: 0 0 872 634
%%HiResBoundingBox: 0 0 871.1983 633.9810
%%CropBox: 0 0 871.1983 633.9810
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 96 8
%%BeginData: 25199 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FF52527D7DA87D7D52A852277DA8A8A87D27277D7DA87D7D52
%A8522752A8A8A87D2727A827277D7DA87D52A87D52A87D272727A87DFFA8
%7D27A8522652A87DA87D7DA8A87DA87D7D7DA87DA87D7D7DA87D7DA87D52
%52A87DF8A87D2727A8F852A927F87627272752A87D5227F8277D7D5227F8
%A851F8F827A8A87DFD06FF527D7D52277D27F8527D7D7D522752A8272727
%A8A85252FF7D7DA8A87D7D7DA8F827A87D7D5252A87D7D4B7D7DA8A87D7D
%7D2752275252FD047DA152F827A8527D527DA8A85220274BA8FFA87D5252
%7DFF2776A85252527D7DF8277DF827FFF8F87D52275252F8F827F82752A8
%52F8F8F85252F82727FF7D7DFD06FF27F827F827F827F8272627F827F827
%2727F8277DFFF852FFA87DFFA8A8F852A85252A8FD0427F8272726F82720
%27F827F8202752F827F85252FF2727F8F8F827F8272727F827F8272027F8
%277E52F8A8FF522727F827F8272027F8277DFFA827F8272027F827F82727
%F8F827A87DF827F82752FFF827A85220FD06FFF827A820F85227F85252F8
%7652F8277DF8F8F827F87D7DFF7D7DA8A87DF827A8527D7D27F87D27F852
%52F82752F8F820F8275251275227F8527D525252F8277DF8277D52277D27
%F85252F8277D7D52277DFF2727F85252F827522727F85252FFF8F8525227
%F8F8A82752F8F8F8A852FD04F852FFF8F8A87D7DFD06FF2727FF2027A852
%F8FF7DF87DA8F852A82727A8F827A884A8A87D7DA8A87DFD04A8FF2727A8
%7DF8A87DF852A8F852A827277D4B525252F87D5252527D4B7DFF2727A852
%7DA876F87D7DF852FF7DA87DA8A8522727A8A827A87D7D7C7D7DA8A87D52
%A84B27527D7DA87D522752A87DF8FD04527D5252A8FFA8FD06FF7DA8A852
%27FF7D7DA8A87DFF7D7DA8A84B7DFF27F8FF7DA8A8A87DA884A8A87D7DFF
%A87D7DFF7DA8FFA852A8A87DA8FF7DA87D7DA8A87D7DA87D4B7DA87DA8A8
%7DFFA87D7DFF7D52A8A852FD04A8A97DFFA87D7DFF7D7DA8A87DA87D7D7D
%A87DA8A85227A87DA8A8A87DA87DA852F852A8A87D7DA87DA8A8A8FD09FF
%7DFFFFA8A8FF7DFFFFA8A8FFA87DA8FF7DA8A8A8FFFF7DFFFFA8A8FF7DA8
%FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A9FF7DA8FFA87DFF
%A8A8FFFF7DFFAFA8A8FF84A8FFFF7DFFA8A8FFFF7DFFFFA8A8FF7DA8A87D
%7DFFA8A8A8FF7DFD05A87DA8FFA8A876F876A8FF7DA87D7DA8FFA8FD06FF
%A8FFA8A8FFFF7DA8FF7D84FF7DA8A8A87DA8A87DA8FF7DA8A87DA8FFFD04
%A87DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8FFFF7DFD04A8FFA8A8A8
%A97DFFA87DA8FF7DFFFFA87DFFFD04A87DFFA87DA8FF7DA9FD04A87DA8A8
%FF7DFFA884A8FF7DA8A87DA8FFA8A87D527DA87D7DA8A87DA8FFA8FD09FF
%7DFFFFA8FFFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DA8AFA8A8FFA8A8
%FFFF7DFFFFA8AFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DFFFFA8A8FF
%A8A8A8FF7DFFFFA8A8FF7DA8FFFF84FFA8A8FFFF7DFFFFA8A8FFA8FFA8A8
%A8FFA8A8FFFF7DFFFFA8A8FFA8FFFFA8A8A8277DFFFF7DFF7D7DA8FFA8FD
%04FF7D7DAFFFA8A8FFA87DFFFFA8A8FF7D7DA8A87DFFA8A8A8FF7DFFFF7D
%A8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8FFA87DFFFF
%A8A8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA8
%FFA8A8A87DA87D7D7DA8527DA8A87DA82027A8A87DA852F852FF527DA852
%52FF7D52FD05FFA8FFFFFF7DFFFFA8A8FF7DFFA8A8A8FFA8A8FFFF7DFFFF
%A8A8FF7DFFFFA8A8FFA8A8FFFF7DA8FFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8A8FFA8A8FFA87DFFA8A8FFFF7DFFFFA8A8FFFD05A8FFA8A8FFFF7D
%FFFFA8A8FFA8A87652FD047DA85252A8F827A87D52A85227A876F87DA852
%527D0427FF52F8FD06FFA8FFA87DA8FF7DFD04A8FF7DA8FFA87DFFA87DA8
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFFA8A8A8FFA8A8FFA87DFFA87D
%A8FF7DFFA8A8A8FF7EA8A8A87DFFA87DA8FF7DFD04A8FF7DA8FFA87DFFA8
%7DA8FF7DFD05A852A8A8A87DA8527DA8A152FD05A852A852F852FFFD047D
%52A87D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA87DA8FF7DFFFFA8A8FF7D
%FFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA9A8FFA8A8FFFF7DFFFFA8A8
%FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA8A8FFA8FFA8A8FFFF7DFFA8
%A8A8FF7DFFA8A8A8FFFD04A87DFFFFA8A8FFA8FFFFFF7D7D4B7DA8FF7DAF
%FFA87DFFA8FD06FFA8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA87DFFA87DA8FF
%7DFFFFA8A8FF7DA8FFA87DFFA87DA8FF7DFFFFA8A8FFFD04A87DFFA87DFF
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFFA8A87DFFA8A8FFA87DFFA87D
%A8FF7DFD05A87DA87D527DA8F852A8A85252527DA8A87DA87D7D7DFFA87D
%A82727A8A8A8FD09FF7DA8A8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8FF
%FF7DFD04A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8
%A8FF84A8FFA8A8FFA8A8FFFF7DFFFFA87DFF84A8FFFF7DFFA8A8FFFF7DFF
%FFA8A8FF7D7D27277D52277D7D2752FF527D7D27F852527DA87DF87DA8A8
%5227F827A8A87DFD06FFA8FFA87DA8FF7DFFFF7DA8FF7DA8A8A87DFFA8A8
%A8FF7DFFFF7DA8A87DA8A8A87DFFA87DA8FF7DA8FF7DA8FFA8A8A8A97DFF
%A87DA8FF7DFFA8A8A8FFA8A8A8A97DFFA8A8A8FF7DA8FFA8A8FFFD04A87D
%FFA884A8FF7DA9FFA87D7D27FD047DA87D7DA8A87DFF7C5227527DA85227
%52A85252527D527D7D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFA87DA8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FF
%FF7DFFFFA8AFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFFFA8FFA8
%A8FFFF7DFFFFA8A8FFA8FFFFA87DFFFFA8FFFF7DFFAEA8A8FFFD05A87DF8
%7DFFA87DFFFFA87DA8A8FD06FFA8FFA8A8A8FF7DFFFF84A8FF7DA8A8A87D
%FFA8A8A8FF7DFFA87DA8FF7D2752AF7DFFA8A8A8FF7DFFA87DA8FFA8A8A8
%FF7DFFA8A8FFFF7DFFFFA8A8FFA8A8A8FF7DFFA8A8AFFF7DA8A8A87DFFA8
%A8A8FF7DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DFFA8A8A8
%FFA8A87D527DFFA87EA8FF7DA8A8A8FD09FF7DFFFFA8FFFF7DFFFFA8A8FF
%A8A8FFFF7DFFFFA8FFFF7DFFA8A8517DA8A8FFFF7DFFFFA8A8FF7DAFFFA8
%A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8
%FFFFA8FFA8A8FFFF7DFFFFA8A8FFA8A97D52A8FF7DA8FFA87DFFA8A8A8FF
%A8FF7D527D7D277DFFA87DFF5252A8A87DFD04FF7DA8A8FFA87DA8FF7DFF
%A8A8A8FF7DA8FFA87DFFA87DA8FF7DFF2751A8A852FFAF7D7DFFA87DA8FF
%7DFFA8A8A8FFA8A8FFA87DFFA87DFFA87DFFA8A8A8FF7E5251527DFFA87D
%A8A87DFFFFA8A8A87DA8FFAF7DFFA87DFFFF7DA8A8A87D4BF87DA8A87DA8
%F8527D2727A8FD047D52A852F852A8272727F8F8FF7D7DFD04FFA8A8FF7D
%277DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A827F8FF5227527D52
%A8A87D7DFFA884FFFF7DFFFFA8A8FFA8A8FFFF7D7D27FD0452FF52512727
%2752272752FF527DA87D52522727525227A8A852275227522752277D2727
%27527D7D522752A85252A8A87D272752A876F87DA85227274B527DA87DFD
%06FF27272751277D52517D7D277D527D527D5252275127A17DFFF827FF7D
%27F8F8277D7DF87DA8A8524B7D7DA8FF7D4B4B7D27527D27FD05F8277D27
%F8272752F8F827527D2727A8F827F8275252F8F87DA8FD08F87D7D525252
%7D52A1A87DA8A97DA8A8A8515227A852F852FF7D7D52A87D7D7DA8FD06FF
%767DFFF8F87D52F87D5227527D27527D27F827F8F87DA8FFF8F8FFA8A84B
%27F8A876007DFF7D52F87D53277DA9F8277DF8F8A227F8274BF827277D27
%F8F8272726277D5252F82752F8F82627525227F87DA82726F8F827F82727
%A8A8A87DA87DA8A8FF7DFF7D7DA8FF7DFFFFA8A87DF87DA8A8FD067D52FD
%06FF4B527D20F8FF27F8A87DF8A87D2752FFF8F82727F8A8527C4B52A8A8
%7DA87D527DA87652277D27F87D7D277DA8767DFFF827A827F85227F87D7D
%525227F8F852F8F8274B275227525152F8F8F85252527DA85227FD05F827
%7DA87D7D52527DFFA87DA8A852FFA8A8A8FFA8A87D277DFF7D7DA87D527D
%7D7DFD06FF5252A85276FF7D52FF7D52A8A87DA8A852527D527DFF7D7CA8
%7DFD04A8FF7DA8FFFF5252A87D52FF7DFFFFA8A8FFA8527DFF52527D7D52
%FFFD04A827A1FF52527D4B27A8A87DFFA852767D7DFFFD04A852524B5252
%7652FFA87D7D7D27A8FFFF7DFF7EA8A85227FFA9A8A87DF87DFFA87DFF52
%7DA8A87DFD08FFA8A8FFFF7DFFFFA8A8FF7DFD04A8FFA8A8A8FF7DFF7D7D
%A8FFA8A8A87D7DFFA8A8FFFF7DFFFF84A8FFFD04A87DFFA87D7DA87DFFA8
%A8A8FF7DA8A8FF7DFFFF7D27A87DFFA8A8A8FFA8A8FFA87DFFA87DA8FF7D
%FFFFA87D7D27522727527D27527627277DF8F87D7627A852F852AF27524B
%F820A85252FD09FF7DFFFFA8A8FF7DA8FFA8A8FFA8A8FFFF7DFFFF7EA8FF
%7DFFA8A8A8FF7DA8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA87D
%A8FFA8A8AEA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFFFA8FFA8A8FFFF7DFF
%FFA8A8FFA87D2720F8F8F85227F8F827F827F820F827F8F8A87CF87C7DFD
%04F8277D5227FD06FFA8FFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87DA8
%FF7DFFA8A8A8FF7D7D7DA87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA8
%7DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87D
%FFA87DA8FF7DA8A8A87D27F85127272752F827F8F8F827F8F82727F8A852
%F8517DF820F8F8F8A82727FD09FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF
%7DFFFFA8FFFF7DFFA8A87DA87DA8FFFF7DFFFFA8A8FF7DFFA8A8A8FFA8A8
%FFFF7DA8FFA8A8FFA8A8FFA9A8FFA8A8FFFF7DFFFFA8A8FFA8A8A8AFA8FF
%A8A8FFFF7DFFFFA8A8FFA8A8524BFD057DF827A827517D5227A85227A876
%F87DA87D4B4B2752A85227FD04FF7DA8A8FFA8A8FFFF7DFFFFA8A8FF7DFF
%FFA87DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA8A8A8FF7DFFFFA8A8FF
%A8A8FFA87DFFA87DA8FF7DA8A9A8A8FFFD04A87DFFA87DA8FF7DFFA8A8A8
%FFA8A8FFA87DFFA87DA8FF7DA8AFA8527DA87D52277DA82752A8A87DA8A8
%A87DA852A87D2752FFFD057DA82727FFFD04A87DFFA8FF7DFFFFA8FFFF7D
%FFFFA8A8FFA8A8FFFF7DFFAFA8A8FF7DFFFFA852A8A87DA8FF7DFFFFA8A8
%FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DA8FFA8A8FFA8A8FFFF7DFFFF
%A8A8FF7DA8FFA87DFFA8A8FFFF7DFFFFA8A8FF7D527DA87D7D277DAFFF7D
%FFFFA8A8A87DFFFFA8A8A8277DA9A87DFFA87DA8A87DA87DA8FFFFFFA8FF
%A8A8FFFF7DFFFF7DA8FF7DA8A8A87DFFA8A8A8FF7DFFA87DA8FFA85276A8
%7DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8FFFF7DFFA8A8A8FFFD04A8
%7DFFA884A8FF7DFFA8A8A8FFA8A8A8A97DFFA87DA8FF7DFD04A8FFA8A8FF
%FF7DFFA8A8A8FF7DA9FFA8A8FFA8A827F852FFA8A8A8FF7DA8A8A8FF527D
%FD06FF7DFFFFA8A8FF7DFFFFA8A8FF7DA8FFFF7DFFFFA8FFFF7DFFFFA8A8
%FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA9FF
%A8A8FFA8A8FFFF7DFFFFA8FFFF7DA8FFFFA8FFA8A8A8FF7DFFFFA8A8FF7D
%FFA87D84FFFD04A87DFFA8A8A8FFA8FFA1527D52F87DA87D7DFF7D7DA8A8
%7DA87D7DFFFFFFA8FFA8A8FFFF7DFFFFA8A8FF7DA8A8A87DFFA8A8A8FF7D
%FFFF7DA8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF
%7DFFA8A8A8FFFD04A87DFFA8A8AFFF7DFFCFA87DFFA8A8FFFF7DFFA8A8A8
%FF7DFFFFA8A8A8527DA8A87DA87D7DA8A87DAFA8A8A852F8A852F852A8F8
%527D0526FF7D7DFF527DFD06FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FF
%FF7DFFFFA8A8FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFFFA8FFA8
%A8FFFF7DFFFFA8A8FFFD04A87DFD04A87D7DFFA87DA8A87DA8A87DA876F8
%7DA827277D2727A87D527D7D52FFFFFFA8FFA87DA8FF7DFD04A8FF7DA8A8
%A87DFFA87DA8FF7DFFA87DA8FF7DA8A8A87DFFA87DA8FF7DFD04A8FFA8A8
%A8FF7DFFA87DA8FF7DFD04A8FFFD04A87DFFA87DA8FF7DFD04A8FFA8A8FF
%A87DFFA87DA8FF7DA8AFA8A8FF7DA8A8A87DFF7D7DA8FF7DFFA8A8A8FFA8
%A852F852FF527DA8AF7DA85252A87DA8FFFFFFA8A8A87DFFA87DA8FF7DA8
%FFA8A8FFA8A87D7D7DFFFFA8A8FF7DA8A8A87DA87DA8FFFF7DFFA884A8FF
%7DA8AFA8A8A876847E7D7DFFA884A8FFFD05A8FFA8A8FFFF7DFFA87DA8AF
%7DA8A8A9A8FF7DA8FFFF7DFFFFA884A87DA9FFFF7DA87DA8FFFF7DFFFFA8
%52FFA8FFFFFFA876F87DA87D7DFFFFA8A8A87DA85227FFFFFFA8CA7D7C76
%5276CAA1A1A7CA7DCACAA8A77CF87DA8A87DCFA8A7A7CA7DA77C527DCA7D
%7DA1A87DA8A7A7A8CFA1A876277D7DF87CA8CA7DA8A1A7A87620A8A1767D
%CFA1A1A87676CA767C7DCAA8A87C517DCFCAA1A1CF7D7D2751A7A8FD057D
%FFA87D7DA852F8FD04A852A852F8527D27527DA87DA87D76FF527DFFFFC2
%9A757675754A76754B4BA06F75A0A0759A6F4B75764A769A7675C9FD0475
%4BA19A7676A075A0A0754BA07575759A75A0754B75A06F7CA07575C96F4B
%757520A0757576A14B76A07675767575A0A04BA1A07675766F76A04B4AC2
%7D7D7DA87D7DA8A87D7DF8277DA87DFF52207D52F8527D27277D2752A87D
%52A87D7DFFA8A02727F85252F82752F8275227F87EFD0427F8525226277D
%F827A852F87D27F87D7CF8524B05277DF8272727F87D27F87D7DF8525227
%2752F827A852F87D27F85227F8527D2727A8F8275227F8A852F87DFFF852
%7D2726FFF827A0A159A87D527DA8527DA82727FFA8A8A8FFA8A852F8527D
%F852AF5252FF7D7DFF527DFFA87C7D7DAF27277D7D7DA87D7DA8A852A8A8
%7D7DA87DA8A87EA8A87DA8A8A8527D7DA8A9FF7DA8FF7DF8A87D7DA8A827
%52A85252A82727847D27FF7EA87D7D7DA87D7D84A87DA8A87D7DA87D2752
%FF7DFF7DA8FFFF5227A8A87DA87DC97C527D7D277DA8F851FF527DA87D52
%FFA87D84A8527D7D274BFF7D7DA8A87DA87D7DFFFFC2F851A8A1A7A84B20
%A17DF8A77D204BFF204BA12720A77676A7A1277C7D2027A17CA7A7764BCA
%7DCAA77DF876A7A1A1CA204BA77DA1A17676A7A1277CA12027CA2651CA76
%20A75220A7A7207CA87DA1A87CA1A17D76CA76207CA19A51F87D27F8527D
%F852A82720A8F8F8A852F8A852F8527DF85152F8F8A97D7DFF7D7D7DFFC9
%C9A1C97CC3A1A1A0C9A0C9A1A1A1C9A0A0A0C9A0C9A1A1A1C9A0C9A0A1A0
%A076A1C3C97CC3A0A0A0C9A0C3A0C9A0C9A0A0A0C9A0C9A1A076C9A0A1A0
%C3A0C9A0A1A1C9A0C9A1A1A0C9A0A1A1C976A0A0A1C3C9A0C9A1A1A0C9A0
%A027F87D7D277D7DF827A852527D27F8A827207D52F87D7DF8277DF827A8
%A87DFFFFA8FFFFFFA8FFA87DA8FF7DFFA8847EFF7DA8A9A859A8A87DA8FF
%7DFFA884A8A87DA87D527DFFA87DA8FF7DFD04A8FF7DA8A9A87DFFA87D7D
%FF7D7EA8A8A8FF7DA8FFA87DFFA87DA8FF7DFFA8A8A8FFFD04A87DFFA87D
%A8FF7DA8A8A85227F85227275252F8527D27277DF8207D5227A852F852A8
%F82752F8F8A8527DFF5252FD06FF7DFFFFA8A8FF7DA8FFA8A8FFA8A8A8FF
%7DFFFFA8FF7D52A87D7DA87D27A8A8A87DFF7D7DA8FF7DFFFFA8A8FFA8A8
%FFFF5227FD04A87DFD04A8FFA8A8A87D7DFF7D7DA8FFFD047DA8FF7DA8FF
%7D7DFFA87DA8FF7D7D527D52FD057D527DF8277E2726A87D7DA87DF87D7D
%F8277D2727A87D52FF7D52FFFFFFA8FFA87EA8FF7DA8AFA87DFF7DFFFFA8
%7DFFA87DA8FF7DFFF827A8A87DAF52F87D52F87DA8F827FFFFA8A8FFFD04
%A87DFFA87D527D527DA8A87DA852A87D7C7D76F852A8765252527D4B5227
%A87D277DFF27527DFF7D7D2752A8A87DA8A8A87DAF7D7DA8A87DA87D7DA8
%A87DA84BF852A82752A8A87DA8A8A8FF7DA8FD04FFA8A87DFFA87DA8FF7D
%FD04A8FFA82627A87DFD04A827F87D2720A87DF8A851F852A8F84BA8CF7D
%A8A8A84B7D7D7DA8FF27F8F827F87D52522727F827F87D51274B7D2727F8
%524B27F8F87D76F87DA827F827527DF8F8F8FFA8A87DFF7DA8A87D7DFF7D
%7DA8FF7DFFA87D7D52F87DFFFF7DFFA8A87D7D52A87D52FFFFFFF8274B27
%F85227F87D76F85252F8277DF8F82027277D27F8527DA852F87D27F8A852
%F852A82727F85252F8527D7D2727F8277D27FD05F8275227FD07F85152FD
%04F820F8F8F852F8F87DA8F820FD06F8A8FF7DA8A8A87DA87D7D7D5252AF
%7D7DA8A87DA851F852A8527DA8A852A87D76FF7DFD04FF2727AFF8F8A852
%F8A87D207D7DF852A82727522727A87D52A87DFF52272027F8A852F852FF
%F827F8A87DF852A87DA8A82727FF27F8F827F8F8267D2727F827F827F827
%277D52522027F827F8205227F87DA82727F8F827F820F8FFFFA8A8FF7DA8
%FFFF7DA82752A8FF7DFFFFA8A87DF87D7D2752FFFFA8A8FFA8A85227FFFF
%FFA8A8A827F8FF27F8A87DF8A87DF827FF7D7D7D27F8A852527D7D847D52
%A827F87D7D277DA82727F87D7DF876A8A87C27F851FF4BF8F8F8265252F8
%2752F8F852F8272727F87D52275252F827277D27F87DA8A852F8F8F82752
%527DA8A87EA8A87DFFA8A8A82727FFFFA8A8FFA8A852F852A8F852FFFF7D
%FFA8A8FF5252A87D7DFFFFA87DFFA97DA8FF7DFD04A8FFA8A8FFA87DFFA8
%A8A82727FF7D7DA87CF8A8FFA87DFF7D7DA8FF7D7DFD04A87D7DA8FF7DA8
%7D7DA8A87DA8A8A87D7D7DA8A8A87DA8A87DA8A87D7D7DA87DA87DA8FFFF
%7DA8A87D7DFFFD04A87DA87DA8FFA87DA8F827A8FF7DFFA8A8A852F87DA8
%A87DFFA87DA8A87DFF5227FFA8FF7DA8A87D7DFF7DFD04A8FF7D7DA8A87D
%FFA87D7DFFFD047DA8A87D524B767DFFA87DA8FF7DFFA8A87DA87DA8A8A8
%7DA8A87DFFA87DFFA8A8A8FF7DA8A8A87DFFA87DA8A87DFF7D7DA8FFFD04
%A87DFFA87DA8FF7DA8A8A87DA87DA87D527DFFA87D7D7D52A87D7DA8A852
%A852F852A8527D7D7D52A87D7DFFFFA8FFFFFFA8A8FF7DFFFFA8A8FF7DA8
%A8A87DFFA8A8A8FF7DA8FF7D7DFF7DFFA8A8275276A8FFFF7DFFFFA8A8FF
%7DA8FFA87DFFA8A8A8FF7DFFFF7DF8A87DA8FFA8A8FFA8A8FFFF7DFFA884
%A8A87DA8FFFFA8FFFD04A87DA8FFA8A8FF7DFFA8A87DA87DA8A8FF7DA87D
%7DA8FFA8FFA8A8A876F87DFFA87DA8A87DA8FF7DFF5227A8FFFF7DA8A87D
%7DFF7DA8A8A87DFF7D7DA8A853A8A87D7DFF7D7DA8A87DA8A852527D7DFF
%A87DA8FF7DFD04A8FFA87DA8A87DFFA87D52FF7D7D7DA8A8FFFD04A87DFF
%A87DA8FF7DA8A8A87DFFFD04A87DFFA87D7DFF7DFD04A8FF7DA8A8A87DA8
%A97D527D52A85252A8FF7DA852F852FFA87DA8FF7DA8A8A8FF7D7D7DFFFF
%A8A8FF2727A8A8A8FF7D27A8A8F852A8A8A8FF7DA8FFA8A8FF7DFFA8A87D
%A87DA8A8FF5252A8A8A8FF7DA8A8A87DFFA87DA8FF7DA7FD04A87DA8FFA8
%A8FFA8A8A8FF7DFFA8A8A8FF7DA8A8A87DFFA8A8FFA87DFD04A8FF7DFFFF
%A8527D527DA87D7DFF527D7D27F8FD04A876F87DFFA87DFF7D7DA8A87DA8
%5252FFFFFFF852A826F8A82727A87DF8A87DF827FFF8517D27F8A827277D
%7D277D8426277D7DA87D7D52A85227A87DF87DA82027A9F852A84BF8A852
%275276277D842027A82752A852F8A852277D7DF852A8274B7D7DA87D52F8
%7D52277D7E7DA8527D27F87DA8527DA8522727F8F8A87D27A852F852FF7D
%7DA85252FF5227FF5252FFFFFFF827FF527DA852F8FF7D7DFFA852A8A8F8
%27FFF8F8FF52F8A87DF852FFF852A87D7DFF7D7DA87DF8FF7DF852FFF852
%FF2727FF27F8A87DF8A852F852FFF852FF5252FF4BF8A87DF8FF7DF852FF
%277DA87DA8FF4BF8A87DF8FF8427F8272727F87D7D2752A82727F8F8F852
%27207D76F87D7D272727F8277D27F8FFA87DFFFFFF527DA8A8AFA8527DA8
%7DA8FF7DAFA8A852A8A87D7DA8527DA87D76A8A87D7DA87DCAA8A8A8FF7D
%A8A87D277DA87D7DFF527DA87D52A85252A8A852A8A87DA8FFF851FF7D52
%FF52F8A8A8F852A87DA8FF7DFFA87D7DAF7D7DA87DFD06F852A827767E52
%2727F820F8F8F87E4BF82752F820F8F8F852F820FF7D7DFD04FFA8A87DFF
%FFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8FFFF7DFFFFA8A8FF7DA8FFFF
%7DFD04A8FF7DFD04A8FFFD04A87DFFA87D7DFFA8FFAFA8A8FFA8527DFF7D
%A8A87D52FFA87DA8FFA8FFA8A8FFA87DFD04A8FF7D20F8F85252277D5227
%277DF8272720F827F8F8A852F8527DFD04F8275227F8FF7D7DFFFFFFA8FF
%A87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA87DA8FF7DFFA8A8A8FFFD04A87D
%FFA87DA8FF7DFD04A8FF7EA8A8A87DFFA87DA8FF7DFD04A8FF7DA8A8A87D
%FFA87DA8FF7DFFA8A8A8FFFD04A87DAEA87DA8FF7DA8A8A87D7D527D5252
%52A1527DA87D5227527D7D7D4BA852F852FF7D52525227AF524BFD04FF7D
%7DFFAFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8FFFF7DFFFFA8
%A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FFA8A8
%FFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA8FFFFA8FFA8A8FFFF7DFFFFA8A8FF
%A8FFFFFF7D7D522727A87DFFFFA87D2727FFA8A8A876F87DFFA87DA9A87D
%A8A852FD04FFA8A8A8FFA884FFFF7DFFFFA8A8FF7DA8A8A87DFFA8A8A8FF
%7DFFA8A8A8FF7DA8A8A87DFFA8A8A8FF7DFFFFA8A8FFFD04A87DFFA87DA8
%A87DFFFFA8A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFA8A8FFA87DFFA87D
%A8FF7DA8FFA8A8FFFD04A8527DA87DA8FF7DFF5252A8FF7DA852F852FFA8
%7DA8A87DAFA87DFD07FFA8FF7DFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFF
%FFA8A8FF7DA8FFA8A8FF7DA8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF
%7DFD04A8FF7DA8FFA87DFFA8A8FFFF7DFFA8A8A8FF7DA8FFFF7DFFA8A8FF
%FF7DFFA8A8A8FF7DA8A8A87DFFFF7D52FF7DA8FF7D27FFA8FFFFA8275252
%7DAFFF7DA8FFA8F87DA8FD06FFA8FFA87DA8FF7DA8A87DA8FF7DA8A8A87D
%FFA8A8A8FF7DFFFF7DA8FF7DA8A8A87DFFA87DA8FF7DFFFF7DA8FFFD04A8
%7DFFA884A8A87DFD04A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFFD04A87D
%FFA8A8A8FF7DA9FFA8527D7DA8522752522652A8A252527D7DF87CA87DFD
%0427A87EA87D52527D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFFFA87DFFA8A8FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FF
%FF7DFFA8A8A8FF7DFD04A8FFA8A8A8FF7DFFFFA8A8FFA8A8FFFFA8FFA8A8
%FFFF7DFFFFA8A8FFA827F8272727F87D7D2752FF2752272727F8F8527D52
%F84B27A852272752FFA87DFD06FFA8FFA8A8FFFF7DFFFF84A8FF7DA8A8A8
%7DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8
%FF7DFFA87DA8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA8FFA87DFFA8
%A8FFFF7DFFA8A8A8FF7DA8A8A85252275227527DA87D7DA8F8F852274B52
%27F87D27F852A8FD0552FFA87DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8
%FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FF
%A8A8FFFF7DA8A87DA8FFA8A8FFA8A8FF7DA8FFFF7DFFA8A8A8FFFD05A8FF
%A8A8FFFF7DFFFFA8A87D52FFA8A87DA9A8A8FFA87DFFF827FFA87DA8A87D
%7D52F87DFF7D7DFFA87DA8FF7DFD06FFA8FFA87DA8FF7DFD04A8FF7DA8A8
%A87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A852A8A87DA8FF7DFD04A8FF7EA8
%A8A87DFFA87DA8A87DFD04A8FF7DA8A8A87DFFA87DA8FF7DFD05A87D2752
%FF7DFFA87DA8FF7DA8527DA8FFA87DA8FF7DFFA87D7652527DA8A8A8FFA8
%7D524B52FF7D7DA8FF7DA8A8A8FD08FFA87DFFFFA8FFFF7DFFFFA8A8FF7D
%A8A8FF7DFFA8A8A8524BFFFD04A8527DA8FF5252FFA8A8FF7DFFFFA8A8FF
%A8A8FFFF7DFFA8A8A8FF7DFD04A8FFFD04A87DFFA8A8A8FFA8AF7D522752
%27A8A8A87DFFA87DA87D52FFA8A87652277D7D2752A8A8A87DA87DA8A8FF
%7DA1527D76A87DA87D7DA8FFA8FD06FFA8FF84A8FFFF7DFFFF7D52FF7DA8
%A8A87DFFA884A8FF7DFFF827A8FFA8A8A87D7DFFA87652A17DFFFFA8A8A8
%7DA8A8A87DFFA884A87D52FFFD04A87DA8AFAF7DA97D7DA8FF7DFFA8A8A8
%7D27A8522752A87D7D5227277DF8272727F87D27F8527DF852A8522727F8
%277D52207D27F827525252F827277D527DFD04FFA8A8A952275152A8A8A8
%FF7D7DFFA8A8FFA8A8FFFF84FFA8A8A8F8F8FFA87D4B7D7DA8FFFF522705
%52FFFF7D522727A8FFA87DA8FF5227F82752A87DA85251527C2752275252
%A8275252524B7D527D7D7D277DA7522727F82727F8F8524B4B7DA8527DA8
%7D767DF8275252272727525252F87DA87D52522752A87D7DFD04FF7DA827
%27F827F87D5227525252A87D2752A1274B2751277D2727F827A852275227
%277D7D275227F8F8527D7DF8272752FD0427525205F8F8F827527D27F827
%FD05F85152FD06F827207D27F852A7FD07F820A8FFA8A8A8FF7DFFA87D52
%2726FF5252277DA87D52527DFF7DA8FFA87DFFA87DFD06FF27277D20277D
%52F87D52527D7DF8527D20F8512727527D5227F8272752A8A827A852277D
%FFF827F87D525152A8202720F8F87D512DF827F8F8F87D27F8F827F827F8
%F8277DF827F8F8F827F8F87D52F87DA8F8F827F827F8F8F87D7DA87DA852
%7D7D5252A8527C7D2726A87D525252F87D7D27527D7D7D525227FD06FFF8
%27525227A827F8A87D52A87DF827A8F8277D27F8A87DFFF820275252A87D
%7C7DA87DA8A827F8F87D7DF8767D20277DF8277D27F85227F82752525227
%F8F827F8F8F8527D5227F805272752277D27277DFF2727F8F8F827F820F8
%2E525227275252F852A97D5227274B2627277D27275252F82727525227F8
%F8FD06FF52527D7DFFA87D4BCF7DA8FFA8527DA85276A82752FF7D522720
%FFA77DA8A827A8A8A87DFF7D7D27FF7D277DA8277DA85276A85252A87D27
%A87DA8A8A8F827FD0552FFAF7D27A17DA8A8FF7D7D27A8FFA85252F82752
%F8F87D7DA82752527D7D522752A87D52A87D52527D7D7C277D7D7D527D7D
%7D275227FD06FFA8FF7D7DA8A87DFFA8A8A8FF7DFFAFA87EFFA8A8FFFF7D
%7DF826A8A87DA17C527DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA8A8AF
%A87DFFA8A8A8FF7D5252A87DFFA87DA8FF7D7DA8A8A8FF7DA87D527DFFA8
%7DA827277D272776FD067DA87D5227A87DA852527DA87D7D27F852A8A87D
%7D7D524B52A8FD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFA87DFFFFA8A8
%5227FFA8A87D7D27A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFF
%A8A8FFA8A8FFA8A8FFA8A8CFFF7DFFFFA8A8FFA8A8FFFFA8FF7DA8FFFF7D
%FD04A8FF7D5252A97DFD05A87DA8A87D7D7D527D7DA82727F8527DFFFD04
%7DF87DA8FD06FFA8FFA8A8FFFF7DFFFFA8A8FF7DA8FFA87DFFA87DA8FF7D
%A87D7DA8FF7DA8A87D7DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA87DFF
%FF7DFFFFA8A8FFFD04A87DFFA87DA8FF7DFD04A8FFFD04A87DFFA87DA8FF
%7DA8FFA82776A87DA7A8527DA852F8FF7D527D7D4B7D7D27F8F82027FF7D
%27A87DF84BA8FD07FFA8FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8
%A8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFA8A8A8FF84A8FFA8A8FFA8A8FFFF7DFFA8A8A8FF7DA8FFA87DFFA8A8FF
%FF7DFFFFA8A8FF7DF827A82752A827F8A827F82752F87D52F827A8FD05F8
%A827F8527DF8277DFD06FFA8FFA8A8FFFF7DFFFF7DA8FF7DA8A8A87DFFA8
%7DA8FF7DFFFF7DA8FF7DA8A8A87DFFA87DA8FF7DA8A87DA8FFA8A8A8A97D
%FFA8A8FFFF7DFD04A8FFFD04A87DFFA8A8A8FF7DFFA8A8A8FFA8A8A8A97D
%FFA87DA8FF7DA9FFA8207CA8274BA827277D522727264B7D7D2676A84B27
%4B274B7D52277D5227527DFD04FFA8A8FFFFFF7DFFFFA8FFFF7DFFFFA8A8
%FFA8A8FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DFFFF
%A8A8FFA8A8FFFF7DFFAFA8FFFFA8FFFFA8A8FF7DA8FFFF7DFFFFA8FFFFA8
%FFFFFFA8FFA8A8FFFF7DFFFFA8A8FF84FFFFA8A8FFA8A8FFFF7DFFFFA8FF
%FFA8FFFFA8A8FFFFA8FFFF7DFFFFA8FFFFA8FD04FF7DA8A8FFA8A8FFFF7D
%FFFFA8A8FF7DA8A8A87DFFA87DA8FF7DFFFF7DA8FF7DA8A8A87DFD04A8FF
%7DFFFF84A8FFFD04A87DFFA8A8FFA87DFFFFA8A8FFFD04A87DFFA8A8A8FF
%7DFFFFA8A8FFA8A8A8FF7DA7A8A8A8FF7DFD04A8FFA8A8FFFF7DFFA8A8A8
%FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DFFFFA8FD09FF7DFFFFA8A8FF
%7DFFFFA8A8FFA8A8FFFF7DA8FFA8A8FF7DFFA8A8A8FFA8A8A8FF7DA8FFA8
%A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FFA8A8FFA8A8FFA8A8FFFF7DFF
%FFA8A8FFFD05A8FFA87D7DFF7DFFA8A8A8FFA8FFFFA8A8FFA8A8FFFF7DFF
%FFA8A8FFA8FFFFA8A8FFA8A8FFFF7DFFFFA8A8FFA8FD06FFA8FFA87DA8FF
%7DFFA8A8A8FF7DA8A8A87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87D
%A8FF7DFD04A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFFD04A87DFFA87DA8
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFD04A8FFA8A8FFFF7DFFA87DA8
%FF7DFD04A8FFA8A8FFFF7DFFA87DA8FF7DA8A8A8FD09FF7DFFFF7D7DFF7D
%FFFFA87DFD05A87DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7D
%FFFFA8A8FFA8A8FFFF7DFFA9A8A8FFA8A8FFA8A8FFA8A8A8FF7DFD04A8FF
%A8A8FFFFA8FFA87D7DFF7DFFFFA8A8FFA8FFFFFFA8FFA8A8FFFF7DFFFFA8
%A8FFA8FFFFFFA8FFA8A8FFFF7DFFFFA8A8FFA8FD06FFA8FFA8A8FFFF5252
%A8A8A8FF7D527DA852A1A87D7DFF7DFFA87DA8FF7EA8FFA87DFFA87DA8FF
%7DFFFFA87DFFA87DA1AF7DFFA87DA8FF7DFFA8A87DFFFD04A87DFFA87D52
%FF7DFFFFA8A8FFA87DA8FF2627A8A8A8FF7DFD04A8FFA8A8FFFF7DFFAF7D
%A8FF7DA8FFA8A8FFA8A8FFFF7DFFAF7DA8FF7DA8FFA8FD06FFA8A8FF7DFF
%A87D7DFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DFFFFA8A8FFA87D7DFF
%7DFFFFA8FFFF7D7DA8A8F852FFA8A8A87DFFA8A8A8FF7D7DA8A8A8FFA8A8
%A8FF4BF8A8A87DFF7DA8FFFF527DA8A8FFFF7DFFFFA8A8FF7DFFFFA884FF
%A8A8FFFF7DFFFFA8A8FF7DFFFFA884FFA8A8FFFF7DFFFFA8A8FFA8FD06FF
%A8FFA87DA8FF5227A8A8A8FF7D2752A87DFFA87D7DFF7DA8FF7DA8FF7DA8
%A87D7DFD04A8FF7DA1FF7DA8FFA87D7DA97DA8527D7DA87DFFA87D7DFFA8
%A8FFA87DFFA852F8A85226A8A8A8FFA87DA8A87DFFA884A8FF7DA8FFA8A8
%FFA8A8A8FF7DFFA8A8A8FF7DA9FFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA9FF
%A8FD06FF527DFF7DA8A8A8FFFF7DFFFFA8F852A8A8FFFF7DA8FFA8A8CF7D
%FFFFA8A8FF7D7DA8FF7DFFFF7D27FF7D7DA8A8277DA8A8FFFF27F87DA8FF
%FF7DFFFFA852A8A87DA8FF5252A8A8A8FF7DA8FFA87DFFA87D7DFF7DFFCF
%A8A8FF7DFFFFA8A8FFFFA8FFFF7DFFFFA8A8FF84FFFFA8A8FFFFA8FFFF7D
%FFFFA8A8FFA8FD06FF2052A87D7DA87DFFA87DA8FF7D7D7DA87DFFFD04A8
%7DFF5276A8FFFD04A8527DA8A8A8FF5227A87DF87DA82751FF7DA8845220
%A87DA8A87D7DFF7D2751FF2752A852F8A87DA9A8A87DFFA8A8A8FF2727A8
%A8A8FF7DFD04A8FFA8A8A8FF7DFD04A8FF7DFD04A8FFA8A8A8FF7DFD04A8
%FF7DA8A8A8FD15FFA8FD0FFFA8FD0FFFA8FD0FFFA8FD0FFFA8FD0FFFA8FD
%0FFFA8FD1EFFA87DA8FD0DFF7D7DA8FD0DFFA827A8FD06FFA8A8FD05FFA8
%7DA8FD0DFFA852A8FD0DFFA851A8FD0DFFA852A8FD46FF52A87D7D7DA8FF
%A87DA87D7DFD73FF7D5252275252F8AF5227272752FD74FF7DA87DA8A884
%A8A87DA87DA8FDB6FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-11-17T15:10:19+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8F/5yf1uPT9U8kWv&#xA;6J/S11f3F1FaQ/WDbfvOdqqryoV+MuB8WwxSHjN5+YPm/QvNOoeWk0EWL3MqXcmiG5gnKSfVYx/v&#xA;WY3rVIg+zU3pgTSS6X5v84+n5utIbIT2ssbw3i87dfqkTrKGAqlZNq/Z3+H3xVOV/MbX9L8m2Wpe&#xA;XfLi6L5dtJ2l02ZrqG84TFpI3BE8bStyZ3+2KD7sUUl3nTznqF/F5b1bVdBEN2xFzb3gukIuJZPT&#xA;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&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -633.981 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 633.981 li
871.198 633.981 li
871.198 0 li
cp
clp
41.5317 .25 mo
41.5317 598.917 li
870.948 598.917 li
870.948 .25 li
41.5317 .25 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
41.5317 .25 mo
41.5317 598.917 li
870.948 598.917 li
870.948 .25 li
41.5317 .25 li
@
41.5317 .25 mo
41.5317 598.917 li
871.032 598.917 li
871.032 .25 li
cp
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 99 
/Lookup <~
z!s/N(#6b82$4$n;%LNOC&.AsI'+YTR(D7>\)&!Y`*>TCj*uGgp+rV@",odj(-lsB//0Q,9/gDM>0dS(
F1aaUM2_$6V3\)Z[4YA;d5VXnl68L=r7Q*('82rL-905*5:-CW<;*R2D<C8tN=%,CT>=_-^>tRQd?qj2
m@STMqAl28&BiIn/CfXF6Dd$*?EElNEF^J8OG[anXH=U=^I:lsgJ8&KnK5>0#Kl1T)LiI21N-0"<O*GU
DP'_9NQ%!lVR"9P`RtQ.iSqhdrTo+I)UQ's1V3$K;ViciBWg&GMX-J\TY*kCbYagpnZCR:![%E^,[@s!
3\"fE>\>>`G\u22T];hS`]W7eg^9+4s^TOJ&_6Kt4_R$:@_mHLG`O2mT`j`0]a18NiaL\`pb.P0(bJ(K
4beL`<cG@/HcbmJRd)Ee]d`0.fe&]Ire]Pn)f#u.1fZhU=g!@pFgX4BRh9s]Yhpg/diRZSnj4Dr!k1\S
-khP"6leg[DmGR$K~>
>>
/CSD add_res
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 633.981 ]ct
[829.5 0 0 598.667 41.5317 35.0643 ]ct
snap_to_device
<<
/T 1
/W 76 
/H 88 
/M[76 0 0 -88 0 88 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
IS)[0-p\SX&Hs[p0GYTs'OqFN,%E-5('$!*57^V$&c`5=*+L0/*#K;-(DRA_1)(Q*/49bR)e1:+%V%k9
;$n^]@idgD).R.V'JC:l11N-W/km3O70#FM.KC)#)e0Wm2\7?"'`]0Q7Su8h(B?4#,q_1X*+MbE!&$J:
$qgR^2^r5\@glib6SeXN#U]U^@k_Cg'-m9^&7/jQ!*fL:!$5Vj9J'aO@p/\="@Qa09c3e<$!(PG@:NdZ
@fSXi@fok=!"Jj9,ZS>a!*!H1$"G&a@hW?6@kqO?@kD1l@jh<r!#8uK,;*IR@k]BB-=^=k1J]Z6/i,+i
11MP#*+L^5*&1+f9NE`T2bIRQ%V%.]@h:t:@gr?H:]Ou<-"@Kp&n;>[).Ok#*b,ru*]"!:$Pa+\$"FTX
)d<VY1JBf=1.a5d$Y(YA(h4t('.4:s6XpHl$oAbB&2YA:3$]Y74p,:S69%"4#Se'T4TH,s"U,D:3='*r
%fd%B""P&c)#aLh+T`&T!=f2;&-Orq+TMKC(]c;r)[-NJ"qMCT+Uf#',7Y@n7M$+2)\E9a+oiDn#lXf<
!<<W1"T\W(*<cEI!!iQ*!"/l/$N'l)!<i?$&HiRL!Xf)1!!iQ-!"Ao1!<<*8!!30$$7cA`#65A>%3Z&Y
%:]nQ&hF:d!%.mU!!rW*!uV1T!"o86!!!$"!X&K(!!!$#!!!$"!"B)3!<`B)$j$>-*t/;Q!WW`3!!*0*
&d&+9!=&T.&-E%C3!pZ5"p+c*#5S<%!so#0rVus3!W;uu"TAB$"Vh";!<<-##RCY8!WW<.#ljr/#Qau-
rW!60!"&`,(BFU<%K$23$jT<'!!=\N#lXf;$4Hn7"<7CB#QOl*!WW3%#64`)qu?a"!WE'!#lXf-!tbV9
"U+f)!W`9%rW!fD!X8W3.1n!;3sHl5@gXLe@g5"-56s[X!=o/1#QOi.!WrE&!<E6*!!3#u!#5,,"p+l,
!"],7rW!0;#QbD7!WWB%!%epV-R9Hq)Ij'Z).3h^#=14P&RtkE#QP23#lt#+!<<3'#lk,0!!!$$"98E&
r;Zj$!W<!#"9JZ-q>^L!r;Zg!/-u:V#p'6Z$6]WS!"T88%:]AI',1l[!<E0#"T\T'!<=GH#Qt;2!<E0*
!!<#t%0Z_3!<W<2!rr<'!!3?'!$2O_!!!$"!"fYE$NpqG!":4X'+P!C";3<s"qh+O$N:&+$N:#4!<<?)
!!30&!!!6%!!!)u!!!0#!!<K/!!E-!#6Or+!snr-"9&9<"onZ:0b-\i@fduK57ne?2$=+"@ho:L!#,>3
"p4i0!rr<%rVus-#l=T("p+c*rW!*&!!!'#!WE'G!<N6$*<?0@!s/H*#Qau+6=VK@,YeUt%qA3a$tB`%
@q-f8!=&W+!"8])#6=u2!!WK)*W5s@%fct<!rW*%"9SW("8i-'!W`9)!<<<!!#c1^#6kD5!"&f.2\lZb
"sXNb1_]ok!!!6("8r33"onW)&IfZZ#ljr/!!!*$!!E-!!W`B)r;[!&!!!`@"8W!7!<E0-"98K+":"o,
$P!DI"Uth>%LE1;#lXf("TAB$#Q+QF!t&NB!!!$&!!NQ/!!*'"!<<0$!<<9)!<iH(%KQb;!s/B$)@6HG
!"f2;!!E<,!!WH,'dWkb#nmUZ!!<9(rW!?-!!!6("TSND!#Z+Oqu?]trW)ir0`qOY!<`N*"T\f2!!!0*
#QP/8!!r`B;%4NM+p8ba"r(&H>mV\n9+*BS(]j[D!!E?$!"]D=!b23b!?MOR!!!'#!!33#"==4*$53CZ
=\f&9!%%[O!&Oui!>u.L$l1d2,n_&)3F`mQ3"lU.)#e"K'+YU`#RhIR#6G2<!"p.Q$O(#?@oY`*5mSY?
$ip85'`\t;?Wpqc@noj1@h1p5:Ldm,?4:':@l#uB?Ss_p%MK0j=^r"Q&KsC]0e$TN@lImP@m!:F;e';c
!+Q!Y@q,UN!>8lh"UAO*@m'^"%m"313b(?.@j5Dm+[]`J>lJ4o@i?:&'+>!F)[$-R(_1$].lJ(P#ll,Y
(LmnJ)GgE;:gOk@@fR,X9E7Kh/RoZ,$r.[M+_*NB3A=e=@fo%s<Cm+!%mNu'94Lt3:FHDa0+&*g,Q7Zi
%LYo6$kG*L7Un/_"ChaH#t5538PTOZ(`!_c0E;Mb(1RUW$jdVs@i&60@fe#&@h<-D8fKet@m_O\$8c7&
=&fnc*_uqG!#GVU!!Na!!AOfr'ak!P!X&K'"TeZ/!Wj,;">Ku\!$hOE$NUA3!!WT2!rseU$O-SD$j%+M
=9\p2#R^_@!$)sd#mptm/lN3+"=smi$ni0%"!A4Q)asi1%KmL[!snr8!!*'*"V;:H$P!XH!!3-.quA,H
!=g:V!!391!XAfD!WWH1!!!$""9\]+">3h_@maa'@nU;s@gZ][raQ$V7L&tl!!30$"9&9,!=8o0"q(k?
!!<&u"9Sc,!<`<$#6b51!WW3%"TAB$"oJ?%!WW6*,%Fti:1IQ,@fcsH/H0,^/Rnqb!rN$,"Tnc-!X&K(
!X^n)!WE'8!WW31!=8c-(B=L<!!!-%"U+l,!!!'.r;Zg$rW";u@jWoY@m+<j@k:gm@iS*N?Qr8H"TST)
!<<*#!!`K0!<<-#$igM1!!WH(!!<9'!"T&:!!!'#!!`K,!WW3&!sni*)$C6G!s&uH-pJb_%6#(7+?'^=
#ok<E(1RFF!!!&u!!!-"!!W`1!<NE*)u]gK"TSN'!!E?(!rrT,!WWE)#6"T*!<W<*!rW*:"TSX&"s.7Z
*!QNM,mP.k1'Jd4,nMp:#m(#*r;\YU!!<<'"9A[$"9\],!X&K(!!!$"!<<?-$3:/3%0?\5!!WN+!!3-#
":+u4!snr-$31/0r;[9/$Y'/?!<`E3!<E6%#Q=](!>k_8"9AN3!!<-"!<NE'!"K#0!<`B&!rrE)!<<<*
!W;uu#Q4W,":bG4!!NB>$ig;.#lt84!!E9C@fllB":GhB!<<6-r;Zm$!!E-!#6=l5!!*'""oA9,!<N6$
$3L8/"on`(!!*0,rW!f>!!!'#!=M$s'+,re'*8.G@h2rX<Y%k5/b/lA$2sr2!rr<&!!N?&!W;uu#5S<"
"8r3m!sel,!<<*("TSN,'bq/f+TiGa(^`#)@i8c@@h(R$!"B&8!!!'%!!3-#"98Z,#lju+#64i4!!**&
"98H&!!N]0!XT26#QOi,r;Zs$!"K#5rW!fD%gN:Y!"/o;!!`mA$UFk2$qMNI%0ICJ$[r6f!uhOZ":t\K
#T='P!!EW0!"8o8"rn'X#8."?!"oJA!Xo8@!tYh?#652C"UkkF!XBMF#m157$NL89@h'Xj#mVLR,9B/Z
$Od7@#7+Q8%0-V;%1GN&*u,b$$NLA7<rcA'$k!^K:BD^@'EL8q2Zs9j63I8k#T?8B#_!R4!Y5P>@fZf<
%:^VV(^U@'#T-c6&jm$Z"s"7K)b(,:!%C,d!=fMF'IX2'58ke92A?-4$"G>e!#Ybe!uj];!%7gV:(A7R
'JBn9#oYU02]*-:(Lnt&0h)X7<F["Y;I_^s0O@Ud8Rjtp+^d*9&7\7@(1UQY)e/kX+F[f]@h*!0@mjfV
@j,>>@fU!A@hE2Z@gFCd1(5N8>6kZD$O^Gc@gPU0,T7b7/Jf9R)&Ntn,QJ\k-jg_>)[6QZ#\+Pn#?E91
-t=)e$O&$e,6o=k)&=8u"TTYG&n;4X*!@l&7g``0-k%$q#7<:3@gs1].Urbl'4VP_$[u4[@j,=n4pFFn
@k8N+6O3i%@gNkX@hTh!3sS7k@hi)L>7P-E:^%RC((Dr'@i61p.:XT4'4;nl)Ij:f,%ETB(FfRj&cr7>
!!*'(+9MoM!!WT<&0_2X(^p]N"onW('F"aA+oh`P!sJr7#6tD6$NN$i!sJi9!!4BT.pY@]@i@Z]@k2%5
@iJo:@h9ga"UP/8!"f24$6Klk!!!-,$k+Zh"TSW1!!E9%$P<@F!$M=C!!*'"#m(),!WW3$%KHJ0!rr<T
@lm:B@NA&`@js_T@iAi;@i-m&r;[$&('"=9'aXd=&gJ;W!([.p!u:k:!<<-$!ru:9IK1_q)$9p?)?:iZ
$615i(]bc[(BY7.1-[?C.5bTY@jX5E=r:a3>9H$4!"&`G!>bb>!WWK2!s<$7&d2\l;?128!!`Q*"p4iU
+=7C#*tB_D;@bcQ0gJ,,5QjIo#Rs!+&eP]^+9rqk*t'#1@iSMV(_I)T$N^Y>"pt_<((+Ol)@6CR5[sn+
+_)'n$O?_:6l?1=raSJM8mGk9,[)`o@maa9&7>cN@k_>$":P\U"ssHk!!!'I'Oq7M#7)J@@nL5m@jtnG
@l7as;DM`:#$)LC"Ci'7@m+<W1ga`JraPt;6Mt<n3;d7f87N2.@fm#C#SSir*$.6K*s`Sm@hCC&)B1PD
+(G^h&Rukj(1TX.&MGF5=CYh@@gZ^U(1S1.&n;XS@f\o$rF5m`4]hVm"%Qi7<rHMa!!E?@!!si:":5&<
$"+Z\!<WH2!"<?J@h3&R@gX,%@gkR6'/1)0#=JYa@i8ba"]8b9raQKu@m+<s@nC/W9J^0N3*d+1raT\%
(C(EX!<W<s!WW<,%V$,K"T\W/!"9#6#Qb)5":>,<!!NX<&M*ol!"K,Y"9KAE!?;m^%ho9c"UlOn!"K8C
$6U)r"rRCG'bCr\"p5MT!"]lT'F=aH$tBSS!tGn`'F#NW+9;NF,QN8n!?D@h&c`D5/IVmb#QXuE$46eT
$NV(E#6G#9#RLJ3&H`^R!"KbE#7ge>#oO?f1'8+/*?$=-.1Ti*4!lg'/K"Wq!X\rM#8[FK#S%"U'F"q?
2#md`!!`T0!YGJD"onX5*!6?M&HDkA%2'Ta"98]6(`35S#lkGJ&dDMH*&@`u!#5uR!>#kT!uE*`)$1]W
&-*XL,Qeqb/-H[m80JWN#m1eB%KIUQ'EC<$*u,+`(C1?J$3^kC&-NFJ#R;:O$3C2:#nmaL/gq&n!!a3J
#o<pW$3LPI#%IoH#@dgFrX<fV!=]MB%LEjV!(7)&!u(tJ#S%=`!"]tL$3L>9#R(eN#os<W&-*CZ$OR+=
!B)nL.KM=E@j;-h?i^rF*XN`p%q?>a$Y']W$=bDm'OW+T%q@(-)D`%:&Ru)V*+KRj'Os!j&7Zb^%U9r_
*b-0d.1fi'@j>Iq'g![N$T8/S>%7e,&Rttl'KQ4l@fRY[@fd2B*roda@g$9Q@g?KY3<qDI@g6EC@g-?Q
@fU!P@g?KD64%-)@fg-C64=D-@fU!@@q/tX/5mfr=^tZG).OZc@iIF<+pS,Y*=W#T!"K_I"qD4^#7M+P
!s/H0!!jT-"r.4r&1/>O"Tnr7!+QEl$=aBP"UG21'EAXa&,fu@(IT$-=oMn4)Il#2@noj1":5&/#QXo,
"Tec1!!WE.!Wr]A!<sDJ&-)q8!Y58?!!X)<!XoMJ*rlZN'*SFA!"Ao9*s;]M>%8gL3b(!V6Xs,+%V$\h
@q./u!!WE)"Tn`)!WE'!"o\K%!WE';%0-G6"98E*!W`<%"onW*!!!$"#R1G4"9T)3!!*04rW")F!t-;%
2&[/0'h]DX.1B\k(*5UJ7LB;$!XA].!<r`8"o\K)$ipY7"TAB%!<W3"&H`"6!u(k>!!EN-!<`B)!X8`(
!$_ID!WiK)(bfG8!=BNN!?Me^"WA'^$SVY_!!3-#$ig8/#Qal(!t#,:$i'c+"9ec*'Fk$A&-<:H!!!''
!!33%"98E,!t,#-(^^WN'aF^>!>>SH'Oq1O!>c4Y#Qk>9!!<&u#lt&,#m(57!"Au.!!39'!YPJ5"TSQ1
"oo/6!"]Y@!<<*'!r;m@#64`J$3pZ!(+'8r!!WF#.1lV/!+Q-4!X/Q5!WW6$!!E?%!!`N*#m:5.!=er,
%0HV2!<<Q7#ljr0!rr`.!$D=D!!!$"!!<?(!'V_L@k(Xe/iG:k)AQal$5,0#-NF;a!!3E,"98Z.!WWB(
"U4r1%g;q5"8Mos#6"T1!XB2D!!ET2!t,)7qu?g&!=/](@fmr>$<7"7$=#)k.l1[:'-mP[q>^s+!!33%
"p"])!!WE'!r2fu"r7@ErW!E0!WW?*!sel8"98H&!rs,;!Ybtu*%hI5!+6Qu,u,7d%5AJ?!#Yn<!!!K,
!##M9!rr?%$igM4!s&B,!!<3&!!3'!7gp.=!!*6''EARB#7(A2(B=O;!rrH.5Qh]4"pGG9;?R11!$PhV
*"Wqe('Fd@!!<3%!!*B.#mUh<&ci7?(bl:<"9JQ'!\FBc!<<*5$jd"J!"/u<!!rW,"<:nQ!!NuB!#uRV
(`3Yt2^C3a!!4T!%3lMlrW!!-!!<*"7L'\<"p"],@g!#<1'.GJ#64`/"UG,1$N^tA%gEjS#nJ*a%KQtG
9IF<_/da0P6l%aH@jkh%+"/HY',X)('d5aa%gO-]1B7X\8H8kq#64l,!+Q6>"X*jL1,o:7)BKFu!!j?7
'+b9f$kNsg";qph(Gm*i(+Mjb3rWUl,#]4J+oYt#2If6e.n=)Z0/P.g>R28V)?^<M"r.[]1LgeQ;_\7a
@q,fO@q-#l/eS(m"",g59)`<.-=^1`:dc[@'k1Z_+(Jda*X!5Z%PqT),\%)r70!Jp0+&_06<5jO5>Wn@
2?%)!4B,fJ9`SZD@fU"K04Q>:@q/1praQ!d@po:G!&FI^!\Rt"r*qE&"U>PE/g3pq8Ic4d7LqQh%1t0g
4C]I6'0%%3,%EK)*<9SZ1]SI02@<r#)*0'=!_HlMrF5gur*o^`r*od^@fcL;@n\j3<@(r]01&u3:G?-1
@n&UX@q.#/%q?4i#ZhRI+_(g-@g>(,8eVs?4(A\/'Orb*-t<To0H2BL;e&rD*+M#Z&g]pG-=^IO@o+a]
8j5re,Yfgk7PmLe7nbO4@fR_`$X3W8!!*-*":YV=1LgD%!%86[#nI:C!Xo8<!!iQK#8[CT=WIb`"U-pp
!>#f$!"fZM.q95-)^l1C@gibq)BBH#%il'15qW<F!!WZ.!!ET8":G25$=a)L2,*uL#lt54!!!6+!!<i3
!"fDE$jd(;!XAc,!sBVE"rSR#(aM]i//THI!#R@Y1DNGj-ODF]:C[C*!!;us#R180(b#Rr">'HN!WrH/
qZ$TtrW!0,$jm(:!!`T)!#l@I!Y#53"?lu$%MB=E#::K1'j5$7!\P!i%M/F:('+O>!!!9+&.S[C!!WE'
"onW*!!*'#!WWE-r;Zm"":>#,(Bsp@#6Y&-!!WE("_/?6&QoWS'NHGh,5u'V$"Frb/H>hJ!"o>5#71G3
!WrZ-!<<*,!"8u1!WE'(!rr<D!WW3+rW*Z4"p5,2!!<3'!XJf-!+QmV.q:.0@fePu*WBOT-Y#)F0EM4S
!WW9%!!3'!$NU50!!!$&!W`B'');M.!<`3!!Z(n=q#CL"!!!,d!!<B)!!W?%":,&;!<i?$"pY,3)$'g?
rW!--!X/Q.!!N9$"p"]/!!*'%rW!$*!!!B*!!*B1m/R@m!!N?+!!!*"!"K&J!WWB($jH\G!"o;4!WE'%
!rr?)$N'l,#64c3"TAB,$j?tt!WWK,"ml9l!rr?(rW!$%(B=^>!!i]2!"/c2!WWf/!!*0%rs&?#"q1J8
#6=f.rVup!rW!!%#6O5lrW3cH!!E?2"p,/6!!39'"UYD9!!rW1r;[H2!"&l4!!!?-!!!64*"!&W!!E)u
!!_Zf!Wtgj)ZTk+!&k-.!<WZ/"TSZ3!>GM6!Xo&5!!!$""TAB1!<<?2"XX9N!!WN+!+Ys-!!;Nf";_1@
!Wi6""p,88#64`0r;ZgNqu@Nb!b2B6!"0,6$RYuU":#9>"98T,"%!+f!!*-$li7)"#ZL^&00TR?!#>SE
":#,2'-dMX!"T&8!@e*M3#2Jo%Mo9K!=K0C$=a5>#9!XD!WW3+!UTjm.0Kq^!!**#A,ZHA-3>1f!!`KF
*<6'?9)oA$70*Al(Ln3\"onf>!!!$V!tGA7#7LnC"oni-!UTjn@g4Xf!!iQ00*;+Q.L#l9!!*'25mRGo
@f^'A@gN,M@gi>J!"`WC@g-?M!!3-&"pe]G"9SW.m/VY~>

%%EndBinary
grestore
np
gsave
41.5317 599 mo
871.116 599 li
871.116 .25 li
41.5317 .25 li
41.5317 599 li
cp
clp
1 lw
52.3652 .25 mo
52.3652 599 li
0 0 0 1 cmyk
@
3 lw
63.2817 .25 mo
63.2817 599 li
@
1 lw
74.1987 .25 mo
74.1987 599 li
@
3 lw
85.1152 .25 mo
85.1152 599 li
@
1 lw
96.0317 .25 mo
96.0317 599 li
@
3 lw
106.949 .25 mo
106.949 599 li
@
1 lw
117.865 .25 mo
117.865 599 li
@
3 lw
128.782 .25 mo
128.782 599 li
@
1 lw
139.699 .25 mo
139.699 599 li
@
3 lw
150.615 .25 mo
150.615 599 li
@
1 lw
161.532 .25 mo
161.532 599 li
@
3 lw
172.449 .25 mo
172.449 599 li
@
1 lw
183.365 .25 mo
183.365 599 li
@
3 lw
194.282 .25 mo
194.282 599 li
@
1 lw
205.199 .25 mo
205.199 599 li
@
3 lw
216.115 .25 mo
216.115 599 li
@
1 lw
227.032 .25 mo
227.032 599 li
@
3 lw
237.949 .25 mo
237.949 599 li
@
1 lw
248.865 .25 mo
248.865 599 li
@
3 lw
259.782 .25 mo
259.782 599 li
@
1 lw
270.699 .25 mo
270.699 599 li
@
3 lw
281.615 .25 mo
281.615 599 li
@
1 lw
292.532 .25 mo
292.532 599 li
@
3 lw
303.449 .25 mo
303.449 599 li
@
1 lw
314.365 .25 mo
314.365 599 li
@
3 lw
325.282 .25 mo
325.282 599 li
@
1 lw
336.199 .25 mo
336.199 599 li
@
3 lw
347.115 .25 mo
347.115 599 li
@
1 lw
358.032 .25 mo
358.032 599 li
@
3 lw
368.949 .25 mo
368.949 599 li
@
1 lw
379.865 .25 mo
379.865 599 li
@
3 lw
390.782 .25 mo
390.782 599 li
@
1 lw
401.699 .25 mo
401.699 599 li
@
3 lw
412.615 .25 mo
412.615 599 li
@
1 lw
423.532 .25 mo
423.532 599 li
@
3 lw
434.449 .25 mo
434.449 599 li
@
1 lw
445.366 .25 mo
445.366 599 li
@
3 lw
456.198 .25 mo
456.198 599 li
@
1 lw
467.116 .25 mo
467.116 599 li
@
3 lw
478.032 .25 mo
478.032 599 li
@
1 lw
488.948 .25 mo
488.948 599 li
@
3 lw
499.866 .25 mo
499.866 599 li
@
1 lw
510.782 .25 mo
510.782 599 li
@
3 lw
521.698 .25 mo
521.698 599 li
@
1 lw
532.616 .25 mo
532.616 599 li
@
3 lw
543.532 .25 mo
543.532 599 li
@
1 lw
554.448 .25 mo
554.448 599 li
@
3 lw
565.366 .25 mo
565.366 599 li
@
1 lw
576.282 .25 mo
576.282 599 li
@
3 lw
587.198 .25 mo
587.198 599 li
@
1 lw
598.116 .25 mo
598.116 599 li
@
3 lw
609.032 .25 mo
609.032 599 li
@
1 lw
619.948 .25 mo
619.948 599 li
@
3 lw
630.864 .25 mo
630.864 599 li
@
1 lw
641.782 .25 mo
641.782 599 li
@
3 lw
652.698 .25 mo
652.698 599 li
@
1 lw
663.616 .25 mo
663.616 599 li
@
3 lw
674.532 .25 mo
674.532 599 li
@
1 lw
685.448 .25 mo
685.448 599 li
@
3 lw
696.366 .25 mo
696.366 599 li
@
1 lw
707.282 .25 mo
707.282 599 li
@
3 lw
718.198 .25 mo
718.198 599 li
@
1 lw
729.116 .25 mo
729.116 599 li
@
3 lw
740.032 .25 mo
740.032 599 li
@
1 lw
750.948 .25 mo
750.948 599 li
@
3 lw
761.866 .25 mo
761.866 599 li
@
1 lw
772.782 .25 mo
772.782 599 li
@
3 lw
783.698 .25 mo
783.698 599 li
@
1 lw
794.616 .25 mo
794.616 599 li
@
3 lw
805.532 .25 mo
805.532 599 li
@
1 lw
816.448 .25 mo
816.448 599 li
@
3 lw
827.366 .25 mo
827.366 599 li
@
1 lw
838.282 .25 mo
838.282 599 li
@
3 lw
849.198 .25 mo
849.198 599 li
@
1 lw
860.116 .25 mo
860.116 599 li
@
3 lw
870.948 .25 mo
870.948 599 li
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 117 /u put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
23 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D
2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04
046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F558
86BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D
9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066
B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB9
0D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-
/four <1C60D8A8C9B7EF325730A29F6E3A8E85E687770EE1E27F87CEA844D18
4B0E9BD502658E879E1F9BDDE8AE7D0C023ADEB8AD1E21CDA97313F844BB17B9
F9FCD84B1053ECDC8FF> |-
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
/seven <1C60D8A8C9B7EF325730A290D76D77983E96EE242ACEAA131574F93B
B3E9D36E6F4086FF3DB329E48A38DC1C36E41D469A4D1B83FEF82A3668> |-
/eight <1C60D8A8C9B7EF32A47D2AAF8C15BC9A859DEE4113CDE5C7D8BB37BC
632A2AFDD9E1D59E819868DA3B47FA265DB8E729BBC4B74D62996C8CD7000A22
83A23B9E90032D8BA762FC6930C943ACBD9924E3BB182B1447A1E2AF18A8F5C4
FF7E73B671B89EC1964BF90DA6A7AA5C360A10E2B9F34D2BE8C7C673C6A88180
4538AD6230812FB8978313B4BDE98D895F422138708DE46BC5394FB88DD33D90
C210817A05295D4CBA95598D78DA62CFD2497E0D80160F3DA900E68CEC3A30A5
1069510330F600555F89415B16F55B2952535C067AEC9D27A114154239F343BD
ECEE543D835ACB4FF5860A143BC179> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/q <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7C1606B5E4B0CC1666D106C
062CBF25548C316EFAE3CD807215447DEE7459A9D1F79881E23A7CD97C235819
3B2CF61D474D654F5D11A16B0F4A55DC2C0EBE047696753569C42AFD2B22ECAE
0F067510265AB7C26184F3B68C845BB80CAB35D9CABF5FAFF5C3DB638C995B15
CF9621519C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/VLSKBS+Helvetica /Helvetica findfont ct_VMDictPut
/VLSKBS+Helvetica*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 40{/.notdef}rp /a /.notdef /c 
/d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
/q /.notdef /s /t /u 138{/.notdef}rp]
VLSKBS+Helvetica nf
VLSKBS+Helvetica*1 [24 0 0 -24 0 0 ]msf
410.522 628.581 mo
(data set)
[13.3438 13.3438 6.67285 13.3438 6.67188 12 13.3438 0 ]xsh
VLSKBS+Helvetica*1 [0 -24 -24 0 0 0 ]msf
20.6157 397.073 mo
(sequence position)
[-12 -13.3438 -13.3438 -13.3447 -13.3438 -13.3438 -12 -13.3442 -6.67188 -13.3442 -13.3438 -12 
-5.32764 -6.67236 -5.32715 -13.3442 0 ]ysh
VLSKBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
139.694 610.995 mo
(10)
[5.56006 0 ]xsh
248.78 610.995 mo
(20)
[5.56006 0 ]xsh
357.952 610.995 mo
(30)
[5.56006 0 ]xsh
467.116 610.995 mo
(40)
[5.55957 0 ]xsh
576.28 610.995 mo
(50)
[5.55957 0 ]xsh
685.366 610.995 mo
(60)
[5.55957 0 ]xsh
794.53 610.995 mo
(70)
[5.55957 0 ]xsh
27.5298 68.4946 mo
(10)
[5.56006 0 ]xsh
27.5298 136.495 mo
(20)
[5.56006 0 ]xsh
27.5298 204.588 mo
(30)
[5.56006 0 ]xsh
27.5298 272.588 mo
(40)
[5.56006 0 ]xsh
27.5298 340.659 mo
(50)
[5.56006 0 ]xsh
27.5298 408.659 mo
(60)
[5.56006 0 ]xsh
27.5298 476.667 mo
(70)
[5.56006 0 ]xsh
27.5298 544.745 mo
(80)
[5.56006 0 ]xsh
41.5317 .25 mo
41.5317 598.917 li
870.948 .25 mo
870.948 598.917 li
41.5317 .25 mo
870.948 .25 li
41.5317 598.917 mo
870.948 598.917 li
@
3 lw
0 lj
658.985 281.747 mo
38.5317 281.747 li
38.5317 255.247 li
658.985 255.247 li
658.985 281.747 li
cp
.011765 .886275 .984314 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/VLSKBS+Helvetica*1 uf
/VLSKBS+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (supp_eterna_comparison.eps)
%%CreationDate: 11/17/2014 3:12 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.f5<+^[OC;$%IbH-78fr&mUfL3C/I!,.SEHu3(8rD_qJmsVec&kpq_[u0&VM3$l^m>rO?8U)#(jRFS>Dm\421TlKZGEO7tZ+
%$]?4@.ukOY`i*'E.We1O7]Z,ekl/:[\#(M&\Qj#)P>K[,ahXO7Q7B"pk!1Pp`0/eQ&s\Diku8Q9<FQhGK6iBAQ;"3M@]<QRI5O+(
%Z[TC?*"7_\G.0\<T.Bn<mE?SPhpIqYgg.8Bmf%L7d&tqa`B&=S1IPe)c1Z)#@B3]Lhd)7g]lpI0YUPdn:VGtoG#Rl'^T,13<Jr=$
%WN*WG7]gjoAFrl;p=JKU=UdSk]\lXm&(#:BaP]./SpB#h6B<ag_]bI*l3*PY.N[IfMN_28;sAe*LVNhds5e2!f3eONQiHcOs79Th
%_Q<9V\+`niImO8$^Jlg#e$;ST/t5gMfpneb@TUgX?Fr77@c2"39Ir&fe.hO(HtPmqjDZi@=qX#!-'aolAHD.T2ODs7YtR'pB#g72
%q-0oqkOlBl,+7uO^91CZjnls=ej#hlX3%03OAG`<@ao;hY<+<91Dt"h<'Te/RVal^hLsag^=-ej2Y\XOEE2D@2hq[$]'[nLea9Ha
%AW:$CU)[25B_I-T:4(72<VH\.GqH.q@u5:OMh\)O\>@TcPup)<cHN8e>^B.F&udlKMn@2JF/kZe7\TBKg(uRSc*@g8Yc_VPWDEDn
%pJtptNB$O8f5EPAqI^@QaTnD;/1^XjA,k#o,>\f(bmp3P_S+s6J4WB"plb>jomuV;;f/pN4gT3C10GGiTo"M%WXc'8_C63sA#9"u
%>iC`PF+E*sk[,M7TBS1[k&Tro/@)11"T1t>i,'Y=D\EHJ(9]]uQ;0e%"N<3F6EtVNMP\e5c5OshTM-sCATHuVY+Eg&Z!7cr_)M.B
%@`9N*.i+gnYm>9*74=qsn5e-q:Ok)p5hARR12&FR1*Y-oGmdX*qa:KcLHeTDjoqAR%-GN@9A[L\i"O8KUu2p4SUlDmL3^T_r.7MV
%-T"8B7@Js&_'bg9I"B<l0Be\:P`,U"_:7BVb31lKA#k7f:EWA>8O*HOUahcqR/e*g)'.r`&"Y?f.mj5$0pj256;qD<aiqjg\o@-B
%MSU:c8e]R5atQ?\KO6E!Jd:d:#7lmR'8jUGiKGf>5o0T-1'6['i;t&__^)[4A;CB^:lGC8_1p1*9E5Tp%#smQg1JMtMQhS,"t%E1
%'IJX:PF7Wd0Ltnk@Kb:kNW^u1142D+QlrESYaeQ'!?^QY?ogYfL,9>-nDFVq&>W]%_Ub#<T8\iHT(G^,LBl-@L<Ybf+,[?&8b8_Y
%nt,cSK-u=E0Uo.,!>&s3a8ZDpF6Y,q:j#7@SB_tU3#rQ(B/ICY&Qe/J`$h7]2M3ko%2]`\-a(`\_M66gb^(TFPH(X_i.(6_Z:^D]
%dkpWQs!@\1g;-#QQi'5$;^q9ns!@\#)=j9s-3(8RniN<uHI(#hq)irAs,qkc!r:+@P(0EVWC.ft^Z8b49RcTJjI]oZUO4-6&3e54
%P2GUBq$V8nP/Us(0.@0e.4qB-8srR@$_Jk"O7W]0"2Eg09M*FC0E*#G(bPkYH'*JT/-t^s-Tm1YR?F`96.3RogdISF+>&eSaER2V
%r6CbMK?%g84mT&OHqqlKfh@k,`qkI'A5qVO)8)t^iA'SZ6%Kc&7\N,r2k)40(0?9bV_h]BK-oJHPGAiU5>t/i`):^FUeT?,8P,YC
%.f,GW&:pjW3%C\:R:H=UX-9O@\H<8f&CY.uA<:>Vn;.nsNIhTXR`/(/A-s/qn44o?^iL^K+>=p,`W*>&s,O,>$D]U$)BhJ#:V$a5
%138g"D#cGEs!kN>D+fE\Om`F;UgZGlee+lR(Cp+BL2$]$R%[c<N%6PE,L$6j0c#QI"f=S*;'@V9^X9595o9YPJ:*do)61#o@aGF+
%^mC0+&ORiOGqs.U[uM7q-+KVsQ"R/7QBYf&*^"qo?8/Ug2[h#9UhlHY\`\tOFc9\387W=S'+k`T0*$NJ13cb`LHuM'BB6i^5+?*X
%D%KYZeqfP685$dOOi(i4aFha+c(C(+X%[LS<DHJ+B*mZ3p-ABa+_4&hR3E^ZAQHnSbae89`ZB5\W!rBQdKftXirj)8'fNe4@1q3H
%:+/G]Qs']WOS0"0,eqQnO8OTAg#OQpo-R">Z?5;7cMU^TTsT"J-MEuF_$q:BiOr\;jRD(^SJ1;>`UDdha:n/lG`LlFIk2BJX5QNg
%*(C.rKHdci2JK=+f/#6kJBf!Z8P-0qj!'"MC%EhDouFb(4ck9KUj9)eE$4%HD(+I>r>X"C`KMW68VWIblGhP8YfD6Il:15&p68Tj
%!$^>6LW9ZfQF_2+k&n.;1iYWo;L.67[-i4CFdGp_Y.OV!Jkh(9YZl=FGI\Np#j[\30V&jeR6P@]8c$M]mG^Yr09DNep242F/+N+A
%jpjArO4Ac;i^=,$6Y./>HkN#';ErQVnqN7C>R$"<!DHf)hPV74`o-5cS,]dD:XMXZC`sGO4X"Fhl<%:)rJE$M<(&DLQO+C:mMVb,
%kZCAb2IPZiN(?Aq7G]eW'<'Pg^^b>]4[g==HC!5NHB3T68C$>,@W&9]8es9[Pr'ub0mjCh)HY6ffA"I@`V27uBA5i"rk3limS0(J
%S21]ieeu?G+<NE,'B1;N(,r8BhFV9uboN]j=qQ[KZsS"XD$ALmlXQTIbUgtOA&pRJfpQ)X3gH*\#h>@:`0e<'7$jN+%,MG=b^?#m
%5&6Ut\I&&s,jtoD+j)^pQ\gF8/39X>PM,8,6o*MY6J%7S%E?@u^1m)LLo=OG"LEUnpqN>l(>?$I]V3lD;+a4u3d3s"k=CYYY*@t7
%'\4JUGR6=EjoDa;R)/$Bp+;f#08jP+*_dKo$%Cf`A\8>X2GD!A8p4?Sad5G9!NRkee>s"rI=^s7YG1k=5[NM2C`0KP@F8gXfU*@/
%HO;Q;KJ);U/[+bH$r"?uemQbmi6('WbSVI`:K#9Y(]Z`7`hY2f>8J(#RC>.cJ2):]k"NjNfPkFT/.A-62M=md((fSXfr_!Mi=p$)
%9'r$'>(;fV>kD:a>ZMCL,+XWdaFaXL7nPYiW'l!qo/3aEkESJH8JW/8A',*Y"/sJ)=The.Qtm'k#'@uoP'm(]j2Jt[&@$aF?\j&`
%0Ge6gU^62Q:/*DH7[Q+o8#Xmn)#7E<-2'BF7Pm-fOQ?G*l-ejk,EK%;i?pJ35^3>_#q@L13C*NdYeENF!2^DD@dK;;!oE*?4LH_[
%)Glb:o@gE;8SQC!#_eEFpdIZ/kFWs[WS`HU4A-YVgu6@;=QCK?XJBB`PD$/`N-/f_.ck\2L*2"N`4<at.Ek^`8&\0[9Ua1[G\=Nr
%;&CogDeAiT'S7s#"ZgjXY+f;Y`0s5)kAlU[ddg?M"54AR0)4ag&!G..n=ZW2g697-S'g<bj+P8t3[5Jg*!?#J^q>Ns6e@m%!dO$e
%UPBO1W5JOFKQOGi?%hd5=c(9<Qm0bVbYSP91/u@o7jr_F"Z6%3(FVq,A,)$`d>Q303^Xp_G60VHLa[<W\.I\RgbhPa-Q0fP:.Q^q
%V@0=Y-PU?Xd/\'[aF%#84,#Q0)A$VT<+VY;ibYEJ%T!gc"gdBD&B7'S$7Q9mLaS>\Bm#0TQrkcW+Z:&>'fJS7g2fhN5t?W[ZU/-l
%eo8P?A/scW@KTT!244K0f9k[3.,2ihg]WGLW0pDu2AlX,9bYYn`!X6frXY_r_ZU@=BtCi`UC90iBqe!t*,af("(ooFh,OJ;4htSs
%@OA'.&n)cID*9S=Kut,B/;fD4-b7RZhA?g%`c4j4s+MZV\p?4Wg@$Z-=Pk'j'8s)0R&?m!2iQ"MrT.jRW!=HSZ4(D7-#coj)>%dY
%Kd,E^_Z:@/%<%q/&TmLYYj-Mi5q-A6!2kAoAkJ$&_BbQ1,OQX9G;<,/_b<?=C5Aeqg/#ZJ4`FULHZe-]][^aBlq(e(%f3hT"$1N%
%0XEa2ANR>T$-YM"JjdKVU[)j`?,d";[ng<hcd]Vd_<RE45[-t2NTZ[2V$LSs13$ASL4VO4ZX-@*'+paH<7^HAcJD40Q]$h9poq!)
%A*3@QH<]>ohAXq4F_[ePI+GTI?ujZI0Iu-K?q#l,@c^!GqhFBXMp.d!b>`Cd&HQVE#m[0WS;CeCH8,d4lc9Kd`FaqFac?C&M+5DX
%!`tEc]oKI7'gj/RXI*DTFlU+/-+&dQTHbl=d"9%c6sQ)WK(Q\FQL5C74^7%l:MFNX-":sMj+89nQIpn4&N<s6?l.*_Y\3%/Xk1Vo
%+T3h>4G?I4BC!iZ'=Nlc1fb2%A;W0_>+(0#0b$4-2=1mp"`+?q9^h]761/#8NAs?08@4Gf<Ku*lfO2NW$j,!o=PWets(itqZb!r>
%)cOg\lfi4@;s(ds$A"G#"`sd)l<0iUaK-g`[S1b$.cpDH7uYcUGm_J]0Hl;W-@T">j!]R;+dmF,O%aLMT7P&%4Sk>fB<^YmE=>Ar
%T-<[^%0.9[PJK'@*>LgklhG\Xn0\oADs4m'`u5C8n9Gbm,?,["`t_trkd(OHj'IY:$l*n?[\?Mk#2BL3!=W"#Ak,06`9ef3">CYu
%%AEn@'LAeDjYJ@8B.B*;6Jj6=Yk!TSA5[\!Y@LPAHl?/?:^5e>E1%p,aNd''4"@>kLM8/1W^$[5+B4).n-&`b7Z6>%0aE[>kg0i7
%TuGK+'buCVdVMV(+EYGkTdJ4W,ag<#e-%Zc`XE=!@CDo-&2D"k1=QJt2/fG0g+%-1%L^iR$Wq#7;V:!L$VT;>"O;bRTVu@[(@b`M
%*^gq.?3MM+L\2fK_;gKa#DkQQV0$!UnM]$j6@9FR&r8R9b93EF4VY:6"psR2bj.AZNhJm*91*cB(+:R4=R_i"T+/'X)3\GO4?QRg
%;dt;N6u`gI2TR!Q]-q)p>ab+'ni(=e9<`%/%7A9W^BNLI8*#gX`5t,$?oEio8O9uH6"%b>d5_hZeklR#WJkeYm=>o^YSi`3>Z.5h
%L/AYd=nE+N+ToIZN-HRS"eGa5P(d?dK+?9b7LrB2;0F!>OhluE'q7I\W!W)[SPk"t!8=)P!3`(jK\]'Z?sk'F>e*7i#_%CS'7qWX
%W$GSk*-dh50kLK%kZR&Y!X4i\*3?O*Gj-1d/qS$sJXMgUI`)18Sjj42ebT\=7qD^C$;c"&6(?fO'1Oj#'<&Q?SJ;fA2F^!(!IK@c
%d"V9YmTjr&AW/l>js;<m@<uKS#h]pA"&[Lfao]XIDAoBm%%RO/O9M41@WbX@"T*rEH1[paWr#hTdU)AVp7N:[11%kGe!rRQIt8Qs
%"C!:XUM(fq"79n5Zc4B:SH+U1YmESJCGoW8<%2A_5?A'"A/D;QbuHY;js_%\`:a:h$mf!d@B71?q:H*70D"flNKQuPKEHUW:1obF
%PS8>!pi^geBE!2mZq8a\^4[i@:^fJK/cj2!dq#/fX3+\P<6>b#6PDj"d$YXm3#Te>AH!r9+2I&8fS6pTKs@lrAY(A+6KpgNC$He:
%?=Uj<J-utZ!/uff0G$rae;Xnp'#VglQhq*bp6+rM"\)6fMOHli/Rm")[KjYBBS[Ia%pVpSFJdXr)Eh:Od9bj[1(58W-33/7Pi&:U
%^gIdZb`i]&b="6ueD/kM`?VG-KGBE>k*l[A2DUMB)kKsF]kZp5A8)1SNF'r>,4`;gh^P.r/8C\*!CW-qcs919)`m!hGjlR='W1H^
%kmeRY,""Yk+lM.'TbJjY,;[RF#<ZW%s(Ik=_\<)HOb3n*/#HT#mVKnT7O%F:b^Y63,"#g5J\'eC-H.MD_ieJUXQCNP[cb_@?C:?c
%D8b(^2=Edb%?`1LfIS.OA(^XPhVtmS!70:Sb8aoc_Dj^!41:O#iG?HaM)lZLN6%Ht/t(&6+>mG\]AQmb%!9"QSA"11\tScAdiJ#3
%pWnb:!?o#VKS:)%QJ8Yaa$jj.Rm]Z7$_'b5cpjf`QaD#VS1%!5`k!JnSRXUBH6R:dEh5E1lo6W6#bcc?A1-KLrb]0Xp]s:FP\fo[
%JSC6%Fp>^[WegQ!Gt.6B*I(&6\Gk:Z?r\!E4E/0=h&,(u$!n1XXR%&b(q&-%/XYWmBQZRNP=G#r'?/R0*3pIEbS;;nDQ"do?%OtM
%JnS/C]bo;e*'=Lg$!F`G%2p*Q;M^c-<G#KD(*4DS<t.mSq$?&P:TLZMDr?#'W?k%3Y0Ng\gY`gIEGIo1&e!*H3`?>fBV__.ns(m5
%chWP6`oC\Lo<Og.J^(d4\H)f?$j[]&k6`*9TF#P5I0l9K?GlgM*ah#2(6E7=V'h0/ZLMQE-lF6s%A\`E2Wt&//.sH"^]_oE/jNYY
%q(cKi))n89SMuNIK?QS)U74Tg&03/a6<8&f10JHH;0\mhZ%6+7LTs[=+nI'4;M55Lc&da$!Tn^$1/=`E/7c8Y'$HBr>_d+bKF>$Y
%R+$(M_GEHS?A+;nJBQ^NeLh[[M++^4R4cD-"Kl\,%.[LP9!]]gIEl51`8[JXW&(Xb8nhUEWYf6b"t$5C1Zh7c'_6X;)$D/316mf\
%Ogl?$1_%?D66OPZ<*#.Q*:?qP,kFM-XN]guiG*)(9O`j_=sBoFkdr"u\U#lA(UA`CWoUI10ZeNiL2B*FjKG`X9GqFt)5%YRR\[h<
%NK_Hqo7TpI72q+*6?Ik=Ft&R#"r[fA1F>[S1%TZ^9ZimNl3&fJ$d$ZORCs^l-Vj'lb>p@7A+#/b:DNW7R?@QI*bPo"Fp1Nj7Kk%H
%Fob5[YH'er0Ps02_!R#(Tb2Vum>O#5Qd^:k98g>$G`FW^WT^*7.1S@*`YhpP_SE5RR^19q<$Q%d-Gr+*V)#Tolj?k2-"<Y-F>>ej
%pEQ&/A>_Bm3c1J9Q_@..6X+qM@Mbd<i"$>DG%&rTAOI+L2'D@h;_\4`K)d\?i00OBAF;MIfn^ZV6p-;EVF7ZJm&XB^\,sYaXJ$"G
%B6.F0M;&m=c7qN*'EbXtJn9n&*D\fNe9?J#UeKDE/MLnuKAFDdms,R)$YL8G./.Ld(NL*L[=GdIGYGRYL95)['IAg;2Pd;]QSGC%
%=Qj$s=XV?NWcM<\?c5\<(qe-(mqM:!OlA^P:E'*8hFaNoAXQ=&@s^h8^W5Wo5i,4'aR9RJ`(X*=AXU[i=AtONXAu,K0Rh;u7C6<;
%W)8OX2s^Z=+M/s\3ef9..j2,);$Scmi.gW4;$3Wn;ac!>qf*f)U'Y_cLd3u^WG^c[SNEJEe(T)N/AB_mBFPP&c5CC.-<\5CHB33X
%UO'QIUV+n%(lYgWJ:r&@Mofk<*&h(.T?!s/-I#j74Ps7b0tg<r*i=YOEG!Ef`VQ>S"-0GQ\I0$NCkB7(H(m@F?QjcIAhXIC,@WFP
%n02\lcu]GCcBO]KaRIMSm9!dW$N+]LQFA%$4ZS\=_8+-8_uq$M!%H)+V(AsNGU<[#30dHn"HDV+=3<M.ZD9j"iQsub,!Q`qqJ"'%
%Tlm6[@`unRj+DDsP!<E]j02`@b;(?q?6##?@k<frTb6T_XU2]L_C@<mbc<Q46"Tpo`pkJq_&-V>k=kfX73gM5Bb[ul`2ja>?mkg]
%A?S:m-c['_S*i]&%;&1J:`2b)(RTWhV7b?Qd>a>baC[IBgX*9Y@ZY0c+!cl885]Y?JhCm59Kh;Q8/RugDN$n<BN2+P_m$+;DJUsC
%]7G!u[^_17Mpnf+&jmo/UGh[#MBn"16%J>aEs%82R*[X-W8E=hGaS5W*Kn:V7@:!/EWUsE?rElCfoNBoL,TkbI!HBq$;:]SE+]B-
%1ISj2l!2TAFB">g#%&-%_T6^nN;aC*VKqAHk6!9UL@f@E$B*;Td6JWqqB\jsd:)+<&>_5$B$Rq.p"8MV]7i2[M+V_F&h"^A$*KXS
%dOIh0Cc!]!Lk:Y[!gs^3QJrK]loB#'[f1@Zg)sE`-uaC)6tH@`ZD8,nFesO1#Y;3g*]WA*GnQ\rpVHnT2Sirc,ABLs,dTDU,>D(G
%QnuP9YsJ^U5Ol`9)3VGi`s`N=ec8Dff9n$$;iSF)7705"5Duu$"'ZYj(btY2%(%#+S_/bN.eCnkgb@EJacrm(TA9XoCf=/ibSla8
%[rb_r_h&YNEJn;6^(YZZaAHUn(cdH<'ILa-AGFD(_kMcrDJX^5R`Y>K[bo`59PU8.,JZ]&*&LEg+#oCA%HnX]AfbADb9IUdn=XL1
%.=1n4f:"B`F]a,T]3at>3u,#H&'.tj:Vh,3Xp@ZmZ+7Hn"#g0NTGfg>O.QISZB).O`4TYqhurs$3Ya/Y<X!VO>X\18b(Fn+'mioC
%kacco?;OmJEta9?l:e.pDeG,jL<iJb38L_RVmIhhp#3R?[eN*(35ED<XSIo4=1,pMUUglo]WeqZhYEM>#rd0r(<ds+CjP8cF[B1/
%hXFOVpM^!UmmX<6!o;,UfAr?Jo-Pik41iYi3!!=@]Zpufp7BTY/2nYtb8/D%GT>I\GH>]T-fF1)WXE6="?9YhR^fLN0\u<[EoJk_
%gYa>%&urJ(jor0U#fb_S44D:*8:SM_AOBpIQ)#UCbbH:3>?=69)<7ujfBq.[.3uR%i:[c7*<)*l5?E`oD0H6G,3!qR!B)Dp\+.Yp
%q&!ggEtQPhZTP)09JW?_b#gX/qoe=3[P3XpgZo_"!GoH'js"\f@%[u'<q(YYVe-:ga8p""NHbjHI]/--$uu#\T=rmEJ@+C8&MT=/
%!"o_Sm\)O(B3lp9/`l>bdJTU.DO^k]0F%V\b^(s9J>-%3R`2!JS0?%8<e`OaZpE.+7#.c^Ij,L?_pP4WiHo`].]NgQ]u7"NDaY2t
%WC>7scV3(S7MM-G+!jWRJKpQs`JSIES90>hbiV<NLk-e=P&Y#bZ#I\`ZZ[n9r5ACOKfg"OC5P>Cp\,I^Q0;;WC]LH1PRK+Yht'MJ
%B=rtjYfJY9>)4)kjLZm+:L`*i[[eQgQuT0n1'th%Gu/*Zk:T$lSn`I[\u$#r15Z,s<ujG1.X)eM'a=P>m!cd!,&e+t\YeAfhedSp
%l!+,h^Un:l8%l^1*Wgg`jPo'lm]\]bFl(lt\Qh2phQQq0KNg+hj\`cSV^<+O7'/L``o#M+I]Gi-2JV;UZe]Nl"te>Q]MX*,Dt`E;
%oKHT"p$8BV[s%B;Gd#dBIWS)4C8VZYXB5;T:AfOiC?)bWc*q-ZZok65;l"8TJD.ouqlTURU!Y/=b'oFR[1R^GN&NhXlJNoDr5*r<
%X`gHW+82ap-J\<H)B25<P02Tm][7b.RtF!7XtGRg2-S6gRdjc<53Q#4#TW)>]KYWTS"9BtkXR[?lZYR_SQ`ECplh/l```+^^"`F:
%[b5T328<=c<X2XNBQ41T<k[5TFGKCI5C+Er::uXR@Xt?,CrF)gFVkkq.pA`nY<<esR\N/rpuh'QKRhY=p>a&OI^<bdWn'\XB)HF$
%Ve-T^r2`acl]58N2]JlB)du4KgYk$:JA/%9qP]BDPg.(gmnpKRlG2#4CAX"_5p$U!e=7<#@sgO9j[kMY@5[WZ^3O5^H'giZ?]Gre
%&E78+4^Q-n;(H4OHJ,7+:J1#<0(suSqaR"En0<C64%.>`Op\+__PpAjP`4kVW:r/a%pQa@+7[fG)fXf*:$A$F^(r2*)n#+TbH$\A
%+(7gKs+N/8efMc1UuNqo:K=?!-!aT37]I:FeRlJ>^sOFXS##^(YDeob)YI:0</ZuU$!jos1/.n3%dC2jMKda@\jD*'/Rm4F[!lf,
%!s4DnWB)4dND/@M)0Pp$YD3r3J$?tE5@'NVq!t$+_9:A:o[R3=4$eZ:+?(9K7T8a)]5Tj^qV7!K)jGS#e3f`jO7O"FP+\lQ!,`,5
%0@nER^<s&?YQ!aJ?;dSc(Y%giK(T\=cUeY^bJ'LS8*K&@^H:`JGM]o^5D=(D\XR2ZLcF$O1`LM6[@cYQGV8WU:mB"RRXEU?.fPo6
%d,/qk%Xgo2-5%1o+Ho'%NV]npWu(Kn9Q+#0brP>1e\sc#h`(>rVgbW@f'RtW#0>86kI5'8gCkJ`SfgFlqbcbTr%rlRY'-iD3W-a-
%qb^"adF8g28@6E*8cqn_(WdqNOiG/D'S]Hh_b!L6ci`oi)?EXWY_&h<UD=IlB2u<.^;bl::Cf`/=2JOE0tJ&1?MWld3rG?q[#s,\
%#S=d-:6G?_?sY9=nW`'%fAr?_#6"1Dq8ZR=gMRJ7`84@0Wes<?AIu@O"a-+t"cU;^B83p@kHmURfH1Pdk,u;O2X^pTVhPDY5_g48
%DiIO'NC6DcIEak2+-Nf+[?&Q\Cca8F6'JQ.h#IEQ\;F:^q]RuJqe4M#L8JBsJ3-@Kn5.O4dga]u='m4Sa4TQ/ec[$,#%`*Q['OrJ
%Dd[gSFQ\bZL8:IEHZgu^q<.%Ir\8WHWqDL/eF[.4J;/!E:'1stEmu"Zn0H)H8n5Sors'sJ<L@olrh%2[OXY2_`!fnoT\64XdR#\k
%ncH5&$gmQ5Ud4M_Fc3Xb:TYj3hSIa%_`ujo04=^^e,==ms-d-s.!E0m?H5jA?d6,0H@=KClF!,$HY)UZ5)9F8$"$\YCZ=_'nEU(&
%qh^pCGtqB%NoqITPds6`]t>IVD]>WH/8+-(!e6Ys,P;)OaFea4gHYYgs88Mho$;g]+.rIj73Q0Oi+"hgCM^$BfJ(edU]m-2"95H[
%X?FpRU%bl3l+l`(:DhjeAh;gAH<*Q9(O0:VMrUr/&Mi;jJ6Jj=$;H=SW^:#)i=AZ]([O.s9Rc9V"!';3GEdC`?K1;PX>g&ne_q:j
%CB"h85b3fL&7[tYNV],k,8Y#;;Q1m^J$.W3FSU=p%,#M'ktb0c.Qq<"2#Bg(lMfB$pL&)4%7Q\Cn"VVY<Vf_"O4Siu$MRf-MU^1&
%P?(!ms53j3s5uWEe)1/*s73Anh7j1O^@&@iQ%73tbV%\:3bM+s]0,4tUZjQOc#=.hT8b%K7WHhWifWEdNgkhR?Jkjkrh0ZaRH(cP
%dOGRB<983Ym#?a+Q%Z\O`ckDL]T9)]LkBkt^aiOk>C^le6YspVS%fJ^(**h"Do(?Q^HFbA5nJ*>qi//5mpGGl.^4Z]l*kEK#W/RD
%qu%urpFk">N-Z)YeN].4gi'K@dHJ0GfC1L_Q6sMYjj)fG[q^DsJP_?bQrs'kC3sJ*L)0rIJfTkmF>O*kc[YV\WjV>ee>aT]+cmo'
%-ZnPS>[m5+,4X`X7Io5Jkba3F]CjK^_q-/:d9.[4oRKco!T@t!>Lcohl&.=pXR?,OMa'C(=T?W1>Ca#/+%Qn5XH*S'map=sqtm3<
%\j!'E<W`[A@Pn'=oj<;gd"),P`q+,,PQu,Vr]@paIg)?icu.D6mBH+s7Z/RV=cFm%NmmuKX"jPA[I1E_hZ`aL-PE[h<qW!=7h^%u
%I8,b;rO\HSR[R2ba_WHk3Q'bQdHoc4]Q1QMQ;48>BD%%`=oIl71+U7,i&I?4GDHrmUZU>#[,8aT><\osXn6h4;da3_fcBbObsHW-
%GFJL@KK,-;Ii%/?C(@9RUi"@a0Y+.fZd>?T).,?NP`FH1;o0[6?F@TX3l=P\<?6J06o!nJ/^Bl$]>[T)_hbA@CW5MD'R`sL[ekGg
%q>Il%B\52T;,+T$m!iIXR/?4mS$P0pcFjlE]j'1@T\HUZRr^I>j[:5sQHmbJWkE"oDUA4u[B"oN9/E)F\[c.`g)9O_,cKk=heJhD
%`\:=p;TfE$X8QJ/>O=B3cn)g-3=U*pC.^I!/a'UJpO:RV,1",S__b/e;MgWZ;,nU3B3B3_SqZtWe8un(0T%W8@^4Y_XZEuQn5N+T
%H,b6:=3]WXGakR6CUIBa5PS.9#)iFt0Ag\Ko6<LU:/uFY)"/"+FO6lH>BSF2I5[L0/if9?A<`I]jDooAcFU.'&6!<,@ao;h9jF3J
%VplXWg=8EJX*mGsTtgRcs6ah*l/0ab<X5kmgLXo?QG6hNS4gi.XHJrLK`3WnmAoXYl'dRmX?1+3"S$9P(euug`j.Tnoj:e.0JNbR
%$r//[,0?e,B"Lq]U/aDBeuNYTiP8FKU%CN:L@(=$A]=CF@*M!h%'"&'VSj1"$%D%2ohi?GnEZt)+/!&:\$SU+DZ$60,_TRl+gQR-
%!*sS?5]=WD@)8FHCs--%AAFc1[KTHReN-4hABM<a?EH0X&.e#.*7PEjl)`oADHb:L,A88P*XXtH=Z*+sdRf*cfd&m7-'c\V84%4Y
%E`b1QbJ8,J],F#)VT0l'.Ul,LS>Ur><W7EfKqD"H!0aBu16p*0*W"CBh/6T<(,sa[Ka!G*/F*ONE'Z;"BPC1`)DKB1*,d<bN@i2V
%&q[`[oJ9UNnX@J_0sA'q6.<Ue8'ESDg[-1_<a!OtA#iF(&2]jI:b*)7fBlO*gJN$ZrY8Mh6nKZ9Chcs3_q#gUNN*)Ui*&`M4Ga%m
%l72_Ii4,b0>([>RPThPfP6jpFl+(U332%FO_up)AF\Mjl$/8b=*NjG3)RP;##/[f(L.olGA)M31FaKuG9u(=b@g-[SRG(;H(lY,!
%s6\K+4HiFCdJ8MV@/cMnkDI6-VpYG@Z<?X>)Ilgr>Q'+S7i8X=<n=7A0r<PHK[JihnA/e]M@Q&5b*qp]%a^^t2JbY/HFMdF2Jgm;
%\bJa?BRXmR]2uC#AGkfe+V5Rn)$49hB"mU)4fNQ,]AuL;_mQ^hCoM"69:[T*?&me[WTKtbciXSC`Y$;Us+E^j^sWN)rU_@KBl"]*
%E=QT($>(LOd6-nqDTdn!!cG7K!?X`Kn8[D(n:AcSdV+8+;m_,8<:#L_04_T?6cou+2,6K@k6e'l&613,.`[g5%6LjFrdb<N]q@mL
%oEd]ZfGf;%EXi'pKmZ4K[V,ul&T.A>QcJO<[5p;H#>?,T0_D);g0L4qio327[2<ecg28\sQZ^U*`_rT.hX"<*n+&l:>4s@&ph]V<
%#V_k`H^;kJRqVYN-;:E-;%so5D9fXY<pN_f^a:^0CVqjX!TF@?)T5%h$$MaR`19A!CCS%Y&<LH09d1QL/DkgSqMZThYhA6S]u>es
%Q)UsIjWWGp?n$"!Irk4V5nfZR"o-3=fG(FN!_.]c'>q_(qHNe9%,8#knOd0t0ilb5SY.%++?0H$<9c?Td-Gkqs1!@as36auH!\I-
%fmCCr/a'PZW"9u"kU*Q?AlMabj8tB53pTbnZsTUi2V@jmKH5^;5+b9!?081]AJ<>k-&)65(p[>jA[nPK$$SadrLa)L?iTZrrnB[:
%dpN.$J,e.#m6Anpm=5'FJ,@:dq60hss5C[Ucs4U:5ce8BARIQc1',h"Z*%d&\MP\#Z_.FRL0_2.*3[a0[,*lfc<a_X>baA(Y&30]
%h7&]hBjo?O#DB;VB=d5ZZ-L&=Nre'_'L>1kOpaWrh7HAeMAl%!M46O>2]9lKGeXhX"uF[WX(E,a>Oi4P(a%T55;6hk.+Y.G8QWjG
%*P]YMOc^Dg&PB(_=DRt4-_iQFK"lTTFAVG6l[QDu0iFt,Yuk^\Tcl1q`8(fV=e[3X=*m-H5mt7u!)'q9#McGabSl?J+EZB\0&uMU
%]*lR:V\5_U@;EsK/#K-_KfYA*TPmG]b!i%O'rq#?4g-W6lEu`-j&M+M;tmt=L%Gbb.(*f>i3oFn`C,eZ5"Z@)H$L,?`KCak8f3DG
%dX3<($B$.6UTCrM0\0oaE(!U&f73+0>hL9b)iSM9PpYiuCOi;Z>LQ;r7n%/E:k7@;I1Y^$hlFU8Q:!+*B_lZVJ3+6,5pVdX*j)hM
%BWoQaW:n:dL^cPJ%7mLBD[sm'E.2uWpc(BPgQRM+m%hJd]pLgR,,*Z^Mi.0ZFoli<fG/hD1F_Yt;NWE(0%d9X01Z]l4Gk<pkh[h7
%N2pPhh4\Ag=*N[a\AZ1"q/M82LtaWOaXU1g&%r*KM$"ht";cD(Fm<l.64-SVLOh3%U'"JsFui*oK"\.DMg63]oe01a$6<)me]qE^
%CpkjOMS:9%]&@)oI3B>%<#"_A:K.U92f[$b[LgV]Wdk!+jq/.sG)%/6;s]3H[-(S;d;0V)3@UO%FOp<%ffj3FhjS\5KLaS/OR3kQ
%QXo9<AXfl%[=iL$b'\=2>\Q'3**\c[hjVUHe;S!GEli.M3#RAh4t4/Ri'?kY^dZ4K_I4YPL%kqD(\u86rdHb*C;LnLQ6Y.`f1]`<
%VA<7mOlNjjcGqU>hmDJ,q0Ko&EGg0A0/aG)=2RAh/[tIW=h*+aQJRk<D<%`6ft'_("@E^#Mo"WIm2bI=(obR$Jl,5q"s^aL5pa6f
%(W(TsK#R5)EhEl%d7?m%adpo4m6i+eaJSFT?h^%*YBi/!,G?sh>G^o=/GAtq>IAjcGB0p7QlBl)?Ea(2:cJ7$cMDr4gqKtVm`SBd
%4h'p#)R&34omA'VhCZC3A?SY"[ED(:Z+U&FK30.D&?$PgEF^Sh5@Ss55'^)p5MdoeHi<A)ho]lfe^]&E6b>o@qLL!Y7L!P9hbOHO
%2p_B;[Hq'45^F:V^V4:<=ZI=IBr$@>en7&]*Yqp5\Ze'(AFor;(!oJmo6;J6\]Wo-Jc[-0#Jm='P.%YZ?fIpO[oe$>h:$N_.aR>A
%?5p`MY/DZ-2!FZm"ulM$G4nah-SNU$njZJ8W:JAR@eVu!68_aON)MpNr_mfZ2jQGGN[!5)_.C=t\CY9cij.UolZ<*jjl7!J$F;I2
%N%/bZVS6,YMJ]QCl2*97?7QEN>5[6[=4BsZ^DVD9/DT$OfhH[P4l9Gr?8"J^f_$09W$aMEH;-%Dgt\NtE3FcnnoU(>pPN9JTA'!"
%YQ)g!FqPa,G.fC%>J4Lt/*[=_]W<FJb4\(qhDLP2^&FT$>kRQ$Xa!iu_'Zd[F^=fHa1YqU4'PjMQ8[.*M1=Gi&SBV:k,!Li5F$+?
%KYuA`9g0kYZ0O9H=6PB\goDFAkurF.T-tWd:;,6UcWTql^=SS>lG@akFA19*1>Tc5YFmuM>1q:alFhVLam`SHUO@P7oa9O%V6-V6
%a*,-GqVc_9U"AqR;C\0iETm)`7FA_K=.%[n9Qtr(EGPBKq/L9+leZp\`c80)CV^infCIt"NdE'7%6E@9%hD]aUBB_&e^A6pjbo7;
%VC2+a["%X7HbEVk8TW.P@^19se&7:"FRKU[dFWZ`^=W>Z;>04VT!dtY[,%fS]e\/q4$JUOpS&/25"(XYU[O=nYD7tt,@015g@fj#
%hqA>+FIMXZEVetNWRm;RUHI`+HTbP:\8&[XDX^suXRV<hT!noa^#"F200Q4>O-Lf&3sCCGb7W7KO54WeBKP&Ikgd"LY<V3RNX?90
%5,OUCl>)(IC(esIq31-qkPEUue@*ulkM$fn?G"IQd(<5[Qj^QmO%T,peZ[O!gYqtB?*F5+ak?g`[?_(k`"U7pQ4p(GlMPT3M`'A]
%AoPFJ8e`$(2/;CKF=["^>e]#_]l*LSag9j;MpborF/r3BW10WmL\WmaYu\A5pW^A167JNhlp7gj<k`ga`["?"-ptLLrYZromY&`U
%Fdb?dIB57LPX?`4f8GDr^=\B\APXA?f=86?o[<Zg?)<.!4U=ZnK%?n9:-WF4lfU!:\j*f2j\O=jcLoSI)8\q[s8;(iH)FVJc\g^d
%D>4jqeiPadE``^.Q@k%6=3nU,15q$%44SG!gIE*#glgN7esSoU7sX^59F=lIp&11s[%#G3>:[J'hbfCdG*5U=o?b`Zj"Tk"TVrh8
%Iq5,,QBfqqre8hU(Zhst3FkC](3kWbQT#:<L[#C)j_FNLjRb@,>R/#RdT]#o"I8s7R%X\b>cXUS>R.aZ>G*tIgB6R"I;R$hm1FI3
%@kj<o.WD-[8=,60DpO[FL!5b0gRlX;mJX$c1eWD?N:QW4/a?120rI-@D^:k0mOBmSQ^m\K^pKHB)I#?u3E32:eD.*Jm-qHlTGEic
%Ff2^80UouOq#cBRor`W3WO3`&2T"b8cbj>k\#JQ9e]-b@h@XGTi%2AN5/=a1#['3^MYV*Q(p!"@PIE:`e;!AKB(FlXoMtrqpbB(R
%]q=%\:PPJcRi>]N_V=)(l30$P&U3!tKc4$T6?dB838+"+Di#EO0UqWCZQNC_U-6)_0($Z6.n*tUBC;u)MG3!R(j`(C`BpY4//I6#
%&QJ/'8#s<U[:)$$dNN^LkQ9KHM%s"^i/?5Tf=gk[B;4qVChEq)RC=DW$m@h3[V6Se$h;eK/W<5?^5S#EoeR9Ima#Z!>A%_F<Ccc0
%l*8%;`ElIbX%SquY'mLq]3FH)kOh;Lecfa-<,'&rS3-A#PigHGERh&?=1_cF:P4]%eoJWL)p?D4]\!-j4Ye^;9h5gjhL6G]Y[7(X
%-4%qQE3EL_87!q>l1RWNC<WqaN,oKB,)[,f'ou7r(np299hT9e'`n,'F6jX2(66([?-s4*!V:DsG>77,ZR=qFcFngm,5"Q-FUD[+
%;dPu?4h!!0_KqI?O2"P6?ahOUbp]RTL9DqfO%92lL!PQDJ;OujTcKuSrZk5!+8Q82o.(>?8cmP$!`f^9T4,Os[(iY2YLP'#!/*gk
%+%2FqodBE#Edj!iTT'>q=h&mggkF.,RX_jungN`%+LSS05@@'48Ce^HiRA]A$*6c?(L\=*lqdnrGC>3p/hbV5lE-_9927Y"%4_BS
%;Thjg4^lXQTXW*;oHS\;,lf,)!FsE&%L<T'-5\Mb_ed\m$h99iBaHs7B'q)ENl/_D15\&M.9_ap%gl2LP+QR'M&>_,++VBRFGAFi
%\"2J\&:e@K8b3A\a+_PP,5qDkE=Ia7%4h3/>%PT!-Bm6o]>dI([t^&iOA'[>1+'Z(0k,bd&9//)TtM8fn(mZl6'&VIMdOVr3e-<]
%5n9P(CekCd05U;U5oU.9^#XtB"YVYJMKLLUkUtRF/M;4G::;?XR)kj!6XtgE>U[7DERU%4n"N0`7+-$.X2c:rI+VG7"2=?dND,of
%+1EUn@N!imDFZiPEh"*s:GtFmafR/):QBfZcXP)P^$oW0)@9uG#h"'4?f(BX-M+O`q<,'3*.7aiRh?;9Q6gTUYF\m),j`p,mr2E-
%j@u"r<iZq,"uZlD0='Lo<-=;Y8oo4tV\iqe1pMLG>H82QeGuQt6V*\M1D?G8ZOgM=qt;a[5$2:OfFjhe*ij]*!dklf+=6M:C9T)?
%%7X=,$<MRf:SYe#f;c[m*Bs"B>7h"_d**#SVD-AkKb,8j34=Y'fT`jSm(m,!Vrq;Hj/NtUEG_$gq/'9#cYVKEkh0r!XK#JB&Xq>=
%^e%Gkg5X^c9(E_R_^q*^R_>Nf]uZ0r[CWkGE>2>^D(L!ur??aRJmRs#WeKfZAFam&@;1Gmgk#F.N8aONdt4(]j=BF]QlqK>0"Pd:
%$XOU"\;[T%SrYa>Zbc-/RambjfjKK]r7SaA9bFWg7;HK9j4"bs)]u2qXaK$O%VQmjh`0)4>7]Q9%VQK!)]NJ?'?5DX_sMBa]%%.s
%c]7oo2Tr&8m\DkX=8Z9\p+j5]]/paOSgJ40(UiC-\G_qi'mWhf&*@gNF#rZHC%%>*il9s);ugsu(6Y9O!MGdH?[m^_Ca9KFd8IY+
%FsFhFj#Irb,Tcm!@3d2%'*b4+#SqD*-3euj+oom5IU)o]QW_5nJW'<0)NVBI]K=9liu!c7E&AIJpOf7"r7jg?TN_&-St<'c3,(9H
%K20cH-a=m14sm@h:hJa7=:SgZ0"A4hap!/@>l3!S!a2l*\aQ.*\Bf+2=lD.nLV\rZGVAH8@4krV];E=V.LjqY_G>TK))<gpQLVjW
%A\+;ta<K>br0B$'1^_9VQOU2];S!\IAIG]HLg>TKVf[dt0e9MY*LM]>_2S!X73r`$kN@7R;d>k'?O)Ug+EulbL53Bi^S;F&JsXBj
%acU?O"DE8Lb1)VJm+bhd99Z,dj5C@X8!<aM`cm)4Ii:iS"4YRiGNpVK;V'p>p$F$Y;%H-.A(/=ej</@@2Q<t:,u21F"74e4L!U5$
%/d\kQ]sE/GPgo'<cLk)^&CUQ(E)O#hLH^*%Qu6/+CZelDTC@FC\O`9QLU(U#7gg+bR8;*Z(FQ#JSa3EIpuj=<l/&*b&19a;p%+hZ
%&1429!oHp[8rgjtf`$jJfafYIDus'j!+SP`K6>nb``p[k!1>.*1I?01jJ(e>TWT)3KM>bEXb`R&I!EaL6qc6j!,jO2g>0!&2'L;P
%0-:hRQ[9+/Z>n:Gd>\Yi/S`Oj$HM8T5Wn>=DL>QsE(Jh7S@"ti+2`YI4<'/O4YPe5$:e_1TJabjTURZH+`8ki^/u,<NS1!H%U1g<
%gT(Xi-hpH18<6h.'0e1T]pJ`N4,&^ACb0AI4'AGg&Tq#2mY4E)<*8-tkh3PRH:PHYIB"*mf+W0`8ZX(hF(X2:2.^_cC9:4E#DH@Q
%_;.3g-u`iIB#+XYCYoY0Ec6a=<-VoAB1'u2`4Zo5P/[t,i?[9tM+b:la]aUPF<auuQgFAIo:e\/p6:6ta11'h0^12HNf9,0(e(KG
%bSYZgLU$`6kUN;Cqi28%4uKe')r/\sp4R@&*'(/A0AqWMhREeifPqn6EX7>Hf<[9Ea&986b41!2G@omgOJMY5[R)^nV4l#*.\p,7
%f(U#I[pqen0hiM6,Zg-B4lY&4o6[a>R*$Sqa6NS/7$`naq'-t>O0*AcNPaEl;euEc"I"M6SPeTT5,-VU#&&7.DP=JC["#]1"aT^:
%cMR.XGd.55r:+UA)JWq`Bk.upW1g2CPAi%XB?qaTcFY6"P)o%JdCN$td\Ak<k#XaX$V.Yi"eL=E76[l0`\]H@KHiD-[iU:<6F1oM
%LZA<a6ae<lgPRZcPZ+I.(*9b-`_qDFM<d^qW3r#r@M._qV=0>fI5(3a:tc@l@i:qQ2/iEVT6qU/hC-$Zom)T5r.i=g$EV]3/0@K_
%,c7rcmG43VVJn6/R!r^=1[`O_9V%c5qjrD'f,4^FgQ1:f7-<PKH7QutN$lBf=O:$iD/I:Mj+l3%EHra@MH76V?QO\u_&f<=Hq*sq
%ef6Y?D867YCd#7:d%k=P,p&8V2jp<B\0'MiX='1O#Fq]e^Gm;l_p4B)rRboC<*r6*NDWj)/abe-i&mLrZguW1Ho+mH+d\7H[AhXN
%giN8mplpmYV"<:4b&d@[G,^C`V";.[ncdYp,L`O])+\A/b9nG)FQn2@\U4E&F`GQG55/;GEMmcUFM<QH/mgk7?(<C8cTRVUDFI6k
%cKCeB7lM]k:ZlfFjl<B;7-T*]!,1Oh,`HG$JnP:@cT)O&gMon\XSEm&H`T3XJF#+:93=MPG">=I.f3&J3/G76j^\@`Xn[`[pTmfn
%:bk,.I"TSI_d9VSIqpI%aXD5R#IFg5o@PL6C!@#O9f$n5=RhNlkBhq!8(RloB4H7m9jADl<dYG$bL,EH2\Y9@NQ$'o.+RMOe.+u*
%r)6gp4<UHtq?\mM)0b+Yn;/*IEjFHLmO^9+`s#i/4J$82ro-S,-1."AkL7oH2Pj<qV]"T]G39TI6KuJt2H"MUfN*k9U&?<qq$HQE
%Y%_1E<\Q1^\!,JeUSqlO:M5RR][uHHbPYIHf`C-7+j8=!Fr?PY3nc9CSj1g(GuPb'D<?g;:kGHSNs\I>gC'<[TjoqQ*(?D1V<U8e
%/N`UQ0uh<aHli)SGk%%tL_MW=r#:IU&q!s03H@j7,b/-ps2NZp>U&W405M7j?#p@d,4GKn'FNWY0q/K_=B;W'I8e@Xin^%nL6)5I
%b_\'Q20fRYMJ7AY@k^Ync?gXs!6lb3?qd4>VJ4<A0.)HcRa*$&ksc`Y4205"MX2h$8Qt+an!:QJMf1TCX]<%$5tpIA-a/!&Qo@Vo
%a-^'Qp>Bn&afd]HE&u*M\?kP2%EE!593?ehE]\ik.qR&69(ik8(!FUSMkT:#p8@cF!hKtnD<*^'ea4%D>i_H.4p+_UHCebZ2Se*G
%#XYB%S>lBBGS^dgJ8M0M=i5@*2(JJucjtq&*S[DUNFulcV.J<_-V^\?rS3`Q?ddECTm[%nhfR'#A;b.dpW)k/\R_pA8!(g@-GorS
%*'H,*/3Wq?CFnq6AP@g`$4go!=Cp[/$-:5;^-OWBpVpZ3RCtO`6eQegBi3o;Deq/qlX4Jr9k&**Zm[YuM%YJ4I[*^t%J+VMELa4b
%=Tg+Gq'ADWkJOiVDZ]p`J\q5%;g<5J?NBZUVN+/1E:i"CDEE?YK$N3lQg>ia\5!$cNs$VuJJW;qSu.0ohP""cX=m$=:f=(kP@[:f
%T6n*,,g1ab3Gbgd`6NMF7l%-+A'YXi]GWY)f4K&3pW4:=(2eqS3;'Oh,Z#@Vr#AHq)_]1VM;q2XLKBAjU_/fb=?CWtds3:H8pPk4
%\#CT=46?90Z1<]ZY/hQfka@AAejr>]>E`Q/juHU\Zd$]%bjPBc\'2K>0Q!9&4B!pb:X5GPB&5qlYiBBYfpfLj=_Hk#]M]PYPF3e9
%j?&-#0dUr$bWHMZlR,J=Wm!RujSb?>`\q.8T'+hO-8WtZVpO>8d,%K@(5`&6ml]U]IJ@0/h'gdA02CLOoFa#-mfuQ&'#0mMoWdX,
%W!;qrQe/Q'=r"Mej,!h$)`!o8%^"+F<S)u&4p'[9RK\g8mdc;O@P&U>bZug/OnZRVXHAg_]dhK@q6=T@6W7*=5C0u3i36E4Do@Il
%'sBE"r.dVBHu%d61riGV'eb3fQ`=BQd1TBWlF/].TuS+m]R]NG>hkDoHLs1."?//#4l/`JB^`:tWVGN)C46YI'Z8ka671%f/HJN6
%bbs.=p8"7CA?5;<Nor4qL#EO]5P4#.Z9Mri,l;(@8[=E71J![/kLX=0,`<S09p.%a1jtN<C;gfI3,(`4(1ac`i]=GF-CmOQ/k<ah
%`%Q,T7]+4m^6KaHq@gHV/>9br?]pZ:+P(.qP\1KhnM9S]:<Kmhce0]-c,02HOd'Le4WTpBoLX<TpOb='A6)9Ik&06IOsdZqC'0;_
%8RVqcSUM+&=6>kXVkD%[Ggs!&MVk>Dh;kj$,6R=[EBII]_=7q.%@:\'g"a\>-p.5\Kj\"Q:'0[%4sG7-c9R-;+Pn/`&VJqCf@$%^
%o?>/rMfHU>\Mdg1B9:bfBY)%Z@PNMH#t@..?3ZN1FT`Ma^B@UK2q26BFR]Gc?GD/Of<9e,=8=\#4+hRmi7d-_8r;GSAuK\&l@+V@
%AH"$L,o%P(MMGHbm`sgL#\d3=ggF]u.parG^-XJP>J0`Q9_M,6+5PB5T%=s/`A`q6obsK)MOW&#jKuO3\$WbTb.1T`M-M<%3@W/u
%!H'^gjDqBXq<is`X!QF0?dNX`2^.'W\GKdDkEGsjkB;R9]4-f/PLJrk.aH.b9:taDRT$CipLM$%A_h781pQTL@)9,"i8[0#g'PVn
%f4;XAI=GC'>+jV-gcteXOoe,_+6?<XKC%hhdnc2!VcuG/jnba=:[oPCMU3+jPn>aN*Xt\I))n&.-,.u.\NO0rP'36E-_u`a>U0X?
%ZfRdLT?>-hid@ZUm^FIm-I-o-]V7lQkaLW+H?Nf8XE1i%le*lIphm^MQ20s61Mn/N%jg]!<_TcN/pFor4C\W:^aeRk3(m1,U<??4
%VtWV1c8.:;n#`M(9q2sal])^pJ@G23:II.agJROh(T9_dWLVL/]:!5>*ufm#eMk%b`\FaEc:VJ^],;sh3BN%0Rb273\U\X\k)9rM
%m%R+28BBI1pA$e@BBmE!5ORqW,kd'h0s=\eZGTAk')V%$qA^\&Vb-6]gZJmI6\&d8fOni&;s?<c`'1f75*I+V9k'`#<hC[JAbs>/
%]<&_slPWtA-2'@o"_O=XB.'5E<lE2pqs;=5+(mB0@\6q,T:%ehNS-'5p,OU!ZVBemCWa4k4EY,*\LC/ObcDHSAcOYPM1,AS2H=4Y
%\Z*N35]]WcA%4(%o`[H6]uEh6ZdVLN]U<VGT@a/(4a):*.22RuA"[G'f]Qr-c8MrRDG#IEbri8WDO!aPcV,#L4DdkaLl@VOB*Sq5
%<M+,;TA>aM9eV:?4t50(+raD=Bs6h)9DVJ`jJd?*'@gpDW1Wrnf6I/:^2i-NN[i*1\+oc#3MsC,cgD-)&!b$SW''MK?=dBW'3$'F
%WVULW+R%0k*MD#T]fqe/EdOE[JA9j(HX:ph$=b8T8EXDA'D>O<U0Dm12td"N<I,'cj(L1o(3?*fZcR;3RnVDK-:&GeF.;.cs/&P_
%'*H:PbHZ$"r6GXGo]^(]nFAfsb@,o#hj?Ekf$"(?M2.\\nip?&\)mV(8Q)BYQiBeJKH0=K59k?up&;^_o;.f^M6#oZp]!r&6%[%n
%Je45%Bk#6D/9<q"LXRM-RJ5:Zr2.ad3jah6OBb0PEr+!pq..n/YjbS(jW7$V`\%9GT%E[=,=<FO'6$L'_`.:7Y\nqVC&jf`5D8`u
%dM0!UduY9",Tl%Jm_[:Unpsm",JVH083@f*dc7F=0g`"H7513-.ss7koU(A@mO-0":Enrn=)a='O=KRV!^7RoQ@WR6d^u2-8C>i`
%J/aq*e)#OIejC);=Jt%mhk//T-/80,dsF$rGJX`&c.Dp8L>M**&O:-4^)3=^bj;#pf&j9uG3Ym*Z0@]DERU2sIcdu)al*Cl.3<'[
%`0fkY?LE&$]?;4uE=0\W>i;LF6b*a&8]6RHY@H4<O$Z34mh:mcAoN\0BkXdd$F>-_%CnkON>E@gW5Q8MlnaR:JKF9+eeAJ`9Qo8g
%9TMC+r<ml2HeusnV('3cn7G.N[eKc\Xf>0?n"3T[Q`g=W3;(=6n)*1QmTB5_"["FLSB8Ho(8$TTbPLR/F$*8l@Q$EVIE0(r0/1]A
%m<aoO'BYXLGoG--4S%V4BD\_#Jn\p7CD17UWq1]-QOe>sNf@H'oTAn,-P:D(ftK]+SR9)U\o:$#AGaMUFkk@9ftK\`cF+ZJqq_sn
%j)U&#G7_CK;H]c<+CFHg?(qYD89WW+l1(V=6B>V%;Gj]BlSk0Q:En?3<_`;]M/+nJkROuni?NcBkQ$@@dkR2(Aa@eMH$U`6)*me]
%9B@BEe'?6_Yrs+\e9WN$INk&`qZ./L`Cq@P@jF1=B%af8cXpY&Bnb<].,]K(i4+'A`L-5trKq_fQZlXQN5+E5]Jc^r=e2QmK3K.)
%Q$6GkAc1pbq78i\p;R&#WK+Sfpn#3f?&"3UjEet)n%;k"`nRKQNbsP6*r9Qsmq]g0RP8uJ]7W5`/,7a+7d@5\822[T4Mt:\.(<k@
%hm,("qTY6Lf,pqarI?>P?+QJB?<bb/BBF'V00<e.ogc2?3?O?!X;G$fC%(3p]quV@Xb2pGPBZb==bo:BahElM&`6>9*ID'm%pnNr
%]f)Z+3?$1Q>YS;0'RDY"a:/nKRSK8rfuj$_ig2B$.5NW)LUqK;s)6*J)SVa$P_GK2=M4FWSp@Ln)q/n7dN@ZF6.3<q^$+dAA$;i#
%Q"DH9iKOrlF6iL4`Ne%oi-IK+Hc>QqS;=]P[!$"ag1HB<O2')]#T)qK?[g-\O1mY%B&c]E^$tu*^-2-?QhmB-7g199kWJ!qb$cIQ
%f?fjQR-LH\,K&T*cdBJdOcZqARiS>\daZl$"H7-Pc;o%,P[;a.0":E)6uDHn')u-'aa_)RgFEZa?VH(f:No#jaKH4]_G2K#`18`(
%l_3Bg",o7udN)<DJQr-&j&R00Yjp0%b`SP!S+O3FYf^kmQtOn[bg8-WhK+Fin:5&]0uC_2a(-,A-gaD!btB$,#0`?M2OqZul#<_D
%\7WH$*:>8C;:"?l=;kb_F*>UugtkJTj86]`J6%-3E=]>E]*Vf8br3u*g;49rC#rL-_4JhlRqTBcY&QY"WtU_EDS8p\4cUY-O.i5p
%Zg9npc-*+9gVn]&kta*jU8ZYfTpk[l2sUd;9i[gZ-!a0fqcO=L=o-\EA(<0$B2"']JsYN6s$TD)]D86c]?b:h^/mhu8_RM@l9EV?
%=eG;.P(bnLd45dcpMGPX=_<!1Cl`&`8f`m3N-c$bkBmtr5?6MrX:N>s!?_&^S!"CY]97=Ee/5`mT""^G2&,8oGo?MIWBrd&Jm/B)
%R[4oP)o)5I$EZ=kF8XU:,/-:7H"I_L"glsQO$]9jmsn.>1mcEG;\l]^ZZrR97)'M@IK#5pPXN:^M"]oo4!i9g&99t/31C4P')gr;
%b0kA/F@'@1Lhn<nTae2i7)/PRmKU:a<UuK;kSF-T,:1`U5%;<7VO&MqI-)Y7Cp0;*1fib%b8-[r9&f*CrOg.[XAItl^[SNq0f%i,
%?<0T+O8WF5=eXobo>s5:^9#\LVp4k>6>8gX='\j?j0nh"QPE+1/&1AT_SA#&HhtLYcmrE&L=I8)lIBE)?DgtD%0P0[XX:[Ld#+j_
%D24<FgIW2&\gM#BTK--d^+VTjG?#:d4bF+Qh/>CI*<YDGiM"RrXerf$cq"/Dc)WT[;l7+pE85ie)5Uc/D``&2kV4\PFMI4if'o'f
%_S_3Db/V'_d*Xk)D``%IJ/Rgm6h_N9!^?)IoXs\?Q`kK,$P0^PD`\@u=&M_>iSbWiYgZj%.&*Bb$#GI,S+OQbG;:NEZl*+nkUu\$
%os?G,4ELjYU:2/#p<?PQ*kKC'RA7C-6F0oL4<,l:AF^*=H/t1FD23ZK1@f984EPM\hO-.8KniF*LhGI:eW@g/&`Os!dpI@`Sf00!
%5YZ^dTt;m(7X%XNiM$-cLB6RCh!m!Zo\P\"ab>N<+l7gGCUslaIAOtYJ)R)`O_2d+Cp_L0/j,Y[$]KSoTaeR>[iKL3E70JgSMq2N
%EDPQ3.2TW3&p?Ej$P2W&0"<?h0l7[B*kKD=R\Cn$\a[uEj:U7.5`_+6G\@DE2ViO)3Jb^OJRTE:NlBHo^[TU:W]pB8LYJu@*<sNu
%Vf9lOJ*_g/-b]#rrO,'0Yr:HmLGnQU60kH)9Rl#pcU35[^$sD!lioUi2A[FG.mI.;c/QT-GNHk'qI,Np&+-Y\\KcHAn"=d]TmJ;-
%]2<'DGj*ukTYO5R4EO@.p(u+fF5c)&WVVb_C@V`CmDFD*D23-j'45u4dA(g<TnTC=HJtQE&648:;s9cX2pG3H<hR\gnOgI]E$AYe
%)//9&fq(A[4ES@*0OU]Ac7\Y0k-dX@qdGp$%u"n;DEG6#djDctd"s2>I0jWF(EU.8kqYD=l3e+s5dT6hB^^VEi5.kU,[G>]bp5k>
%^p7%>^$sDI[R3\mkG/n8]#tH&V(.C]k0U-?22<fiJr0jpN.gKuL.D%+H9Em-K[DRlId\?H&'kZ"%HgTWYc9(]][-_N'fc@Mq8X["
%&I:@/_T9Wpc?G0$dD]:a2.)fkIXh6h[2U3**otl<O%X>$HbP/k5ZUr4EckFM#F?JVb<bV9"]q9G+2QU\c[985q`>VIgpjkP>dZc-
%9"Fj59@*1T[<4o&4O5O([rnM5S`eRgU]$Amjll$t>rca\5Es@O6r(;HDquhnK9%tQ7N&Y"S*-o9nmh&6UteJD_obnpr`"/l^3rpd
%/eUP520$7&]H2jRqu(s]]'0_H],U^2g:?I/?F$9@8nJt5KSq"LR]`a")O8do8a^Hik3;k.\@T=pHa]<tBGZu[0)#jA5<bFrkB$0W
%cpG@Y[%GPoT@SJJQ8VfI;IXSZm3PP7$.+\o,QTR%?X564Mp2HPG1O'4-Zj3E^?]/,$*He7[DH3I\0-uAYIIoSnA;sBTS`/A:EkUR
%^6R<pkA\1cZ5.GJCGL8VfhAL6.XL'XT]g=e"(grnjD2!hS?>.5D3/qNrJaTMgrc3N-uo23#T8fg9)0h*K'tp'iht&"6rdhS10nJd
%)Z&He!lF"*iq9o-0S[cqF="O1%*lmG''\'6A)qm]?[V8`]e;bHk`JoUMj+O2j#[ISpO7cl2[c<M.Cq@a6^@Uu[J[\O=_q*u.L[(Z
%ilh#@mi:u6VS,qI;'fQI?3B&q#\Plq61l)/O#4+_4Wf<K/'RKJh`st8ii-H*s$YT"DAW7VO5QXdA1s#NR+bgj4,)n?e"@Sth\(j:
%S$2Z]pu,%pHes2.h)Gc8dDuj;Tgk<mX79Y!Hr4.K))%`^7=a1agG%L'`(KK&DoN/RGd4]es1r$3K^i<t]qbD'nLPjuhKt:5;)cM,
%2=Xr_0er;O:,TK0M1TYT<%I2X%=XIu?.I[#P0s&MKG:EYe2@$3At[9jNp,1,J[@Y&O](jo&K3]3E6+GNYFOUE[,(TWK8Nqj9)MGF
%`/cQ9'Bng`'Yi28l#d(^=#&-_&mif!g1]lsV/eC/IbrmWDAG[\L0,Y9?u5d4b,o1dTm#J/?)^]@3[\]E&_^7F$\Q^FogV0ZI@WLB
%B:^"bbb;H6rFM'8o\G.cs6:X7nqTGY]Q/,C_P>*uK>S3#H*gI\.gF<*\ne/>I?i/FWIC;1hqH[#rW[.:)Eg2mRAH1deJJ'VHVZpH
%.FQ5Zr@TpP+2\n1BeO>!ki7D(7MiH%fC5nnIJ90aSC`b?:BAr4PEGF\D$=NM'5$k4,?P(<Z'!\L)I=-3Z1lfH=oI`dFLWF*j<gY=
%mMmes/s0`:R44)1'bX07r?gk'.8FQ+=h@GgnKsP\*`DW7WS0,M-"siYYIlufe)JoA?>@dgh;g5l*`pLl[G;oq+ZS2oVtC^-,!P@i
%os/b2ot`lG4f^O!>Y3j31;bq"GINY$4"o-bnAaemiFREj\9Jk&CkTMDO+OFi$[q?+bOK/\0I[/IGNe6cS#^)5<jjV^Ta7ndohc[7
%8_=;H.%C-3XqJa/oL)g[8r29Cg)PK,@!Q=KoS#-1\5ld[L`d2<'dZdKDqD3CKq9#hTY'"afI;^A,>;s2PTI=.-`-MO:jC<c=,=DA
%Pk]DW"I;eVBnSh=Pl5O(j,&GN88(7V(ETq%4c04a3a<ml"`_e3l!UiuT^mEQ+K-YI?b]l[cZaK!J&5(qN<q>e(nKXBD?La=R(-+V
%1/q0<l"^QP22+Y[]q`*#WZCM(ed;:"f#\lor,^+'9,KuO7!Td)+UV/0Io[6Y+1VKUSG7[-8kn&2jB#EF_"\CS@"MY4G.6ll-#U]R
%Ag%c;8ipBNiJU`GLt)u7gFZkXJj`h'X*a."Q<N2%=\gT8YHHlek^F\[*'Se.^gR4fSB+<9PQE[/;KBRnO0c_Ejl#PTL2%K^+;OA3
%9HYM6A9i="LlC`RY4ekYDlE>e_ZR<0=ZaKH4Z9(DmZK9RUqnRWd(&mrlg2'Yf%7@]eB62h8^Oat9=X0[5`MpRXK.WB25GU^hPF(.
%M<4`eIUY<73P\m`*H?&f`K5;s'NbK.GJ%h]k[4InBr/$*T"Sha/Etb"kQ6*"I7jt:-Vh]ceZkE>$AR*<2!QDb;%>t>MYjE6[A6h.
%Z+-e]-YI*q)Ma12f&D^sWadV0!6sE$,5H>$;GJbJQ$iougK!Q$K0?tB9"aHLYNjG8KY`SXEq&mD!#26-[A0bnP+(EI-7./\C(%/'
%^.enk\@E]"eUA]*ir7p`,2VuUri/"3WV0ME3f1?6:@hY7j(hkE>JJto\g]2>/nf'sT2g:f&BfQn-,nq:<crg2l/k2B6LAZ^c^I[a
%O:c2,UH,PGFqH[IhjU!1"/[<&S6'j>HkcU*MerR+lf/X.2E\ub<M]6d6q\K1./P;im("-X<Hf!Ok)SH'eG`2es7145%H9cG%/BgT
%.MH9p"kF-NZS?GF1Qk1g)/6H9?Y+]g/t>?3m^dud'(Mne"jtTl&[_,oQYrr]Rgc"YlmGJT91N2qf-VVJK,n+`E&*^p>`5eU"=*Z7
%h-d%Le:Z/8`W>uGP683:p"2hiWp.K1GdS(lY%?4VKAfjX41Nj%ItY9<SA)BucI_&NA'dh=i0^r>%O7^G%Ui^DC/$BgPeg(8pZ?F1
%?[ir""j=+6dguC'>$8q=^2G(SY=cpUdbFTU!dg.9_5EQ]dTGe!qYdPn"WN,l8un"Z9:`rafe1^j;lSCHe],p3C&]?)OM;chk'%Df
%@tr#$c+N=DI?&e.Fo"XF?RFm"p=luUIp(U`Gl2e8`@bKo`ODsENDCBB!r"]BP@/q.R.6Z9Bnij&.fpP]O5MKPlJI=gO%k_l@S:'_
%K?\RX<c5Zr]9WAdDfA(qM0qNio%Q$&TZ#^595i"eL%Rj=<%D$WlRtF%Dh@gqc49-S(t3ZZcgg7(EpV^^)fL/2UU];k$CqdD"S6cM
%+q#a20ITFppE043RihTgB!2/jjr40=Hrhq\b15cLXF/oms1f>*]#fs@nm$Sb/5<b3c2\)CF+sG`ouh(fS9f1h@5@i3_>Q(5m%p]Y
%75qmP4iZi::0l<UGNqB"S3i2s@c&#b7qUH6a]"I4oXjjMnC5PTr!'CSe)3jeH4aJR![h7VAp]BG$*NA'g[NSr7ZVI<_/R.2%7YuR
%.knl1$-?MJGsDD&A3UOD!>MKHQ9TRThsjc)KT!GsaM&UaR+^-;H"oN5F9/R*O#(3tDE!J"^<$pZ<XL@CBY16Eg2>KWfH?\s)RAs-
%F/YS-\\&Fg%r3u0A050[Zi-@rX"olr[:pucR'VVlp9-p\T.oW6!QN7F2K@@BZaLZc2C+UgRMO@W'tNj:%!ImPDQ?-?aG@?u](;Lr
%Il][:jX]Tf0)F3O'OFQN:@QS73BP[_;Btk?r1e4VZl:+T*9JcN@))JY:qA3B[0dVI8'Ckop#h>3UX&R>qr[Sa'mWV@*K1MT+/mN/
%SnV\Z@0LJi#W>KBM59u@"II".9,+[gCjKOgk[JbLgh[]h6_X*ljfG<HIcobedf*<`TU4AI!H6V!'M+NnC`N^-?oQ;"FuHdqV2>*<
%\lUEu5$'e+V-%>@J/&KE!hMHm;YR.M@BUW*Mkrr%BmY22T4k&7hnCrekZ-%^gm'A5Co1/\I;jBGG!0?g-7`(s\(t.?pC$KDMm[O=
%-sJko7K;:sRYar$hK@aP':9Bl1YZ8SYZJ9bM[p%pH4p*llXK/0G6GUC]R_43rD2`0!+t7CAPca%1P+O."Mu_Oa<i&@>*W@8bf`j7
%`"W[&Oh6g)[&<9QlfTXABd]')a@Eko8nh9'pjn+DlcJSL<H"YfJ#]&Wm&2krdR%GC0(#a+'Dg6Sk3c<m)o&J)=jf4pG:K(_ik8jC
%Rq]IR*'1dCL]m,>,EO+D_W(0^UU7Fd=u\eF?VoUhME2ZMkRHs"-4CJiS[E:'4)P,>.Ik1&E<?FBl?dHsh1[P#s$*kg/@P?V.G%A\
%m`*'jKI)S^g_4I(G[k;iOZPb(K?n.QDDT>9\IS!Gn<4D$<c5sNZO&#G_UGBt1s:R.1!N=''@*'92#f'h+d%%XRYB$6,Vn_m_6Fg,
%DoF;_F-mGl:[W;^$,ecf'Ys$Y6@OYj$X.N:Z$Zja`$=aX*l<gP7"&CY:H1ct(u@AX%n:K/($mTDZ*TO*H`3E:46l34*jR[[ok7%X
%9UXD--R=eCa3Ko`bh:)hko"_&m&#eQT\S=XZS?K6B^Z)lbH^p<jggq,bJ;K4Vt-b]7snpQ4)+OIg6Hb<EBPk4?g>20fN7eG[*SQi
%rFtLaGV)sD3lmneT5SA&[Z$b#_kOdA;#JVXl=9hYqWG1<TnC+B3;[[>:i6H+DG4*'f3^_rX*VKcrTWITjfArA6OcKV6#c/(9-a,1
%hslQqNg3GG'mp:J@7Cik$fBO"S_G9DF+udEr8O4YT12/F=.7%d8*6f8PKpof1iXc5FW9\eiT?r2Fda.W@eMVkne\ICYp]Kc=!'(T
%F/JlHe]1=D](s=GDrfpWg==5::Y+Z0Y!-0<ZM"/H=!'(YirZu5p$pJjc/N*AqM)YNjm#dH?^$Z>!g)t7@@eK,-u-lPC(W15(W0TR
%/!V:kE0S%t=GV[f<r=<]ge)WO($C#(B1p@1dQ-'_l::V/8X(^3Z+4p)['BWJNLAPrTU$HQPcd^s'9Y2\"[R?:^=Nk=&]FIa]^k26
%Dr]X,`lQY!A[s!3O!QI$/U'I@iQ-377"_gb+ISl8JT&KS73BR0`sVZdM$RZ0lBARm,o!tX8.3a_F_NZ,.blr'E8r0B>J,2KMjE-c
%0@Z@/22(Fr,:Re3671ON`n,o1h08?tJ`ZN0T8:".QP?Vt+ab,8QfPtSjA3&VT@]GmaX*.4:5DCS%dcBc"baa*!b%`J18gc:N^7NX
%Er(Z0e5),Ka((\MLOq]TNbhu9i:,)he/00E\eg&&g_fh1i*a:jnhp5[!9%&`K(aYRJO&Rkn@])41a3MA_sMA(3/BhuDOtei,TbZS
%Q3./n/7K%:BZKa[aX80L!$K3>#lm1<'-QoTG7P<A"Rsei'H^"ffGu^E*X+PDK#tjHZ@NFn0$(8@`j+cjW.VMajk@^cLUZ6;!<ARb
%NLT?<D-.aelUbX'f>]ITOQ1K'*/([<78=#SAg7"*B+'.*D#@'3kF,1%L]BYTk[RfGC'Pau^g+ZF)eV)MG<0pqEj?F"f:AcJeA,R4
%C1_P\ikVerU;^9;:Nei_g:2?BUH.gKda^e/"_\i:`UBt/NK6Y.M`'uaipQ5+gZSjT+[HCPhu]3&qX^eJ].`#q;E;IlRoH@W"+BTj
%_(,:[7D=QUm_o9*]]O?<o3aftBWc2/qpV89h8b%Ug4Zh_pZVoUba<!VUGJ?Z,5n1=Yqk9+7e;'6_(eY&a8Nl,(GrP9,9K<mjlXI&
%Q$08Vi0>R`r;rbFr#TVbYX`(=a2aFC<Vmb,BONQih,^?&)>[`M&dOVRFR=E3)&!+I%$HZ;GC3U*jb1/2d)0T2J/3QIgd3jk&aZ<`
%1+TuR:GoWcZS*Wc\sPC!iikcP]/Dm78Ta]1?9=18DP&j.Su#TD^fEWVdh=:u)OW<*lWScEj/d$l:EJF=-6gIW$?DjqBUsM82;$Y2
%E8j0%M&NJj)`^AqYFX=V4utH^L=RB/L2;S]@I=B,jW@N=8,H_DC5-\$7UnH5o[UYR(hDMoOd=iT0Q05O+FB^'mcjQ=iWDs+8+ug\
%V;L1eWg.`OQZ)qAWE=FniisuQ;8Z:DR)9es/E74pW0hV!.kAVE=..CSS9SBPNt4"iq6sgLP?RsIMC82IcfX[UJ637C9eEB`;_dbO
%6M33WMXEi@GuNBhjSQ'KaGuQY,!\%9M<3?e%5u_Z*m?ZW?m"(-Y]b)O`TNRAn"AoN8](dr`/gPQP?M[M<Q@TQ^`AGT[J#!]%8A<7
%pJ$X%[^HaTo_'`2IF_oN_-V/?3n`s8'nuc8B]/.@ja`ur"0JQ`m"^jsUMZN8:E;Bm-Eia2\Ph+hm1hoR;_,HeUrjp_D5b<"2sIkI
%Ye@S18hIs6',tTpbq'i#0LFjjU-[$mRRoIIh,tB[b#bM2<cf-@Y39"GqQctKD`;IiJP%JrX.)_fQHX()c,2n2e&9PVa^JY([;]g%
%/D_qYHbH#23io0bf9>cfneSgmK<A./A7OANI!I)ncg=UKTo2!Y%`7-;:d>.84pAb&/O&o_&1Th\W@+8*AGa4iU'h3?PrD'mVgKe=
%Fg1ad]s8<nV0<tRp\Mp9iUnI=Kg(eu908h<O8CBn%LD"<,jZ)\CMe`c&iR.?(F![qr0YM0m]80%FkNNYp=@.V!!I]G!CFV=%'m$9
%oV*0KShe)dl8,2W)^9&r4Ih.7q;>:is(31(jb$b@>d)fm)-4g@l]fb6Fabu9%mmg,(:[/ek2[elDOD>pN+IPhSDB=8JTErtgnd\(
%,dE<ann<S:c)J('c<%Gl#6<X',):R5mR[gpUMt3o9YA=+(V.]EW/.==?U^?GJK57Qr)M&%6UJ0,qt%7::jYsaZZ@g`/aP%/>A.U+
%5aDPgFVTlkP@N578Gqs0LRU&:"Ag:!(RKqZPMBM(_hMF^b:Wt^0B3(rdCm4E(=`3/g-3BDm>/ulFu4%:cGE/:k_HK<A1'2R^tCSL
%BVf3Qbf!?&4bXSu%H">+Fge6=[PWYX=i-C=2p)BqPO5,m@]?WBV]6HW8[Jb)a77`tD?13OK=K:k/b[s@h!JuHj'/JY+d+VB7$08`
%Y;U,3>DNM#!6IIVV$>jaa"Qd1`J-l4).p0cjUfcPr2OCF'EhWQCRFgCo/%UtT$b#ud)>IDgg:H7(\@7HJRPu.EOLkBe?S)r$=Qo7
%q<SH2'ba&Zed]tN_D1@!V=k8RC"1N,.4A2PVqom)[?n)AI5q-n`CIGB9o4WhgNl?3UA<_0IOH)R_glh='I@S(j1pIKhVG.WdtC*J
%4E2Y]MrPtt@_eNM-S]WW:O$Mr6OY.lUkWN?c+U%Pg<W)I]7BR-"Y_!tT__suUX`>fD?iI&7s?rcS=^G?&'(6"CU*8shNFFiL%B4F
%eLZ7+ZK[I'ljhGD*qlg9-(dZD%\6ham?+e2<%8h6B$9"2&+ab/;&BnpaoPs\h(?i[eB$egi`:EF2&!G[?R7i%l@s$Gd1nNb?/;@_
%>=aa_7MWaaftNB]hH$KU,H$<qZ$eX;RX26IM0ErJ/b',O-el7hL%e)VM8@^L5)]f.S_[6T6VI/1TOI<_5s49BCJbia@YJJK;-7-j
%g<Sh-^+nbhA+<NF)MZfTRoi$-dWMb;R17T.hCabn&)bqX-'*;nNseosBcAe".cUBr/j;E&WF9GO43!+(Jef(DpNWd,J=KaWJ\7N^
%&I$%(]9lnq0mdHOKBu`H"IC?eB??[5N@eea)^f\:c0K$Z0q4`8X,=:LINDTV]GfItaPeqQWo$tN<[nt5>VV.4.PqY,"%sOS%G4ki
%R405OB:MT'rn^egei1do0(k:tY*U<#nHsI.L'IE>9UJH8W&Pg^c;R:A`d,I<o+054A#F&P=@X=R-\3RJQZ'i6o=d+UH17i3c^TjI
%`/KiFQBUUZ(>[Ot*V+k[E':6A$m0RN3+gWe_@u'e3D%s[_QK"JFCI,tCi)Dhq5Qh:'4Dkk01$-R+WQ.Vk"Mj+9IchW6nNqCS6Bl\
%]=DneX/^-\'/oP_rFeV#j7^!L5%6(tf8$"FV@Ybg0_+b=(1)A@&0l4,B6=_[^!r!6Jfef;\25+g')@`l$[1+K;'$FMqY<!X+qM5Y
%<dIk2+M<SJgKMl:j1K+s3B0+V7M]?Mhi:QRV$:]lTW/A.'3f7l*+j,kWJ0,B*:Ldd9A4F)Y#SD.7icrIfa%)&*SVAW%2$2)gKI#g
%\B(_uGIRn,c#I9[mC%2**1#MkMM:7Ba)rAqDPf>2I+Vja@qF3<GN@@q6r%5=a%$j_--f07)tuF<A8MSs2@8mOPmo]<EE,C-cQhcr
%9e`Y69k&f*"t_2f%>c#b6e"l?#T+qLR42J-ea,)D!/8Kr4sOf6cO7<Lo5d'Q+MAd2<@R8eJmHL-USPaY-n>_:65%G>dGcU\IPO"'
%F)0/p*XT#bId/pNW`Jj+\3I;H?5;&LPc/&#q8[arEM4Jq[+[UqAS9pE3Q_geI>!,"E'K.D?:"3k!*P;aI"_IQ:%X/4oIZAk^\)lS
%PW-mpnQe>-rB8qpZFG;/]Zs9qC:%&Ai#L]56Z\6U.**so%K44]j985d@rj_maDBlRBH!Fc^.bUXEaW)9AOqTD;Xs7oBFV0B9)S*6
%-A:\jDlj,go%2&(*Hj()AIgT`<4g^`0&>jf+VTVPj%NhMTX:I.foQoM7\K]*gAoX4l>#kJ*q\B;cB><Q([J[0H`5N[i:912L"Scj
%M"&$dJX$)'IEMYSD@UDc5;`%14$0B8nht6G[t<(_lP<(7"]e</N4ZPHf#>^g7o%BN"ae`s/L?d#GW(/jFh@pfCkU$4e1H3D"R<;p
%-O'TB*sZsC7#8<Y<nEXX3Uis2BK!IAf\_<=)dB-cRQq90;_X6]'U0NSX58'.E,>1Y+"cc\e6iOenEH^_;Q4*pC"bmt;uLi2%G#2@
%6N9BK`eYH+[7UnZBH[?;f.&Y8Ga\&#8e$eYF])tY7Y<_.]i#NO-oIJUAOHkq7<1)X:Se821k9;T<iP%_i0PoNm-%#j9$LklU=@7<
%'U5&V>'n"Rg<T!B3`\eUas#so011,!Y]O9WaK%4-,Acg7LZ@F(A4?`Ce2Y6*bdf$VKZ"qj]iDs:ND8dP(>ZgWG9G4=iXqL3_0Cb6
%(O1TZI`NMIZh=YtmU4Ph0C]<@gbln9^R<:jr0^d^Z0O#1hMWF`fRSeQ5+gQK,:pBX"/]n/fm/5sG;.l)rWO?OM7[b5^tBt1nAF5t
%[_P^=8F#HU2B5j->=#Y*<_+q#Qor6a;Y_$3PLCP^AKkpP<U3hudOT+pbo\>$*b!/29Qm1Cmh%J5_*>.cQpu2Bg`nA\K,LQ2g*8-d
%Gq@!GefJ8A*=SC]YODfj-6puU-M%L5*Bh9&44k5I_`YdRBtsQGajHW=Ye#8mnKf,<4Mm7C3$@9RcdF$h\V%0'rX1j*P0!pP`ml:B
%2fHV[O0B$[dE@]q+YL-)6&_PP_n@UgVhn$j$fWe>'c(@l<bbB;f=U`Qem=DagO>D+%,h33_Y[n:%GTnQ#`"rL)PmXR1^)9VV,APL
%]76MPoDeOX?#+HHbbFAB-8OZG+Z$pXFIE=LQj=O&ZEX]_$>d$gQ]:aSs-n(XT&ACpmlM&bheMV83$i^7eFpap)%ZFol;j0L.[;JS
%/S`Zm9RB%"VLIU_h_T"JAubIs>tWb2PBMqSe#uip7fCm0/:SKgVgI[_UGlu_2/8R=aZc(h6\gQdXZ`IW;ia<G>ai9YLWB9gXB)'0
%DIT'9J_I)T6'>=q@BbS$2+WPRksg?\%Koq\NKtPiQ,kKqQ.5#dNcSfmFO9XOgJ=ffmm_t7_SO`+H[pqAQS4D<T%1`pTuN:,IpkaT
%,ol91RpR3KDUF62Sb@sd_Ca_S2hh",,Jl%dQ*,T2)\M&LG<`J:cri6e7"eY6-XX9.T0Mo\9:"i3I"7#l9/tQ_%fHbZ_Ca_S)Me$I
%#_Ta10UZj:#e0AdS:PidUBZQp;8(U.#"aMN4#u^$f%G*"F/"(MQd[d`N<9;"U%mtQZCGM5%%YY@qAKZgOq'7mfAE[d_g/8/:9HVP
%Mk-bY/Sf'jr6<,=:Nb!?qOS5Z4>f8Uj5HN+]&uH_>n?'[eNKgb4Wa?@T$m@UT'GSTaLKM/fbj\de$Tt^i&Ao`)])0%483lh>-h':
%j?1sUViZ>&pqo'eFjJ/W%W+:'dr/lgSYoL0)Af_OP*8)cV?R?+J%nD'dV,*XT>@+%\?+A\)+cne:V-5[YJLqc/?=nC4Gaf*Tis*.
%[n+^i$bk+g7@uddIIc4<P@*%cm[IRPH.#K\Rp&J=.Fe,tNaIuqnk2'tJZ`@KH1FTi\^T7cbWP]tSUeqfc91p!SO3!>9\aP.(77D@
%TAPE87gDuAV"jSCN1'n&aKo&-.N_:YTAPFcpmr"0eG+d1J%\]H/K,h[pI]M9o$DttX!ON%>KSiC20j/ss&c6N$>Ru@>=k7or6l1C
%^k4-'!99^6RZ*\'7UOV[925`Jc`!NHTRHE)NLBsa"i?tj\)6dcNLIj<mK4@be=n+Pc,1GW%I9_V^IB%O*E@QYk4Zu<45O.mkhG@j
%7V]`;0fRR"?dGj9h1aJTNRTe_^)nn(;\.?a,e\YDUo#31BoI)^dn_WG*2t)D/>[8@[Arr]nu^acWNk("=@M[$9fl$9Pte#^Zp:@G
%$V'.0XL1H2!-u">_E]ujKDmo0;\.@(']-$PeGT-jDrG#TWW)3.2>&X4m@/lgeC;Am1ckD.Od^T`L0->E(9+9gBrISGmmp/^p?+Re
%l9<l^/^_.+\Fm)Vq*.S75Auo&Mjmp8^K35P*Ye,0f$sIHW!WE1F8=]u;rb?[VBs,tYGjP^ZXlj*)\:h@251u>TI)>_TP)IXI=CKt
%L8=M9RhQ%N4oK@dZVc]pqrZ"t9CSTL-?N]64U8mgXD0$Mi?EA?@9lZ(Ap7qorAac*P'aK'i7FftrqKmt/Z<Ahi;]k+:G'+)U'2S^
%rR@!WC:)H=AbrAPpI$U&#=q(ejIVm<<qffsZZc!:Df,um'.`/.D*J<X//jBDd1q!Kfh[B=go1&OLMPU!ljjc4Tdl'.oO$al>BraL
%PV3u@ldF7JE/hU*kA3Ro.j%g-H$]J>=X=JW&[aY=Nq=sOh>1]g/UjBR>Z1W<-X!^>da*S^BWQrG^b6)I(uO2`[/<r2L]2%\oKNi;
%cr^aJ#Tbg-j#ZN;*3T,1O3RM"eu-m@4>o\O>PKS,c-aSoIMAq>82R!Po^b)AHTj@NQ\9-X'DW.QY%_+c@u"hb7UB1]$J--Ud6i[8
%T,\PI,mPeJhQ!Dm4TRu7!m`R3HLk_do_nDoHOe3>(c-)*W]uc$W[FHUbN<_rC[AU6kpa9k#_R0HK\'kFUIqlsAN5bp52Ed4h-E9A
%^J?^I*_0T(ko.4]<0JDeRVqUcaMX8_Ii)?V#;gPL`b4#ac?=nUC<?OPS8q9Rd[mS=H1T8bnK?06Wbs.%0,3h,]aJn@(UiH[OR]J"
%)m>goDS-AA`XAE^DnHI(_Zd9iAo5Ge!Hp/<7;oU<)RO+o[5Z[EMeLjo#e7T4Z)ZKchKlJ>OpgscU@e,DII_H_&c'tH3PsRbH2A@>
%O^%=VcK4l"[O%m4jC@cAiOuTm!O$;NcL!W:@?RF2iGEsVS5/$RN)&*55pC$*!6as<`__#baVH;<:VE/Jmc)i&<6Ni-OR8:DlEj!0
%QH5htQ@=e3S_!cIdGEI7Fpg,+VYKN4`,52BHC'B<oX_[RVr,d#WCI)on/9oml3c$^X.cATPoOs/k[i39V(-iR2#3P_-2f,4^H*YV
%cqE2c<aS`lmh>M/HJ^:.('#>I"c28fm%?J][&8tu^u2K[I;=otZMj@FXj43)GbO\G_D+U<rK1f-c#L13$@2YfZ8u>`S@MsTh-@0S
%]^*kphaf'YhTp6)1f^I=X;rRf4b^A?QUE-llJ=IpI]GL%oSl:IQ;;YsC)8O`b*BMbU/n<YI?A_ce@Q6!'4*8$*A*@.-^L&NS@F*S
%Q"tM3mN&G2'>daFekB@42)($VmNW6.">auAE@6SNnp:/Y3QIpZqICNe`q8Q[WND[tQW*KdrVSd6f$[%ap@'\GMsB[lQq'Q.;]e#q
%::>C$p,+U(fF$)SUTk8@WU+XXiCnAI?_0:cF8>?r>N8FJ!R)YL.B9MKUubpaQS721YJH2X=E0"BGtZUA=.:^(WiOgXZs-)H.!Sa6
%NBeC=#MA.jq%u!"SA%Q+?NT#nZ&^c:[<,VgeWJH`fCJ@:IEq-XJseQa03Ial<]B%&rGV.C^?g6XI<59?%XK5H9=hX,lN\N85LmL'
%gcW@Icb%=Ir9_DHa1M+54C*>8hUon^.Q@.OohBhjYncOZiPsUl6dtt)"`!@]b3Qpu]Ck^ma-W(Cg<jrAIm<o-q4Aqd:4b(YYd),[
%o&JR9nQ*+gk81UN7h`B#QUg5!Vb]erk'@*Cbu@/r:C9VcoCqX><q5_C7[rp<Pos,l&*lM26(c,A@\7QsZi5*=r&h9Wp0"lD)\(6(
%rQCnSLRm)<#&PB14MQ98=M-UfTA4l4S_-V!]:SifC27qbcg`YPGmu,L0jE3F*V$/#HP>o:-Rt\DH@gDrH5`L]l$$VdgQ\<YI(3r#
%*aG;_G[Z8.BD`?n%HENK>aQZ:Gs1D_@.noiEcAZT=L`DmZjj-$EhN)L"a;4K&#jjo?sGQo\==s3Ft_4<=T)FP\CsL*0>L,.;fj\Z
%kh_"La.EBNWX`ei%3qt%^cH8,%`=:Yl#SQ0?Hq/ume#fehr)Ac:4Ijk1^ZHk=6mrRTpI;aQZm4ejNb?n;<8fYJ0aTb/^2+_hLY[^
%h+87eo0D9\$2Ad2n]oi/PhnPXdncUL,6Rc;>_B.dqd2it8WW.*P7r+5QrZdc/kpVZX?RUE/+`_(<BXPtC_`V#+3SekIe]G_pq9N_
%S[[UiMQ>2bcRTsdO%13"Ece7,Q@V2mObpq5KAN5]4$n+4BmHhqC_X1USKtV#*L2%qOERH"l;2PnXa"u_4#>@9RB^#L0VH1`/kqe@
%[XVOd'Sk/Pn+J3Q,VX]+:\]4&G)F$rdG/YQFd]kA#Ck^L[FoNXCt'_#-e%n7\9Rl5Uh`;Ea>O0lDU&lubAX_p*@G)nO3?(f]l/_M
%e_f^rXaUJth-m='ggEW_m`mZ[p_bgl?g@'gCSQ?NP;'ZH_eQ5Ik3bZT2R0o^H]]:p>.]#?=`DurR8`9UF5RYTAVe$^D$f^B^((a:
%k*'HG&Zr95d_#KFT'a5h)Ll%^gKLg^2U_%Do*8Xs52E?um]T>AW`gcpEUWBL%(rpM[V!/mgEh[m:H<lHeQHXU#4A"4SZreaA3o7i
%e--'^if@[*qt>&K:uVX5e(1L^^C!O39[T(Ya\=e]51e7i/?g2cfXF#F-G+WI]s)38.pARs5$iL%d&^`5PUA[W2-sUc\n@nSkRVd3
%B7m"Kr@4r?AEf</Xu2[M;,.M.k8JF>BCnlaD>OIBRE?>/<$ukcG1na*DEqW:J#*LYNkDMPm3g687nR0,%69JkohQr]p2nd[LXjBH
%Gqu",%I58fbg%@k-i1LF:,$J#O_DZfIp6d+0isrKWQoc:Y8B'L,I?J3UTq)cPr8:9UJJ5adsDuGTjtK6_s*#,LEITYmM7r*[kga5
%#2%pYJ<@o=p!mO"S6A&&6%;sLQ5;T>fZ?q<'MKc.A]%9XSsqRrip'a2'P]i0r19h6K^=<o=q7?rp6tVsG4jt`V;LN*j=HtQn!lj'
%kFU8`5+4Xq4Pp#a*k4H7nZP^LBg8'-Stt\m?*2@3I&MF@k4.D1,9OXjm!,H!*&]T]Y(6o(7haPWI?2j6EaQ2GIRJUT$1@;iq;@d"
%AFmY%QG5VXM.F3G5<bfuOSR;g7-V:1s7g]1mg):t?>JS;B=R\U=3W];%A!#V"JP9*Od)6H095KEBTNKBo=%1Y@fE8T6&'#6NoWEA
%8?-6KgI\ZBCIn<b.hQMV_2LQ$q&bHZmY?>X[!Ui#:OIAVs*0Va,[TX5kqQfA^HgJrc[Q2?]u7d2ET`P[^sQ,<<c7oU=_=fP0N\!\
%AfMeW.m)!8re>)D,LB\Ziud4+n%f;Qo:n#qDn%d4j)o5/F_kp$giQnL[XR,P7rr\%\Zb_CBU,sspBBZ-m7Mk8!B!I&%rltm9(""n
%[\TbgIH]M].e+<Qi_%o8EG5Akgnsa68c+td1%%mF,&'9AL\]Pe=LT>9/^N)U^+<p@-3V=no-F9YQsn4r[h@OCh-Q.l,[(=:_q[^.
%l+]%JNVf)*FU^efkuK*BBKm9YmoI<IA597UD9V(P:K^rZ^TBY+=ZER5!H5?TT&!^+?bUgV#@4W6O0RAe*XtUuY'57RA%N\&2mRb<
%YiN_aG&BLp+2*1!/npiZ?dI>*&V/3tQ3L8ce6?Wh<8b]RkjefR,PAD1jJ:sO47Rgcct6<-(6X4RPW.+LSbDUhS)iPAon6a`<Ei_k
%L(!+b/+5f7b&I>F^MZ_I2Yk[;*l%D$2!.5j',tl'4Cc62F1sNoV*qd3;ki3/iPpO^@nIG_C>JEZSTXXpPI8VP&J<[(A&J/nfqaCN
%DpH)YlEa7*_-VOCre*#>4L8phflPT63*R_cp,(N\a6PhZVh5d-TBK#MmAMr+Kd6!OLQTY1Gj3_T[Ib`n"D$qcqeBH[g6hb`T"[]I
%c(54/NDf@PnXj)NYdTJ#e*@l!]6X<je."7+(l\RUMn5"4-]Ph2Eg?6U8^-kJ7";jC3VgkY%Gd?L$JrlahqfFlcF7^>BD03CC>tCE
%#FusV)\PqnR;ik*a/]@)EJe?ea::-jB5O/ggNS`d,Ruu*4#S!uQ&F7DGS_nLUiKX[e^0bCQ_W[>,ac[T!h]8;A4q[0SG]g8dkGZ7
%e+STi1(Gis$Sf&6P&\390"ih%WTi44i^9uY3]lHdVmX\E0jNL`rbB#jQ!A`/<7[57"l?h!ft5S`qSF?6+_R7,./.&/2/b.F,V"_*
%r%p@#Cp(FP?9/H^0$d+uODQ9h@7dm6bh5Y;BYm.Z,J0jLk,8d`P+>1U;LgC'=>$]B*.$l,"?iW:Wm49im4@+.MP\egMAp7W)bf$m
%-?Lu"rLB5?R@+4;'s^(D1'8HkqLmFeXM5lM@5I/VL+'=6)[*7=)KRB^GOOo5@uEB`hWX",E,Ba#^*qmdg2"*lh)AE(UU\pa]LX<q
%A9=5.G,pY9Y0N2j//:b9P,s*Tl,iP^a6Uap,_.6Co^(`.gLkh*k.Gg-k4[idjhG_!Sa(4l:P1n&Sh%a%,9Jj")>K=;d&j@13qM8/
%mskA`s8B/$q*4lof+[[+@e6.gMdPm%\+oCbe&TWbs,Ja/f\t;]K8iKN+^QgA%ODnN1Jg$t*/_Pn"O2suP8_>Pf&B-hG5/8&qMfmU
%+dI@@^=foG9E-?RT"qg"!;<V+Y/R$Q:JS=mF\%Q8mYB;&+eL5pb\TCS)Q?%HRuMo2!:$GH1/1K(K@Q5C[?Qq6$N<;opj55q!.7Kj
%Z;2s[7c+-#CT1#*?Qnh2f&@RH"_C,Yp1NddrQRZ=hsOj#]d'(0P9AY5Whq:*s)Es8b"n'Vj+lA4eVG"KE@ZK/3`:$+VImW9VWG/n
%r+T>3bJTsL<T..Zdr\;7_k3fq=q1Hf4f8rh7Y`165rShGknQ@^BAp1okB/1f(j]&7U..U*lQu>MlW(V"T4NWh,O,?;\7kqX;`?Id
%"eV*C1B<,s1Q"X&5)VnP!#0#KmY%;M\J(oGL.U/X'8fsr1M]<S.rXQE-u,$kOpTX?W`_'MBLXpr-5=^8/CT9HR@KPIF@n\pZLSbF
%buCd="\#bd<O%'hf!).i'[:5G\ckO/KoAH&OtC=P)5qhhQ6FFH1Jfp+B)i40R7o177<A:+OT@B%MHMH.L!N@LQN_,L5`u9l5o%Sr
%*2T7QA?/i]P0`=`/?gL/c2e&3CUlR_TbWMk.0h+*R9VTS,RX@[SqC2]8pR^Y-W^Ml=7`t-9`m<:Mg5uGA`bN=N+Nfu.X<.>bSB&n
%Q7j!]<kbZ#MPWWd?e%^2VH>Da$G(,>ZpM<25m<36V3'48-*'im5Y%(p7D2MOoMVi*(.q')PR"!!UKAu]F/1e:9*r<K%5V3<"4T/c
%V/!85"K%Du`G.,?=jZCo&2'6-&mWWtA[>n^JQks`S,rPq9Vn72j\!>WEir@iRFusJ%s>7bA\_D#ATMIo<2u8T\RN*SWg/IPC:RLp
%Y$e6!\&pSD=3VO2=rA0KY>pN:(hs6<oQ%Z^'oJ8M\QI,m[7[k9[hl/=^0E+RMT#"e'VKEA=K.N7+HIhD;Q1KJ]p,MG.Ne_f!_@%6
%OtB[!JoX[]X(L>Q;VA/6/&XTL5ddYh9!,+[Mq&0=djtUr";Fe7TN`;6['HYnE6+!IO5SK3/fW."aj>G41Sr08];5CsV[>1Ph_"VU
%lU9E)%8aUJ]3L/)ZNV2?LE#NB`P>0P)g;R/=R-j+F^]tE_fN<mV>F=<HT6bE(INGKGGm/Qf\7DZN35?$?]jk$T#"i?`d?tZ`Zr[:
%+(Nfcm].8Yl:jG/Y>im^RROKt6/3-r7Ah5OUHql6>8l`p#+eL'ck,&"./fOh7#SSY*lC;!?T'UXdg0FmmrXS"pN;5:cmoet,C"G`
%M>-M%%Ba+:[#]Z_Jak&+*>gAj?Uq:rLk6/17aLUuJfgQD::uC6/l(DmGQqp2NMZ.ZSd%ecp_92ZBq-qWE6%an&D$B5^;Xp%8E/D<
%]G\`R)NL+;<"SQXfHcJ``^js?c6KhH2I_QWJaO(ME"!8K.+m<)?t7)V%H(Ba%sZSa*Dss]XTkoa7o=%-k9iaBb8efondC?1breId
%X<9o-6,m^DK`l:r$hYZr7bJp1KK2'8kP7u.Qp+!'#6b9fOY1c5fJto4mSmrK-lVF`nJLQYP+`;:,"Q)Y1b9a]am_+%+Vg+U_io:.
%/@,>.90<P)NWB^7+E^Fk,o#B,UFIrM,0&akHF&2;KXcK6$Wt^ej=Cg[L`ud1e<D*;JcnYA5V.dHLuF"(#C%O?6odGm=,0e<7?!&h
%(T4LumMJ==_gd5F@ZW-6:nEl%S050-'d3m_%-hC`W$ZcnV0+1MMb#)C+;>k`$u$g=$<9TTNLkNZ41Gc\&U7h27ju018541OJrAWU
%Lt,''Mi4hT\OnKkm/fp!a0:/TV@1p]j@U,Kl?C?d&?&GYG-=\;oMc%!,55FIYZ/iZlG+qu"/cmV)NIgj(Z68%bJqZYmjuL>L]rYV
%g8g/<+a"Kf&/!S,7\S,1O@U3^bG-L3o)`@17%*%R%%%*@35cF\_(J?T,:!KgY_%JUHtO9W-C,!s0eo[`%&6]i8>N9e$1/*>)/Y>V
%+hLVTV*[E)*[[b>f6T/5[B\.7TO`;P(\[oa:3rPRg!'lHG+D/?;]<aQ!pGCW_?\"HGG5_Ah3lo];\ApQ'uV74j-+PC"N"kG-M/![
%(ae,b.)=3@nJlSL"VLpM&DS=(q]uh(U2h[6,8\>h@*n0_c&qAITlk0ABTNM&?oQ3)_6HbA]2c<JTRnX(,0^5$5Zg&^63.c)!L4\N
%82aOK/CMoj5c\UkO>[Fs"5OT%7"NK#&aKq"ab-CI%,X4iLe=Sn"UndU^.>%X,H+slRd@J;K)rpnDEn=>k%1?E8E%/S6Gqe"hp7*a
%#GG(-Cg]&\B)>\&J9DgV@\be)MF*fN!XbOJeP7rC[);MLTg=tW@/=F\fTWq9N:l-2m[M@C.[Xnmc:A)]5tPOZGcY6X#b]WV<]Z-/
%QlJL$!5#;pa.OiiG;5,BPoYgUS-;]E3mAY7B<pc@V`JjOUUXfUooYi]"#pP^EbYLB1CSREUKNO9bf'"8+G#-AqKRSh>Ll)GimBLk
%^*9e4_;<H[cOTLoeec?s>dc/WTMaL&6X'Z)k]lj'>Jqr@]7m89,jrDUDYN0gBLY9LK>OJJ#OClangq'Q3dt^2lq=BFAfOnd%W%$=
%Lgel-:-;Q0Q"g;;Cs/*XSf"N%i,K9neY(?EHOlGs4$=(ufQo<_T]#D%J8/Njnt7d!Z3*_-(Z\F!<#K!,lOKQn)9;l;,aRg`]FL]]
%!b@&E=X4WbR$@^sM?VZcoah6m%_sb:*XF6qU8=H8VYGEO#LcPo`FHN4<K7O[h/G`3W'):B"47L??48g1*ZcO]WNm/g$hUB4is?uR
%F@rE6]ST^pMS#PSP;S2:UksmaUO^W#K\Wh,,`@1]E"N]@?(F@$G7:,(D+qPB-EVQ<:L_-]G6e>?,ANfMoDOV2AAX;B0YN:`15IF1
%P&.p6@OXF9ceujRMW[ceGj#Gt+5;@O_:k*+KOgg/K=9>3&4\&I("jfIpkLhh.M8%`32RoYZSI,"\__!^(W=JCFKu.XmVnl;<Zu4H
%)0GKn+FlAmJ4uaAi.o,%($##,&M+BJ]Jq?_.u"W(R#GX%`>s1Wfl/X4KPfX!kKI\:\if1L0gtZ6aO/*5L875EU5Ear_?DWP<h9Ua
%7Atq@`Xl,_Uhj\73JT!4,u#-=HtTJm5"sLQ&8k;]M+f3?QkKOK+@]NYfkki\'s!KI3D,A)$tq6>/VF<Ufr^$Y$p7QOeT&<e73+@.
%&U=uA$7/R@$Q)@OJ@53,*;/d+POKWd7/;Yph4a<df.HZpL'"6s$4\^E.)ZdQ8nVZU>+s:q"b$GLatuD<8PCFo-tdaCQm%_)6mQaX
%6.:o0^k!]])dFJM6QjbW+ik*B0g<b#jFI=#!%.LaX,'+d=c,Kc@j4UQ@XsA'8JDL>_6D!Q]n4,+Ee(+Jn7YX\7_%uN;BQO8(eK1q
%KTII6Jjo=1HO0$OKpV!/"Tt</LE0m9Qpm8""f9.)7h0><jPDj8Oa5/A63rWjodN3smQ7Ddb(5d:*8MO7.6L5(BM:CaG0NR+.g$I8
%C_n!enFR%P7s!Hn/V%G0BKJ>0]@*B]A\c6p^(*tCF6@j$]Qes^n3/6Lm;*;O!!c"I9MdG/\-JXVZ&EWAe6j-m=7@ahZOB*DYZZT\
%Ss#&jZudLIj?N]=8u3k/$p;DKhYoom?VI"UrLk+:B6I+9UGD6UQX1r=);M\=&E]3s.?=7O7U?BL%Q[Yt&+QXWRYlfei#j8Deeeni
%"D4p5G2`c;*3hae\h$nZnbbYF/.2ec\c]H`W,GO:lbVD4_FYTN]0^_?-`"koIfLkc3:=G("A1iZg,k@BB*Bp-d[<pjPAq`QdHDFf
%p&u0T=\P/1U+mM/S03`Q,_2?)aIF@U&3Gp8<WGp0)B=Yii'n2Ha,iP;bRVRkO(&]_0I[j/k6)uo0Rs48663Hc3/+1IK*g!]N\nED
%,_%]L,`WP7#h0;q2iZNH9Foq19bbbF^_0g`"g3W@7k"#B#>LtB(rQO?&Q4D(:`hKNHF]'+Z'%d,1;K9VKtq[M?93orJ[NQ-1;-)j
%b7_j(2TFeAI>!5,!>+:(/j?,QO2?aYrCC?s?`fu$^+q*l<W]Od%OE`e#`f%>EBNk[mH[Tbpf'Zok'[sT%k%^j2b,n0#@o)\qSb-:
%ht\XmMC4GI[m@jjk_4DE[7e^KK72_n56).]lGC1^aeKUK"FQR>c@Y8mfJg#e^?@T>EGQ*6Y@3u3i]CG3W)h6npN>[WWoI[$;]6R"
%/3f<0@G]Q:"+qKh#R%=5O'MD:idOCDP!:5+NJ^#(qkdhEK#&`o7Hfe>_YY8>HpN44cL"-E=;_fr=Lf9Y!_!)Y-P2/C0WbSWEH%bL
%;sVA"Kj+X:&eObEMS[ZqO($2a^f+GaIZcq_+S^#k;E+Y^ZOPV*(_PL)cU@n:!c1=91bi,3JrDeR_57M0;`reb0giWHUeC+jJtmrH
%/-j^M:P[S`V!_n$9Z*F7.,'Zm'^uX;'&g\J_d/pgiXF#IABbO@j"V8)8:o)91Mjh+1*Zgs%m#pcJD7n^E)87DK;8d9Pl=d?_0$.s
%&'V870^`;<ap]Qm3Jgb(7oD"@b$h!Y9+5WLaCH]=!o(PG629s]83I6"-kmU7GpFngIDiu5a'tc(A:e"O%V$h(MfQM+Hp9^.JEMY6
%\,eG4G>%7sSYF!?\1ifH?"dAge?(L>ZAMU),Y%S@pd]sE';1H8).HN#C'dJiV"^lTQ0T-h*0;k4K>CrO!L4O'\eS2,_d&NBOMg$C
%'^ap[n47)`,GGSs;A=7r#?2!afmLgk@h.L<U#Uah&k3QjaLcElhGs'%].V+S,'\9=_!D1aO[6BtJ5g(1U3P`fpsgLcWM/-9Zk!j=
%8,)!G%V1:Q0pZPp=IAM[5l2CX"u%!-*[1$cGn>3,G8I'6$rV\]!&Osd_Pj9G<>P2&@$Ca1L[c+NIl;:k"?Nk2Lgh4W@hKFr%Y8%0
%mM<`[8"UKSKO?(C]X&l,F(TN/ck&06L&n<T+Dh1i1gMLb9SL6jdShINJcX6=)"1pq<X*@Q(7[Qt1e?Q6FY[F@&g].G\DKjDAD(?=
%r!6Qj:&u?T&.1PZH/TT9Cb/s%L?J[%n1h.6dq:?m"ih>j*&Amo=HV<p@/l&(p6oQ[?[47pk1^0LYQA<kbWlun^"M;2#\'cGjDh,q
%$62%2i'<)Jp$*BJ3[(q3#5XYO!c>kK$urg\O`g%.YW2J9gr$'rQl1`i@A$7&BQV)rUC4=^Sb#iV$+L0?\<EkLpsa+NV?RE$SQ^jp
%?6Z>IDNG:(PE0fo&GP%#9]fm%0e&ef$4DS\L`iO+-.mgL#Yl=r7]83&<XVTc0id4j4]B_F,2,\3YgY;Z&JmMs>t!tu0T8?rA)"i_
%LnYEB#QQ:*!&]IIK+W!(Sf5JPa&4CV_ung4X"d89#27EbSs\U.<=k9(&R98#0lpGG*/(kYk5r_J<!<gV+qs"[l>u`F22C?gr3CC\
%/&i3>LnlAlCI]%C4f"DnUPQ;rjDBeob^F7T-2!si*cl?@*#Car%PnM.!o!pUQEN]F7_D[S2\,Q&i:2DHK&$LBEA+`qG]AuR2'IY"
%4tdO-80!N\TcTf6#caY=MA/<17csPhq%6D8_bS"u)-"*U'G+93.Tq3+N+F00U7i(-Y:nOtS$9\;9[&724%]#G`$P]mgCo/CnsGbG
%K1/S/V^)9W@Y!i6&[>,.,*.sB'+A\Oj&eoJ5-"89=7?XdIP`hqn*DQk]182X,LQj"`QSOj6R&gg-!;'RJrs]m^dp;<jIW9?;19c-
%N=PIVh;,cq:pt"[STo^1lrj)&."#W85+,W-0kAPg=7Ta,J<r\:e@:>;KkEH6ZWMc],8*dpOEdE.'-@FDFS'=W16&oL8080`Hk-lK
%EHhQ.]iEFtBlt8Z?5RouG95m:N0g-rbYs1M6)id!T";^^M`@IIL2V16`&NJ<ki!aPMC>IOVohIgCt9eg_,*XBG6pK[d?u)%2?miL
%!Jc@5]<`tNlX-%7h>ikgq%ZhejJ?:>IW"7[%joW>l-`^K7m#=Bm4l,uF$gNZl^(sJ@Hpo,=B^YIl0L]o0EZMb-"]F"C4k"1)*[=*
%_@*]TaU4KRQY!h!4F+71[!uP3p98./['d$c*_,0DB>V.\2%u-5';I`J',6^f$sH:,G70C%]hI&*YhUH/$NVRmc(U./fNb!'K/;I8
%QmH>LL1<1u*)%,H0PX-0Ki_6Xe--T"p<49iQR'9iJR!@pkmms6ZXgoCiV6h,p5eoB4R&F*HSg9LdP\@X*D\2"@jfLM#E4J+^'#P=
%kFI/U]7UIq7?E10,hCP2+cuV5Td(P8DFd\N"5QJW_PSMiiJ?Og&4)Z9BGcCr7(,.QA(.mZ5a*E2H]j1C!MTY`?0sV/i3%](&o)rb
%?jJ,Wh;sj9N!.<*;%JnO@]D-AKF1*=2(..-)uN#Vq92^f3"$o51'eYSAm:s(XG`hg"S3r%l3YI-,JC/phr,MR;Th_;-OoQhm*Mhe
%KRSYFP9cG^Df&QREkHaUHHd]tjR])ad&n>B:OWF8:bXWDBd(CK+^i*^'!+Abc%BTN#_'9C],>E<F]q'5"UL$]mR>O&5S+57j3;n?
%`;8EoQ-%%]?jqja?cZIsVudL0MYamm,!V/]+p#M'2'BE!nnfSI?@fQmb"36TbZ6Eq.SLZ*TYUfOjd./bZ*sCeD:\KpH?j%F&K:q,
%e".Q-oLb:cd&$eFmF,US<DRlQ*A0@78H3GDjCdtr%$g$b6G+S<c>eS,11b'`6$[E7_S%X0"#>gU0Gatm1G(D3QkI%uAm\a5.<_*N
%fEf,GRpZ_*J_R[>ROWj#0btQ08Id3oZ!i$"@8SC(PL;!nl!q4R>*K$m"#cHs]"sekTIAH!!Y1<2L^<\63Ig2?,m#?)'N4=`0,ke7
%NkimaDhlh/HmTFiHl5i^FAh%cP6)7@oD+VgBR4aRgBE`K[p`ij-Z<kArtS/gE[a@kc',cTQ3&>RS]k\E7R#R)^]jR3aCJ1\Y-gkS
%d#WciV6%,T]aOJ-@%&OSe5F'cqGAr*<47cZ0$oZ2Y,?;W>]PCE'XUgLpgLOkn=Vs%F:C:1:hV?:_L*aKH:kNL<n$FgbQkbZV[?S5
%q0!S:KAA:\q-6R(>aQ&qN1%g'=t8RLI'@7c<).A2N!o6nT$'C>ZrG&!q-_N];jg\3\1f#kKj;c8jbsT=_6.R!OPI9nEe&W;WY\Q&
%.s!hG*sGS9)6N8qJ:81`h+)QlTHAlHd4RO&d#UNEBGVa$kXQe/[L80%oV7MWg-s'bqGAYOg4dTMqG8lQCqCO05i30>CDS6,kXWJ1
%[u6CSoV5e0g1AA.qGG=ImBYdRr?u4LG$4BdIM?fl].A4m572\b7hN9s57.S#?'[UG%g>n<;YduV>U9pEX6YQU(bGnrTH==>UqgfC
%hu`j*QrFDr$Fi>c$<FlP4W,^,!rXNX5RQ3`m/m57jJWd"'QAVP'_4X!>-$]cr?r@F$JN#N!duJ!)O5o?=i:L?brRnJJsIm35X,U1
%O(`c'572"WBU"ea0$oZ2Q#2j6&*QM,PA?L2&*QM,Rr=W>&*QM,=(mpH&*QNWTRfSS[hNe44qoc@hC_GBcu8p8NHSIqJ:81@ZX&kZ
%TWa&X[EF^<oV2BjA",#p5X,T`P.&Jq#P=bk7W4bIGsFS$?rjbYOpCWS!/>ii/9sKF$ACgY/9sKF92'80k=SE&?2LcUJaqHsQTUo_
%"h:a1Q9:f^"j:_K,nK30+_.q'OpCWSONk/UOpCWS!7kbO/9sKF$=Ie\acZo$UAu'BRk/hM5FWK@c8JhrJ3FZf?u`WsOpCWSd'a)R
%6d&s'L'$cUkb]*GoX[u"NJ[u=b8&Uq3!&e4Uk8XD0r44p\ARs$?t?r6=TGYEe)\VYj9]7*M*(Z]q;GrGj7UZH3e1jeT>(6X!uUPb
%.9l^pGC0/bp@@P:a#D;=`lQD.r9tW9jDU1/Iig-"pQ74\+"?OMOimSc;VBqt.eig2jaSAO_J^F2^JeG97X_!17YRQ97ZF,A7[9\I
%7\-7Q1Sli'XX.HCCmo+r):^e$]/udZI:mJ`muFA[IdiuKm(7$@DOrusW<_>8r0@F8fs3@eP4ifHhif(!L%rZCc_%r,`Cli;ID#Ot
%J,\]=ZhJ<+9A,f;&qm`$#Qn^3V'<q:54!d1]-MWl4#?#++>&#Q]DM6:\N:=]aBI:.DVr3WoCgJ?4)((m'R9D,n)(j%oD5V8^Rf*7
%kjdYFkgbopla^g9H8V>@)EIAbOLIoSCe36dbr"0^"8=P\/V/*aaTgX_ZIf@u21]dn!cX#RrGZ]S)H+%:oh5PFc'Tb\.49<mhqU?o
%Ed@PRA1l_d^&3q\puTPWKW-o&iDTTuQ^b0$br>0rDa42Y5Y*'%^uT$KV\W215F\5]5l~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 191 x Fj(Fig)o(.)e(S3.)33 b Fi(Reacti)n(vity)22
b(results)c(from)f(CE)g(analysis)i(and)f(Illumina)h(\(ne)o
(xt-generation-)-133 1720 y(sequencing\)-based)29 b(structure)d
(mapping)g(e)o(xperiments,)k(o)o(v)o(er)25 b(38)f(data)i(sets)f(from)
-133 1803 y(the)36 b(EteRN)n(A)f(project.)46 b(The)34
b(heatmap)j(presents)f(results)g(from)f(tw)o(o)g(methods,)-133
1886 y(presented)21 b(in)e(alternating)j(order)e(from)e(left)i(to)f
(right)g(on)g(each)h(RN)n(A)e(sequence;)k(CE)-133 1969
y(analysis)28 b(results)e(are)h(presented)h(on)e(odd)f(numbered)i
(x-positions)h(and)e(Illlumina)-133 2052 y(results)19
b(are)g(sho)n(wn)f(on)g(e)n(v)o(en)h(numbered)g(x-positions.)g(V)l
(isual)g(inspection)i(suggests)-133 2135 y(concordance)34
b(o)o(v)o(er)e(most)e(positions,)39 b(e)o(xcept)33 b(in)e(the)h
(rectangular)i(re)o(gion.)39 b(The)-133 2218 y(original)29
b(manually)g(band-annotated)h(CE)c(data)i(and)f(Illumina)i(data)e
(consistently)-133 2301 y(sho)n(w)f(the)g(highest)h(intensity)h(at)e
(dif)n(ferent)i(positions)f(\(41)e(and)h(39,)j(respecti)n(v)o(ely\))
-133 2384 y(higlighting)21 b(an)c(error)h(in)f(the)h(manual)g(CE)e
(annotation.)p Black Black -133 4407 a @beginspecial
0 @llx 0 @lly 504 @urx 304 @ury 2420 @rwi @setspecial
%%BeginDocument: figures/supp_multiple_vs_single.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: multiple_vs_single.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 2/14/2015
%%BoundingBox: 0 0 504 304
%%HiResBoundingBox: 0 0 503.0064 303.3965
%%CropBox: 0 0 503.0064 303.3965
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 80 8
%%BeginData: 7971 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FFFFFF7D7DFD41FFA8527CA1FD39FF27F8FD41FF5127524BFD38FF
%A8272776FD40FF7C277627FD38FFFD0427FD40FF2752A827A8FD23FFA8FD
%13FF7CFFFF52FD0FFF52FF7DA884FFA8FF7DFFA8A8A87D7D7DA87DA8FFA8
%A8A87D52A884A8FD15FFA851527DFD11FFA8A87DA87DA8A8FFA87DA8A87D
%A8FFFFA8A8A8527DFD24FFA8A87D27525152A827277D7D517DF87DF852F8
%527D27527D5227272752FD2AFFA85227F85227527D5227522727F8A85252
%4B7D272727FD25FF7DA8FF7D7DFFA87DFD06FF7DA8FFFFA8A8FFA8FFFFFF
%A8FD30FFA852FFA8FFFF527DFFA87DFD04FFA8FD14FF7DA87D7DA8FFFFFF
%A8FFFFFFA8FD05FFA8FFFFFFA8FD09FFA8FFFFFFA8FD0BFFA8FFFFFFA8FD
%0FFFFD047DFD04FFA8FFFFFFA8FFFFFFA8FD07FFA8FD05FFA8FFFFFFA8FD
%09FFA8FFFFFFA8FFFFFFA8FD07FFA87D7D52A8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD0BFFA87D7D767DA8A8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FF7DFD04FFA8FFA8FFA8FD33FFA8FD0BFFA8FFA8FFA8
%FD32FFA8FD7FFFA8FD08FFA8FD04FFA27DFD2DFFA8FD0FFFA8FD32FFA8FD
%0DFF537DFD70FFA8FD06FFA8FFA8FD04FF7D53FD13FFA8A8A8FFA8FFA8FF
%A8A8A8FD047DA87DA8A8FD07FFA8FD0DFFA8FFA8FD19FFA8A8A8FFA8AFA8
%FF7DFFA87D7DA8FD047DA8FD06FFAFFD05FF7D5252A8FD04FF777DFD13FF
%A827522751277DA8A8527D277D275252524BA8FD06FFA8FD0DFF52527DA8
%FD19FF7D27522727277DFF527D7D52A852522752277DFD06FFA8FD05FFA8
%527DA8FD04FF7D53FD13FFFD04A87DA8A8FFFD06A87DA8A8A9A8FD07FFA8
%FD0BFFA852527DA8FFFFFFA877A8FD13FFA8A87DA87DA8A8FFFD06A87DFD
%04A8FD06FFA8FD0DFF777DFD42FF28A8FD2CFFA8FD08FFA8FD04FF7D53FD
%15FFA8FFA884A8FFA8FFA8A8FFA87DA87D7D7DA87DFD05FFA8FD0FFFA8FF
%FFFFA853A8FD15FFA8FFA8A8FFFFA8FF7DFFA87D7DA87DFD04A8FD04FFA8
%FD0DFF777DFD13FFA82752277D2027277DA8A852A85252527D202752A8FD
%1AFF28A8FD13FF7D275251524B27277DFF527D7D275227524B27277DFD04
%FFA8FD06FFA8FFA8FD04FF7D53FD13FFA8A87DA87EA87DA8A8FFA8A8A8FF
%7DA8A8A87DA8A8FD05FFA8FD0DFFA8FFA8FD04FF527EFD13FFA8A87DA87D
%A87DA8A8FF7DA87DA8A8A87DFD04A8FD04FFA8FD05FF7D7D7DA8FD04FF77
%7EFD3AFF527D7DFD05FF28A9FD2CFFA8FD05FF7D277DA8FD04FF7D53FD2D
%FFA8FD0CFF52527DA8FD04FF527EFD2CFFA8FD0DFF777DFD42FF4CA8FD2C
%FFA8FD08FFA8FD04FF7D53FD2DFFA8FD0FFFA8FFFFFFA852A2FD2CFFA8FD
%0DFF777DFD42FF4CA8FD2CFFA8FD08FFA8FD04FF7D53FD2DFFA8FD0FFFA8
%FFFFFFA853A8FD2CFFA8FD05FFA8A8A8FD05FF777DFD3AFFA8A8A8FD05FF
%28A8FD2CFFA8FD05FFA8277D7DFD04FF7D53FD2DFFA8FD0CFF7D527DA8FD
%04FF527EFD2CFFA8FD05FFA8A87DFD05FF777EFD3AFFA8A9A8FD05FF28A9
%FD2CFFA8A87DA8FD05FFA8FD04FF7D53FD2DFFA8FD0FFFA8FD04FF527EFD
%2CFFA9A827FD0BFF777DFD42FF4CA8FD2CFFA87D27A8FD05FFA8FD04FF7D
%53FD2DFFA8FD0FFFA8FFFFFFA852A2FD2CFFA85227FD05FFA8FD05FF777D
%FD3AFFAFFD07FF4CA8FD2CFFA8527DFFFFFF7D277DA8FD04FF7D53FD2DFF
%A8FD0BFFA852527DA8FD04FF534CFD2CFFA87D52FFFFFF7D7D7DA8A8FFFF
%FF777DFD3AFF7D7D7DA8A8FFFFFF2852FD2CFFA8A87DA8FD05FFA8FD04FF
%7D53FD2DFFA8FD0FFFA8FD04FF4C28FD2CFFA87D7DFD0BFF777EFD42FF28
%53FD2CFFA852A8FD06FFA8FD04FF7D53FD2DFFA8FD0FFFA8FD04FF4C28FD
%2CFFA97D7DFD0BFF777DFD42FF2852FD2CFFA85252A8FFFF7D527D7EFD04
%FF7D277EFD2CFFA8FD0BFFA852527DA8FFFFFFA85228FD2CFFA8FF7DFFFF
%FFA87D7DA8FD04FF7D287DFD2BFFA8FD0DFF7D7D7DFD05FF2852FD2CFFA8
%A8FD05FFA8FFA8FD04FF7E057EFD2CFFA8FD0FFFA8FD04FF5228FD2CFFA8
%7D27FD0BFF7D287DFD41FF2852FD2CFFA87D27A8FD05FFA8FD04FF7D007E
%FD2CFFA8FD0FFFA8FD04FF4C28FD2CFFA8A852FD0BFF7D287EFD41FF2853
%FD2CFFA85227A8FFFFFFA8A8A8FD04FF7D00A2FD2CFFA8FD0DFFA8FFA8FD
%04FF4C28FD2DFFA852FFFFFF7D2752A8FD04FF7D287DFD2BFFA8FD0DFF52
%5252A8FD04FF2852FD2CFFA87D52A8FFFFFF7D84A8FD04FF7E007EFD2CFF
%A8FD0CFFA87DA8A8FFFFFFA85228FD2CFFA8A852FD0BFF52287DFD41FF28
%52FD2CFFA85252FD06FFA8FFFFFF7D28287EFD2CFFA8FD0FFFA8FD04FF53
%28FD2CFFA87D7DFD0AFFA228287DFD41FF2852FD2CFFA87DA8A8FFFFFFA8
%FFA8FFFFFF7D28277EFD2CFFA8FD0CFFA8A8FFA8FD04FF4C28FD2CFFA8FD
%05FFA8767DA8FFFFFFA828527EFD39FF52527DA8FD04FF2853FD2CFFA8FD
%05FFA8527DA8FFFFFF7D2828A2A8FD2BFFA8FD0CFF7D52A8A8FD04FF4C28
%FD2CFFA8FD0CFFA828287D53A8FD3FFF2852FD2CFFA8FD08FFA8FFFFFF7D
%28287D28A8FD2AFFA8FD0FFFA8FFFFFFA85228FD2CFFA8FD0CFFA828287D
%53A8FFCBFD3DFF2852A8FD2BFFA8FD08FFA8FFFFFF7D28287728CB7D53FD
%28FFA8FD0FFFA8FD04FF532852FD2BFFA8FD05FFA8A8A8FD04FFA2285228
%28A8A252FD35FF7DA8A8FD05FF28284CFD2BFFA8FD05FFA827527DFFFFFF
%7DFD0428A87D53FD28FFA8FD0BFFA852527DA8FD04FF4C2753FD2BFFA8FD
%05FFA8A8A8FD04FFA828532828A8A853FD35FF7DA8A8FD05FF28524CFD2B
%FFA8FD08FFA8FFFFFF7DFD0428A97D53FD28FFA8FD0FFFA8FD04FF522853
%FD2BFFAFFD0CFFA828522852A8A252FD3CFFA8282828FFA8CBFD28FFA8FD
%08FFA8FFFFFF7DFD0428CB7D53A8FD27FFA8FD0FFFA8FFFFFF28282852FF
%7D77FD28FFA8FD06FFA8A8FD04FFA828522853A8A252FD36FFA8A8FD04FF
%77284C4CFF7D7EFD28FFA8FD05FFA8277D7DFFFFFF7DFD0428FF7D52A8FD
%27FFA8FD0CFF7D527DA8FFFFFF4C282852A87D285352FD26FFA8FD06FFA8
%7DA8A8FFFFA228522828A8A8067EFD34FFA8A8A8FFAFFFFF53285252A228
%52284CFD26FFA8FD08FFA8FFFFFF7DFD0428A877287DFD05FFA8777EFD1F
%FFA8FD0FFFA8FFFFFF4C282852FD0528FF7D7DFD23FFA8FD0CFFA8285328
%537D53287EFD06FF52A8FD33FF5328532828285328527D7E52FD23FFA8FD
%08FFA8FFFFFF7DFD04287D28287DFF4CA8A8FFA8537DA8FFFFFFA8A8FFA8
%FD17FFA8FD0FFFA8FFFFFF5228284CFD0528527753FF53A8FD05FFA8FD1A
%FFA9FD0CFFA828522852284C28A253287777FF7728A852A87DFF4CA8A853
%FD2BFF53284C285328522852527E52FF285377FFFFA27E5353A27EA87DCB
%A8FD05FFA87DFD0CFFA8FD06FFA87DA8FFFFFF7D28282805282828775306
%7D4CFF52287D535252A8527DA828FD13FFA8FFFFFFA8FD0DFFA8A8A8FFFF
%FFFD08282752524C7D280028A87D287D2828527D00287728287DA8FFFF7E
%28A8A8FF7DFD05FF28FFFFA8FD06FFA852FFA8FFA8A87D7D7D7E7D7D77A8
%7D7D7DA2A87E77A87DA27DA87DA87E7EFD0BA8A9FD0BA8FD0EFFA852FFA8
%FFA8A87D7D777E7D7D777E7D7D77FD047DA8777D7D7E7DA27D7D7DA8777D
%53A8A8A97E7E7DA8A87DFD05A87DA8A87EFD07FFA8FD04FFA8A8FD07FFA8
%A8FD07FF7DFD07FF7DA8FD07FF7DA8FD06FFA87DFD11FFA8A8FD04FF7DA8
%FD06FFA8A8FD07FFA8A8FD07FF7DA8FD04FFA9FFA8A8FD06FFA87DA8FD0F
%FFA852FD07FF7DFD07FFA852FD07FF7D7DFD07FF27FD07FF7D52FD17FF7D
%7DFD07FF7DFD07FF52A8FD07FF527DFD06FFA852FD07FF4BA8FD0FFFA8A8
%FD08FFA8FD07FF7DFD07FFA8FD11FFA8FD17FFA8A8FD0FFFA8A8FD07FF7D
%FD0FFFA8A8A8FD16FFA8A8A8FD05FF7DFD05FFA8FFA8FF7DFFFFFFA8FF84
%A87DA884A9A8FD25FFA8A8A8FD04FFA8A8FD07FFA8A87DFD05FF7DA87DA8
%A8A8FD1EFF7DF84B2727267D7DFD04522727274B527DFD0452517D7DF84B
%27277DA8FD24FFA8FD0627A852525227272752274B525227FD0552272652
%27527DA8FD1DFFFD04A87DFD05A852A87DFD04A8FF7DFD05A87DA8A8A87D
%A87DFD25FFFD04A87DA8AFA8A8A852A87DFFA8A8A8FF7DFD04A87DFD04A8
%7DA8A8FD34FFA8FD05FFA8FD2FFFA8FD0DFFA8FD05FFA8FD0AFFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-02-14T18:22:16+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>156</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAnAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7N+enm2/0DyO9tpEssev&#xA;69PHpWlNbLJJcK85/eyxJCGlLRxBiOArypTemApAUfyI8032q+V7vRtWubi61vy1eS6deXF6k8Vz&#xA;PDyMlrcSx3KxzKZImH94OW2+IUvScKHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXmX583us2+j&#xA;+VoNJuJoJ9Q8zabZSpBeXGn+vFP6itBJc21Zo432DMoJHUAkYpCn+Tl5r8XmTzx5d1m4mkk0i8tJ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Arial-BoldMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.08</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>arialbd.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -303.396 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 303.396 li
503.006 303.396 li
503.006 0 li
cp
clp
35.0059 277.152 mo
35.0059 31.9019 li
237.006 31.9019 li
237.006 277.152 li
35.0059 277.152 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.0059 277.152 mo
35.0059 31.9019 li
237.006 31.9019 li
237.006 277.152 li
35.0059 277.152 li
@
51.8394 31.9019 mo
51.8394 34.3184 li
51.8394 277.152 mo
51.8394 274.652 li
35.0059 277.152 mo
35.0059 31.9019 li
35.0059 277.152 mo
237.006 277.152 li
35.0059 277.152 mo
35.0059 31.9019 li
237.006 277.152 mo
237.006 31.9019 li
35.0059 277.152 mo
237.006 277.152 li
35.0059 31.9019 mo
237.006 31.9019 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/AURNCW+Helvetica /Helvetica findfont ct_VMDictPut
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
49.0898 289.24 mo
(0)sh
85.5059 31.9019 mo
85.5059 34.3184 li
85.5059 277.152 mo
85.5059 274.652 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one 206{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
82.7539 289.24 mo
(1)sh
119.173 31.9019 mo
119.173 34.3184 li
119.173 277.152 mo
119.173 274.652 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two 205{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
116.426 289.24 mo
(2)sh
152.839 31.9019 mo
152.839 34.3184 li
152.839 277.152 mo
152.839 274.652 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D
2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04
046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F558
86BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D
9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066
B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB9
0D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
150.09 289.24 mo
(3)sh
186.506 31.9019 mo
186.506 34.3184 li
186.506 277.152 mo
186.506 274.652 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF325730A29F6E3A8E85E687770EE1E27F87CEA844D18
4B0E9BD502658E879E1F9BDDE8AE7D0C023ADEB8AD1E21CDA97313F844BB17B9
F9FCD84B1053ECDC8FF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four 203{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
183.754 289.24 mo
(4)sh
220.173 31.9019 mo
220.173 34.3184 li
220.173 277.152 mo
220.173 274.652 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five 202{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
217.418 289.24 mo
(5)sh
237.006 277.152 mo
234.506 277.152 li
35.0059 277.152 mo
37.4229 277.152 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
26.5898 280.811 mo
(0)sh
237.006 252.568 mo
234.506 252.568 li
35.0059 252.568 mo
37.4229 252.568 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 256.232 mo
(10)
[5.56006 0 ]xsh
237.006 228.068 mo
234.506 228.068 li
35.0059 228.068 mo
37.4229 228.068 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 231.74 mo
(20)
[5.56006 0 ]xsh
237.006 203.568 mo
234.506 203.568 li
35.0059 203.568 mo
37.4229 203.568 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 207.24 mo
(30)
[5.56006 0 ]xsh
237.006 178.985 mo
234.506 178.985 li
35.0059 178.985 mo
37.4229 178.985 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 182.646 mo
(40)
[5.56006 0 ]xsh
237.006 154.485 mo
234.506 154.485 li
35.0059 154.485 mo
37.4229 154.485 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 158.146 mo
(50)
[5.56006 0 ]xsh
237.006 129.985 mo
234.506 129.985 li
35.0059 129.985 mo
37.4229 129.985 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
201{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 133.654 mo
(60)
[5.56006 0 ]xsh
237.006 105.402 mo
234.506 105.402 li
35.0059 105.402 mo
37.4229 105.402 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7EF325730A290D76D77983E96EE242ACEAA131574F93B
B3E9D36E6F4086FF3DB329E48A38DC1C36E41D469A4D1B83FEF82A3668> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven 200{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 109.061 mo
(70)
[5.56006 0 ]xsh
237.006 80.9019 mo
234.506 80.9019 li
35.0059 80.9019 mo
37.4229 80.9019 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF32A47D2AAF8C15BC9A859DEE4113CDE5C7D8BB37BC
632A2AFDD9E1D59E819868DA3B47FA265DB8E729BBC4B74D62996C8CD7000A22
83A23B9E90032D8BA762FC6930C943ACBD9924E3BB182B1447A1E2AF18A8F5C4
FF7E73B671B89EC1964BF90DA6A7AA5C360A10E2B9F34D2BE8C7C673C6A88180
4538AD6230812FB8978313B4BDE98D895F422138708DE46BC5394FB88DD33D90
C210817A05295D4CBA95598D78DA62CFD2497E0D80160F3DA900E68CEC3A30A5
1069510330F600555F89415B16F55B2952535C067AEC9D27A114154239F343BD
ECEE543D835ACB4FF5860A143BC179> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight 199{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 84.5605 mo
(80)
[5.56006 0 ]xsh
237.006 56.4019 mo
234.506 56.4019 li
35.0059 56.4019 mo
37.4229 56.4019 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A4731A9DB70B9490730918F3CC8A6CEFA5DBCDDDD
5B8FF631E5F2E3BEA7592C5DB8D17DFB2B2E4B0DAC725198BC39F2911D25DCD4
3EC8F7F509D2A326D2C0725149B8BE60F05AAA125797CC4820A7DA7D1C0D4C75
51B0568D049B61E397212F1F645896D5538A3CC2354092A21562A36F8CBFBCDB
29F3C22EE7704AEF405504D83FFD0CBE4861F9ADE2B264F64EA7F79AD12731F7
D0F425F88BA586942BE2189ACE567A86FE749EFE5BB706E4B2115> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine 198{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
21.0039 60.0684 mo
(90)
[5.56006 0 ]xsh
237.006 31.9019 mo
234.506 31.9019 li
35.0059 31.9019 mo
37.4229 31.9019 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
15.418 35.5684 mo
(100)sh
35.0059 277.152 mo
35.0059 31.9019 li
237.006 277.152 mo
237.006 31.9019 li
35.0059 277.152 mo
237.006 277.152 li
35.0059 31.9019 mo
237.006 31.9019 li
@
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
50.0894 277.152 mo
50.0894 186.402 li
53.5059 186.402 li
53.5059 277.152 li
50.0894 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
50.0894 277.152 mo
50.0894 186.402 li
53.5059 186.402 li
53.5059 277.152 li
50.0894 277.152 li
0 0 0 1 cmyk
@
grestore
53.5059 277.152 mo
53.5059 44.1519 li
56.8394 44.1519 li
56.8394 277.152 li
53.5059 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
53.5059 277.152 mo
53.5059 44.1519 li
56.8394 44.1519 li
56.8394 277.152 li
53.5059 277.152 li
0 0 0 1 cmyk
@
grestore
56.8394 277.152 mo
56.8394 149.568 li
60.2559 149.568 li
60.2559 277.152 li
56.8394 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
56.8394 277.152 mo
56.8394 149.568 li
60.2559 149.568 li
60.2559 277.152 li
56.8394 277.152 li
0 0 0 1 cmyk
@
grestore
60.2559 277.152 mo
60.2559 220.735 li
63.5894 220.735 li
63.5894 277.152 li
60.2559 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
60.2559 277.152 mo
60.2559 220.735 li
63.5894 220.735 li
63.5894 277.152 li
60.2559 277.152 li
0 0 0 1 cmyk
@
grestore
63.5894 277.152 mo
63.5894 205.985 li
66.9229 205.985 li
66.9229 277.152 li
63.5894 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
63.5894 277.152 mo
63.5894 205.985 li
66.9229 205.985 li
66.9229 277.152 li
63.5894 277.152 li
0 0 0 1 cmyk
@
grestore
66.9229 277.152 mo
66.9229 267.318 li
70.3394 267.318 li
70.3394 277.152 li
66.9229 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
66.9229 277.152 mo
66.9229 267.318 li
70.3394 267.318 li
70.3394 277.152 li
66.9229 277.152 li
0 0 0 1 cmyk
@
grestore
70.3394 277.152 mo
70.3394 259.902 li
73.6729 259.902 li
73.6729 277.152 li
70.3394 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
70.3394 277.152 mo
70.3394 259.902 li
73.6729 259.902 li
73.6729 277.152 li
70.3394 277.152 li
0 0 0 1 cmyk
@
grestore
73.6729 277.152 mo
73.6729 218.235 li
77.0894 218.235 li
77.0894 277.152 li
73.6729 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
73.6729 277.152 mo
73.6729 218.235 li
77.0894 218.235 li
77.0894 277.152 li
73.6729 277.152 li
0 0 0 1 cmyk
@
grestore
77.0894 277.152 mo
77.0894 252.568 li
80.4229 252.568 li
80.4229 277.152 li
77.0894 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
77.0894 277.152 mo
77.0894 252.568 li
80.4229 252.568 li
80.4229 277.152 li
77.0894 277.152 li
0 0 0 1 cmyk
@
grestore
80.4229 277.152 mo
80.4229 277.152 li
83.7559 277.152 li
83.7559 277.152 li
80.4229 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
80.4229 277.152 mo
80.4229 277.152 li
83.7559 277.152 li
83.7559 277.152 li
80.4229 277.152 li
0 0 0 1 cmyk
@
grestore
83.7559 277.152 mo
83.7559 267.318 li
87.1729 267.318 li
87.1729 277.152 li
83.7559 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
83.7559 277.152 mo
83.7559 267.318 li
87.1729 267.318 li
87.1729 277.152 li
83.7559 277.152 li
0 0 0 1 cmyk
@
grestore
87.1729 277.152 mo
87.1729 264.818 li
90.5059 264.818 li
90.5059 277.152 li
87.1729 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
87.1729 277.152 mo
87.1729 264.818 li
90.5059 264.818 li
90.5059 277.152 li
87.1729 277.152 li
0 0 0 1 cmyk
@
grestore
90.5059 277.152 mo
90.5059 277.152 li
93.9229 277.152 li
93.9229 277.152 li
90.5059 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
90.5059 277.152 mo
90.5059 277.152 li
93.9229 277.152 li
93.9229 277.152 li
90.5059 277.152 li
0 0 0 1 cmyk
@
grestore
93.9229 277.152 mo
93.9229 267.318 li
97.2559 267.318 li
97.2559 277.152 li
93.9229 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
93.9229 277.152 mo
93.9229 267.318 li
97.2559 267.318 li
97.2559 277.152 li
93.9229 277.152 li
0 0 0 1 cmyk
@
grestore
97.2559 277.152 mo
97.2559 277.152 li
100.589 277.152 li
100.589 277.152 li
97.2559 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
97.2559 277.152 mo
97.2559 277.152 li
100.589 277.152 li
100.589 277.152 li
97.2559 277.152 li
0 0 0 1 cmyk
@
grestore
100.589 277.152 mo
100.589 277.152 li
104.006 277.152 li
104.006 277.152 li
100.589 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
100.589 277.152 mo
100.589 277.152 li
104.006 277.152 li
104.006 277.152 li
100.589 277.152 li
0 0 0 1 cmyk
@
grestore
104.006 277.152 mo
104.006 267.318 li
107.339 267.318 li
107.339 277.152 li
104.006 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
104.006 277.152 mo
104.006 267.318 li
107.339 267.318 li
107.339 277.152 li
104.006 277.152 li
0 0 0 1 cmyk
@
grestore
107.339 277.152 mo
107.339 257.485 li
110.756 257.485 li
110.756 277.152 li
107.339 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
107.339 277.152 mo
107.339 257.485 li
110.756 257.485 li
110.756 277.152 li
107.339 277.152 li
0 0 0 1 cmyk
@
grestore
110.756 277.152 mo
110.756 277.152 li
114.089 277.152 li
114.089 277.152 li
110.756 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
110.756 277.152 mo
110.756 277.152 li
114.089 277.152 li
114.089 277.152 li
110.756 277.152 li
0 0 0 1 cmyk
@
grestore
114.089 277.152 mo
114.089 267.318 li
117.423 267.318 li
117.423 277.152 li
114.089 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
114.089 277.152 mo
114.089 267.318 li
117.423 267.318 li
117.423 277.152 li
114.089 277.152 li
0 0 0 1 cmyk
@
grestore
117.423 277.152 mo
117.423 277.152 li
120.839 277.152 li
120.839 277.152 li
117.423 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
117.423 277.152 mo
117.423 277.152 li
120.839 277.152 li
120.839 277.152 li
117.423 277.152 li
0 0 0 1 cmyk
@
grestore
120.839 277.152 mo
120.839 269.735 li
124.173 269.735 li
124.173 277.152 li
120.839 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
120.839 277.152 mo
120.839 269.735 li
124.173 269.735 li
124.173 277.152 li
120.839 277.152 li
0 0 0 1 cmyk
@
grestore
124.173 277.152 mo
124.173 277.152 li
127.589 277.152 li
127.589 277.152 li
124.173 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
124.173 277.152 mo
124.173 277.152 li
127.589 277.152 li
127.589 277.152 li
124.173 277.152 li
0 0 0 1 cmyk
@
grestore
127.589 277.152 mo
127.589 277.152 li
130.923 277.152 li
130.923 277.152 li
127.589 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
127.589 277.152 mo
127.589 277.152 li
130.923 277.152 li
130.923 277.152 li
127.589 277.152 li
0 0 0 1 cmyk
@
grestore
130.923 277.152 mo
130.923 267.318 li
134.256 267.318 li
134.256 277.152 li
130.923 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
130.923 277.152 mo
130.923 267.318 li
134.256 267.318 li
134.256 277.152 li
130.923 277.152 li
0 0 0 1 cmyk
@
grestore
134.256 277.152 mo
134.256 277.152 li
137.673 277.152 li
137.673 277.152 li
134.256 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
134.256 277.152 mo
134.256 277.152 li
137.673 277.152 li
137.673 277.152 li
134.256 277.152 li
0 0 0 1 cmyk
@
grestore
137.673 277.152 mo
137.673 277.152 li
141.006 277.152 li
141.006 277.152 li
137.673 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
137.673 277.152 mo
137.673 277.152 li
141.006 277.152 li
141.006 277.152 li
137.673 277.152 li
0 0 0 1 cmyk
@
grestore
141.006 277.152 mo
141.006 267.318 li
144.423 267.318 li
144.423 277.152 li
141.006 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
141.006 277.152 mo
141.006 267.318 li
144.423 267.318 li
144.423 277.152 li
141.006 277.152 li
0 0 0 1 cmyk
@
grestore
144.423 277.152 mo
144.423 277.152 li
147.756 277.152 li
147.756 277.152 li
144.423 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
144.423 277.152 mo
144.423 277.152 li
147.756 277.152 li
147.756 277.152 li
144.423 277.152 li
0 0 0 1 cmyk
@
grestore
147.756 277.152 mo
147.756 277.152 li
151.089 277.152 li
151.089 277.152 li
147.756 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
147.756 277.152 mo
147.756 277.152 li
151.089 277.152 li
151.089 277.152 li
147.756 277.152 li
0 0 0 1 cmyk
@
grestore
151.089 277.152 mo
151.089 277.152 li
154.506 277.152 li
154.506 277.152 li
151.089 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
151.089 277.152 mo
151.089 277.152 li
154.506 277.152 li
154.506 277.152 li
151.089 277.152 li
0 0 0 1 cmyk
@
grestore
154.506 277.152 mo
154.506 277.152 li
157.839 277.152 li
157.839 277.152 li
154.506 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
154.506 277.152 mo
154.506 277.152 li
157.839 277.152 li
157.839 277.152 li
154.506 277.152 li
0 0 0 1 cmyk
@
grestore
157.839 277.152 mo
157.839 277.152 li
161.256 277.152 li
161.256 277.152 li
157.839 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
157.839 277.152 mo
157.839 277.152 li
161.256 277.152 li
161.256 277.152 li
157.839 277.152 li
0 0 0 1 cmyk
@
grestore
161.256 277.152 mo
161.256 277.152 li
164.589 277.152 li
164.589 277.152 li
161.256 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
161.256 277.152 mo
161.256 277.152 li
164.589 277.152 li
164.589 277.152 li
161.256 277.152 li
0 0 0 1 cmyk
@
grestore
164.589 277.152 mo
164.589 277.152 li
167.923 277.152 li
167.923 277.152 li
164.589 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
164.589 277.152 mo
164.589 277.152 li
167.923 277.152 li
167.923 277.152 li
164.589 277.152 li
0 0 0 1 cmyk
@
grestore
167.923 277.152 mo
167.923 277.152 li
171.339 277.152 li
171.339 277.152 li
167.923 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
167.923 277.152 mo
167.923 277.152 li
171.339 277.152 li
171.339 277.152 li
167.923 277.152 li
0 0 0 1 cmyk
@
grestore
171.339 277.152 mo
171.339 277.152 li
174.673 277.152 li
174.673 277.152 li
171.339 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
171.339 277.152 mo
171.339 277.152 li
174.673 277.152 li
174.673 277.152 li
171.339 277.152 li
0 0 0 1 cmyk
@
grestore
174.673 277.152 mo
174.673 277.152 li
178.089 277.152 li
178.089 277.152 li
174.673 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
174.673 277.152 mo
174.673 277.152 li
178.089 277.152 li
178.089 277.152 li
174.673 277.152 li
0 0 0 1 cmyk
@
grestore
178.089 277.152 mo
178.089 277.152 li
181.423 277.152 li
181.423 277.152 li
178.089 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
178.089 277.152 mo
178.089 277.152 li
181.423 277.152 li
181.423 277.152 li
178.089 277.152 li
0 0 0 1 cmyk
@
grestore
181.423 277.152 mo
181.423 277.152 li
184.756 277.152 li
184.756 277.152 li
181.423 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
181.423 277.152 mo
181.423 277.152 li
184.756 277.152 li
184.756 277.152 li
181.423 277.152 li
0 0 0 1 cmyk
@
grestore
184.756 277.152 mo
184.756 277.152 li
188.173 277.152 li
188.173 277.152 li
184.756 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
184.756 277.152 mo
184.756 277.152 li
188.173 277.152 li
188.173 277.152 li
184.756 277.152 li
0 0 0 1 cmyk
@
grestore
188.173 277.152 mo
188.173 277.152 li
191.506 277.152 li
191.506 277.152 li
188.173 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
188.173 277.152 mo
188.173 277.152 li
191.506 277.152 li
191.506 277.152 li
188.173 277.152 li
0 0 0 1 cmyk
@
grestore
191.506 277.152 mo
191.506 277.152 li
194.923 277.152 li
194.923 277.152 li
191.506 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
191.506 277.152 mo
191.506 277.152 li
194.923 277.152 li
194.923 277.152 li
191.506 277.152 li
0 0 0 1 cmyk
@
grestore
194.923 277.152 mo
194.923 277.152 li
198.256 277.152 li
198.256 277.152 li
194.923 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
194.923 277.152 mo
194.923 277.152 li
198.256 277.152 li
198.256 277.152 li
194.923 277.152 li
0 0 0 1 cmyk
@
grestore
198.256 277.152 mo
198.256 277.152 li
201.589 277.152 li
201.589 277.152 li
198.256 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
198.256 277.152 mo
198.256 277.152 li
201.589 277.152 li
201.589 277.152 li
198.256 277.152 li
0 0 0 1 cmyk
@
grestore
201.589 277.152 mo
201.589 277.152 li
205.006 277.152 li
205.006 277.152 li
201.589 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
201.589 277.152 mo
201.589 277.152 li
205.006 277.152 li
205.006 277.152 li
201.589 277.152 li
0 0 0 1 cmyk
@
grestore
205.006 277.152 mo
205.006 277.152 li
208.339 277.152 li
208.339 277.152 li
205.006 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
205.006 277.152 mo
205.006 277.152 li
208.339 277.152 li
208.339 277.152 li
205.006 277.152 li
0 0 0 1 cmyk
@
grestore
208.339 277.152 mo
208.339 277.152 li
211.756 277.152 li
211.756 277.152 li
208.339 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
208.339 277.152 mo
208.339 277.152 li
211.756 277.152 li
211.756 277.152 li
208.339 277.152 li
0 0 0 1 cmyk
@
grestore
211.756 277.152 mo
211.756 277.152 li
215.089 277.152 li
215.089 277.152 li
211.756 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
211.756 277.152 mo
211.756 277.152 li
215.089 277.152 li
215.089 277.152 li
211.756 277.152 li
0 0 0 1 cmyk
@
grestore
215.089 277.152 mo
215.089 277.152 li
218.423 277.152 li
218.423 277.152 li
215.089 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
215.089 277.152 mo
215.089 277.152 li
218.423 277.152 li
218.423 277.152 li
215.089 277.152 li
0 0 0 1 cmyk
@
grestore
218.423 277.152 mo
218.423 277.152 li
221.839 277.152 li
221.839 277.152 li
218.423 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
218.423 277.152 mo
218.423 277.152 li
221.839 277.152 li
221.839 277.152 li
218.423 277.152 li
0 0 0 1 cmyk
@
grestore
221.839 277.152 mo
221.839 277.152 li
225.173 277.152 li
225.173 277.152 li
221.839 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
221.839 277.152 mo
221.839 277.152 li
225.173 277.152 li
225.173 277.152 li
221.839 277.152 li
0 0 0 1 cmyk
@
grestore
225.173 277.152 mo
225.173 277.152 li
228.506 277.152 li
228.506 277.152 li
225.173 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
225.173 277.152 mo
225.173 277.152 li
228.506 277.152 li
228.506 277.152 li
225.173 277.152 li
0 0 0 1 cmyk
@
grestore
228.589 277.152 mo
228.589 277.152 li
231.923 277.152 li
231.923 277.152 li
228.589 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
228.589 277.152 mo
228.589 277.152 li
231.923 277.152 li
231.923 277.152 li
228.589 277.152 li
0 0 0 1 cmyk
@
grestore
231.923 277.152 mo
231.923 277.152 li
235.256 277.152 li
235.256 277.152 li
231.923 277.152 li
cp
ef
gsave
35.0059 277.235 mo
237.089 277.235 li
237.089 31.9019 li
35.0059 31.9019 li
35.0059 277.235 li
cp
clp
231.923 277.152 mo
231.923 277.152 li
235.256 277.152 li
235.256 277.152 li
231.923 277.152 li
0 0 0 1 cmyk
@
235.256 277.152 mo
235.256 277.152 li
238.673 277.152 li
238.673 277.152 li
235.256 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
238.673 277.152 mo
238.673 277.152 li
242.006 277.152 li
242.006 277.152 li
238.673 277.152 li
235.256 277.152 mo
235.256 277.152 li
238.673 277.152 li
238.673 277.152 li
235.256 277.152 li
0 0 0 1 cmyk
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C36E13383F0ADFA95D33EE056CB0BBB6CC378
E318C596010C9D5017C58301E152F1312F120666FCA193F34BAFF9A7728E2D88
CF2F8599A92CC219CC18> |-
/parenright <1C60D8A8C9B81F2C36E13383F0ADFA95EB0D3347CF7699AF86D
05C9DA64C44D4B9C1DA244854703B576B8CF89DADBBDF27E06BFB9FAEAE6B7E8
4B7BDD623857D8CDD1880> |-
/period <1C60D8A8C9B854D088E8E1B4A929D159FDB35EBB0A92B2CB5440> |-
/colon <1C60D8A8C9B854D088E8E1AEAD30C92AB0D98EADF1DE7A77B7CB74CD
7251B14F346AB2E7541FDEE4> |-
/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6
C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/N <1C60D8A8C9B6079F1E210C2F9CEEC55EA27709010CA5156BDE4F7169DCD8
3D1487618C13D4BC4EBB77DC3BF6CD15F7D9F6F5FB65B0AD46AE56999C41B6BE
7783> |-
/P <1C60D8A8C9B64EDF881FD1B4CC946498DA3C19C25C4B8520933678924FDE
4A210BE068A66633EA9CF0A18FC1E10710CF47869E1E8874BE0332D5C37713DD
48920646AEDE175969913994AE21EF> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA83C2CBBCD89A1827
CC58FDC85A8DFB6CF043CBC57E481A1BFB4AC131B9751770056C0E80F4764323
078BDA58184A405EE51A0CD263897356EBA37F07634C62A89D13BD3B9631D5DF
BA5DD765A30358A68432555538AB46A7C75E0621846302615DAD8C2BCBD5C891
F7CA482BF295A57FBDF509BCB98518A5F92E5A0834955E87097681F276DFB2BB
C57A72F7985B1447C571181C1100> |-
/T <1C60D8A8C9B7D8BE6A7F943CDC3019E149794C62C67E95CB9BEBC64B60FE
82B0D5A6D777E5507BCD588EFFC6> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/b <1C60D8A8C9B7EF32A0BAF052F4A11438CAFCB48F4C396042BF866BE8E82F
26FC7115DBB5EE0E1BB83BA69BFB5DE0068AD3D9103722CCF3E57A2C64E12726
11CA3A2683A3B3DFD607F64B47193159F98505186356F2F1E38248219D41C254
6A169E33C523D74C748EEDDBED937DB1C7FC1CF9202B5D483D8F3FCD88FA010F
6F30F959D0AAF6130B868B0D555B121294F12877355AC0F26F517E55F24B13B9
A4DD96BBD5EE126BF3B2ED36396ADA1215928BC9CA863AB2C07825005E23DC14> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/f <1C60D8A8C9B854D088BD32B2AA38E03C8785A8768DD979031AA73FC70D55
2CF02916FA7DE01DC71A342AE3C3D8B4BA7C5EA263728006A3D26B7AF13FD368
6CACD62B8F7144E8E8E2621662105D> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0
AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C
76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/l <1C60D8A8C9B88C080EC3D3ACA1AA9447BE5E1701C51D0B115EA96EF55CA0
1BE9> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406F39649904C93FB995842FF4F
905303BC539ACCA2C59EF4E92154BC352DE1B2C6DB4CB6E3884264B47C364E86
DCEC9778067A27BA6B7FC77EF169DFF24E447A16EC0025E89AD61026519DC7DE
3FD2BBBB9D1BA4C5E00D1949A9B69D4C9D685972B7816073A3E2DB2424> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/q <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7C1606B5E4B0CC1666D106C
062CBF25548C316EFAE3CD807215447DEE7459A9D1F79881E23A7CD97C235819
3B2CF61D474D654F5D11A16B0F4A55DC2C0EBE047696753569C42AFD2B22ECAE
0F067510265AB7C26184F3B68C845BB80CAB35D9CABF5FAFF5C3DB638C995B15
CF9621519C> |-
/r <1C60D8A8C9B81F2C46C810F818CC6D7FA9350962F8DF74B0F191B25EF39D
AC43ECC82A5155465999170893BB853FBDB2F1E5E6657B1704EB4EA080223F79
E5CD0E9024AC9DE64C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
/y <1C60D8A8C9B7A73DB586573D0143E2E2EB266405878D13EB5178E980580E
E34E00DA19422A72DCE39FC8746C906A82F0D18274DE7C57C5AA7DE9B1C0476C
26232AA473D126647E5869BB9E625C6F0B80039513DF974CEDB4BBE2EBF37417
CC806EA3A212999CEE3BA341C36ED5FB23F320> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 58 /colon put
dup 69 /E put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 10{/.notdef}rp /E 7{/.notdef}rp /M /N 
/.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b 
/.notdef /d /e /f /g /.notdef /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u 3{/.notdef}rp /y 134{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
76.4258 301.146 mo
(Mea)sh
95.8755 301.146 mo
(n Squared Error\(MSE\))
[5.56006 2.78027 6.66992 5.56006 5.56006 5.55957 3.33008 5.56006 5.56006 2.77979 6.66992 3.33008 
3.33008 5.56006 3.32959 3.33008 8.33008 6.66992 6.66992 0 ]xsh
AURNCW+Helvetica*1 [0 -10 -10 0 0 0 ]msf
8.58984 195.975 mo
(Number of Profile)
[-7.21973 -5.56055 -8.3291 -5.56055 -5.55957 -3.33008 -2.78027 -5.56006 -2.77979 -2.77979 -6.66992 -3.33008 
-5.56006 -2.77979 -2.22021 -2.21973 0 ]ysh
8.58984 118.178 mo
(s)sh
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
81.2539 23.9824 mo
(Tying )sh
108.484 23.9824 mo
(up multiple profile)
[5.55957 5.56006 2.78027 8.32959 5.56006 2.22021 2.77979 2.21973 5.56006 2.21973 5.56006 2.78027 
5.56006 3.32959 5.56006 2.78027 2.21973 2.21973 0 ]xsh
186.855 23.9824 mo
(s)sh
136.004 59.8965 mo
(mea)sh
155.454 59.8965 mo
(n: 0.838941)
[5.56006 2.78027 2.77979 5.56006 2.78027 5.55957 5.56006 5.56006 5.56006 5.56006 0 ]xsh
136.004 75.4043 mo
(med)sh
155.454 75.4043 mo
(ian: 0.197887)
[2.22021 5.56006 5.55957 2.78027 2.77979 5.56006 2.78027 5.56006 5.55957 5.56006 5.56006 5.56006 
0 ]xsh
300.756 277.152 mo
300.756 31.9019 li
502.756 31.9019 li
502.756 277.152 li
300.756 277.152 li
cp
0 0 0 0 cmyk
ef
300.756 277.152 mo
300.756 31.9019 li
502.756 31.9019 li
502.756 277.152 li
300.756 277.152 li
@
317.59 31.9019 mo
317.59 34.3184 li
317.59 277.152 mo
317.59 274.652 li
300.756 277.152 mo
300.756 31.9019 li
300.756 277.152 mo
502.756 277.152 li
300.756 277.152 mo
300.756 31.9019 li
502.756 277.152 mo
502.756 31.9019 li
300.756 277.152 mo
502.756 277.152 li
300.756 31.9019 mo
502.756 31.9019 li
0 0 0 1 cmyk
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
314.84 289.24 mo
(0)sh
351.256 31.9019 mo
351.256 34.3184 li
351.256 277.152 mo
351.256 274.652 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
348.504 289.24 mo
(1)sh
384.922 31.9019 mo
384.922 34.3184 li
384.922 277.152 mo
384.922 274.652 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
382.168 289.24 mo
(2)sh
418.588 31.9019 mo
418.588 34.3184 li
418.588 277.152 mo
418.588 274.652 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
415.832 289.24 mo
(3)sh
452.256 31.9019 mo
452.256 34.3184 li
452.256 277.152 mo
452.256 274.652 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
449.504 289.24 mo
(4)sh
485.922 31.9019 mo
485.922 34.3184 li
485.922 277.152 mo
485.922 274.652 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
483.168 289.24 mo
(5)sh
502.756 277.152 mo
500.256 277.152 li
300.756 277.152 mo
303.172 277.152 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
292.34 280.811 mo
(0)sh
502.756 252.568 mo
500.256 252.568 li
300.756 252.568 mo
303.172 252.568 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 256.232 mo
(10)
[5.55957 0 ]xsh
502.756 228.068 mo
500.256 228.068 li
300.756 228.068 mo
303.172 228.068 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 231.74 mo
(20)
[5.55957 0 ]xsh
502.756 203.568 mo
500.256 203.568 li
300.756 203.568 mo
303.172 203.568 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 207.24 mo
(30)
[5.55957 0 ]xsh
502.756 178.985 mo
500.256 178.985 li
300.756 178.985 mo
303.172 178.985 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 182.646 mo
(40)
[5.55957 0 ]xsh
502.756 154.485 mo
500.256 154.485 li
300.756 154.485 mo
303.172 154.485 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 158.146 mo
(50)
[5.55957 0 ]xsh
502.756 129.985 mo
500.256 129.985 li
300.756 129.985 mo
303.172 129.985 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 133.654 mo
(60)
[5.55957 0 ]xsh
502.756 105.402 mo
500.256 105.402 li
300.756 105.402 mo
303.172 105.402 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 109.061 mo
(70)
[5.55957 0 ]xsh
502.756 80.9019 mo
500.256 80.9019 li
300.756 80.9019 mo
303.172 80.9019 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 84.5605 mo
(80)
[5.55957 0 ]xsh
502.756 56.4019 mo
500.256 56.4019 li
300.756 56.4019 mo
303.172 56.4019 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
286.754 60.0684 mo
(90)
[5.55957 0 ]xsh
502.756 31.9019 mo
500.256 31.9019 li
300.756 31.9019 mo
303.172 31.9019 li
@
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
281.176 35.5684 mo
(100)
[5.55957 5.56055 0 ]xsh
300.756 277.152 mo
300.756 31.9019 li
502.756 277.152 mo
502.756 31.9019 li
300.756 277.152 mo
502.756 277.152 li
300.756 31.9019 mo
502.756 31.9019 li
@
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
315.84 277.152 mo
315.84 240.318 li
319.256 240.318 li
319.256 277.152 li
315.84 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
315.84 277.152 mo
315.84 240.318 li
319.256 240.318 li
319.256 277.152 li
315.84 277.152 li
0 0 0 1 cmyk
@
grestore
319.256 277.152 mo
319.256 58.8184 li
322.59 58.8184 li
322.59 277.152 li
319.256 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
319.256 277.152 mo
319.256 58.8184 li
322.59 58.8184 li
322.59 277.152 li
319.256 277.152 li
0 0 0 1 cmyk
@
grestore
322.59 277.152 mo
322.59 127.485 li
326.006 127.485 li
326.006 277.152 li
322.59 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
322.59 277.152 mo
322.59 127.485 li
326.006 127.485 li
326.006 277.152 li
322.59 277.152 li
0 0 0 1 cmyk
@
grestore
326.006 277.152 mo
326.006 218.235 li
329.34 218.235 li
329.34 277.152 li
326.006 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
326.006 277.152 mo
326.006 218.235 li
329.34 218.235 li
329.34 277.152 li
326.006 277.152 li
0 0 0 1 cmyk
@
grestore
329.34 277.152 mo
329.34 257.485 li
332.672 257.485 li
332.672 277.152 li
329.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
329.34 277.152 mo
329.34 257.485 li
332.672 257.485 li
332.672 277.152 li
329.34 277.152 li
0 0 0 1 cmyk
@
grestore
332.672 277.152 mo
332.672 252.568 li
336.088 252.568 li
336.088 277.152 li
332.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
332.672 277.152 mo
332.672 252.568 li
336.088 252.568 li
336.088 277.152 li
332.672 277.152 li
0 0 0 1 cmyk
@
grestore
336.09 277.152 mo
336.09 240.318 li
339.422 240.318 li
339.422 277.152 li
336.09 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
336.09 277.152 mo
336.09 240.318 li
339.422 240.318 li
339.422 277.152 li
336.09 277.152 li
0 0 0 1 cmyk
@
grestore
339.422 277.152 mo
339.422 250.152 li
342.84 250.152 li
342.84 277.152 li
339.422 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
339.422 277.152 mo
339.422 250.152 li
342.84 250.152 li
342.84 277.152 li
339.422 277.152 li
0 0 0 1 cmyk
@
grestore
342.838 277.152 mo
342.838 250.152 li
346.172 250.152 li
346.172 277.152 li
342.838 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
342.838 277.152 mo
342.838 250.152 li
346.172 250.152 li
346.172 277.152 li
342.838 277.152 li
0 0 0 1 cmyk
@
grestore
346.172 277.152 mo
346.172 250.152 li
349.506 250.152 li
349.506 277.152 li
346.172 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
346.172 277.152 mo
346.172 250.152 li
349.506 250.152 li
349.506 277.152 li
346.172 277.152 li
0 0 0 1 cmyk
@
grestore
349.506 277.152 mo
349.506 262.402 li
352.922 262.402 li
352.922 277.152 li
349.506 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
349.506 277.152 mo
349.506 262.402 li
352.922 262.402 li
352.922 277.152 li
349.506 277.152 li
0 0 0 1 cmyk
@
grestore
352.922 277.152 mo
352.922 274.652 li
356.256 274.652 li
356.256 277.152 li
352.922 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
352.922 277.152 mo
352.922 274.652 li
356.256 274.652 li
356.256 277.152 li
352.922 277.152 li
0 0 0 1 cmyk
@
grestore
356.256 277.152 mo
356.256 257.485 li
359.672 257.485 li
359.672 277.152 li
356.256 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
356.256 277.152 mo
356.256 257.485 li
359.672 257.485 li
359.672 277.152 li
356.256 277.152 li
0 0 0 1 cmyk
@
grestore
359.672 277.152 mo
359.672 274.652 li
363.006 274.652 li
363.006 277.152 li
359.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
359.672 277.152 mo
359.672 274.652 li
363.006 274.652 li
363.006 277.152 li
359.672 277.152 li
0 0 0 1 cmyk
@
grestore
363.006 277.152 mo
363.006 274.652 li
366.34 274.652 li
366.34 277.152 li
363.006 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
363.006 277.152 mo
363.006 274.652 li
366.34 274.652 li
366.34 277.152 li
363.006 277.152 li
0 0 0 1 cmyk
@
grestore
366.34 277.152 mo
366.34 264.818 li
369.756 264.818 li
369.756 277.152 li
366.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
366.34 277.152 mo
366.34 264.818 li
369.756 264.818 li
369.756 277.152 li
366.34 277.152 li
0 0 0 1 cmyk
@
grestore
369.756 277.152 mo
369.756 269.735 li
373.09 269.735 li
373.09 277.152 li
369.756 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
369.756 277.152 mo
369.756 269.735 li
373.09 269.735 li
373.09 277.152 li
369.756 277.152 li
0 0 0 1 cmyk
@
grestore
373.09 277.152 mo
373.09 269.735 li
376.506 269.735 li
376.506 277.152 li
373.09 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
373.09 277.152 mo
373.09 269.735 li
376.506 269.735 li
376.506 277.152 li
373.09 277.152 li
0 0 0 1 cmyk
@
grestore
376.506 277.152 mo
376.506 277.152 li
379.84 277.152 li
379.84 277.152 li
376.506 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
376.506 277.152 mo
376.506 277.152 li
379.84 277.152 li
379.84 277.152 li
376.506 277.152 li
0 0 0 1 cmyk
@
grestore
379.84 277.152 mo
379.84 274.652 li
383.172 274.652 li
383.172 277.152 li
379.84 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
379.84 277.152 mo
379.84 274.652 li
383.172 274.652 li
383.172 277.152 li
379.84 277.152 li
0 0 0 1 cmyk
@
grestore
383.172 277.152 mo
383.172 274.652 li
386.59 274.652 li
386.59 277.152 li
383.172 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
383.172 277.152 mo
383.172 274.652 li
386.59 274.652 li
386.59 277.152 li
383.172 277.152 li
0 0 0 1 cmyk
@
grestore
386.59 277.152 mo
386.59 269.735 li
389.922 269.735 li
389.922 277.152 li
386.59 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
386.59 277.152 mo
386.59 269.735 li
389.922 269.735 li
389.922 277.152 li
386.59 277.152 li
0 0 0 1 cmyk
@
grestore
389.922 277.152 mo
389.922 277.152 li
393.34 277.152 li
393.34 277.152 li
389.922 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
389.922 277.152 mo
389.922 277.152 li
393.34 277.152 li
393.34 277.152 li
389.922 277.152 li
0 0 0 1 cmyk
@
grestore
393.34 277.152 mo
393.34 267.318 li
396.672 267.318 li
396.672 277.152 li
393.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
393.34 277.152 mo
393.34 267.318 li
396.672 267.318 li
396.672 277.152 li
393.34 277.152 li
0 0 0 1 cmyk
@
grestore
396.672 277.152 mo
396.672 269.735 li
400.006 269.735 li
400.006 277.152 li
396.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
396.672 277.152 mo
396.672 269.735 li
400.006 269.735 li
400.006 277.152 li
396.672 277.152 li
0 0 0 1 cmyk
@
grestore
400.006 277.152 mo
400.006 269.735 li
403.422 269.735 li
403.422 277.152 li
400.006 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
400.006 277.152 mo
400.006 269.735 li
403.422 269.735 li
403.422 277.152 li
400.006 277.152 li
0 0 0 1 cmyk
@
grestore
403.422 277.152 mo
403.422 277.152 li
406.756 277.152 li
406.756 277.152 li
403.422 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
403.422 277.152 mo
403.422 277.152 li
406.756 277.152 li
406.756 277.152 li
403.422 277.152 li
0 0 0 1 cmyk
@
grestore
406.756 277.152 mo
406.756 269.735 li
410.172 269.735 li
410.172 277.152 li
406.756 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
406.756 277.152 mo
406.756 269.735 li
410.172 269.735 li
410.172 277.152 li
406.756 277.152 li
0 0 0 1 cmyk
@
grestore
410.172 277.152 mo
410.172 272.235 li
413.506 272.235 li
413.506 277.152 li
410.172 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
410.172 277.152 mo
410.172 272.235 li
413.506 272.235 li
413.506 277.152 li
410.172 277.152 li
0 0 0 1 cmyk
@
grestore
413.506 277.152 mo
413.506 269.735 li
416.84 269.735 li
416.84 277.152 li
413.506 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
413.506 277.152 mo
413.506 269.735 li
416.84 269.735 li
416.84 277.152 li
413.506 277.152 li
0 0 0 1 cmyk
@
grestore
416.84 277.152 mo
416.84 277.152 li
420.256 277.152 li
420.256 277.152 li
416.84 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
416.84 277.152 mo
416.84 277.152 li
420.256 277.152 li
420.256 277.152 li
416.84 277.152 li
0 0 0 1 cmyk
@
grestore
420.256 277.152 mo
420.256 272.235 li
423.59 272.235 li
423.59 277.152 li
420.256 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
420.256 277.152 mo
420.256 272.235 li
423.59 272.235 li
423.59 277.152 li
420.256 277.152 li
0 0 0 1 cmyk
@
grestore
423.59 277.152 mo
423.59 272.235 li
427.006 272.235 li
427.006 277.152 li
423.59 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
423.59 277.152 mo
423.59 272.235 li
427.006 272.235 li
427.006 277.152 li
423.59 277.152 li
0 0 0 1 cmyk
@
grestore
427.006 277.152 mo
427.006 274.652 li
430.34 274.652 li
430.34 277.152 li
427.006 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
427.006 277.152 mo
427.006 274.652 li
430.34 274.652 li
430.34 277.152 li
427.006 277.152 li
0 0 0 1 cmyk
@
grestore
430.34 277.152 mo
430.34 274.652 li
433.672 274.652 li
433.672 277.152 li
430.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
430.34 277.152 mo
430.34 274.652 li
433.672 274.652 li
433.672 277.152 li
430.34 277.152 li
0 0 0 1 cmyk
@
grestore
433.672 277.152 mo
433.672 277.152 li
437.09 277.152 li
437.09 277.152 li
433.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
433.672 277.152 mo
433.672 277.152 li
437.09 277.152 li
437.09 277.152 li
433.672 277.152 li
0 0 0 1 cmyk
@
grestore
437.09 277.152 mo
437.09 277.152 li
440.422 277.152 li
440.422 277.152 li
437.09 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
437.09 277.152 mo
437.09 277.152 li
440.422 277.152 li
440.422 277.152 li
437.09 277.152 li
0 0 0 1 cmyk
@
grestore
440.422 277.152 mo
440.422 277.152 li
443.84 277.152 li
443.84 277.152 li
440.422 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
440.422 277.152 mo
440.422 277.152 li
443.84 277.152 li
443.84 277.152 li
440.422 277.152 li
0 0 0 1 cmyk
@
grestore
443.84 277.152 mo
443.84 277.152 li
447.172 277.152 li
447.172 277.152 li
443.84 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
443.84 277.152 mo
443.84 277.152 li
447.172 277.152 li
447.172 277.152 li
443.84 277.152 li
0 0 0 1 cmyk
@
grestore
447.172 277.152 mo
447.172 269.735 li
450.506 269.735 li
450.506 277.152 li
447.172 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
447.172 277.152 mo
447.172 269.735 li
450.506 269.735 li
450.506 277.152 li
447.172 277.152 li
0 0 0 1 cmyk
@
grestore
450.506 277.152 mo
450.506 277.152 li
453.922 277.152 li
453.922 277.152 li
450.506 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
450.506 277.152 mo
450.506 277.152 li
453.922 277.152 li
453.922 277.152 li
450.506 277.152 li
0 0 0 1 cmyk
@
grestore
453.922 277.152 mo
453.922 274.652 li
457.256 274.652 li
457.256 277.152 li
453.922 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
453.922 277.152 mo
453.922 274.652 li
457.256 274.652 li
457.256 277.152 li
453.922 277.152 li
0 0 0 1 cmyk
@
grestore
457.256 277.152 mo
457.256 277.152 li
460.672 277.152 li
460.672 277.152 li
457.256 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
457.256 277.152 mo
457.256 277.152 li
460.672 277.152 li
460.672 277.152 li
457.256 277.152 li
0 0 0 1 cmyk
@
grestore
460.672 277.152 mo
460.672 277.152 li
464.006 277.152 li
464.006 277.152 li
460.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
460.672 277.152 mo
460.672 277.152 li
464.006 277.152 li
464.006 277.152 li
460.672 277.152 li
0 0 0 1 cmyk
@
grestore
464.006 277.152 mo
464.006 274.652 li
467.34 274.652 li
467.34 277.152 li
464.006 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
464.006 277.152 mo
464.006 274.652 li
467.34 274.652 li
467.34 277.152 li
464.006 277.152 li
0 0 0 1 cmyk
@
grestore
467.34 277.152 mo
467.34 277.152 li
470.756 277.152 li
470.756 277.152 li
467.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
467.34 277.152 mo
467.34 277.152 li
470.756 277.152 li
470.756 277.152 li
467.34 277.152 li
0 0 0 1 cmyk
@
grestore
470.756 277.152 mo
470.756 277.152 li
474.09 277.152 li
474.09 277.152 li
470.756 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
470.756 277.152 mo
470.756 277.152 li
474.09 277.152 li
474.09 277.152 li
470.756 277.152 li
0 0 0 1 cmyk
@
grestore
474.09 277.152 mo
474.09 277.152 li
477.506 277.152 li
477.506 277.152 li
474.09 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
474.09 277.152 mo
474.09 277.152 li
477.506 277.152 li
477.506 277.152 li
474.09 277.152 li
0 0 0 1 cmyk
@
grestore
477.506 277.152 mo
477.506 277.152 li
480.84 277.152 li
480.84 277.152 li
477.506 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
477.506 277.152 mo
477.506 277.152 li
480.84 277.152 li
480.84 277.152 li
477.506 277.152 li
0 0 0 1 cmyk
@
grestore
480.84 277.152 mo
480.84 277.152 li
484.172 277.152 li
484.172 277.152 li
480.84 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
480.84 277.152 mo
480.84 277.152 li
484.172 277.152 li
484.172 277.152 li
480.84 277.152 li
0 0 0 1 cmyk
@
grestore
484.172 277.152 mo
484.172 277.152 li
487.59 277.152 li
487.59 277.152 li
484.172 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
484.172 277.152 mo
484.172 277.152 li
487.59 277.152 li
487.59 277.152 li
484.172 277.152 li
0 0 0 1 cmyk
@
grestore
487.59 277.152 mo
487.59 272.235 li
490.922 272.235 li
490.922 277.152 li
487.59 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
487.59 277.152 mo
487.59 272.235 li
490.922 272.235 li
490.922 277.152 li
487.59 277.152 li
0 0 0 1 cmyk
@
grestore
490.922 277.152 mo
490.922 277.152 li
494.34 277.152 li
494.34 277.152 li
490.922 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
490.922 277.152 mo
490.922 277.152 li
494.34 277.152 li
494.34 277.152 li
490.922 277.152 li
0 0 0 1 cmyk
@
grestore
494.34 277.152 mo
494.34 277.152 li
497.672 277.152 li
497.672 277.152 li
494.34 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
494.34 277.152 mo
494.34 277.152 li
497.672 277.152 li
497.672 277.152 li
494.34 277.152 li
0 0 0 1 cmyk
@
grestore
497.672 277.152 mo
497.672 277.152 li
501.006 277.152 li
501.006 277.152 li
497.672 277.152 li
cp
ef
gsave
300.756 277.235 mo
502.84 277.235 li
502.84 31.9019 li
300.756 31.9019 li
300.756 277.235 li
cp
clp
497.672 277.152 mo
497.672 277.152 li
501.006 277.152 li
501.006 277.152 li
497.672 277.152 li
0 0 0 1 cmyk
@
501.006 277.152 mo
501.006 277.152 li
504.422 277.152 li
504.422 277.152 li
501.006 277.152 li
cp
1 .979614 .416175 .000335693 cmyk
ef
504.422 277.152 mo
504.422 277.152 li
507.756 277.152 li
507.756 277.152 li
504.422 277.152 li
501.006 277.152 mo
501.006 277.152 li
504.422 277.152 li
504.422 277.152 li
501.006 277.152 li
0 0 0 1 cmyk
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
AURNCW+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/U <1C60D8A8C9B6079FED21EC1DF5B8637056E6A2B0E5EBEA8ACB7104208DD9
1B715B873659C6BAEBA62BB70022E9773B6B7CDCD92842D8544FD2216A05DBB8
5F126B91461CA1CD75> |-
systemdict /gcheck known {setglobal} if end {end} if
end
AURNCW+Helvetica /Encoding get
dup 85 /U put
pop
%ADOEndSubsetFont
/AURNCW+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 10{/.notdef}rp /E 7{/.notdef}rp /M /N 
/.notdef /P 2{/.notdef}rp /S /T /U 11{/.notdef}rp /a 
/b /.notdef /d /e /f /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
AURNCW+Helvetica nf
AURNCW+Helvetica*1 [10 0 0 -10 0 0 ]msf
342.176 301.146 mo
(Mean Squared Error\(MSE\))
[8.33008 5.55957 5.56055 5.55957 2.78027 6.66992 5.55957 5.56055 5.55957 3.33008 5.55957 5.56055 
2.78027 6.66992 3.3291 3.33008 5.56055 3.33008 3.3291 8.33008 6.66992 6.66992 0 ]xsh
359.418 23.9824 mo
(Usin)sh
379.418 23.9824 mo
(g single profile)
[5.55957 2.78027 5 2.21973 5.55957 5.56055 2.21973 5.55957 2.78027 5.56055 3.3291 5.56055 
2.78027 2.21973 2.21973 0 ]xsh
401.754 59.8965 mo
(mean: 0.972956)
[8.33008 5.55957 5.56055 5.55957 2.78027 2.78027 5.55957 2.78027 5.55957 5.56055 5.55957 5.56055 
5.55957 0 ]xsh
401.754 75.4043 mo
(median: 0.256946)
[8.33008 5.55957 5.56055 2.21973 5.55957 5.56055 2.7793 2.78027 5.56055 2.7793 5.56055 5.55957 
5.56055 5.55957 5.56055 0 ]xsh
.90625 .878906 .875 .789063 cmyk
%ADOBeginSubsetFont: Arial-BoldMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Arial-BoldMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 66 /B put
def
/FontBBox {-628 -376 2000 1018} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
/A <1C60D8A8C9B6079F6DCA0663EB737730AA5B536F6C6DD813B60E66ABDF76
C173FB0AA7AA75663A2785C98A4A4A611F61872CB7CA29BB> |-
/B <1C60D8A8C9B6079F41181ADFF82FD511AE28F2C86910E87A2408036CAE22
0A294923EA0E343A2E6A98A318DE85DC7C76B01F1EC3BBDAB8243406F64AA60E
C47C4740DC38CA972359346DC4F829F6F2F025BAF490F6C12F4FDEE6E00BC027
18C2A815AF9445D30C8E56633A71FE0D0177EB4631ACBF3247225C96DE555742
F231ACF12ABFAF7923DBF44FBF12BDB4408FA2F2BAEBD8E7E077E25AB5122D52
C15E7FE3C32CA90E2552D23E0B4ABA9EE9903B7FFBC9DA58DB417DC8D58F11CC
4F5D7250D4EBACD68EE666FFFB942A580FB288> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/AURNCX+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/AURNCX+Arial-BoldMT*1 
[65{/.notdef}rp /A /B 189{/.notdef}rp]
AURNCX+Arial-BoldMT nf
AURNCX+Arial-BoldMT*1 [21.3183 0 0 -21.3183 0 0 ]msf
276.176 18.2896 mo
(B)sh
8.58984 18.2891 mo
(A)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/AURNCW+Helvetica*1 uf
/AURNCW+Helvetica uf
/Helvetica uf
/AURNCX+Arial-BoldMT*1 uf
/AURNCX+Arial-BoldMT uf
/Arial-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (multiple_vs_single.eps)
%%CreationDate: 2/14/2015 6:22 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.a_ioXdNI]F!Vd/!#)Y3Pi2hLh9M1O;c1=2_Pf-@f<$]f'k?kXU??fnr',pA7gTU\\mH"kR@J%E4eG&e[S<6rWPuXoJUq4n>
%rXOrVZ*H,?,9e?W+sSkO[L/e_YgXP?'LmSsY)/Q(+dH;*`5T,PReQ`g[8lO`G:0s[;'Eh'TOB[@j>3aBJA+UL%r!XG-IQmYY;C"?
%#2S7F.?3';aeUo]O/,?jXnYD%\9?[(5YkR!GMR^toTusP^X`<mhl2Qh;q*]Yoih;b@FX`c?c(jM>-6QZ]fYVh>AWV`fm)<@FZYW?
%b1@:[Q!V40)+fJ3FH%*2*<)6??4+#F^N2.L]QL(;=u%\fn&6)*nuE'81)`<'`o!\#l3$\/7<^d]GX5`2S#t]?h%;a-ll%PWkC<9]
%^]!'hrr;ofhuEMert#//T:Z1lF(mHP[%oA=!<&8*,bdVo'A(ZP5+9c9]\MkZ3uI]rdk8YTO@_kSCN4nm5FKj).@M5o##gGt:S(3)
%&8B(]&Ee_S[#g-AdKqrrPt^#kHelGIf:#,`j3)bF,3(1,9eUhmKVm)9iuCR<b)ah\rN:6"liH+f?o-m:j&)`/7q5Q2W:X:9nha2c
%l;+t0AP;m`:(a[hqQjmS1sE,!'e"kdNRf1WM#hWXmLCm?f6G@K1!Qnu;fP(0Qq4BVdg.["$m@4(nU+48b,[bgY+Zs$L%_,?1,]_U
%:Slo<Dj[@'9YFE%?:Q;c$=T+q^lsSORK#)8IsJ,/k0n$g8-b2XXa&&D%Mq:BOC;CC,5)taH@6oC)I[#*%HAmZd83H;Ba_c%Uj0i)
%IpFT&1$q`_6Os&.7JN9E_Ttm[IMRk6>>^(2U'OO`&Y=k(H&CiZ?V;`>=Y^;5-'Q\,R=o1oA>MUSc"*JA-3J*?kT>7:PC[>6$oET4
%n.V6*MpSP-KNF(#GZ$(ZRn<jU<[u3:I_AX1#*fO@M%#g]R>cs;,Z!B!qHO`^lgP:N_7\\R1kU)$fofu%.JO3d?rHJ-c^ge_]F=C`
%TC<Xj$@Y<C"BhO9Qk]J:F,(:q29ZH$&tG*s5VncGr.Htn$@G@CKEk:,9lN[#"[C,0AG0O8AGB\W"?mkh,o(8`r]r?-,Q*4t#U.=6
%aYT?(n,\uo*%@]jC<4RP8,*C?_#t&d^e]7Fn.kkSAhZaM8VfsjKcl_@!+8]2^k8PT6qKn'88o*a#kBB]aR%"OnDMF8#\;@B,o^Pb
%s$7Tk+QZIf+F]m*S32Nd_G=i7GTGp;n3UH9T?mchLgHua:0/&o++Z^;S[(%_)Tm8Kn:Y?Y;p[s"BhP[+`^auD+;<hp_,J4tq2sW'
%1CBar:HBWEaZk(?A>'X]-F>-+,$e1;5JkS.l6l%nfBMR#f,7#C\df"Ddl!e=,(<hZ-G&bJC/\B<e:98NFQ1nPPgJC;+]HIXA+D+q
%F8-jTQ:3)Qrt>P+8Gu9^_;5CreDK=/H9IB5?`Cf^^Jp*gXo9[IdV88r3itYCbQ%-Ynjr^RrY5e$DtQ'bLL)X!aB.YFnul:FJ#g?+
%5>M#%bB]a(r$:n\J()0RDj[:20?+[dcVu>nWg)LjV34@F6E6F9.jYd9<_-6=jSK'5UsL%aoR30A$Y^b1Uf'eV)"j:H_Iq@<5H^6\
%3.-H.n/A[YUQ,Hh!)uSSF^B`f!-U[oc,jl\NdNl.a,SGYp^R8>khldF&)UgZn0djuN^JkT!Y:hlK1?U6H1EG5M7c;AV+UN*J4t8:
%Y6].E$4Ib4Osc&.-[=,b%KE1XVD7@,1Dg-LK$UBR4@(&3%=ZagUeM#F_TGun!3bE991"6S>,D<A-Gi99IS3.!0Hq/?jstHT(4C]\
%6!krE/Fd`.#sfX0HA2!LRO6OUn_Y5?hZ`E)^g.[A?Nq-kXM0uUmN,]\=M9<k/Z:JVrf>%8r7Cf-/mkN_`*AU-fu<4A%f\J8SOF_C
%N@8O]YJ+<U$,&t\MDR?pk^p$Y8cD1s6/M[dUIPV&)PoF(;3J`rAsS++fLDB$U:fJV6Y9>tPV/q@nJScf4InQF:s=l=2t@e8KN3Qr
%5^do7.D1m67G?\-`5@b6b8*;%jXPdo@]"h!"5cFLN&hdiBhVQ6W^IU3iAYFBT$c)dZELptkE,msX7?F#UOVA].W-q^6;'?^b4R27
%'Igb!@7<7&KT#//7SjagZkY80K]5*YOE#lJ9i08G;5l)Z.M>bGW[q8p4r$aN4EOGcZLi9?9J]tm'onOA?=IV?$&N?3&NUJ4''s##
%Eb*?9K?r",iXJ6ecLHLPLba1QhkLe1'kbGIGi3.VUEI>!lS:=tDGR2f?opbd.-h1rR?mQGdWQ['PkW^n!Vc`[W)#-DB1SI7>\"[t
%-O<K>gaSK;\JNeM^^aE06GlRg,%2klof9DD,`KsiLgYhgW@VoKqfUJhb]PDmZ1CuV:kA`[o@e-1lagYi+FGQ3E?8kWa<#pX]]/)#
%Pb>B`+I<ha);5.jK6a'$->P.^gR'.HTaM8M?I$?:M;U'W,LCkQEtDB4LkO:mojo#/A=(E]+uuKR89>97/fO8MU7CGC*LWH80<.AE
%`J*TJMTd<n7]!*X+^d5P=J6K`=>T<`MZSMl9Z@,[,8$^cFn/cp1=q\.Uhb['Rbec6SR=.440MJPK+Z2A$KIE53l>e:O\TKU$DE<h
%?o9^8,[bd1$Hu*qZ(aW,'.'.mhrQK5>XC4f%D/X8^mJ3U<JCl^!t3#6@?D"!AsSB9dBL'[![oQ!7-8XMC)'TF@3KSl!Q>CbH+hD*
%8u*DkcP_GT!23MeB=/NBN%(U^j`I"Y.n@uZ0jga2Yq_g"fu(9KH80N-Zddf+Sj8_ebE.B$(6uIB!NTSCY8It8*MK4V.^6;H>?!J>
%H%H[Q@qHiu2sh@<@Hj6.Dd>VFK@ef<6"ZY-oM>f>bBK3n?lW@Q.h]oWCU3,Z3f0VJ>;@%S3bU/720i\gbKcFXJu&o5/:pH!,-WnV
%:=#%W-)?G&7B[BQ7MM,C9KQZAbW$asN(MkMo9`rSf`Y<!0d2O1[AFUHc][hVoaX+l`!cmFBP]+LfatSj\4o7Z3+cP`FV0fIG[3-E
%'f[b;'>8E1UIZG%7Q2BZaJ.[g+Ra;=b&IRa1.DsEO`#\=![B<+i"En7!iG*?JTM')"f!]8@Kr3a(Q""S4A9<;Rcj0d$HNn$4H3EH
%>"^4%7psA,\Y$)8*?M9Ri.%sZ#SqsJ&gCq`,WeUe--"^lo+E2aQc)NTY)jCF>G3#CRYNGqADTp^O:ZKEC6"BMR]iZ3B.us`%?8J'
%Z%s1G8Q+-V.h7A'"<u'G+9`0k4A8U!'-8nO(Lo_;Uq=8r912c(Z4=[S]+>^B-/O/0#RUS[0ED:mQ:ck8'&>&54ILOcc`lm_838p_
%oFH$R6+3]@0ekd$%H/$W7m\+V:Fo_D"!B/k7RSI4Lfm\.B[d,Ho-2?nHKcrU@4FZU,t'ABfd:%$HP^W:1&0Zq&<OhNU'ROKZUQML
%<Y<cufT-gL%`]1G6YQPV_0:D15oC?e/qc&=_l,+`+=69$T9i8:U*?GVph*4]H)t'J:<W,AI&7Z"q?E=dON3(n8":-%[8WK-jaL.8
%?i%B$r@'0&2(p?^GtQa:TQboS?'m;T`M$G;W,A!4+tT\aJc:4-9$(s>p/@+eQ$Q0([R9HVUpa(TlZ(.8oQuiF&<k:Ya,?-!!W*?)
%%P*Sh,*Br-_/iZ_9n(93<_@O[WoPDE8jQ`fFRW6hC>dROdM9m<7ba*X)*O-Y10[dGAZ!-*bG,JN_/U%i&P2<,p7X1Lj0:"4lq3\J
%A;;+U>/i_'M.8nD;B(quZ/Pp)'6.uMi2<M*QLiTq'<%BD$-FuBZV[h_l$s\)q"l>fButOZ7o636XtIS8Z?.6rN/Eo?):o+]1OYO5
%!qV@ib-S-(Y'-f41@fmg$:7$'+;e<,0+3Z>nur4okOQ[QBE/VTE-P,Qesk*d5PgJ6Wdir>(Z"=lm.p%bo:),(IEtC3m\Df>k]bW6
%ak2BuqRm7Aos+'])QiNRa0^),9tIV(r^c;`ag[g"nm/`^mu8\X"?tCNI=-,_q%n>uC\OXuD"-<Mr\ZV%9%2,6Csj5F@MeEt1`F@t
%B"^Cr]AJ%/`_O]mHos^kL+cAQpp8KIpm`fVEDu]=H1X!^hbI\;@Ac!YN-,C#f<j/uFCS7Ke`fC_$L2H%"%ll@F^pui[,7EJH>@mP
%'>*T&\e:J%A1]\W\(V*.a`smMPGIWNr<N0D)1.Q:?es[F9Ci##-dsg(51Ud7s,d,B3q(ljDqH#'f2G!EiP3u^onT;Vm.6;.B6P2V
%&1Jr>C>DX$ct^J&&6][.@cRH(K&3"l@ai)N-8U=^hFNMu5G`7!q5`&;9tR[HClM5K1&P=TNTcFMCNhkRINNQ!Cc#,K5Q_q3-LFqX
%O!pQRLYoG(K\h9@T<8)SJK]M'=lV;)/<BT-Fd4<co*dMJ"M]4np3E#j/74DPjWVRbq"7`,^PmIf1U!.1pZePSSUdXpD<a`_o(4_]
%JcVT`:<<mAjFpOpKi9b(;rt^/X?Z*3qgZOZ-[jp0.ls@So(!Oens/ds*I2o*3Kar_FJT#tfXLi*efoWKF?V;=m1o`Y;EAN#FL8Wa
%2FU-&]\XsJGL`$W='aq$*bj.LXa1D3T$jKocnQdG8#5s:NbQGE0TqnRmr`rkpYZF2N#?n`7Nfr4j-_@br';B"0f&a$?[I76"H=X5
%:F$EW/gmtk2nO6b(s,-SYcscL&)/<7Z-0;`YRt]_E41Ohk%RN<PXIN;hKs4F8=%Xef.Nn&p[XAbf>SksTK+oX%Y7^\MQ&0uE0V$n
%HtW)k5UK<6&D/<Rp_9pjP;.NPIVJLgk[@I0c,TG8qoJAu+2>L4h/,rM)#^@MBC5?Y(]#A\k'n(*mSW'*O$\`E^I8Y2:+"T>#OtY*
%;ku]O6uA4`UTNB4?j!LYDb8bBneAcqs$XWZiO>$F9AT?)1f-7Vhj0&4GPe-ie$8HQ=tOMK/SXRIo4G`pCe8F;J^X:fOA)CJM[W42
%8#/i].aWfm>^hdQIgZRAUD1]]dN$UMkl2npSrfZU;:gdKg=_oH6mG4^66^B-Y`)r+D009pBYZ`N"KF?X>V#Hoju$R$J7kApo1?d2
%&np82dtpQd1F4&&JUd41i,.!49a3.j"HDU7.$3_I5'%!3!]<dm4.I2B8qs621.>n8q-:NONVY+I9MYZuS-+9j3c@<T*ZBlsLc_&L
%?CDL's6*rk)B4]08.iR;GlPPRE>;\K!C`L2pp8R1)4H)P!<sg,Gc2/f^=3]gTK67sD9RDT@hnNq0Ii8ZZJ@X9rsXW00ASL]6D@c4
%6p+\^\bJg5gAY>mo\LjhVKHao,d?6SDqI>X]pSJiY^$jn:F*2M`r?,VP!$rL0)qQ^^QEZ=1rKH#8>4]a3RU8W"oAJg^V]WHN[=dq
%#HM&s,.:ZFL-1(opZWcJ#cNb(%7bmcikO'MJApIQmFSV,etBVj7ZT3KK5nZ,4Qk9ji<Rb\^>L4hlX@8P^gDl\dkC@L?e0I>m<J$W
%M-K:jd)0qQoX9C``;AoTNp!mZ(fDI6K@(gmKXC,+U)@Lf-Qig\Psukc#P\u4-3!Q314KcrM;3UOEBO0thu1%aiSX\,J,&4,q8q;l
%3&6e@F_jRN`l=L/%<FO5)%;S\0:$4Nhjo@U"ONWV"Fs>j$OgnS1Y/J51u%6oJdP08dG9[r+M2!9d.o,Q7LP(RSg+c&Z3FV5=7gjh
%RJpDH#kG363fWKDHAU$&JDTd.Y78T*/a3fAMqd:3af*ZGH+^KGs6H=B6k(>26qb3PA6^=l2iJ^=-)pPZ[@7ms@G8+ROj,J#LN4nR
%/QPB?;BE`:.5Dt+a*uobo(%-#Rd?\9FYO&dJ[Xt7Xo;".$kF[3%>SUcb3e9;9XK<K_kZM!LD0B+-^[4K^$&3e0MWU\MesO7;bRru
%IC#V_-JBQL^UbFUPGCoSaV;oCK""4&1KsNVDuHi6Q/RD-s2g,d?79?6G:jZ(m@T$Q@@ll>A3(Y,$,k_^Z=nF0!^-k`:aB_EF6\76
%Fb9njB,f0H?;#S7rg,hMJ,]UAnk$UJrm+)n-b+8_!uj+@hJMp;VYuifBDUkKmW-K8L%H-@0e-du$/=]mG2Z!AdJR\,5K*bjb96-u
%pkPWTrUD8'(;9%NDH;70-Ah^IZU2O,0H+*=kA<%EMFOB<4sfqG31A_%97IkN!Xm20d7e;!nQdJk%]'6oFao9g%(ang#AIBm(eeQ+
%_/+4(Q\crY@p4Ws(R(5^Mg*tA:kOe'$Xh>MI-DHdA3?=GgU6l@b-EJ-\2rYVPjVlK=7&jl;TG*,YN9EGdFrjR@TRmUeCF;^YOhZ1
%S\Wt2&D<SKflZV638Udkp*M#o%qb2<%PA?Nk$)KL`iX5^>+>-g1Xrcjd`Vi.16l%\agackFZuU-#;uOZY)]]Y@8!''NET4mXUUW/
%crg`r+`5qH9gGIPaD0K'6g?-pAD:3a9_2d=+XYF&o'@30gTk=nD6/bK:Prj`BhCO;`RaPQf&T/M:PP*.WB9?:^N\9^]76C2PF'j)
%YMYiKTop%4#WDnJV/@fEO3!;[<B\AQE9`Y"4Qo];]f#,^5+>M4'44D/;I#IL1@hU(*;,%b]Lr.t?6>.@VrK6!-KBR@O5lNo(QSN6
%s4tHbqnN(GCZ'!>)YVluNRDsm!9EB"D!'%mRH\QY*!?5RgV4`!'@:8@c-`<l'?#q8AN9=>,j4XeF$biF#G]au9\e>`\[r(uUisL3
%7`5PToWN$AO>^"<$F<gRPfBKU]@%N9`l]5?V_F(l'a`'@aR;*#AaQVMD[kHYBRKUPs7nnXJ,efkrVaM,YQ+;\r6)!`FCW<g4O,p.
%ENPsWNB(mf`mQ-K;5sVS+*T*)MQjrA@njXt8Ps"UYFNn8@jJ<q?=N%X2nhaspb?Q4FOutVYp/j/"UGb_!Z*Q('YF>CKs<%#12(J5
%VnFr5Zs+7'6Gg+Q)?^;)L,E#&k"I1\`%ql1S>&HQPGe7p0@a@SY.)Le@O*<nlUZWfk*DgWJ&L\*pnQ7ZNMPmkYW)AG9RpK34%dO^
%5+7FOagJLs-_jojT!If"O8s8i?,1RXY>]RZj\.#$^2i&!oS='jR'rl6p1Z^CLV^0j12+qD*6.)RXI5:#=ZYubZNA]S2>nh"'M$NV
%oDT.QT#r>BkT"(PoOX?p=+t^Df]iD.U>$^u4"am?oV@<a+O"#L.-mB?b&lf\O\5/N43+^YmYmQ`!NoA@VIMYCr$^rld516%d98UJ
%h0uI`7ImYmdE)"/K\_C,g,;Ff<Zbk^VD[,f')[=]RVj([M,B:1Vn_fqb,jKuP5#qi$Omb4V;`:oo-p`j?=afs9<h;If"MRISgt/5
%\ZEd[:WKTGW[Ph"QAmDsFuKpDqmOb#RWGU[VF,o=!tdGR4u?jEkXCd?n-miE'TI^RIgn,!f7jQM2'YPiq,B&B1nr$b0q_+e2P,H2
%(G-m<b:QbrKc;ffA)#Q@a5D\UNY.EUD`2!j*BW+G3g8\Xg?KO1U89nQS$B]B:V$lTQuX_D(<+ZpV3iRFZj><8VX9Mql#mI\eQV<M
%1t=ea5EGk\**8.!(HE,^Q5"%,f+TB8i/5]8AGfW1Sm')B/7m2\nt<7ejt*Q7iuX,OK,8)>r7k6Va)+U`jm#11>a[F\<&M7OCA3iK
%7(nSB5k;=77OdMCD,9i)^2)NoCZX]4$fjTh47&(n*MSTO[`>#KSI#?h,DR,#Hdnh;N]gD7`Dd@Xm+:GQ3_#EhKIdNpXLWKSY1<!q
%1n/mc`c#PW?TPHmD^T\T'II*&U1D`[4mMcAQ,,\'eEL>5NX.SmU@0eV@'UFIU;[U4D\0Rl`omgnlUVqS<!.<G2oJ0>f[Y_&NWFDn
%K@,Z+d69m['uEh3[iTX+JO.dtf_oJ<Xq?ju0P1Wsf&hq>\VA!N%O\MreE<O?(<%&!'^HZ45$K&K!OD,'/T3<MLM2']Di(WnY*lTB
%fOfUR8%!dJOY_TIRRr\!;TBgZUS],S9hcNMr#oC71'Y#rD:OBZp9eUljH_Z&YkM@*nRp9j1iAB@>"l$=O'?^<:44n/=,.\C51_eu
%ersck#TCA4TUT`j4r^r4fS)/F[h4=*Ca9F<WAPYF/oY=RMOT`A'FW?s#LNR(6QmP[`iUDp6[_\eOG[9_+j&?@*Y@UH/</M5MQ/0D
%"%';mbNdE.NMo4I4nuoeKJP2Mdna0[rmmPK>%=<2@^(SO#%(4qh/6ltrZ3@5AlO7:D3&UkT5/?n1H""7-=(0B(#Vkf)ps<c>9P&)
%9O04$[9hWKR$25Kg*$r<]L=7DZ=,V8:O[jt'i&'RGCZgl6g*JJGFWkQfNN^B:hYn9HhN4anc2dQ[iq/:;`7q_SD2/m=\I#]5B#7a
%%k88]+TpM.e*2[G=^3Sp]!924!K%5O&!sZTn?2e0s3&1VgV<Q6s8Hs9h;A5#J,-SRj'T"grI=iKJ,_J-leh]^s3$ipd%+3jc@]s!
%O_N\;;s3a0lYOMnA/="cgW`A,BSK==Ch-/946_/%NR$o"FhB[/:tr9Ogl`DKQ47%3,1i?#VD`d*].^GDJQWYd(Q:j_WsM'j74We=
%$6iFs&e(7&S`iW06.lhh*<o]],DG0!,lJB^%49?>o');`@pm(o;/9d.)pr%lhH6J)AeX\1.)":lr7tt^PP2NDrkh'YO[e`sS?l>T
%B\McfPV85',*MV'@gD4Z)d5r9mrnEY&oKUY6kO(EN8#$1c7B_Y0;2B"m7l.('bq@YRl]7@^i%^0.Z5>'Y#/CA=_Z!f%G8Q]AF%pV
%,8Y5gG&)fI"blBH,u(I3W`;`[4ip"U.6B2p`pC.p5bhdXih3\?&dOELOVk4%pYds_l.\`sdV(2FO+rt[&DBijDosQ[>53BsOL=U]
%=&)(FQ>Q?pg?gi2dX/I*++9nARF3>OHAOKsl%q+aJQ4#+f`SngQQ)#bA]o.*nl>k*8>pn5(649>HV4a)G`,f/,Hj+Y7M.K?GosKW
%icF89I#e2(lZEV@Fr.:<]>s!4Q#;&r0f/8^@<2-bl")OdP'7*DTF]uc)YARY$J[E4MdjAk:6`=4_/R_orPWJ$Pe2C&EO!l1,aA1r
%MXX2nn"+)Zjh[AU#s[&SF-k?BkrhuDWbn9p[7]oCh7iGZ#jn015J>h3X.VC&<8`ctDts+)lh,0[psH"oW])&$#>qagnV6b<?=/((
%DOt:`n_EBp5$*(obe_*CU&AM@UXYP9ZZ>9>EDnouHS=U3dT87`8^u0#YII__3kW0/ACQe2c,/f::%9@?]A)D!q:%+W/I'L2#Rel8
%o%P,_r)N?Cg<kF01-Fm^ft;DFhXF:8kmd:]qqf]up(Nlm/V$%\9A[`ujpk*<4U^Yl#pV9_]s7H#+>@Ef_!iEG[23/!D%_Rfmpp8&
%NON/$'7nOSFD(;e*A;8O_tC>-.&@MJ7i+6Ir]4?=kfh2G>js/HF+8;ehqa0<(X_<L,A(u88FS`*&K44]k5Z>NC14cEoDI.+8CGfE
%;L5tdf=>#]_Tu!<V-BIc/(8:mH1^4Y3^+SupJgMoJWZP6af^SNbZ_mEQqf8>NMjO8I\B!,IJ!AA8IP2gH9-L;1PT(-4X[Q.k9u(B
%^utbkc^Q9k;lIgp;0C&!lE8_l:&$<^#V#m38N6IcppuOr)GPF]*BoLN5YZY&>MF@5A#Sq0>HYgHO"jUq!kRX!=$"IJe9Tuj#V&od
%]IB769l=c)0CjB5W'D:)pm%mtgg:pCH+b+VfWMtXDiLD^O2"ji)/=5>>DHX,BA2f^W!Ef@b."[B[!0r^E-MF\"7r=J5/d2UM]i3\
%512fHHJYb@5t,08i'dTeI>S%E5]'*=^9)/aW0MOH\=F<CThb/S,)1t$o\=P(n^581a;F41\pq#Vnju;IV:dB6(%CB-Sodd0$mBJb
%]PiD_jMp?$[BsEP21G;<<M!sgL3$Y(9QmkY@b4`7(eg9sL1_m2:q+%Y#H&niou>@5gY;q15ntl8Bc+s)Q!c4ei&sP+;e%u?7]J_m
%oNfD=K:9GdHsIDaji=Q^B!1k5>iVNJ^bSUd=IsEtH]n6Z3(k/V4Ut(I;lBq.0?(R6.M83gn3_`<aEArN:lcf]8"FOBC'aLl-+@@k
%p#NB$=<P2*d<$Ifh"CAXg)+R7@s7D4ek$fI]l*<a*E3)0#(0F1<VpB)O1=M\G[LS1(V"q.H-I9p]udqk@<n;9pZ3\c]eP*7)!@Jc
%0*B3j:JO-'h3N5:.TFY>brndrB;SK1c&hDF$u1KC3W%YjL3e.G[iJ!Mq+8tQ]&d:]U^>Omc$ONK2$h^_qR!8.4?7,!o+2/*+Uf)t
%_ap`TNLdlVD"*%LmR_`'YJKg))<t9MW7uTFh!mr;6P['(rA?1V.*Q;oEOZ%",P/48&bS>*,V'/c_.6:n5)qB$C<g/rlS.\M=&-42
%e>I$S&8u=mOondZS_DpD5`O%3`@F-8CA<6$W0NblWmo2qA>n1fW-5=$"Ql_gjkIb)`S=IgTpb>g_^+dGcig<&g`CEtnZC\Dcfte9
%0INotr7g]jZmG/"Vt6Cb,Seb^G?9dE6c7Mg/ak;nIgf%GSo4#gX\!S$pJ_`ql]k)p]2dK75m%3$pGP^B.[rO_%F%-9*7MUGkiiZ$
%kGD"HC'g(.dqP9.^J>_3Xo#a9V`3]nPGcm#U\`rh"@"clClZ$'7OXLg)8CWbHoX4>T5C&[4aM$Y;qDW;;g#i8\``5N.YQu](:U7S
%FIr"A8`*P6TtG=7F;OSVlf.?WJOtJ\n7GVa'hk4M_CrmhjeM@pj*]t??9eqWVaa3=3WK"7Gq"N-?U)+"2%V,i_;sk=HPH;@VKG[7
%::kjf-I5m.PLlFY%gnNH5CN@AVNT?bC$QNkS%\K6WaabVH[AYYY+KlsT>#ABTA.-Gl\83EDU(;pId]kR"DO%+pMqT%SGE-1+?KO%
%.+D&=$3PN6-]b)$b@'=Xg+MW];PYIeQ1YBkG.k)6YKpPL!l9MY?qYpZ57[%?nL'E9@k=bU1UYJ7=HXg@YZXqa[hL&Jop3@/Ns:Yg
%G]1*6IcClE5@8pAHKk)e"D7/&M9O>MU,R,bP2KfY?RbR"rnciH%Hl^N"2pk3/eC*>&%B+%hX(a+6V,_@mj_-m@_KIa!)idHbK(NX
%Bn`Lm/o9u6,I0&23FXqfr='?^K>R^eeWE#e[X%kK8oGJ[4Rd"oFhR>c0nmbM$HZ5K/t`1k9(Pm7GqjkrpM9l<l:i*]<E/X+<Ou,+
%.r(`SCE)0Qfcu2Sm;"HS`'TGjCpFmA4#kjW!ZdnO6_/+.Vgihu!]BKS4?#0Q)S`m?JkE+%N8tM8Zs'E\ZnR&g/5B_Z]U;'&@AkYC
%CT"dNjg(a[Z'&Q''pOq5*E9,?b=E,4,C-t#pZY5lLQMXiiT!]h0hu=$UNXS7dPa8EkW7sKrH-BOTUdodq:_PuNJJ(3\Ak-d04H+i
%3khg_<#A>)a:^b1MP(g;0lAC[Q*js^4\'0L%c\W:N3Jl5(iPK%:PsqRg#_#]+^)AS:m;443\On(e,J"W\^\eN"MYNFm$>*<`s1s<
%A$*iakb:HiH78="_QO;'&P4(E!8QHbD_XJ<QrGq_SQ#!9)!ntTg.IsC3b[q8Z*f:8!(U_h&:%Z]arF$IrAV"$i(u^&!eU]*eO8<i
%?qZjjXbR'iRTPV"f%\9#nIL4LnEk`?d!HE4iYs\#`8_s&XQaUV_]40UTXO#'J#P6B5?bNBCDr)@lcWd:)IbCfN8\97DhuMG35_<F
%Ji(u'#729K(INEA1?XJY2&SKf8Xm'"286TpmI+7pe.\+b$%Is0f&h/#D?ZH$?F;q-m)N/7JuW`&(%k`pZkIiOUsNClW0]j4a5WI4
%/t0PL$b3"RF."[G9r\O17:R<<O*k&41L$I4a4%#*7,$U-;'1N7&$2gT%XhomZ]DK:PEk0_b;3Ne3H9-'W*q_IFa;F2R8!$g_fBc7
%f06L+$q<QOkB!'W[U-+Qk8!LFGo?5O?$NI,2+67i0MaHf.@$VGG$!7iL>BCX1[<F=nu"%:PnBD(mq$H*&G)Ldhs1h@<HZs+cP5LJ
%.h!H(kcG\M0N/)G?-/RXaC51a#p]BMCooW9baM[_<3qu7Dl]V>10K.dEgZcdl,=S^0V6,#]aeEi:_eH#+q]1:%2bnKIa":)KttVj
%8"mWlZ":[E`[6'@L&9)fnMJ,e^T*j('\4F%8!^@N=@X/!qNYU%ko!):(5s`!WdpRra\KfiPK'UJ6fCcTMccCr9Qhn`7/fg)XLBXO
%NIbDI6tA.P2m5*Q@"pD20kh)?Uj0)4%SIh&ZS?lG=R;UalM@pG9WD4HZd:U:B%tlPJVK-7\t0!Bb-SopPa(!>Bo\;%3bXf/Y&q$j
%gRFa:6G$][NE'm8ojV("fdV;$VPt<Bb9BY2h:s5Lp4UQS-5:@d,$O<@#"th0B=(LCR2G:&Re(XY7Yib0Y45urW*r;#b;<5regM*r
%PdCYl1<]9a-9TN[7kW$MprJ]KVR`h*&S*@CFF'B5Ju[(H;h'GqD"]5;$*ac8W"l6M$-^D<0^;3qjFPED=KSnfVffR9M`MKA!72n6
%aF8LM",;/'iV"Scb'4%:,WQlFguE5C<#-RcT<fSYIqe2n49bJ7Z"?o>6b)D\Or,bb3i;I/,A`k\bBQ^hU&[ge-OSJ/qD+d1G80!h
%qqNFQE/(pifs*S*9c0C)`0[?Eg&pGAYWXQqIGno2aY,eE=UH8Y<q"%'=/M8Iri=>XoBUT]NaRf4QhW=>m%u:=NI`k)=(2J`0e8g!
%^ts0NZ1E`,#A0L>0Bs+PF=5?J/#NKtTf9*/KCsP*GZa;+iarrg$?i;Q\KdHs#S-P(rBc_>)bggk`mtsC@Tp6>4*-'_Ii?5uK0ue'
%q79^L8r#3n;pS"F[<3+=S!i`T"$TZrA%^\!DI+SImLh>5%`/_NFrW1m,8;se$*BX*U!T<1bs#%UD!""2)M3g7NTC%m"7uVl=g?P?
%eZfmj-!Thr`!JFfdVb$kmTqCq=de%pf$0=p=*2UQ\kP54k1+@*2K!=uG0aH2M7P-Mc3PCc8\YMaM?<VO7a(/Y,Q/+^J1*[=;0P3,
%FIM.-<m:dNV497sZSbma\H.1N)\dndFaKgkF3R`-@nE0C\O\!X3o)KY2-ulVQ\^87d)#D\?,[ed)ga4ioZ"!u65L57%q\JGnM0.d
%4ckYP=KEaLZ"_Vop-[SVjDl[fon)q-jj,sVE%En6Gr?0,6JNN,d-,RU<J?FXTjGDLl8;H6DSb?>oqYF=gM4/=4BOR#Ed:PrMTne0
%CpLEVF]0gT(,V+j=4YfZ=9K,o/'o2;:qCAM25G10MPN\:gZ49t-$;Khm\S\!93?`H"Y!ptlcUp;.j>-4;=\iM=\C]>e*K/"=Lp5Q
%2"#%&l#np3h:S5a34e([e#Sk[9?-gZQ=r@MWL^.OIUp,3)VmjE#^J,Ya@tG$l=.bl@OW(PkdnIYHe&rliC>/)h;(_q$)??N-*GN(
%m6p0pNNE:4N$OE9:`5SeqmK/8dZ?c;O/7q*@:S&SNI%MrJiV)MUICq-[(XBt*ou(!AA3X0dA_15RBB'0RnGu>dZpnSkk<'$_>\]>
%<;SW.*-GQt,h&(1rkS`da$IogKoYmte=5=51u0-g4h&emo#lh/7<CJT(&p5DS"oRlmDc.!Dmuk)X@2s#1"mV,U[@D0RbJpd2oiI=
%,'H,XerL!4qkNiH-m*bd(TA;'m>l<C27B2RB(NdVZn^G[g!D9-[)7"bBOK/@-EDM.Tg>Wg1/3-8?q]/9R_#YX3bYtIZ[PCpdp<=b
%g7[:8%XN1=`"CFP>8BbNj,C[bFf5d+a0::fiJV7.o6(lHLWB&^Xbb9u@6%.NFk]mF@%4aFgQXca[&Fr;2R1o3_?I]#m\u&'1IK!L
%5(qhP+u=3J$&.+eCZENNBJ4K#]kKbO=)n/bgXNkdQd1gW7t0[t;[#OCI[`<SoTabZd6!65Ql:cljLJiS-=aVq)32hURk1lLlo4(m
%9Qh5O=p,."2ZUq]mJ5'e;fIfA"m"l)]TI<s"bBfN3a]r`QVZJhQ;?\McK4ZU>=MYTc8Q9!c/k^hc-kj(f"$/LEm)Ppl$S`;N-"e/
%L0cd/cT7E=UYIW1A3->;<1;"n0hu"rT?_)?bND`$(RIeXZd.YWq)9fpk@<"8K3UTf+M!AO53lH;79*\CSPL1)D4ZS@ef3tq`\FO`
%RHK,AR)cYWgR?T"8TkDbHZ+?Xc!;EWn5-EKT5j.XCAMOgT8c"6b`WZlq50ANFU':Jc#*(IF_at@:Y6a]qTXLRPV))Q+#%4^-L6j^
%Mr)=RAn[d@@\:U%I"kMQFlNJlnsHdE7+sA@BMP8-@G/08XOk]`q0T9_NZ+a?(RCB[!0p:?X@GkXFV\G<Z`i.+n>QYUqII(VqXThK
%oQohB*o"%`Vsu&g6^st/3VG:6d#4D+X<?oU2SOha8D<%Bij?RjQ,5<KfO:MAEGsP204`^96`O<5HT<R!:1f95U:#GcjahG`**7+9
%X.,mNJ@U>N<K&[_(NZr`Lni/kCtslB9m[EfReNb&E-e$KP(N:I*:o'n4D]>6Z[B-8WO7cF.]:YSFp5?q[Sp`J,gGh$4ApT4juIJZ
%e(gY=Qt/)/ETB8$Q?hQ)69[1DlHX=^17NIAY[\TW?;HVj7_[?*>.)\ufjL@"p:]-ae6k'dp*cYMR\d@;1tfd1jcO/=Z/ZI2jsMU9
%+AFBB>kY&f(T/N9Ls!W4@')c?rMUU1:O0<=9?OP!mDCQ5d^TDAD!e!0CCabBjG/_rT'#['gaqU=hB&3Y#[<\fAiEiuKtDK"dlu!=
%_4n@bY"ERF[+M;CBrGPZ62XU/+0:hKC?B5[%]"V<7a+XXNR2+p<B!M%1YqNDoU2/ZgtDYGddL\>@1#eo\#@kt<S+4:*eR->SVCjM
%CG^.'T^Q<l3]>=7F!uR_e$A+fP8;`ud$W$oIi=a7GjR^irD(rr'B3Q<BkUW'X$N$9#Z>6fU3p@8UPHn.d`*cAcB\-9ISA5n"iCsS
%KIR)m%C=s%6^:AlSo.4_1J6uHamk-"SbGV/b`&Z6jUJm^7\%I?/a_IUe9PspCbDkpX($&3e9f*CmE?gcJ$co]j=kEd8eBF0jD\_u
%]hp!tmIK5+`$:aH8bNN3Xs,J);W1<^2]h?\IC?YjM`!B6%[rIE"9^$;#ZT2$dK_S088F2O88,::drD*QO,m>)+dot%XkdrBbCM3?
%6`]@j]a)W#EX7X$5i)7Xm00T%<'H;IACU.sdat)4;S['oo9l'^5P)B9Xib(=ijWmB4L;.UMP%GOc8M(j].A&A;cAFZ%0shVJ-bee
%[dHBrIHT5&Hd+uG3]idPS!dnuXfXW?cXGK!ZC-!`3Gkb>4>n&M_I9\*!h"=l"N)jRR:g3mif7'.RA[3W7C1JaA`frsq%fZ)b@fsG
%(3#EaZ<V"554W#Tc?$=[3Q]LOUWnZOo1VpeSXg.>e&BEXT>s7S>/cqiSG6H&Xg:!2L%=5sQZI]o$VGt#pWC0X^ub6&"]qba?DtJP
%RDWLt87uD$og13DbDqn%!W[P/K?2<S,M[uT?^^c6N?[g3Kif96#XU/7aWW5TQJcF>,%<*bQK?M$Wa/lc/]Z5g[F_f[1L6('a#fan
%=!t"/_YLLW2E<>&)m<^668'[2!H(S9gl]MIBR.c,l"Knc#eameUQNmBU#Jjoe)#:bG,lITgfc\E@>5qrb6u%j<O8[XmBK6G]idde
%/C*cf=d&.3pF;A;+2:m@,g3AQani8>+^43P9\c6uA&W:TNeOFP.S1CuA96RW_r5PEXYnjnbV-QIBlo4BD1=ta?76Rj_-4f2.@Q6F
%4_FZO\b2?_gCV8BBJ6/TrBO8Pn[>msUca_0gTHl7atm4m5EM,=!o)0q;P(o%1_F1I8BPGu&%@j:qGKn1/=='"7/"HWC74b^o(IE$
%n^GE]R,<A=DJN9%IS3uRVa]=>*7)usk!I(a1n1t2p'PC&P6m<?ocI@h`Z.G:=p.4.#s6'\R/?OrA6nN@AAf6u302O-=4pl$L.gbK
%F1%n'HKtIf*D5abmOQm*#I/!:;3mgJ?M6!E?[T*i41m"ZF:U#s\^8=WhWQh]7%^JRe8Dm#\UCQ$K^Ja2'%reZQ^I;1?dIi-H(^u.
%8WHLPe"tl;>i.DADjR?&gjZ^,E+`3<n(&uA%k8@cVGM7eEYGCn%B)\oA=i.3B:8*F(<rO>-#uq_:l5+&=e>JcY^f0r>r*WX:pkR^
%\2q)#FY;?#nHfpuq^)Vg!K1L'oh$`L$C.Y3m5EX2]=G;\pds`#/FDlE.d_+0B`ut]e1!N7\2Tj/AuMi\hJp^IlF@(Q:QDTW?bgWl
%jmlD?9A3*\T`Y0<-O%eIHSGcmJCA+>O`Sm6HOXTY%bcWBUM3le9[Ts1ielK.IM$K;G\)b5U&Ght]dClR6>[p>4_6+reN'kf_DRf>
%l?ppo?.@/7TP7A9#8(8(a[JXfaAmXVf1O6PR9VJOlLK6jjE'XqS%H)Q=`UC%K=L.bEAmQfCL[T$C:hU8g(prG$WP\5SY7$Kmi^/%
%A6W`d@YUuU^>pD;gZb)qe6$^JGe4f0kNc_j=!#.*!.$i0O(>>n1pP@TX)DF=NHo!*Od.'$m8fY-BBgUGD.9-bj?1RRRO_%t1Q!ZU
%OcV(eluR81cglp@%c#m@8F/.TlLQQKR>GKaT2AX]E?sUCM1%kV4EPkO0X8r[Y%793Bk!]3PQJH/X=1@".$$ZdZ*Ju"5,52CO2W,F
%$RYQbV'BD&X%hq:g76ZfLm9:[)3)`lc=XW*4q.t_X?Oo">YoL4]?\VsJQd2*T2A[2LW.Fap1_+DYJ@ea@c-`IF-P>?(hq/>p1_*Y
%OQNlW@\6Lu+*FP8'T[(#fOq"DlI$DJOk?RT0NTc6Q&0p$0i0Aqln^A9=.RuV1aUId.o5LfU(RqU>A[iASaEt^`',DfbT5atT@dd5
%-'-Hu8S7fK,TA@J,ALdnc<lb,7>d]a+#\G#;50LV8A)_(Fc(V5lml#F@A7cn;oR(fb->1d5LuGu9DDYj*6qAl>6>_77QEf#XgVZ_
%#Ds!#jm?l"p,XJV]MPg=n@'gVkBJqKO&rH<AZ$8&*>@98Cb#*=79.re):&VYF#0$%i-*eiTlu2F#]*sl!@tY4iUW[C;#JWtcGlit
%DI*1d@o?gUKER2Ks3l9Sbj,5=be]g1\QBsqHBI3:#4?A]qL>Z<>"UDSHj*89GK'Sm-_sK85<B#$(B:/0\omtdAKj[`gf8%*Zh,8D
%j.k/dGiZ/CNY6BWe8`ad)Ob$a^\$TGi]D7b+\+P@joKkTUUuSQ.6F1t8Jc)W)?=8O[a-.*aDlMGi+AC1>V1-U-B8qs@7jI>0V?eC
%*8mC6_q]!<^A1q"I#p9'[@sImOSFa!L0@la0%B1'BrI:k,^"1d.*B[u,%b5NP8(D@XNF_QJA[E6pH[^\[dD/\;D`AXi/SSsZo8ne
%d3XW=U=3PZYJKnTkds!qNLN(jEh)WN*Yb_tBCpMBKgc!T$'(b-RE`qYS!Z+K\j;6Y-Ol&0WtYo:`<C?q^[/95fdY?ES;!&VAYReg
%98pD&/XSk5'P%6XXfAnkoa%Hl/1h#P?V\`qGoS)=mKAla&rM@9Fk8<#Pd>md0gBNP/ldZI/R#B;[;U"Sg8#4F`JClh$dB\-43jQS
%:8->>%aLnICk(1e`].4aNpH[iXReUDX:F#kS<S?\/A.7M8)q11DH6?5li,/.lMAqYM_65kd)NpLY.M8p*h*4_/'*^%\po$uNUpV-
%#/-G^4f/fL%WaQEW;GatIXO;r^+>./X\<dL"_+V3TWVUg:e#V4>9qt4[JmVn^ej^V<6)^Urb=#F&T\]?^5q1&c7c(-?-pu.ftKM8
%L-&R&gD>1@]\C_;pAL!4.@35\8oYDHXiH76HG"C^#*X]99\*_)mkA7k/s2$-CG1k">Ui7sEq@jF6Q9+#4/b(sf"EU<9F^o(8,dA[
%6n4'NVn#e#.@F$X45\Q]1teZ99!?LY[&M&Yk'hhh3FiLF)C*Jg]blaQ.?2<FD5hVI)WMjh(ptj613p?_gJ@d%/?2O^'&$@BD)#d8
%2]81]R*qiKFd0u8i)VGZ<RURtb&Q:?4sIr;1s/Yr6.a(0%Bl.Lg4?:SL3][$B;o8Sb.CZ?0c-n'7#V,Gn^&rFU*Sjq/Wqf4R7lA$
%mONLJV>IQ?OKTr`%uZ-T]3$W&NZ_[#@SA_TXhJt#Z7eh>^9qr<mQYsK*-Q1Zgk0la?MZ5-A/S"'R2=RkTBc"Kamu7(l*bcK,EkO6
%]3D=`^eW)f.Ta/3S8%@0?&fnoXepmMC/t0bP$t"MWYu3,;+f;K6PBX'5"@5Sqq9UV.8@;>2pIJKB!6TH`hs^9aG"e]#3KLl/4pDl
%miHRIjWFp7aTM/,8$4VY]JP?-CNMd&Al-)FN)`L.fr[9ao#X8L'Z4Zk8*]Ei!^<(u/R"o)I/HQJpT28U41H:]CeU;;*ug6ON!GfI
%S\/r#P/\XiF:hSdIJmbmk$Q,ka_:S#7;$?qXnE[%^Eg#I)nCfeZ7P<R(Lj.`VO6NgI2e0&VNSI9,1)_4K\54h1,aMZP@(^oi0McX
%YgZ0Zi\'M?C2Vc/\7l!sX\n1&E6E6IS?'FWM``h%,cFHSE62*)V_MS&;*uW7Z(VY>Lr$m2>k=o9R#GOj1oF32o+G?JJ6B#oM_M@;
%17WVO88E`G8#k?Bc)A8DGSQOaF4oaoe?.nW_40nPO]GfA+o$,('ur^UEfVa?V`gAJi!)PJa2^S@??GSM,HZ3.m8=R`]3UciSrf-!
%/8reaWe%>8A&)@Fdr_93Do,&;a4jd9(s^jKY^$mo/$l$oDWE*ka;$7$/])eg?.9%EW0q#BL"D<tRnr@$+no&O+qgp,2abZ!"HN*?
%/@J2A2d%j%^XCT]>fC)mJ(cY,:j,H:OMhVY*]EUuF\T&KE1j5slE0<h^Vd]P,8t;m-&q@0E1E8.>DSZp:g#^mppuJ:bn8GLJDP)T
%O'M2+[Jl\&'A)K[2qpsHY)m7"jN&(aCibf1:K(W_BK;m-9a@Q=@\,Y4G*eBUeD`@0^N#j.BX0b`ndu=tVt6-@P<mFS,C7T!8NTR:
%FIJ8hgHFAj'0=<,oN9V,G*%mN1`t-!@(2tqdsOQAkQ`IaM,*XS28QNb1#b#3dJ.t:ECutSHpeC_3[IWEdG2BV8sNtm6<0o]BX'nd
%r8oAb'b\FE=8do4'l)NINoc&^@YJDLD8jI$FYQ]W<NL/bD>,j*$8n=FcP7u&/5tHTH*K]*GQAX^,Q;AR='mtueI&;sHKK+Q>-QqY
%5pdb]WY^](dhb-R:<;p,heM8ci1YdFlr=`^>fj*Kp&ttth.j?>_*aXk\;FLm/.*H0bP,8Oi1Y&YlDbk.0sn!5L[8F3WuW)r*X`]F
%>U[k;IDJ9,k6.c-BH@06ZJ_F!`<D=/qO[Ba&"WJV=&AD5]%Wi=RjAF`3Y-sNWo0RC,pOeA0%t45Jqqq#fL,)j>/&pgp!.2bHb(eR
%BU8E.dG$Sf-fa6=LCVW9*/%p,(-H[NG.gSc6cqs>eIFb11\-M5*a8;IkY,-Ti1W^qQ4[C1'Ki`4=7\DN8)U3$Tlk+S/d?(\Jqqpc
%*#%/A>ere`^ml0^Ea/%[qOC&9OL,Je[OHH7*TF2IDO2o!kTi</"U,EN7[e>)_`=i?d=R.38:^pO*Z?=pWX=KT%PHItZhm3Sp2p]Y
%:Us;K_-trr.!TE2mEiaUDn&c_6gGRm2Ypj]Jqqo9O6FI==pl-/eFU=2k!SGWG/#)`Jqn5Sg(FQ"SZ(g(.!QT7XENfI>Goj@rBH$&
%j9lbdSEiVM(sTNIQN[mo9,'/(m0X1A3kGN.l%4\VM&t`:?kihUXd(!SDpEdaQ3@f$PoldbLP6'VcA=)H[DR^3KDL1Tf"G1U7_($o
%BO1#P=iQ>OJqkk4kV=Q2kV?.Fl[`66i1Y.j5-9","1*6g6gJKBHC;3\_*dN2.Z[i4cp#(e`o1ZLh9R6]d=R,X"*:t7>noJ,JaM]t
%i1X$-Q-Q#1MLpVP1!R8P=SK^2"V2>%L=HcVrj9WP*h!?<H$?OHUn&;a[)SuEV_)9FO?o=$oWaMlEhS)?ek*H]86\fOY(pPk/mn+p
%]%WiAY&iQRLXpg+etoD(/fO9DSF4sa>9o`&D.5\f7+DI>7p+QjI)U1K@EYuRRs9G\*OXH@O&GELe%32>)?Jb<Yl6@.VNk=53+mj*
%@AUAl/tKfcR;$"-6X]&9`3t`%@O&3NRkuIT,Y[dci.lCiMelsQiluHeT1F\`TCpiMf%R9Le!XV3@Ins(>Fu,4q8t^J=hf;YAiDBG
%8,99jiC.7gq`0Z^0,i_$WNT(Wj5B7rjR]<sOia+Uf"S=@q!lc/`TLC-IoVIKc`UWT!WU>90bjD*QhY\aBSL]ea.`B_WO-g,hj,O-
%e%7g/NW@9=\,!QJ\8SaX6^c<+J,ak:d,6rh_ic;,Z;#9,WI!nG$E*jL:-3p?<OggJ=1PuCE7Krq$!08Qq37[]/gAP(pU;O)iKH3f
%\l[2Th#B!^p<k<!(ho6O02B=Cb1EU/C%?8R_8T0]L;HNZ%F01RT1hoPQ$f@4QeuSZ"YrYp`U1P:3Q;k)(';D5X3\g>5-HlZV1W4I
%`-ZQG'Jc<Hlnu?loPNDB2q'ke_H-9&HFWp";;[:EI)j?jP,jI2o`u.8O]96m$aE4#10Lg1,@7AD'SD@mF0sJf9%m9FA=(^0<aXmI
%"W]r?'e$#Ee!/a$OcdhWm6;le-f3+c6)#+naHU#"e`NeFI/"T[i`0dE:V6nfks63u5<fuB-MaF+S**Ts]JZbbCN[.XI.2s-<*fV:
%7qdb8-"&sp"Q:&L;k"%I/bTj='DO@1$arH?>P[>-$&E8I#>]"BrR`&t_[l10WJ0FuMpWr@9eEBX)%2_5Deh&$7jOVFKjq5#j13fk
%goh.ZM<js8=o'6[<$1VkkNjgLE"H%l&C%)W:S1X]l8)t=4Wi#U%8M>e_QRPR0\6:4\p=ocd>("40_AKoU-:q(]Ub_a)DRtp`N#gU
%<+67Zkr+p'5Hb4R4GX.&1a@4k/;Bfh)#Zu7d@^(;,rc2T-ShgWLuMGjK]Y9"+_Nq6d=FN#8\\a&EYp)Z$uAB8fO!NGGBHSR"K'9/
%aAD>#UDSql8;h0bAuGMGGV=Lm/#S)MH6^Z?[f*(AJ2s"hVH%MV((oj+4JqhQlVnXjMtMG9WVn0Ip9M[8Q#GinpmF/]k:cGE)j&Da
%U$rV@<Z!mE^?ls-1qXH1[nBS,[o\mND[htW>%h,u%a]F_;8?6MEd\#M;eu=mJj1FV?NfmH&&.O<XMLKNLKJ?$N^(XMIeu[o'dRGL
%IpGL:YSN:5R)TB*&_)*_:Hl0EMgP#6^06+DS2\sr<DMY_YE*q)/0)QJ^/$/`GnY7#'e#19MB4&3,GeLXf9cFQDI6CebOJs)VCS^X
%e_;n5,sm'ZGG\1Sgt62kF8?H#;$-LRKB,u,nM!?p0dE<>M"j'*E#1"iL6K7leG?$9XU1N"*UMp+j8#HSD?I:m8g"^ek/T#'qKcA[
%Er5/a@kU%q>I;,nMNVqQg;nrrn@h!WFd'6*L=a$YXabJ^P?d<r,&KM:N=R*Hs8%o%Z?SDMa=A+4&fr&;h]ZTd&8cId9si2b'Z?f>
%&X/)[P9\0_]H>a8`H>,,T.,`?D:IZ9*-Vlni&@5gH?p.=RIHkdh'83J)R>4@)X0.Y]*'AI=4mgGJ("5c_4rQhPooLG%rZqAq40JP
%0]G<eR=`3O."k*L^_#2Q>-F\umM@Uuqa&MT(&I76$6O^lFm4K=i^3OAlWWiO/)Sar:E\1BY*b3QPNE2JW`OWle]0,l#YrIl^fNb[
%$2?;KriBrX`(Gfs,7]W,/;V9iSW>o#>`kY^TqO?1a:(c\Aa7S[0oE'T"a4p6kc:<<Nr74nkhFoF`HmA170q\@^L1ZhrURckVkfMW
%PW#f,F>qA`hDM%kc."p!rn)S'ctjhV`95sZ`-Pj@="*MGp(;moZ[BC!HRq7,p?pooc8[u(diPPu#Q-WgF8,BarVZBE.:Cc&JI/-D
%W>or6?_)e9Q[2_(P's2%Y^^R]GhkMCV.LG$dDnA@1R/\=9k`=?[#P-8PRs1G,2D/LWbh$JA3@nbH\>;"Jqj%t$KZqCSG:S."/.P"
%Ud8a%a[=mr]9)hhleKG/Q:nah>,^DTJ.P6T'8EA!6W,)CK7n]Q%<?jn+I@4><ECHr\;!CY0N4#)hEDjpX73c39iY7?ST>@C<37Bs
%Ss>DgL%A73&m4HeZecuY_\#J45Or2m758YL;"`G0&?(SH6D,s&,'8Sr#hS*ok^.a3EBmDQ"l*$6Yd;Nf2/\=-8]=":iVM/g.7lC:
%2@D-:iUu?@)=-ZKMI`E8Mh?VAUp:5?!NK=b[!,F`!pAPT<!:9_n,>p#JO+@[*P//K/!@c\Of96iMtp`lm1eGa@FY`c[A7qE%IP:W
%H?[+R6Ku5`[.H]XYZDa2;ABsCQB,i.S+;DogP#u*F%b$lg@rpu1qn-*;LH?q&61/NI;.%Q1)SW?,h9nW0!nH!`3#'P_"%JBFibjr
%daL>:\uh,0ml*ms?d4VB=^u%3F(^Q;V'6?]Gn1^C32()1T5R6n+q>E(%^!etin'/<fJd:=jk#N[Im$-HfRI3cJ;X<flVsL?B+8q,
%nDV@lmpN:TLcfjd?dGM/)(EGJas2Xi3f\WKU'TS+e%'Tg^g)8Dm(*A3##a<8&RDeqA*hM+j3VOXjlP%X($dRN"2O`5qpgQAg&Yo?
%>QNRA@)XE(j$0;7I#B<pg!Z-*'=h,/Nr7q#Z<EA=/4U2sN]o(bY#\gL_#cB:nAr)bK-`7eS#^%1a[f@IU2uUB;E0=$hpef(;o0Ki
%C6^*2Uq7MO>+5ujVla-*1*W\;T6A:W5D*Mu(Q`o?'m2"qdbCeB.+rP."=imAQ,1I>F[]37'6]\A6<kp-`^O#70;SVW"j.Q[`?_2C
%h+&3U:n"RGDKh2enPH^O<^"2L,D-O&E:u+5n(q22K-jj($"`WrYQ)b#?E:>G*eAAfAG8PD."t^KGnlNBNpCdT<AX/\[STC\T[3_.
%h#/9k#;Zh@<->k(d*jD9C(ZT)K(Srs-:m!7`)+/EZP@AY>4:B3<R[[<\u`NnJ*0C<P^d1<eNabU\jPg#E(*Y;27*Whd8lSb.Cee*
%G<`U4WfEl[pZlo;W=\GIUP3INITU?YVI2nGJ9X'O8b^+I;XPKLmeo3!!:9qX-^'COU9t?@lp:k)+S\/b$<6rcWj,m??80mSQ<:(H
%pOd_?:fUotHI=#*#IL6i%h>sG[F(138a=t,0Y$;WDt14(lHRg5<=,f9^/l[--16O5!E#Xiif<e1LmVX8l2G4ITKTXhQCaeMr@Cjs
%%gq7aN6%Z=m0a/lL%9,TY*eB7!o:[/T"C.^7$ZCa$OT2g;%oj'frSDN0J$!g)T/6>`22X[aE\8`h7$DCATn&hO>2ah)u3/p4pdcE
%#5q)(T:3fgHnCb>Ru_b$L"DNJ'DuLo2_&B3)r5JHHrK7#+1ttO54hgaW+7e!qj#CfH)LFZ\,l$cS_;&4\.FWmf4]F4X/bb.a19Ro
%BOdNNAQBKe=OGS!I(HSnH&sV-5A%lDkp:g^I"!WuRQ^Z.4!2Y4l@[rh;X3iWodD"jlCi[QV[s8U,$tMs&D8M^NCc.[]Dp)^?Je:8
%h2Luk^R0:2&X_'lmCZ;6[C2jlqp,$c5(Z:4dPDN*YVg_V_Jr%=NJ;H]q?D'*;Dbt3;gFcpnHV.2?fsn"2OSMr4g[HFH$/[N5'Epb
%40&ksppOKh?@]T*R[j7lA/j\;kM9J'bO7Z:#<K?#n!b,a7aR,[mi621*_Y&KhH0]^,^ueMGCXg]2M+c8j6I'rIW8,PDF``p_R=Vr
%qrHC[k$A;rKm_d!q6BM8`GWFgYj?S,K'P_-=7JiefA!dl#G[`0=*Y,(+EfGgqQ\d?G_g:(hTmP3GYq5K:YR0ADWK"V\W%.1bB#t>
%#<sPS`,n*U9't)tp!c.>\XU:mWGC0]$&S[bG!fZefcqNg>>iefKYm-J`$3LH8uD%E7]*eo=f^7A1A(_HBa:nWmO2F8GU4V/9,E;f
%:cla_e*V*WHHn_Cgc't$O1W,S6qn`4K@j`4M.`cEEsJ(_NF;!^DpO"Vjbe"%M)-b"$X_Z+a&4b%4`Rmr(Df!Q9GiPDb_nOFTUedo
%^rVFN]SY5S`(/AOY?lhBKgF&2)E>u\i^g:BL66T8HJ,jjZt6&G!te>q)j`Xuqe_no5co-\dIA1Xo-:8o$)b=(\#Tf[0G\^fA@G!>
%NAgnTPVu]PbB)BsY`op$/2D#UiqV6YGLXPL-Kn*K""3g\Dl=[>J0+r5=K%aO56J`Ri/Kjb0-G;Di=51(*ME]MaW!FX^$paY#@MdA
%X0=OGN]_Xj^&G`)1-Bo:f/[N:,N6();$;\9m.c6N;DgeD&90gc.%CP\(`1guF53QJ/=\U/SgpR)iY=;>bFN#>;Z.baLa_7i5M44\
%U.Vr[[n;G.kLNI]l`Du>=keR`NBi5Ih*&83g8cGZ>^FSsajX$U3l^%TL'+ABjd;[Hd!c9Blo]a2PbR?E;Xo0RpuWEn:9@pZG"\g!
%%[8FR/f1gtJ9ST6JJ9e<.:#m+']D#>EH,jdk7jkK[T/Anc"An;Pc7-G3QV4472ggPa=15ojR((uG&Ql\5?<_%s3a#j^pq=s*knCT
%c9k3%/AB:5;]iX,^,I;Xeo>Z27p?JN+9Nin3Yu0G6$peg+)Nn6Gf:VNko@R4S2^@/^4BPl4[!$,JaMOJ)gHd,Hc+I]AS<H;,DV]!
%+5:_@U&[N,?&N%p2Q]aJb/$Z-MdL+ijYLUla^8r!QG3oahm$5cs8:0]<]^Zga5([\K^%p(g[/6sFtd@i(Qa?qok*GY*&gpq%8QLL
%nt*@`3m25MV0CgA"8(n<KST9E$8j=EXgdG)bB;.qF!i"n_fIdsBuq[hJEK2.FgK@/S1kfHXp*!hSE<GJ\6ELP1<h8EXV][-SE=^O
%Bf$c]FZ'^q;T&G&J:.9J?RlndS5?pKgn!NDA*tJs5!,a.EhUE[5!6u*QgQA&8AWI#P-65<n!E(*ZLmd4\s)0Xe"r&LXB`mOb9F)o
%\[8]ijG[Ks/f`lZ>H(-QB?gc&Bj9_4"Solck3S7soJ.=C@H[l:9m9'eI#>NkVl^:',sA_4);i6%AtX#pD<-fW`r<&O8^PDJ[SfcY
%7m4?4p)WHpitqBdq)9Cii&a#S5FY,s%+mL3gG8\MG?Xo<4`sJ#3r!MJMu=T=KG1=Pe+h/rEl>9SXTkr!3P"b>A,c&af<_mJ<g@b$
%'1kO:QAK%nm!#m"0,C,Fk*rQeI.`,WI)#?tJ[U1qOc49uY'[;3060+Fo>p[+gTJ&'J$J0b#WUXO#cGM:8C1GqOe]Mr\A%b?o%ou7
%F"55V:uD,:BP#\cdlMu5qO$mr[0#q1;4kk]r%Re2njT!39RTT\LeRVIl=89&i1qHk^6AM-"k:SgpWt0g5_dkAG,a.-`iSKkgdJ-s
%1Vq?[3b#XV&smo)clDs@-H=<gU-Z13c(-HI$C(^*j7Xcg'a>G5ITS8cf9PBrCJDW^dRSiT,MXg8q?RfpF(J?5(&XI];4TcI%Y7bi
%hp5<%&N^?*-ih,f="90*`HBcG0jPm1\';S66-lak@RF6/nua^q+=Fbu\.]I&3tFFV8;?s*F-KqjK>0ca]T/0DSgH+"#a3R!/HIM'
%]`ghs`=!c#9!.V2j^<etf[;rHL0Ig3iRsd1?MV#bV9e)99s@&:e*dV.dLQ%n&!0$tYMt`<H8>mE'$%AIH.@7N]^a*rO"Sbo/Nh[I
%LXX"!@2\>_4Htt/#TSQ^XXplXkk_J5]Y<;tHM/7GU+=V2.3n+6=8K;TX!&>kV9+FCLIW*dZ\MH_$+F(`KNOZ9)17Oa2i<AAcetLA
%hg))D5f7$^#d,alNJ-4:7KQT?6b228]<H>TP!lLU_,07JBa@iA&(X8opFfsR@d<TDGW>a7_Mi][$o+$^DnVoJR34dFgc_T,n@rh3
%5H;rcd8cGBp_eh?g@`/u0pJgOD$L*:%L<G%mN]7"+IF8Zq9n4*<sEaX2B;qn6ebB^Z4&Y5ns&U[>@Jd2lTrm?@lY.H4_nani&-Ot
%L&)(]XC\i]&K%Qk*Y(6p_m4n0#b,ecA.Wfu!@ij21*R5)cjW7uJ]_&uH^[i#4?2s0jZZkY;f*U7XJI-jOTPB!E6G<pk^_8nK'6pO
%ejro9I3^c$75e;P*YgR"@R7CB!jam$GFER$b!=<3%6<?'X*M\$>#&9)2_d*@R:B6Odra@`M_;PX@gn\H0T/YYF1#m#Psa"*^[+>k
%F&$efp1'iq+DUG[j'mgd+RLOEr?a*U@4eNG#[sJoi7L>rEG55gbZ_SD0UoE\?#o<?jslF(PI;*5_P.*f(8aC+f>3,u-2,2lkk>"$
%YB$&ShNt)%k^C124K0'"+,@VH`(o5``:3Fkf^.)BP/JF.E93XfJF..`Ro!^5Sl+g>)PtMc+h)%Mh3#=^PhXH7oX:iZ0te2q^*&;d
%o8l&.,-bJG[*4<G71O.%LghN_'dmZ\\LQFtmOqj6Lhtsb@U"^r:54b\YTN9SK0.F<_XsS?Q`3*i"HS<[5aKudUq86T\UJF@Yesab
%;P[_X-MhX$?g5:Fn(3r5+h?lu4sS83qKCsM[Y0#Q.?b\S,n].d^_TCeYkW/JpYFZOg!gH+kcJPE6&QS6fTX[p,IG9XTSTCM%R:ca
%oa"kIm>W<a:CNQ>$_>pdG%/BrN59/&QGb)iQ.XEU_C*Y+lSQ+Q,._FN5tO=`aG+.OqZf./-dA:q"C*D/4:;FGc0%Da^<mEt;_3W4
%^&=uV\:=\=WO<8XWOprJJ*W[W:L3.-)0Qm+![6^F,F<?,,<+-:?;![s6B_4%c@SAjE-[FDlQ+V:OG"WU!Je`FB(bkhhC&7]0gMAP
%FdnYR:_"8(_Wsqb#'CJL$"`(*O0;kQmg:_#bRqAtJb)D%D!!?$bEO.4r^_:u2c>H%HZ_NrfAT3q[j3'@edqQFMjNMWEnt*Y!PN5#
%*mc)iW$7QN%Bd+Vc6&GTRJV/=Q8NnpG';*C?JgS_`K`rWbC<:*W:C,(<.@NYW:C,(<.@NYW:C+>SNeH1<;D,K^p/\=pF&*=0rfW;
%@,MZ#?&n<!nMWmX_j:ohWdHOc!ilqgC<t+lo]el(.UP:tjd-Q6%iQ%T7irsb7%ZD?5glB,V3e@/M&:W\O&1^UnEi@/SM6"Y8]-f9
%]?7N*'j+WcH3$IZYMOa854#5"1_FKc6klGNiD.Mqe^J>FMWTI]#2<JY@Oln*3n)o[XL@`)oq^iG"I2Fs?OSSe58>Qd6[>AsG(\jN
%?$c6\JFl0=7!1/=E-Ru;_]M^<2fTHWSm1P:LEd<,M67dqG_o`USn5)6cjCQ.BoNWVDSJN*<Rg,":C?2\[Ld3D26+3fFaS]+[X=W_
%[2oKK"P;=M$^Aa7LZu-=\m!4J'd$%<FmfL&gg1GhP'_,D>j11Q<3/5HiFu3Q4heb^i8+HtH;ISdW0dG2Fc/'`3nGL?(>)tg%1aqE
%Q-9.U"Vo5rnWaE\XNYkUF*D<mkMLfC)toZ!^:aX./?!%ZE`X+00YOA]^5a.>[B/anGTBfS[D,Dn7H+1@R%2PP%qt$PVKOmKd[YMm
%'kI7tFVU!"OR`!KN"j,[W(8(p^Suq`1jD%!OcYg\JO&;qD=n*Lq5?gTB'RukD-su69\eoL+/0"84i.0G.dNcp@QYe#rV:sX:_>X1
%b(k'%CKr##d<iW]H@EL<3;8a6n9:%ODPX6ge@U_^NU@tO\mJUu1spO=F9:GL0'7dk"`D.KY"$@.@Y=qg/0n[g0<I[%.USQacddpj
%<PGEKjp+;5.UTEaq'coNaqkT!U[)P\N%/0sg=erPLnXJ_gl%O2b5t)GllKW<Z[/'mM_*>X(,;h:+o\hj&htl6'+`S'M&9?n8gtQ+
%@c/;('n$u4".)=(\AN'dCbB1WZG4b1*Rm*['GlTC7D?Qd_cQZV%X1mB`)eO"<;Aki2&@J!lcQ2_;<<^+X]E#Z&YmJbHEcrb,"@hN
%f_t;<,"@hN*lD3a<[;-rV(*2lK-O,,&i&?*&JL,Qe-j2L6iWC,;<<^k>]TZs,"@hN*k%*LW^I7S%'_8j66DN?l4rZeL_7FBP"5'f
%GAJm@\mJP&[Gl$0/dU:\LmW\mQ])qoo`f*9QlF&1%n8'cbhOnh`mC@+\RAb=@-"DF"l(f7Hn]Y#mbKS"Hn`Je>f7*3ap6u&D,E6N
%$Qi'4f(<.]%27Iq8rpADQj:Q][mb>"VUc!I)!nE]0WodWfVQ0@)oe-R`m?U(a:4p7_)tt<I5!_SM:d*W\m^2Y,;bNl8\QV'cj^XZ
%+IjO<W2iAIK6],E2Za6+RS^MbVH*HOTg_h.6H#f5oI#@4LIk.2,_>1W0bL2'(CsG3EoeK7PqQ6]rfi49jbno-jE.dR-7,Y^L!a]V
%MO<Z-\*bM5.-4XEl;7gl6bS-@5um$)Cj>l:Lf*8l7k#nd"!Yb360qprbag"nd3g'#VND[$*]A$.PLl;t3Ecsd?261Rn[uo,3$9Cl
%Yd9*%eXrZc8]c"SQ`-.Z_q$1gk,&'^nC$jXn4=6tUUmL,/&:]ZOtV8X`9?71["h43K8=kAakBA(bB"DQ'![TVjWbWnahq)C?cl3N
%[ZVJ&>L$'N[ZWJa7P,5>hG@+l-Tk,0LH6rB\lA&+V3oP)ROd=e/QSN*:/`THbZIFDD3d&DXK<a%4I.^db)cEC#EBW(`mdfdCF+rg
%]cZ1M=06oHcMcKNcsf1OC9^iV/^<8DPCm%'ml-&M-%+6_Bb7?OYJDG3b>ULC(]2[E&.jX]="bt]7`%%0r1>_eW30XDl9c;$p?`t(
%ASOd&A5;2iMpW<?S.Qlu$><s]22%&g%E`b%]o-pb,&rVQQ8I3M.(TCM'%f:*b%V$"&r7bYJJPNH-<:b]q\Pn<V`F=pg-i0tjW\Dm
%mj'NK#(d#\QFh;Ol%HZk#h\:e1_3&4GN1tu[rm'EMGcoC;,*"lLsCoHZ<_7@r8E7f,SiZ+C21+W`(6^c,kN6<((.KMApkha44mt/
%7LFudF0f)!\psT'(QuH0g46ho(0n%`kmb*7d05FnC5'pFJ5%`g$aE-&G2U4!9-oc]7m?o#,%k/tKuqKS#MKI.ofH.bCUSU6N0lAX
%lPN,4Q_u$[d-)j9KEg8O^e&&"]a5bATu:\r=j*Ih+PgaM++0f/[/ugpA@:>6L>cum`ToSRc"\B/12=sc>ab6XX$qpG;5ID?Hd<r3
%9\Ri&<5%(A$F+"AI0PQDG,K?uJZ8Ze*f%9n\2M#e6<j$/CE7"c%b@)Yk^qam\D>b_Ab;h*5j[QCY7/j&`-bBtnElI-!Wk7+R/!26
%f9^0A$Tig.H@<&16dM'!BK,17-GjIigJ+ZPFa/jrB!W,^Bte!BO4[/fUIbqme-jo_m&#E'WF&,gNN(`ub;Q8E]1K>s`fV\%XBC>!
%a:`g\G*C3bOr_KDm3]pLEtKJR;(@eb]"g$uManr*.L8<gg]@gTEd!>kGgbMH7$7SM*-)l;=AIE$$9jHlnektISMKV;0mA%d1oD!u
%IhepZpc&?locK(*ne(:0r&@hZ:gJ)^s7mZf;[eg$@\>Qp4;DC\q0j<L6F5lP`0f)OBM:PLb194h03!2Ie>RS3FG#i#d6WIkPr=J_
%!:C,r)e=K%7u82`AWT8A="T0K]We,]58i2eMB/LTLH<[L'oB55+:BP:>Lr<N!Gugt[@4X5/k%kI6?r38Phjo")h><Od++/P'NH1d
%`Gg0Ojn"3kIpGB1ku:`/ID-&?;@9+?>LK&p0k\p<!K2%.3aI1CbG3D77g@'l:VL\"<=FqUnA1!9nUr@TZVkPVZ;TTEa[iB;Bg[5s
%8u]XBSfE1YUf)h&)QKf!;edAVCm>pA!i:+6B#s[0<bej.K6L*7$jT:![RI@0BrKO#LXZ+&Qp8,DT3#dGR\gMOgefsno_MF]"trFs
%D"`V85H!"-n)+^,2$W0AIR:$M)@Zc>_b(B()]n)bc)$Yn!+cnD4/5YX:6T>Hc$bYC_lc594_a$O3&uQAZ7,#r=-Y</Ts\EWSrKk[
%TCUL1CL5iJI_\mW\nU60"D=<pk2Y+J;o?:UrRsd!h4+jKe#e&K9nT5.Jn54mBcKrP@H=BoUd92Ro9$/6hG_>*5>McBdR3M#(3\2+
%UUk.VgN3%Z)XZ>k^=J)/,G#h(9dA-LB08%4U[Y0D26*,MJb_<%N@Hm.&`/\BRf2OEaSKFO50,ZCGs\]=f4#LfS]rW5]1U,30bPN5
%$j`/_q9pb0PAn%/U))1&/<LLU$S1Nc@cX)VgR?]Z\^P_N:@'^X&HSVlK*iYLKstY/J$"/mc5ngG<E-Si\0%+0XotIFT.u@u.;hS-
%Vocsn7e0rC_na/JP+'on"`#D\S?0lBc`VG1"EAEZP\\c59rcA+PIC*BS;E$s[.&B(hBU':Ab"gaM(X8bWCY.*>&hdMGT4i5+#n_t
%SNVNt]5O9sX$2!\SNYBAPZ8ei):ZY(M;ou>fb4GY,KETkZR9Sue7-HoTG(ssgqp'efJ$i(Fpl4R5q@.R+Kh%-Zjric"LIrX8U4P;
%6$J=RKQQ@ZJZ#6-]-[M,9uT8CeucN!E+qYkDr/JE#B7\,B'QPXhYj?ToK$&Cgj5OA\8)-Wm8otaRWm@k0hi-'J'qU)]C@K(Cjsl>
%_`3I%dTmNLK408^?%[P_#g<gkCTuWn7,'<PY&P!b/14dA\naR'#[4`RJe89)mi7I!_Ii3S/6*+oXOpg2H&c]V5O#=*3aoL:fA,&i
%CP'APjCI`.TGZ?fK+"nmcY\#j=(I#I]-bE9nQ5VOa$Y=$>n`1HA"W4`*3JpNS9^c^?2p/$#49Di<W7d02/8Z+O1K,h&+Y5<('k'*
%LYXi?DY,W.CC@^h,1c0#22C#?>naJ_f,PNTjlC+MlcWf(oRhECX*3*ngY._"CTuWl4hn7@f6g>1gbhUTO.>^fM&`2q^[/1%2;[+#
%n_B;)D%h,Q0*Q]GNc1QYVY';FUZ+6d$RJ1`,BjUW<W>X7NRnuM8,aYgS'ZYARSEL&'q,TB:j-9l#'_c%eSKEU+qko91qYbm'^OSG
%k/h*-a4+q0k[%;rBnqg3Ec[3S%6nJDauALnH$q_Qnuq(e%UoahqH$C2gm!UNV2[3XJlIuu^/"#;&JI:&kmb?d;M-;$)R4?ikMEDJ
%BdBCm-15aK:b`SEHDBtb`/]TgX:9un!*jnYnSXZ@3H)k!I=aZoalW?^4!*[B4huZ\o`dWMc-5KBTV(4%cgqX:b6BGO)um3BkH[Uk
%^0U&3DSA]c>[X=*NA,3uhuXjn)Vn\R13%cceK7.WNOsP*HR9G2b0\BAZZ5&?mS4SDTgJ3_:C>3T#M$i.HJ&<YnFdtsp<_OBD!bj.
%OAu&;4jDPqAiXTsk@sW'^\ne5i(-GNc&)8eaWZg@?SIs0dIfEh$8;,YEA[7T4kMnDaNG9[YXra>V:i`r3,\N<r[d"1o)ToNf&9Zr
%/0`G)iq2RTm'9u<[";oUGYdkN\PY3$I']]\"/N=p:WiSaA;:SnBWGhl;XNW3o>bBoH_aHFWbQi"?feJ+pm@#1Xl2O%?cROU=3i"A
%k#]k)Us-LPoN9s\@A\>SG#,D?n?>5/+X2d;i!o@uF&Gj<M7j*-'59]@hL-pmfV#sDCM0Y^7V/#-mE@5$ArB0^1=:)D_G<2&<=_$F
%ZdCbCF8jHJ?cW@g=(N)?]mUWARY&GroJCt11udUF+9)$pi4<i.AZW<`C1_\NJ<k[YG;m7$HJ,X4*T<j/fb!a&\[[4:])lGS(Z?n3
%'?YmW%M</@m*3nTSJZbN`bFR+fPF99QZaY]2IZkD:]GOR33_O:O@@%N1lm>(_H/lRk(Ad?pKm2/7JQ$0'LJl/)X5h_iPX?o!PM"m
%"Z?E-`,6+\\*r]oJ.U\oa[(J>C`X8rOl%)?,pd<Jct2X\?Z%IES@He@qu6qJ)OlOs)@,1W#QQi$M)YKn+FogP^"6>rMIFtsh$B=N
%0"&g1o-2@&k7lW@XkZpOZ.Mbh!LS1,]<)["Ic)^NLt\-DZ5-Ra?'=R>Y8dtM!LKk%E_pDqH:SdPCF"Oc%B[RrThd=]OEe:hLZ<a<
%<8sQp#=\V$aXuj"6s?3hik.FH,(9.M4?DB?J%Bt3F5C'-IslWuG57[u.$Hc-Q"D]+a3mHOnZMY/fS#d3_WsddM>l/+Ta&'JnkF-&
%()P<8hlS5e_"6='0DluE"QAOnT&pOBV$3.eC#tJ\"^OT*3KR:[p9YT;$#]!h!c6b1J#9<B$KbEe*)Ze*qDBE"E5O'\.*rnsI<!>]
%g;AZcldO,i?d>A<Wit].%UA"EeZg6-`*U^:a"JH.lYr6B^G$"(!cCV_4sb`<g4l[aSqLCI[m6,G=T9"^f7R@*a,mG=#d;-u'SK7/
%LcX,W<CNGkVUrWA##ur=>']oLdEC(Fo=eB]Mtte<L?hSbBtebP4HfY]SOf/NP"N@gH>1!eGW>GKd`@#&:Gr5;c\EH@3UZC=OX&A*
%WJrEqoN7tBY(&H3^1>K#;>n\;o#7Df/>@VS<PE,raj5f"/B_udm#R#[/Bb7k>?q36=2+UB"rqc_\A+(>m,r5o?QgQ-j['j'hiTm-
%I'J^m7e?[.OOK"<;t'^#>l-M=d`T2jd^A!)%?+Qh7[CF$]?cAgYBJ8`Ll&iD/$?G)N%;hmM,XtEN_a+M!M%0NMQ;L7,_I123a';U
%A-VT1BkKjcO8*m9;MI=3,>9%m/IJ?0+9o256Eo`TKf6!D/C@Gc_FC5ml8?ZDCWXY(.2R5tL,*cKGHCc49Ag2G6;$%pq\c.jk=q]h
%&==3h3H#h\5T-#n7j4m00.bBc>obU3*I<i(7ahH/mq+"+`FT^j#:iFMLVo;.E=ga[@2&\(&JV,*ZrWk0-?0K'k42Q6H9ZNB6l4Rm
%^&-.!esRq9k51jGhm!",7L!T[i/@0bQcPR)1^4')'gum`KRt]q.9FTtf],P>'hepo,+t69G6.ufs52[W/[rt]$f8LQmi_FiCf+Y,
%+@&8]@SebD/LstlOt97fA;1!.GI,ou"FG?mc9n,2g@Gk;4W%Q."rr3qTCJ8k<A(;&)0?]P\pJb7F]bTR:p_:,0NYeQL?9]R+H_Pf
%)q][%goH"V<Q;QXoP@?#\))_Rd4;r]22f0no;ddgc45\,^HdIr/o<qk1j%Wh;\+%[QumAMTncgrLc`;-GK#ZIQs6]TSnIAI`Aao5
%m^J]^>%@8J;EI)sD<#<qB#])1J!g'!/&T51o@s<j>CpDiZ5H,B9<bL:bbg0:Q4_G?bX@\h^9VPG]fM$aCf,-ciUp_gXK7HVpMn0U
%!BQ+pHSbH<QJa/(LL'Ne@loRSYkfB9)6RQs_0GJ#bd$DaNOK^`oB\bsCdW*r^O)-8?Trgfr!!7/\29%OgXA$Uc<J&89T(curP3&t
%c6@GE@`td)o/\8D\pdX5/#8p.iQij8]Oj&?H1>UiJ88667'F+X,T<qHe0NJAAR(93Z2SFS4(Ijm=&'Z7DAP;M,AnXDhEB)+[_'&V
%K]2$9_..dI]jfZ#`*m:P0><<f:P\MLc@-)!&fFm$8=_>`L'ssnHEQpEdoR=VX12iTSsu+:1!XDj2MG*:H2?a?&*7B>B5urQb+%T]
%;3<,^86t>M?^mKP:"B$G/s1Qe60au"\+'%MVRCYeWCKpXbuokRd8`bJZ&5.M2Hho;G?<\[R*B_`7I,H?J;WIOr=bH[</nlLh5Gh5
%EY=k1eRMod7]ZpLC[lel.a#/rAd#.?RtKNdcs'F/hD"d9D>4nEcYA4NA"cl&iRC[2jU2L0p?WLL.I<c%XO(EM?m"!0bf%IoW*p=8
%C`KDJ4"G)$L>9Mh<MR;"H-+6tqjit2ror$Gl&W.G[oPD6qJ8C=Al$bEb2u+(RGM)pDSAiRr[=6gPg+DYfa-s)Pg/Qr(E3-cZ&/+s
%6n(IU'M[Z^hCcobl(\j":iON]`HusHQa0aDhckSpc+gZlnae8W<&UZ9JtQp&'rU!o2ub9FFlSLcK!O@ga"*X6G7*g0U9:]PXm%6F
%A"2#ja]4io(/d'*ndXYLD(J&/Jb+4;S!0C%qiA&Y[oPDrF(0)KQEn&l'B71_BROZSJ)$u?Q-GnnCj>[Db%>.])`Oc&\X&.p;E&?%
%dB*;DDH,MQaSmTWhd4tuf,"3[2Fp*GZ8mWQk-[Ek<4C">BLsPTO&IrrV<)UM.&1>&o?T:n)g1uS>5_1OW8G=rrZ>_#YHl92XY0=@
%Cs[-,#S9A_>b1]lZK>\IPYG+u16HuYF#!l>]U4[Y>9IgJX>u]2K:'p02;aC&RZeV8Y1?q+YKEV5fSu%O-i4-mUP@-c$n(>%%ETbO
%-^.NA*a3\WDl"nPPP'9AQ;+lR(?4_\RSqNdHKV1GP3drVZOVnW/2]EKd'RRb(;:*O^_S-KPY!WdLJdt1,H5rQK]:U4-KJRgP_FAG
%[jgoHXd5(ZC:332S,*t>+68g>8R"lB7V9i@6WDI?mMP++N>DBZ#*4:E2Q+W#CO_`YpGlHo"Z(n&$B=YMI:^<n6I/s+%beoGGrC's
%4*0:qH0I6\lT(KDX4YG^1Ekf1-])Ep#g-b`N=d>GafA+)nX=F;bRR%Y-UTf;`15k932*#]Z>k&RWC,bd[mP&KlDK[QiYYgRb-W&F
%/8h8C'4%$7L-BD5Q&q]Wndt!;^gVJ;1Y`#;AU4q(?5<C3-)>!&Rf#pj8P9-V:!Y;\Tl^&-]^"aV\i[Ip]/4hgYB'.l5J>2Y3ij:N
%764n]L5u#A;&'E%gX+'@]?1Z"cj<IKoQ7a?Qr=k`20VX,>+JsnP5:]V^5l?;2KZS[`rM-$F>e4r61'H1.j@EJNVrJeC$:'Jjfsq^
%5IP.oL5sW09PWc6#P`Ef8/C7q*O<Ss[98j(8fXLtP@;U`6l`\.]AMr/cllcB6([A))*7bDdrutDc@uh6e+t`9f%JCn^1TB)q"ldf
%I,c";.jk1:Ds3],`,%[;,Ah\IYQl\,(\m31k`F$cJKKLU$m"u-SdKjelBk+;3O"5J0TBQe*$mUYO>C'lTq`^Udj&oGL(;Z<D1NTd
%):EX>U=F>K6iYpYMP65BMe@0Mq-j3o1op@ak]jPO0Mc%M8_`TR;[k=mTgP&=]P;-M%@t^un]jFk_&,3NEo&UVFUEO63e^*la8\\S
%gX3)m6RTcqp)DXE;Sg`%phei50)aF&4#<rA_Ef3FUY/%h1N]p_G.k:3oM-)/SVfH,r`U\_'9Ssj<[VDCLb7!YA`ur0]%ae_F2.G/
%)`ej_jEF/8f@eV@n`oYb2fu^9kMRl9$AK%I5kWKABHZJ$Q_11pr4hY/S`a]1q(MB&cIu*OAhDQr4aUm%e9.sg`qR&G`ZR=@PI6?q
%^-,7%?#k[[]Wml4kkL.^i:T3>J"GhU3gD=DS&I.)1<RIGObQW$`b+Eh4n^dlAa"BrRpLE1`A2PV`_'TL?b8"6]ER+u09H/@Ae_X:
%$lr'8-61NdpL0NYkGGOm7ZY5J\hJ6qK&4(dl+DA^FXT=&nV3(NThK4b?l-<&=sT)_KV6Vdh1Xc)p!/PP\hJ4s*4h3N6g-%u2KU^;
%"rfo`FP)sTYDn>:rCZB+$m"u-DK`3ankChZY\QT2NR^"',Tg`V7bk.hd9!TZTd+Fg-!@Nrn:j]X.gY@l3bUg-.s3[jTXk9sYC\SO
%`mB:"rD6d9<QNS(L(:.W@d>`8dL<t=6-`\]Si12>Ds1`CY7KIBcnT2+F">\cTus7Y-E`mK*RDJ<5SMbpL5u#b%(*a^bg:q0bol?,
%7i4:SC#/5a)*Jm!*n-!9A5L>D8B5Fj-8Ta!Ujh"tS"@_1*A74t0MTl(L/(4da!9C3/AsoQl.MoP)*4B>:e,g<T5C6U%Xnh%l]g?^
%HBWG)&e(>YKeH]_[-eBoN*!E2?l^$G/pF\BCca#C*Th])W8>oW[=c`?/iV%c7QU(h:51TFkW:l1Ze@^+),a[u9/Fak]C'Obgl/(Q
%Ji#IE`A5>Ga(tt5Ai"+GhH"W!iE0j8J':`8/b8-g?,Vp'm3._1?0)Ti&*:^&XACC2kL,?Rf,qG/nj'X&eNX8S[OrdO:Th+*?fgIn
%\9Jh8KFGGYq,WQM?a`_1IP3ag"U/[STebpB0mQOML0p$]Zkhl/kdnuE4DfnVUg7[/"-;u0hdu6tAk)B-c8tSZgDHJBqRe[HZ/?DU
%cNEsGOh\MSXj.o7Z.eer-O90VH"FWX!PLAnlF)upp!uIs^BV7IjelAp1+Mq\FnT':=dWndC+Z.N>GndPfS5\nG+K,.>PteP\Dl0h
%3[pASOfNG4(D`=)XplGPI?o![VY/?D;<tNhF2kD#LBBL6qIn6sEnRP>/sV-H1tdb"6FB,?W4hBn6J?8jc$'-^C47r3*-C/e_6)"%
%F#6EX*;,=g5fGB]Q6(@Fc$939ZM(YCN]Fj")u7LaBs,gHFL6B4P1'%Nm"%%,"7"(=Vb;+FT%'Vr)sd-3`4&K_bba<J$Y__?h-0qL
%$gGgoV7q9YFd4i6=U2[%jt$75-ir%Rc=^e:l3upkpM&jkR,8t0rH^Ylog!"_71?F+RW!5bWa^dBZ,]pm6phKi#9$Wi)<eQ,e9ns1
%]u)3@eZ+sfp6,Lf'l#Bm*u-V>W1\QV)D\:]JUP<J[-p?KnW+PWY?J%$"E."3d/L9$ckIlIo&.\H/fkP)SI(o2CEMTN6;VRM6#3Xi
%i-lWl@)EK.F[S1JaPaMWZ<eN&0XOj6LdPMufM2<Zr:=*&D1&,n-^SMM>^-Z]*ks\:?#NH`6g'<3:`fWYNN,Wej1D1.[.Vs)BD&0:
%A"f]"qum$cT8F@mmNh]A4-;:1D1!>0)/B1g>bDhKh%;MJ?Um=nf/@rVd4,iD`VrSUjmbFCU.2l'.iP5TaERN?I)m%nL%>UU"K[O8
%pt/=\_Eg&q'r?as1")NMf>c-iO2j\Sa7#l`^/mXIq-auh`eRAo!F'Bslfj`^>(1?Bpjmb*4FUd`%;Ng>oul*h;FGC"U4ndg8X,gI
%NK6l:gn)e.flgj7CcFM^4FTMoQQ:3P<1lF\2EnDk1t,R2c=cd5Y76s*ebfj8+U?Q%!>QhFZcCep^4t58BKXd5D1$/t$0C^?2Tr?D
%%s:_g5KHO_nGq@p_J2#6LuK1V:`b*p<N%=_^K!"(j,8s9I'6_dKufifl(V6rYI3oRoMJ&&r2sepT.ZR#PAU8CdrX4fp^=KBZ6;dh
%<\L)VM_o!r/!"U6)#q*\1e'E9U2&]riaZ``j.+lD!ch4\MbEosb3!eVH2OY[RrD/^*Bkh`:\um^fUo(YIK37edgN\BMcp#02M19#
%Uc"7Q0[[s5G6YROnbm;qN^%dflh+;()IaJ.ZqZ9kj"p/)N(>E&X*PM>2*KAi6]^J6;#b\1dsHL+dTA$V?1-7:Q>6u&+\,0e>6)9A
%LZ@<^_,3'SSqc+$^#k4P;BFrc`J`DF_=N-`WnUULTJaF_5&jl_N7P*1Kcp!'NX&6l+1Wm4opbL'YD]^p#:3QKTC[uo*d=m57V:u@
%./'5XAe[UEj65Yp=Dh+Y>)+EnAYQkOS@)ugnbY<(D"oPLoqA1D=`%tK@h"8;/lE<D9@KDd3X]7rD$:W>%^/aDpu>s+Bqb:pV,H!0
%MCSTq3eh"c4OjEpf/0dkG(lY-.,0Jro(k>'<@3P4Y%_ZUAR!LZ(gR?<g=3<,a6NMAmBd1S+o[-<g\g.CbWH,uH!>V)#dit(>4W".
%LPg)3Y/1GXgtit9.@Fj;^?L&a$4BZDB,W5Jp4@9J\[8),0)]U@[3e7s#!T.,YcfnIPkb'bb@Fd!:$@Scp+[%SL>#<RDbiWY9ET;0
%C;pe/iDu3TIeZHm]-0'0-7SK3Puk06BK(:AAqrA%Hte26aSl&Nj5g/\&b!$a!$2t7q8`OW.%:]N(X?0=!+,)lJ/^MCcZQi';3iDd
%W1\9XZ0n#6Ce?h.[qi?t`mR65G-\]%Fjn4RV]>6P#PctfT7[*_q8BZeB\lo-k!P3/DUuOn2!YYoYGsZk^OL-+jqmash&DO\LaRhV
%SK9[d+;lEIKbBMN^P5dN^3ofo5[V)[r-E7gR`=%XcKS^p;.q?i1:.hEdQZ@+pdZ,:o_1KE$pM.FHZ:#U=AQQGCW*9VY.LFD@q&Q>
%lr.i"GNR08h:HKJ`PCNb=2l"MRWF)*61,,VXkb4UIl2CR`sq"#>1F7+N_ahLk;M[^e;S5CB9DGAfh(SJL@F=V/Eem6aU)`h0bX8L
%+U#5:fT25:gEXS!p3m$Xq)8u8!R%*D"eYWleG<[J)9r<%cB4iI.#@&)%UV?eZM6=TQt!C$$_Ni7<HpYu#R+(X[1M?Gl8/EEi]j\G
%7"<bprig!sD,6u_Frb5bA_@I:gI6'iMS7B*\dC(NfaF_>COEsF$thcdSnkgO+J#njQ[VYTqOW9*9jINR,<qg2E*I&^(CGU\(G%hr
%1Wrkj9h=L#col/fARPiCgh%qK]U],dDL365BN^Y!M8bcbp\G`EU'4bF]BH^h!d>DD_qS_YX6i&4Y6eRt^[U!3?Q&=eQHba]7snlm
%_oDqV]%7Ii?jZDhQVk=`G,74RN=q;@-0&'"aDSKL_NB_uD0>T$m&k?XhSQO#SM"(=ZZ^S.qPMBd&jp8ZTmXg1Jc35o\^n6*@&<9-
%r<2J82#65>"A\Z5halD?.Gdkib7&ib]EoK4/qdSlaF%W%=Nj9()MGJX[,;b,^;,`<o9[[`a^1q'O-)]^rD1V7k/_.Wou$3B,NiT5
%d:<(oE;D0[[da351&VWETMFaaF]+l.L$a-ClO!FVE$(>9M&uRM=:L7-?,)*U-RU2H7bc2ZDhkas<$g:82V,WCaN*Pi[D:J&62Cb+
%Cj,NBGTTDU*4B[phcN-eO0>.:_@4pm@%AK;lYZV;`58C-Z0K"]@&7<<qX<pqZ^?]tMk_ZVT(GaZO@(,3XW1MJ&1'Ja.sS,f/r/4j
%fYGL6'Hre2?%Cc$TN*;hRU1dlGu3]ZAYf=fb?8SD&VW502ru:_KdZr^Fr!2W2.-?k;EMXs[ZRJo[m4!jHqVqib:hrL'NGt,(>Y`>
%Mk9UTlF[)7BZ1af\"AT))_<!Lr`jdEpt,_7V0a["Aqh<:4?6DISk4jkdf2f)I(A7$7OkiaN"gKm+0Js/?g_h#*_17=%l9Ua`TjJ+
%mle+ORP3:E?a'LiXo<G8mTr,lND,BIX1PdieV[AA^3XO$O5rELcKVY(GD:p7DFR&74FL)AEL-&prn<dPW8D9Do4$A6oCLR@i;LQr
%1h8sb8+Verf3UL'DPjfF8Q#)@$?\+m2-7*If0gX"U^eOVqG*RDlJ+07j6VF%=OA/Z!$i[/X*kB_#J6`E/$Cu.'-?@r19hX=(G)pt
%a.8.(61ap'dGrp!fBg`W8b)T$*?G#TfPOEohclk>^]&Of2oX-IK:(JZpT>ZtFb[!%k#q0ShKiWpe%<qPme1gqM)lIA58HB]A'ArM
%fHBh*fgHC3Sg:K^4HOjgn=S/Cn05&\C)"FUXV.&^AoIOjhfr8RkaR4'IrkOSJUaLE%HtK7/mO@ck55V^>Qj(+Z*2_nO^::kqJFct
%Yc.jD:.b@uH#Ae^fLM\q$t"P*i+pQcM>&l]?FTB%hMZUKqXY_5f[95]aH7E1Ir6jdaj728Jm_=Nk"bcE>Q)9\2g8CJ0rPG*Tf8*]
%[l006KH(,,a3^H*Ghu"f5fKj8Zad_r%kmM*.E5EXSArHI5'Z?Qk9/1iPVT>ZmgZL0/I/!E=R-qR,E>aT;u6"acAc--I/UIeg7B60
%)W^BQ%u^UCdqVAGiTr5'a:9jq!VI8q,.lXSA&F\4m*!'d=oFZl)D_7mZfp#G:;0DgVoHBUC*7e-?JmsWnjg<Fk90?/hn`7R&`]dO
%7sKM[,fB)32?28W?#u>h:DR5LS'6T8;=b3pJa\qF^A_p'2^)FqM4%YAAoDEKm,fYJp7ZJ%]JUaH;UbZY&"C<sLH_sJ"noX?,"q(c
%<.bqhn.!+YrEjDohFDtM\"BK.3nE&pk%&XaVYi%GEP6Y35483.!V=dn/+V,SVkF(;M(NfpomIi_+FXlUFdb?\Vm.#/Cqi6Lh>@`Q
%_kpVdV1mIZI6G(6])D90EjrA;`i<2TXStoCA@:tG^Snk<ZLpWHF`9S,V\bl;HCFBlitb`!JT?/2eQLiemPIOBCo`f>#P?@^\+kW#
%Mi\&2F5HMX"4%R=p]d&<$JphIK\X9C%Nn.6reNO3`?8B2S;E>8%kAVaJIA\pM_$1,UH&k?Th/^LeAe*e`q,*jpHZ*L#ScMqCkfb(
%"l?H2l>*_%>$,Q\-_Ug")cLS(0;O69-3T>>:=NVna:EIj#.9/fOhtqL@YIB$VcqR(V<DNV0YPZkM(aECc/fNiH3SrPkLb)q1AQYA
%p9@XeAlWR.%;u0"DSDMJEk;0/ZKrRA]7r#[<,HHFJJ%J`k"dsl-B3mlfZ0'E$d2_#r3?7l1A<Wi4&SbpcGsO<SBdg6J$b*M*!Z^Q
%eR4EL$-pm_[^[,+Kltc;5*O%!1e<,Jn^/1%ZA$lGHI:W_q,Zum-a.1PD>F1rlW]0+1YbJQ+Js,/\D9W/rk\KT9.>2h-I53N_T^Qm
%3^dODia(eHp(2:Aps]<?5:.3@-SLRk5;lj)cfY]VfYA</'+;kEPQ.npN%X;t0"h5i7BgUb8$S`kZGCQ0]cMY)dq9AdH2uRr+rEK0
%D(l$[5Kl8'VCcAoi.qd'k"4OlcTT4HW?up@?H-2F!BLbJ8"+B=mkPM>e6dD%5(%#=n:&$,q;A$c0O]iI_XWP0kqcaOc]D%nhLfT6
%m8KVf,gXWr"1TQq+2U^=*+PA?;#BoRRGbiO*Zs=V!?[,"UA.!AJFqHAd<hlrhRk400]$rp"F*VE*[HZ;8D!UPkYnbFn_n'Dn<bt>
%ic8kuHc0C7H:\P`YEm.gamn'3F4l013(K8H7`PhJ>ls71PMOLr2$($-csqBJ1U=Pn8AOO/Sg3,G+U-j'#,]?cU_k0[Im5EM6gJr1
%l*:W":@!4d>W2.9n,/>)qma2Y*p3eU(kAp6jW`jNC0>d6DD'hc*#oS82[c0Fl>$EAEI2/Hb]0nlaj8APdc)Y$I$:=d3V4p`JKE;)
%*Q]2u*;3`=>J,Dir_heE.o+Oi`ZEBm/TP4I28kb\N*[pgd8c-+5hnut3(MIJl"[bU/$5aP-u("AX2J@Z*TtfGHuFp(]@)!N`977/
%=D=>q0\&^qPigP4;r.X1o9RKm?qg)4l!B`cjLRc(pdg21k\FnK"O+=a517-WqaNLk&(P(_,:tB"6gMBI,EX)R\3;LYZ?\.Ff>+#d
%q45.[f7iIa`XD?,X"3n`9'tV]m3gaAV_L*Ucbn^Tl4M5nmn\2r#'D.0VphsthQ_A)8Gi3&gufj.01Sq_i05l)VA-8D_IPupQk@W#
%cl]Nbm;5T&IQ!&_@u&W=`3V_O-(=DYgUI[#/A=B4$f*LI;&*>Kk!EoIfJWTDmMb6]oJYRB+kJ^Rq0)0Q\A7Njk/UMP"C$jgEaYU6
%1"[,p@(/Od1WF<ZD</TkEuREFh1eCB/aX<)JIO7jXC%QZ#Es(%H+.$BlgPs3k5urVbkO:bZ/RoY]AVLfA_1=aD9[.]Y?!ROT4HfZ
%ULThtcjlOD5rb#I#g_5R_2^"3gBTf7kV7>Z9==N5+!b@j^:k@ogM+NP)5_.@(K5(S$q,GkYI%.YT<ouemcMpbW#o\82V8$"3F-0W
%3d'mi^Ro$10j!L&J*[umroMP-m]HKbeYYca4mX'IfDG*;QO_Ea?CYU)1\hL?(?0'*(>6#V>(e>c$@$as:0;dgerX-'-9oft"DdGH
%@.u-`g-:2t,oi^)e6FcY$p).9r-e7,H#HH8hAcL:fIM6Z&>*Qp/b5rk&aZfpR,ku#HB:6JaCrhE>2Y/XQ@4+gBoY6!a;27AdWK_9
%c:c:bPm&<qbs-bh0'kMLaLTr]1CsrT^Ht]\p$4bg]iHK%L5Go7B[lXo;cj80qji#&/:]N-k+1VYK4+R8M\@YHlEm!KP"W^3ddc`t
%-moa:QnM0Y.F@I=M.qGiA3,r%QYT<H;YZFLWPQ9"r?,LS_!\0]pCH+5US,p-U]6"aji&ZpG)U,%j_!A5c)!lDpMqd?7"Qc'BbklM
%:/9>BSueb<Cg>9$JmHq"Zc6LEh3paiE<P"/IXB,SeQ8lZV<cmJa4A5ef1;It,MkWorIb-ncA6@;7L[I,Iol\f?"Q8or4i:.5QC>I
%s8>1^pV05jlpqM#^9_;AjfNuUolg*%Gk(A!a>AVlXLIn(lQak'FMo%80f(S9E7<+Z&9KpjG=TsZA+VZp,?=O-i*Z!R-=Cp'^H@_l
%r,;@G%K6-[@/h.m[?:-EitH:*S^Bq;Ftt/^V1R[YV%HW^$\i9Z,;+[QV+RFlg"$Ea\;[`L!>pcEON`Mg2h8jW@(-REr>a2lf#YT]
%>(S0hAj/o&!uf@Gg"hJ;GNIIK+1`tTa.-7$G"`lb9^CmGh/FA%<XQ/?ANHk&AiW=hG!RYS4Ph;%rU:T=ZIVL&YhougrigA3T,6qg
%l=9_f56tZkmHNa$!+:a"@;PW,mI&ummc*p-nWkF3^s.*ABCO>=<g,[%OW?I7pI2\]j@`RADNkK>OW=jl,;OeU<&27<aOGu<VM,Si
%9n>tFjN7&Q*17Mn&"1FVa`NL2MIh<#R6I,cP61V)di9j*L1,cP/Hb(T%,dX2UVM?"/.Iq>b6]h*#0<"m_`9J$YTGX&Topj)aEF8Y
%S)&NX9OTgN8>_pdR78'fb7Wu)6kY.L."U`EZ,nLD6_7k^*uoPI6mOFqO-7Q?(n8011?8I94F%u9,VQZgP/lDrRli&1nk,?W0Zte9
%T+;P?AF9jSjDU#r!Y!]1$"u`<^EV#q5U)3[:.caTCO@%UCZbgW>$=IW"=2Ddn"_d\\&P=c\404Y,PpA\%p_Gr%hkpQm\OIb2ohh;
%\5l?iVrIn%oRK[Y-IU#k9BkMUN_ehWc()TF1<bhB".2>$HZ)0IE-$CfPHf12""g10G<Ebq0h3U@F*p$40m(hV495BZ$DKmk_*Laa
%93s-5FB^D&k_H$LVJ2+H;eC9ZTo+KPUu6(n0F'7#N'-[14:=CY@u(Q<a$bY==_&oe"El6E/5p]/o_BR;!S@JV@i6k.^,R29rQ'@O
%9C">(@2hl]ZI6;sN@0l#<A&u.V@>6WBZDH;XouaB0B:Ii=YEWM8HO[38O]GtV6H,^&[N=&VN@ERP!D!E83!E0aH3$d122PD\I?]&
%$F][G>r.S=$Y[^k/4Usj;G&28*7?-u0Ng"96r,'T\ZR)uiH_"-(dl'&;(BC-KLX[+,LY\Z5i!^%2-ki7$@#3/*(qQ);G/>;,gn"U
%OY2t()B(`n,??`1%M"t#JK.l>]Mcp"+[f3TT+G9\$a^BC6+ZJ//q^E&O`<uBSRg)<RqtL(>S\00RW[Eu_pfC=YscGV[:Bn8,&M?4
%l#NPT2*eq2h#M$(eZqaPOd*s87$l'ukr74ua[Vg(UuIS92G#$R2S"Wc\K(P`EY(?2*TBge5TEEBHrA-6!@6)?(Qg=/MHJ>lGRm]F
%Cq*Y,#pGHeq1RsP=Wl66VG1<3#tW#_V/2;[,&M?4l#J#*Fi"W3"AgjY/XqD)8Xk)q]%e]C94iE96Oo=i=3Ds76rGA(&7$mrV#$is
%LVb><8AusQCm%%-D/p6QE`o&DpurO)V%K1r#32'piKRM$M4ftdfnAR0UPQ<O8Q8(fPRLVc-RhI3-6J@&QN^:C@JS#Z&s.uHC=sk_
%7,$]GdcEq1CMVnr6TIt$>V2Fu&4r:;6?Kah:tL<47GIH?FU:a\.A_-L5pL6P&a=<\M7"WfXW/`,Y*MgLLnma/,$f(#Z"6WB+cuh;
%_q"<L#a(@n-Ua<E!pR2'Ckb8(!D(0WV/2;[,&M?4l#J#*[3`H"EhHsQ=uH[1OuE,lFLb8e<]!C$6jf.f=3Ds76rGA(&7$mrV#$iq
%L>7^fUuIS92G#$R2S"Wc\WOgr-2tIq-lK1R9gXZ39g0b,DA9@9-AdmVJ[46Lq':Vab2a51bDkS5jBua+:bl9)T;3#iRs[W8gdknt
%P%][l-lK1R:I9l59g0b,D?R5!VM1"/.8W'1/Y@\-8XFhAFLdMR0Z21["AgjY-(i*e8Xk)q]%fhcb@)b\![nqhQ;9i'UeO#s?#C@]
%3&iJ[8d^dl=3Ds76rGA(&7'0!#L'Cc*W_K6=3;m>7+*D(OY/SUfQ,VHN;uS*X6#NV,&*7%8=(8aXJ(?=EB-iR>V2S$&4r:;6?Kc#
%*%6N3nHbdu\5GL^+d+bZLig1i`0S<1NtFY!E4('+66pF=&a=>2LrJQ$7:&Q:ZJfQo,_S_2j:e92NT<>r@dD0fP2T%/,_\eCj<N+7
%7M8pkq!rHuA@Pf,#pGHiq1s.';8ebWM(^Lcb(ctYP7SoeP>?ue2j+9edhP-iE2@rF66pF=&a=<\M(MAJGr\\V>V2S$&4r@=7(V/%
%@P(kplUl`6iG/06KLj8H';E[0j?Q;rbKGI"iC`nkKh0qY,LY[C&mL[snoCC6\6;'&+d+bZLig1)`7e]#K1MYO\6;'&+d+VVK]mG$
%3Dbn6noCC6\5GL^+d+bZLig1i`0M^`]Gr=;Y*MjMLnma/AVo.R!b*^'M(^Lcb(ctYP7SoeP>?ue2j+7hM(^Le8qnkXP8#4Q?1Nb(
%/f^J?NI5DBZDT)U8qu4kQZCZ?`FN%nZPtbh7@/8!;P7hc.K'*>^Gt`jGK4OY+Va:'pT0b\2#;N!biT]>4NiQ6A>68?`GG7pf<\pE
%?0LTW0cM2?c_>j_4ABISnA0MO6Q#mW\&p0<*J!MB*M2jgd:Fsc/D*F=iVD;cq0+&;PWj:m#*1jPPkMV#`1,Gc$^HSrge<9(_lEd_
%ZAntZeYR,m*A:(kB9<OC;BSc5&*N/P^qT"PDT@Zu!P;VA:F?8*kR?B#SID_U3euJ[U1AgT?4lCs5b:^mcI#47IF1(1*a^3`&$K1A
%aOBCk3BAUn004mCm)q/cn@E1]*1[,#;rJGC(S/J2qA#]oNC(`F])84gNj'^RUspB%mk7:IcrH.Ta`c40<!G9Z)Z+9aB+DEB(Srg!
%X@F^M)s^?.K,Z7nI<FI(LYMQ];HU@p1+_08)$W#t$HrB)iA68DnLL8oBs&86a>_]YBOkuiM!VGYT/gHJ-_QX2f:u;cmI_lmoN"Rq
%J"?AYiS$J[9%m[6;TUfKUK#ZG.@'l)i\Q@*q+rQa[)!e0Zck;ZUNA7M;aS\+FlP95C\pq#R21.6;SL*kV3JNY;VGbJ5'+6b&,"58
%-@5ci6BaRt;)1'8PkNjocV2FZiEWF6;VjDCqp$1Xr6=an8LJ'KUaXO8HXAtcZ3n/\MBhm]r&bsjYq![AOFYt;:1ug<Qm<-/-\;B*
%n&$lG`32H4_&*f;%U^ikV#gqIpsB&l:REu*!Et4Q9&Z8J:80^V&C2'tX&Rh;M'.pEd=b&3).:Pn9&H)G"ZmZD(rmF1Z]r<u#)s=S
%7jQ>jJ[AXDBibX"7U65Yp`a.4>!.Y7O[ASoUq&%<(61;rHGT-'%MBW!(C@Fti^j94oSFq`R`k6:&*oTo$i*s@3JcdSN)`L/,_8>j
%7>",=.Js0:XeKj4:r^ma$&IW!3+#a]8H=S]MFJl9AV$^Jl)j`j97\'q,j\Ee-Qtn+-R'\X&2p+.OCNl2,,J0[bF-_Ih2!I.6rGEW
%OYf"[#o-"PMun$iOg%J1U4a(LTnl+b>Sa9)+bo++lPO.C:^Z8C,@QpB6jY$"4qWK>F#bB!OYn.0]H,5s):$=UV%cd)Lnmj8,&&Y;
%A/l&V&p?G?(rmF!Zd]%K"H=+Q7jQ@@J96d:1rFOZV*L>&&pC5XPRo%<'2b,R2j+K5n!6UtPR162WC2sf+t44g8=I^'K4_84botE!
%J2j]&=JZd/!_B+`1a6Wda+BtH:.[C#G:nMfI$$*U/Y#5U8=t,nUq'>bY^Ce!!b;$MA!U"Tae4b_nVF!OOn:]nE(U7010cE(KFg_K
%Ld]Zr%`j$JN?EpR$<46&/Y[n08Y:f*Uq)U]Yem:V(a-^6)7u+W8d^[pMF]#;AV#fG2]P'#,(X`]OYBE[TL@-tTm/uRgaIJC6fMZJ
%J[46L!@<CiqEu#Ac"2Gl"/M)o&Z8k8;R&hCSg9CgTkHjB>`JteK:!/=`apia0+qlrKp)c\.27h6RN''FKP"@dq>lQ8MhG5JnK`]U
%qSX$kc&JG6TB['@W#R3'XqX]1Lnmj8,&&Y;A='8_N)^`h`@SEI&j[ariXnb'3FKgU&7fVjO'Dm!q''75>!.Y7OZr;g897oVZU?C7
%TItl%I$$-V.@t(s8>18rdbIB>--'mJJ<Jl+!@<Ci$:Q5'k&N_e7;Tm9`aph-Zd]%K"HE&1-UaCB`<4jR=Cj1@0/@,g`KL]K.27h6
%R`b`"!2T!Qp6@(gjc"juC&oW68.%d2P3,4gTkm7t2CO[KN.bJO&LE*$qEu#Ac&JG6Wmue[]c8F<XqX`2Lnmj8,&(p?]oL%3QNJPO
%eKRTkOVE[D,gD=C[phr<?R\f0>V2\'&4rLM6DV/S9X#fd'ff)G>UcDC&4rRO7+,<UaLLUP-g][p0GUqD!_NTT'T,C+c&JIL0dSoN
%;P7j9>!NB;P!0J3896d6A(!D]pcni^<3T"EU8/>lTnl+bgdl`3M=E)$8qsB8PRo#f'TkqT)aUY2^I>7J"\OQN7?e?-W=r-r1m\;B
%<FTZcfZRoX$?iC:PSbSn'TkqT)b$sU4M<OI2I%i.KFg_ILdIoJO\@IHDL)F^10c9&U_$+kLd]\H8:'[-"WIK,$s/?8+[f3V,*=]@
%MI&XX]BO@/Cq*Y:#pGHq&VWbs,FMqo?1eJrA@PN*8Kj6`&W*<oOn=Nj*MS+JiG&rNKLcG=,jD8D!/"Qi$VGj27MJP4/@C!@5pLg;
%$'F@>d;,0`j&Z_T$s*ca.7@&^,*=]@P$VAPji`4<iG&rNKLcG=,a.:Zd>OS;Nk%]3ZJfO1-%ng-*<j@P]9/JJiVgY"TObR<UL7Pu
%m)j3h,A/Dt]N7*i10j#kp^b)#nLBSIfVG[7@$A0"Inf4f4Y(-bN4tkuZYr9>c\gC=6?lOH.J$u\\n[cn*o!fT^TV#8Gm"uA]"#HQ
%qJpTME;bsqE;OtO^TL'Z*Zq$20&Eb'dA;u[Qg7`Fd-HhG+&Dn<#Rh%EN/onUS!afe+(hlg\c~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 191 x Fj(Fig)o(.)f(S4.)p 1 0 0 TeXcolorrgb
33 w Fi(The)g(use)g(of)g(multiple)j(pro\002les)e(is)f(one)g(of)h(the)f
(most)g(important)i(features)g(of)-133 4681 y(the)28
b(proposed)f(method.)32 b(In)26 b(order)i(to)e(quantitati)n(v)o(ely)32
b(measure)c(the)f(beni\002t)h(from)-133 4764 y(taking)i(more)e(than)h
(one)f(pro\002les)h(as)f(input,)34 b(we)28 b(visualized)j(the)e
(distrib)o(ution)h(of)-133 4847 y(MSEs)d(on)h(e)n(v)o(ery)h
(pro\002les:)35 b(the)29 b(left)g(histogram)g(represents)g(the)g
(distrib)o(ution)h(of)-133 4930 y(MSEs)14 b(when)i(the)f(proposed)h
(method)g(tak)o(es)g(multiple)h(pro\002les)f(as)e(input)i(at)g(the)f
(same)-133 5013 y(time,)28 b(whereas)c(the)h(other)f(represents)i(the)e
(same)g(distrib)o(ution)i(when)e(only)g(single)-133 5096
y(pro\002le)i(is)f(tak)o(en)h(into)g(account)h(each)f(time.)j(Clearly)l
(,)h(unacceptably)f(high)c(MSEs)-133 5179 y(are)g(less)g(lik)o(ely)h
(to)f(be)f(seen)h(in)g(the)g(left)g(histogram)h(compared)f(to)g(the)g
(right)g(one,)-133 5262 y(supporting)18 b(our)e(claim)h(that)h(the)f
(use)f(of)g(multiple)i(pro\002les)f(enhances)h(the)e(quality)i(of)-133
5345 y(results)g(of)f(the)h(proposed)g(method.)p Black
Black Black Black Black 2034 1540 a
 /PSfrag where{pop(r)[[0()0.5 0]]1 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2034 1540 a @beginspecial
0 @llx 0 @lly 720 @urx 557 @ury 2420 @rwi @setspecial
%%BeginDocument: figures/result_hdv_result_detail2.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: result_hdv_result_detail2.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 8/22/2014
%%BoundingBox: 0 0 720 557
%%HiResBoundingBox: 0 0 719.8853 556.1680
%%CropBox: 0 0 719.8853 556.1680
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 100 8
%%BeginData: 12784 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FFA852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FD08FFA8A8A8FFFFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFA8A8FFFFFFA8FFA8A8A8FFFFFFA8FFA8A8A8FFFFFFA8
%FFFFFFA8FFFFFFA8A8FD17FFA9FD67FFA8FD04FFA8527DFFFFFFA8FD0BFF
%A8A8A8FD66FFA8A8FD04FF7DFD10FFA9A8A9FD66FFA8FD07FFFD04A8FD09
%FFA8FFA8FFA8FD31FFA9FD34FFA8A8FD04FF52A97D7D52FD0BFF7EFFA9A9
%A8FD2FFFA8A9FD34FFA8FD04FFA82652FFFFFFA8FD09FFA8A9A8FFA8A8A8
%FD2FFFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD04FFA8A8FD04FF207DFD10FFA9FFA8FD2FFFA9
%FD35FFA8FD04FFA87D7DFFFFFFA8FD09FF7EFFFFA9A9FFA9FD2FFFA8FD3A
%FF7DA8FD10FFA8FD2EFFA9A9FFA9A9A9FD33FFA8FD04FFA8277DFFA8A8A8
%FD05FFA8FFFFFFA8FFFFA9A8FFA9FD2BFF7EFFFFFFA8FD34FFA8A8FD04FF
%7DA8FFFF52A8FD0EFFA9FD2BFFA9A9FD04FFA9FD05FFA97EA8FD2BFFA8FD
%04FFA8277DFFFFFFA8FD09FFA8FD05FFA9FD2AFFA9A8FFA8A9A87EFD06FF
%7EA8FD2BFFA8A8FD04FFF87DFD0CFFA9A9FD30FFA8A9A9FFA8FFA8FD07FF
%A8FD2BFFA8FD04FFA82652FFFFFFA8FD09FFA8FD04FFA97EFD2BFFA8A9FD
%0AFFA8FFA9FD2AFFA9A8FD04FF52A8FD12FFA9FD2BFFA9FD05FFA9FD05FF
%A9FD2DFFA8FD04FFA8277DA87D7DA8FD09FFA9FD05FFA8A97EFD1BFFA8FD
%0DFFA9A9A8FFFFA9A8FD05FFA8FD2BFFA8A8FD07FFA8A8A8FD09FFA9FD07
%FF7E7EFD1BFFA9FD06FFA9FD05FFA9FFA8A9FFFFA8A9FD04FFA9FFA9FD2B
%FFA8FD04FF7D277DFFFFFFA8FD09FFA8FD05FFA8A9A8FD1BFF7EA9FD05FF
%A97EFFFFFFA8FFFFA97EFFFFFF7EFD07FFA8FD19FFA8FD10FFA8A8FFFFFF
%A8207DFD0CFFA9FD06FFA9A8FD1AFFA9A9FFA8FD06FFA9A8FD0AFFA9A8FF
%A9A9FFFFA9A9FD0AFFA8FD0DFFA9A9FD10FFA8FD04FFA8277DFFFFFFA8FD
%09FFA9FD05FFA8A9A9FD18FFA97EA9A9FD06FFA97EA9FFFFA8FFFFFFA8FF
%FFFFA8AFFFA87EFFFFFFA8FD07FF7EFFA9A8FD0CFFA8A9A8FD10FFA8A8FD
%04FF52A8FFFFA8FD09FFA9FD09FFA8FD17FF7EA9A8FFA9FD05FF7EFF84FD
%06FFA9FD04FFA8A9FFA97EFD07FFA8FFFFA984FFA9FD0DFF7EA9A9FFA9FD
%0DFFA8FD04FFA84B7DFFA87DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%A8A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87E7EA9A8A9
%A8A9FFFFA8A9FFFFA8FF84FFA8FF7EFFA8FFFF847EFF7EA8A8FF7EFFA8FF
%7EA8A8FF7E7E7EA9FFFFA8FFFFFFA8FFFFFFA8FFFFA8A87E54A9A8FFFFFF
%A8FFFFFFA8FFFFFFA8A8A8FD04FF52A8FD16FFA9FD17FFA9A9A9FFA8A9A8
%FF7EA9FD05FFA9A9FD09FFA9FD04FFA9FFFF7E7E7EFFA884A8FF7EA9A8A9
%FD0AFF84FFA8A9FD0EFFA8FD05FF7DA8FFFFFFA8FD07FFA8A9FD20FFA9FF
%A8FFFFFF7EFFFF7E7EFFFFFFA8FFA9FD09FF7EA9FD04FFA8FFA8A8FFA9A8
%FFA8A9FFFF7E7EA8FD09FFA9A8A8FFA9FD0FFFAFFD04FF207DFD0CFFA8FD
%09FFA9FD0AFFA9FD0EFFA8FFFFA9A8FFA9FFFFFFA9A9FD0CFFA8FD04FFA9
%A8FD04FFA9A9FF84FFFFA9A8FD0FFFA9FD0DFFA8FD04FFA87DA8FFFFFFA8
%FD07FF7EFD0BFFA9FD08FFA97EFD0BFFA8FFA8A8FFFFA8A8A8FD05FFA8FF
%A8FD0FFFA87EA8FFFFFF54A8FFA9A9FF7EFFA9FD09FFA8FFFFFFA8FD0EFF
%A8A8FD04FF27FD04A8FD1DFF7EFD07FFA8FD07FFA9FFFFA9A8A9A8FD04FF
%A9A8FD11FF7EFD04FFA9A8FD15FFA8FD0DFFA8FD04FF7D277D7D527DA8FD
%07FFA8FD0AFFA9A8FD07FF7EA8A8FFFFFF7EFFFFA87EA9A9FFA8FD05FFA8
%A97EFD05FFA8A984FD0FFFA8A9A8FD0BFF7EA8FD08FFA8FFFFFFA87EA8FD
%0BFFA8A8A8FFFFFFA8F87DFFFFA8FD13FFA8FD05FFA8A9A8A984FFFFFFA8
%A9A9FFA9A97EFD09FFA9A9FD06FFA9FD11FFA9A9FD0BFFA9A9FF7EFD0BFF
%A8A9FD0CFFA8FD04FF7D527DFFFFFFA8FD07FFA8FD0BFFA8FFA8FFA8A97E
%A8A8FFFD04A9A8A9FFFFA8A9A8FFA8FD0DFFAFA9FD12FFA8FD0BFFA9A9A8
%A9FD04FF7EA87EFD05FF7EFD0CFFA9A8FD04FF7DFD19FFA8A97E7E7EFFA8
%A9FFFF7EA9A8A9A9FFA9FFA8A9A8FD0FFFA9FD1FFFA8FFA8A9A9FFFFA9A8
%A9FD04FFA9A9A8FD0BFFA8FD0AFFA8FD07FFA8FD0BFF7EA9A8A8A8FFA8A9
%A8FFFFFF7EA9A8FF7EA97E84A87EA8FD0DFFA8A9FD20FF84847EA85A7E7E
%A9FD06FF7E7EA8FD0BFFA8FD07FFA852A8A8FFA8FFA8FF7EA8A8FFA8FFA8
%FFA8FFA8FFFD04A87EFFA8A9A8A8A8FFA8A97EA97E7EA8A8A8A97EA8A8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FF7E7E7EA87EFF7EA87EFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FD08FFA8A8A8FFA8FFA8FFA8A8A8FFA8FF
%A8FFA8FFA87DA8FFA8FFA8A97DA8A8FFA8FFA8FF7D7DA8FFA8FFA8FF7DA8
%A8FFA8FFA8FF7D7DA8FFA8FFA8A87DFFA8FFA8FFA8A87D7DA8FFA8FFA8A8
%7DA8A8FFA8FFA8A87DA8A8FFA8FF7D7D7EA9A8FFA8A87D7DA8FFA8FFA8FF
%7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FD12FFA8FD08FFA852FD06FF7D52FD
%06FF5227FD06FF527DFD06FFA852FD05FFA87DFD06FFA87D27FD05FFA852
%52FD05FF52527DFD04FF7D527DFD04FFA87D52A8FD05FF7D52A8FD4CFF52
%52A87D7D7DA8A8A8277DA8FD07FFAFFD6CFF7D7D27525252277DA85227A8
%FD77FFA8FFA8FFA8FFFFFFA8FDB7FF277D7DA87DA87D7DFD04FFA8FFAFFF
%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FF
%A9FFA8FFA9FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8527DA87DFD04
%A8FFA8FFA8FFA8A87EA87EA87EA87EA87DA87EA87EA87EA87DA87EA87DA8
%7EA87DA8A87E7DA87EA87DA87E7E7EA87E7E7DA87DA87DFD047EA8A87E7D
%A8A8847DA87E7E7D84A8A87DA87EA87EA87EA87DA87E847DA87EA87D7E7E
%A87EA87EA87DA87E847DA87E7E7DFFA8FFA8FFA8FFA8FFA8A97DFD0AFFA8
%FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD0CFFA8A8FD12FFA8FFFFFFA8FFA8FFA8FFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8A8A8FD0BFFA8FD
%0AFFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FD0CFFA8A8FD12FFA8FFA8FD05FFA8FD05
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD0BFFA8FD0A
%FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FD0CFFA9A8FFFFA8A8A8FFFFFFA8FD07FFFD
%0DA8FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFFD05A8A9FD09A8
%FFFD1FA8FFA8FFA8FFA8FFA8FFFD07A8FFA8FD0BFFA8FFFFFFA8F827527D
%277DA8FD06FF7DFD0527515227272752522752272727522752FD05275227
%522752FD042726FD04275227272027272720272727F82726272027202727
%27F827262727272627272720272027272720272027275227272752FD0C27
%7EFD12FFA8FD0BFFA8A9A8A8A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFFD05A8FFA8FFFFFFA8FFA8FFA8A9A8FFA8FFA8FFA8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8A9FD0F
%A8FD0BFFA8FD0AFFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8A8FD16FFA8
%FFA8FD09FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09
%FFA8FD0AFFA8FD0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8A9A8FFA8A9A8FFA8A8A8FD06FFA8A8FD18FFA8FFA8FF
%A8FFFFFFAFFFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FD05FFA8FD04FFA87DA8A87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FD07A8FFA8FFA8FFA8A8A8FFA8CAA8FFA8A8A8FFA8A8A8FFA8CFA8CFA8FF
%FD05A8FFA8A8A8FFFD0BA8FFA8A8A8CFFD0BA8FFA8A8A8FFFD17A8FFA8FF
%A8A8A8FD04FF5276767DA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAA8A7
%A1A8A1A8A1CAA7A7A1CAA7A8A1A8A1A8A1A7A1CAA1CAA7A8A1A7A1A7A7CA
%A1A7A1A7A1A8A1CAA1A7A7CAA1A7A1A7A1A7A1A8A7A7A1A8A1A8A1CAA7A7
%A1CAA1A7A1A8A1A8A1A7A1A8A1CAA7A8A1A7A7A8A1A8A1A7A1CAA1A7A1A8
%A1A8A1A8A1CAA8FFA8FD06FFA8FFFFA852FD07FFA87D525252FD06FFA827
%5227A7CFFFFFFFCFFF7D52527DA8FFCAFFFFFFCF52275252FFFFFFCFFFFF
%A8275227A8FD04FFCFFFFD0452A8FFCFFFFFFFCF7D275252FD06FF7DF852
%27A8CAFFFFFFCAFF7D7D5252A8FFCFFFFFFFA87D4B5227A8FFFFCAFFFF7D
%5252274BFD07FFA8A8FD08FFA8A87DA8FD06FFA87D7DA8A8FD06FFA8A8A8
%7DFD07FF7DA884A8FD06FFA87D7DA8A8FD07FFA8A87DFD07FFA8A87DA8FD
%06FFA87D7DA8A8FD06FFA8A8A87DFD07FFFD05A8FD05FFA8A87DA87DFD3D
%FFA8A8FFA8A8A8FFFFA87DFD76FF525227524B52527D842727FD74FFFD04
%A87DA87DA8A8FF7D7DA8FD1DFFA8FD0FFFA8FD20FFA8FD09FF52A8FD07FF
%7D52FD07FF527DFD06FFA87DA8FD07FF527DFD05FFA8527DFD05FFA87D7D
%A8FD05FF5227A8FD05FF527D52FD05FF52527DFD05FF7D274BFD0EFFA852
%FD0FA87D7DA9FD06A87D7D7DFD07A87D52FD07A87D52FD07A87DFD07A87D
%5259FD05A87D7D7DFD05A87D7D52FD06A87D277DFD05A87D527DFD05A87D
%527DFD05A87D277DFD06A8FD09FF7DFD0FFFA8FD65FFA8FD04FFA8A87DFF
%FFFFA8FD11FFCAFD63FFAFFD04FF7DFD15FFCAC2C9FD61FFA8FD04FFA87D
%A8FFA87DA8FD05FFA8FD0BFFA8CFFD61FFA8A8FD08FF7DA8FD10FFCAFFC9
%CAFD5CFFCACFFFFFA8FD04FFA87DA8FFFFFFA8FD0FFFCACAFFCACAFD5CFF
%C9A7FFFFA8A8FFFFFFA8F87DFD13FFCAC3FFC9CACFFD55FFCACFFFCAFFCF
%C9FFFFFFA8FD04FFA82652FFA8A8A8FD0FFFA8FFCACAA1C9FD3AFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA7FFCAC39AC9A0C3A0
%CAFFFFFFA8A8FD04FF52A8FFA852FD0FFFC9FD05FFC9FD49FFCAFFFFFFCA
%FD04FFC9C3C2C9CFC9FFA1CAFD04FFA8FD04FFA8A87DFFFFFFA8FD0EFFCA
%CAFD04FFCACAFD38FFCAA0CAA0CAFD0BFFC9CAFFFFC9A1FFCAC9A7C9C9CF
%FD0AFFAFFD04FF207DFD18FFCAFD37FFA0C9C9C99AC3C3FD05FFCAFFFFFF
%CAC9C3FFCAC3C9C9A0C9C2FD0DFFA8FD04FFA87DA8FFA8A8A8FD15FFA8FD
%27FFA8FD0DFFA7C9A0C9FFFFFFCACAFFFFFFA7C2A8CAA1C9A7CAA1CAA0CF
%FFCAA7FD0EFFA8A8FD04FF27A8FFA852A8FD16FFCFFFCAFD23FFA1C2C3FD
%0BFFCACAFD0AFFC3C9CACFC2CACAFFFFCAA0FD13FFA8FD04FFA8277DFFFF
%FFA8FD15FFCACAC9C9FD22FFA1C2CAC9CAFFA8FFFFFFA0C2A0CACAC3C9FD
%07FFA1C9A1C9CAFFA1CFC9CFFFFFCACAFD13FFA8A8FD04FFF87DFD19FFC9
%C9CACAFD20FFCFCACFFFFFCACAC3C2CFFFCAC9C9CAC2C3C3FD08FFCFC2C3
%FFFFFFCAFFCFFD18FFA8FD04FFA8527DFFFFFFA8FD15FFCACAA8CFFD20FF
%A1C9A7FFFFFFA1C9A1CAA7C3FD04FFCAFD2BFFA8FD04FF52A8FFA87DFD19
%FFCFFD19FFCAFD05FFCAC9A1FD04FFCFCFFFA0C9CAFD2FFFA8FD04FFA852
%7DFFA8FFA8FD19FFCAFD18FFCAA0FD04FFC9CACAFD04FFA1CFFFCAA7FD30
%FFA8FD04FFA852A8FD1CFFCACAFD16FFA1CFCACACFFFC3C9A0FD3BFFA8FD
%04FFA8277DFFFFFFA8FD18FFCFA7FD15FFCAC2A0C9A7CAFFC9A0FD3CFFA8
%A8FD04FF207DFFA852FD1AFFCFFD15FFCAC9CFCAFFCAFD3FFFA8FD04FFA8
%52A8FFA8A8A8FD19FFA1FD05FFCACAFD0EFFCACAA7FFFFC9A8FD3DFFA8A8
%A8FD04FF27A8FD20FFCACFC9CFC3FD0DFFC9CAFD05FFC9CAFD3DFFA8FD04
%FFA87D7DFFFFFFA8FD19FFCAFFFFCAA7CAA1C9CAFD09FFCAFFA1C9CAFD05
%FFCAFD3FFFA8FD04FF52A8FFFF7DFD1BFFCACAC9CAC9CAFFFFCFFD07FFC9
%C9C2C3CAFD45FFA8FD04FFA82652FFA852A8FD19FFCAC39ACAFFFFCAFFCA
%C99ACAFFCAA0CFCAC9A8CACAFD45FFA8A8FD05FF277DFD1EFFCAFD07FFCF
%CAA0CFC9CACAFFC9CAFD48FFA8FD04FFA8527DFFFFFFA8FD21FFA1CAFFCA
%A1CAFFFFCACFA7FD48FFA8A8FFFFFFA8207DFFA8A8FD21FFCFC9CAFD05FF
%C9CAFD4AFFA8FD04FF7D277DFF527DA8FD21FFCAFD06FFC9A7FD49FFA8A8
%A8FFFFFFA827A8FFFFA8FD75FFA8FD04FFA87DA8FFFFFFA8FD75FFA8FD7E
%FFA8FD08FF7D7D7DFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07A8FFFD07A8FF
%FD07A8FFFD07A8A9FD07A8A9FD07A8A9FD07A8A9FD07A8A9FD04A8FD08FF
%A8A8FFA8FDF5FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-08-22T17:08:23+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N6zrdho9oLu+9b0WdYl&#xA;Fvbz3Tl3+yBHbpLJudvs9dsVQOraVpnm7RIYpXuIbRporhaxGCblby8gGjuouafEndAfA98VXaRp&#xA;FtLpdpPJNdvLNDHJIxvLrdmQEn+9269BiqJk0O2MbBJrpHIIVvrd0aGlAaepiq79C2f+/Lr/AKS7&#xA;r/qpiqDtU0O6mlghublpIpGhZfrlzu6CrU/e9u+TljIFlFopNDtgzlprpgxBQfW7rYBQKf3njU5B&#xA;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&#xA;a+jE0KqsZc7hpJiSTIe+Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -556.168 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 556.168 li
719.885 556.168 li
719.885 0 li
cp
clp
46.252 196.34 mo
46.252 4.92334 li
705.918 4.92334 li
705.918 196.34 li
46.252 196.34 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
46.252 196.34 mo
46.252 4.92334 li
705.918 4.92334 li
705.918 196.34 li
46.252 196.34 li
@
.333333 lw
[.5 4 ] 0 dsh
705.918 4.92334 mo
705.918 4.92334 li
46.252 4.92334 mo
705.918 4.92334 li
705.918 36.7568 mo
705.918 36.7568 li
46.252 36.7568 mo
705.918 36.7568 li
705.918 68.6733 mo
705.918 68.6733 li
46.252 68.6733 mo
705.918 68.6733 li
705.918 100.59 mo
705.918 100.59 li
46.252 100.59 mo
705.918 100.59 li
705.918 132.507 mo
705.918 132.507 li
46.252 132.507 mo
705.918 132.507 li
705.918 164.423 mo
705.918 164.423 li
46.252 164.423 mo
705.918 164.423 li
705.918 196.34 mo
705.918 196.34 li
46.252 196.34 mo
705.918 196.34 li
0 0 0 1 cmyk
@
.5 lw
[] 0 dsh
89.002 4.92334 mo
89.002 11.5068 li
89.002 196.34 mo
89.002 189.673 li
46.252 196.34 mo
46.252 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 196.34 mo
46.252 4.92334 li
705.918 196.34 mo
705.918 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 4.92334 mo
705.918 4.92334 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PWFKSB+Helvetica /Helvetica findfont ct_VMDictPut
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
86.25 208.426 mo
(1)sh
141.169 4.92334 mo
141.169 11.5068 li
141.169 196.34 mo
141.169 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
135.664 208.426 mo
(16)
[5.56006 0 ]xsh
186.919 4.92334 mo
186.919 11.5068 li
186.919 196.34 mo
186.919 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D
2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04
046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F558
86BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D
9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066
B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB9
0D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three 2{/.notdef}rp /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
181.414 208.426 mo
(31)
[5.56006 0 ]xsh
230.669 4.92334 mo
230.669 11.5068 li
230.669 196.34 mo
230.669 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF325730A29F6E3A8E85E687770EE1E27F87CEA844D18
4B0E9BD502658E879E1F9BDDE8AE7D0C023ADEB8AD1E21CDA97313F844BB17B9
F9FCD84B1053ECDC8FF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
225.164 208.426 mo
(46)
[5.56006 0 ]xsh
274.419 4.92334 mo
274.419 11.5068 li
274.419 196.34 mo
274.419 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
268.922 208.426 mo
(61)
[5.56006 0 ]xsh
321.252 4.92334 mo
321.252 11.5068 li
321.252 196.34 mo
321.252 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7EF325730A290D76D77983E96EE242ACEAA131574F93B
B3E9D36E6F4086FF3DB329E48A38DC1C36E41D469A4D1B83FEF82A3668> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six /seven 
200{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
315.75 208.426 mo
(76)
[5.56006 0 ]xsh
361.752 4.92334 mo
361.752 11.5068 li
361.752 196.34 mo
361.752 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A4731A9DB70B9490730918F3CC8A6CEFA5DBCDDDD
5B8FF631E5F2E3BEA7592C5DB8D17DFB2B2E4B0DAC725198BC39F2911D25DCD4
3EC8F7F509D2A326D2C0725149B8BE60F05AAA125797CC4820A7DA7D1C0D4C75
51B0568D049B61E397212F1F645896D5538A3CC2354092A21562A36F8CBFBCDB
29F3C22EE7704AEF405504D83FFD0CBE4861F9ADE2B264F64EA7F79AD12731F7
D0F425F88BA586942BE2189ACE567A86FE749EFE5BB706E4B2115> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six /seven 
/.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
356.25 208.426 mo
(91)
[5.55957 0 ]xsh
410.086 4.92334 mo
410.086 11.5068 li
410.086 196.34 mo
410.086 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /.notdef /three /four /.notdef /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
401.75 208.426 mo
(106)
[5.55957 5.56055 0 ]xsh
454.168 4.92334 mo
454.168 11.5068 li
454.168 196.34 mo
454.168 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /.notdef /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
445.836 208.426 mo
(121)
[5.55957 5.56055 0 ]xsh
495.752 4.92334 mo
495.752 11.5068 li
495.752 196.34 mo
495.752 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
487.422 208.426 mo
(136)
[5.55957 5.56055 0 ]xsh
538.002 4.92334 mo
538.002 11.5068 li
538.002 196.34 mo
538.002 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
529.672 208.426 mo
(151)
[5.55957 5.56055 0 ]xsh
579.668 4.92334 mo
579.668 11.5068 li
579.668 196.34 mo
579.668 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
571.328 208.426 mo
(166)
[5.55957 5.56055 0 ]xsh
625.418 4.92334 mo
625.418 11.5068 li
625.418 196.34 mo
625.418 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF32A47D2AAF8C15BC9A859DEE4113CDE5C7D8BB37BC
632A2AFDD9E1D59E819868DA3B47FA265DB8E729BBC4B74D62996C8CD7000A22
83A23B9E90032D8BA762FC6930C943ACBD9924E3BB182B1447A1E2AF18A8F5C4
FF7E73B671B89EC1964BF90DA6A7AA5C360A10E2B9F34D2BE8C7C673C6A88180
4538AD6230812FB8978313B4BDE98D895F422138708DE46BC5394FB88DD33D90
C210817A05295D4CBA95598D78DA62CFD2497E0D80160F3DA900E68CEC3A30A5
1069510330F600555F89415B16F55B2952535C067AEC9D27A114154239F343BD
ECEE543D835ACB4FF5860A143BC179> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
617.086 208.426 mo
(181)
[5.55957 5.56055 0 ]xsh
705.918 196.34 mo
699.252 196.34 li
46.252 196.34 mo
52.8354 196.34 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 200.004 mo
(0)sh
705.918 164.423 mo
699.252 164.423 li
46.252 164.423 mo
52.8354 164.423 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D088E8E1B4A929D159FDB35EBB0A92B2CB5440> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 168.09 mo
(0.)
[5.56006 0 ]xsh
37.8438 168.09 mo
(5)sh
705.918 132.507 mo
699.252 132.507 li
46.252 132.507 mo
52.8354 132.507 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 136.168 mo
(1)sh
705.918 100.59 mo
699.252 100.59 li
46.252 100.59 mo
52.8354 100.59 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 104.254 mo
(1.)
[5.56006 0 ]xsh
37.8438 104.254 mo
(5)sh
705.918 68.6733 mo
699.252 68.6733 li
46.252 68.6733 mo
52.8354 68.6733 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 72.3398 mo
(2)sh
705.918 36.7568 mo
699.252 36.7568 li
46.252 36.7568 mo
52.8354 36.7568 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 40.4258 mo
(2.)
[5.56006 0 ]xsh
37.8438 40.4258 mo
(5)sh
705.918 4.92334 mo
699.252 4.92334 li
46.252 4.92334 mo
52.8354 4.92334 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 8.58984 mo
(3)sh
46.252 196.34 mo
46.252 4.92334 li
705.918 196.34 mo
705.918 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 4.92334 mo
705.918 4.92334 li
@
gsave
46.252 196.423 mo
706.002 196.423 li
706.002 4.92334 li
46.252 4.92334 li
46.252 196.423 li
cp
clp
89.002 195.34 mo
94.0854 154.34 li
97.252 146.007 li
102.335 83.0898 li
104.585 53.0898 li
107.585 34.7568 li
110.669 40.0898 li
115.752 25.4233 li
118.835 18.9233 li
121.835 61.2568 li
126.919 22.7568 li
130.002 40.0068 li
133.002 46.7568 li
136.002 89.0898 li
138.169 113.84 li
141.169 119.257 li
144.252 100.923 li
147.335 106.34 li
150.419 99.8398 li
153.419 129.007 li
156.502 170.09 li
159.585 187.34 li
162.585 192.757 li
165.752 183.84 li
168.835 179.757 li
171.919 194.507 li
175.002 180.84 li
177.919 195.84 li
180.919 185.673 li
183.919 181.257 li
186.919 183.507 li
189.919 172.34 li
192.002 194.007 li
195.002 176.173 li
198.002 171.757 li
201.002 191.923 li
204.002 182.923 li
206.085 168.007 li
209.085 159.09 li
211.169 170.923 li
213.335 157.257 li
216.419 149.59 li
221.502 182.84 li
224.585 183.923 li
227.585 184.923 li
230.668 192.59 li
232.752 171.757 li
235.752 182.84 li
238.752 194.007 li
240.835 165.673 li
245.585 194.173 li
248.668 193.257 li
251.752 192.257 li
254.752 187.923 li
257.835 162.09 li
260.002 170.09 li
263.085 190.09 li
266.085 188.173 li
268.252 167.84 li
271.335 180.257 li
274.418 186.007 li
277.418 194.173 li
279.585 184.757 li
282.585 195.84 li
287.502 129.923 li
290.502 121.09 li
293.502 135.423 li
296.585 116.34 li
298.752 156.673 li
301.835 129.673 li
306.918 100.09 li
310.085 113.09 li
313.168 134.09 li
316.168 143.007 li
318.252 164.59 li
321.252 134.507 li
323.335 155.09 li
326.335 170.673 li
329.335 159.59 li
332.335 161.84 li
335.335 137.34 li
337.418 145.59 li
340.418 141.173 li
343.418 130.007 li
346.418 125.257 li
349.418 107.507 li
351.502 122.423 li
354.502 111.257 li
356.585 119.507 li
359.668 127.173 li
361.752 148.757 li
364.834 163.09 li
367.002 190.09 li
372.084 167.173 li
375.168 134.757 li
380.252 78.4233 li
383.252 67.3398 li
386.334 61.5898 li
388.418 83.2568 li
391.418 98.8398 li
393.502 107.09 li
395.668 134.09 li
400.752 77.7568 li
405.834 34.8398 li
407.918 57.7568 li
410.084 78.0898 li
413.002 74.9233 li
415.002 97.8398 li
417.084 107.34 li
420.002 117.59 li
422.918 114.423 li
425.918 131.34 li
428.834 128.173 li
430.918 143.173 li
433.918 145.423 li
436.918 120.923 li
439.918 116.507 li
443.002 130.757 li
446.002 127.757 li
451.084 71.4233 li
454.168 72.4233 li
456.334 72.6733 li
459.418 80.3398 li
461.584 114.007 li
463.752 134.34 li
465.918 147.923 li
468.002 162.923 li
471.002 151.757 li
474.002 174.09 li
478.502 144.007 li
481.502 139.59 li
484.502 135.173 li
487.502 136.09 li
490.668 129.09 li
493.584 139.34 li
495.752 152.923 li
498.834 155.59 li
501.834 156.507 li
504.918 137.423 li
508.002 118.34 li
510.168 138.673 li
513.168 126.257 li
515.418 152.007 li
518.502 131.59 li
521.668 131.257 li
524.752 117.59 li
527.834 138.59 li
529.918 140.173 li
532.002 155.09 li
535.002 144.007 li
538.002 146.257 li
541.002 135.09 li
543.084 170.09 li
546.084 165.673 li
549.084 181.257 li
551.252 196.173 li
553.334 191.09 li
556.334 192.59 li
558.418 171.007 li
561.418 192.757 li
564.502 185.173 li
567.502 184.173 li
570.584 196.007 li
573.668 189.007 li
576.668 186.757 li
579.668 188.09 li
582.668 195.757 li
585.752 189.257 li
588.834 177.59 li
591.834 191.923 li
594.918 179.507 li
598.002 180.423 li
603.084 124.173 li
606.084 143.423 li
609.168 114.007 li
611.334 127.59 li
614.334 136.59 li
617.334 132.09 li
620.334 134.34 li
623.334 129.923 li
625.418 164.923 li
628.418 164.173 li
630.502 185.757 li
633.502 174.673 li
635.584 189.59 li
637.668 184.507 li
640.668 186.673 li
.923522 .746761 0 0 cmyk
@
grestore
0 lj
637.252 188.673 mo
644.086 188.673 li
640.668 182.757 li
637.252 188.673 li
637.252 188.673 li
cp
634.252 186.507 mo
641.086 186.507 li
637.668 180.59 li
634.252 186.507 li
634.252 186.507 li
cp
632.168 191.59 mo
639.002 191.59 li
635.586 185.673 li
632.168 191.59 li
632.168 191.59 li
cp
630.086 176.673 mo
636.918 176.673 li
633.502 170.757 li
630.086 176.673 li
630.086 176.673 li
cp
627.086 187.757 mo
633.918 187.757 li
630.502 181.84 li
627.086 187.757 li
627.086 187.757 li
cp
625.002 166.173 mo
631.836 166.173 li
628.418 160.257 li
625.002 166.173 li
625.002 166.173 li
cp
622.002 166.923 mo
628.836 166.923 li
625.418 161.007 li
622.002 166.923 li
622.002 166.923 li
cp
619.918 131.923 mo
626.752 131.923 li
623.336 126.007 li
619.918 131.923 li
619.918 131.923 li
cp
616.918 136.34 mo
623.752 136.34 li
620.336 130.423 li
616.918 136.34 li
616.918 136.34 li
cp
613.918 134.09 mo
620.752 134.09 li
617.336 128.173 li
613.918 134.09 li
613.918 134.09 li
cp
610.918 138.59 mo
617.752 138.59 li
614.336 132.673 li
610.918 138.59 li
610.918 138.59 li
cp
607.918 129.59 mo
614.752 129.59 li
611.336 123.673 li
607.918 129.59 li
607.918 129.59 li
cp
605.752 116.007 mo
612.586 116.007 li
609.168 110.09 li
605.752 116.007 li
605.752 116.007 li
cp
602.668 145.423 mo
609.502 145.423 li
606.086 139.507 li
602.668 145.423 li
602.668 145.423 li
cp
599.668 126.173 mo
606.502 126.173 li
603.086 120.257 li
599.668 126.173 li
599.668 126.173 li
cp
594.586 182.423 mo
601.418 182.423 li
598.002 176.507 li
594.586 182.423 li
594.586 182.423 li
cp
591.502 181.507 mo
598.336 181.507 li
594.918 175.59 li
591.502 181.507 li
591.502 181.507 li
cp
588.418 193.923 mo
595.252 193.923 li
591.836 188.007 li
588.418 193.923 li
588.418 193.923 li
cp
585.418 179.59 mo
592.252 179.59 li
588.836 173.673 li
585.418 179.59 li
585.418 179.59 li
cp
582.336 191.257 mo
589.168 191.257 li
585.752 185.34 li
582.336 191.257 li
582.336 191.257 li
cp
579.252 197.757 mo
586.086 197.757 li
582.668 191.84 li
579.252 197.757 li
579.252 197.757 li
cp
576.252 190.09 mo
583.086 190.09 li
579.668 184.173 li
576.252 190.09 li
576.252 190.09 li
cp
573.252 188.757 mo
580.086 188.757 li
576.668 182.84 li
573.252 188.757 li
573.252 188.757 li
cp
570.252 191.007 mo
577.086 191.007 li
573.668 185.09 li
570.252 191.007 li
570.252 191.007 li
cp
567.168 198.007 mo
574.002 198.007 li
570.586 192.09 li
567.168 198.007 li
567.168 198.007 li
cp
564.086 186.173 mo
570.918 186.173 li
567.502 180.257 li
564.086 186.173 li
564.086 186.173 li
cp
561.086 187.173 mo
567.918 187.173 li
564.502 181.257 li
561.086 187.173 li
561.086 187.173 li
cp
558.002 194.757 mo
564.836 194.757 li
561.418 188.84 li
558.002 194.757 li
558.002 194.757 li
cp
555.002 173.007 mo
561.836 173.007 li
558.418 167.09 li
555.002 173.007 li
555.002 173.007 li
cp
552.918 194.59 mo
559.752 194.59 li
556.336 188.673 li
552.918 194.59 li
552.918 194.59 li
cp
549.918 193.09 mo
556.752 193.09 li
553.336 187.173 li
549.918 193.09 li
549.918 193.09 li
cp
547.836 198.173 mo
554.668 198.173 li
551.252 192.257 li
547.836 198.173 li
547.836 198.173 li
cp
545.668 183.257 mo
552.502 183.257 li
549.086 177.34 li
545.668 183.257 li
545.668 183.257 li
cp
542.668 167.673 mo
549.502 167.673 li
546.086 161.757 li
542.668 167.673 li
542.668 167.673 li
cp
539.668 172.09 mo
546.502 172.09 li
543.086 166.173 li
539.668 172.09 li
539.668 172.09 li
cp
537.586 137.09 mo
544.418 137.09 li
541.002 131.173 li
537.586 137.09 li
537.586 137.09 li
cp
534.586 148.257 mo
541.418 148.257 li
538.002 142.34 li
534.586 148.257 li
534.586 148.257 li
cp
531.586 146.007 mo
538.418 146.007 li
535.002 140.09 li
531.586 146.007 li
531.586 146.007 li
cp
528.586 157.09 mo
535.418 157.09 li
532.002 151.173 li
528.586 157.09 li
528.586 157.09 li
cp
526.502 142.173 mo
533.336 142.173 li
529.918 136.257 li
526.502 142.173 li
526.502 142.173 li
cp
524.418 140.59 mo
531.252 140.59 li
527.836 134.673 li
524.418 140.59 li
524.418 140.59 li
cp
521.336 119.59 mo
528.168 119.59 li
524.752 113.673 li
521.336 119.59 li
521.336 119.59 li
cp
518.252 133.257 mo
525.086 133.257 li
521.668 127.34 li
518.252 133.257 li
518.252 133.257 li
cp
515.086 133.59 mo
521.918 133.59 li
518.502 127.673 li
515.086 133.59 li
515.086 133.59 li
cp
512.002 154.007 mo
518.836 154.007 li
515.418 148.09 li
512.002 154.007 li
512.002 154.007 li
cp
509.752 128.257 mo
516.586 128.257 li
513.168 122.34 li
509.752 128.257 li
509.752 128.257 li
cp
506.752 140.673 mo
513.586 140.673 li
510.168 134.757 li
506.752 140.673 li
506.752 140.673 li
cp
504.586 120.34 mo
511.418 120.34 li
508.002 114.423 li
504.586 120.34 li
504.586 120.34 li
cp
501.502 139.423 mo
508.336 139.423 li
504.918 133.507 li
501.502 139.423 li
501.502 139.423 li
cp
498.418 158.507 mo
505.252 158.507 li
501.836 152.59 li
498.418 158.507 li
498.418 158.507 li
cp
495.418 157.59 mo
502.252 157.59 li
498.836 151.673 li
495.418 157.59 li
495.418 157.59 li
cp
492.336 154.923 mo
499.168 154.923 li
495.752 149.007 li
492.336 154.923 li
492.336 154.923 li
cp
490.168 141.34 mo
497.002 141.34 li
493.586 135.423 li
490.168 141.34 li
490.168 141.34 li
cp
487.252 131.09 mo
494.086 131.09 li
490.668 125.173 li
487.252 131.09 li
487.252 131.09 li
cp
484.086 138.09 mo
490.918 138.09 li
487.502 132.173 li
484.086 138.09 li
484.086 138.09 li
cp
481.086 137.173 mo
487.918 137.173 li
484.502 131.257 li
481.086 137.173 li
481.086 137.173 li
cp
478.086 141.59 mo
484.918 141.59 li
481.502 135.673 li
478.086 141.59 li
478.086 141.59 li
cp
475.086 146.007 mo
481.918 146.007 li
478.502 140.09 li
475.086 146.007 li
475.086 146.007 li
cp
470.586 176.09 mo
477.418 176.09 li
474.002 170.173 li
470.586 176.09 li
470.586 176.09 li
cp
467.586 153.757 mo
474.418 153.757 li
471.002 147.84 li
467.586 153.757 li
467.586 153.757 li
cp
464.586 164.923 mo
471.418 164.923 li
468.002 159.007 li
464.586 164.923 li
464.586 164.923 li
cp
462.502 149.923 mo
469.336 149.923 li
465.918 144.007 li
462.502 149.923 li
462.502 149.923 li
cp
460.336 136.34 mo
467.168 136.34 li
463.752 130.423 li
460.336 136.34 li
460.336 136.34 li
cp
458.168 116.007 mo
465.002 116.007 li
461.586 110.09 li
458.168 116.007 li
458.168 116.007 li
cp
456.002 82.3398 mo
462.836 82.3398 li
459.418 76.4233 li
456.002 82.3398 li
456.002 82.3398 li
cp
452.918 74.6733 mo
459.752 74.6733 li
456.336 68.7568 li
452.918 74.6733 li
452.918 74.6733 li
cp
450.752 74.4233 mo
457.586 74.4233 li
454.168 68.5068 li
450.752 74.4233 li
450.752 74.4233 li
cp
447.668 73.4233 mo
454.502 73.4233 li
451.086 67.5068 li
447.668 73.4233 li
447.668 73.4233 li
cp
442.586 129.757 mo
449.418 129.757 li
446.002 123.84 li
442.586 129.757 li
442.586 129.757 li
cp
439.586 132.757 mo
446.418 132.757 li
443.002 126.84 li
439.586 132.757 li
439.586 132.757 li
cp
436.502 118.507 mo
443.336 118.507 li
439.918 112.59 li
436.502 118.507 li
436.502 118.507 li
cp
433.502 122.923 mo
440.336 122.923 li
436.918 117.007 li
433.502 122.923 li
433.502 122.923 li
cp
430.502 147.423 mo
437.336 147.423 li
433.918 141.507 li
430.502 147.423 li
430.502 147.423 li
cp
427.502 145.173 mo
434.336 145.173 li
430.918 139.257 li
427.502 145.173 li
427.502 145.173 li
cp
425.418 130.173 mo
432.252 130.173 li
428.836 124.257 li
425.418 130.173 li
425.418 130.173 li
cp
422.502 133.34 mo
429.336 133.34 li
425.918 127.423 li
422.502 133.34 li
422.502 133.34 li
cp
419.502 116.423 mo
426.336 116.423 li
422.918 110.507 li
419.502 116.423 li
419.502 116.423 li
cp
416.586 119.59 mo
423.418 119.59 li
420.002 113.673 li
416.586 119.59 li
416.586 119.59 li
cp
413.668 109.34 mo
420.502 109.34 li
417.086 103.423 li
413.668 109.34 li
413.668 109.34 li
cp
411.586 99.8398 mo
418.418 99.8398 li
415.002 93.9233 li
411.586 99.8398 li
411.586 99.8398 li
cp
409.586 76.9233 mo
416.418 76.9233 li
413.002 71.0068 li
409.586 76.9233 li
409.586 76.9233 li
cp
406.668 80.0898 mo
413.502 80.0898 li
410.086 74.1733 li
406.668 80.0898 li
406.668 80.0898 li
cp
404.502 59.7568 mo
411.336 59.7568 li
407.918 53.8398 li
404.502 59.7568 li
404.502 59.7568 li
cp
402.418 36.8398 mo
409.252 36.8398 li
405.836 30.9233 li
402.418 36.8398 li
402.418 36.8398 li
cp
397.336 79.7568 mo
404.168 79.7568 li
400.752 73.8398 li
397.336 79.7568 li
397.336 79.7568 li
cp
392.252 136.09 mo
399.086 136.09 li
395.668 130.173 li
392.252 136.09 li
392.252 136.09 li
cp
390.086 109.09 mo
396.918 109.09 li
393.502 103.173 li
390.086 109.09 li
390.086 109.09 li
cp
388.002 100.84 mo
394.836 100.84 li
391.418 94.9233 li
388.002 100.84 li
388.002 100.84 li
cp
385.002 85.2568 mo
391.836 85.2568 li
388.418 79.3398 li
385.002 85.2568 li
385.002 85.2568 li
cp
382.918 63.5898 mo
389.752 63.5898 li
386.336 57.6733 li
382.918 63.5898 li
382.918 63.5898 li
cp
379.836 69.3398 mo
386.668 69.3398 li
383.252 63.4233 li
379.836 69.3398 li
379.836 69.3398 li
cp
376.836 80.4233 mo
383.668 80.4233 li
380.252 74.5068 li
376.836 80.4233 li
376.836 80.4233 li
cp
371.752 136.757 mo
378.586 136.757 li
375.168 130.84 li
371.752 136.757 li
371.752 136.757 li
cp
368.668 169.173 mo
375.502 169.173 li
372.086 163.257 li
368.668 169.173 li
368.668 169.173 li
cp
363.586 192.09 mo
370.418 192.09 li
367.002 186.173 li
363.586 192.09 li
363.586 192.09 li
cp
361.419 165.09 mo
368.252 165.09 li
364.836 159.173 li
361.419 165.09 li
361.419 165.09 li
cp
358.335 150.757 mo
365.168 150.757 li
361.752 144.84 li
358.335 150.757 li
358.335 150.757 li
cp
356.252 129.173 mo
363.086 129.173 li
359.669 123.257 li
356.252 129.173 li
356.252 129.173 li
cp
353.169 121.507 mo
360.002 121.507 li
356.585 115.59 li
353.169 121.507 li
353.169 121.507 li
cp
351.085 113.257 mo
357.919 113.257 li
354.502 107.34 li
351.085 113.257 li
351.085 113.257 li
cp
348.085 124.423 mo
354.919 124.423 li
351.502 118.507 li
348.085 124.423 li
348.085 124.423 li
cp
346.002 109.507 mo
352.835 109.507 li
349.419 103.59 li
346.002 109.507 li
346.002 109.507 li
cp
343.002 127.257 mo
349.835 127.257 li
346.419 121.34 li
343.002 127.257 li
343.002 127.257 li
cp
340.002 132.007 mo
346.835 132.007 li
343.419 126.09 li
340.002 132.007 li
340.002 132.007 li
cp
337.002 143.173 mo
343.835 143.173 li
340.419 137.257 li
337.002 143.173 li
337.002 143.173 li
cp
334.002 147.59 mo
340.835 147.59 li
337.419 141.673 li
334.002 147.59 li
334.002 147.59 li
cp
331.919 139.34 mo
338.752 139.34 li
335.335 133.423 li
331.919 139.34 li
331.919 139.34 li
cp
328.919 163.84 mo
335.752 163.84 li
332.335 157.923 li
328.919 163.84 li
328.919 163.84 li
cp
325.919 161.59 mo
332.752 161.59 li
329.335 155.673 li
325.919 161.59 li
325.919 161.59 li
cp
322.919 172.673 mo
329.752 172.673 li
326.335 166.757 li
322.919 172.673 li
322.919 172.673 li
cp
319.919 157.09 mo
326.752 157.09 li
323.335 151.173 li
319.919 157.09 li
319.919 157.09 li
cp
317.835 136.507 mo
324.669 136.507 li
321.252 130.59 li
317.835 136.507 li
317.835 136.507 li
cp
314.835 166.59 mo
321.669 166.59 li
318.252 160.673 li
314.835 166.59 li
314.835 166.59 li
cp
312.752 145.007 mo
319.585 145.007 li
316.169 139.09 li
312.752 145.007 li
312.752 145.007 li
cp
309.752 136.09 mo
316.585 136.09 li
313.169 130.173 li
309.752 136.09 li
309.752 136.09 li
cp
306.669 115.09 mo
313.502 115.09 li
310.085 109.173 li
306.669 115.09 li
306.669 115.09 li
cp
303.502 102.09 mo
310.335 102.09 li
306.919 96.1733 li
303.502 102.09 li
303.502 102.09 li
cp
298.419 131.673 mo
305.252 131.673 li
301.835 125.757 li
298.419 131.673 li
298.419 131.673 li
cp
295.335 158.673 mo
302.169 158.673 li
298.752 152.757 li
295.335 158.673 li
295.335 158.673 li
cp
293.169 118.34 mo
300.002 118.34 li
296.585 112.423 li
293.169 118.34 li
293.169 118.34 li
cp
290.085 137.423 mo
296.919 137.423 li
293.502 131.507 li
290.085 137.423 li
290.085 137.423 li
cp
287.085 123.09 mo
293.919 123.09 li
290.502 117.173 li
287.085 123.09 li
287.085 123.09 li
cp
284.085 131.923 mo
290.919 131.923 li
287.502 126.007 li
284.085 131.923 li
284.085 131.923 li
cp
279.169 197.84 mo
286.002 197.84 li
282.585 191.923 li
279.169 197.84 li
279.169 197.84 li
cp
276.169 186.757 mo
283.002 186.757 li
279.585 180.84 li
276.169 186.757 li
276.169 186.757 li
cp
274.002 196.173 mo
280.835 196.173 li
277.419 190.257 li
274.002 196.173 li
274.002 196.173 li
cp
271.002 188.007 mo
277.835 188.007 li
274.419 182.09 li
271.002 188.007 li
271.002 188.007 li
cp
267.919 182.257 mo
274.752 182.257 li
271.335 176.34 li
267.919 182.257 li
267.919 182.257 li
cp
264.835 169.84 mo
271.669 169.84 li
268.252 163.923 li
264.835 169.84 li
264.835 169.84 li
cp
262.669 190.173 mo
269.502 190.173 li
266.085 184.257 li
262.669 190.173 li
262.669 190.173 li
cp
259.669 192.09 mo
266.502 192.09 li
263.085 186.173 li
259.669 192.09 li
259.669 192.09 li
cp
256.585 172.09 mo
263.419 172.09 li
260.002 166.173 li
256.585 172.09 li
256.585 172.09 li
cp
254.419 164.09 mo
261.252 164.09 li
257.835 158.173 li
254.419 164.09 li
254.419 164.09 li
cp
251.335 189.923 mo
258.169 189.923 li
254.752 184.007 li
251.335 189.923 li
251.335 189.923 li
cp
248.335 194.257 mo
255.169 194.257 li
251.752 188.34 li
248.335 194.257 li
248.335 194.257 li
cp
245.252 195.257 mo
252.085 195.257 li
248.669 189.34 li
245.252 195.257 li
245.252 195.257 li
cp
242.169 196.173 mo
249.002 196.173 li
245.585 190.257 li
242.169 196.173 li
242.169 196.173 li
cp
237.419 167.673 mo
244.252 167.673 li
240.835 161.757 li
237.419 167.673 li
237.419 167.673 li
cp
235.335 196.007 mo
242.169 196.007 li
238.752 190.09 li
235.335 196.007 li
235.335 196.007 li
cp
232.335 184.84 mo
239.169 184.84 li
235.752 178.923 li
232.335 184.84 li
232.335 184.84 li
cp
229.335 173.757 mo
236.169 173.757 li
232.752 167.84 li
229.335 173.757 li
229.335 173.757 li
cp
227.252 194.59 mo
234.085 194.59 li
230.669 188.673 li
227.252 194.59 li
227.252 194.59 li
cp
224.169 186.923 mo
231.002 186.923 li
227.585 181.007 li
224.169 186.923 li
224.169 186.923 li
cp
221.169 185.923 mo
228.002 185.923 li
224.585 180.007 li
221.169 185.923 li
221.169 185.923 li
cp
218.085 184.84 mo
224.919 184.84 li
221.502 178.923 li
218.085 184.84 li
218.085 184.84 li
cp
213.002 151.59 mo
219.835 151.59 li
216.419 145.673 li
213.002 151.59 li
213.002 151.59 li
cp
209.919 159.257 mo
216.752 159.257 li
213.335 153.34 li
209.919 159.257 li
209.919 159.257 li
cp
207.752 172.923 mo
214.585 172.923 li
211.169 167.007 li
207.752 172.923 li
207.752 172.923 li
cp
205.669 161.09 mo
212.502 161.09 li
209.085 155.173 li
205.669 161.09 li
205.669 161.09 li
cp
202.669 170.007 mo
209.502 170.007 li
206.085 164.09 li
202.669 170.007 li
202.669 170.007 li
cp
200.585 184.923 mo
207.419 184.923 li
204.002 179.007 li
200.585 184.923 li
200.585 184.923 li
cp
197.585 193.923 mo
204.419 193.923 li
201.002 188.007 li
197.585 193.923 li
197.585 193.923 li
cp
194.585 173.757 mo
201.419 173.757 li
198.002 167.84 li
194.585 173.757 li
194.585 173.757 li
cp
191.585 178.173 mo
198.419 178.173 li
195.002 172.257 li
191.585 178.173 li
191.585 178.173 li
cp
188.585 196.007 mo
195.419 196.007 li
192.002 190.09 li
188.585 196.007 li
188.585 196.007 li
cp
186.502 174.34 mo
193.335 174.34 li
189.919 168.423 li
186.502 174.34 li
186.502 174.34 li
cp
183.502 185.507 mo
190.335 185.507 li
186.919 179.59 li
183.502 185.507 li
183.502 185.507 li
cp
180.502 183.257 mo
187.335 183.257 li
183.919 177.34 li
180.502 183.257 li
180.502 183.257 li
cp
177.502 187.673 mo
184.335 187.673 li
180.919 181.757 li
177.502 187.673 li
177.502 187.673 li
cp
174.502 197.84 mo
181.335 197.84 li
177.919 191.923 li
174.502 197.84 li
174.502 197.84 li
cp
171.585 182.84 mo
178.419 182.84 li
175.002 176.923 li
171.585 182.84 li
171.585 182.84 li
cp
168.502 196.507 mo
175.335 196.507 li
171.919 190.59 li
168.502 196.507 li
168.502 196.507 li
cp
165.419 181.757 mo
172.252 181.757 li
168.835 175.84 li
165.419 181.757 li
165.419 181.757 li
cp
162.335 185.84 mo
169.169 185.84 li
165.752 179.923 li
162.335 185.84 li
162.335 185.84 li
cp
159.169 194.757 mo
166.002 194.757 li
162.585 188.84 li
159.169 194.757 li
159.169 194.757 li
cp
156.169 189.34 mo
163.002 189.34 li
159.585 183.423 li
156.169 189.34 li
156.169 189.34 li
cp
153.085 172.09 mo
159.919 172.09 li
156.502 166.173 li
153.085 172.09 li
153.085 172.09 li
cp
150.002 131.007 mo
156.835 131.007 li
153.419 125.09 li
150.002 131.007 li
150.002 131.007 li
cp
147.002 101.84 mo
153.835 101.84 li
150.419 95.9233 li
147.002 101.84 li
147.002 101.84 li
cp
143.919 108.34 mo
150.752 108.34 li
147.335 102.423 li
143.919 108.34 li
143.919 108.34 li
cp
140.835 102.923 mo
147.669 102.923 li
144.252 97.0068 li
140.835 102.923 li
140.835 102.923 li
cp
137.752 121.257 mo
144.585 121.257 li
141.169 115.34 li
137.752 121.257 li
137.752 121.257 li
cp
134.752 115.84 mo
141.585 115.84 li
138.169 109.923 li
134.752 115.84 li
134.752 115.84 li
cp
132.585 91.0898 mo
139.419 91.0898 li
136.002 85.1733 li
132.585 91.0898 li
132.585 91.0898 li
cp
129.585 48.7568 mo
136.419 48.7568 li
133.002 42.8398 li
129.585 48.7568 li
129.585 48.7568 li
cp
126.585 42.0068 mo
133.419 42.0068 li
130.002 36.0898 li
126.585 42.0068 li
126.585 42.0068 li
cp
123.502 24.7568 mo
130.335 24.7568 li
126.919 18.8398 li
123.502 24.7568 li
123.502 24.7568 li
cp
118.419 63.2568 mo
125.252 63.2568 li
121.835 57.3398 li
118.419 63.2568 li
118.419 63.2568 li
cp
115.419 20.9233 mo
122.252 20.9233 li
118.835 15.0068 li
115.419 20.9233 li
115.419 20.9233 li
cp
112.335 27.4233 mo
119.169 27.4233 li
115.752 21.5068 li
112.335 27.4233 li
112.335 27.4233 li
cp
107.252 42.0898 mo
114.085 42.0898 li
110.669 36.1733 li
107.252 42.0898 li
107.252 42.0898 li
cp
104.169 36.7568 mo
111.002 36.7568 li
107.585 30.8398 li
104.169 36.7568 li
104.169 36.7568 li
cp
101.169 55.0898 mo
108.002 55.0898 li
104.585 49.1733 li
101.169 55.0898 li
101.169 55.0898 li
cp
98.9189 85.0898 mo
105.752 85.0898 li
102.335 79.1733 li
98.9189 85.0898 li
98.9189 85.0898 li
cp
93.8354 148.007 mo
100.669 148.007 li
97.252 142.09 li
93.8354 148.007 li
93.8354 148.007 li
cp
90.6689 156.34 mo
97.502 156.34 li
94.0854 150.423 li
90.6689 156.34 li
90.6689 156.34 li
cp
85.5854 197.34 mo
92.4189 197.34 li
89.002 191.423 li
85.5854 197.34 li
85.5854 197.34 li
cp
.923522 .746761 0 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/N <1C60D8A8C9B6079F1E210C2F9CEEC55EA27709010CA5156BDE4F7169DCD8
3D1487618C13D4BC4EBB77DC3BF6CD15F7D9F6F5FB65B0AD46AE56999C41B6BE
7783> |-
/R <1C60D8A8C9B6079F1E4D8C18B43D708E4867E1D5DF87FFDFDA59C87E0DAA
C2980D72F189A927C7607FB955553C4E4B82FD6E924592BF3E5BCF70BD67C10F
BFCC049000E196CAB909156B2D7E5AD89BC25B1EEB84DE135A38029C2647CF91
8DD0728B39FA4A46AD6169BF8FCD9F6EBD7C686C8458E64ED665C52AFB667727
503772603873AF92F5CB568DE59763334D0C676EEF504634735618AF2DDA86> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 32 /space put
dup 78 /N put
dup 82 /R put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 111 /o put
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 20{/.notdef}rp 
/N 3{/.notdef}rp /R 17{/.notdef}rp /d /e 3{/.notdef}rp /i 
5{/.notdef}rp /o 3{/.notdef}rp /s /.notdef /u 138{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [12 0 0 -12 0 0 ]msf
343.25 219.84 mo
(Residue No.)
[8.66406 6.67188 6 2.66406 6.67188 6.67188 6.67188 3.33594 8.66406 6.67188 0 ]xsh
46.252 358.84 mo
46.252 550.257 li
705.918 550.257 li
705.918 358.84 li
46.252 358.84 li
cp
0 0 0 0 cmyk
ef
46.252 358.84 mo
46.252 550.257 li
705.918 550.257 li
705.918 358.84 li
46.252 358.84 li
@
.333333 lw
[.5 4 ] 0 dsh
705.918 550.257 mo
705.918 550.257 li
46.252 550.257 mo
705.918 550.257 li
705.918 526.257 mo
705.918 526.257 li
46.252 526.257 mo
705.918 526.257 li
705.918 502.34 mo
705.918 502.34 li
46.252 502.34 mo
705.918 502.34 li
705.918 478.424 mo
705.918 478.424 li
46.252 478.424 mo
705.918 478.424 li
705.918 454.507 mo
705.918 454.507 li
46.252 454.507 mo
705.918 454.507 li
705.918 430.59 mo
705.918 430.59 li
46.252 430.59 mo
705.918 430.59 li
705.918 406.674 mo
705.918 406.674 li
46.252 406.674 mo
705.918 406.674 li
705.918 382.757 mo
705.918 382.757 li
46.252 382.757 mo
705.918 382.757 li
705.918 358.84 mo
705.918 358.84 li
46.252 358.84 mo
705.918 358.84 li
0 0 0 1 cmyk
@
.5 lw
[] 0 dsh
133.669 550.257 mo
133.669 543.59 li
133.669 358.84 mo
133.669 365.424 li
46.252 358.84 mo
46.252 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 358.84 mo
46.252 550.257 li
705.918 358.84 mo
705.918 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 550.257 mo
705.918 550.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
130.922 355.926 mo
(1)sh
187.835 550.257 mo
187.835 543.59 li
187.835 358.84 mo
187.835 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
182.336 355.926 mo
(19)
[5.56006 0 ]xsh
242.169 550.257 mo
242.169 543.59 li
242.169 358.84 mo
242.169 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
236.664 355.926 mo
(39)
[5.56006 0 ]xsh
293.085 550.257 mo
293.085 543.59 li
293.085 358.84 mo
293.085 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
287.578 355.926 mo
(56)
[5.56006 0 ]xsh
340.919 550.257 mo
340.919 543.59 li
340.919 358.84 mo
340.919 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
335.422 355.926 mo
(71)
[5.56006 0 ]xsh
392.418 550.257 mo
392.418 543.59 li
392.418 358.84 mo
392.418 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
386.914 355.926 mo
(88)
[5.55957 0 ]xsh
435.336 550.257 mo
435.336 543.59 li
435.336 358.84 mo
435.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
427 355.926 mo
(103)
[5.55957 5.56055 0 ]xsh
483.168 550.257 mo
483.168 543.59 li
483.168 358.84 mo
483.168 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
474.836 355.926 mo
(118)
[5.55957 5.56055 0 ]xsh
528.502 550.257 mo
528.502 543.59 li
528.502 358.84 mo
528.502 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
520.164 355.926 mo
(134)
[5.55957 5.56055 0 ]xsh
576.002 550.257 mo
576.002 543.59 li
576.002 358.84 mo
576.002 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
567.664 355.926 mo
(150)
[5.55957 5.56055 0 ]xsh
620.336 550.257 mo
620.336 543.59 li
620.336 358.84 mo
620.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
612 355.926 mo
(165)
[5.55957 5.56055 0 ]xsh
666.336 550.257 mo
666.336 543.59 li
666.336 358.84 mo
666.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
658 355.926 mo
(180)
[5.55957 5.56055 0 ]xsh
705.918 358.84 mo
699.252 358.84 li
46.252 358.84 mo
52.8354 358.84 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 362.504 mo
(3)sh
705.918 382.757 mo
699.252 382.757 li
46.252 382.757 mo
52.8354 382.757 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 386.418 mo
(4)sh
705.918 406.674 mo
699.252 406.674 li
46.252 406.674 mo
52.8354 406.674 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 410.34 mo
(5)sh
705.918 430.59 mo
699.252 430.59 li
46.252 430.59 mo
52.8354 430.59 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 434.254 mo
(6)sh
705.918 454.507 mo
699.252 454.507 li
46.252 454.507 mo
52.8354 454.507 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 458.176 mo
(7)sh
705.918 478.424 mo
699.252 478.424 li
46.252 478.424 mo
52.8354 478.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 482.082 mo
(8)sh
705.918 502.34 mo
699.252 502.34 li
46.252 502.34 mo
52.8354 502.34 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 506.004 mo
(9)sh
705.918 526.257 mo
699.252 526.257 li
46.252 526.257 mo
52.8354 526.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
32.25 529.918 mo
(10)
[5.56006 0 ]xsh
705.918 550.257 mo
699.252 550.257 li
46.252 550.257 mo
52.8354 550.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
32.25 553.918 mo
(11)
[5.56006 0 ]xsh
46.252 358.84 mo
46.252 550.257 li
705.918 358.84 mo
705.918 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 550.257 mo
705.918 550.257 li
@
687.586 392.424 mo
691.002 386.507 li
684.168 386.507 li
687.586 392.424 li
687.586 392.424 li
cp
684.502 392.007 mo
687.918 386.09 li
681.086 386.09 li
684.502 392.007 li
684.502 392.007 li
cp
681.252 403.174 mo
684.668 397.257 li
677.836 397.257 li
681.252 403.174 li
681.252 403.174 li
cp
678.418 403.84 mo
681.836 397.924 li
675.002 397.924 li
678.418 403.84 li
678.418 403.84 li
cp
675.086 410.924 mo
678.502 405.007 li
671.668 405.007 li
675.086 410.924 li
675.086 410.924 li
cp
672.336 408.174 mo
675.752 402.257 li
668.918 402.257 li
672.336 408.174 li
672.336 408.174 li
cp
669.502 406.507 mo
672.918 400.59 li
666.086 400.59 li
669.502 406.507 li
669.502 406.507 li
cp
666.336 402.09 mo
669.752 396.174 li
662.918 396.174 li
666.336 402.09 li
666.336 402.09 li
cp
662.918 407.674 mo
666.336 401.757 li
659.502 401.757 li
662.918 407.674 li
662.918 407.674 li
cp
659.752 407.757 mo
663.168 401.84 li
656.336 401.84 li
659.752 407.757 li
659.752 407.757 li
cp
656.836 408.924 mo
660.252 403.007 li
653.418 403.007 li
656.836 408.924 li
656.836 408.924 li
cp
654.002 404.174 mo
657.418 398.257 li
650.586 398.257 li
654.002 404.174 li
654.002 404.174 li
cp
651.086 404.84 mo
654.502 398.924 li
647.668 398.924 li
651.086 404.84 li
651.086 404.84 li
cp
648.252 414.424 mo
651.668 408.507 li
644.836 408.507 li
648.252 414.424 li
648.252 414.424 li
cp
645.168 408.174 mo
648.586 402.257 li
641.752 402.257 li
645.168 408.174 li
645.168 408.174 li
cp
641.668 415.757 mo
645.086 409.84 li
638.252 409.84 li
641.668 415.757 li
641.668 415.757 li
cp
638.918 413.424 mo
642.336 407.507 li
635.502 407.507 li
638.918 413.424 li
638.918 413.424 li
cp
636.418 413.257 mo
639.836 407.34 li
633.002 407.34 li
636.418 413.257 li
636.418 413.257 li
cp
633.336 408.34 mo
636.752 402.424 li
629.918 402.424 li
633.336 408.34 li
633.336 408.34 li
cp
629.918 420.424 mo
633.336 414.507 li
626.502 414.507 li
629.918 420.424 li
629.918 420.424 li
cp
626.502 420.924 mo
629.918 415.007 li
623.086 415.007 li
626.502 420.924 li
626.502 420.924 li
cp
623.086 420.507 mo
626.502 414.59 li
619.668 414.59 li
623.086 420.507 li
623.086 420.507 li
cp
620.336 425.257 mo
623.752 419.34 li
616.918 419.34 li
620.336 425.257 li
620.336 425.257 li
cp
617.086 426.34 mo
620.502 420.424 li
613.668 420.424 li
617.086 426.34 li
617.086 426.34 li
cp
614.502 420.09 mo
617.918 414.174 li
611.086 414.174 li
614.502 420.09 li
614.502 420.09 li
cp
612.002 420.424 mo
615.418 414.507 li
608.586 414.507 li
612.002 420.424 li
612.002 420.424 li
cp
608.918 420.007 mo
612.336 414.09 li
605.502 414.09 li
608.918 420.007 li
608.918 420.007 li
cp
606.252 413.757 mo
609.668 407.84 li
602.836 407.84 li
606.252 413.757 li
606.252 413.757 li
cp
602.918 424.84 mo
606.336 418.924 li
599.502 418.924 li
602.918 424.84 li
602.918 424.84 li
cp
599.502 427.424 mo
602.918 421.507 li
596.086 421.507 li
599.502 427.424 li
599.502 427.424 li
cp
596.586 423.09 mo
600.002 417.174 li
593.168 417.174 li
596.586 423.09 li
596.586 423.09 li
cp
593.252 435.174 mo
596.668 429.257 li
589.836 429.257 li
593.252 435.174 li
593.252 435.174 li
cp
590.168 437.84 mo
593.586 431.924 li
586.752 431.924 li
590.168 437.84 li
590.168 437.84 li
cp
587.418 429.507 mo
590.836 423.59 li
584.002 423.59 li
587.418 429.507 li
587.418 429.507 li
cp
585.002 426.34 mo
588.418 420.424 li
581.586 420.424 li
585.002 426.34 li
585.002 426.34 li
cp
582.668 415.674 mo
586.086 409.757 li
579.252 409.757 li
582.668 415.674 li
582.668 415.674 li
cp
579.168 423.674 mo
582.586 417.757 li
575.752 417.757 li
579.168 423.674 li
579.168 423.674 li
cp
576.002 423.84 mo
579.418 417.924 li
572.586 417.924 li
576.002 423.84 li
576.002 423.84 li
cp
573.168 427.007 mo
576.586 421.09 li
569.752 421.09 li
573.168 427.007 li
573.168 427.007 li
cp
569.752 432.09 mo
573.168 426.174 li
566.336 426.174 li
569.752 432.09 li
569.752 432.09 li
cp
566.168 443.59 mo
569.586 437.674 li
562.752 437.674 li
566.168 443.59 li
566.168 443.59 li
cp
563.836 429.924 mo
567.252 424.007 li
560.418 424.007 li
563.836 429.924 li
563.836 429.924 li
cp
561.002 432.59 mo
564.418 426.674 li
557.586 426.674 li
561.002 432.59 li
561.002 432.59 li
cp
557.668 434.174 mo
561.086 428.257 li
554.252 428.257 li
557.668 434.174 li
557.668 434.174 li
cp
554.336 443.757 mo
557.752 437.84 li
550.918 437.84 li
554.336 443.757 li
554.336 443.757 li
cp
550.336 428.174 mo
553.752 422.257 li
546.918 422.257 li
550.336 428.174 li
550.336 428.174 li
cp
547.502 426.34 mo
550.918 420.424 li
544.086 420.424 li
547.502 426.34 li
547.502 426.34 li
cp
544.836 430.09 mo
548.252 424.174 li
541.418 424.174 li
544.836 430.09 li
544.836 430.09 li
cp
541.836 437.257 mo
545.252 431.34 li
538.418 431.34 li
541.836 437.257 li
541.836 437.257 li
cp
538.836 435.924 mo
542.252 430.007 li
535.418 430.007 li
538.836 435.924 li
538.836 435.924 li
cp
535.418 437.84 mo
538.836 431.924 li
532.002 431.924 li
535.418 437.84 li
535.418 437.84 li
cp
531.752 444.84 mo
535.168 438.924 li
528.336 438.924 li
531.752 444.84 li
531.752 444.84 li
cp
528.502 443.924 mo
531.918 438.007 li
525.086 438.007 li
528.502 443.924 li
528.502 443.924 li
cp
525.918 442.174 mo
529.336 436.257 li
522.502 436.257 li
525.918 442.174 li
525.918 442.174 li
cp
522.752 442.34 mo
526.168 436.424 li
519.336 436.424 li
522.752 442.34 li
522.752 442.34 li
cp
520.002 442.007 mo
523.418 436.09 li
516.586 436.09 li
520.002 442.007 li
520.002 442.007 li
cp
516.252 424.924 mo
519.668 419.007 li
512.836 419.007 li
516.252 424.924 li
516.252 424.924 li
cp
513.002 418.507 mo
516.418 412.59 li
509.586 412.59 li
513.002 418.507 li
513.002 418.507 li
cp
510.168 421.257 mo
513.586 415.34 li
506.752 415.34 li
510.168 421.257 li
510.168 421.257 li
cp
507.586 419.507 mo
511.002 413.59 li
504.168 413.59 li
507.586 419.507 li
507.586 419.507 li
cp
504.418 422.59 mo
507.836 416.674 li
501.002 416.674 li
504.418 422.59 li
504.418 422.59 li
cp
501.418 421.757 mo
504.836 415.84 li
498.002 415.84 li
501.418 421.757 li
501.418 421.757 li
cp
497.918 420.257 mo
501.336 414.34 li
494.502 414.34 li
497.918 420.257 li
497.918 420.257 li
cp
494.752 418.424 mo
498.168 412.507 li
491.336 412.507 li
494.752 418.424 li
494.752 418.424 li
cp
491.586 426.507 mo
495.002 420.59 li
488.168 420.59 li
491.586 426.507 li
491.586 426.507 li
cp
488.502 426.174 mo
491.918 420.257 li
485.086 420.257 li
488.502 426.174 li
488.502 426.174 li
cp
486.002 426.007 mo
489.418 420.09 li
482.586 420.09 li
486.002 426.007 li
486.002 426.007 li
cp
483.168 425.174 mo
486.586 419.257 li
479.752 419.257 li
483.168 425.174 li
483.168 425.174 li
cp
479.752 423.174 mo
483.168 417.257 li
476.336 417.257 li
479.752 423.174 li
479.752 423.174 li
cp
475.918 431.674 mo
479.336 425.757 li
472.502 425.757 li
475.918 431.674 li
475.918 431.674 li
cp
472.502 443.757 mo
475.918 437.84 li
469.086 437.84 li
472.502 443.757 li
472.502 443.757 li
cp
470.086 438.507 mo
473.502 432.59 li
466.668 432.59 li
470.086 438.507 li
470.086 438.507 li
cp
466.586 444.09 mo
470.002 438.174 li
463.168 438.174 li
466.586 444.09 li
466.586 444.09 li
cp
463.336 448.174 mo
466.752 442.257 li
459.918 442.257 li
463.336 448.174 li
463.336 448.174 li
cp
460.002 444.674 mo
463.418 438.757 li
456.586 438.757 li
460.002 444.674 li
460.002 444.674 li
cp
457.086 445.424 mo
460.502 439.507 li
453.668 439.507 li
457.086 445.424 li
457.086 445.424 li
cp
454.586 438.674 mo
458.002 432.757 li
451.168 432.757 li
454.586 438.674 li
454.586 438.674 li
cp
451.502 443.34 mo
454.918 437.424 li
448.086 437.424 li
451.502 443.34 li
451.502 443.34 li
cp
448.752 440.507 mo
452.168 434.59 li
445.336 434.59 li
448.752 440.507 li
448.752 440.507 li
cp
445.586 443.174 mo
449.002 437.257 li
442.168 437.257 li
445.586 443.174 li
445.586 443.174 li
cp
442.918 439.924 mo
446.336 434.007 li
439.502 434.007 li
442.918 439.924 li
442.918 439.924 li
cp
439.252 444.424 mo
442.668 438.507 li
435.836 438.507 li
439.252 444.424 li
439.252 444.424 li
cp
435.336 450.84 mo
438.752 444.924 li
431.918 444.924 li
435.336 450.84 li
435.336 450.84 li
cp
432.586 453.007 mo
436.002 447.09 li
429.168 447.09 li
432.586 453.007 li
432.586 453.007 li
cp
428.336 459.84 mo
431.752 453.924 li
424.918 453.924 li
428.336 459.84 li
428.336 459.84 li
cp
426.086 457.757 mo
429.502 451.84 li
422.668 451.84 li
426.086 457.757 li
426.086 457.757 li
cp
422.668 455.257 mo
426.086 449.34 li
419.252 449.34 li
422.668 455.257 li
422.668 455.257 li
cp
420.502 447.674 mo
423.918 441.757 li
417.086 441.757 li
420.502 447.674 li
420.502 447.674 li
cp
418.418 442.507 mo
421.836 436.59 li
415.002 436.59 li
418.418 442.507 li
418.418 442.507 li
cp
415.418 446.257 mo
418.836 440.34 li
412.002 440.34 li
415.418 446.257 li
415.418 446.257 li
cp
412.586 448.924 mo
416.002 443.007 li
409.168 443.007 li
412.586 448.924 li
412.586 448.924 li
cp
409.502 461.59 mo
412.918 455.674 li
406.086 455.674 li
409.502 461.59 li
409.502 461.59 li
cp
407.168 447.924 mo
410.586 442.007 li
403.752 442.007 li
407.168 447.924 li
407.168 447.924 li
cp
404.836 439.257 mo
408.252 433.34 li
401.418 433.34 li
404.836 439.257 li
404.836 439.257 li
cp
401.668 434.84 mo
405.086 428.924 li
398.252 428.924 li
401.668 434.84 li
401.668 434.84 li
cp
398.502 434.924 mo
401.918 429.007 li
395.086 429.007 li
398.502 434.924 li
398.502 434.924 li
cp
395.336 433.59 mo
398.752 427.674 li
391.918 427.674 li
395.336 433.59 li
395.336 433.59 li
cp
392.418 436.757 mo
395.836 430.84 li
389.002 430.84 li
392.418 436.757 li
392.418 436.757 li
cp
389.752 438.007 mo
393.168 432.09 li
386.336 432.09 li
389.752 438.007 li
389.752 438.007 li
cp
386.668 440.674 mo
390.086 434.757 li
383.252 434.757 li
386.668 440.674 li
386.668 440.674 li
cp
383.168 451.174 mo
386.586 445.257 li
379.752 445.257 li
383.168 451.174 li
383.168 451.174 li
cp
379.418 459.257 mo
382.836 453.34 li
376.002 453.34 li
379.418 459.257 li
379.418 459.257 li
cp
375.418 448.674 mo
378.836 442.757 li
372.002 442.757 li
375.418 448.674 li
375.418 448.674 li
cp
371.752 458.59 mo
375.168 452.674 li
368.336 452.674 li
371.752 458.59 li
371.752 458.59 li
cp
369.086 464.924 mo
372.502 459.007 li
365.668 459.007 li
369.086 464.924 li
369.086 464.924 li
cp
365.668 467.424 mo
369.086 461.507 li
362.252 461.507 li
365.668 467.424 li
365.668 467.424 li
cp
362.336 474.007 mo
365.752 468.09 li
358.919 468.09 li
362.336 474.007 li
362.336 474.007 li
cp
358.919 472.09 mo
362.336 466.174 li
355.502 466.174 li
358.919 472.09 li
358.919 472.09 li
cp
356.419 467.257 mo
359.835 461.34 li
353.002 461.34 li
356.419 467.257 li
356.419 467.257 li
cp
351.669 492.59 mo
355.085 486.674 li
348.252 486.674 li
351.669 492.59 li
351.669 492.59 li
cp
346.252 484.007 mo
349.669 478.09 li
342.835 478.09 li
346.252 484.007 li
346.252 484.007 li
cp
343.335 474.674 mo
346.752 468.757 li
339.919 468.757 li
343.335 474.674 li
343.335 474.674 li
cp
340.919 464.507 mo
344.335 458.59 li
337.502 458.59 li
340.919 464.507 li
340.919 464.507 li
cp
337.752 459.59 mo
341.169 453.674 li
334.335 453.674 li
337.752 459.59 li
337.752 459.59 li
cp
333.835 476.507 mo
337.252 470.59 li
330.419 470.59 li
333.835 476.507 li
333.835 476.507 li
cp
330.502 471.09 mo
333.919 465.174 li
327.085 465.174 li
330.502 471.09 li
330.502 471.09 li
cp
326.669 484.007 mo
330.085 478.09 li
323.252 478.09 li
326.669 484.007 li
326.669 484.007 li
cp
324.502 471.924 mo
327.919 466.007 li
321.085 466.007 li
324.502 471.924 li
324.502 471.924 li
cp
322.085 470.34 mo
325.502 464.424 li
318.669 464.424 li
322.085 470.34 li
322.085 470.34 li
cp
319.002 480.924 mo
322.419 475.007 li
315.585 475.007 li
319.002 480.924 li
319.002 480.924 li
cp
315.419 489.924 mo
318.835 484.007 li
312.002 484.007 li
315.419 489.924 li
315.419 489.924 li
cp
312.085 494.424 mo
315.502 488.507 li
308.669 488.507 li
312.085 494.424 li
312.085 494.424 li
cp
308.835 500.59 mo
312.252 494.674 li
305.419 494.674 li
308.835 500.59 li
308.835 500.59 li
cp
306.335 498.34 mo
309.752 492.424 li
302.919 492.424 li
306.335 498.34 li
306.335 498.34 li
cp
303.085 504.424 mo
306.502 498.507 li
299.669 498.507 li
303.085 504.424 li
303.085 504.424 li
cp
300.085 503.174 mo
303.502 497.257 li
296.669 497.257 li
300.085 503.174 li
300.085 503.174 li
cp
296.585 501.674 mo
300.002 495.757 li
293.169 495.757 li
296.585 501.674 li
296.585 501.674 li
cp
293.085 517.174 mo
296.502 511.257 li
289.669 511.257 li
293.085 517.174 li
293.085 517.174 li
cp
290.169 500.84 mo
293.585 494.924 li
286.752 494.924 li
290.169 500.84 li
290.169 500.84 li
cp
287.335 508.59 mo
290.752 502.674 li
283.919 502.674 li
287.335 508.59 li
287.335 508.59 li
cp
282.585 526.757 mo
286.002 520.84 li
279.169 520.84 li
282.585 526.757 li
282.585 526.757 li
cp
279.169 529.84 mo
282.585 523.924 li
275.752 523.924 li
279.169 529.84 li
279.169 529.84 li
cp
275.335 507.674 mo
278.752 501.757 li
271.919 501.757 li
275.335 507.674 li
275.335 507.674 li
cp
271.919 507.757 mo
275.335 501.84 li
268.502 501.84 li
271.919 507.757 li
271.919 507.757 li
cp
269.169 510.007 mo
272.585 504.09 li
265.752 504.09 li
269.169 510.007 li
269.169 510.007 li
cp
265.669 518.507 mo
269.085 512.59 li
262.252 512.59 li
265.669 518.507 li
265.669 518.507 li
cp
259.169 515.674 mo
262.585 509.757 li
255.752 509.757 li
259.169 515.674 li
259.169 515.674 li
cp
256.669 510.507 mo
260.085 504.59 li
253.252 504.59 li
256.669 510.507 li
256.669 510.507 li
cp
254.335 514.34 mo
257.752 508.424 li
250.919 508.424 li
254.335 514.34 li
254.335 514.34 li
cp
251.585 508.424 mo
255.002 502.507 li
248.169 502.507 li
251.585 508.424 li
251.585 508.424 li
cp
248.585 505.09 mo
252.002 499.174 li
245.169 499.174 li
248.585 505.09 li
248.585 505.09 li
cp
245.335 508.174 mo
248.752 502.257 li
241.919 502.257 li
245.335 508.174 li
245.335 508.174 li
cp
242.169 521.757 mo
245.585 515.84 li
238.752 515.84 li
242.169 521.757 li
242.169 521.757 li
cp
238.502 523.757 mo
241.919 517.84 li
235.085 517.84 li
238.502 523.757 li
238.502 523.757 li
cp
235.835 495.007 mo
239.252 489.09 li
232.419 489.09 li
235.835 495.007 li
235.835 495.007 li
cp
232.585 486.007 mo
236.002 480.09 li
229.169 480.09 li
232.585 486.007 li
232.585 486.007 li
cp
228.835 494.007 mo
232.252 488.09 li
225.419 488.09 li
228.835 494.007 li
228.835 494.007 li
cp
225.669 501.674 mo
229.085 495.757 li
222.252 495.757 li
225.669 501.674 li
225.669 501.674 li
cp
221.502 490.424 mo
224.919 484.507 li
218.085 484.507 li
221.502 490.424 li
221.502 490.424 li
cp
217.002 501.674 mo
220.419 495.757 li
213.585 495.757 li
217.002 501.674 li
217.002 501.674 li
cp
212.752 493.507 mo
216.169 487.59 li
209.335 487.59 li
212.752 493.507 li
212.752 493.507 li
cp
209.002 505.924 mo
212.419 500.007 li
205.585 500.007 li
209.002 505.924 li
209.002 505.924 li
cp
205.335 504.257 mo
208.752 498.34 li
201.919 498.34 li
205.335 504.257 li
205.335 504.257 li
cp
202.919 505.84 mo
206.335 499.924 li
199.502 499.924 li
202.919 505.84 li
202.919 505.84 li
cp
199.169 509.59 mo
202.585 503.674 li
195.752 503.674 li
199.169 509.59 li
199.169 509.59 li
cp
195.252 483.174 mo
198.669 477.257 li
191.835 477.257 li
195.252 483.174 li
195.252 483.174 li
cp
192.835 471.34 mo
196.252 465.424 li
189.419 465.424 li
192.835 471.34 li
192.835 471.34 li
cp
187.835 436.34 mo
191.252 430.424 li
184.419 430.424 li
187.835 436.34 li
187.835 436.34 li
cp
183.502 448.924 mo
186.919 443.007 li
180.085 443.007 li
183.502 448.924 li
183.502 448.924 li
cp
179.252 438.757 mo
182.669 432.84 li
175.835 432.84 li
179.252 438.757 li
179.252 438.757 li
cp
174.669 448.84 mo
178.085 442.924 li
171.252 442.924 li
174.669 448.84 li
174.669 448.84 li
cp
171.669 446.34 mo
175.085 440.424 li
168.252 440.424 li
171.669 446.34 li
171.669 446.34 li
cp
167.169 415.84 mo
170.585 409.924 li
163.752 409.924 li
167.169 415.84 li
167.169 415.84 li
cp
164.419 406.924 mo
167.835 401.007 li
161.002 401.007 li
164.419 406.924 li
164.419 406.924 li
cp
161.502 403.424 mo
164.919 397.507 li
158.085 397.507 li
161.502 403.424 li
161.502 403.424 li
cp
158.252 390.007 mo
161.669 384.09 li
154.835 384.09 li
158.252 390.007 li
158.252 390.007 li
cp
153.585 405.007 mo
157.002 399.09 li
150.169 399.09 li
153.585 405.007 li
153.585 405.007 li
cp
152.502 378.59 mo
155.919 372.674 li
149.085 372.674 li
152.502 378.59 li
152.502 378.59 li
cp
149.419 376.59 mo
152.835 370.674 li
146.002 370.674 li
149.419 376.59 li
149.419 376.59 li
cp
147.169 376.674 mo
150.585 370.757 li
143.752 370.757 li
147.169 376.674 li
147.169 376.674 li
cp
143.169 402.424 mo
146.585 396.507 li
139.752 396.507 li
143.169 402.424 li
143.169 402.424 li
cp
138.835 397.174 mo
142.252 391.257 li
135.419 391.257 li
138.835 397.174 li
138.835 397.174 li
cp
133.669 414.257 mo
137.085 408.34 li
130.252 408.34 li
133.669 414.257 li
133.669 414.257 li
cp
133.669 410.34 mo
138.835 393.257 li
143.169 398.507 li
147.169 372.757 li
149.419 372.674 li
152.502 374.674 li
153.585 401.09 li
158.252 386.09 li
161.502 399.507 li
164.419 403.007 li
167.169 411.924 li
171.669 442.424 li
174.669 444.924 li
179.252 434.84 li
183.502 445.007 li
187.835 432.424 li
192.835 467.424 li
195.252 479.257 li
199.169 505.674 li
202.919 501.924 li
205.335 500.34 li
209.002 502.007 li
212.752 489.59 li
217.002 497.757 li
221.502 486.507 li
225.669 497.757 li
228.835 490.09 li
232.585 482.09 li
235.835 491.09 li
238.502 519.84 li
242.169 517.84 li
245.335 504.257 li
248.585 501.174 li
251.585 504.507 li
254.335 510.424 li
256.669 506.59 li
259.169 511.757 li
265.669 514.59 li
269.169 506.09 li
271.919 503.84 li
275.335 503.757 li
279.169 525.924 li
282.585 522.84 li
287.335 504.674 li
290.169 496.924 li
293.085 513.257 li
296.585 497.757 li
300.085 499.257 li
303.085 500.507 li
306.335 494.424 li
308.835 496.674 li
312.085 490.507 li
315.419 486.007 li
319.002 477.007 li
322.085 466.424 li
324.502 468.007 li
326.669 480.09 li
330.502 467.174 li
333.835 472.59 li
337.752 455.674 li
340.919 460.59 li
343.335 470.757 li
346.252 480.09 li
351.669 488.674 li
356.419 463.34 li
358.919 468.174 li
362.336 470.09 li
365.668 463.507 li
369.086 461.007 li
371.752 454.674 li
375.418 444.757 li
379.418 455.34 li
383.168 447.257 li
386.668 436.757 li
389.752 434.09 li
392.418 432.84 li
395.336 429.674 li
398.502 431.007 li
401.668 430.924 li
404.836 435.34 li
407.168 444.007 li
409.502 457.674 li
412.586 445.007 li
415.418 442.34 li
418.418 438.59 li
420.502 443.757 li
422.668 451.34 li
426.086 453.84 li
428.336 455.924 li
432.586 449.09 li
435.336 446.924 li
439.252 440.507 li
442.918 436.007 li
445.586 439.257 li
448.752 436.59 li
451.502 439.424 li
454.586 434.757 li
457.086 441.507 li
460.002 440.757 li
463.336 444.257 li
466.586 440.174 li
470.086 434.59 li
472.502 439.84 li
475.918 427.757 li
479.752 419.257 li
483.168 421.257 li
486.002 422.09 li
488.502 422.257 li
491.586 422.59 li
494.752 414.507 li
497.918 416.34 li
501.418 417.84 li
504.418 418.674 li
507.586 415.59 li
510.168 417.34 li
513.002 414.59 li
516.252 421.007 li
520.002 438.09 li
522.752 438.424 li
525.918 438.257 li
528.502 440.007 li
531.752 440.924 li
535.418 433.924 li
538.836 432.007 li
541.836 433.34 li
544.836 426.174 li
547.502 422.424 li
550.336 424.257 li
554.336 439.84 li
557.668 430.257 li
561.002 428.674 li
563.836 426.007 li
566.168 439.674 li
569.752 428.174 li
573.168 423.09 li
576.002 419.924 li
579.168 419.757 li
582.668 411.757 li
585.002 422.424 li
587.418 425.59 li
590.168 433.924 li
593.252 431.257 li
596.586 419.174 li
599.502 423.507 li
602.918 420.924 li
606.252 409.84 li
608.918 416.09 li
612.002 416.507 li
614.502 416.174 li
617.086 422.424 li
620.336 421.34 li
623.086 416.59 li
626.502 417.007 li
629.918 416.507 li
633.336 404.424 li
636.418 409.34 li
638.918 409.507 li
641.668 411.84 li
645.168 404.257 li
648.252 410.507 li
651.086 400.924 li
654.002 400.257 li
656.836 405.007 li
659.752 403.84 li
662.918 403.757 li
666.336 398.174 li
669.502 402.59 li
672.336 404.257 li
675.086 407.007 li
678.418 399.924 li
681.252 399.257 li
684.502 388.09 li
687.586 388.507 li
0 .960204 .946044 0 cmyk
@
0 0 0 1 cmyk
PWFKSB+Helvetica*1 [12 0 0 -12 0 0 ]msf
343.25 346.582 mo
(Residue No.)
[8.66406 6.67188 6 2.66406 6.67188 6.67188 6.67188 3.33594 8.66406 6.67188 0 ]xsh
46.252 317.674 mo
46.252 237.507 li
705.918 237.507 li
705.918 317.674 li
46.252 317.674 li
cp
0 0 0 0 cmyk
ef
46.252 317.674 mo
46.252 237.507 li
705.918 237.507 li
705.918 317.674 li
46.252 317.674 li
@
46.252 237.507 mo
46.252 244.09 li
46.252 317.674 mo
46.252 311.007 li
46.252 317.674 mo
46.252 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 317.674 mo
46.252 237.507 li
705.918 317.674 mo
705.918 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 237.507 mo
705.918 237.507 li
0 0 0 1 cmyk
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
43.5 329.754 mo
(0)sh
95.0781 329.754 mo
(1000)sh
155.078 329.754 mo
(2000)sh
215 329.754 mo
(3000)sh
275 329.754 mo
(4000)sh
335 329.754 mo
(5000)sh
394.914 329.754 mo
(6000)
[5.55957 5.56055 5.55957 0 ]xsh
454.914 329.754 mo
(7000)
[5.55957 5.56055 5.55957 0 ]xsh
514.922 329.754 mo
(8000)
[5.55957 5.56055 5.55957 0 ]xsh
574.836 329.754 mo
(9000)
[5.55957 5.56055 5.55957 0 ]xsh
632.086 329.754 mo
(10000)
[5.55957 5.56055 5.55957 5.56055 0 ]xsh
705.918 237.507 mo
705.918 244.09 li
705.918 317.674 mo
705.918 311.007 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
692.086 329.754 mo
(11000)
[5.55957 5.56055 5.55957 5.56055 0 ]xsh
705.918 317.674 mo
699.252 317.674 li
46.252 317.674 mo
52.8354 317.674 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B64EDF881FD1B46AA4313200D115B158939DBC4B511E3DE8A7
A2C87061E3AD61BC46E3FC4F397355F6D0B945BF96B5A442A3C186BC4B9ABEEF
9D8E147A> |-
/F <1C60D8A8C9B7D8BE6A7F94326535FAA07986C834CAA388CDDCF09F279AC0
C95A636B8111A786695724C396B74122C96A7851B6B5C7> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA83C2CBBCD89A1827
CC58FDC85A8DFB6CF043CBC57E481A1BFB4AC131B9751770056C0E80F4764323
078BDA58184A405EE51A0CD263897356EBA37F07634C62A89D13BD3B9631D5DF
BA5DD765A30358A68432555538AB46A7C75E0621846302615DAD8C2BCBD5C891
F7CA482BF295A57FBDF509BCB98518A5F92E5A0834955E87097681F276DFB2BB
C57A72F7985B1447C571181C1100> |-
/T <1C60D8A8C9B7D8BE6A7F943CDC3019E149794C62C67E95CB9BEBC64B60FE
82B0D5A6D777E5507BCD588EFFC6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 65 /A put
dup 70 /F put
dup 83 /S put
dup 84 /T put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 7{/.notdef}rp 
/A 4{/.notdef}rp /F 7{/.notdef}rp /N 3{/.notdef}rp /R /S 
/T 15{/.notdef}rp /d /e 3{/.notdef}rp /i 5{/.notdef}rp /o 
3{/.notdef}rp /s /.notdef /u 138{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16 321.332 mo
(FAST)sh
705.918 237.507 mo
699.252 237.507 li
46.252 237.507 mo
52.8354 237.507 li
@
46.252 317.674 mo
46.252 237.507 li
705.918 317.674 mo
705.918 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 237.507 mo
705.918 237.507 li
@
89.9854 237.51 mo
89.9854 238.062 89.5376 238.51 88.9854 238.51 cv
88.4336 238.51 87.9854 238.062 87.9854 237.51 cv
87.9854 236.958 88.4336 236.51 88.9854 236.51 cv
89.5376 236.51 89.9854 236.958 89.9854 237.51 cv
.923522 .746761 0 0 cmyk
f
95.1455 237.51 mo
95.1455 238.062 94.6973 238.51 94.1455 238.51 cv
93.5933 238.51 93.1455 238.062 93.1455 237.51 cv
93.1455 236.958 93.5933 236.51 94.1455 236.51 cv
94.6973 236.51 95.1455 236.958 95.1455 237.51 cv
f
98.2656 237.51 mo
98.2656 238.062 97.8174 238.51 97.2656 238.51 cv
96.7134 238.51 96.2656 238.062 96.2656 237.51 cv
96.2656 236.958 96.7134 236.51 97.2656 236.51 cv
97.8174 236.51 98.2656 236.958 98.2656 237.51 cv
f
103.306 237.51 mo
103.306 238.062 102.857 238.51 102.306 238.51 cv
101.753 238.51 101.306 238.062 101.306 237.51 cv
101.306 236.958 101.753 236.51 102.306 236.51 cv
102.857 236.51 103.306 236.958 103.306 237.51 cv
f
105.585 237.51 mo
105.585 238.062 105.138 238.51 104.585 238.51 cv
104.033 238.51 103.585 238.062 103.585 237.51 cv
103.585 236.958 104.033 236.51 104.585 236.51 cv
105.138 236.51 105.585 236.958 105.585 237.51 cv
f
108.585 237.51 mo
108.585 238.062 108.138 238.51 107.585 238.51 cv
107.033 238.51 106.585 238.062 106.585 237.51 cv
106.585 236.958 107.033 236.51 107.585 236.51 cv
108.138 236.51 108.585 236.958 108.585 237.51 cv
f
111.706 237.51 mo
111.706 238.062 111.257 238.51 110.706 238.51 cv
110.153 238.51 109.706 238.062 109.706 237.51 cv
109.706 236.958 110.153 236.51 110.706 236.51 cv
111.257 236.51 111.706 236.958 111.706 237.51 cv
f
116.746 237.51 mo
116.746 238.062 116.297 238.51 115.746 238.51 cv
115.193 238.51 114.746 238.062 114.746 237.51 cv
114.746 236.958 115.193 236.51 115.746 236.51 cv
116.297 236.51 116.746 236.958 116.746 237.51 cv
f
119.865 237.51 mo
119.865 238.062 119.417 238.51 118.865 238.51 cv
118.313 238.51 117.865 238.062 117.865 237.51 cv
117.865 236.958 118.313 236.51 118.865 236.51 cv
119.417 236.51 119.865 236.958 119.865 237.51 cv
f
122.865 237.51 mo
122.865 238.062 122.417 238.51 121.865 238.51 cv
121.313 238.51 120.865 238.062 120.865 237.51 cv
120.865 236.958 121.313 236.51 121.865 236.51 cv
122.417 236.51 122.865 236.958 122.865 237.51 cv
f
127.905 237.51 mo
127.905 238.062 127.458 238.51 126.905 238.51 cv
126.354 238.51 125.905 238.062 125.905 237.51 cv
125.905 236.958 126.354 236.51 126.905 236.51 cv
127.458 236.51 127.905 236.958 127.905 237.51 cv
f
131.025 237.51 mo
131.025 238.062 130.578 238.51 130.025 238.51 cv
129.474 238.51 129.025 238.062 129.025 237.51 cv
129.025 236.958 129.474 236.51 130.025 236.51 cv
130.578 236.51 131.025 236.958 131.025 237.51 cv
f
134.025 237.51 mo
134.025 238.062 133.578 238.51 133.025 238.51 cv
132.474 238.51 132.025 238.062 132.025 237.51 cv
132.025 236.958 132.474 236.51 133.025 236.51 cv
133.578 236.51 134.025 236.958 134.025 237.51 cv
f
137.025 237.51 mo
137.025 238.062 136.578 238.51 136.025 238.51 cv
135.474 238.51 135.025 238.062 135.025 237.51 cv
135.025 236.958 135.474 236.51 136.025 236.51 cv
136.578 236.51 137.025 236.958 137.025 237.51 cv
f
139.186 237.51 mo
139.186 238.062 138.737 238.51 138.186 238.51 cv
137.633 238.51 137.186 238.062 137.186 237.51 cv
137.186 236.958 137.633 236.51 138.186 236.51 cv
138.737 236.51 139.186 236.958 139.186 237.51 cv
f
142.186 237.51 mo
142.186 238.062 141.737 238.51 141.186 238.51 cv
140.633 238.51 140.186 238.062 140.186 237.51 cv
140.186 236.958 140.633 236.51 141.186 236.51 cv
141.737 236.51 142.186 236.958 142.186 237.51 cv
f
145.306 237.51 mo
145.306 238.062 144.857 238.51 144.306 238.51 cv
143.753 238.51 143.306 238.062 143.306 237.51 cv
143.306 236.958 143.753 236.51 144.306 236.51 cv
144.857 236.51 145.306 236.958 145.306 237.51 cv
f
148.306 237.51 mo
148.306 238.062 147.857 238.51 147.306 238.51 cv
146.753 238.51 146.306 238.062 146.306 237.51 cv
146.306 236.958 146.753 236.51 147.306 236.51 cv
147.857 236.51 148.306 236.958 148.306 237.51 cv
f
151.425 237.51 mo
151.425 238.062 150.978 238.51 150.425 238.51 cv
149.874 238.51 149.425 238.062 149.425 237.51 cv
149.425 236.958 149.874 236.51 150.425 236.51 cv
150.978 236.51 151.425 236.958 151.425 237.51 cv
f
154.425 237.51 mo
154.425 238.062 153.978 238.51 153.425 238.51 cv
152.874 238.51 152.425 238.062 152.425 237.51 cv
152.425 236.958 152.874 236.51 153.425 236.51 cv
153.978 236.51 154.425 236.958 154.425 237.51 cv
f
157.545 237.51 mo
157.545 238.062 157.098 238.51 156.545 238.51 cv
155.994 238.51 155.545 238.062 155.545 237.51 cv
155.545 236.958 155.994 236.51 156.545 236.51 cv
157.098 236.51 157.545 236.958 157.545 237.51 cv
f
160.666 237.51 mo
160.666 238.062 160.217 238.51 159.666 238.51 cv
159.113 238.51 158.666 238.062 158.666 237.51 cv
158.666 236.958 159.113 236.51 159.666 236.51 cv
160.217 236.51 160.666 236.958 160.666 237.51 cv
f
163.545 237.51 mo
163.545 238.062 163.098 238.51 162.545 238.51 cv
161.994 238.51 161.545 238.062 161.545 237.51 cv
161.545 236.958 161.994 236.51 162.545 236.51 cv
163.098 236.51 163.545 236.958 163.545 237.51 cv
f
166.786 237.51 mo
166.786 238.062 166.337 238.51 165.786 238.51 cv
165.233 238.51 164.786 238.062 164.786 237.51 cv
164.786 236.958 165.233 236.51 165.786 236.51 cv
166.337 236.51 166.786 236.958 166.786 237.51 cv
f
169.786 237.51 mo
169.786 238.062 169.337 238.51 168.786 238.51 cv
168.233 238.51 167.786 238.062 167.786 237.51 cv
167.786 236.958 168.233 236.51 168.786 236.51 cv
169.337 236.51 169.786 236.958 169.786 237.51 cv
f
172.905 237.51 mo
172.905 238.062 172.458 238.51 171.905 238.51 cv
171.354 238.51 170.905 238.062 170.905 237.51 cv
170.905 236.958 171.354 236.51 171.905 236.51 cv
172.458 236.51 172.905 236.958 172.905 237.51 cv
f
176.025 237.51 mo
176.025 238.062 175.578 238.51 175.025 238.51 cv
174.474 238.51 174.025 238.062 174.025 237.51 cv
174.025 236.958 174.474 236.51 175.025 236.51 cv
175.578 236.51 176.025 236.958 176.025 237.51 cv
f
178.905 237.51 mo
178.905 238.062 178.458 238.51 177.905 238.51 cv
177.354 238.51 176.905 238.062 176.905 237.51 cv
176.905 236.958 177.354 236.51 177.905 236.51 cv
178.458 236.51 178.905 236.958 178.905 237.51 cv
f
181.905 237.51 mo
181.905 238.062 181.458 238.51 180.905 238.51 cv
180.354 238.51 179.905 238.062 179.905 237.51 cv
179.905 236.958 180.354 236.51 180.905 236.51 cv
181.458 236.51 181.905 236.958 181.905 237.51 cv
f
184.905 237.51 mo
184.905 238.062 184.458 238.51 183.905 238.51 cv
183.354 238.51 182.905 238.062 182.905 237.51 cv
182.905 236.958 183.354 236.51 183.905 236.51 cv
184.458 236.51 184.905 236.958 184.905 237.51 cv
f
187.905 237.51 mo
187.905 238.062 187.458 238.51 186.905 238.51 cv
186.354 238.51 185.905 238.062 185.905 237.51 cv
185.905 236.958 186.354 236.51 186.905 236.51 cv
187.458 236.51 187.905 236.958 187.905 237.51 cv
f
190.905 237.51 mo
190.905 238.062 190.458 238.51 189.905 238.51 cv
189.354 238.51 188.905 238.062 188.905 237.51 cv
188.905 236.958 189.354 236.51 189.905 236.51 cv
190.458 236.51 190.905 236.958 190.905 237.51 cv
f
193.065 237.51 mo
193.065 238.062 192.618 238.51 192.065 238.51 cv
191.514 238.51 191.065 238.062 191.065 237.51 cv
191.065 236.958 191.514 236.51 192.065 236.51 cv
192.618 236.51 193.065 236.958 193.065 237.51 cv
f
195.945 237.51 mo
195.945 238.062 195.498 238.51 194.945 238.51 cv
194.394 238.51 193.945 238.062 193.945 237.51 cv
193.945 236.958 194.394 236.51 194.945 236.51 cv
195.498 236.51 195.945 236.958 195.945 237.51 cv
f
199.065 237.51 mo
199.065 238.062 198.618 238.51 198.065 238.51 cv
197.514 238.51 197.065 238.062 197.065 237.51 cv
197.065 236.958 197.514 236.51 198.065 236.51 cv
198.618 236.51 199.065 236.958 199.065 237.51 cv
f
201.945 237.51 mo
201.945 238.062 201.498 238.51 200.945 238.51 cv
200.394 238.51 199.945 238.062 199.945 237.51 cv
199.945 236.958 200.394 236.51 200.945 236.51 cv
201.498 236.51 201.945 236.958 201.945 237.51 cv
f
205.065 237.51 mo
205.065 238.062 204.618 238.51 204.065 238.51 cv
203.514 238.51 203.065 238.062 203.065 237.51 cv
203.065 236.958 203.514 236.51 204.065 236.51 cv
204.618 236.51 205.065 236.958 205.065 237.51 cv
f
207.105 237.51 mo
207.105 238.062 206.657 238.51 206.105 238.51 cv
205.553 238.51 205.105 238.062 205.105 237.51 cv
205.105 236.958 205.553 236.51 206.105 236.51 cv
206.657 236.51 207.105 236.958 207.105 237.51 cv
f
210.105 237.51 mo
210.105 238.062 209.657 238.51 209.105 238.51 cv
208.553 238.51 208.105 238.062 208.105 237.51 cv
208.105 236.958 208.553 236.51 209.105 236.51 cv
209.657 236.51 210.105 236.958 210.105 237.51 cv
f
212.146 237.51 mo
212.146 238.062 211.697 238.51 211.146 238.51 cv
210.593 238.51 210.146 238.062 210.146 237.51 cv
210.146 236.958 210.593 236.51 211.146 236.51 cv
211.697 236.51 212.146 236.958 212.146 237.51 cv
f
214.306 237.51 mo
214.306 238.062 213.857 238.51 213.306 238.51 cv
212.753 238.51 212.306 238.062 212.306 237.51 cv
212.306 236.958 212.753 236.51 213.306 236.51 cv
213.857 236.51 214.306 236.958 214.306 237.51 cv
f
217.425 237.51 mo
217.425 238.062 216.978 238.51 216.425 238.51 cv
215.874 238.51 215.425 238.062 215.425 237.51 cv
215.425 236.958 215.874 236.51 216.425 236.51 cv
216.978 236.51 217.425 236.958 217.425 237.51 cv
f
222.465 237.51 mo
222.465 238.062 222.018 238.51 221.465 238.51 cv
220.914 238.51 220.465 238.062 220.465 237.51 cv
220.465 236.958 220.914 236.51 221.465 236.51 cv
222.018 236.51 222.465 236.958 222.465 237.51 cv
f
225.585 237.51 mo
225.585 238.062 225.138 238.51 224.585 238.51 cv
224.033 238.51 223.585 238.062 223.585 237.51 cv
223.585 236.958 224.033 236.51 224.585 236.51 cv
225.138 236.51 225.585 236.958 225.585 237.51 cv
f
228.585 237.51 mo
228.585 238.062 228.138 238.51 227.585 238.51 cv
227.033 238.51 226.585 238.062 226.585 237.51 cv
226.585 236.958 227.033 236.51 227.585 236.51 cv
228.138 236.51 228.585 236.958 228.585 237.51 cv
f
231.706 237.51 mo
231.706 238.062 231.257 238.51 230.706 238.51 cv
230.153 238.51 229.706 238.062 229.706 237.51 cv
229.706 236.958 230.153 236.51 230.706 236.51 cv
231.257 236.51 231.706 236.958 231.706 237.51 cv
f
233.746 237.51 mo
233.746 238.062 233.297 238.51 232.746 238.51 cv
232.193 238.51 231.746 238.062 231.746 237.51 cv
231.746 236.958 232.193 236.51 232.746 236.51 cv
233.297 236.51 233.746 236.958 233.746 237.51 cv
f
236.746 237.51 mo
236.746 238.062 236.297 238.51 235.746 238.51 cv
235.193 238.51 234.746 238.062 234.746 237.51 cv
234.746 236.958 235.193 236.51 235.746 236.51 cv
236.297 236.51 236.746 236.958 236.746 237.51 cv
f
239.746 237.51 mo
239.746 238.062 239.297 238.51 238.746 238.51 cv
238.193 238.51 237.746 238.062 237.746 237.51 cv
237.746 236.958 238.193 236.51 238.746 236.51 cv
239.297 236.51 239.746 236.958 239.746 237.51 cv
f
241.786 237.51 mo
241.786 238.062 241.337 238.51 240.786 238.51 cv
240.233 238.51 239.786 238.062 239.786 237.51 cv
239.786 236.958 240.233 236.51 240.786 236.51 cv
241.337 236.51 241.786 236.958 241.786 237.51 cv
f
246.585 237.51 mo
246.585 238.062 246.138 238.51 245.585 238.51 cv
245.034 238.51 244.585 238.062 244.585 237.51 cv
244.585 236.958 245.034 236.51 245.585 236.51 cv
246.138 236.51 246.585 236.958 246.585 237.51 cv
f
249.706 237.51 mo
249.706 238.062 249.257 238.51 248.706 238.51 cv
248.153 238.51 247.706 238.062 247.706 237.51 cv
247.706 236.958 248.153 236.51 248.706 236.51 cv
249.257 236.51 249.706 236.958 249.706 237.51 cv
f
252.826 237.51 mo
252.826 238.062 252.377 238.51 251.826 238.51 cv
251.273 238.51 250.826 238.062 250.826 237.51 cv
250.826 236.958 251.273 236.51 251.826 236.51 cv
252.377 236.51 252.826 236.958 252.826 237.51 cv
f
255.706 237.51 mo
255.706 238.062 255.257 238.51 254.706 238.51 cv
254.153 238.51 253.706 238.062 253.706 237.51 cv
253.706 236.958 254.153 236.51 254.706 236.51 cv
255.257 236.51 255.706 236.958 255.706 237.51 cv
f
258.826 237.51 mo
258.826 238.062 258.377 238.51 257.826 238.51 cv
257.273 238.51 256.826 238.062 256.826 237.51 cv
256.826 236.958 257.273 236.51 257.826 236.51 cv
258.377 236.51 258.826 236.958 258.826 237.51 cv
f
260.985 237.51 mo
260.985 238.062 260.538 238.51 259.985 238.51 cv
259.434 238.51 258.985 238.062 258.985 237.51 cv
258.985 236.958 259.434 236.51 259.985 236.51 cv
260.538 236.51 260.985 236.958 260.985 237.51 cv
f
264.105 237.51 mo
264.105 238.062 263.657 238.51 263.105 238.51 cv
262.554 238.51 262.105 238.062 262.105 237.51 cv
262.105 236.958 262.554 236.51 263.105 236.51 cv
263.657 236.51 264.105 236.958 264.105 237.51 cv
f
267.105 237.51 mo
267.105 238.062 266.657 238.51 266.105 238.51 cv
265.554 238.51 265.105 238.062 265.105 237.51 cv
265.105 236.958 265.554 236.51 266.105 236.51 cv
266.657 236.51 267.105 236.958 267.105 237.51 cv
f
269.266 237.51 mo
269.266 238.062 268.817 238.51 268.266 238.51 cv
267.713 238.51 267.266 238.062 267.266 237.51 cv
267.266 236.958 267.713 236.51 268.266 236.51 cv
268.817 236.51 269.266 236.958 269.266 237.51 cv
f
272.266 237.51 mo
272.266 238.062 271.817 238.51 271.266 238.51 cv
270.713 238.51 270.266 238.062 270.266 237.51 cv
270.266 236.958 270.713 236.51 271.266 236.51 cv
271.817 236.51 272.266 236.958 272.266 237.51 cv
f
275.385 237.51 mo
275.385 238.062 274.938 238.51 274.385 238.51 cv
273.833 238.51 273.385 238.062 273.385 237.51 cv
273.385 236.958 273.833 236.51 274.385 236.51 cv
274.938 236.51 275.385 236.958 275.385 237.51 cv
f
278.385 237.51 mo
278.385 238.062 277.938 238.51 277.385 238.51 cv
276.833 238.51 276.385 238.062 276.385 237.51 cv
276.385 236.958 276.833 236.51 277.385 236.51 cv
277.938 236.51 278.385 236.958 278.385 237.51 cv
f
280.666 237.51 mo
280.666 238.062 280.217 238.51 279.666 238.51 cv
279.113 238.51 278.666 238.062 278.666 237.51 cv
278.666 236.958 279.113 236.51 279.666 236.51 cv
280.217 236.51 280.666 236.958 280.666 237.51 cv
f
283.545 237.51 mo
283.545 238.062 283.098 238.51 282.545 238.51 cv
281.994 238.51 281.545 238.062 281.545 237.51 cv
281.545 236.958 281.994 236.51 282.545 236.51 cv
283.098 236.51 283.545 236.958 283.545 237.51 cv
f
288.465 237.51 mo
288.465 238.062 288.018 238.51 287.465 238.51 cv
286.914 238.51 286.465 238.062 286.465 237.51 cv
286.465 236.958 286.914 236.51 287.465 236.51 cv
288.018 236.51 288.465 236.958 288.465 237.51 cv
f
291.465 237.51 mo
291.465 238.062 291.018 238.51 290.465 238.51 cv
289.914 238.51 289.465 238.062 289.465 237.51 cv
289.465 236.958 289.914 236.51 290.465 236.51 cv
291.018 236.51 291.465 236.958 291.465 237.51 cv
f
294.465 237.51 mo
294.465 238.062 294.018 238.51 293.465 238.51 cv
292.914 238.51 292.465 238.062 292.465 237.51 cv
292.465 236.958 292.914 236.51 293.465 236.51 cv
294.018 236.51 294.465 236.958 294.465 237.51 cv
f
297.585 237.51 mo
297.585 238.062 297.138 238.51 296.585 238.51 cv
296.034 238.51 295.585 238.062 295.585 237.51 cv
295.585 236.958 296.034 236.51 296.585 236.51 cv
297.138 236.51 297.585 236.958 297.585 237.51 cv
f
299.746 237.51 mo
299.746 238.062 299.297 238.51 298.746 238.51 cv
298.193 238.51 297.746 238.062 297.746 237.51 cv
297.746 236.958 298.193 236.51 298.746 236.51 cv
299.297 236.51 299.746 236.958 299.746 237.51 cv
f
302.865 237.51 mo
302.865 238.062 302.417 238.51 301.865 238.51 cv
301.313 238.51 300.865 238.062 300.865 237.51 cv
300.865 236.958 301.313 236.51 301.865 236.51 cv
302.417 236.51 302.865 236.958 302.865 237.51 cv
f
307.905 237.51 mo
307.905 238.062 307.458 238.51 306.905 238.51 cv
306.354 238.51 305.905 238.062 305.905 237.51 cv
305.905 236.958 306.354 236.51 306.905 236.51 cv
307.458 236.51 307.905 236.958 307.905 237.51 cv
f
311.146 237.51 mo
311.146 238.062 310.697 238.51 310.146 238.51 cv
309.593 238.51 309.146 238.062 309.146 237.51 cv
309.146 236.958 309.593 236.51 310.146 236.51 cv
310.697 236.51 311.146 236.958 311.146 237.51 cv
f
314.146 237.51 mo
314.146 238.062 313.697 238.51 313.146 238.51 cv
312.593 238.51 312.146 238.062 312.146 237.51 cv
312.146 236.958 312.593 236.51 313.146 236.51 cv
313.697 236.51 314.146 236.958 314.146 237.51 cv
f
317.146 237.51 mo
317.146 238.062 316.697 238.51 316.146 238.51 cv
315.593 238.51 315.146 238.062 315.146 237.51 cv
315.146 236.958 315.593 236.51 316.146 236.51 cv
316.697 236.51 317.146 236.958 317.146 237.51 cv
f
319.306 237.51 mo
319.306 238.062 318.857 238.51 318.306 238.51 cv
317.753 238.51 317.306 238.062 317.306 237.51 cv
317.306 236.958 317.753 236.51 318.306 236.51 cv
318.857 236.51 319.306 236.958 319.306 237.51 cv
f
322.186 237.51 mo
322.186 238.062 321.737 238.51 321.186 238.51 cv
320.633 238.51 320.186 238.062 320.186 237.51 cv
320.186 236.958 320.633 236.51 321.186 236.51 cv
321.737 236.51 322.186 236.958 322.186 237.51 cv
f
324.346 237.51 mo
324.346 238.062 323.897 238.51 323.346 238.51 cv
322.793 238.51 322.346 238.062 322.346 237.51 cv
322.346 236.958 322.793 236.51 323.346 236.51 cv
323.897 236.51 324.346 236.958 324.346 237.51 cv
f
327.346 237.51 mo
327.346 238.062 326.897 238.51 326.346 238.51 cv
325.793 238.51 325.346 238.062 325.346 237.51 cv
325.346 236.958 325.793 236.51 326.346 236.51 cv
326.897 236.51 327.346 236.958 327.346 237.51 cv
f
330.346 237.51 mo
330.346 238.062 329.897 238.51 329.346 238.51 cv
328.793 238.51 328.346 238.062 328.346 237.51 cv
328.346 236.958 328.793 236.51 329.346 236.51 cv
329.897 236.51 330.346 236.958 330.346 237.51 cv
f
333.346 237.51 mo
333.346 238.062 332.897 238.51 332.346 238.51 cv
331.793 238.51 331.346 238.062 331.346 237.51 cv
331.346 236.958 331.793 236.51 332.346 236.51 cv
332.897 236.51 333.346 236.958 333.346 237.51 cv
f
336.346 237.51 mo
336.346 238.062 335.897 238.51 335.346 238.51 cv
334.793 238.51 334.346 238.062 334.346 237.51 cv
334.346 236.958 334.793 236.51 335.346 236.51 cv
335.897 236.51 336.346 236.958 336.346 237.51 cv
f
338.385 237.51 mo
338.385 238.062 337.938 238.51 337.385 238.51 cv
336.833 238.51 336.385 238.062 336.385 237.51 cv
336.385 236.958 336.833 236.51 337.385 236.51 cv
337.938 236.51 338.385 236.958 338.385 237.51 cv
f
341.385 237.51 mo
341.385 238.062 340.938 238.51 340.385 238.51 cv
339.833 238.51 339.385 238.062 339.385 237.51 cv
339.385 236.958 339.833 236.51 340.385 236.51 cv
340.938 236.51 341.385 236.958 341.385 237.51 cv
f
344.385 237.51 mo
344.385 238.062 343.938 238.51 343.385 238.51 cv
342.833 238.51 342.385 238.062 342.385 237.51 cv
342.385 236.958 342.833 236.51 343.385 236.51 cv
343.938 236.51 344.385 236.958 344.385 237.51 cv
f
347.385 237.51 mo
347.385 238.062 346.938 238.51 346.385 238.51 cv
345.833 238.51 345.385 238.062 345.385 237.51 cv
345.385 236.958 345.833 236.51 346.385 236.51 cv
346.938 236.51 347.385 236.958 347.385 237.51 cv
f
350.385 237.51 mo
350.385 238.062 349.938 238.51 349.385 238.51 cv
348.833 238.51 348.385 238.062 348.385 237.51 cv
348.385 236.958 348.833 236.51 349.385 236.51 cv
349.938 236.51 350.385 236.958 350.385 237.51 cv
f
352.425 237.51 mo
352.425 238.062 351.978 238.51 351.425 238.51 cv
350.874 238.51 350.425 238.062 350.425 237.51 cv
350.425 236.958 350.874 236.51 351.425 236.51 cv
351.978 236.51 352.425 236.958 352.425 237.51 cv
f
355.545 237.51 mo
355.545 238.062 355.098 238.51 354.545 238.51 cv
353.994 238.51 353.545 238.062 353.545 237.51 cv
353.545 236.958 353.994 236.51 354.545 236.51 cv
355.098 236.51 355.545 236.958 355.545 237.51 cv
f
357.585 237.51 mo
357.585 238.062 357.138 238.51 356.585 238.51 cv
356.033 238.51 355.585 238.062 355.585 237.51 cv
355.585 236.958 356.033 236.51 356.585 236.51 cv
357.138 236.51 357.585 236.958 357.585 237.51 cv
f
360.706 237.51 mo
360.706 238.062 360.257 238.51 359.706 238.51 cv
359.153 238.51 358.706 238.062 358.706 237.51 cv
358.706 236.958 359.153 236.51 359.706 236.51 cv
360.257 236.51 360.706 236.958 360.706 237.51 cv
f
362.745 237.51 mo
362.745 238.062 362.297 238.51 361.745 238.51 cv
361.193 238.51 360.746 238.062 360.746 237.51 cv
360.746 236.958 361.193 236.51 361.745 236.51 cv
362.297 236.51 362.745 236.958 362.745 237.51 cv
f
365.866 237.51 mo
365.866 238.062 365.417 238.51 364.866 238.51 cv
364.313 238.51 363.866 238.062 363.866 237.51 cv
363.866 236.958 364.313 236.51 364.866 236.51 cv
365.417 236.51 365.866 236.958 365.866 237.51 cv
f
368.026 237.51 mo
368.026 238.062 367.577 238.51 367.026 238.51 cv
366.473 238.51 366.026 238.062 366.026 237.51 cv
366.026 236.958 366.473 236.51 367.026 236.51 cv
367.577 236.51 368.026 236.958 368.026 237.51 cv
f
373.065 237.51 mo
373.065 238.062 372.618 238.51 372.065 238.51 cv
371.514 238.51 371.065 238.062 371.065 237.51 cv
371.065 236.958 371.514 236.51 372.065 236.51 cv
372.618 236.51 373.065 236.958 373.065 237.51 cv
f
376.186 237.51 mo
376.186 238.062 375.737 238.51 375.186 238.51 cv
374.633 238.51 374.186 238.062 374.186 237.51 cv
374.186 236.958 374.633 236.51 375.186 236.51 cv
375.737 236.51 376.186 236.958 376.186 237.51 cv
f
381.225 237.51 mo
381.225 238.062 380.778 238.51 380.225 238.51 cv
379.674 238.51 379.225 238.062 379.225 237.51 cv
379.225 236.958 379.674 236.51 380.225 236.51 cv
380.778 236.51 381.225 236.958 381.225 237.51 cv
f
384.225 237.51 mo
384.225 238.062 383.778 238.51 383.225 238.51 cv
382.674 238.51 382.225 238.062 382.225 237.51 cv
382.225 236.958 382.674 236.51 383.225 236.51 cv
383.778 236.51 384.225 236.958 384.225 237.51 cv
f
387.346 237.51 mo
387.346 238.062 386.897 238.51 386.346 238.51 cv
385.793 238.51 385.346 238.062 385.346 237.51 cv
385.346 236.958 385.793 236.51 386.346 236.51 cv
386.897 236.51 387.346 236.958 387.346 237.51 cv
f
389.385 237.51 mo
389.385 238.062 388.938 238.51 388.385 238.51 cv
387.833 238.51 387.385 238.062 387.385 237.51 cv
387.385 236.958 387.833 236.51 388.385 236.51 cv
388.938 236.51 389.385 236.958 389.385 237.51 cv
f
392.385 237.51 mo
392.385 238.062 391.938 238.51 391.385 238.51 cv
390.833 238.51 390.385 238.062 390.385 237.51 cv
390.385 236.958 390.833 236.51 391.385 236.51 cv
391.938 236.51 392.385 236.958 392.385 237.51 cv
f
394.426 237.51 mo
394.426 238.062 393.977 238.51 393.426 238.51 cv
392.874 238.51 392.426 238.062 392.426 237.51 cv
392.426 236.958 392.874 236.51 393.426 236.51 cv
393.977 236.51 394.426 236.958 394.426 237.51 cv
f
396.706 237.51 mo
396.706 238.062 396.258 238.51 395.706 238.51 cv
395.153 238.51 394.706 238.062 394.706 237.51 cv
394.706 236.958 395.153 236.51 395.706 236.51 cv
396.258 236.51 396.706 236.958 396.706 237.51 cv
f
401.745 237.51 mo
401.745 238.062 401.297 238.51 400.745 238.51 cv
400.194 238.51 399.745 238.062 399.745 237.51 cv
399.745 236.958 400.194 236.51 400.745 236.51 cv
401.297 236.51 401.745 236.958 401.745 237.51 cv
f
406.905 237.51 mo
406.905 238.062 406.458 238.51 405.905 238.51 cv
405.354 238.51 404.905 238.062 404.905 237.51 cv
404.905 236.958 405.354 236.51 405.905 236.51 cv
406.458 236.51 406.905 236.958 406.905 237.51 cv
f
408.946 237.51 mo
408.946 238.062 408.497 238.51 407.946 238.51 cv
407.393 238.51 406.946 238.062 406.946 237.51 cv
406.946 236.958 407.393 236.51 407.946 236.51 cv
408.497 236.51 408.946 236.958 408.946 237.51 cv
f
411.106 237.51 mo
411.106 238.062 410.657 238.51 410.106 238.51 cv
409.553 238.51 409.106 238.062 409.106 237.51 cv
409.106 236.958 409.553 236.51 410.106 236.51 cv
410.657 236.51 411.106 236.958 411.106 237.51 cv
f
413.985 237.51 mo
413.985 238.062 413.538 238.51 412.985 238.51 cv
412.434 238.51 411.985 238.062 411.985 237.51 cv
411.985 236.958 412.434 236.51 412.985 236.51 cv
413.538 236.51 413.985 236.958 413.985 237.51 cv
f
416.026 237.51 mo
416.026 238.062 415.577 238.51 415.026 238.51 cv
414.473 238.51 414.026 238.062 414.026 237.51 cv
414.026 236.958 414.473 236.51 415.026 236.51 cv
415.577 236.51 416.026 236.958 416.026 237.51 cv
f
418.065 237.51 mo
418.065 238.062 417.618 238.51 417.065 238.51 cv
416.514 238.51 416.065 238.062 416.065 237.51 cv
416.065 236.958 416.514 236.51 417.065 236.51 cv
417.618 236.51 418.065 236.958 418.065 237.51 cv
f
421.065 237.51 mo
421.065 238.062 420.618 238.51 420.065 238.51 cv
419.514 238.51 419.065 238.062 419.065 237.51 cv
419.065 236.958 419.514 236.51 420.065 236.51 cv
420.618 236.51 421.065 236.958 421.065 237.51 cv
f
423.946 237.51 mo
423.946 238.062 423.497 238.51 422.946 238.51 cv
422.393 238.51 421.946 238.062 421.946 237.51 cv
421.946 236.958 422.393 236.51 422.946 236.51 cv
423.497 236.51 423.946 236.958 423.946 237.51 cv
f
426.946 237.51 mo
426.946 238.062 426.497 238.51 425.946 238.51 cv
425.393 238.51 424.946 238.062 424.946 237.51 cv
424.946 236.958 425.393 236.51 425.946 236.51 cv
426.497 236.51 426.946 236.958 426.946 237.51 cv
f
429.825 237.51 mo
429.825 238.062 429.377 238.51 428.825 238.51 cv
428.274 238.51 427.825 238.062 427.825 237.51 cv
427.825 236.958 428.274 236.51 428.825 236.51 cv
429.377 236.51 429.825 236.958 429.825 237.51 cv
f
431.866 237.51 mo
431.866 238.062 431.418 238.51 430.866 238.51 cv
430.313 238.51 429.866 238.062 429.866 237.51 cv
429.866 236.958 430.313 236.51 430.866 236.51 cv
431.418 236.51 431.866 236.958 431.866 237.51 cv
f
434.985 237.51 mo
434.985 238.062 434.538 238.51 433.985 238.51 cv
433.434 238.51 432.985 238.062 432.985 237.51 cv
432.985 236.958 433.434 236.51 433.985 236.51 cv
434.538 236.51 434.985 236.958 434.985 237.51 cv
f
437.866 237.51 mo
437.866 238.062 437.418 238.51 436.866 238.51 cv
436.313 238.51 435.866 238.062 435.866 237.51 cv
435.866 236.958 436.313 236.51 436.866 236.51 cv
437.418 236.51 437.866 236.958 437.866 237.51 cv
f
440.985 237.51 mo
440.985 238.062 440.538 238.51 439.985 238.51 cv
439.434 238.51 438.985 238.062 438.985 237.51 cv
438.985 236.958 439.434 236.51 439.985 236.51 cv
440.538 236.51 440.985 236.958 440.985 237.51 cv
f
443.985 237.51 mo
443.985 238.062 443.538 238.51 442.985 238.51 cv
442.434 238.51 441.985 238.062 441.985 237.51 cv
441.985 236.958 442.434 236.51 442.985 236.51 cv
443.538 236.51 443.985 236.958 443.985 237.51 cv
f
446.985 237.51 mo
446.985 238.062 446.538 238.51 445.985 238.51 cv
445.434 238.51 444.985 238.062 444.985 237.51 cv
444.985 236.958 445.434 236.51 445.985 236.51 cv
446.538 236.51 446.985 236.958 446.985 237.51 cv
f
452.026 237.51 mo
452.026 238.062 451.577 238.51 451.026 238.51 cv
450.473 238.51 450.026 238.062 450.026 237.51 cv
450.026 236.958 450.473 236.51 451.026 236.51 cv
451.577 236.51 452.026 236.958 452.026 237.51 cv
f
455.145 237.51 mo
455.145 238.062 454.698 238.51 454.145 238.51 cv
453.594 238.51 453.145 238.062 453.145 237.51 cv
453.145 236.958 453.594 236.51 454.145 236.51 cv
454.698 236.51 455.145 236.958 455.145 237.51 cv
f
457.305 237.51 mo
457.305 238.062 456.858 238.51 456.305 238.51 cv
455.754 238.51 455.305 238.062 455.305 237.51 cv
455.305 236.958 455.754 236.51 456.305 236.51 cv
456.858 236.51 457.305 236.958 457.305 237.51 cv
f
460.426 237.51 mo
460.426 238.062 459.977 238.51 459.426 238.51 cv
458.874 238.51 458.426 238.062 458.426 237.51 cv
458.426 236.958 458.874 236.51 459.426 236.51 cv
459.977 236.51 460.426 236.958 460.426 237.51 cv
f
462.586 237.51 mo
462.586 238.062 462.137 238.51 461.586 238.51 cv
461.034 238.51 460.586 238.062 460.586 237.51 cv
460.586 236.958 461.034 236.51 461.586 236.51 cv
462.137 236.51 462.586 236.958 462.586 237.51 cv
f
464.745 237.51 mo
464.745 238.062 464.297 238.51 463.745 238.51 cv
463.194 238.51 462.745 238.062 462.745 237.51 cv
462.745 236.958 463.194 236.51 463.745 236.51 cv
464.297 236.51 464.745 236.958 464.745 237.51 cv
f
466.905 237.51 mo
466.905 238.062 466.458 238.51 465.905 238.51 cv
465.354 238.51 464.905 238.062 464.905 237.51 cv
464.905 236.958 465.354 236.51 465.905 236.51 cv
466.458 236.51 466.905 236.958 466.905 237.51 cv
f
469.065 237.51 mo
469.065 238.062 468.618 238.51 468.065 238.51 cv
467.514 238.51 467.065 238.062 467.065 237.51 cv
467.065 236.958 467.514 236.51 468.065 236.51 cv
468.618 236.51 469.065 236.958 469.065 237.51 cv
f
471.946 237.51 mo
471.946 238.062 471.497 238.51 470.946 238.51 cv
470.393 238.51 469.946 238.062 469.946 237.51 cv
469.946 236.958 470.393 236.51 470.946 236.51 cv
471.497 236.51 471.946 236.958 471.946 237.51 cv
f
475.065 237.51 mo
475.065 238.062 474.618 238.51 474.065 238.51 cv
473.514 238.51 473.065 238.062 473.065 237.51 cv
473.065 236.958 473.514 236.51 474.065 236.51 cv
474.618 236.51 475.065 236.958 475.065 237.51 cv
f
479.506 237.51 mo
479.506 238.062 479.057 238.51 478.506 238.51 cv
477.954 238.51 477.506 238.062 477.506 237.51 cv
477.506 236.958 477.954 236.51 478.506 236.51 cv
479.057 236.51 479.506 236.958 479.506 237.51 cv
f
482.506 237.51 mo
482.506 238.062 482.057 238.51 481.506 238.51 cv
480.954 238.51 480.506 238.062 480.506 237.51 cv
480.506 236.958 480.954 236.51 481.506 236.51 cv
482.057 236.51 482.506 236.958 482.506 237.51 cv
f
485.506 237.51 mo
485.506 238.062 485.057 238.51 484.506 238.51 cv
483.954 238.51 483.506 238.062 483.506 237.51 cv
483.506 236.958 483.954 236.51 484.506 236.51 cv
485.057 236.51 485.506 236.958 485.506 237.51 cv
f
488.506 237.51 mo
488.506 238.062 488.057 238.51 487.506 238.51 cv
486.954 238.51 486.506 238.062 486.506 237.51 cv
486.506 236.958 486.954 236.51 487.506 236.51 cv
488.057 236.51 488.506 236.958 488.506 237.51 cv
f
491.625 237.51 mo
491.625 238.062 491.178 238.51 490.625 238.51 cv
490.073 238.51 489.625 238.062 489.625 237.51 cv
489.625 236.958 490.073 236.51 490.625 236.51 cv
491.178 236.51 491.625 236.958 491.625 237.51 cv
f
494.625 237.51 mo
494.625 238.062 494.178 238.51 493.625 238.51 cv
493.073 238.51 492.625 238.062 492.625 237.51 cv
492.625 236.958 493.073 236.51 493.625 236.51 cv
494.178 236.51 494.625 236.958 494.625 237.51 cv
f
496.786 237.51 mo
496.786 238.062 496.338 238.51 495.786 238.51 cv
495.233 238.51 494.786 238.062 494.786 237.51 cv
494.786 236.958 495.233 236.51 495.786 236.51 cv
496.338 236.51 496.786 236.958 496.786 237.51 cv
f
499.786 237.51 mo
499.786 238.062 499.338 238.51 498.786 238.51 cv
498.233 238.51 497.786 238.062 497.786 237.51 cv
497.786 236.958 498.233 236.51 498.786 236.51 cv
499.338 236.51 499.786 236.958 499.786 237.51 cv
f
502.905 237.51 mo
502.905 238.062 502.458 238.51 501.905 238.51 cv
501.354 238.51 500.905 238.062 500.905 237.51 cv
500.905 236.958 501.354 236.51 501.905 236.51 cv
502.458 236.51 502.905 236.958 502.905 237.51 cv
f
505.905 237.51 mo
505.905 238.062 505.458 238.51 504.905 238.51 cv
504.354 238.51 503.905 238.062 503.905 237.51 cv
503.905 236.958 504.354 236.51 504.905 236.51 cv
505.458 236.51 505.905 236.958 505.905 237.51 cv
f
509.026 237.51 mo
509.026 238.062 508.577 238.51 508.026 238.51 cv
507.473 238.51 507.026 238.062 507.026 237.51 cv
507.026 236.958 507.473 236.51 508.026 236.51 cv
508.577 236.51 509.026 236.958 509.026 237.51 cv
f
511.186 237.51 mo
511.186 238.062 510.737 238.51 510.186 238.51 cv
509.633 238.51 509.186 238.062 509.186 237.51 cv
509.186 236.958 509.633 236.51 510.186 236.51 cv
510.737 236.51 511.186 236.958 511.186 237.51 cv
f
514.186 237.51 mo
514.186 238.062 513.737 238.51 513.186 238.51 cv
512.633 238.51 512.186 238.062 512.186 237.51 cv
512.186 236.958 512.633 236.51 513.186 236.51 cv
513.737 236.51 514.186 236.958 514.186 237.51 cv
f
516.346 237.51 mo
516.346 238.062 515.897 238.51 515.346 238.51 cv
514.793 238.51 514.346 238.062 514.346 237.51 cv
514.346 236.958 514.793 236.51 515.346 236.51 cv
515.897 236.51 516.346 236.958 516.346 237.51 cv
f
519.465 237.51 mo
519.465 238.062 519.018 238.51 518.465 238.51 cv
517.913 238.51 517.465 238.062 517.465 237.51 cv
517.465 236.958 517.913 236.51 518.465 236.51 cv
519.018 236.51 519.465 236.958 519.465 237.51 cv
f
522.706 237.51 mo
522.706 238.062 522.258 238.51 521.706 238.51 cv
521.153 238.51 520.706 238.062 520.706 237.51 cv
520.706 236.958 521.153 236.51 521.706 236.51 cv
522.258 236.51 522.706 236.958 522.706 237.51 cv
f
525.706 237.51 mo
525.706 238.062 525.258 238.51 524.706 238.51 cv
524.153 238.51 523.706 238.062 523.706 237.51 cv
523.706 236.958 524.153 236.51 524.706 236.51 cv
525.258 236.51 525.706 236.958 525.706 237.51 cv
f
528.825 237.51 mo
528.825 238.062 528.377 238.51 527.825 238.51 cv
527.274 238.51 526.825 238.062 526.825 237.51 cv
526.825 236.958 527.274 236.51 527.825 236.51 cv
528.377 236.51 528.825 236.958 528.825 237.51 cv
f
530.985 237.51 mo
530.985 238.062 530.538 238.51 529.985 238.51 cv
529.434 238.51 528.985 238.062 528.985 237.51 cv
528.985 236.958 529.434 236.51 529.985 236.51 cv
530.538 236.51 530.985 236.958 530.985 237.51 cv
f
533.026 237.51 mo
533.026 238.062 532.577 238.51 532.026 238.51 cv
531.473 238.51 531.026 238.062 531.026 237.51 cv
531.026 236.958 531.473 236.51 532.026 236.51 cv
532.577 236.51 533.026 236.958 533.026 237.51 cv
f
536.026 237.51 mo
536.026 238.062 535.577 238.51 535.026 238.51 cv
534.473 238.51 534.026 238.062 534.026 237.51 cv
534.026 236.958 534.473 236.51 535.026 236.51 cv
535.577 236.51 536.026 236.958 536.026 237.51 cv
f
539.026 237.51 mo
539.026 238.062 538.577 238.51 538.026 238.51 cv
537.473 238.51 537.026 238.062 537.026 237.51 cv
537.026 236.958 537.473 236.51 538.026 236.51 cv
538.577 236.51 539.026 236.958 539.026 237.51 cv
f
542.026 237.51 mo
542.026 238.062 541.577 238.51 541.026 238.51 cv
540.473 238.51 540.026 238.062 540.026 237.51 cv
540.026 236.958 540.473 236.51 541.026 236.51 cv
541.577 236.51 542.026 236.958 542.026 237.51 cv
f
544.065 237.51 mo
544.065 238.062 543.618 238.51 543.065 238.51 cv
542.514 238.51 542.065 238.062 542.065 237.51 cv
542.065 236.958 542.514 236.51 543.065 236.51 cv
543.618 236.51 544.065 236.958 544.065 237.51 cv
f
547.065 237.51 mo
547.065 238.062 546.618 238.51 546.065 238.51 cv
545.514 238.51 545.065 238.062 545.065 237.51 cv
545.065 236.958 545.514 236.51 546.065 236.51 cv
546.618 236.51 547.065 236.958 547.065 237.51 cv
f
550.065 237.51 mo
550.065 238.062 549.618 238.51 549.065 238.51 cv
548.514 238.51 548.065 238.062 548.065 237.51 cv
548.065 236.958 548.514 236.51 549.065 236.51 cv
549.618 236.51 550.065 236.958 550.065 237.51 cv
f
552.225 237.51 mo
552.225 238.062 551.778 238.51 551.225 238.51 cv
550.674 238.51 550.225 238.062 550.225 237.51 cv
550.225 236.958 550.674 236.51 551.225 236.51 cv
551.778 236.51 552.225 236.958 552.225 237.51 cv
f
554.266 237.51 mo
554.266 238.062 553.817 238.51 553.266 238.51 cv
552.713 238.51 552.266 238.062 552.266 237.51 cv
552.266 236.958 552.713 236.51 553.266 236.51 cv
553.817 236.51 554.266 236.958 554.266 237.51 cv
f
557.385 237.51 mo
557.385 238.062 556.938 238.51 556.385 238.51 cv
555.833 238.51 555.385 238.062 555.385 237.51 cv
555.385 236.958 555.833 236.51 556.385 236.51 cv
556.938 236.51 557.385 236.958 557.385 237.51 cv
f
559.426 237.51 mo
559.426 238.062 558.977 238.51 558.426 238.51 cv
557.874 238.51 557.426 238.062 557.426 237.51 cv
557.426 236.958 557.874 236.51 558.426 236.51 cv
558.977 236.51 559.426 236.958 559.426 237.51 cv
f
562.426 237.51 mo
562.426 238.062 561.977 238.51 561.426 238.51 cv
560.874 238.51 560.426 238.062 560.426 237.51 cv
560.426 236.958 560.874 236.51 561.426 236.51 cv
561.977 236.51 562.426 236.958 562.426 237.51 cv
f
565.545 237.51 mo
565.545 238.062 565.098 238.51 564.545 238.51 cv
563.993 238.51 563.545 238.062 563.545 237.51 cv
563.545 236.958 563.993 236.51 564.545 236.51 cv
565.098 236.51 565.545 236.958 565.545 237.51 cv
f
568.426 237.51 mo
568.426 238.062 567.977 238.51 567.426 238.51 cv
566.874 238.51 566.426 238.062 566.426 237.51 cv
566.426 236.958 566.874 236.51 567.426 236.51 cv
567.977 236.51 568.426 236.958 568.426 237.51 cv
f
571.545 237.51 mo
571.545 238.062 571.098 238.51 570.545 238.51 cv
569.993 238.51 569.545 238.062 569.545 237.51 cv
569.545 236.958 569.993 236.51 570.545 236.51 cv
571.098 236.51 571.545 236.958 571.545 237.51 cv
f
574.665 237.51 mo
574.665 238.062 574.217 238.51 573.665 238.51 cv
573.114 238.51 572.665 238.062 572.665 237.51 cv
572.665 236.958 573.114 236.51 573.665 236.51 cv
574.217 236.51 574.665 236.958 574.665 237.51 cv
f
577.665 237.51 mo
577.665 238.062 577.217 238.51 576.665 238.51 cv
576.114 238.51 575.665 238.062 575.665 237.51 cv
575.665 236.958 576.114 236.51 576.665 236.51 cv
577.217 236.51 577.665 236.958 577.665 237.51 cv
f
580.665 237.51 mo
580.665 238.062 580.217 238.51 579.665 238.51 cv
579.114 238.51 578.665 238.062 578.665 237.51 cv
578.665 236.958 579.114 236.51 579.665 236.51 cv
580.217 236.51 580.665 236.958 580.665 237.51 cv
f
583.665 237.51 mo
583.665 238.062 583.217 238.51 582.665 238.51 cv
582.114 238.51 581.665 238.062 581.665 237.51 cv
581.665 236.958 582.114 236.51 582.665 236.51 cv
583.217 236.51 583.665 236.958 583.665 237.51 cv
f
586.786 237.51 mo
586.786 238.062 586.338 238.51 585.786 238.51 cv
585.233 238.51 584.786 238.062 584.786 237.51 cv
584.786 236.958 585.233 236.51 585.786 236.51 cv
586.338 236.51 586.786 236.958 586.786 237.51 cv
f
589.786 237.51 mo
589.786 238.062 589.338 238.51 588.786 238.51 cv
588.233 238.51 587.786 238.062 587.786 237.51 cv
587.786 236.958 588.233 236.51 588.786 236.51 cv
589.338 236.51 589.786 236.958 589.786 237.51 cv
f
592.905 237.51 mo
592.905 238.062 592.458 238.51 591.905 238.51 cv
591.354 238.51 590.905 238.062 590.905 237.51 cv
590.905 236.958 591.354 236.51 591.905 236.51 cv
592.458 236.51 592.905 236.958 592.905 237.51 cv
f
595.905 237.51 mo
595.905 238.062 595.458 238.51 594.905 238.51 cv
594.354 238.51 593.905 238.062 593.905 237.51 cv
593.905 236.958 594.354 236.51 594.905 236.51 cv
595.458 236.51 595.905 236.958 595.905 237.51 cv
f
599.026 237.51 mo
599.026 238.062 598.577 238.51 598.026 238.51 cv
597.473 238.51 597.026 238.062 597.026 237.51 cv
597.026 236.958 597.473 236.51 598.026 236.51 cv
598.577 236.51 599.026 236.958 599.026 237.51 cv
f
604.065 237.51 mo
604.065 238.062 603.618 238.51 603.065 238.51 cv
602.514 238.51 602.065 238.062 602.065 237.51 cv
602.065 236.958 602.514 236.51 603.065 236.51 cv
603.618 236.51 604.065 236.958 604.065 237.51 cv
f
607.065 237.51 mo
607.065 238.062 606.618 238.51 606.065 238.51 cv
605.514 238.51 605.065 238.062 605.065 237.51 cv
605.065 236.958 605.514 236.51 606.065 236.51 cv
606.618 236.51 607.065 236.958 607.065 237.51 cv
f
610.186 237.51 mo
610.186 238.062 609.737 238.51 609.186 238.51 cv
608.633 238.51 608.186 238.062 608.186 237.51 cv
608.186 236.958 608.633 236.51 609.186 236.51 cv
609.737 236.51 610.186 236.958 610.186 237.51 cv
f
612.346 237.51 mo
612.346 238.062 611.897 238.51 611.346 238.51 cv
610.793 238.51 610.346 238.062 610.346 237.51 cv
610.346 236.958 610.793 236.51 611.346 236.51 cv
611.897 236.51 612.346 236.958 612.346 237.51 cv
f
615.346 237.51 mo
615.346 238.062 614.897 238.51 614.346 238.51 cv
613.793 238.51 613.346 238.062 613.346 237.51 cv
613.346 236.958 613.793 236.51 614.346 236.51 cv
614.897 236.51 615.346 236.958 615.346 237.51 cv
f
618.346 237.51 mo
618.346 238.062 617.897 238.51 617.346 238.51 cv
616.793 238.51 616.346 238.062 616.346 237.51 cv
616.346 236.958 616.793 236.51 617.346 236.51 cv
617.897 236.51 618.346 236.958 618.346 237.51 cv
f
621.346 237.51 mo
621.346 238.062 620.897 238.51 620.346 238.51 cv
619.793 238.51 619.346 238.062 619.346 237.51 cv
619.346 236.958 619.793 236.51 620.346 236.51 cv
620.897 236.51 621.346 236.958 621.346 237.51 cv
f
624.346 237.51 mo
624.346 238.062 623.897 238.51 623.346 238.51 cv
622.793 238.51 622.346 238.062 622.346 237.51 cv
622.346 236.958 622.793 236.51 623.346 236.51 cv
623.897 236.51 624.346 236.958 624.346 237.51 cv
f
626.385 237.51 mo
626.385 238.062 625.938 238.51 625.385 238.51 cv
624.834 238.51 624.385 238.062 624.385 237.51 cv
624.385 236.958 624.834 236.51 625.385 236.51 cv
625.938 236.51 626.385 236.958 626.385 237.51 cv
f
629.385 237.51 mo
629.385 238.062 628.938 238.51 628.385 238.51 cv
627.834 238.51 627.385 238.062 627.385 237.51 cv
627.385 236.958 627.834 236.51 628.385 236.51 cv
628.938 236.51 629.385 236.958 629.385 237.51 cv
f
631.545 237.51 mo
631.545 238.062 631.098 238.51 630.545 238.51 cv
629.993 238.51 629.545 238.062 629.545 237.51 cv
629.545 236.958 629.993 236.51 630.545 236.51 cv
631.098 236.51 631.545 236.958 631.545 237.51 cv
f
634.426 237.51 mo
634.426 238.062 633.977 238.51 633.426 238.51 cv
632.874 238.51 632.426 238.062 632.426 237.51 cv
632.426 236.958 632.874 236.51 633.426 236.51 cv
633.977 236.51 634.426 236.958 634.426 237.51 cv
f
636.586 237.51 mo
636.586 238.062 636.137 238.51 635.586 238.51 cv
635.034 238.51 634.586 238.062 634.586 237.51 cv
634.586 236.958 635.034 236.51 635.586 236.51 cv
636.137 236.51 636.586 236.958 636.586 237.51 cv
f
638.745 237.51 mo
638.745 238.062 638.297 238.51 637.745 238.51 cv
637.194 238.51 636.745 238.062 636.745 237.51 cv
636.745 236.958 637.194 236.51 637.745 236.51 cv
638.297 236.51 638.745 236.958 638.745 237.51 cv
f
641.625 237.51 mo
641.625 238.062 641.178 238.51 640.625 238.51 cv
640.073 238.51 639.625 238.062 639.625 237.51 cv
639.625 236.958 640.073 236.51 640.625 236.51 cv
641.178 236.51 641.625 236.958 641.625 237.51 cv
f
134.746 317.67 mo
134.746 318.222 134.297 318.67 133.746 318.67 cv
133.193 318.67 132.746 318.222 132.746 317.67 cv
132.746 317.118 133.193 316.67 133.746 316.67 cv
134.297 316.67 134.746 317.118 134.746 317.67 cv
0 .960204 .946044 0 cmyk
f
139.786 317.67 mo
139.786 318.222 139.337 318.67 138.786 318.67 cv
138.233 318.67 137.786 318.222 137.786 317.67 cv
137.786 317.118 138.233 316.67 138.786 316.67 cv
139.337 316.67 139.786 317.118 139.786 317.67 cv
f
144.105 317.67 mo
144.105 318.222 143.657 318.67 143.105 318.67 cv
142.553 318.67 142.105 318.222 142.105 317.67 cv
142.105 317.118 142.553 316.67 143.105 316.67 cv
143.657 316.67 144.105 317.118 144.105 317.67 cv
f
148.186 317.67 mo
148.186 318.222 147.737 318.67 147.186 318.67 cv
146.633 318.67 146.186 318.222 146.186 317.67 cv
146.186 317.118 146.633 316.67 147.186 316.67 cv
147.737 316.67 148.186 317.118 148.186 317.67 cv
f
150.346 317.67 mo
150.346 318.222 149.897 318.67 149.346 318.67 cv
148.793 318.67 148.346 318.222 148.346 317.67 cv
148.346 317.118 148.793 316.67 149.346 316.67 cv
149.897 316.67 150.346 317.118 150.346 317.67 cv
f
153.465 317.67 mo
153.465 318.222 153.018 318.67 152.465 318.67 cv
151.914 318.67 151.465 318.222 151.465 317.67 cv
151.465 317.118 151.914 316.67 152.465 316.67 cv
153.018 316.67 153.465 317.118 153.465 317.67 cv
f
154.666 317.67 mo
154.666 318.222 154.217 318.67 153.666 318.67 cv
153.113 318.67 152.666 318.222 152.666 317.67 cv
152.666 317.118 153.113 316.67 153.666 316.67 cv
154.217 316.67 154.666 317.118 154.666 317.67 cv
f
159.226 317.67 mo
159.226 318.222 158.777 318.67 158.226 318.67 cv
157.673 318.67 157.226 318.222 157.226 317.67 cv
157.226 317.118 157.673 316.67 158.226 316.67 cv
158.777 316.67 159.226 317.118 159.226 317.67 cv
f
162.465 317.67 mo
162.465 318.222 162.018 318.67 161.465 318.67 cv
160.914 318.67 160.465 318.222 160.465 317.67 cv
160.465 317.118 160.914 316.67 161.465 316.67 cv
162.018 316.67 162.465 317.118 162.465 317.67 cv
f
165.465 317.67 mo
165.465 318.222 165.018 318.67 164.465 318.67 cv
163.914 318.67 163.465 318.222 163.465 317.67 cv
163.465 317.118 163.914 316.67 164.465 316.67 cv
165.018 316.67 165.465 317.118 165.465 317.67 cv
f
168.105 317.67 mo
168.105 318.222 167.657 318.67 167.105 318.67 cv
166.553 318.67 166.105 318.222 166.105 317.67 cv
166.105 317.118 166.553 316.67 167.105 316.67 cv
167.657 316.67 168.105 317.118 168.105 317.67 cv
f
172.666 317.67 mo
172.666 318.222 172.217 318.67 171.666 318.67 cv
171.113 318.67 170.666 318.222 170.666 317.67 cv
170.666 317.118 171.113 316.67 171.666 316.67 cv
172.217 316.67 172.666 317.118 172.666 317.67 cv
f
175.666 317.67 mo
175.666 318.222 175.217 318.67 174.666 318.67 cv
174.113 318.67 173.666 318.222 173.666 317.67 cv
173.666 317.118 174.113 316.67 174.666 316.67 cv
175.217 316.67 175.666 317.118 175.666 317.67 cv
f
180.226 317.67 mo
180.226 318.222 179.777 318.67 179.226 318.67 cv
178.673 318.67 178.226 318.222 178.226 317.67 cv
178.226 317.118 178.673 316.67 179.226 316.67 cv
179.777 316.67 180.226 317.118 180.226 317.67 cv
f
184.425 317.67 mo
184.425 318.222 183.978 318.67 183.425 318.67 cv
182.874 318.67 182.425 318.222 182.425 317.67 cv
182.425 317.118 182.874 316.67 183.425 316.67 cv
183.978 316.67 184.425 317.118 184.425 317.67 cv
f
188.865 317.67 mo
188.865 318.222 188.417 318.67 187.865 318.67 cv
187.313 318.67 186.865 318.222 186.865 317.67 cv
186.865 317.118 187.313 316.67 187.865 316.67 cv
188.417 316.67 188.865 317.118 188.865 317.67 cv
f
193.786 317.67 mo
193.786 318.222 193.337 318.67 192.786 318.67 cv
192.233 318.67 191.786 318.222 191.786 317.67 cv
191.786 317.118 192.233 316.67 192.786 316.67 cv
193.337 316.67 193.786 317.118 193.786 317.67 cv
f
196.186 317.67 mo
196.186 318.222 195.737 318.67 195.186 318.67 cv
194.633 318.67 194.186 318.222 194.186 317.67 cv
194.186 317.118 194.633 316.67 195.186 316.67 cv
195.737 316.67 196.186 317.118 196.186 317.67 cv
f
200.146 317.67 mo
200.146 318.222 199.697 318.67 199.146 318.67 cv
198.593 318.67 198.146 318.222 198.146 317.67 cv
198.146 317.118 198.593 316.67 199.146 316.67 cv
199.697 316.67 200.146 317.118 200.146 317.67 cv
f
203.865 317.67 mo
203.865 318.222 203.417 318.67 202.865 318.67 cv
202.313 318.67 201.865 318.222 201.865 317.67 cv
201.865 317.118 202.313 316.67 202.865 316.67 cv
203.417 316.67 203.865 317.118 203.865 317.67 cv
f
206.266 317.67 mo
206.266 318.222 205.817 318.67 205.266 318.67 cv
204.713 318.67 204.266 318.222 204.266 317.67 cv
204.266 317.118 204.713 316.67 205.266 316.67 cv
205.817 316.67 206.266 317.118 206.266 317.67 cv
f
209.985 317.67 mo
209.985 318.222 209.538 318.67 208.985 318.67 cv
208.434 318.67 207.985 318.222 207.985 317.67 cv
207.985 317.118 208.434 316.67 208.985 316.67 cv
209.538 316.67 209.985 317.118 209.985 317.67 cv
f
213.706 317.67 mo
213.706 318.222 213.257 318.67 212.706 318.67 cv
212.153 318.67 211.706 318.222 211.706 317.67 cv
211.706 317.118 212.153 316.67 212.706 316.67 cv
213.257 316.67 213.706 317.118 213.706 317.67 cv
f
218.025 317.67 mo
218.025 318.222 217.578 318.67 217.025 318.67 cv
216.474 318.67 216.025 318.222 216.025 317.67 cv
216.025 317.118 216.474 316.67 217.025 316.67 cv
217.578 316.67 218.025 317.118 218.025 317.67 cv
f
222.465 317.67 mo
222.465 318.222 222.018 318.67 221.465 318.67 cv
220.914 318.67 220.465 318.222 220.465 317.67 cv
220.465 317.118 220.914 316.67 221.465 316.67 cv
222.018 316.67 222.465 317.118 222.465 317.67 cv
f
226.666 317.67 mo
226.666 318.222 226.217 318.67 225.666 318.67 cv
225.113 318.67 224.666 318.222 224.666 317.67 cv
224.666 317.118 225.113 316.67 225.666 316.67 cv
226.217 316.67 226.666 317.118 226.666 317.67 cv
f
229.786 317.67 mo
229.786 318.222 229.337 318.67 228.786 318.67 cv
228.233 318.67 227.786 318.222 227.786 317.67 cv
227.786 317.118 228.233 316.67 228.786 316.67 cv
229.337 316.67 229.786 317.118 229.786 317.67 cv
f
233.625 317.67 mo
233.625 318.222 233.177 318.67 232.625 318.67 cv
232.073 318.67 231.625 318.222 231.625 317.67 cv
231.625 317.118 232.073 316.67 232.625 316.67 cv
233.177 316.67 233.625 317.118 233.625 317.67 cv
f
236.865 317.67 mo
236.865 318.222 236.417 318.67 235.865 318.67 cv
235.313 318.67 234.865 318.222 234.865 317.67 cv
234.865 317.118 235.313 316.67 235.865 316.67 cv
236.417 316.67 236.865 317.118 236.865 317.67 cv
f
239.505 317.67 mo
239.505 318.222 239.058 318.67 238.505 318.67 cv
237.954 318.67 237.505 318.222 237.505 317.67 cv
237.505 317.118 237.954 316.67 238.505 316.67 cv
239.058 316.67 239.505 317.118 239.505 317.67 cv
f
243.226 317.67 mo
243.226 318.222 242.777 318.67 242.226 318.67 cv
241.673 318.67 241.226 318.222 241.226 317.67 cv
241.226 317.118 241.673 316.67 242.226 316.67 cv
242.777 316.67 243.226 317.118 243.226 317.67 cv
f
246.346 317.67 mo
246.346 318.222 245.897 318.67 245.346 318.67 cv
244.793 318.67 244.346 318.222 244.346 317.67 cv
244.346 317.118 244.793 316.67 245.346 316.67 cv
245.897 316.67 246.346 317.118 246.346 317.67 cv
f
249.585 317.67 mo
249.585 318.222 249.138 318.67 248.585 318.67 cv
248.034 318.67 247.585 318.222 247.585 317.67 cv
247.585 317.118 248.034 316.67 248.585 316.67 cv
249.138 316.67 249.585 317.118 249.585 317.67 cv
f
252.585 317.67 mo
252.585 318.222 252.138 318.67 251.585 318.67 cv
251.034 318.67 250.585 318.222 250.585 317.67 cv
250.585 317.118 251.034 316.67 251.585 316.67 cv
252.138 316.67 252.585 317.118 252.585 317.67 cv
f
255.346 317.67 mo
255.346 318.222 254.897 318.67 254.346 318.67 cv
253.793 318.67 253.346 318.222 253.346 317.67 cv
253.346 317.118 253.793 316.67 254.346 316.67 cv
254.897 316.67 255.346 317.118 255.346 317.67 cv
f
257.625 317.67 mo
257.625 318.222 257.177 318.67 256.625 318.67 cv
256.073 318.67 255.625 318.222 255.625 317.67 cv
255.625 317.118 256.073 316.67 256.625 316.67 cv
257.177 316.67 257.625 317.118 257.625 317.67 cv
f
260.146 317.67 mo
260.146 318.222 259.697 318.67 259.146 318.67 cv
258.593 318.67 258.146 318.222 258.146 317.67 cv
258.146 317.118 258.593 316.67 259.146 316.67 cv
259.697 316.67 260.146 317.118 260.146 317.67 cv
f
266.746 317.67 mo
266.746 318.222 266.297 318.67 265.746 318.67 cv
265.193 318.67 264.746 318.222 264.746 317.67 cv
264.746 317.118 265.193 316.67 265.746 316.67 cv
266.297 316.67 266.746 317.118 266.746 317.67 cv
f
270.105 317.67 mo
270.105 318.222 269.657 318.67 269.105 318.67 cv
268.554 318.67 268.105 318.222 268.105 317.67 cv
268.105 317.118 268.554 316.67 269.105 316.67 cv
269.657 316.67 270.105 317.118 270.105 317.67 cv
f
272.985 317.67 mo
272.985 318.222 272.538 318.67 271.985 318.67 cv
271.434 318.67 270.985 318.222 270.985 317.67 cv
270.985 317.118 271.434 316.67 271.985 316.67 cv
272.538 316.67 272.985 317.118 272.985 317.67 cv
f
276.346 317.67 mo
276.346 318.222 275.897 318.67 275.346 318.67 cv
274.793 318.67 274.346 318.222 274.346 317.67 cv
274.346 317.118 274.793 316.67 275.346 316.67 cv
275.897 316.67 276.346 317.118 276.346 317.67 cv
f
280.186 317.67 mo
280.186 318.222 279.737 318.67 279.186 318.67 cv
278.633 318.67 278.186 318.222 278.186 317.67 cv
278.186 317.118 278.633 316.67 279.186 316.67 cv
279.737 316.67 280.186 317.118 280.186 317.67 cv
f
283.545 317.67 mo
283.545 318.222 283.098 318.67 282.545 318.67 cv
281.994 318.67 281.545 318.222 281.545 317.67 cv
281.545 317.118 281.994 316.67 282.545 316.67 cv
283.098 316.67 283.545 317.118 283.545 317.67 cv
f
288.346 317.67 mo
288.346 318.222 287.897 318.67 287.346 318.67 cv
286.793 318.67 286.346 318.222 286.346 317.67 cv
286.346 317.118 286.793 316.67 287.346 316.67 cv
287.897 316.67 288.346 317.118 288.346 317.67 cv
f
291.226 317.67 mo
291.226 318.222 290.777 318.67 290.226 318.67 cv
289.673 318.67 289.226 318.222 289.226 317.67 cv
289.226 317.118 289.673 316.67 290.226 316.67 cv
290.777 316.67 291.226 317.118 291.226 317.67 cv
f
294.105 317.67 mo
294.105 318.222 293.657 318.67 293.105 318.67 cv
292.554 318.67 292.105 318.222 292.105 317.67 cv
292.105 317.118 292.554 316.67 293.105 316.67 cv
293.657 316.67 294.105 317.118 294.105 317.67 cv
f
297.585 317.67 mo
297.585 318.222 297.138 318.67 296.585 318.67 cv
296.034 318.67 295.585 318.222 295.585 317.67 cv
295.585 317.118 296.034 316.67 296.585 316.67 cv
297.138 316.67 297.585 317.118 297.585 317.67 cv
f
301.065 317.67 mo
301.065 318.222 300.618 318.67 300.065 318.67 cv
299.514 318.67 299.065 318.222 299.065 317.67 cv
299.065 317.118 299.514 316.67 300.065 316.67 cv
300.618 316.67 301.065 317.118 301.065 317.67 cv
f
304.065 317.67 mo
304.065 318.222 303.618 318.67 303.065 318.67 cv
302.514 318.67 302.065 318.222 302.065 317.67 cv
302.065 317.118 302.514 316.67 303.065 316.67 cv
303.618 316.67 304.065 317.118 304.065 317.67 cv
f
307.306 317.67 mo
307.306 318.222 306.857 318.67 306.306 318.67 cv
305.753 318.67 305.306 318.222 305.306 317.67 cv
305.306 317.118 305.753 316.67 306.306 316.67 cv
306.857 316.67 307.306 317.118 307.306 317.67 cv
f
309.826 317.67 mo
309.826 318.222 309.377 318.67 308.826 318.67 cv
308.273 318.67 307.826 318.222 307.826 317.67 cv
307.826 317.118 308.273 316.67 308.826 316.67 cv
309.377 316.67 309.826 317.118 309.826 317.67 cv
f
313.065 317.67 mo
313.065 318.222 312.618 318.67 312.065 318.67 cv
311.514 318.67 311.065 318.222 311.065 317.67 cv
311.065 317.118 311.514 316.67 312.065 316.67 cv
312.618 316.67 313.065 317.118 313.065 317.67 cv
f
316.425 317.67 mo
316.425 318.222 315.978 318.67 315.425 318.67 cv
314.874 318.67 314.425 318.222 314.425 317.67 cv
314.425 317.118 314.874 316.67 315.425 316.67 cv
315.978 316.67 316.425 317.118 316.425 317.67 cv
f
320.025 317.67 mo
320.025 318.222 319.578 318.67 319.025 318.67 cv
318.474 318.67 318.025 318.222 318.025 317.67 cv
318.025 317.118 318.474 316.67 319.025 316.67 cv
319.578 316.67 320.025 317.118 320.025 317.67 cv
f
323.146 317.67 mo
323.146 318.222 322.697 318.67 322.146 318.67 cv
321.593 318.67 321.146 318.222 321.146 317.67 cv
321.146 317.118 321.593 316.67 322.146 316.67 cv
322.697 316.67 323.146 317.118 323.146 317.67 cv
f
325.545 317.67 mo
325.545 318.222 325.098 318.67 324.545 318.67 cv
323.994 318.67 323.545 318.222 323.545 317.67 cv
323.545 317.118 323.994 316.67 324.545 316.67 cv
325.098 316.67 325.545 317.118 325.545 317.67 cv
f
327.706 317.67 mo
327.706 318.222 327.257 318.67 326.706 318.67 cv
326.153 318.67 325.706 318.222 325.706 317.67 cv
325.706 317.118 326.153 316.67 326.706 316.67 cv
327.257 316.67 327.706 317.118 327.706 317.67 cv
f
331.545 317.67 mo
331.545 318.222 331.098 318.67 330.545 318.67 cv
329.994 318.67 329.545 318.222 329.545 317.67 cv
329.545 317.118 329.994 316.67 330.545 316.67 cv
331.098 316.67 331.545 317.118 331.545 317.67 cv
f
334.905 317.67 mo
334.905 318.222 334.458 318.67 333.905 318.67 cv
333.354 318.67 332.905 318.222 332.905 317.67 cv
332.905 317.118 333.354 316.67 333.905 316.67 cv
334.458 316.67 334.905 317.118 334.905 317.67 cv
f
338.746 317.67 mo
338.746 318.222 338.297 318.67 337.746 318.67 cv
337.193 318.67 336.746 318.222 336.746 317.67 cv
336.746 317.118 337.193 316.67 337.746 316.67 cv
338.297 316.67 338.746 317.118 338.746 317.67 cv
f
341.865 317.67 mo
341.865 318.222 341.417 318.67 340.865 318.67 cv
340.313 318.67 339.865 318.222 339.865 317.67 cv
339.865 317.118 340.313 316.67 340.865 316.67 cv
341.417 316.67 341.865 317.118 341.865 317.67 cv
f
344.266 317.67 mo
344.266 318.222 343.817 318.67 343.266 318.67 cv
342.713 318.67 342.266 318.222 342.266 317.67 cv
342.266 317.118 342.713 316.67 343.266 316.67 cv
343.817 316.67 344.266 317.118 344.266 317.67 cv
f
347.266 317.67 mo
347.266 318.222 346.817 318.67 346.266 318.67 cv
345.713 318.67 345.266 318.222 345.266 317.67 cv
345.266 317.118 345.713 316.67 346.266 316.67 cv
346.817 316.67 347.266 317.118 347.266 317.67 cv
f
352.666 317.67 mo
352.666 318.222 352.217 318.67 351.666 318.67 cv
351.113 318.67 350.666 318.222 350.666 317.67 cv
350.666 317.118 351.113 316.67 351.666 316.67 cv
352.217 316.67 352.666 317.118 352.666 317.67 cv
f
357.465 317.67 mo
357.465 318.222 357.018 318.67 356.465 318.67 cv
355.914 318.67 355.465 318.222 355.465 317.67 cv
355.465 317.118 355.914 316.67 356.465 316.67 cv
357.018 316.67 357.465 317.118 357.465 317.67 cv
f
359.865 317.67 mo
359.865 318.222 359.417 318.67 358.865 318.67 cv
358.313 318.67 357.865 318.222 357.865 317.67 cv
357.865 317.118 358.313 316.67 358.865 316.67 cv
359.417 316.67 359.865 317.118 359.865 317.67 cv
f
363.346 317.67 mo
363.346 318.222 362.897 318.67 362.346 318.67 cv
361.793 318.67 361.346 318.222 361.346 317.67 cv
361.346 317.118 361.793 316.67 362.346 316.67 cv
362.897 316.67 363.346 317.118 363.346 317.67 cv
f
366.706 317.67 mo
366.706 318.222 366.258 318.67 365.706 318.67 cv
365.153 318.67 364.706 318.222 364.706 317.67 cv
364.706 317.118 365.153 316.67 365.706 316.67 cv
366.258 316.67 366.706 317.118 366.706 317.67 cv
f
370.065 317.67 mo
370.065 318.222 369.618 318.67 369.065 318.67 cv
368.514 318.67 368.065 318.222 368.065 317.67 cv
368.065 317.118 368.514 316.67 369.065 316.67 cv
369.618 316.67 370.065 317.118 370.065 317.67 cv
f
372.825 317.67 mo
372.825 318.222 372.377 318.67 371.825 318.67 cv
371.274 318.67 370.825 318.222 370.825 317.67 cv
370.825 317.118 371.274 316.67 371.825 316.67 cv
372.377 316.67 372.825 317.118 372.825 317.67 cv
f
376.426 317.67 mo
376.426 318.222 375.977 318.67 375.426 318.67 cv
374.874 318.67 374.426 318.222 374.426 317.67 cv
374.426 317.118 374.874 316.67 375.426 316.67 cv
375.977 316.67 376.426 317.118 376.426 317.67 cv
f
380.385 317.67 mo
380.385 318.222 379.938 318.67 379.385 318.67 cv
378.833 318.67 378.385 318.222 378.385 317.67 cv
378.385 317.118 378.833 316.67 379.385 316.67 cv
379.938 316.67 380.385 317.118 380.385 317.67 cv
f
384.106 317.67 mo
384.106 318.222 383.657 318.67 383.106 318.67 cv
382.553 318.67 382.106 318.222 382.106 317.67 cv
382.106 317.118 382.553 316.67 383.106 316.67 cv
383.657 316.67 384.106 317.118 384.106 317.67 cv
f
387.706 317.67 mo
387.706 318.222 387.258 318.67 386.706 318.67 cv
386.153 318.67 385.706 318.222 385.706 317.67 cv
385.706 317.118 386.153 316.67 386.706 316.67 cv
387.258 316.67 387.706 317.118 387.706 317.67 cv
f
390.825 317.67 mo
390.825 318.222 390.377 318.67 389.825 318.67 cv
389.274 318.67 388.825 318.222 388.825 317.67 cv
388.825 317.118 389.274 316.67 389.825 316.67 cv
390.377 316.67 390.825 317.118 390.825 317.67 cv
f
393.465 317.67 mo
393.465 318.222 393.018 318.67 392.465 318.67 cv
391.913 318.67 391.465 318.222 391.465 317.67 cv
391.465 317.118 391.913 316.67 392.465 316.67 cv
393.018 316.67 393.465 317.118 393.465 317.67 cv
f
396.346 317.67 mo
396.346 318.222 395.897 318.67 395.346 318.67 cv
394.793 318.67 394.346 318.222 394.346 317.67 cv
394.346 317.118 394.793 316.67 395.346 316.67 cv
395.897 316.67 396.346 317.118 396.346 317.67 cv
f
399.465 317.67 mo
399.465 318.222 399.018 318.67 398.465 318.67 cv
397.913 318.67 397.465 318.222 397.465 317.67 cv
397.465 317.118 397.913 316.67 398.465 316.67 cv
399.018 316.67 399.465 317.118 399.465 317.67 cv
f
402.706 317.67 mo
402.706 318.222 402.258 318.67 401.706 318.67 cv
401.153 318.67 400.706 318.222 400.706 317.67 cv
400.706 317.118 401.153 316.67 401.706 316.67 cv
402.258 316.67 402.706 317.118 402.706 317.67 cv
f
405.825 317.67 mo
405.825 318.222 405.377 318.67 404.825 318.67 cv
404.274 318.67 403.825 318.222 403.825 317.67 cv
403.825 317.118 404.274 316.67 404.825 316.67 cv
405.377 316.67 405.825 317.118 405.825 317.67 cv
f
408.106 317.67 mo
408.106 318.222 407.657 318.67 407.106 318.67 cv
406.553 318.67 406.106 318.222 406.106 317.67 cv
406.106 317.118 406.553 316.67 407.106 316.67 cv
407.657 316.67 408.106 317.118 408.106 317.67 cv
f
410.506 317.67 mo
410.506 318.222 410.057 318.67 409.506 318.67 cv
408.954 318.67 408.506 318.222 408.506 317.67 cv
408.506 317.118 408.954 316.67 409.506 316.67 cv
410.057 316.67 410.506 317.118 410.506 317.67 cv
f
413.625 317.67 mo
413.625 318.222 413.178 318.67 412.625 318.67 cv
412.073 318.67 411.625 318.222 411.625 317.67 cv
411.625 317.118 412.073 316.67 412.625 316.67 cv
413.178 316.67 413.625 317.118 413.625 317.67 cv
f
416.385 317.67 mo
416.385 318.222 415.938 318.67 415.385 318.67 cv
414.833 318.67 414.385 318.222 414.385 317.67 cv
414.385 317.118 414.833 316.67 415.385 316.67 cv
415.938 316.67 416.385 317.118 416.385 317.67 cv
f
419.385 317.67 mo
419.385 318.222 418.938 318.67 418.385 318.67 cv
417.833 318.67 417.385 318.222 417.385 317.67 cv
417.385 317.118 417.833 316.67 418.385 316.67 cv
418.938 316.67 419.385 317.118 419.385 317.67 cv
f
421.545 317.67 mo
421.545 318.222 421.098 318.67 420.545 318.67 cv
419.993 318.67 419.545 318.222 419.545 317.67 cv
419.545 317.118 419.993 316.67 420.545 316.67 cv
421.098 316.67 421.545 317.118 421.545 317.67 cv
f
423.706 317.67 mo
423.706 318.222 423.258 318.67 422.706 318.67 cv
422.153 318.67 421.706 318.222 421.706 317.67 cv
421.706 317.118 422.153 316.67 422.706 316.67 cv
423.258 316.67 423.706 317.118 423.706 317.67 cv
f
427.065 317.67 mo
427.065 318.222 426.618 318.67 426.065 318.67 cv
425.514 318.67 425.065 318.222 425.065 317.67 cv
425.065 317.118 425.514 316.67 426.065 316.67 cv
426.618 316.67 427.065 317.118 427.065 317.67 cv
f
429.346 317.67 mo
429.346 318.222 428.897 318.67 428.346 318.67 cv
427.793 318.67 427.346 318.222 427.346 317.67 cv
427.346 317.118 427.793 316.67 428.346 316.67 cv
428.897 316.67 429.346 317.118 429.346 317.67 cv
f
433.545 317.67 mo
433.545 318.222 433.098 318.67 432.545 318.67 cv
431.993 318.67 431.545 318.222 431.545 317.67 cv
431.545 317.118 431.993 316.67 432.545 316.67 cv
433.098 316.67 433.545 317.118 433.545 317.67 cv
f
436.305 317.67 mo
436.305 318.222 435.858 318.67 435.305 318.67 cv
434.754 318.67 434.305 318.222 434.305 317.67 cv
434.305 317.118 434.754 316.67 435.305 316.67 cv
435.858 316.67 436.305 317.118 436.305 317.67 cv
f
440.266 317.67 mo
440.266 318.222 439.817 318.67 439.266 318.67 cv
438.713 318.67 438.266 318.222 438.266 317.67 cv
438.266 317.118 438.713 316.67 439.266 316.67 cv
439.817 316.67 440.266 317.118 440.266 317.67 cv
f
443.866 317.67 mo
443.866 318.222 443.418 318.67 442.866 318.67 cv
442.313 318.67 441.866 318.222 441.866 317.67 cv
441.866 317.118 442.313 316.67 442.866 316.67 cv
443.418 316.67 443.866 317.118 443.866 317.67 cv
f
446.625 317.67 mo
446.625 318.222 446.178 318.67 445.625 318.67 cv
445.073 318.67 444.625 318.222 444.625 317.67 cv
444.625 317.118 445.073 316.67 445.625 316.67 cv
446.178 316.67 446.625 317.118 446.625 317.67 cv
f
449.745 317.67 mo
449.745 318.222 449.297 318.67 448.745 318.67 cv
448.194 318.67 447.745 318.222 447.745 317.67 cv
447.745 317.118 448.194 316.67 448.745 316.67 cv
449.297 316.67 449.745 317.118 449.745 317.67 cv
f
452.506 317.67 mo
452.506 318.222 452.057 318.67 451.506 318.67 cv
450.954 318.67 450.506 318.222 450.506 317.67 cv
450.506 317.118 450.954 316.67 451.506 316.67 cv
452.057 316.67 452.506 317.118 452.506 317.67 cv
f
455.625 317.67 mo
455.625 318.222 455.178 318.67 454.625 318.67 cv
454.073 318.67 453.625 318.222 453.625 317.67 cv
453.625 317.118 454.073 316.67 454.625 316.67 cv
455.178 316.67 455.625 317.118 455.625 317.67 cv
f
458.026 317.67 mo
458.026 318.222 457.577 318.67 457.026 318.67 cv
456.473 318.67 456.026 318.222 456.026 317.67 cv
456.026 317.118 456.473 316.67 457.026 316.67 cv
457.577 316.67 458.026 317.118 458.026 317.67 cv
f
461.026 317.67 mo
461.026 318.222 460.577 318.67 460.026 318.67 cv
459.473 318.67 459.026 318.222 459.026 317.67 cv
459.026 317.118 459.473 316.67 460.026 316.67 cv
460.577 316.67 461.026 317.118 461.026 317.67 cv
f
464.266 317.67 mo
464.266 318.222 463.817 318.67 463.266 318.67 cv
462.713 318.67 462.266 318.222 462.266 317.67 cv
462.266 317.118 462.713 316.67 463.266 316.67 cv
463.817 316.67 464.266 317.118 464.266 317.67 cv
f
467.625 317.67 mo
467.625 318.222 467.178 318.67 466.625 318.67 cv
466.073 318.67 465.625 318.222 465.625 317.67 cv
465.625 317.118 466.073 316.67 466.625 316.67 cv
467.178 316.67 467.625 317.118 467.625 317.67 cv
f
471.106 317.67 mo
471.106 318.222 470.657 318.67 470.106 318.67 cv
469.553 318.67 469.106 318.222 469.106 317.67 cv
469.106 317.118 469.553 316.67 470.106 316.67 cv
470.657 316.67 471.106 317.118 471.106 317.67 cv
f
473.506 317.67 mo
473.506 318.222 473.057 318.67 472.506 318.67 cv
471.954 318.67 471.506 318.222 471.506 317.67 cv
471.506 317.118 471.954 316.67 472.506 316.67 cv
473.057 316.67 473.506 317.118 473.506 317.67 cv
f
476.985 317.67 mo
476.985 318.222 476.538 318.67 475.985 318.67 cv
475.434 318.67 474.985 318.222 474.985 317.67 cv
474.985 317.118 475.434 316.67 475.985 316.67 cv
476.538 316.67 476.985 317.118 476.985 317.67 cv
f
480.825 317.67 mo
480.825 318.222 480.377 318.67 479.825 318.67 cv
479.274 318.67 478.825 318.222 478.825 317.67 cv
478.825 317.118 479.274 316.67 479.825 316.67 cv
480.377 316.67 480.825 317.118 480.825 317.67 cv
f
484.186 317.67 mo
484.186 318.222 483.737 318.67 483.186 318.67 cv
482.633 318.67 482.186 318.222 482.186 317.67 cv
482.186 317.118 482.633 316.67 483.186 316.67 cv
483.737 316.67 484.186 317.118 484.186 317.67 cv
f
487.065 317.67 mo
487.065 318.222 486.618 318.67 486.065 318.67 cv
485.514 318.67 485.065 318.222 485.065 317.67 cv
485.065 317.118 485.514 316.67 486.065 316.67 cv
486.618 316.67 487.065 317.118 487.065 317.67 cv
f
489.465 317.67 mo
489.465 318.222 489.018 318.67 488.465 318.67 cv
487.913 318.67 487.465 318.222 487.465 317.67 cv
487.465 317.118 487.913 316.67 488.465 316.67 cv
489.018 316.67 489.465 317.118 489.465 317.67 cv
f
492.586 317.67 mo
492.586 318.222 492.137 318.67 491.586 318.67 cv
491.034 318.67 490.586 318.222 490.586 317.67 cv
490.586 317.118 491.034 316.67 491.586 316.67 cv
492.137 316.67 492.586 317.118 492.586 317.67 cv
f
495.706 317.67 mo
495.706 318.222 495.258 318.67 494.706 318.67 cv
494.153 318.67 493.706 318.222 493.706 317.67 cv
493.706 317.118 494.153 316.67 494.706 316.67 cv
495.258 316.67 495.706 317.118 495.706 317.67 cv
f
498.946 317.67 mo
498.946 318.222 498.497 318.67 497.946 318.67 cv
497.393 318.67 496.946 318.222 496.946 317.67 cv
496.946 317.118 497.393 316.67 497.946 316.67 cv
498.497 316.67 498.946 317.118 498.946 317.67 cv
f
502.426 317.67 mo
502.426 318.222 501.977 318.67 501.426 318.67 cv
500.874 318.67 500.426 318.222 500.426 317.67 cv
500.426 317.118 500.874 316.67 501.426 316.67 cv
501.977 316.67 502.426 317.118 502.426 317.67 cv
f
505.426 317.67 mo
505.426 318.222 504.977 318.67 504.426 318.67 cv
503.874 318.67 503.426 318.222 503.426 317.67 cv
503.426 317.118 503.874 316.67 504.426 316.67 cv
504.977 316.67 505.426 317.118 505.426 317.67 cv
f
508.665 317.67 mo
508.665 318.222 508.217 318.67 507.665 318.67 cv
507.114 318.67 506.665 318.222 506.665 317.67 cv
506.665 317.118 507.114 316.67 507.665 316.67 cv
508.217 316.67 508.665 317.118 508.665 317.67 cv
f
511.186 317.67 mo
511.186 318.222 510.737 318.67 510.186 318.67 cv
509.633 318.67 509.186 318.222 509.186 317.67 cv
509.186 317.118 509.633 316.67 510.186 316.67 cv
510.737 316.67 511.186 317.118 511.186 317.67 cv
f
513.946 317.67 mo
513.946 318.222 513.497 318.67 512.946 318.67 cv
512.393 318.67 511.946 318.222 511.946 317.67 cv
511.946 317.118 512.393 316.67 512.946 316.67 cv
513.497 316.67 513.946 317.118 513.946 317.67 cv
f
517.305 317.67 mo
517.305 318.222 516.858 318.67 516.305 318.67 cv
515.754 318.67 515.305 318.222 515.305 317.67 cv
515.305 317.118 515.754 316.67 516.305 316.67 cv
516.858 316.67 517.305 317.118 517.305 317.67 cv
f
521.026 317.67 mo
521.026 318.222 520.577 318.67 520.026 318.67 cv
519.473 318.67 519.026 318.222 519.026 317.67 cv
519.026 317.118 519.473 316.67 520.026 316.67 cv
520.577 316.67 521.026 317.118 521.026 317.67 cv
f
523.786 317.67 mo
523.786 318.222 523.338 318.67 522.786 318.67 cv
522.233 318.67 521.786 318.222 521.786 317.67 cv
521.786 317.118 522.233 316.67 522.786 316.67 cv
523.338 316.67 523.786 317.118 523.786 317.67 cv
f
526.905 317.67 mo
526.905 318.222 526.458 318.67 525.905 318.67 cv
525.354 318.67 524.905 318.222 524.905 317.67 cv
524.905 317.118 525.354 316.67 525.905 316.67 cv
526.458 316.67 526.905 317.118 526.905 317.67 cv
f
529.545 317.67 mo
529.545 318.222 529.098 318.67 528.545 318.67 cv
527.993 318.67 527.545 318.222 527.545 317.67 cv
527.545 317.118 527.993 316.67 528.545 316.67 cv
529.098 316.67 529.545 317.118 529.545 317.67 cv
f
532.786 317.67 mo
532.786 318.222 532.338 318.67 531.786 318.67 cv
531.233 318.67 530.786 318.222 530.786 317.67 cv
530.786 317.118 531.233 316.67 531.786 316.67 cv
532.338 316.67 532.786 317.118 532.786 317.67 cv
f
536.385 317.67 mo
536.385 318.222 535.938 318.67 535.385 318.67 cv
534.833 318.67 534.385 318.222 534.385 317.67 cv
534.385 317.118 534.833 316.67 535.385 316.67 cv
535.938 316.67 536.385 317.118 536.385 317.67 cv
f
539.866 317.67 mo
539.866 318.222 539.418 318.67 538.866 318.67 cv
538.313 318.67 537.866 318.222 537.866 317.67 cv
537.866 317.118 538.313 316.67 538.866 316.67 cv
539.418 316.67 539.866 317.118 539.866 317.67 cv
f
542.866 317.67 mo
542.866 318.222 542.418 318.67 541.866 318.67 cv
541.313 318.67 540.866 318.222 540.866 317.67 cv
540.866 317.118 541.313 316.67 541.866 316.67 cv
542.418 316.67 542.866 317.118 542.866 317.67 cv
f
545.866 317.67 mo
545.866 318.222 545.418 318.67 544.866 318.67 cv
544.313 318.67 543.866 318.222 543.866 317.67 cv
543.866 317.118 544.313 316.67 544.866 316.67 cv
545.418 316.67 545.866 317.118 545.866 317.67 cv
f
548.506 317.67 mo
548.506 318.222 548.057 318.67 547.506 318.67 cv
546.954 318.67 546.506 318.222 546.506 317.67 cv
546.506 317.118 546.954 316.67 547.506 316.67 cv
548.057 316.67 548.506 317.118 548.506 317.67 cv
f
551.385 317.67 mo
551.385 318.222 550.938 318.67 550.385 318.67 cv
549.833 318.67 549.385 318.222 549.385 317.67 cv
549.385 317.118 549.833 316.67 550.385 316.67 cv
550.938 316.67 551.385 317.118 551.385 317.67 cv
f
555.346 317.67 mo
555.346 318.222 554.897 318.67 554.346 318.67 cv
553.793 318.67 553.346 318.222 553.346 317.67 cv
553.346 317.118 553.793 316.67 554.346 316.67 cv
554.897 316.67 555.346 317.118 555.346 317.67 cv
f
558.706 317.67 mo
558.706 318.222 558.258 318.67 557.706 318.67 cv
557.153 318.67 556.706 318.222 556.706 317.67 cv
556.706 317.118 557.153 316.67 557.706 316.67 cv
558.258 316.67 558.706 317.118 558.706 317.67 cv
f
561.946 317.67 mo
561.946 318.222 561.497 318.67 560.946 318.67 cv
560.393 318.67 559.946 318.222 559.946 317.67 cv
559.946 317.118 560.393 316.67 560.946 316.67 cv
561.497 316.67 561.946 317.118 561.946 317.67 cv
f
564.825 317.67 mo
564.825 318.222 564.377 318.67 563.825 318.67 cv
563.274 318.67 562.825 318.222 562.825 317.67 cv
562.825 317.118 563.274 316.67 563.825 316.67 cv
564.377 316.67 564.825 317.118 564.825 317.67 cv
f
567.225 317.67 mo
567.225 318.222 566.778 318.67 566.225 318.67 cv
565.674 318.67 565.225 318.222 565.225 317.67 cv
565.225 317.118 565.674 316.67 566.225 316.67 cv
566.778 316.67 567.225 317.118 567.225 317.67 cv
f
570.825 317.67 mo
570.825 318.222 570.377 318.67 569.825 318.67 cv
569.274 318.67 568.825 318.222 568.825 317.67 cv
568.825 317.118 569.274 316.67 569.825 316.67 cv
570.377 316.67 570.825 317.118 570.825 317.67 cv
f
574.186 317.67 mo
574.186 318.222 573.737 318.67 573.186 318.67 cv
572.633 318.67 572.186 318.222 572.186 317.67 cv
572.186 317.118 572.633 316.67 573.186 316.67 cv
573.737 316.67 574.186 317.118 574.186 317.67 cv
f
577.065 317.67 mo
577.065 318.222 576.618 318.67 576.065 318.67 cv
575.514 318.67 575.065 318.222 575.065 317.67 cv
575.065 317.118 575.514 316.67 576.065 316.67 cv
576.618 316.67 577.065 317.118 577.065 317.67 cv
f
580.186 317.67 mo
580.186 318.222 579.737 318.67 579.186 318.67 cv
578.633 318.67 578.186 318.222 578.186 317.67 cv
578.186 317.118 578.633 316.67 579.186 316.67 cv
579.737 316.67 580.186 317.118 580.186 317.67 cv
f
583.665 317.67 mo
583.665 318.222 583.217 318.67 582.665 318.67 cv
582.114 318.67 581.665 318.222 581.665 317.67 cv
581.665 317.118 582.114 316.67 582.665 316.67 cv
583.217 316.67 583.665 317.118 583.665 317.67 cv
f
585.946 317.67 mo
585.946 318.222 585.497 318.67 584.946 318.67 cv
584.393 318.67 583.946 318.222 583.946 317.67 cv
583.946 317.118 584.393 316.67 584.946 316.67 cv
585.497 316.67 585.946 317.118 585.946 317.67 cv
f
588.346 317.67 mo
588.346 318.222 587.897 318.67 587.346 318.67 cv
586.793 318.67 586.346 318.222 586.346 317.67 cv
586.346 317.118 586.793 316.67 587.346 316.67 cv
587.897 316.67 588.346 317.118 588.346 317.67 cv
f
591.225 317.67 mo
591.225 318.222 590.778 318.67 590.225 318.67 cv
589.674 318.67 589.225 318.222 589.225 317.67 cv
589.225 317.118 589.674 316.67 590.225 316.67 cv
590.778 316.67 591.225 317.118 591.225 317.67 cv
f
594.225 317.67 mo
594.225 318.222 593.778 318.67 593.225 318.67 cv
592.674 318.67 592.225 318.222 592.225 317.67 cv
592.225 317.118 592.674 316.67 593.225 316.67 cv
593.778 316.67 594.225 317.118 594.225 317.67 cv
f
597.586 317.67 mo
597.586 318.222 597.137 318.67 596.586 318.67 cv
596.034 318.67 595.586 318.222 595.586 317.67 cv
595.586 317.118 596.034 316.67 596.586 316.67 cv
597.137 316.67 597.586 317.118 597.586 317.67 cv
f
600.465 317.67 mo
600.465 318.222 600.018 318.67 599.465 318.67 cv
598.913 318.67 598.465 318.222 598.465 317.67 cv
598.465 317.118 598.913 316.67 599.465 316.67 cv
600.018 316.67 600.465 317.118 600.465 317.67 cv
f
603.946 317.67 mo
603.946 318.222 603.497 318.67 602.946 318.67 cv
602.393 318.67 601.946 318.222 601.946 317.67 cv
601.946 317.118 602.393 316.67 602.946 316.67 cv
603.497 316.67 603.946 317.118 603.946 317.67 cv
f
607.305 317.67 mo
607.305 318.222 606.858 318.67 606.305 318.67 cv
605.754 318.67 605.305 318.222 605.305 317.67 cv
605.305 317.118 605.754 316.67 606.305 316.67 cv
606.858 316.67 607.305 317.118 607.305 317.67 cv
f
609.946 317.67 mo
609.946 318.222 609.497 318.67 608.946 318.67 cv
608.393 318.67 607.946 318.222 607.946 317.67 cv
607.946 317.118 608.393 316.67 608.946 316.67 cv
609.497 316.67 609.946 317.118 609.946 317.67 cv
f
613.065 317.67 mo
613.065 318.222 612.618 318.67 612.065 318.67 cv
611.514 318.67 611.065 318.222 611.065 317.67 cv
611.065 317.118 611.514 316.67 612.065 316.67 cv
612.618 316.67 613.065 317.118 613.065 317.67 cv
f
615.465 317.67 mo
615.465 318.222 615.018 318.67 614.465 318.67 cv
613.913 318.67 613.465 318.222 613.465 317.67 cv
613.465 317.118 613.913 316.67 614.465 316.67 cv
615.018 316.67 615.465 317.118 615.465 317.67 cv
f
618.106 317.67 mo
618.106 318.222 617.657 318.67 617.106 318.67 cv
616.553 318.67 616.106 318.222 616.106 317.67 cv
616.106 317.118 616.553 316.67 617.106 316.67 cv
617.657 316.67 618.106 317.118 618.106 317.67 cv
f
621.346 317.67 mo
621.346 318.222 620.897 318.67 620.346 318.67 cv
619.793 318.67 619.346 318.222 619.346 317.67 cv
619.346 317.118 619.793 316.67 620.346 316.67 cv
620.897 316.67 621.346 317.118 621.346 317.67 cv
f
624.106 317.67 mo
624.106 318.222 623.657 318.67 623.106 318.67 cv
622.553 318.67 622.106 318.222 622.106 317.67 cv
622.106 317.118 622.553 316.67 623.106 316.67 cv
623.657 316.67 624.106 317.118 624.106 317.67 cv
f
627.465 317.67 mo
627.465 318.222 627.018 318.67 626.465 318.67 cv
625.913 318.67 625.465 318.222 625.465 317.67 cv
625.465 317.118 625.913 316.67 626.465 316.67 cv
627.018 316.67 627.465 317.118 627.465 317.67 cv
f
630.946 317.67 mo
630.946 318.222 630.497 318.67 629.946 318.67 cv
629.393 318.67 628.946 318.222 628.946 317.67 cv
628.946 317.118 629.393 316.67 629.946 316.67 cv
630.497 316.67 630.946 317.118 630.946 317.67 cv
f
634.305 317.67 mo
634.305 318.222 633.858 318.67 633.305 318.67 cv
632.754 318.67 632.305 318.222 632.305 317.67 cv
632.305 317.118 632.754 316.67 633.305 316.67 cv
633.858 316.67 634.305 317.118 634.305 317.67 cv
f
637.426 317.67 mo
637.426 318.222 636.977 318.67 636.426 318.67 cv
635.874 318.67 635.426 318.222 635.426 317.67 cv
635.426 317.118 635.874 316.67 636.426 316.67 cv
636.977 316.67 637.426 317.118 637.426 317.67 cv
f
639.946 317.67 mo
639.946 318.222 639.497 318.67 638.946 318.67 cv
638.393 318.67 637.946 318.222 637.946 317.67 cv
637.946 317.118 638.393 316.67 638.946 316.67 cv
639.497 316.67 639.946 317.118 639.946 317.67 cv
f
642.706 317.67 mo
642.706 318.222 642.258 318.67 641.706 318.67 cv
641.153 318.67 640.706 318.222 640.706 317.67 cv
640.706 317.118 641.153 316.67 641.706 316.67 cv
642.258 316.67 642.706 317.118 642.706 317.67 cv
f
646.186 317.67 mo
646.186 318.222 645.737 318.67 645.186 318.67 cv
644.633 318.67 644.186 318.222 644.186 317.67 cv
644.186 317.118 644.633 316.67 645.186 316.67 cv
645.737 316.67 646.186 317.118 646.186 317.67 cv
f
649.305 317.67 mo
649.305 318.222 648.858 318.67 648.305 318.67 cv
647.754 318.67 647.305 318.222 647.305 317.67 cv
647.305 317.118 647.754 316.67 648.305 316.67 cv
648.858 316.67 649.305 317.118 649.305 317.67 cv
f
652.065 317.67 mo
652.065 318.222 651.618 318.67 651.065 318.67 cv
650.514 318.67 650.065 318.222 650.065 317.67 cv
650.065 317.118 650.514 316.67 651.065 316.67 cv
651.618 316.67 652.065 317.118 652.065 317.67 cv
f
655.065 317.67 mo
655.065 318.222 654.618 318.67 654.065 318.67 cv
653.514 318.67 653.065 318.222 653.065 317.67 cv
653.065 317.118 653.514 316.67 654.065 316.67 cv
654.618 316.67 655.065 317.118 655.065 317.67 cv
f
657.825 317.67 mo
657.825 318.222 657.377 318.67 656.825 318.67 cv
656.274 318.67 655.825 318.222 655.825 317.67 cv
655.825 317.118 656.274 316.67 656.825 316.67 cv
657.377 316.67 657.825 317.118 657.825 317.67 cv
f
660.825 317.67 mo
660.825 318.222 660.377 318.67 659.825 318.67 cv
659.274 318.67 658.825 318.222 658.825 317.67 cv
658.825 317.118 659.274 316.67 659.825 316.67 cv
660.377 316.67 660.825 317.118 660.825 317.67 cv
f
663.946 317.67 mo
663.946 318.222 663.497 318.67 662.946 318.67 cv
662.393 318.67 661.946 318.222 661.946 317.67 cv
661.946 317.118 662.393 316.67 662.946 316.67 cv
663.497 316.67 663.946 317.118 663.946 317.67 cv
f
667.305 317.67 mo
667.305 318.222 666.858 318.67 666.305 318.67 cv
665.754 318.67 665.305 318.222 665.305 317.67 cv
665.305 317.118 665.754 316.67 666.305 316.67 cv
666.858 316.67 667.305 317.118 667.305 317.67 cv
f
670.426 317.67 mo
670.426 318.222 669.977 318.67 669.426 318.67 cv
668.874 318.67 668.426 318.222 668.426 317.67 cv
668.426 317.118 668.874 316.67 669.426 316.67 cv
669.977 316.67 670.426 317.118 670.426 317.67 cv
f
673.305 317.67 mo
673.305 318.222 672.858 318.67 672.305 318.67 cv
671.754 318.67 671.305 318.222 671.305 317.67 cv
671.305 317.118 671.754 316.67 672.305 316.67 cv
672.858 316.67 673.305 317.118 673.305 317.67 cv
f
676.065 317.67 mo
676.065 318.222 675.618 318.67 675.065 318.67 cv
674.514 318.67 674.065 318.222 674.065 317.67 cv
674.065 317.118 674.514 316.67 675.065 316.67 cv
675.618 316.67 676.065 317.118 676.065 317.67 cv
f
679.426 317.67 mo
679.426 318.222 678.977 318.67 678.426 318.67 cv
677.874 318.67 677.426 318.222 677.426 317.67 cv
677.426 317.118 677.874 316.67 678.426 316.67 cv
678.977 316.67 679.426 317.118 679.426 317.67 cv
f
682.186 317.67 mo
682.186 318.222 681.737 318.67 681.186 318.67 cv
680.633 318.67 680.186 318.222 680.186 317.67 cv
680.186 317.118 680.633 316.67 681.186 316.67 cv
681.737 316.67 682.186 317.118 682.186 317.67 cv
f
685.545 317.67 mo
685.545 318.222 685.098 318.67 684.545 318.67 cv
683.993 318.67 683.545 318.222 683.545 317.67 cv
683.545 317.118 683.993 316.67 684.545 316.67 cv
685.098 316.67 685.545 317.118 685.545 317.67 cv
f
688.665 317.67 mo
688.665 318.222 688.217 318.67 687.665 318.67 cv
687.114 318.67 686.665 318.222 686.665 317.67 cv
686.665 317.118 687.114 316.67 687.665 316.67 cv
688.217 316.67 688.665 317.118 688.665 317.67 cv
f
89.9854 277.59 mo
89.9854 278.142 89.5376 278.59 88.9854 278.59 cv
88.4336 278.59 87.9854 278.142 87.9854 277.59 cv
87.9854 277.038 88.4336 276.59 88.9854 276.59 cv
89.5376 276.59 89.9854 277.038 89.9854 277.59 cv
0 0 0 1 cmyk
f
93.1055 277.59 mo
93.1055 278.142 92.6572 278.59 92.1055 278.59 cv
91.5532 278.59 91.1055 278.142 91.1055 277.59 cv
91.1055 277.038 91.5532 276.59 92.1055 276.59 cv
92.6572 276.59 93.1055 277.038 93.1055 277.59 cv
f
95.8652 277.59 mo
95.8652 278.142 95.4175 278.59 94.8652 278.59 cv
94.3135 278.59 93.8652 278.142 93.8652 277.59 cv
93.8652 277.038 94.3135 276.59 94.8652 276.59 cv
95.4175 276.59 95.8652 277.038 95.8652 277.59 cv
f
98.0254 277.59 mo
98.0254 278.142 97.5776 278.59 97.0254 278.59 cv
96.4736 278.59 96.0254 278.142 96.0254 277.59 cv
96.0254 277.038 96.4736 276.59 97.0254 276.59 cv
97.5776 276.59 98.0254 277.038 98.0254 277.59 cv
f
98.9854 277.59 mo
98.9854 278.142 98.5376 278.59 97.9854 278.59 cv
97.4336 278.59 96.9854 278.142 96.9854 277.59 cv
96.9854 277.038 97.4336 276.59 97.9854 276.59 cv
98.5376 276.59 98.9854 277.038 98.9854 277.59 cv
f
101.146 277.59 mo
101.146 278.142 100.697 278.59 100.146 278.59 cv
99.5933 278.59 99.1455 278.142 99.1455 277.59 cv
99.1455 277.038 99.5933 276.59 100.146 276.59 cv
100.697 276.59 101.146 277.038 101.146 277.59 cv
f
104.385 277.59 mo
104.385 278.142 103.938 278.59 103.385 278.59 cv
102.833 278.59 102.385 278.142 102.385 277.59 cv
102.385 277.038 102.833 276.59 103.385 276.59 cv
103.938 276.59 104.385 277.038 104.385 277.59 cv
f
108.825 277.59 mo
108.825 278.142 108.377 278.59 107.825 278.59 cv
107.273 278.59 106.826 278.142 106.826 277.59 cv
106.826 277.038 107.273 276.59 107.825 276.59 cv
108.377 276.59 108.825 277.038 108.825 277.59 cv
f
111.585 277.59 mo
111.585 278.142 111.138 278.59 110.585 278.59 cv
110.033 278.59 109.585 278.142 109.585 277.59 cv
109.585 277.038 110.033 276.59 110.585 276.59 cv
111.138 276.59 111.585 277.038 111.585 277.59 cv
f
116.625 277.59 mo
116.625 278.142 116.177 278.59 115.625 278.59 cv
115.073 278.59 114.625 278.142 114.625 277.59 cv
114.625 277.038 115.073 276.59 115.625 276.59 cv
116.177 276.59 116.625 277.038 116.625 277.59 cv
f
119.865 277.59 mo
119.865 278.142 119.417 278.59 118.865 278.59 cv
118.313 278.59 117.865 278.142 117.865 277.59 cv
117.865 277.038 118.313 276.59 118.865 276.59 cv
119.417 276.59 119.865 277.038 119.865 277.59 cv
f
123.706 277.59 mo
123.706 278.142 123.257 278.59 122.706 278.59 cv
122.153 278.59 121.706 278.142 121.706 277.59 cv
121.706 277.038 122.153 276.59 122.706 276.59 cv
123.257 276.59 123.706 277.038 123.706 277.59 cv
f
127.065 277.59 mo
127.065 278.142 126.618 278.59 126.065 278.59 cv
125.514 278.59 125.065 278.142 125.065 277.59 cv
125.065 277.038 125.514 276.59 126.065 276.59 cv
126.618 276.59 127.065 277.038 127.065 277.59 cv
f
131.985 277.59 mo
131.985 278.142 131.538 278.59 130.985 278.59 cv
130.434 278.59 129.985 278.142 129.985 277.59 cv
129.985 277.038 130.434 276.59 130.985 276.59 cv
131.538 276.59 131.985 277.038 131.985 277.59 cv
f
135.346 277.59 mo
135.346 278.142 134.897 278.59 134.346 278.59 cv
133.793 278.59 133.346 278.142 133.346 277.59 cv
133.346 277.038 133.793 276.59 134.346 276.59 cv
134.897 276.59 135.346 277.038 135.346 277.59 cv
f
138.585 277.59 mo
138.585 278.142 138.138 278.59 137.585 278.59 cv
137.033 278.59 136.585 278.142 136.585 277.59 cv
136.585 277.038 137.033 276.59 137.585 276.59 cv
138.138 276.59 138.585 277.038 138.585 277.59 cv
f
140.865 277.59 mo
140.865 278.142 140.417 278.59 139.865 278.59 cv
139.313 278.59 138.865 278.142 138.865 277.59 cv
138.865 277.038 139.313 276.59 139.865 276.59 cv
140.417 276.59 140.865 277.038 140.865 277.59 cv
f
144.105 277.59 mo
144.105 278.142 143.657 278.59 143.105 278.59 cv
142.553 278.59 142.105 278.142 142.105 277.59 cv
142.105 277.038 142.553 276.59 143.105 276.59 cv
143.657 276.59 144.105 277.038 144.105 277.59 cv
f
146.985 277.59 mo
146.985 278.142 146.538 278.59 145.985 278.59 cv
145.434 278.59 144.985 278.142 144.985 277.59 cv
144.985 277.038 145.434 276.59 145.985 276.59 cv
146.538 276.59 146.985 277.038 146.985 277.59 cv
f
151.306 277.59 mo
151.306 278.142 150.857 278.59 150.306 278.59 cv
149.753 278.59 149.306 278.142 149.306 277.59 cv
149.306 277.038 149.753 276.59 150.306 276.59 cv
150.857 276.59 151.306 277.038 151.306 277.59 cv
f
156.226 277.59 mo
156.226 278.142 155.777 278.59 155.226 278.59 cv
154.673 278.59 154.226 278.142 154.226 277.59 cv
154.226 277.038 154.673 276.59 155.226 276.59 cv
155.777 276.59 156.226 277.038 156.226 277.59 cv
f
160.186 277.59 mo
160.186 278.142 159.737 278.59 159.186 278.59 cv
158.633 278.59 158.186 278.142 158.186 277.59 cv
158.186 277.038 158.633 276.59 159.186 276.59 cv
159.737 276.59 160.186 277.038 160.186 277.59 cv
f
163.425 277.59 mo
163.425 278.142 162.978 278.59 162.425 278.59 cv
161.874 278.59 161.425 278.142 161.425 277.59 cv
161.425 277.038 161.874 276.59 162.425 276.59 cv
162.978 276.59 163.425 277.038 163.425 277.59 cv
f
167.385 277.59 mo
167.385 278.142 166.938 278.59 166.385 278.59 cv
165.833 278.59 165.385 278.142 165.385 277.59 cv
165.385 277.038 165.833 276.59 166.385 276.59 cv
166.938 276.59 167.385 277.038 167.385 277.59 cv
f
170.625 277.59 mo
170.625 278.142 170.177 278.59 169.625 278.59 cv
169.073 278.59 168.625 278.142 168.625 277.59 cv
168.625 277.038 169.073 276.59 169.625 276.59 cv
170.177 276.59 170.625 277.038 170.625 277.59 cv
f
172.905 277.59 mo
172.905 278.142 172.458 278.59 171.905 278.59 cv
171.354 278.59 170.905 278.142 170.905 277.59 cv
170.905 277.038 171.354 276.59 171.905 276.59 cv
172.458 276.59 172.905 277.038 172.905 277.59 cv
f
176.746 277.59 mo
176.746 278.142 176.297 278.59 175.746 278.59 cv
175.193 278.59 174.746 278.142 174.746 277.59 cv
174.746 277.038 175.193 276.59 175.746 276.59 cv
176.297 276.59 176.746 277.038 176.746 277.59 cv
f
178.905 277.59 mo
178.905 278.142 178.458 278.59 177.905 278.59 cv
177.354 278.59 176.905 278.142 176.905 277.59 cv
176.905 277.038 177.354 276.59 177.905 276.59 cv
178.458 276.59 178.905 277.038 178.905 277.59 cv
f
181.425 277.59 mo
181.425 278.142 180.978 278.59 180.425 278.59 cv
179.874 278.59 179.425 278.142 179.425 277.59 cv
179.425 277.038 179.874 276.59 180.425 276.59 cv
180.978 276.59 181.425 277.038 181.425 277.59 cv
f
184.186 277.59 mo
184.186 278.142 183.737 278.59 183.186 278.59 cv
182.633 278.59 182.186 278.142 182.186 277.59 cv
182.186 277.038 182.633 276.59 183.186 276.59 cv
183.737 276.59 184.186 277.038 184.186 277.59 cv
f
187.306 277.59 mo
187.306 278.142 186.857 278.59 186.306 278.59 cv
185.753 278.59 185.306 278.142 185.306 277.59 cv
185.306 277.038 185.753 276.59 186.306 276.59 cv
186.857 276.59 187.306 277.038 187.306 277.59 cv
f
189.706 277.59 mo
189.706 278.142 189.257 278.59 188.706 278.59 cv
188.153 278.59 187.706 278.142 187.706 277.59 cv
187.706 277.038 188.153 276.59 188.706 276.59 cv
189.257 276.59 189.706 277.038 189.706 277.59 cv
f
192.945 277.59 mo
192.945 278.142 192.498 278.59 191.945 278.59 cv
191.394 278.59 190.945 278.142 190.945 277.59 cv
190.945 277.038 191.394 276.59 191.945 276.59 cv
192.498 276.59 192.945 277.038 192.945 277.59 cv
f
195.105 277.59 mo
195.105 278.142 194.657 278.59 194.105 278.59 cv
193.553 278.59 193.105 278.142 193.105 277.59 cv
193.105 277.038 193.553 276.59 194.105 276.59 cv
194.657 276.59 195.105 277.038 195.105 277.59 cv
f
197.865 277.59 mo
197.865 278.142 197.417 278.59 196.865 278.59 cv
196.313 278.59 195.865 278.142 195.865 277.59 cv
195.865 277.038 196.313 276.59 196.865 276.59 cv
197.417 276.59 197.865 277.038 197.865 277.59 cv
f
202.186 277.59 mo
202.186 278.142 201.737 278.59 201.186 278.59 cv
200.633 278.59 200.186 278.142 200.186 277.59 cv
200.186 277.038 200.633 276.59 201.186 276.59 cv
201.737 276.59 202.186 277.038 202.186 277.59 cv
f
204.346 277.59 mo
204.346 278.142 203.897 278.59 203.346 278.59 cv
202.793 278.59 202.346 278.142 202.346 277.59 cv
202.346 277.038 202.793 276.59 203.346 276.59 cv
203.897 276.59 204.346 277.038 204.346 277.59 cv
f
208.425 277.59 mo
208.425 278.142 207.978 278.59 207.425 278.59 cv
206.874 278.59 206.425 278.142 206.425 277.59 cv
206.425 277.038 206.874 276.59 207.425 276.59 cv
207.978 276.59 208.425 277.038 208.425 277.59 cv
f
211.786 277.59 mo
211.786 278.142 211.337 278.59 210.786 278.59 cv
210.233 278.59 209.786 278.142 209.786 277.59 cv
209.786 277.038 210.233 276.59 210.786 276.59 cv
211.337 276.59 211.786 277.038 211.786 277.59 cv
f
213.346 277.59 mo
213.346 278.142 212.897 278.59 212.346 278.59 cv
211.793 278.59 211.346 278.142 211.346 277.59 cv
211.346 277.038 211.793 276.59 212.346 276.59 cv
212.897 276.59 213.346 277.038 213.346 277.59 cv
f
216.105 277.59 mo
216.105 278.142 215.657 278.59 215.105 278.59 cv
214.553 278.59 214.105 278.142 214.105 277.59 cv
214.105 277.038 214.553 276.59 215.105 276.59 cv
215.657 276.59 216.105 277.038 216.105 277.59 cv
f
219.585 277.59 mo
219.585 278.142 219.138 278.59 218.585 278.59 cv
218.033 278.59 217.585 278.142 217.585 277.59 cv
217.585 277.038 218.033 276.59 218.585 276.59 cv
219.138 276.59 219.585 277.038 219.585 277.59 cv
f
223.065 277.59 mo
223.065 278.142 222.618 278.59 222.065 278.59 cv
221.514 278.59 221.065 278.142 221.065 277.59 cv
221.065 277.038 221.514 276.59 222.065 276.59 cv
222.618 276.59 223.065 277.038 223.065 277.59 cv
f
224.985 277.59 mo
224.985 278.142 224.538 278.59 223.985 278.59 cv
223.434 278.59 222.985 278.142 222.985 277.59 cv
222.985 277.038 223.434 276.59 223.985 276.59 cv
224.538 276.59 224.985 277.038 224.985 277.59 cv
f
228.105 277.59 mo
228.105 278.142 227.657 278.59 227.105 278.59 cv
226.553 278.59 226.105 278.142 226.105 277.59 cv
226.105 277.038 226.553 276.59 227.105 276.59 cv
227.657 276.59 228.105 277.038 228.105 277.59 cv
f
231.465 277.59 mo
231.465 278.142 231.018 278.59 230.465 278.59 cv
229.914 278.59 229.465 278.142 229.465 277.59 cv
229.465 277.038 229.914 276.59 230.465 276.59 cv
231.018 276.59 231.465 277.038 231.465 277.59 cv
f
234.945 277.59 mo
234.945 278.142 234.498 278.59 233.945 278.59 cv
233.394 278.59 232.945 278.142 232.945 277.59 cv
232.945 277.038 233.394 276.59 233.945 276.59 cv
234.498 276.59 234.945 277.038 234.945 277.59 cv
f
237.465 277.59 mo
237.465 278.142 237.018 278.59 236.465 278.59 cv
235.914 278.59 235.465 278.142 235.465 277.59 cv
235.465 277.038 235.914 276.59 236.465 276.59 cv
237.018 276.59 237.465 277.038 237.465 277.59 cv
f
239.865 277.59 mo
239.865 278.142 239.417 278.59 238.865 278.59 cv
238.313 278.59 237.865 278.142 237.865 277.59 cv
237.865 277.038 238.313 276.59 238.865 276.59 cv
239.417 276.59 239.865 277.038 239.865 277.59 cv
f
243.346 277.59 mo
243.346 278.142 242.897 278.59 242.346 278.59 cv
241.793 278.59 241.346 278.142 241.346 277.59 cv
241.346 277.038 241.793 276.59 242.346 276.59 cv
242.897 276.59 243.346 277.038 243.346 277.59 cv
f
246.706 277.59 mo
246.706 278.142 246.257 278.59 245.706 278.59 cv
245.153 278.59 244.706 278.142 244.706 277.59 cv
244.706 277.038 245.153 276.59 245.706 276.59 cv
246.257 276.59 246.706 277.038 246.706 277.59 cv
f
249.826 277.59 mo
249.826 278.142 249.377 278.59 248.826 278.59 cv
248.273 278.59 247.826 278.142 247.826 277.59 cv
247.826 277.038 248.273 276.59 248.826 276.59 cv
249.377 276.59 249.826 277.038 249.826 277.59 cv
f
252.945 277.59 mo
252.945 278.142 252.498 278.59 251.945 278.59 cv
251.394 278.59 250.945 278.142 250.945 277.59 cv
250.945 277.038 251.394 276.59 251.945 276.59 cv
252.498 276.59 252.945 277.038 252.945 277.59 cv
f
255.465 277.59 mo
255.465 278.142 255.018 278.59 254.465 278.59 cv
253.914 278.59 253.465 278.142 253.465 277.59 cv
253.465 277.038 253.914 276.59 254.465 276.59 cv
255.018 276.59 255.465 277.038 255.465 277.59 cv
f
257.266 277.59 mo
257.266 278.142 256.817 278.59 256.266 278.59 cv
255.713 278.59 255.266 278.142 255.266 277.59 cv
255.266 277.038 255.713 276.59 256.266 276.59 cv
256.817 276.59 257.266 277.038 257.266 277.59 cv
f
262.186 277.59 mo
262.186 278.142 261.737 278.59 261.186 278.59 cv
260.633 278.59 260.186 278.142 260.186 277.59 cv
260.186 277.038 260.633 276.59 261.186 276.59 cv
261.737 276.59 262.186 277.038 262.186 277.59 cv
f
263.746 277.59 mo
263.746 278.142 263.297 278.59 262.746 278.59 cv
262.193 278.59 261.746 278.142 261.746 277.59 cv
261.746 277.038 262.193 276.59 262.746 276.59 cv
263.297 276.59 263.746 277.038 263.746 277.59 cv
f
267.465 277.59 mo
267.465 278.142 267.018 278.59 266.465 278.59 cv
265.914 278.59 265.465 278.142 265.465 277.59 cv
265.465 277.038 265.914 276.59 266.465 276.59 cv
267.018 276.59 267.465 277.038 267.465 277.59 cv
f
270.585 277.59 mo
270.585 278.142 270.138 278.59 269.585 278.59 cv
269.034 278.59 268.585 278.142 268.585 277.59 cv
268.585 277.038 269.034 276.59 269.585 276.59 cv
270.138 276.59 270.585 277.038 270.585 277.59 cv
f
273.105 277.59 mo
273.105 278.142 272.657 278.59 272.105 278.59 cv
271.554 278.59 271.105 278.142 271.105 277.59 cv
271.105 277.038 271.554 276.59 272.105 276.59 cv
272.657 276.59 273.105 277.038 273.105 277.59 cv
f
275.865 277.59 mo
275.865 278.142 275.417 278.59 274.865 278.59 cv
274.313 278.59 273.865 278.142 273.865 277.59 cv
273.865 277.038 274.313 276.59 274.865 276.59 cv
275.417 276.59 275.865 277.038 275.865 277.59 cv
f
278.266 277.59 mo
278.266 278.142 277.817 278.59 277.266 278.59 cv
276.713 278.59 276.266 278.142 276.266 277.59 cv
276.266 277.038 276.713 276.59 277.266 276.59 cv
277.817 276.59 278.266 277.038 278.266 277.59 cv
f
281.146 277.59 mo
281.146 278.142 280.697 278.59 280.146 278.59 cv
279.593 278.59 279.146 278.142 279.146 277.59 cv
279.146 277.038 279.593 276.59 280.146 276.59 cv
280.697 276.59 281.146 277.038 281.146 277.59 cv
f
283.666 277.59 mo
283.666 278.142 283.217 278.59 282.666 278.59 cv
282.113 278.59 281.666 278.142 281.666 277.59 cv
281.666 277.038 282.113 276.59 282.666 276.59 cv
283.217 276.59 283.666 277.038 283.666 277.59 cv
f
285.465 277.59 mo
285.465 278.142 285.018 278.59 284.465 278.59 cv
283.914 278.59 283.465 278.142 283.465 277.59 cv
283.465 277.038 283.914 276.59 284.465 276.59 cv
285.018 276.59 285.465 277.038 285.465 277.59 cv
f
287.985 277.59 mo
287.985 278.142 287.538 278.59 286.985 278.59 cv
286.434 278.59 285.985 278.142 285.985 277.59 cv
285.985 277.038 286.434 276.59 286.985 276.59 cv
287.538 276.59 287.985 277.038 287.985 277.59 cv
f
291.706 277.59 mo
291.706 278.142 291.257 278.59 290.706 278.59 cv
290.153 278.59 289.706 278.142 289.706 277.59 cv
289.706 277.038 290.153 276.59 290.706 276.59 cv
291.257 276.59 291.706 277.038 291.706 277.59 cv
f
293.865 277.59 mo
293.865 278.142 293.417 278.59 292.865 278.59 cv
292.313 278.59 291.865 278.142 291.865 277.59 cv
291.865 277.038 292.313 276.59 292.865 276.59 cv
293.417 276.59 293.865 277.038 293.865 277.59 cv
f
297.945 277.59 mo
297.945 278.142 297.498 278.59 296.945 278.59 cv
296.394 278.59 295.945 278.142 295.945 277.59 cv
295.945 277.038 296.394 276.59 296.945 276.59 cv
297.498 276.59 297.945 277.038 297.945 277.59 cv
f
299.746 277.59 mo
299.746 278.142 299.297 278.59 298.746 278.59 cv
298.193 278.59 297.746 278.142 297.746 277.59 cv
297.746 277.038 298.193 276.59 298.746 276.59 cv
299.297 276.59 299.746 277.038 299.746 277.59 cv
f
303.465 277.59 mo
303.465 278.142 303.018 278.59 302.465 278.59 cv
301.914 278.59 301.465 278.142 301.465 277.59 cv
301.465 277.038 301.914 276.59 302.465 276.59 cv
303.018 276.59 303.465 277.038 303.465 277.59 cv
f
307.306 277.59 mo
307.306 278.142 306.857 278.59 306.306 278.59 cv
305.753 278.59 305.306 278.142 305.306 277.59 cv
305.306 277.038 305.753 276.59 306.306 276.59 cv
306.857 276.59 307.306 277.038 307.306 277.59 cv
f
311.266 277.59 mo
311.266 278.142 310.817 278.59 310.266 278.59 cv
309.713 278.59 309.266 278.142 309.266 277.59 cv
309.266 277.038 309.713 276.59 310.266 276.59 cv
310.817 276.59 311.266 277.038 311.266 277.59 cv
f
314.746 277.59 mo
314.746 278.142 314.297 278.59 313.746 278.59 cv
313.193 278.59 312.746 278.142 312.746 277.59 cv
312.746 277.038 313.193 276.59 313.746 276.59 cv
314.297 276.59 314.746 277.038 314.746 277.59 cv
f
317.746 277.59 mo
317.746 278.142 317.297 278.59 316.746 278.59 cv
316.193 278.59 315.746 278.142 315.746 277.59 cv
315.746 277.038 316.193 276.59 316.746 276.59 cv
317.297 276.59 317.746 277.038 317.746 277.59 cv
f
319.306 277.59 mo
319.306 278.142 318.857 278.59 318.306 278.59 cv
317.753 278.59 317.306 278.142 317.306 277.59 cv
317.306 277.038 317.753 276.59 318.306 276.59 cv
318.857 276.59 319.306 277.038 319.306 277.59 cv
f
322.425 277.59 mo
322.425 278.142 321.978 278.59 321.425 278.59 cv
320.874 278.59 320.425 278.142 320.425 277.59 cv
320.425 277.038 320.874 276.59 321.425 276.59 cv
321.978 276.59 322.425 277.038 322.425 277.59 cv
f
326.146 277.59 mo
326.146 278.142 325.697 278.59 325.146 278.59 cv
324.593 278.59 324.146 278.142 324.146 277.59 cv
324.146 277.038 324.593 276.59 325.146 276.59 cv
325.697 276.59 326.146 277.038 326.146 277.59 cv
f
328.666 277.59 mo
328.666 278.142 328.217 278.59 327.666 278.59 cv
327.113 278.59 326.666 278.142 326.666 277.59 cv
326.666 277.038 327.113 276.59 327.666 276.59 cv
328.217 276.59 328.666 277.038 328.666 277.59 cv
f
331.786 277.59 mo
331.786 278.142 331.337 278.59 330.786 278.59 cv
330.233 278.59 329.786 278.142 329.786 277.59 cv
329.786 277.038 330.233 276.59 330.786 276.59 cv
331.337 276.59 331.786 277.038 331.786 277.59 cv
f
333.585 277.59 mo
333.585 278.142 333.138 278.59 332.585 278.59 cv
332.033 278.59 331.585 278.142 331.585 277.59 cv
331.585 277.038 332.033 276.59 332.585 276.59 cv
333.138 276.59 333.585 277.038 333.585 277.59 cv
f
336.105 277.59 mo
336.105 278.142 335.657 278.59 335.105 278.59 cv
334.554 278.59 334.105 278.142 334.105 277.59 cv
334.105 277.038 334.554 276.59 335.105 276.59 cv
335.657 276.59 336.105 277.038 336.105 277.59 cv
f
338.865 277.59 mo
338.865 278.142 338.417 278.59 337.865 278.59 cv
337.313 278.59 336.865 278.142 336.865 277.59 cv
336.865 277.038 337.313 276.59 337.865 276.59 cv
338.417 276.59 338.865 277.038 338.865 277.59 cv
f
341.385 277.59 mo
341.385 278.142 340.938 278.59 340.385 278.59 cv
339.833 278.59 339.385 278.142 339.385 277.59 cv
339.385 277.038 339.833 276.59 340.385 276.59 cv
340.938 276.59 341.385 277.038 341.385 277.59 cv
f
344.025 277.59 mo
344.025 278.142 343.578 278.59 343.025 278.59 cv
342.474 278.59 342.025 278.142 342.025 277.59 cv
342.025 277.038 342.474 276.59 343.025 276.59 cv
343.578 276.59 344.025 277.038 344.025 277.59 cv
f
346.186 277.59 mo
346.186 278.142 345.737 278.59 345.186 278.59 cv
344.633 278.59 344.186 278.142 344.186 277.59 cv
344.186 277.038 344.633 276.59 345.186 276.59 cv
345.737 276.59 346.186 277.038 346.186 277.59 cv
f
349.065 277.59 mo
349.065 278.142 348.618 278.59 348.065 278.59 cv
347.514 278.59 347.065 278.142 347.065 277.59 cv
347.065 277.038 347.514 276.59 348.065 276.59 cv
348.618 276.59 349.065 277.038 349.065 277.59 cv
f
351.585 277.59 mo
351.585 278.142 351.138 278.59 350.585 278.59 cv
350.033 278.59 349.585 278.142 349.585 277.59 cv
349.585 277.038 350.033 276.59 350.585 276.59 cv
351.138 276.59 351.585 277.038 351.585 277.59 cv
f
354.105 277.59 mo
354.105 278.142 353.657 278.59 353.105 278.59 cv
352.554 278.59 352.105 278.142 352.105 277.59 cv
352.105 277.038 352.554 276.59 353.105 276.59 cv
353.657 276.59 354.105 277.038 354.105 277.59 cv
f
357.465 277.59 mo
357.465 278.142 357.018 278.59 356.465 278.59 cv
355.914 278.59 355.465 278.142 355.465 277.59 cv
355.465 277.038 355.914 276.59 356.465 276.59 cv
357.018 276.59 357.465 277.038 357.465 277.59 cv
f
360.585 277.59 mo
360.585 278.142 360.138 278.59 359.585 278.59 cv
359.033 278.59 358.585 278.142 358.585 277.59 cv
358.585 277.038 359.033 276.59 359.585 276.59 cv
360.138 276.59 360.585 277.038 360.585 277.59 cv
f
364.186 277.59 mo
364.186 278.142 363.737 278.59 363.186 278.59 cv
362.633 278.59 362.186 278.142 362.186 277.59 cv
362.186 277.038 362.633 276.59 363.186 276.59 cv
363.737 276.59 364.186 277.038 364.186 277.59 cv
f
367.665 277.59 mo
367.665 278.142 367.217 278.59 366.665 278.59 cv
366.114 278.59 365.665 278.142 365.665 277.59 cv
365.665 277.038 366.114 276.59 366.665 276.59 cv
367.217 276.59 367.665 277.038 367.665 277.59 cv
f
371.745 277.59 mo
371.745 278.142 371.297 278.59 370.745 278.59 cv
370.194 278.59 369.745 278.142 369.745 277.59 cv
369.745 277.038 370.194 276.59 370.745 276.59 cv
371.297 276.59 371.745 277.038 371.745 277.59 cv
f
373.305 277.59 mo
373.305 278.142 372.858 278.59 372.305 278.59 cv
371.754 278.59 371.305 278.142 371.305 277.59 cv
371.305 277.038 371.754 276.59 372.305 276.59 cv
372.858 276.59 373.305 277.038 373.305 277.59 cv
f
375.706 277.59 mo
375.706 278.142 375.258 278.59 374.706 278.59 cv
374.153 278.59 373.706 278.142 373.706 277.59 cv
373.706 277.038 374.153 276.59 374.706 276.59 cv
375.258 276.59 375.706 277.038 375.706 277.59 cv
f
378.225 277.59 mo
378.225 278.142 377.778 278.59 377.225 278.59 cv
376.674 278.59 376.225 278.142 376.225 277.59 cv
376.225 277.038 376.674 276.59 377.225 276.59 cv
377.778 276.59 378.225 277.038 378.225 277.59 cv
f
380.985 277.59 mo
380.985 278.142 380.538 278.59 379.985 278.59 cv
379.434 278.59 378.985 278.142 378.985 277.59 cv
378.985 277.038 379.434 276.59 379.985 276.59 cv
380.538 276.59 380.985 277.038 380.985 277.59 cv
f
384.106 277.59 mo
384.106 278.142 383.657 278.59 383.106 278.59 cv
382.553 278.59 382.106 278.142 382.106 277.59 cv
382.106 277.038 382.553 276.59 383.106 276.59 cv
383.657 276.59 384.106 277.038 384.106 277.59 cv
f
387.825 277.59 mo
387.825 278.142 387.377 278.59 386.825 278.59 cv
386.274 278.59 385.825 278.142 385.825 277.59 cv
385.825 277.038 386.274 276.59 386.825 276.59 cv
387.377 276.59 387.825 277.038 387.825 277.59 cv
f
390.346 277.59 mo
390.346 278.142 389.897 278.59 389.346 278.59 cv
388.793 278.59 388.346 278.142 388.346 277.59 cv
388.346 277.038 388.793 276.59 389.346 276.59 cv
389.897 276.59 390.346 277.038 390.346 277.59 cv
f
393.706 277.59 mo
393.706 278.142 393.258 278.59 392.706 278.59 cv
392.153 278.59 391.706 278.142 391.706 277.59 cv
391.706 277.038 392.153 276.59 392.706 276.59 cv
393.258 276.59 393.706 277.038 393.706 277.59 cv
f
396.225 277.59 mo
396.225 278.142 395.778 278.59 395.225 278.59 cv
394.674 278.59 394.225 278.142 394.225 277.59 cv
394.225 277.038 394.674 276.59 395.225 276.59 cv
395.778 276.59 396.225 277.038 396.225 277.59 cv
f
399.346 277.59 mo
399.346 278.142 398.897 278.59 398.346 278.59 cv
397.793 278.59 397.346 278.142 397.346 277.59 cv
397.346 277.038 397.793 276.59 398.346 276.59 cv
398.897 276.59 399.346 277.038 399.346 277.59 cv
f
402.346 277.59 mo
402.346 278.142 401.897 278.59 401.346 278.59 cv
400.793 278.59 400.346 278.142 400.346 277.59 cv
400.346 277.038 400.793 276.59 401.346 276.59 cv
401.897 276.59 402.346 277.038 402.346 277.59 cv
f
405.586 277.59 mo
405.586 278.142 405.137 278.59 404.586 278.59 cv
404.034 278.59 403.586 278.142 403.586 277.59 cv
403.586 277.038 404.034 276.59 404.586 276.59 cv
405.137 276.59 405.586 277.038 405.586 277.59 cv
f
408.346 277.59 mo
408.346 278.142 407.897 278.59 407.346 278.59 cv
406.793 278.59 406.346 278.142 406.346 277.59 cv
406.346 277.038 406.793 276.59 407.346 276.59 cv
407.897 276.59 408.346 277.038 408.346 277.59 cv
f
411.465 277.59 mo
411.465 278.142 411.018 278.59 410.465 278.59 cv
409.913 278.59 409.465 278.142 409.465 277.59 cv
409.465 277.038 409.913 276.59 410.465 276.59 cv
411.018 276.59 411.465 277.038 411.465 277.59 cv
f
413.866 277.59 mo
413.866 278.142 413.418 278.59 412.866 278.59 cv
412.313 278.59 411.866 278.142 411.866 277.59 cv
411.866 277.038 412.313 276.59 412.866 276.59 cv
413.418 276.59 413.866 277.038 413.866 277.59 cv
f
417.346 277.59 mo
417.346 278.142 416.897 278.59 416.346 278.59 cv
415.793 278.59 415.346 278.142 415.346 277.59 cv
415.346 277.038 415.793 276.59 416.346 276.59 cv
416.897 276.59 417.346 277.038 417.346 277.59 cv
f
420.106 277.59 mo
420.106 278.142 419.657 278.59 419.106 278.59 cv
418.553 278.59 418.106 278.142 418.106 277.59 cv
418.106 277.038 418.553 276.59 419.106 276.59 cv
419.657 276.59 420.106 277.038 420.106 277.59 cv
f
423.825 277.59 mo
423.825 278.142 423.377 278.59 422.825 278.59 cv
422.274 278.59 421.825 278.142 421.825 277.59 cv
421.825 277.038 422.274 276.59 422.825 276.59 cv
423.377 276.59 423.825 277.038 423.825 277.59 cv
f
426.706 277.59 mo
426.706 278.142 426.258 278.59 425.706 278.59 cv
425.153 278.59 424.706 278.142 424.706 277.59 cv
424.706 277.038 425.153 276.59 425.706 276.59 cv
426.258 276.59 426.706 277.038 426.706 277.59 cv
f
429.465 277.59 mo
429.465 278.142 429.018 278.59 428.465 278.59 cv
427.913 278.59 427.465 278.142 427.465 277.59 cv
427.465 277.038 427.913 276.59 428.465 276.59 cv
429.018 276.59 429.465 277.038 429.465 277.59 cv
f
432.586 277.59 mo
432.586 278.142 432.137 278.59 431.586 278.59 cv
431.034 278.59 430.586 278.142 430.586 277.59 cv
430.586 277.038 431.034 276.59 431.586 276.59 cv
432.137 276.59 432.586 277.038 432.586 277.59 cv
f
434.385 277.59 mo
434.385 278.142 433.938 278.59 433.385 278.59 cv
432.833 278.59 432.385 278.142 432.385 277.59 cv
432.385 277.038 432.833 276.59 433.385 276.59 cv
433.938 276.59 434.385 277.038 434.385 277.59 cv
f
437.145 277.59 mo
437.145 278.142 436.698 278.59 436.145 278.59 cv
435.594 278.59 435.145 278.142 435.145 277.59 cv
435.145 277.038 435.594 276.59 436.145 276.59 cv
436.698 276.59 437.145 277.038 437.145 277.59 cv
f
440.985 277.59 mo
440.985 278.142 440.538 278.59 439.985 278.59 cv
439.434 278.59 438.985 278.142 438.985 277.59 cv
438.985 277.038 439.434 276.59 439.985 276.59 cv
440.538 276.59 440.985 277.038 440.985 277.59 cv
f
443.866 277.59 mo
443.866 278.142 443.418 278.59 442.866 278.59 cv
442.313 278.59 441.866 278.142 441.866 277.59 cv
441.866 277.038 442.313 276.59 442.866 276.59 cv
443.418 276.59 443.866 277.038 443.866 277.59 cv
f
446.266 277.59 mo
446.266 278.142 445.817 278.59 445.266 278.59 cv
444.713 278.59 444.266 278.142 444.266 277.59 cv
444.266 277.038 444.713 276.59 445.266 276.59 cv
445.817 276.59 446.266 277.038 446.266 277.59 cv
f
449.385 277.59 mo
449.385 278.142 448.938 278.59 448.385 278.59 cv
447.833 278.59 447.385 278.142 447.385 277.59 cv
447.385 277.038 447.833 276.59 448.385 276.59 cv
448.938 276.59 449.385 277.038 449.385 277.59 cv
f
451.545 277.59 mo
451.545 278.142 451.098 278.59 450.545 278.59 cv
449.993 278.59 449.545 278.142 449.545 277.59 cv
449.545 277.038 449.993 276.59 450.545 276.59 cv
451.098 276.59 451.545 277.038 451.545 277.59 cv
f
455.026 277.59 mo
455.026 278.142 454.577 278.59 454.026 278.59 cv
453.473 278.59 453.026 278.142 453.026 277.59 cv
453.026 277.038 453.473 276.59 454.026 276.59 cv
454.577 276.59 455.026 277.038 455.026 277.59 cv
f
458.745 277.59 mo
458.745 278.142 458.297 278.59 457.745 278.59 cv
457.194 278.59 456.745 278.142 456.745 277.59 cv
456.745 277.038 457.194 276.59 457.745 276.59 cv
458.297 276.59 458.745 277.038 458.745 277.59 cv
f
461.866 277.59 mo
461.866 278.142 461.418 278.59 460.866 278.59 cv
460.313 278.59 459.866 278.142 459.866 277.59 cv
459.866 277.038 460.313 276.59 460.866 276.59 cv
461.418 276.59 461.866 277.038 461.866 277.59 cv
f
464.745 277.59 mo
464.745 278.142 464.297 278.59 463.745 278.59 cv
463.194 278.59 462.745 278.142 462.745 277.59 cv
462.745 277.038 463.194 276.59 463.745 276.59 cv
464.297 276.59 464.745 277.038 464.745 277.59 cv
f
467.385 277.59 mo
467.385 278.142 466.938 278.59 466.385 278.59 cv
465.833 278.59 465.385 278.142 465.385 277.59 cv
465.385 277.038 465.833 276.59 466.385 276.59 cv
466.938 276.59 467.385 277.038 467.385 277.59 cv
f
469.905 277.59 mo
469.905 278.142 469.458 278.59 468.905 278.59 cv
468.354 278.59 467.905 278.142 467.905 277.59 cv
467.905 277.038 468.354 276.59 468.905 276.59 cv
469.458 276.59 469.905 277.038 469.905 277.59 cv
f
473.866 277.59 mo
473.866 278.142 473.418 278.59 472.866 278.59 cv
472.313 278.59 471.866 278.142 471.866 277.59 cv
471.866 277.038 472.313 276.59 472.866 276.59 cv
473.418 276.59 473.866 277.038 473.866 277.59 cv
f
477.106 277.59 mo
477.106 278.142 476.657 278.59 476.106 278.59 cv
475.553 278.59 475.106 278.142 475.106 277.59 cv
475.106 277.038 475.553 276.59 476.106 276.59 cv
476.657 276.59 477.106 277.038 477.106 277.59 cv
f
479.866 277.59 mo
479.866 278.142 479.418 278.59 478.866 278.59 cv
478.313 278.59 477.866 278.142 477.866 277.59 cv
477.866 277.038 478.313 276.59 478.866 276.59 cv
479.418 276.59 479.866 277.038 479.866 277.59 cv
f
482.745 277.59 mo
482.745 278.142 482.297 278.59 481.745 278.59 cv
481.194 278.59 480.745 278.142 480.745 277.59 cv
480.745 277.038 481.194 276.59 481.745 276.59 cv
482.297 276.59 482.745 277.038 482.745 277.59 cv
f
485.745 277.59 mo
485.745 278.142 485.297 278.59 484.745 278.59 cv
484.194 278.59 483.745 278.142 483.745 277.59 cv
483.745 277.038 484.194 276.59 484.745 276.59 cv
485.297 276.59 485.745 277.038 485.745 277.59 cv
f
488.506 277.59 mo
488.506 278.142 488.057 278.59 487.506 278.59 cv
486.954 278.59 486.506 278.142 486.506 277.59 cv
486.506 277.038 486.954 276.59 487.506 276.59 cv
488.057 276.59 488.506 277.038 488.506 277.59 cv
f
491.866 277.59 mo
491.866 278.142 491.418 278.59 490.866 278.59 cv
490.313 278.59 489.866 278.142 489.866 277.59 cv
489.866 277.038 490.313 276.59 490.866 276.59 cv
491.418 276.59 491.866 277.038 491.866 277.59 cv
f
494.745 277.59 mo
494.745 278.142 494.297 278.59 493.745 278.59 cv
493.194 278.59 492.745 278.142 492.745 277.59 cv
492.745 277.038 493.194 276.59 493.745 276.59 cv
494.297 276.59 494.745 277.038 494.745 277.59 cv
f
497.866 277.59 mo
497.866 278.142 497.418 278.59 496.866 278.59 cv
496.313 278.59 495.866 278.142 495.866 277.59 cv
495.866 277.038 496.313 276.59 496.866 276.59 cv
497.418 276.59 497.866 277.038 497.866 277.59 cv
f
500.985 277.59 mo
500.985 278.142 500.538 278.59 499.985 278.59 cv
499.434 278.59 498.985 278.142 498.985 277.59 cv
498.985 277.038 499.434 276.59 499.985 276.59 cv
500.538 276.59 500.985 277.038 500.985 277.59 cv
f
503.145 277.59 mo
503.145 278.142 502.698 278.59 502.145 278.59 cv
501.594 278.59 501.145 278.142 501.145 277.59 cv
501.145 277.038 501.594 276.59 502.145 276.59 cv
502.698 276.59 503.145 277.038 503.145 277.59 cv
f
505.305 277.59 mo
505.305 278.142 504.858 278.59 504.305 278.59 cv
503.754 278.59 503.305 278.142 503.305 277.59 cv
503.305 277.038 503.754 276.59 504.305 276.59 cv
504.858 276.59 505.305 277.038 505.305 277.59 cv
f
508.426 277.59 mo
508.426 278.142 507.977 278.59 507.426 278.59 cv
506.874 278.59 506.426 278.142 506.426 277.59 cv
506.426 277.038 506.874 276.59 507.426 276.59 cv
507.977 276.59 508.426 277.038 508.426 277.59 cv
f
510.946 277.59 mo
510.946 278.142 510.497 278.59 509.946 278.59 cv
509.393 278.59 508.946 278.142 508.946 277.59 cv
508.946 277.038 509.393 276.59 509.946 276.59 cv
510.497 276.59 510.946 277.038 510.946 277.59 cv
f
514.305 277.59 mo
514.305 278.142 513.858 278.59 513.305 278.59 cv
512.754 278.59 512.305 278.142 512.305 277.59 cv
512.305 277.038 512.754 276.59 513.305 276.59 cv
513.858 276.59 514.305 277.038 514.305 277.59 cv
f
516.465 277.59 mo
516.465 278.142 516.018 278.59 515.465 278.59 cv
514.913 278.59 514.465 278.142 514.465 277.59 cv
514.465 277.038 514.913 276.59 515.465 276.59 cv
516.018 276.59 516.465 277.038 516.465 277.59 cv
f
519.706 277.59 mo
519.706 278.142 519.258 278.59 518.706 278.59 cv
518.153 278.59 517.706 278.142 517.706 277.59 cv
517.706 277.038 518.153 276.59 518.706 276.59 cv
519.258 276.59 519.706 277.038 519.706 277.59 cv
f
522.106 277.59 mo
522.106 278.142 521.657 278.59 521.106 278.59 cv
520.553 278.59 520.106 278.142 520.106 277.59 cv
520.106 277.038 520.553 276.59 521.106 276.59 cv
521.657 276.59 522.106 277.038 522.106 277.59 cv
f
526.186 277.59 mo
526.186 278.142 525.737 278.59 525.186 278.59 cv
524.633 278.59 524.186 278.142 524.186 277.59 cv
524.186 277.038 524.633 276.59 525.186 276.59 cv
525.737 276.59 526.186 277.038 526.186 277.59 cv
f
528.346 277.59 mo
528.346 278.142 527.897 278.59 527.346 278.59 cv
526.793 278.59 526.346 278.142 526.346 277.59 cv
526.346 277.038 526.793 276.59 527.346 276.59 cv
527.897 276.59 528.346 277.038 528.346 277.59 cv
f
531.106 277.59 mo
531.106 278.142 530.657 278.59 530.106 278.59 cv
529.553 278.59 529.106 278.142 529.106 277.59 cv
529.106 277.038 529.553 276.59 530.106 276.59 cv
530.657 276.59 531.106 277.038 531.106 277.59 cv
f
533.625 277.59 mo
533.625 278.142 533.178 278.59 532.625 278.59 cv
532.073 278.59 531.625 278.142 531.625 277.59 cv
531.625 277.038 532.073 276.59 532.625 276.59 cv
533.178 276.59 533.625 277.038 533.625 277.59 cv
f
536.745 277.59 mo
536.745 278.142 536.297 278.59 535.745 278.59 cv
535.194 278.59 534.745 278.142 534.745 277.59 cv
534.745 277.038 535.194 276.59 535.745 276.59 cv
536.297 276.59 536.745 277.038 536.745 277.59 cv
f
539.145 277.59 mo
539.145 278.142 538.698 278.59 538.145 278.59 cv
537.594 278.59 537.145 278.142 537.145 277.59 cv
537.145 277.038 537.594 276.59 538.145 276.59 cv
538.698 276.59 539.145 277.038 539.145 277.59 cv
f
542.985 277.59 mo
542.985 278.142 542.538 278.59 541.985 278.59 cv
541.434 278.59 540.985 278.142 540.985 277.59 cv
540.985 277.038 541.434 276.59 541.985 276.59 cv
542.538 276.59 542.985 277.038 542.985 277.59 cv
f
545.625 277.59 mo
545.625 278.142 545.178 278.59 544.625 278.59 cv
544.073 278.59 543.625 278.142 543.625 277.59 cv
543.625 277.038 544.073 276.59 544.625 276.59 cv
545.178 276.59 545.625 277.038 545.625 277.59 cv
f
549.465 277.59 mo
549.465 278.142 549.018 278.59 548.465 278.59 cv
547.913 278.59 547.465 278.142 547.465 277.59 cv
547.465 277.038 547.913 276.59 548.465 276.59 cv
549.018 276.59 549.465 277.038 549.465 277.59 cv
f
552.106 277.59 mo
552.106 278.142 551.657 278.59 551.106 278.59 cv
550.553 278.59 550.106 278.142 550.106 277.59 cv
550.106 277.038 550.553 276.59 551.106 276.59 cv
551.657 276.59 552.106 277.038 552.106 277.59 cv
f
554.026 277.59 mo
554.026 278.142 553.577 278.59 553.026 278.59 cv
552.473 278.59 552.026 278.142 552.026 277.59 cv
552.026 277.038 552.473 276.59 553.026 276.59 cv
553.577 276.59 554.026 277.038 554.026 277.59 cv
f
557.506 277.59 mo
557.506 278.142 557.057 278.59 556.506 278.59 cv
555.954 278.59 555.506 278.142 555.506 277.59 cv
555.506 277.038 555.954 276.59 556.506 276.59 cv
557.057 276.59 557.506 277.038 557.506 277.59 cv
f
560.625 277.59 mo
560.625 278.142 560.178 278.59 559.625 278.59 cv
559.073 278.59 558.625 278.142 558.625 277.59 cv
558.625 277.038 559.073 276.59 559.625 276.59 cv
560.178 276.59 560.625 277.038 560.625 277.59 cv
f
562.665 277.59 mo
562.665 278.142 562.217 278.59 561.665 278.59 cv
561.114 278.59 560.665 278.142 560.665 277.59 cv
560.665 277.038 561.114 276.59 561.665 276.59 cv
562.217 276.59 562.665 277.038 562.665 277.59 cv
f
566.026 277.59 mo
566.026 278.142 565.577 278.59 565.026 278.59 cv
564.473 278.59 564.026 278.142 564.026 277.59 cv
564.026 277.038 564.473 276.59 565.026 276.59 cv
565.577 276.59 566.026 277.038 566.026 277.59 cv
f
569.145 277.59 mo
569.145 278.142 568.698 278.59 568.145 278.59 cv
567.594 278.59 567.145 278.142 567.145 277.59 cv
567.145 277.038 567.594 276.59 568.145 276.59 cv
568.698 276.59 569.145 277.038 569.145 277.59 cv
f
571.545 277.59 mo
571.545 278.142 571.098 278.59 570.545 278.59 cv
569.993 278.59 569.545 278.142 569.545 277.59 cv
569.545 277.038 569.993 276.59 570.545 276.59 cv
571.098 276.59 571.545 277.038 571.545 277.59 cv
f
575.026 277.59 mo
575.026 278.142 574.577 278.59 574.026 278.59 cv
573.473 278.59 573.026 278.142 573.026 277.59 cv
573.026 277.038 573.473 276.59 574.026 276.59 cv
574.577 276.59 575.026 277.038 575.026 277.59 cv
f
578.026 277.59 mo
578.026 278.142 577.577 278.59 577.026 278.59 cv
576.473 278.59 576.026 278.142 576.026 277.59 cv
576.026 277.038 576.473 276.59 577.026 276.59 cv
577.577 276.59 578.026 277.038 578.026 277.59 cv
f
580.186 277.59 mo
580.186 278.142 579.737 278.59 579.186 278.59 cv
578.633 278.59 578.186 278.142 578.186 277.59 cv
578.186 277.038 578.633 276.59 579.186 276.59 cv
579.737 276.59 580.186 277.038 580.186 277.59 cv
f
583.665 277.59 mo
583.665 278.142 583.217 278.59 582.665 278.59 cv
582.114 278.59 581.665 278.142 581.665 277.59 cv
581.665 277.038 582.114 276.59 582.665 276.59 cv
583.217 276.59 583.665 277.038 583.665 277.59 cv
f
587.145 277.59 mo
587.145 278.142 586.698 278.59 586.145 278.59 cv
585.594 278.59 585.145 278.142 585.145 277.59 cv
585.145 277.038 585.594 276.59 586.145 276.59 cv
586.698 276.59 587.145 277.038 587.145 277.59 cv
f
588.946 277.59 mo
588.946 278.142 588.497 278.59 587.946 278.59 cv
587.393 278.59 586.946 278.142 586.946 277.59 cv
586.946 277.038 587.393 276.59 587.946 276.59 cv
588.497 276.59 588.946 277.038 588.946 277.59 cv
f
592.665 277.59 mo
592.665 278.142 592.217 278.59 591.665 278.59 cv
591.114 278.59 590.665 278.142 590.665 277.59 cv
590.665 277.038 591.114 276.59 591.665 276.59 cv
592.217 276.59 592.665 277.038 592.665 277.59 cv
f
595.186 277.59 mo
595.186 278.142 594.737 278.59 594.186 278.59 cv
593.633 278.59 593.186 278.142 593.186 277.59 cv
593.186 277.038 593.633 276.59 594.186 276.59 cv
594.737 276.59 595.186 277.038 595.186 277.59 cv
f
598.186 277.59 mo
598.186 278.142 597.737 278.59 597.186 278.59 cv
596.633 278.59 596.186 278.142 596.186 277.59 cv
596.186 277.038 596.633 276.59 597.186 276.59 cv
597.737 276.59 598.186 277.038 598.186 277.59 cv
f
600.825 277.59 mo
600.825 278.142 600.377 278.59 599.825 278.59 cv
599.274 278.59 598.825 278.142 598.825 277.59 cv
598.825 277.038 599.274 276.59 599.825 276.59 cv
600.377 276.59 600.825 277.038 600.825 277.59 cv
f
604.665 277.59 mo
604.665 278.142 604.217 278.59 603.665 278.59 cv
603.114 278.59 602.665 278.142 602.665 277.59 cv
602.665 277.038 603.114 276.59 603.665 276.59 cv
604.217 276.59 604.665 277.038 604.665 277.59 cv
f
606.346 277.59 mo
606.346 278.142 605.897 278.59 605.346 278.59 cv
604.793 278.59 604.346 278.142 604.346 277.59 cv
604.346 277.038 604.793 276.59 605.346 276.59 cv
605.897 276.59 606.346 277.038 606.346 277.59 cv
f
609.106 277.59 mo
609.106 278.142 608.657 278.59 608.106 278.59 cv
607.553 278.59 607.106 278.142 607.106 277.59 cv
607.106 277.038 607.553 276.59 608.106 276.59 cv
608.657 276.59 609.106 277.038 609.106 277.59 cv
f
612.465 277.59 mo
612.465 278.142 612.018 278.59 611.465 278.59 cv
610.913 278.59 610.465 278.142 610.465 277.59 cv
610.465 277.038 610.913 276.59 611.465 276.59 cv
612.018 276.59 612.465 277.038 612.465 277.59 cv
f
615.346 277.59 mo
615.346 278.142 614.897 278.59 614.346 278.59 cv
613.793 278.59 613.346 278.142 613.346 277.59 cv
613.346 277.038 613.793 276.59 614.346 276.59 cv
614.897 276.59 615.346 277.038 615.346 277.59 cv
f
618.346 277.59 mo
618.346 278.142 617.897 278.59 617.346 278.59 cv
616.793 278.59 616.346 278.142 616.346 277.59 cv
616.346 277.038 616.793 276.59 617.346 276.59 cv
617.897 276.59 618.346 277.038 618.346 277.59 cv
f
621.225 277.59 mo
621.225 278.142 620.778 278.59 620.225 278.59 cv
619.674 278.59 619.225 278.142 619.225 277.59 cv
619.225 277.038 619.674 276.59 620.225 276.59 cv
620.778 276.59 621.225 277.038 621.225 277.59 cv
f
624.946 277.59 mo
624.946 278.142 624.497 278.59 623.946 278.59 cv
623.393 278.59 622.946 278.142 622.946 277.59 cv
622.946 277.038 623.393 276.59 623.946 276.59 cv
624.497 276.59 624.946 277.038 624.946 277.59 cv
f
627.946 277.59 mo
627.946 278.142 627.497 278.59 626.946 278.59 cv
626.393 278.59 625.946 278.142 625.946 277.59 cv
625.946 277.038 626.393 276.59 626.946 276.59 cv
627.497 276.59 627.946 277.038 627.946 277.59 cv
f
631.065 277.59 mo
631.065 278.142 630.618 278.59 630.065 278.59 cv
629.514 278.59 629.065 278.142 629.065 277.59 cv
629.065 277.038 629.514 276.59 630.065 276.59 cv
630.618 276.59 631.065 277.038 631.065 277.59 cv
f
633.465 277.59 mo
633.465 278.142 633.018 278.59 632.465 278.59 cv
631.913 278.59 631.465 278.142 631.465 277.59 cv
631.465 277.038 631.913 276.59 632.465 276.59 cv
633.018 276.59 633.465 277.038 633.465 277.59 cv
f
636.225 277.59 mo
636.225 278.142 635.778 278.59 635.225 278.59 cv
634.674 278.59 634.225 278.142 634.225 277.59 cv
634.225 277.038 634.674 276.59 635.225 276.59 cv
635.778 276.59 636.225 277.038 636.225 277.59 cv
f
638.145 277.59 mo
638.145 278.142 637.698 278.59 637.145 278.59 cv
636.594 278.59 636.145 278.142 636.145 277.59 cv
636.145 277.038 636.594 276.59 637.145 276.59 cv
637.698 276.59 638.145 277.038 638.145 277.59 cv
f
641.266 277.59 mo
641.266 278.142 640.817 278.59 640.266 278.59 cv
639.713 278.59 639.266 278.142 639.266 277.59 cv
639.266 277.038 639.713 276.59 640.266 276.59 cv
640.817 276.59 641.266 277.038 641.266 277.59 cv
f
[6 6 ] 0 dsh
88.9189 237.507 mo
89.002 275.84 li
@
92.752 275.59 mo
89.002 277.59 li
89.002 275.84 li
92.752 275.59 li
cp
ef
92.752 275.59 mo
89.002 277.59 li
89.002 275.84 li
92.752 275.59 li
@
89.002 277.59 mo
85.252 275.59 li
89.002 275.84 li
89.002 277.59 li
cp
ef
94.0854 237.507 mo
92.1689 275.84 li
89.002 277.59 mo
85.252 275.59 li
89.002 275.84 li
89.002 277.59 li
@
95.9189 275.757 mo
92.0854 277.59 li
92.1689 275.84 li
95.9189 275.757 li
cp
ef
95.9189 275.757 mo
92.0854 277.59 li
92.1689 275.84 li
95.9189 275.757 li
@
92.0854 277.59 mo
88.4189 275.34 li
92.1689 275.84 li
92.0854 277.59 li
cp
ef
97.252 237.507 mo
95.002 275.84 li
92.0854 277.59 mo
88.4189 275.34 li
92.1689 275.84 li
92.0854 277.59 li
@
98.752 275.757 mo
94.9189 277.59 li
95.002 275.84 li
98.752 275.757 li
cp
ef
98.752 275.757 mo
94.9189 277.59 li
95.002 275.84 li
98.752 275.757 li
@
94.9189 277.59 mo
91.252 275.34 li
95.002 275.84 li
94.9189 277.59 li
cp
ef
102.335 237.507 mo
97.252 275.84 li
94.9189 277.59 mo
91.252 275.34 li
95.002 275.84 li
94.9189 277.59 li
@
101.085 276.09 mo
97.0854 277.59 li
97.252 275.84 li
101.085 276.09 li
cp
ef
101.085 276.09 mo
97.0854 277.59 li
97.252 275.84 li
101.085 276.09 li
@
97.0854 277.59 mo
93.5854 275.09 li
97.252 275.84 li
97.0854 277.59 li
cp
ef
104.585 237.507 mo
98.1689 275.923 li
97.0854 277.59 mo
93.5854 275.09 li
97.252 275.84 li
97.0854 277.59 li
@
101.919 276.173 mo
97.9189 277.59 li
98.1689 275.923 li
101.919 276.173 li
cp
ef
101.919 276.173 mo
97.9189 277.59 li
98.1689 275.923 li
101.919 276.173 li
@
97.9189 277.59 mo
94.502 275.007 li
98.1689 275.923 li
97.9189 277.59 li
cp
ef
107.585 237.507 mo
100.419 275.923 li
97.9189 277.59 mo
94.502 275.007 li
98.1689 275.923 li
97.9189 277.59 li
@
104.169 276.257 mo
100.085 277.59 li
100.419 275.923 li
104.169 276.257 li
cp
ef
104.169 276.257 mo
100.085 277.59 li
100.419 275.923 li
104.169 276.257 li
@
100.085 277.59 mo
96.752 274.923 li
100.419 275.923 li
100.085 277.59 li
cp
ef
110.669 237.507 mo
103.752 275.923 li
100.085 277.59 mo
96.752 274.923 li
100.419 275.923 li
100.085 277.59 li
@
107.419 276.257 mo
103.419 277.59 li
103.752 275.923 li
107.419 276.257 li
cp
ef
107.419 276.257 mo
103.419 277.59 li
103.752 275.923 li
107.419 276.257 li
@
103.419 277.59 mo
100.085 274.923 li
103.752 275.923 li
103.419 277.59 li
cp
ef
115.752 237.507 mo
108.169 275.923 li
103.419 277.59 mo
100.085 274.923 li
103.752 275.923 li
103.419 277.59 li
@
111.919 276.34 mo
107.835 277.59 li
108.169 275.923 li
111.919 276.34 li
cp
ef
111.919 276.34 mo
107.835 277.59 li
108.169 275.923 li
111.919 276.34 li
@
107.835 277.59 mo
104.502 274.84 li
108.169 275.923 li
107.835 277.59 li
cp
ef
118.835 237.507 mo
110.919 275.923 li
107.835 277.59 mo
104.502 274.84 li
108.169 275.923 li
107.835 277.59 li
@
114.669 276.34 mo
110.585 277.59 li
110.919 275.923 li
114.669 276.34 li
cp
ef
114.669 276.34 mo
110.585 277.59 li
110.919 275.923 li
114.669 276.34 li
@
110.585 277.59 mo
107.335 274.84 li
110.919 275.923 li
110.585 277.59 li
cp
ef
121.835 237.507 mo
115.835 275.84 li
110.585 277.59 mo
107.335 274.84 li
110.919 275.923 li
110.585 277.59 li
@
119.585 276.173 mo
115.502 277.59 li
115.835 275.84 li
119.585 276.173 li
cp
ef
119.585 276.173 mo
115.502 277.59 li
115.835 275.84 li
119.585 276.173 li
@
115.502 277.59 mo
112.169 275.007 li
115.835 275.84 li
115.502 277.59 li
cp
ef
126.919 237.507 mo
119.169 275.923 li
115.502 277.59 mo
112.169 275.007 li
115.835 275.84 li
115.502 277.59 li
@
122.919 276.34 mo
118.835 277.59 li
119.169 275.923 li
122.919 276.34 li
cp
ef
122.919 276.34 mo
118.835 277.59 li
119.169 275.923 li
122.919 276.34 li
@
118.835 277.59 mo
115.585 274.84 li
119.169 275.923 li
118.835 277.59 li
cp
ef
130.002 237.507 mo
123.002 275.923 li
118.835 277.59 mo
115.585 274.84 li
119.169 275.923 li
118.835 277.59 li
@
126.752 276.257 mo
122.752 277.59 li
123.002 275.923 li
126.752 276.257 li
cp
ef
126.752 276.257 mo
122.752 277.59 li
123.002 275.923 li
126.752 276.257 li
@
122.752 277.59 mo
119.419 274.923 li
123.002 275.923 li
122.752 277.59 li
cp
ef
133.002 237.507 mo
126.335 275.923 li
122.752 277.59 mo
119.419 274.923 li
123.002 275.923 li
122.752 277.59 li
@
130.085 276.257 mo
126.002 277.59 li
126.335 275.923 li
130.085 276.257 li
cp
ef
130.085 276.257 mo
126.002 277.59 li
126.335 275.923 li
130.085 276.257 li
@
126.002 277.59 mo
122.669 274.923 li
126.335 275.923 li
126.002 277.59 li
cp
ef
136.002 237.507 mo
131.169 275.84 li
126.002 277.59 mo
122.669 274.923 li
126.335 275.923 li
126.002 277.59 li
@
134.919 276.007 mo
131.002 277.59 li
131.169 275.84 li
134.919 276.007 li
cp
ef
134.919 276.007 mo
131.002 277.59 li
131.169 275.84 li
134.919 276.007 li
@
131.002 277.59 mo
127.502 275.09 li
131.169 275.84 li
131.002 277.59 li
cp
ef
138.169 237.507 mo
134.419 275.84 li
131.002 277.59 mo
127.502 275.09 li
131.169 275.84 li
131.002 277.59 li
@
138.252 275.923 mo
134.335 277.59 li
134.419 275.84 li
138.252 275.923 li
cp
ef
138.252 275.923 mo
134.335 277.59 li
134.419 275.84 li
138.252 275.923 li
@
134.335 277.59 mo
130.752 275.173 li
134.419 275.84 li
134.335 277.59 li
cp
ef
141.169 237.507 mo
137.752 275.84 li
134.335 277.59 mo
130.752 275.173 li
134.419 275.84 li
134.335 277.59 li
@
141.502 275.923 mo
137.585 277.59 li
137.752 275.84 li
141.502 275.923 li
cp
ef
141.502 275.923 mo
137.585 277.59 li
137.752 275.84 li
141.502 275.923 li
@
137.585 277.59 mo
134.085 275.257 li
137.752 275.84 li
137.585 277.59 li
cp
ef
144.252 237.507 mo
140.002 275.84 li
137.585 277.59 mo
134.085 275.257 li
137.752 275.84 li
137.585 277.59 li
@
143.752 276.007 mo
139.835 277.59 li
140.002 275.84 li
143.752 276.007 li
cp
ef
143.752 276.007 mo
139.835 277.59 li
140.002 275.84 li
143.752 276.007 li
@
139.835 277.59 mo
136.335 275.173 li
140.002 275.84 li
139.835 277.59 li
cp
ef
147.335 237.507 mo
143.335 275.84 li
139.835 277.59 mo
136.335 275.173 li
140.002 275.84 li
139.835 277.59 li
@
147.085 275.923 mo
143.085 277.59 li
143.335 275.84 li
147.085 275.923 li
cp
ef
147.085 275.923 mo
143.085 277.59 li
143.335 275.84 li
147.085 275.923 li
@
143.085 277.59 mo
139.585 275.173 li
143.335 275.84 li
143.085 277.59 li
cp
ef
150.335 237.507 mo
146.085 275.84 li
143.085 277.59 mo
139.585 275.173 li
143.335 275.84 li
143.085 277.59 li
@
149.835 276.007 mo
145.919 277.59 li
146.085 275.84 li
149.835 276.007 li
cp
ef
149.835 276.007 mo
145.919 277.59 li
146.085 275.84 li
149.835 276.007 li
@
145.919 277.59 mo
142.335 275.173 li
146.085 275.84 li
145.919 277.59 li
cp
ef
153.419 237.507 mo
150.419 275.84 li
145.919 277.59 mo
142.335 275.173 li
146.085 275.84 li
145.919 277.59 li
@
154.169 275.84 mo
150.335 277.59 li
150.419 275.84 li
154.169 275.84 li
cp
ef
154.169 275.84 mo
150.335 277.59 li
150.419 275.84 li
154.169 275.84 li
@
150.335 277.59 mo
146.752 275.257 li
150.419 275.84 li
150.335 277.59 li
cp
ef
156.502 237.507 mo
155.335 275.84 li
150.335 277.59 mo
146.752 275.257 li
150.419 275.84 li
150.335 277.59 li
@
159.085 275.673 mo
155.252 277.59 li
155.335 275.84 li
159.085 275.673 li
cp
ef
159.085 275.673 mo
155.252 277.59 li
155.335 275.84 li
159.085 275.673 li
@
155.252 277.59 mo
151.585 275.423 li
155.335 275.84 li
155.252 277.59 li
cp
ef
159.502 237.507 mo
159.169 275.84 li
155.252 277.59 mo
151.585 275.423 li
155.335 275.84 li
155.252 277.59 li
@
162.919 275.59 mo
159.085 277.59 li
159.169 275.84 li
162.919 275.59 li
cp
ef
162.919 275.59 mo
159.085 277.59 li
159.169 275.84 li
162.919 275.59 li
@
159.085 277.59 mo
155.419 275.507 li
159.169 275.84 li
159.085 277.59 li
cp
ef
162.585 237.507 mo
162.419 275.84 li
159.085 277.59 mo
155.419 275.507 li
159.169 275.84 li
159.085 277.59 li
@
166.169 275.59 mo
162.419 277.59 li
162.419 275.84 li
166.169 275.59 li
cp
ef
166.169 275.59 mo
162.419 277.59 li
162.419 275.84 li
166.169 275.59 li
@
162.419 277.59 mo
158.669 275.507 li
162.419 275.84 li
162.419 277.59 li
cp
ef
165.752 237.507 mo
166.252 275.84 li
162.419 277.59 mo
158.669 275.507 li
162.419 275.84 li
162.419 277.59 li
@
170.002 275.507 mo
166.252 277.59 li
166.252 275.84 li
170.002 275.507 li
cp
ef
170.002 275.507 mo
166.252 277.59 li
166.252 275.84 li
170.002 275.507 li
@
166.252 277.59 mo
162.502 275.59 li
166.252 275.84 li
166.252 277.59 li
cp
ef
168.835 237.507 mo
169.585 275.84 li
166.252 277.59 mo
162.502 275.59 li
166.252 275.84 li
166.252 277.59 li
@
173.335 275.507 mo
169.585 277.59 li
169.585 275.84 li
173.335 275.507 li
cp
ef
173.335 275.507 mo
169.585 277.59 li
169.585 275.84 li
173.335 275.507 li
@
169.585 277.59 mo
165.835 275.673 li
169.585 275.84 li
169.585 277.59 li
cp
ef
171.919 237.507 mo
171.835 275.84 li
169.585 277.59 mo
165.835 275.673 li
169.585 275.84 li
169.585 277.59 li
@
175.585 275.59 mo
171.835 277.59 li
171.835 275.84 li
175.585 275.59 li
cp
ef
175.585 275.59 mo
171.835 277.59 li
171.835 275.84 li
175.585 275.59 li
@
171.835 277.59 mo
168.085 275.59 li
171.835 275.84 li
171.835 277.59 li
cp
ef
174.919 237.507 mo
175.669 275.84 li
171.835 277.59 mo
168.085 275.59 li
171.835 275.84 li
171.835 277.59 li
@
179.419 275.507 mo
175.669 277.59 li
175.669 275.84 li
179.419 275.507 li
cp
ef
179.419 275.507 mo
175.669 277.59 li
175.669 275.84 li
179.419 275.507 li
@
175.669 277.59 mo
171.919 275.59 li
175.669 275.84 li
175.669 277.59 li
cp
ef
177.919 237.507 mo
177.919 275.84 li
175.669 277.59 mo
171.919 275.59 li
175.669 275.84 li
175.669 277.59 li
@
181.669 275.59 mo
177.919 277.59 li
177.919 275.84 li
181.669 275.59 li
cp
ef
181.669 275.59 mo
177.919 277.59 li
177.919 275.84 li
181.669 275.59 li
@
177.919 277.59 mo
174.169 275.59 li
177.919 275.84 li
177.919 277.59 li
cp
ef
180.919 237.507 mo
180.419 275.84 li
177.919 277.59 mo
174.169 275.59 li
177.919 275.84 li
177.919 277.59 li
@
184.169 275.59 mo
180.419 277.59 li
180.419 275.84 li
184.169 275.59 li
cp
ef
184.169 275.59 mo
180.419 277.59 li
180.419 275.84 li
184.169 275.59 li
@
180.419 277.59 mo
176.669 275.507 li
180.419 275.84 li
180.419 277.59 li
cp
ef
183.919 237.507 mo
183.252 275.84 li
180.419 277.59 mo
176.669 275.507 li
180.419 275.84 li
180.419 277.59 li
@
187.002 275.59 mo
183.169 277.59 li
183.252 275.84 li
187.002 275.59 li
cp
ef
187.002 275.59 mo
183.169 277.59 li
183.252 275.84 li
187.002 275.59 li
@
183.169 277.59 mo
179.502 275.507 li
183.252 275.84 li
183.169 277.59 li
cp
ef
186.919 237.507 mo
186.335 275.84 li
183.169 277.59 mo
179.502 275.507 li
183.252 275.84 li
183.169 277.59 li
@
190.085 275.59 mo
186.252 277.59 li
186.335 275.84 li
190.085 275.59 li
cp
ef
190.085 275.59 mo
186.252 277.59 li
186.335 275.84 li
190.085 275.59 li
@
186.252 277.59 mo
182.585 275.507 li
186.335 275.84 li
186.252 277.59 li
cp
ef
189.919 237.507 mo
188.835 275.84 li
186.252 277.59 mo
182.585 275.507 li
186.335 275.84 li
186.252 277.59 li
@
192.585 275.673 mo
188.752 277.59 li
188.835 275.84 li
192.585 275.673 li
cp
ef
192.585 275.673 mo
188.752 277.59 li
188.835 275.84 li
192.585 275.673 li
@
188.752 277.59 mo
185.085 275.423 li
188.835 275.84 li
188.752 277.59 li
cp
ef
192.002 237.507 mo
191.835 275.84 li
188.752 277.59 mo
185.085 275.423 li
188.835 275.84 li
188.752 277.59 li
@
195.585 275.59 mo
191.835 277.59 li
191.835 275.84 li
195.585 275.59 li
cp
ef
195.585 275.59 mo
191.835 277.59 li
191.835 275.84 li
195.585 275.59 li
@
191.835 277.59 mo
188.085 275.59 li
191.835 275.84 li
191.835 277.59 li
cp
ef
195.002 237.507 mo
194.085 275.84 li
191.835 277.59 mo
188.085 275.59 li
191.835 275.84 li
191.835 277.59 li
@
197.835 275.673 mo
194.002 277.59 li
194.085 275.84 li
197.835 275.673 li
cp
ef
197.835 275.673 mo
194.002 277.59 li
194.085 275.84 li
197.835 275.673 li
@
194.002 277.59 mo
190.335 275.507 li
194.085 275.84 li
194.002 277.59 li
cp
ef
198.002 237.507 mo
196.919 275.84 li
194.002 277.59 mo
190.335 275.507 li
194.085 275.84 li
194.002 277.59 li
@
200.669 275.673 mo
196.835 277.59 li
196.919 275.84 li
200.669 275.673 li
cp
ef
200.669 275.673 mo
196.835 277.59 li
196.919 275.84 li
200.669 275.673 li
@
196.835 277.59 mo
193.169 275.423 li
196.919 275.84 li
196.835 277.59 li
cp
ef
201.002 237.507 mo
201.169 275.84 li
196.835 277.59 mo
193.169 275.423 li
196.919 275.84 li
196.835 277.59 li
@
204.919 275.507 mo
201.169 277.59 li
201.169 275.84 li
204.919 275.507 li
cp
ef
204.919 275.507 mo
201.169 277.59 li
201.169 275.84 li
204.919 275.507 li
@
201.169 277.59 mo
197.419 275.59 li
201.169 275.84 li
201.169 277.59 li
cp
ef
204.002 237.507 mo
203.419 275.84 li
201.169 277.59 mo
197.419 275.59 li
201.169 275.84 li
201.169 277.59 li
@
207.169 275.59 mo
203.335 277.59 li
203.419 275.84 li
207.169 275.59 li
cp
ef
207.169 275.59 mo
203.335 277.59 li
203.419 275.84 li
207.169 275.59 li
@
203.335 277.59 mo
199.669 275.507 li
203.419 275.84 li
203.335 277.59 li
cp
ef
206.085 237.507 mo
207.335 275.84 li
203.335 277.59 mo
199.669 275.507 li
203.419 275.84 li
203.335 277.59 li
@
211.085 275.423 mo
207.419 277.59 li
207.335 275.84 li
211.085 275.423 li
cp
ef
211.085 275.423 mo
207.419 277.59 li
207.335 275.84 li
211.085 275.423 li
@
207.419 277.59 mo
203.585 275.673 li
207.335 275.84 li
207.419 277.59 li
cp
ef
209.085 237.507 mo
210.752 275.84 li
207.419 277.59 mo
203.585 275.673 li
207.335 275.84 li
207.419 277.59 li
@
214.419 275.423 mo
210.835 277.59 li
210.752 275.84 li
214.419 275.423 li
cp
ef
214.419 275.423 mo
210.835 277.59 li
210.752 275.84 li
214.419 275.423 li
@
210.835 277.59 mo
207.002 275.757 li
210.752 275.84 li
210.835 277.59 li
cp
ef
211.169 237.507 mo
212.335 275.84 li
210.835 277.59 mo
207.002 275.757 li
210.752 275.84 li
210.835 277.59 li
@
216.002 275.423 mo
212.335 277.59 li
212.335 275.84 li
216.002 275.423 li
cp
ef
216.002 275.423 mo
212.335 277.59 li
212.335 275.84 li
216.002 275.423 li
@
212.335 277.59 mo
208.502 275.673 li
212.335 275.84 li
212.335 277.59 li
cp
ef
213.335 237.507 mo
215.085 275.84 li
212.335 277.59 mo
208.502 275.673 li
212.335 275.84 li
212.335 277.59 li
@
218.835 275.423 mo
215.169 277.59 li
215.085 275.84 li
218.835 275.423 li
cp
ef
218.835 275.423 mo
215.169 277.59 li
215.085 275.84 li
218.835 275.423 li
@
215.169 277.59 mo
211.335 275.757 li
215.085 275.84 li
215.169 277.59 li
cp
ef
216.419 237.507 mo
218.502 275.84 li
215.169 277.59 mo
211.335 275.757 li
215.085 275.84 li
215.169 277.59 li
@
222.169 275.34 mo
218.585 277.59 li
218.502 275.84 li
222.169 275.34 li
cp
ef
222.169 275.34 mo
218.585 277.59 li
218.502 275.84 li
222.169 275.34 li
@
218.585 277.59 mo
214.669 275.757 li
218.502 275.84 li
218.585 277.59 li
cp
ef
221.502 237.507 mo
222.085 275.84 li
218.585 277.59 mo
214.669 275.757 li
218.502 275.84 li
218.585 277.59 li
@
225.835 275.507 mo
222.085 277.59 li
222.085 275.84 li
225.835 275.507 li
cp
ef
225.835 275.507 mo
222.085 277.59 li
222.085 275.84 li
225.835 275.507 li
@
222.085 277.59 mo
218.335 275.59 li
222.085 275.84 li
222.085 277.59 li
cp
ef
224.502 237.507 mo
224.002 275.84 li
222.085 277.59 mo
218.335 275.59 li
222.085 275.84 li
222.085 277.59 li
@
227.752 275.59 mo
224.002 277.59 li
224.002 275.84 li
227.752 275.59 li
cp
ef
227.752 275.59 mo
224.002 277.59 li
224.002 275.84 li
227.752 275.59 li
@
224.002 277.59 mo
220.252 275.507 li
224.002 275.84 li
224.002 277.59 li
cp
ef
227.585 237.507 mo
227.085 275.84 li
224.002 277.59 mo
220.252 275.507 li
224.002 275.84 li
224.002 277.59 li
@
230.835 275.59 mo
227.085 277.59 li
227.085 275.84 li
230.835 275.59 li
cp
ef
230.835 275.59 mo
227.085 277.59 li
227.085 275.84 li
230.835 275.59 li
@
227.085 277.59 mo
223.335 275.507 li
227.085 275.84 li
227.085 277.59 li
cp
ef
230.669 237.507 mo
230.502 275.84 li
227.085 277.59 mo
223.335 275.507 li
227.085 275.84 li
227.085 277.59 li
@
234.252 275.59 mo
230.502 277.59 li
230.502 275.84 li
234.252 275.59 li
cp
ef
234.252 275.59 mo
230.502 277.59 li
230.502 275.84 li
234.252 275.59 li
@
230.502 277.59 mo
226.752 275.507 li
230.502 275.84 li
230.502 277.59 li
cp
ef
232.752 237.507 mo
233.835 275.84 li
230.502 277.59 mo
226.752 275.507 li
230.502 275.84 li
230.502 277.59 li
@
237.585 275.423 mo
233.919 277.59 li
233.835 275.84 li
237.585 275.423 li
cp
ef
237.585 275.423 mo
233.919 277.59 li
233.835 275.84 li
237.585 275.423 li
@
233.919 277.59 mo
230.085 275.673 li
233.835 275.84 li
233.919 277.59 li
cp
ef
235.752 237.507 mo
236.335 275.84 li
233.919 277.59 mo
230.085 275.673 li
233.835 275.84 li
233.919 277.59 li
@
240.085 275.507 mo
236.419 277.59 li
236.335 275.84 li
240.085 275.507 li
cp
ef
240.085 275.507 mo
236.419 277.59 li
236.335 275.84 li
240.085 275.507 li
@
236.419 277.59 mo
232.585 275.59 li
236.335 275.84 li
236.419 277.59 li
cp
ef
238.752 237.507 mo
238.835 275.84 li
236.419 277.59 mo
232.585 275.59 li
236.335 275.84 li
236.419 277.59 li
@
242.585 275.59 mo
238.835 277.59 li
238.835 275.84 li
242.585 275.59 li
cp
ef
242.585 275.59 mo
238.835 277.59 li
238.835 275.84 li
242.585 275.59 li
@
238.835 277.59 mo
235.085 275.59 li
238.835 275.84 li
238.835 277.59 li
cp
ef
240.835 237.507 mo
242.252 275.84 li
238.835 277.59 mo
235.085 275.59 li
238.835 275.84 li
238.835 277.59 li
@
245.919 275.423 mo
242.252 277.59 li
242.252 275.84 li
245.919 275.423 li
cp
ef
245.919 275.423 mo
242.252 277.59 li
242.252 275.84 li
245.919 275.423 li
@
242.252 277.59 mo
238.419 275.673 li
242.252 275.84 li
242.252 277.59 li
cp
ef
245.585 237.507 mo
245.669 275.84 li
242.252 277.59 mo
238.419 275.673 li
242.252 275.84 li
242.252 277.59 li
@
249.419 275.59 mo
245.669 277.59 li
245.669 275.84 li
249.419 275.59 li
cp
ef
249.419 275.59 mo
245.669 277.59 li
245.669 275.84 li
249.419 275.59 li
@
245.669 277.59 mo
241.919 275.59 li
245.669 275.84 li
245.669 277.59 li
cp
ef
248.669 237.507 mo
248.752 275.84 li
245.669 277.59 mo
241.919 275.59 li
245.669 275.84 li
245.669 277.59 li
@
252.502 275.507 mo
248.752 277.59 li
248.752 275.84 li
252.502 275.507 li
cp
ef
252.502 275.507 mo
248.752 277.59 li
248.752 275.84 li
252.502 275.507 li
@
248.752 277.59 mo
245.002 275.59 li
248.752 275.84 li
248.752 277.59 li
cp
ef
251.669 237.507 mo
251.919 275.84 li
248.752 277.59 mo
245.002 275.59 li
248.752 275.84 li
248.752 277.59 li
@
255.669 275.507 mo
251.919 277.59 li
251.919 275.84 li
255.669 275.507 li
cp
ef
255.669 275.507 mo
251.919 277.59 li
251.919 275.84 li
255.669 275.507 li
@
251.919 277.59 mo
248.169 275.59 li
251.919 275.84 li
251.919 277.59 li
cp
ef
254.752 237.507 mo
254.419 275.84 li
251.919 277.59 mo
248.169 275.59 li
251.919 275.84 li
251.919 277.59 li
@
258.169 275.59 mo
254.335 277.59 li
254.419 275.84 li
258.169 275.59 li
cp
ef
258.169 275.59 mo
254.335 277.59 li
254.419 275.84 li
258.169 275.59 li
@
254.335 277.59 mo
250.669 275.507 li
254.419 275.84 li
254.335 277.59 li
cp
ef
257.835 237.507 mo
256.335 275.84 li
254.335 277.59 mo
250.669 275.507 li
254.419 275.84 li
254.335 277.59 li
@
260.085 275.673 mo
256.252 277.59 li
256.335 275.84 li
260.085 275.673 li
cp
ef
260.085 275.673 mo
256.252 277.59 li
256.335 275.84 li
260.085 275.673 li
@
256.252 277.59 mo
252.585 275.423 li
256.335 275.84 li
256.252 277.59 li
cp
ef
260.002 237.507 mo
261.169 275.84 li
256.252 277.59 mo
252.585 275.423 li
256.335 275.84 li
256.252 277.59 li
@
264.919 275.423 mo
261.169 277.59 li
261.169 275.84 li
264.919 275.423 li
cp
ef
264.919 275.423 mo
261.169 277.59 li
261.169 275.84 li
264.919 275.423 li
@
261.169 277.59 mo
257.419 275.673 li
261.169 275.84 li
261.169 277.59 li
cp
ef
263.002 237.507 mo
262.752 275.84 li
261.169 277.59 mo
257.419 275.673 li
261.169 275.84 li
261.169 277.59 li
@
266.502 275.59 mo
262.752 277.59 li
262.752 275.84 li
266.502 275.59 li
cp
ef
266.502 275.59 mo
262.752 277.59 li
262.752 275.84 li
266.502 275.59 li
@
262.752 277.59 mo
259.002 275.507 li
262.752 275.84 li
262.752 277.59 li
cp
ef
266.085 237.507 mo
266.502 275.84 li
262.752 277.59 mo
259.002 275.507 li
262.752 275.84 li
262.752 277.59 li
@
270.169 275.507 mo
266.502 277.59 li
266.502 275.84 li
270.169 275.507 li
cp
ef
270.169 275.507 mo
266.502 277.59 li
266.502 275.84 li
270.169 275.507 li
@
266.502 277.59 mo
262.669 275.59 li
266.502 275.84 li
266.502 277.59 li
cp
ef
268.252 237.507 mo
269.502 275.84 li
266.502 277.59 mo
262.669 275.59 li
266.502 275.84 li
266.502 277.59 li
@
273.252 275.423 mo
269.585 277.59 li
269.502 275.84 li
273.252 275.423 li
cp
ef
273.252 275.423 mo
269.585 277.59 li
269.502 275.84 li
273.252 275.423 li
@
269.585 277.59 mo
265.752 275.673 li
269.502 275.84 li
269.585 277.59 li
cp
ef
271.335 237.507 mo
272.002 275.84 li
269.585 277.59 mo
265.752 275.673 li
269.502 275.84 li
269.585 277.59 li
@
275.752 275.507 mo
272.085 277.59 li
272.002 275.84 li
275.752 275.507 li
cp
ef
275.752 275.507 mo
272.085 277.59 li
272.002 275.84 li
275.752 275.507 li
@
272.085 277.59 mo
268.252 275.59 li
272.002 275.84 li
272.085 277.59 li
cp
ef
274.335 237.507 mo
274.835 275.84 li
272.085 277.59 mo
268.252 275.59 li
272.002 275.84 li
272.085 277.59 li
@
278.585 275.507 mo
274.835 277.59 li
274.835 275.84 li
278.585 275.507 li
cp
ef
278.585 275.507 mo
274.835 277.59 li
274.835 275.84 li
278.585 275.507 li
@
274.835 277.59 mo
271.085 275.59 li
274.835 275.84 li
274.835 277.59 li
cp
ef
277.419 237.507 mo
277.335 275.84 li
274.835 277.59 mo
271.085 275.59 li
274.835 275.84 li
274.835 277.59 li
@
281.085 275.59 mo
277.335 277.59 li
277.335 275.84 li
281.085 275.59 li
cp
ef
281.085 275.59 mo
277.335 277.59 li
277.335 275.84 li
281.085 275.59 li
@
277.335 277.59 mo
273.585 275.59 li
277.335 275.84 li
277.335 277.59 li
cp
ef
279.585 237.507 mo
280.085 275.84 li
277.335 277.59 mo
273.585 275.59 li
277.335 275.84 li
277.335 277.59 li
@
283.835 275.507 mo
280.169 277.59 li
280.085 275.84 li
283.835 275.507 li
cp
ef
283.835 275.507 mo
280.169 277.59 li
280.085 275.84 li
283.835 275.507 li
@
280.169 277.59 mo
276.335 275.59 li
280.085 275.84 li
280.169 277.59 li
cp
ef
282.585 237.507 mo
282.585 275.84 li
280.169 277.59 mo
276.335 275.59 li
280.085 275.84 li
280.169 277.59 li
@
286.335 275.59 mo
282.585 277.59 li
282.585 275.84 li
286.335 275.59 li
cp
ef
286.335 275.59 mo
282.585 277.59 li
282.585 275.84 li
286.335 275.59 li
@
282.585 277.59 mo
278.835 275.59 li
282.585 275.84 li
282.585 277.59 li
cp
ef
287.419 237.507 mo
284.502 275.84 li
282.585 277.59 mo
278.835 275.59 li
282.585 275.84 li
282.585 277.59 li
@
288.252 275.84 mo
284.335 277.59 li
284.502 275.84 li
288.252 275.84 li
cp
ef
288.252 275.84 mo
284.335 277.59 li
284.502 275.84 li
288.252 275.84 li
@
284.335 277.59 mo
280.752 275.257 li
284.502 275.84 li
284.335 277.59 li
cp
ef
290.419 237.507 mo
287.085 275.84 li
284.335 277.59 mo
280.752 275.257 li
284.502 275.84 li
284.335 277.59 li
@
290.835 275.923 mo
286.919 277.59 li
287.085 275.84 li
290.835 275.923 li
cp
ef
290.835 275.923 mo
286.919 277.59 li
287.085 275.84 li
290.835 275.923 li
@
286.919 277.59 mo
283.419 275.257 li
287.085 275.84 li
286.919 277.59 li
cp
ef
293.502 237.507 mo
290.835 275.84 li
286.919 277.59 mo
283.419 275.257 li
287.085 275.84 li
286.919 277.59 li
@
294.585 275.84 mo
290.669 277.59 li
290.835 275.84 li
294.585 275.84 li
cp
ef
294.585 275.84 mo
290.669 277.59 li
290.835 275.84 li
294.585 275.84 li
@
290.669 277.59 mo
287.085 275.34 li
290.835 275.84 li
290.669 277.59 li
cp
ef
296.585 237.507 mo
293.002 275.84 li
290.669 277.59 mo
287.085 275.34 li
290.835 275.84 li
290.669 277.59 li
@
296.752 275.923 mo
292.835 277.59 li
293.002 275.84 li
296.752 275.923 li
cp
ef
296.752 275.923 mo
292.835 277.59 li
293.002 275.84 li
296.752 275.923 li
@
292.835 277.59 mo
289.335 275.257 li
293.002 275.84 li
292.835 277.59 li
cp
ef
298.752 237.507 mo
297.002 275.84 li
292.835 277.59 mo
289.335 275.257 li
293.002 275.84 li
292.835 277.59 li
@
300.752 275.757 mo
296.919 277.59 li
297.002 275.84 li
300.752 275.757 li
cp
ef
300.752 275.757 mo
296.919 277.59 li
297.002 275.84 li
300.752 275.757 li
@
296.919 277.59 mo
293.252 275.423 li
297.002 275.84 li
296.919 277.59 li
cp
ef
301.835 237.507 mo
298.835 275.84 li
296.919 277.59 mo
293.252 275.423 li
297.002 275.84 li
296.919 277.59 li
@
302.669 275.84 mo
298.752 277.59 li
298.835 275.84 li
302.669 275.84 li
cp
ef
302.669 275.84 mo
298.752 277.59 li
298.835 275.84 li
302.669 275.84 li
@
298.752 277.59 mo
295.169 275.257 li
298.835 275.84 li
298.752 277.59 li
cp
ef
306.919 237.507 mo
302.669 275.84 li
298.752 277.59 mo
295.169 275.257 li
298.835 275.84 li
298.752 277.59 li
@
306.419 276.007 mo
302.502 277.59 li
302.669 275.84 li
306.419 276.007 li
cp
ef
306.419 276.007 mo
302.502 277.59 li
302.669 275.84 li
306.419 276.007 li
@
302.502 277.59 mo
299.002 275.173 li
302.669 275.84 li
302.502 277.59 li
cp
ef
310.085 237.507 mo
306.335 275.84 li
302.502 277.59 mo
299.002 275.173 li
302.669 275.84 li
302.502 277.59 li
@
310.085 275.923 mo
306.169 277.59 li
306.335 275.84 li
310.085 275.923 li
cp
ef
310.085 275.923 mo
306.169 277.59 li
306.335 275.84 li
310.085 275.923 li
@
306.169 277.59 mo
302.669 275.173 li
306.335 275.84 li
306.169 277.59 li
cp
ef
313.085 237.507 mo
310.335 275.84 li
306.169 277.59 mo
302.669 275.173 li
306.335 275.84 li
306.169 277.59 li
@
314.085 275.84 mo
310.252 277.59 li
310.335 275.84 li
314.085 275.84 li
cp
ef
314.085 275.84 mo
310.252 277.59 li
310.335 275.84 li
314.085 275.84 li
@
310.252 277.59 mo
306.669 275.257 li
310.335 275.84 li
310.252 277.59 li
cp
ef
316.085 237.507 mo
313.752 275.84 li
310.252 277.59 mo
306.669 275.257 li
310.335 275.84 li
310.252 277.59 li
@
317.502 275.757 mo
313.669 277.59 li
313.752 275.84 li
317.502 275.757 li
cp
ef
317.502 275.757 mo
313.669 277.59 li
313.752 275.84 li
317.502 275.757 li
@
313.669 277.59 mo
310.002 275.34 li
313.752 275.84 li
313.669 277.59 li
cp
ef
318.252 237.507 mo
316.835 275.84 li
313.669 277.59 mo
310.002 275.34 li
313.752 275.84 li
313.669 277.59 li
@
320.585 275.673 mo
316.752 277.59 li
316.835 275.84 li
320.585 275.673 li
cp
ef
320.585 275.673 mo
316.752 277.59 li
316.835 275.84 li
320.585 275.673 li
@
316.752 277.59 mo
313.085 275.423 li
316.835 275.84 li
316.752 277.59 li
cp
ef
321.252 237.507 mo
318.502 275.84 li
316.752 277.59 mo
313.085 275.423 li
316.835 275.84 li
316.752 277.59 li
@
322.252 275.84 mo
318.335 277.59 li
318.502 275.84 li
322.252 275.84 li
cp
ef
322.252 275.84 mo
318.335 277.59 li
318.502 275.84 li
322.252 275.84 li
@
318.335 277.59 mo
314.752 275.257 li
318.502 275.84 li
318.335 277.59 li
cp
ef
323.335 237.507 mo
321.502 275.84 li
318.335 277.59 mo
314.752 275.257 li
318.502 275.84 li
318.335 277.59 li
@
325.252 275.757 mo
321.419 277.59 li
321.502 275.84 li
325.252 275.757 li
cp
ef
325.252 275.757 mo
321.419 277.59 li
321.502 275.84 li
325.252 275.757 li
@
321.419 277.59 mo
317.752 275.423 li
321.502 275.84 li
321.419 277.59 li
cp
ef
326.335 237.507 mo
325.169 275.84 li
321.419 277.59 mo
317.752 275.423 li
321.502 275.84 li
321.419 277.59 li
@
328.919 275.673 mo
325.085 277.59 li
325.169 275.84 li
328.919 275.673 li
cp
ef
328.919 275.673 mo
325.085 277.59 li
325.169 275.84 li
328.919 275.673 li
@
325.085 277.59 mo
321.419 275.423 li
325.169 275.84 li
325.085 277.59 li
cp
ef
329.335 237.507 mo
327.669 275.84 li
325.085 277.59 mo
321.419 275.423 li
325.169 275.84 li
325.085 277.59 li
@
331.419 275.757 mo
327.585 277.59 li
327.669 275.84 li
331.419 275.757 li
cp
ef
331.419 275.757 mo
327.585 277.59 li
327.669 275.84 li
331.419 275.757 li
@
327.585 277.59 mo
323.919 275.423 li
327.669 275.84 li
327.585 277.59 li
cp
ef
332.335 237.507 mo
330.752 275.84 li
327.585 277.59 mo
323.919 275.423 li
327.669 275.84 li
327.585 277.59 li
@
334.502 275.673 mo
330.669 277.59 li
330.752 275.84 li
334.502 275.673 li
cp
ef
334.502 275.673 mo
330.669 277.59 li
330.752 275.84 li
334.502 275.673 li
@
330.669 277.59 mo
327.002 275.423 li
330.752 275.84 li
330.669 277.59 li
cp
ef
335.335 237.507 mo
332.669 275.84 li
330.669 277.59 mo
327.002 275.423 li
330.752 275.84 li
330.669 277.59 li
@
336.419 275.84 mo
332.585 277.59 li
332.669 275.84 li
336.419 275.84 li
cp
ef
336.419 275.84 mo
332.585 277.59 li
332.669 275.84 li
336.419 275.84 li
@
332.585 277.59 mo
328.919 275.34 li
332.669 275.84 li
332.585 277.59 li
cp
ef
337.419 237.507 mo
335.169 275.84 li
332.585 277.59 mo
328.919 275.34 li
332.669 275.84 li
332.585 277.59 li
@
338.919 275.757 mo
335.085 277.59 li
335.169 275.84 li
338.919 275.757 li
cp
ef
338.919 275.757 mo
335.085 277.59 li
335.169 275.84 li
338.919 275.757 li
@
335.085 277.59 mo
331.419 275.34 li
335.169 275.84 li
335.085 277.59 li
cp
ef
340.419 237.507 mo
337.919 275.84 li
335.085 277.59 mo
331.419 275.34 li
335.169 275.84 li
335.085 277.59 li
@
341.669 275.84 mo
337.835 277.59 li
337.919 275.84 li
341.669 275.84 li
cp
ef
341.669 275.84 mo
337.835 277.59 li
337.919 275.84 li
341.669 275.84 li
@
337.835 277.59 mo
334.252 275.34 li
337.919 275.84 li
337.835 277.59 li
cp
ef
343.419 237.507 mo
340.419 275.84 li
337.835 277.59 mo
334.252 275.34 li
337.919 275.84 li
337.835 277.59 li
@
344.252 275.84 mo
340.335 277.59 li
340.419 275.84 li
344.252 275.84 li
cp
ef
344.252 275.84 mo
340.335 277.59 li
340.419 275.84 li
344.252 275.84 li
@
340.335 277.59 mo
336.752 275.257 li
340.419 275.84 li
340.335 277.59 li
cp
ef
346.419 237.507 mo
343.252 275.84 li
340.335 277.59 mo
336.752 275.257 li
340.419 275.84 li
340.335 277.59 li
@
347.002 275.84 mo
343.085 277.59 li
343.252 275.84 li
347.002 275.84 li
cp
ef
347.002 275.84 mo
343.085 277.59 li
343.252 275.84 li
347.002 275.84 li
@
343.085 277.59 mo
339.502 275.257 li
343.252 275.84 li
343.085 277.59 li
cp
ef
349.419 237.507 mo
345.419 275.84 li
343.085 277.59 mo
339.502 275.257 li
343.252 275.84 li
343.085 277.59 li
@
349.169 275.923 mo
345.252 277.59 li
345.419 275.84 li
349.169 275.923 li
cp
ef
349.169 275.923 mo
345.252 277.59 li
345.419 275.84 li
349.169 275.923 li
@
345.252 277.59 mo
341.752 275.173 li
345.419 275.84 li
345.252 277.59 li
cp
ef
351.502 237.507 mo
348.169 275.84 li
345.252 277.59 mo
341.752 275.173 li
345.419 275.84 li
345.252 277.59 li
@
352.002 275.923 mo
348.085 277.59 li
348.169 275.84 li
352.002 275.923 li
cp
ef
352.002 275.923 mo
348.085 277.59 li
348.169 275.84 li
352.002 275.923 li
@
348.085 277.59 mo
344.502 275.257 li
348.169 275.84 li
348.085 277.59 li
cp
ef
354.502 237.507 mo
350.752 275.84 li
348.085 277.59 mo
344.502 275.257 li
348.169 275.84 li
348.085 277.59 li
@
354.502 275.923 mo
350.585 277.59 li
350.752 275.84 li
354.502 275.923 li
cp
ef
354.502 275.923 mo
350.585 277.59 li
350.752 275.84 li
354.502 275.923 li
@
350.585 277.59 mo
347.002 275.173 li
350.752 275.84 li
350.585 277.59 li
cp
ef
356.585 237.507 mo
353.169 275.84 li
350.585 277.59 mo
347.002 275.173 li
350.752 275.84 li
350.585 277.59 li
@
356.919 275.923 mo
353.002 277.59 li
353.169 275.84 li
356.919 275.923 li
cp
ef
356.919 275.923 mo
353.002 277.59 li
353.169 275.84 li
356.919 275.923 li
@
353.002 277.59 mo
349.502 275.257 li
353.169 275.84 li
353.002 277.59 li
cp
ef
359.669 237.507 mo
356.585 275.84 li
353.002 277.59 mo
349.502 275.257 li
353.169 275.84 li
353.002 277.59 li
@
360.335 275.84 mo
356.419 277.59 li
356.585 275.84 li
360.335 275.84 li
cp
ef
360.335 275.84 mo
356.419 277.59 li
356.585 275.84 li
360.335 275.84 li
@
356.419 277.59 mo
352.835 275.257 li
356.585 275.84 li
356.419 277.59 li
cp
ef
361.752 237.507 mo
359.669 275.84 li
356.419 277.59 mo
352.835 275.257 li
356.585 275.84 li
356.419 277.59 li
@
363.418 275.757 mo
359.502 277.59 li
359.669 275.84 li
363.418 275.757 li
cp
ef
363.418 275.757 mo
359.502 277.59 li
359.669 275.84 li
363.418 275.757 li
@
359.502 277.59 mo
355.919 275.34 li
359.669 275.84 li
359.502 277.59 li
cp
ef
364.836 237.507 mo
363.336 275.84 li
359.502 277.59 mo
355.919 275.34 li
359.669 275.84 li
359.502 277.59 li
@
367.086 275.673 mo
363.252 277.59 li
363.336 275.84 li
367.086 275.673 li
cp
ef
367.086 275.673 mo
363.252 277.59 li
363.336 275.84 li
367.086 275.673 li
@
363.252 277.59 mo
359.585 275.423 li
363.336 275.84 li
363.252 277.59 li
cp
ef
367.002 237.507 mo
366.668 275.84 li
363.252 277.59 mo
359.585 275.423 li
363.336 275.84 li
363.252 277.59 li
@
370.418 275.59 mo
366.668 277.59 li
366.668 275.84 li
370.418 275.59 li
cp
ef
370.418 275.59 mo
366.668 277.59 li
366.668 275.84 li
370.418 275.59 li
@
366.668 277.59 mo
362.918 275.507 li
366.668 275.84 li
366.668 277.59 li
cp
ef
372.086 237.507 mo
370.752 275.84 li
366.668 277.59 mo
362.918 275.507 li
366.668 275.84 li
366.668 277.59 li
@
374.502 275.673 mo
370.752 277.59 li
370.752 275.84 li
374.502 275.673 li
cp
ef
374.502 275.673 mo
370.752 277.59 li
370.752 275.84 li
374.502 275.673 li
@
370.752 277.59 mo
367.002 275.423 li
370.752 275.84 li
370.752 277.59 li
cp
ef
375.086 237.507 mo
372.418 275.84 li
370.752 277.59 mo
367.002 275.423 li
370.752 275.84 li
370.752 277.59 li
@
376.168 275.84 mo
372.252 277.59 li
372.418 275.84 li
376.168 275.84 li
cp
ef
376.168 275.84 mo
372.252 277.59 li
372.418 275.84 li
376.168 275.84 li
@
372.252 277.59 mo
368.668 275.257 li
372.418 275.84 li
372.252 277.59 li
cp
ef
380.252 237.507 mo
375.002 275.84 li
372.252 277.59 mo
368.668 275.257 li
372.418 275.84 li
372.252 277.59 li
@
378.752 276.09 mo
374.752 277.59 li
375.002 275.84 li
378.752 276.09 li
cp
ef
378.752 276.09 mo
374.752 277.59 li
375.002 275.84 li
378.752 276.09 li
@
374.752 277.59 mo
371.336 275.09 li
375.002 275.84 li
374.752 277.59 li
cp
ef
383.252 237.507 mo
377.502 275.84 li
374.752 277.59 mo
371.336 275.09 li
375.002 275.84 li
374.752 277.59 li
@
381.252 276.173 mo
377.252 277.59 li
377.502 275.84 li
381.252 276.173 li
cp
ef
381.252 276.173 mo
377.252 277.59 li
377.502 275.84 li
381.252 276.173 li
@
377.252 277.59 mo
373.836 275.007 li
377.502 275.84 li
377.252 277.59 li
cp
ef
386.252 237.507 mo
380.252 275.84 li
377.252 277.59 mo
373.836 275.007 li
377.502 275.84 li
377.252 277.59 li
@
384.002 276.173 mo
380.002 277.59 li
380.252 275.84 li
384.002 276.173 li
cp
ef
384.002 276.173 mo
380.002 277.59 li
380.252 275.84 li
384.002 276.173 li
@
380.002 277.59 mo
376.586 275.007 li
380.252 275.84 li
380.002 277.59 li
cp
ef
388.336 237.507 mo
383.336 275.84 li
380.002 277.59 mo
376.586 275.007 li
380.252 275.84 li
380.002 277.59 li
@
387.086 276.09 mo
383.086 277.59 li
383.336 275.84 li
387.086 276.09 li
cp
ef
387.086 276.09 mo
383.086 277.59 li
383.336 275.84 li
387.086 276.09 li
@
383.086 277.59 mo
379.668 275.09 li
383.336 275.84 li
383.086 277.59 li
cp
ef
391.336 237.507 mo
387.002 275.84 li
383.086 277.59 mo
379.668 275.09 li
383.336 275.84 li
383.086 277.59 li
@
390.836 276.007 mo
386.836 277.59 li
387.002 275.84 li
390.836 276.007 li
cp
ef
390.836 276.007 mo
386.836 277.59 li
387.002 275.84 li
390.836 276.007 li
@
386.836 277.59 mo
383.336 275.173 li
387.002 275.84 li
386.836 277.59 li
cp
ef
393.502 237.507 mo
389.502 275.84 li
386.836 277.59 mo
383.336 275.173 li
387.002 275.84 li
386.836 277.59 li
@
393.252 275.923 mo
389.336 277.59 li
389.502 275.84 li
393.252 275.923 li
cp
ef
393.252 275.923 mo
389.336 277.59 li
389.502 275.84 li
393.252 275.923 li
@
389.336 277.59 mo
385.836 275.173 li
389.502 275.84 li
389.336 277.59 li
cp
ef
395.668 237.507 mo
392.836 275.84 li
389.336 277.59 mo
385.836 275.173 li
389.502 275.84 li
389.336 277.59 li
@
396.668 275.84 mo
392.752 277.59 li
392.836 275.84 li
396.668 275.84 li
cp
ef
396.668 275.84 mo
392.752 277.59 li
392.836 275.84 li
396.668 275.84 li
@
392.752 277.59 mo
389.168 275.257 li
392.836 275.84 li
392.752 277.59 li
cp
ef
400.752 237.507 mo
395.418 275.84 li
392.752 277.59 mo
389.168 275.257 li
392.836 275.84 li
392.752 277.59 li
@
399.252 276.09 mo
395.252 277.59 li
395.418 275.84 li
399.252 276.09 li
cp
ef
399.252 276.09 mo
395.252 277.59 li
395.418 275.84 li
399.252 276.09 li
@
395.252 277.59 mo
391.752 275.09 li
395.418 275.84 li
395.252 277.59 li
cp
ef
405.836 237.507 mo
398.668 275.923 li
395.252 277.59 mo
391.752 275.09 li
395.418 275.84 li
395.252 277.59 li
@
402.418 276.257 mo
398.336 277.59 li
398.668 275.923 li
402.418 276.257 li
cp
ef
402.418 276.257 mo
398.336 277.59 li
398.668 275.923 li
402.418 276.257 li
@
398.336 277.59 mo
395.002 274.923 li
398.668 275.923 li
398.336 277.59 li
cp
ef
407.836 237.507 mo
401.668 275.84 li
398.336 277.59 mo
395.002 274.923 li
398.668 275.923 li
398.336 277.59 li
@
405.418 276.173 mo
401.418 277.59 li
401.668 275.84 li
405.418 276.173 li
cp
ef
405.418 276.173 mo
401.418 277.59 li
401.668 275.84 li
405.418 276.173 li
@
401.418 277.59 mo
398.086 275.007 li
401.668 275.84 li
401.418 277.59 li
cp
ef
410.002 237.507 mo
404.752 275.84 li
401.418 277.59 mo
398.086 275.007 li
401.668 275.84 li
401.418 277.59 li
@
408.502 276.09 mo
404.502 277.59 li
404.752 275.84 li
408.502 276.09 li
cp
ef
408.502 276.09 mo
404.502 277.59 li
404.752 275.84 li
408.502 276.09 li
@
404.502 277.59 mo
401.086 275.09 li
404.752 275.84 li
404.502 277.59 li
cp
ef
413.002 237.507 mo
407.586 275.84 li
404.502 277.59 mo
401.086 275.09 li
404.752 275.84 li
404.502 277.59 li
@
411.336 276.09 mo
407.336 277.59 li
407.586 275.84 li
411.336 276.09 li
cp
ef
411.336 276.09 mo
407.336 277.59 li
407.586 275.84 li
411.336 276.09 li
@
407.336 277.59 mo
403.918 275.09 li
407.586 275.84 li
407.336 277.59 li
cp
ef
415.002 237.507 mo
410.586 275.84 li
407.336 277.59 mo
403.918 275.09 li
407.586 275.84 li
407.336 277.59 li
@
414.418 276.007 mo
410.418 277.59 li
410.586 275.84 li
414.418 276.007 li
cp
ef
414.418 276.007 mo
410.418 277.59 li
410.586 275.84 li
414.418 276.007 li
@
410.418 277.59 mo
406.918 275.173 li
410.586 275.84 li
410.418 277.59 li
cp
ef
417.002 237.507 mo
413.086 275.84 li
410.418 277.59 mo
406.918 275.173 li
410.586 275.84 li
410.418 277.59 li
@
416.836 275.923 mo
412.918 277.59 li
413.086 275.84 li
416.836 275.923 li
cp
ef
416.836 275.923 mo
412.918 277.59 li
413.086 275.84 li
416.836 275.923 li
@
412.918 277.59 mo
409.418 275.173 li
413.086 275.84 li
412.918 277.59 li
cp
ef
420.002 237.507 mo
416.502 275.84 li
412.918 277.59 mo
409.418 275.173 li
413.086 275.84 li
412.918 277.59 li
@
420.252 275.923 mo
416.336 277.59 li
416.502 275.84 li
420.252 275.923 li
cp
ef
420.252 275.923 mo
416.336 277.59 li
416.502 275.84 li
420.252 275.923 li
@
416.336 277.59 mo
412.752 275.257 li
416.502 275.84 li
416.336 277.59 li
cp
ef
422.918 237.507 mo
419.252 275.84 li
416.336 277.59 mo
412.752 275.257 li
416.502 275.84 li
416.336 277.59 li
@
423.002 275.923 mo
419.086 277.59 li
419.252 275.84 li
423.002 275.923 li
cp
ef
423.002 275.923 mo
419.086 277.59 li
419.252 275.84 li
423.002 275.923 li
@
419.086 277.59 mo
415.586 275.173 li
419.252 275.84 li
419.086 277.59 li
cp
ef
425.836 237.507 mo
423.002 275.84 li
419.086 277.59 mo
415.586 275.173 li
419.252 275.84 li
419.086 277.59 li
@
426.752 275.84 mo
422.836 277.59 li
423.002 275.84 li
426.752 275.84 li
cp
ef
426.752 275.84 mo
422.836 277.59 li
423.002 275.84 li
426.752 275.84 li
@
422.836 277.59 mo
419.252 275.257 li
423.002 275.84 li
422.836 277.59 li
cp
ef
428.836 237.507 mo
425.752 275.84 li
422.836 277.59 mo
419.252 275.257 li
423.002 275.84 li
422.836 277.59 li
@
429.502 275.84 mo
425.668 277.59 li
425.752 275.84 li
429.502 275.84 li
cp
ef
429.502 275.84 mo
425.668 277.59 li
425.752 275.84 li
429.502 275.84 li
@
425.668 277.59 mo
422.086 275.257 li
425.752 275.84 li
425.668 277.59 li
cp
ef
430.918 237.507 mo
428.502 275.84 li
425.668 277.59 mo
422.086 275.257 li
425.752 275.84 li
425.668 277.59 li
@
432.252 275.757 mo
428.418 277.59 li
428.502 275.84 li
432.252 275.757 li
cp
ef
432.252 275.757 mo
428.418 277.59 li
428.502 275.84 li
432.252 275.757 li
@
428.418 277.59 mo
424.836 275.34 li
428.502 275.84 li
428.418 277.59 li
cp
ef
433.918 237.507 mo
431.668 275.84 li
428.418 277.59 mo
424.836 275.34 li
428.502 275.84 li
428.418 277.59 li
@
435.418 275.757 mo
431.502 277.59 li
431.668 275.84 li
435.418 275.757 li
cp
ef
435.418 275.757 mo
431.502 277.59 li
431.668 275.84 li
435.418 275.757 li
@
431.502 277.59 mo
427.918 275.34 li
431.668 275.84 li
431.502 277.59 li
cp
ef
436.918 237.507 mo
433.502 275.84 li
431.502 277.59 mo
427.918 275.34 li
431.668 275.84 li
431.502 277.59 li
@
437.336 275.923 mo
433.418 277.59 li
433.502 275.84 li
437.336 275.923 li
cp
ef
437.336 275.923 mo
433.418 277.59 li
433.502 275.84 li
437.336 275.923 li
@
433.418 277.59 mo
429.836 275.257 li
433.502 275.84 li
433.418 277.59 li
cp
ef
439.918 237.507 mo
436.336 275.84 li
433.418 277.59 mo
429.836 275.257 li
433.502 275.84 li
433.418 277.59 li
@
440.086 275.923 mo
436.168 277.59 li
436.336 275.84 li
440.086 275.923 li
cp
ef
440.086 275.923 mo
436.168 277.59 li
436.336 275.84 li
440.086 275.923 li
@
436.168 277.59 mo
432.668 275.257 li
436.336 275.84 li
436.168 277.59 li
cp
ef
442.918 237.507 mo
440.002 275.84 li
436.168 277.59 mo
432.668 275.257 li
436.336 275.84 li
436.168 277.59 li
@
443.836 275.84 mo
439.918 277.59 li
440.002 275.84 li
443.836 275.84 li
cp
ef
443.836 275.84 mo
439.918 277.59 li
440.002 275.84 li
443.836 275.84 li
@
439.918 277.59 mo
436.336 275.257 li
440.002 275.84 li
439.918 277.59 li
cp
ef
446.002 237.507 mo
442.918 275.84 li
439.918 277.59 mo
436.336 275.257 li
440.002 275.84 li
439.918 277.59 li
@
446.752 275.84 mo
442.836 277.59 li
442.918 275.84 li
446.752 275.84 li
cp
ef
446.752 275.84 mo
442.836 277.59 li
442.918 275.84 li
446.752 275.84 li
@
442.836 277.59 mo
439.252 275.257 li
442.918 275.84 li
442.836 277.59 li
cp
ef
451.086 237.507 mo
445.586 275.84 li
442.836 277.59 mo
439.252 275.257 li
442.918 275.84 li
442.836 277.59 li
@
449.336 276.09 mo
445.336 277.59 li
445.586 275.84 li
449.336 276.09 li
cp
ef
449.336 276.09 mo
445.336 277.59 li
445.586 275.84 li
449.336 276.09 li
@
445.336 277.59 mo
441.918 275.007 li
445.586 275.84 li
445.336 277.59 li
cp
ef
454.168 237.507 mo
448.668 275.84 li
445.336 277.59 mo
441.918 275.007 li
445.586 275.84 li
445.336 277.59 li
@
452.418 276.09 mo
448.418 277.59 li
448.668 275.84 li
452.418 276.09 li
cp
ef
452.418 276.09 mo
448.418 277.59 li
448.668 275.84 li
452.418 276.09 li
@
448.418 277.59 mo
445.002 275.007 li
448.668 275.84 li
448.418 277.59 li
cp
ef
456.336 237.507 mo
450.836 275.84 li
448.418 277.59 mo
445.002 275.007 li
448.668 275.84 li
448.418 277.59 li
@
454.586 276.09 mo
450.586 277.59 li
450.836 275.84 li
454.586 276.09 li
cp
ef
454.586 276.09 mo
450.586 277.59 li
450.836 275.84 li
454.586 276.09 li
@
450.586 277.59 mo
447.168 275.007 li
450.836 275.84 li
450.586 277.59 li
cp
ef
459.418 237.507 mo
454.252 275.84 li
450.586 277.59 mo
447.168 275.007 li
450.836 275.84 li
450.586 277.59 li
@
458.002 276.09 mo
454.002 277.59 li
454.252 275.84 li
458.002 276.09 li
cp
ef
458.002 276.09 mo
454.002 277.59 li
454.252 275.84 li
458.002 276.09 li
@
454.002 277.59 mo
450.502 275.09 li
454.252 275.84 li
454.002 277.59 li
cp
ef
461.502 237.507 mo
457.836 275.84 li
454.002 277.59 mo
450.502 275.09 li
454.252 275.84 li
454.002 277.59 li
@
461.668 275.923 mo
457.752 277.59 li
457.836 275.84 li
461.668 275.923 li
cp
ef
461.668 275.923 mo
457.752 277.59 li
457.836 275.84 li
461.668 275.923 li
@
457.752 277.59 mo
454.168 275.173 li
457.836 275.84 li
457.752 277.59 li
cp
ef
463.668 237.507 mo
460.918 275.84 li
457.752 277.59 mo
454.168 275.173 li
457.836 275.84 li
457.752 277.59 li
@
464.668 275.84 mo
460.836 277.59 li
460.918 275.84 li
464.668 275.84 li
cp
ef
464.668 275.84 mo
460.836 277.59 li
460.918 275.84 li
464.668 275.84 li
@
460.836 277.59 mo
457.252 275.257 li
460.918 275.84 li
460.836 277.59 li
cp
ef
465.836 237.507 mo
463.668 275.84 li
460.836 277.59 mo
457.252 275.257 li
460.918 275.84 li
460.836 277.59 li
@
467.502 275.757 mo
463.586 277.59 li
463.668 275.84 li
467.502 275.757 li
cp
ef
467.502 275.757 mo
463.586 277.59 li
463.668 275.84 li
467.502 275.757 li
@
463.586 277.59 mo
460.002 275.34 li
463.668 275.84 li
463.586 277.59 li
cp
ef
467.918 237.507 mo
466.502 275.84 li
463.586 277.59 mo
460.002 275.34 li
463.668 275.84 li
463.586 277.59 li
@
470.252 275.673 mo
466.418 277.59 li
466.502 275.84 li
470.252 275.673 li
cp
ef
470.252 275.673 mo
466.418 277.59 li
466.502 275.84 li
470.252 275.673 li
@
466.418 277.59 mo
462.752 275.423 li
466.502 275.84 li
466.418 277.59 li
cp
ef
470.918 237.507 mo
469.002 275.84 li
466.418 277.59 mo
462.752 275.423 li
466.502 275.84 li
466.418 277.59 li
@
472.752 275.757 mo
468.918 277.59 li
469.002 275.84 li
472.752 275.757 li
cp
ef
472.752 275.757 mo
468.918 277.59 li
469.002 275.84 li
472.752 275.757 li
@
468.918 277.59 mo
465.252 275.34 li
469.002 275.84 li
468.918 277.59 li
cp
ef
473.918 237.507 mo
473.002 275.84 li
468.918 277.59 mo
465.252 275.34 li
469.002 275.84 li
468.918 277.59 li
@
476.752 275.673 mo
472.918 277.59 li
473.002 275.84 li
476.752 275.673 li
cp
ef
476.752 275.673 mo
472.918 277.59 li
473.002 275.84 li
476.752 275.673 li
@
472.918 277.59 mo
469.252 275.423 li
473.002 275.84 li
472.918 277.59 li
cp
ef
478.418 237.507 mo
476.086 275.84 li
472.918 277.59 mo
469.252 275.423 li
473.002 275.84 li
472.918 277.59 li
@
479.918 275.757 mo
476.002 277.59 li
476.086 275.84 li
479.918 275.757 li
cp
ef
479.918 275.757 mo
476.002 277.59 li
476.086 275.84 li
479.918 275.757 li
@
476.002 277.59 mo
472.418 275.34 li
476.086 275.84 li
476.002 277.59 li
cp
ef
481.418 237.507 mo
478.918 275.84 li
476.002 277.59 mo
472.418 275.34 li
476.086 275.84 li
476.002 277.59 li
@
482.668 275.84 mo
478.836 277.59 li
478.918 275.84 li
482.668 275.84 li
cp
ef
482.668 275.84 mo
478.836 277.59 li
478.918 275.84 li
482.668 275.84 li
@
478.836 277.59 mo
475.168 275.34 li
478.918 275.84 li
478.836 277.59 li
cp
ef
484.418 237.507 mo
481.752 275.84 li
478.836 277.59 mo
475.168 275.34 li
478.918 275.84 li
478.836 277.59 li
@
485.502 275.84 mo
481.586 277.59 li
481.752 275.84 li
485.502 275.84 li
cp
ef
485.502 275.84 mo
481.586 277.59 li
481.752 275.84 li
485.502 275.84 li
@
481.586 277.59 mo
478.002 275.34 li
481.752 275.84 li
481.586 277.59 li
cp
ef
487.502 237.507 mo
484.836 275.84 li
481.586 277.59 mo
478.002 275.34 li
481.752 275.84 li
481.586 277.59 li
@
488.586 275.84 mo
484.668 277.59 li
484.836 275.84 li
488.586 275.84 li
cp
ef
488.586 275.84 mo
484.668 277.59 li
484.836 275.84 li
488.586 275.84 li
@
484.668 277.59 mo
481.086 275.34 li
484.836 275.84 li
484.668 277.59 li
cp
ef
490.586 237.507 mo
487.668 275.84 li
484.668 277.59 mo
481.086 275.34 li
484.836 275.84 li
484.668 277.59 li
@
491.418 275.84 mo
487.502 277.59 li
487.668 275.84 li
491.418 275.84 li
cp
ef
491.418 275.84 mo
487.502 277.59 li
487.668 275.84 li
491.418 275.84 li
@
487.502 277.59 mo
483.918 275.257 li
487.668 275.84 li
487.502 277.59 li
cp
ef
493.586 237.507 mo
491.002 275.84 li
487.502 277.59 mo
483.918 275.257 li
487.668 275.84 li
487.502 277.59 li
@
494.752 275.84 mo
490.918 277.59 li
491.002 275.84 li
494.752 275.84 li
cp
ef
494.752 275.84 mo
490.918 277.59 li
491.002 275.84 li
494.752 275.84 li
@
490.918 277.59 mo
487.336 275.34 li
491.002 275.84 li
490.918 277.59 li
cp
ef
495.752 237.507 mo
493.752 275.84 li
490.918 277.59 mo
487.336 275.34 li
491.002 275.84 li
490.918 277.59 li
@
497.586 275.757 mo
493.668 277.59 li
493.752 275.84 li
497.586 275.757 li
cp
ef
497.586 275.757 mo
493.668 277.59 li
493.752 275.84 li
497.586 275.757 li
@
493.668 277.59 mo
490.086 275.34 li
493.752 275.84 li
493.668 277.59 li
cp
ef
498.752 237.507 mo
497.002 275.84 li
493.668 277.59 mo
490.086 275.34 li
493.752 275.84 li
493.668 277.59 li
@
500.752 275.757 mo
496.918 277.59 li
497.002 275.84 li
500.752 275.757 li
cp
ef
500.752 275.757 mo
496.918 277.59 li
497.002 275.84 li
500.752 275.757 li
@
496.918 277.59 mo
493.252 275.423 li
497.002 275.84 li
496.918 277.59 li
cp
ef
501.836 237.507 mo
500.086 275.84 li
496.918 277.59 mo
493.252 275.423 li
497.002 275.84 li
496.918 277.59 li
@
503.836 275.757 mo
500.002 277.59 li
500.086 275.84 li
503.836 275.757 li
cp
ef
503.836 275.757 mo
500.002 277.59 li
500.086 275.84 li
503.836 275.757 li
@
500.002 277.59 mo
496.336 275.423 li
500.086 275.84 li
500.002 277.59 li
cp
ef
504.918 237.507 mo
502.252 275.84 li
500.002 277.59 mo
496.336 275.423 li
500.086 275.84 li
500.002 277.59 li
@
506.002 275.84 mo
502.168 277.59 li
502.252 275.84 li
506.002 275.84 li
cp
ef
506.002 275.84 mo
502.168 277.59 li
502.252 275.84 li
506.002 275.84 li
@
502.168 277.59 mo
498.586 275.34 li
502.252 275.84 li
502.168 277.59 li
cp
ef
507.918 237.507 mo
504.502 275.84 li
502.168 277.59 mo
498.586 275.34 li
502.252 275.84 li
502.168 277.59 li
@
508.252 275.923 mo
504.336 277.59 li
504.502 275.84 li
508.252 275.923 li
cp
ef
508.252 275.923 mo
504.336 277.59 li
504.502 275.84 li
508.252 275.923 li
@
504.336 277.59 mo
500.752 275.257 li
504.502 275.84 li
504.336 277.59 li
cp
ef
510.086 237.507 mo
507.586 275.84 li
504.336 277.59 mo
500.752 275.257 li
504.502 275.84 li
504.336 277.59 li
@
511.336 275.84 mo
507.418 277.59 li
507.586 275.84 li
511.336 275.84 li
cp
ef
511.336 275.84 mo
507.418 277.59 li
507.586 275.84 li
511.336 275.84 li
@
507.418 277.59 mo
503.836 275.34 li
507.586 275.84 li
507.418 277.59 li
cp
ef
513.168 237.507 mo
510.086 275.84 li
507.418 277.59 mo
503.836 275.34 li
507.586 275.84 li
507.418 277.59 li
@
513.836 275.84 mo
509.918 277.59 li
510.086 275.84 li
513.836 275.84 li
cp
ef
513.836 275.84 mo
509.918 277.59 li
510.086 275.84 li
513.836 275.84 li
@
509.918 277.59 mo
506.336 275.257 li
510.086 275.84 li
509.918 277.59 li
cp
ef
515.418 237.507 mo
513.418 275.84 li
509.918 277.59 mo
506.336 275.257 li
510.086 275.84 li
509.918 277.59 li
@
517.168 275.757 mo
513.336 277.59 li
513.418 275.84 li
517.168 275.757 li
cp
ef
517.168 275.757 mo
513.336 277.59 li
513.418 275.84 li
517.168 275.757 li
@
513.336 277.59 mo
509.668 275.34 li
513.418 275.84 li
513.336 277.59 li
cp
ef
518.502 237.507 mo
515.668 275.84 li
513.336 277.59 mo
509.668 275.34 li
513.418 275.84 li
513.336 277.59 li
@
519.418 275.84 mo
515.502 277.59 li
515.668 275.84 li
519.418 275.84 li
cp
ef
519.418 275.84 mo
515.502 277.59 li
515.668 275.84 li
519.418 275.84 li
@
515.502 277.59 mo
511.918 275.257 li
515.668 275.84 li
515.502 277.59 li
cp
ef
521.586 237.507 mo
518.752 275.84 li
515.502 277.59 mo
511.918 275.257 li
515.668 275.84 li
515.502 277.59 li
@
522.502 275.84 mo
518.586 277.59 li
518.752 275.84 li
522.502 275.84 li
cp
ef
522.502 275.84 mo
518.586 277.59 li
518.752 275.84 li
522.502 275.84 li
@
518.586 277.59 mo
515.002 275.257 li
518.752 275.84 li
518.586 277.59 li
cp
ef
524.752 237.507 mo
521.252 275.84 li
518.586 277.59 mo
515.002 275.257 li
518.752 275.84 li
518.586 277.59 li
@
525.002 275.923 mo
521.086 277.59 li
521.252 275.84 li
525.002 275.923 li
cp
ef
525.002 275.923 mo
521.086 277.59 li
521.252 275.84 li
525.002 275.923 li
@
521.086 277.59 mo
517.502 275.257 li
521.252 275.84 li
521.086 277.59 li
cp
ef
527.836 237.507 mo
525.252 275.84 li
521.086 277.59 mo
517.502 275.257 li
521.252 275.84 li
521.086 277.59 li
@
529.002 275.84 mo
525.086 277.59 li
525.252 275.84 li
529.002 275.84 li
cp
ef
529.002 275.84 mo
525.086 277.59 li
525.252 275.84 li
529.002 275.84 li
@
525.086 277.59 mo
521.502 275.34 li
525.252 275.84 li
525.086 277.59 li
cp
ef
529.918 237.507 mo
527.418 275.84 li
525.086 277.59 mo
521.502 275.34 li
525.252 275.84 li
525.086 277.59 li
@
531.168 275.84 mo
527.336 277.59 li
527.418 275.84 li
531.168 275.84 li
cp
ef
531.168 275.84 mo
527.336 277.59 li
527.418 275.84 li
531.168 275.84 li
@
527.336 277.59 mo
523.668 275.34 li
527.418 275.84 li
527.336 277.59 li
cp
ef
532.002 237.507 mo
530.168 275.84 li
527.336 277.59 mo
523.668 275.34 li
527.418 275.84 li
527.336 277.59 li
@
533.918 275.757 mo
530.086 277.59 li
530.168 275.84 li
533.918 275.757 li
cp
ef
533.918 275.757 mo
530.086 277.59 li
530.168 275.84 li
533.918 275.757 li
@
530.086 277.59 mo
526.418 275.423 li
530.168 275.84 li
530.086 277.59 li
cp
ef
535.002 237.507 mo
532.668 275.84 li
530.086 277.59 mo
526.418 275.423 li
530.168 275.84 li
530.086 277.59 li
@
536.418 275.757 mo
532.586 277.59 li
532.668 275.84 li
536.418 275.757 li
cp
ef
536.418 275.757 mo
532.586 277.59 li
532.668 275.84 li
536.418 275.757 li
@
532.586 277.59 mo
528.918 275.34 li
532.668 275.84 li
532.586 277.59 li
cp
ef
538.002 237.507 mo
535.752 275.84 li
532.586 277.59 mo
528.918 275.34 li
532.668 275.84 li
532.586 277.59 li
@
539.502 275.757 mo
535.668 277.59 li
535.752 275.84 li
539.502 275.757 li
cp
ef
539.502 275.757 mo
535.668 277.59 li
535.752 275.84 li
539.502 275.757 li
@
535.668 277.59 mo
532.002 275.34 li
535.752 275.84 li
535.668 277.59 li
cp
ef
541.002 237.507 mo
538.252 275.84 li
535.668 277.59 mo
532.002 275.34 li
535.752 275.84 li
535.668 277.59 li
@
542.002 275.84 mo
538.168 277.59 li
538.252 275.84 li
542.002 275.84 li
cp
ef
542.002 275.84 mo
538.168 277.59 li
538.252 275.84 li
542.002 275.84 li
@
538.168 277.59 mo
534.586 275.34 li
538.252 275.84 li
538.168 277.59 li
cp
ef
543.086 237.507 mo
541.918 275.84 li
538.168 277.59 mo
534.586 275.34 li
538.252 275.84 li
538.168 277.59 li
@
545.668 275.673 mo
541.836 277.59 li
541.918 275.84 li
545.668 275.673 li
cp
ef
545.668 275.673 mo
541.836 277.59 li
541.918 275.84 li
545.668 275.673 li
@
541.836 277.59 mo
538.168 275.423 li
541.918 275.84 li
541.836 277.59 li
cp
ef
546.086 237.507 mo
544.752 275.84 li
541.836 277.59 mo
538.168 275.423 li
541.918 275.84 li
541.836 277.59 li
@
548.502 275.673 mo
544.668 277.59 li
544.752 275.84 li
548.502 275.673 li
cp
ef
548.502 275.673 mo
544.668 277.59 li
544.752 275.84 li
548.502 275.673 li
@
544.668 277.59 mo
541.002 275.423 li
544.752 275.84 li
544.668 277.59 li
cp
ef
549.086 237.507 mo
548.418 275.84 li
544.668 277.59 mo
541.002 275.423 li
544.752 275.84 li
544.668 277.59 li
@
552.168 275.59 mo
548.418 277.59 li
548.418 275.84 li
552.168 275.59 li
cp
ef
552.168 275.59 mo
548.418 277.59 li
548.418 275.84 li
552.168 275.59 li
@
548.418 277.59 mo
544.668 275.507 li
548.418 275.84 li
548.418 277.59 li
cp
ef
551.168 237.507 mo
551.168 275.84 li
548.418 277.59 mo
544.668 275.507 li
548.418 275.84 li
548.418 277.59 li
@
554.918 275.59 mo
551.168 277.59 li
551.168 275.84 li
554.918 275.59 li
cp
ef
554.918 275.59 mo
551.168 277.59 li
551.168 275.84 li
554.918 275.59 li
@
551.168 277.59 mo
547.418 275.59 li
551.168 275.84 li
551.168 277.59 li
cp
ef
553.252 237.507 mo
553.086 275.84 li
551.168 277.59 mo
547.418 275.59 li
551.168 275.84 li
551.168 277.59 li
@
556.836 275.59 mo
553.086 277.59 li
553.086 275.84 li
556.836 275.59 li
cp
ef
556.836 275.59 mo
553.086 277.59 li
553.086 275.84 li
556.836 275.59 li
@
553.086 277.59 mo
549.336 275.507 li
553.086 275.84 li
553.086 277.59 li
cp
ef
556.252 237.507 mo
556.418 275.84 li
553.086 277.59 mo
549.336 275.507 li
553.086 275.84 li
553.086 277.59 li
@
560.168 275.507 mo
556.418 277.59 li
556.418 275.84 li
560.168 275.507 li
cp
ef
560.168 275.507 mo
556.418 277.59 li
556.418 275.84 li
560.168 275.507 li
@
556.418 277.59 mo
552.668 275.59 li
556.418 275.84 li
556.418 277.59 li
cp
ef
558.418 237.507 mo
559.502 275.84 li
556.418 277.59 mo
552.668 275.59 li
556.418 275.84 li
556.418 277.59 li
@
563.252 275.423 mo
559.586 277.59 li
559.502 275.84 li
563.252 275.423 li
cp
ef
563.252 275.423 mo
559.586 277.59 li
559.502 275.84 li
563.252 275.423 li
@
559.586 277.59 mo
555.752 275.673 li
559.502 275.84 li
559.586 277.59 li
cp
ef
561.418 237.507 mo
561.502 275.84 li
559.586 277.59 mo
555.752 275.673 li
559.502 275.84 li
559.586 277.59 li
@
565.252 275.507 mo
561.586 277.59 li
561.502 275.84 li
565.252 275.507 li
cp
ef
565.252 275.507 mo
561.586 277.59 li
561.502 275.84 li
565.252 275.507 li
@
561.586 277.59 mo
557.752 275.59 li
561.502 275.84 li
561.586 277.59 li
cp
ef
564.418 237.507 mo
564.918 275.84 li
561.586 277.59 mo
557.752 275.59 li
561.502 275.84 li
561.586 277.59 li
@
568.668 275.507 mo
565.002 277.59 li
564.918 275.84 li
568.668 275.507 li
cp
ef
568.668 275.507 mo
565.002 277.59 li
564.918 275.84 li
568.668 275.507 li
@
565.002 277.59 mo
561.168 275.59 li
564.918 275.84 li
565.002 277.59 li
cp
ef
567.502 237.507 mo
568.002 275.84 li
565.002 277.59 mo
561.168 275.59 li
564.918 275.84 li
565.002 277.59 li
@
571.752 275.507 mo
568.086 277.59 li
568.002 275.84 li
571.752 275.507 li
cp
ef
571.752 275.507 mo
568.086 277.59 li
568.002 275.84 li
571.752 275.507 li
@
568.086 277.59 mo
564.252 275.59 li
568.002 275.84 li
568.086 277.59 li
cp
ef
570.586 237.507 mo
570.586 275.84 li
568.086 277.59 mo
564.252 275.59 li
568.002 275.84 li
568.086 277.59 li
@
574.336 275.59 mo
570.586 277.59 li
570.586 275.84 li
574.336 275.59 li
cp
ef
574.336 275.59 mo
570.586 277.59 li
570.586 275.84 li
574.336 275.59 li
@
570.586 277.59 mo
566.836 275.59 li
570.586 275.84 li
570.586 277.59 li
cp
ef
573.586 237.507 mo
573.918 275.84 li
570.586 277.59 mo
566.836 275.59 li
570.586 275.84 li
570.586 277.59 li
@
577.668 275.507 mo
573.918 277.59 li
573.918 275.84 li
577.668 275.507 li
cp
ef
577.668 275.507 mo
573.918 277.59 li
573.918 275.84 li
577.668 275.507 li
@
573.918 277.59 mo
570.168 275.59 li
573.918 275.84 li
573.918 277.59 li
cp
ef
576.586 237.507 mo
577.002 275.84 li
573.918 277.59 mo
570.168 275.59 li
573.918 275.84 li
573.918 277.59 li
@
580.752 275.507 mo
577.086 277.59 li
577.002 275.84 li
580.752 275.507 li
cp
ef
580.752 275.507 mo
577.086 277.59 li
577.002 275.84 li
580.752 275.507 li
@
577.086 277.59 mo
573.252 275.59 li
577.002 275.84 li
577.086 277.59 li
cp
ef
579.586 237.507 mo
579.252 275.84 li
577.086 277.59 mo
573.252 275.59 li
577.002 275.84 li
577.086 277.59 li
@
583.002 275.59 mo
579.252 277.59 li
579.252 275.84 li
583.002 275.59 li
cp
ef
583.002 275.59 mo
579.252 277.59 li
579.252 275.84 li
583.002 275.59 li
@
579.252 277.59 mo
575.502 275.507 li
579.252 275.84 li
579.252 277.59 li
cp
ef
582.668 237.507 mo
582.668 275.84 li
579.252 277.59 mo
575.502 275.507 li
579.252 275.84 li
579.252 277.59 li
@
586.418 275.59 mo
582.668 277.59 li
582.668 275.84 li
586.418 275.59 li
cp
ef
586.418 275.59 mo
582.668 277.59 li
582.668 275.84 li
586.418 275.59 li
@
582.668 277.59 mo
578.918 275.59 li
582.668 275.84 li
582.668 277.59 li
cp
ef
585.752 237.507 mo
586.086 275.84 li
582.668 277.59 mo
578.918 275.59 li
582.668 275.84 li
582.668 277.59 li
@
589.752 275.507 mo
586.086 277.59 li
586.086 275.84 li
589.752 275.507 li
cp
ef
589.752 275.507 mo
586.086 277.59 li
586.086 275.84 li
589.752 275.507 li
@
586.086 277.59 mo
582.336 275.59 li
586.086 275.84 li
586.086 277.59 li
cp
ef
588.752 237.507 mo
587.918 275.84 li
586.086 277.59 mo
582.336 275.59 li
586.086 275.84 li
586.086 277.59 li
@
591.752 275.673 mo
587.918 277.59 li
587.918 275.84 li
591.752 275.673 li
cp
ef
591.752 275.673 mo
587.918 277.59 li
587.918 275.84 li
591.752 275.673 li
@
587.918 277.59 mo
584.252 275.507 li
587.918 275.84 li
587.918 277.59 li
cp
ef
591.836 237.507 mo
591.668 275.84 li
587.918 277.59 mo
584.252 275.507 li
587.918 275.84 li
587.918 277.59 li
@
595.418 275.59 mo
591.668 277.59 li
591.668 275.84 li
595.418 275.59 li
cp
ef
595.418 275.59 mo
591.668 277.59 li
591.668 275.84 li
595.418 275.59 li
@
591.668 277.59 mo
587.918 275.507 li
591.668 275.84 li
591.668 277.59 li
cp
ef
594.918 237.507 mo
594.168 275.84 li
591.668 277.59 mo
587.918 275.507 li
591.668 275.84 li
591.668 277.59 li
@
597.918 275.673 mo
594.168 277.59 li
594.168 275.84 li
597.918 275.673 li
cp
ef
597.918 275.673 mo
594.168 277.59 li
594.168 275.84 li
597.918 275.673 li
@
594.168 277.59 mo
590.418 275.507 li
594.168 275.84 li
594.168 277.59 li
cp
ef
598.002 237.507 mo
597.252 275.84 li
594.168 277.59 mo
590.418 275.507 li
594.168 275.84 li
594.168 277.59 li
@
601.002 275.59 mo
597.252 277.59 li
597.252 275.84 li
601.002 275.59 li
cp
ef
601.002 275.59 mo
597.252 277.59 li
597.252 275.84 li
601.002 275.59 li
@
597.252 277.59 mo
593.502 275.507 li
597.252 275.84 li
597.252 277.59 li
cp
ef
603.086 237.507 mo
599.836 275.84 li
597.252 277.59 mo
593.502 275.507 li
597.252 275.84 li
597.252 277.59 li
@
603.586 275.84 mo
599.752 277.59 li
599.836 275.84 li
603.586 275.84 li
cp
ef
603.586 275.84 mo
599.752 277.59 li
599.836 275.84 li
603.586 275.84 li
@
599.752 277.59 mo
596.168 275.257 li
599.836 275.84 li
599.752 277.59 li
cp
ef
606.086 237.507 mo
603.668 275.84 li
599.752 277.59 mo
596.168 275.257 li
599.836 275.84 li
599.752 277.59 li
@
607.502 275.757 mo
603.586 277.59 li
603.668 275.84 li
607.502 275.757 li
cp
ef
607.502 275.757 mo
603.586 277.59 li
603.668 275.84 li
607.502 275.757 li
@
603.586 277.59 mo
600.002 275.34 li
603.668 275.84 li
603.586 277.59 li
cp
ef
609.086 237.507 mo
605.418 275.84 li
603.586 277.59 mo
600.002 275.34 li
603.668 275.84 li
603.586 277.59 li
@
609.252 275.923 mo
605.336 277.59 li
605.418 275.84 li
609.252 275.923 li
cp
ef
609.252 275.923 mo
605.336 277.59 li
605.418 275.84 li
609.252 275.923 li
@
605.336 277.59 mo
601.752 275.173 li
605.418 275.84 li
605.336 277.59 li
cp
ef
611.252 237.507 mo
608.252 275.84 li
605.336 277.59 mo
601.752 275.173 li
605.418 275.84 li
605.336 277.59 li
@
612.002 275.84 mo
608.086 277.59 li
608.252 275.84 li
612.002 275.84 li
cp
ef
612.002 275.84 mo
608.086 277.59 li
608.252 275.84 li
612.002 275.84 li
@
608.086 277.59 mo
604.502 275.257 li
608.252 275.84 li
608.086 277.59 li
cp
ef
614.252 237.507 mo
611.586 275.84 li
608.086 277.59 mo
604.502 275.257 li
608.252 275.84 li
608.086 277.59 li
@
615.418 275.84 mo
611.502 277.59 li
611.586 275.84 li
615.418 275.84 li
cp
ef
615.418 275.84 mo
611.502 277.59 li
611.586 275.84 li
615.418 275.84 li
@
611.502 277.59 mo
607.918 275.34 li
611.586 275.84 li
611.502 277.59 li
cp
ef
617.252 237.507 mo
614.418 275.84 li
611.502 277.59 mo
607.918 275.34 li
611.586 275.84 li
611.502 277.59 li
@
618.168 275.84 mo
614.336 277.59 li
614.418 275.84 li
618.168 275.84 li
cp
ef
618.168 275.84 mo
614.336 277.59 li
614.418 275.84 li
618.168 275.84 li
@
614.336 277.59 mo
610.668 275.257 li
614.418 275.84 li
614.336 277.59 li
cp
ef
620.252 237.507 mo
617.502 275.84 li
614.336 277.59 mo
610.668 275.257 li
614.418 275.84 li
614.336 277.59 li
@
621.252 275.84 mo
617.418 277.59 li
617.502 275.84 li
621.252 275.84 li
cp
ef
621.252 275.84 mo
617.418 277.59 li
617.502 275.84 li
621.252 275.84 li
@
617.418 277.59 mo
613.836 275.257 li
617.502 275.84 li
617.418 277.59 li
cp
ef
623.252 237.507 mo
620.336 275.84 li
617.418 277.59 mo
613.836 275.257 li
617.502 275.84 li
617.418 277.59 li
@
624.086 275.84 mo
620.168 277.59 li
620.336 275.84 li
624.086 275.84 li
cp
ef
624.086 275.84 mo
620.168 277.59 li
620.336 275.84 li
624.086 275.84 li
@
620.168 277.59 mo
616.586 275.257 li
620.336 275.84 li
620.168 277.59 li
cp
ef
625.336 237.507 mo
624.002 275.84 li
620.168 277.59 mo
616.586 275.257 li
620.336 275.84 li
620.168 277.59 li
@
627.752 275.673 mo
623.918 277.59 li
624.002 275.84 li
627.752 275.673 li
cp
ef
627.752 275.673 mo
623.918 277.59 li
624.002 275.84 li
627.752 275.673 li
@
623.918 277.59 mo
620.252 275.423 li
624.002 275.84 li
623.918 277.59 li
cp
ef
628.336 237.507 mo
626.918 275.84 li
623.918 277.59 mo
620.252 275.423 li
624.002 275.84 li
623.918 277.59 li
@
630.668 275.673 mo
626.836 277.59 li
626.918 275.84 li
630.668 275.673 li
cp
ef
630.668 275.673 mo
626.836 277.59 li
626.918 275.84 li
630.668 275.673 li
@
626.836 277.59 mo
623.168 275.423 li
626.918 275.84 li
626.836 277.59 li
cp
ef
630.502 237.507 mo
630.002 275.84 li
626.836 277.59 mo
623.168 275.423 li
626.918 275.84 li
626.836 277.59 li
@
633.752 275.59 mo
630.002 277.59 li
630.002 275.84 li
633.752 275.59 li
cp
ef
633.752 275.59 mo
630.002 277.59 li
630.002 275.84 li
633.752 275.59 li
@
630.002 277.59 mo
626.252 275.507 li
630.002 275.84 li
630.002 277.59 li
cp
ef
633.502 237.507 mo
632.502 275.84 li
630.002 277.59 mo
626.252 275.507 li
630.002 275.84 li
630.002 277.59 li
@
636.252 275.673 mo
632.502 277.59 li
632.502 275.84 li
636.252 275.673 li
cp
ef
636.252 275.673 mo
632.502 277.59 li
632.502 275.84 li
636.252 275.673 li
@
632.502 277.59 mo
628.752 275.507 li
632.502 275.84 li
632.502 277.59 li
cp
ef
635.586 237.507 mo
635.252 275.84 li
632.502 277.59 mo
628.752 275.507 li
632.502 275.84 li
632.502 277.59 li
@
639.002 275.59 mo
635.252 277.59 li
635.252 275.84 li
639.002 275.59 li
cp
ef
639.002 275.59 mo
635.252 277.59 li
635.252 275.84 li
639.002 275.59 li
@
635.252 277.59 mo
631.502 275.507 li
635.252 275.84 li
635.252 277.59 li
cp
ef
637.668 237.507 mo
637.168 275.84 li
635.252 277.59 mo
631.502 275.507 li
635.252 275.84 li
635.252 277.59 li
@
640.918 275.59 mo
637.086 277.59 li
637.168 275.84 li
640.918 275.59 li
cp
ef
640.918 275.59 mo
637.086 277.59 li
637.168 275.84 li
640.918 275.59 li
@
637.086 277.59 mo
633.418 275.507 li
637.168 275.84 li
637.086 277.59 li
cp
ef
640.668 237.507 mo
640.252 275.84 li
637.086 277.59 mo
633.418 275.507 li
637.168 275.84 li
637.086 277.59 li
@
644.002 275.59 mo
640.252 277.59 li
640.252 275.84 li
644.002 275.59 li
cp
ef
644.002 275.59 mo
640.252 277.59 li
640.252 275.84 li
644.002 275.59 li
@
640.252 277.59 mo
636.502 275.507 li
640.252 275.84 li
640.252 277.59 li
cp
ef
133.669 317.59 mo
90.252 278.673 li
640.252 277.59 mo
636.502 275.507 li
640.252 275.84 li
640.252 277.59 li
@
88.002 281.673 mo
89.002 277.59 li
90.252 278.673 li
88.002 281.673 li
cp
ef
88.002 281.673 mo
89.002 277.59 li
90.252 278.673 li
88.002 281.673 li
@
89.002 277.59 mo
93.002 276.09 li
90.252 278.673 li
89.002 277.59 li
cp
ef
138.835 317.59 mo
93.4189 278.673 li
89.002 277.59 mo
93.002 276.09 li
90.252 278.673 li
89.002 277.59 li
@
91.1689 281.673 mo
92.0854 277.59 li
93.4189 278.673 li
91.1689 281.673 li
cp
ef
91.1689 281.673 mo
92.0854 277.59 li
93.4189 278.673 li
91.1689 281.673 li
@
92.0854 277.59 mo
96.0854 276.007 li
93.4189 278.673 li
92.0854 277.59 li
cp
ef
143.169 317.59 mo
98.3354 278.673 li
92.0854 277.59 mo
96.0854 276.007 li
93.4189 278.673 li
92.0854 277.59 li
@
96.0854 281.673 mo
97.0854 277.59 li
98.3354 278.673 li
96.0854 281.673 li
cp
ef
96.0854 281.673 mo
97.0854 277.59 li
98.3354 278.673 li
96.0854 281.673 li
@
97.0854 277.59 mo
101.002 276.007 li
98.3354 278.673 li
97.0854 277.59 li
cp
ef
147.169 317.59 mo
99.252 278.673 li
97.0854 277.59 mo
101.002 276.007 li
98.3354 278.673 li
97.0854 277.59 li
@
97.0854 281.757 mo
97.9189 277.59 li
99.252 278.673 li
97.0854 281.757 li
cp
ef
97.0854 281.757 mo
97.9189 277.59 li
99.252 278.673 li
97.0854 281.757 li
@
97.9189 277.59 mo
101.835 275.923 li
99.252 278.673 li
97.9189 277.59 li
cp
ef
149.419 317.59 mo
101.419 278.673 li
97.9189 277.59 mo
101.835 275.923 li
99.252 278.673 li
97.9189 277.59 li
@
99.252 281.757 mo
100.085 277.59 li
101.419 278.673 li
99.252 281.757 li
cp
ef
99.252 281.757 mo
100.085 277.59 li
101.419 278.673 li
99.252 281.757 li
@
100.085 277.59 mo
104.002 275.923 li
101.419 278.673 li
100.085 277.59 li
cp
ef
152.419 317.59 mo
104.752 278.673 li
100.085 277.59 mo
104.002 275.923 li
101.419 278.673 li
100.085 277.59 li
@
102.585 281.757 mo
103.419 277.59 li
104.752 278.673 li
102.585 281.757 li
cp
ef
102.585 281.757 mo
103.419 277.59 li
104.752 278.673 li
102.585 281.757 li
@
103.419 277.59 mo
107.335 275.923 li
104.752 278.673 li
103.419 277.59 li
cp
ef
153.585 317.59 mo
109.085 278.673 li
103.419 277.59 mo
107.335 275.923 li
104.752 278.673 li
103.419 277.59 li
@
106.835 281.673 mo
107.835 277.59 li
109.085 278.673 li
106.835 281.673 li
cp
ef
106.835 281.673 mo
107.835 277.59 li
109.085 278.673 li
106.835 281.673 li
@
107.835 277.59 mo
111.835 276.09 li
109.085 278.673 li
107.835 277.59 li
cp
ef
158.252 317.59 mo
111.919 278.673 li
107.835 277.59 mo
111.835 276.09 li
109.085 278.673 li
107.835 277.59 li
@
109.669 281.757 mo
110.585 277.59 li
111.919 278.673 li
109.669 281.757 li
cp
ef
109.669 281.757 mo
110.585 277.59 li
111.919 278.673 li
109.669 281.757 li
@
110.585 277.59 mo
114.502 276.007 li
111.919 278.673 li
110.585 277.59 li
cp
ef
161.502 317.59 mo
116.835 278.673 li
110.585 277.59 mo
114.502 276.007 li
111.919 278.673 li
110.585 277.59 li
@
114.585 281.673 mo
115.502 277.59 li
116.835 278.673 li
114.585 281.673 li
cp
ef
114.585 281.673 mo
115.502 277.59 li
116.835 278.673 li
114.585 281.673 li
@
115.502 277.59 mo
119.502 276.007 li
116.835 278.673 li
115.502 277.59 li
cp
ef
164.419 317.59 mo
120.169 278.673 li
115.502 277.59 mo
119.502 276.007 li
116.835 278.673 li
115.502 277.59 li
@
117.919 281.673 mo
118.835 277.59 li
120.169 278.673 li
117.919 281.673 li
cp
ef
117.919 281.673 mo
118.835 277.59 li
120.169 278.673 li
117.919 281.673 li
@
118.835 277.59 mo
122.835 276.09 li
120.169 278.673 li
118.835 277.59 li
cp
ef
167.169 317.59 mo
124.002 278.673 li
118.835 277.59 mo
122.835 276.09 li
120.169 278.673 li
118.835 277.59 li
@
121.669 281.673 mo
122.752 277.59 li
124.002 278.673 li
121.669 281.673 li
cp
ef
121.669 281.673 mo
122.752 277.59 li
124.002 278.673 li
121.669 281.673 li
@
122.752 277.59 mo
126.752 276.09 li
124.002 278.673 li
122.752 277.59 li
cp
ef
171.669 317.59 mo
132.169 278.757 li
122.752 277.59 mo
126.752 276.09 li
124.002 278.673 li
122.752 277.59 li
@
129.752 281.673 mo
131.002 277.59 li
132.169 278.757 li
129.752 281.673 li
cp
ef
129.752 281.673 mo
131.002 277.59 li
132.169 278.757 li
129.752 281.673 li
@
131.002 277.59 mo
135.085 276.257 li
132.169 278.757 li
131.002 277.59 li
cp
ef
174.669 317.59 mo
135.502 278.757 li
131.002 277.59 mo
135.085 276.257 li
132.169 278.757 li
131.002 277.59 li
@
133.085 281.59 mo
134.335 277.59 li
135.502 278.757 li
133.085 281.59 li
cp
ef
133.085 281.59 mo
134.335 277.59 li
135.502 278.757 li
133.085 281.59 li
@
134.335 277.59 mo
138.335 276.34 li
135.502 278.757 li
134.335 277.59 li
cp
ef
179.169 317.59 mo
138.835 278.757 li
134.335 277.59 mo
138.335 276.34 li
135.502 278.757 li
134.335 277.59 li
@
136.419 281.673 mo
137.585 277.59 li
138.835 278.757 li
136.419 281.673 li
cp
ef
136.419 281.673 mo
137.585 277.59 li
138.835 278.757 li
136.419 281.673 li
@
137.585 277.59 mo
141.669 276.257 li
138.835 278.757 li
137.585 277.59 li
cp
ef
183.502 317.59 mo
144.335 278.757 li
137.585 277.59 mo
141.669 276.257 li
138.835 278.757 li
137.585 277.59 li
@
141.919 281.59 mo
143.085 277.59 li
144.335 278.757 li
141.919 281.59 li
cp
ef
141.919 281.59 mo
143.085 277.59 li
144.335 278.757 li
141.919 281.59 li
@
143.085 277.59 mo
147.169 276.34 li
144.335 278.757 li
143.085 277.59 li
cp
ef
187.752 317.59 mo
147.085 278.757 li
143.085 277.59 mo
147.169 276.34 li
144.335 278.757 li
143.085 277.59 li
@
144.752 281.673 mo
145.919 277.59 li
147.085 278.757 li
144.752 281.673 li
cp
ef
144.752 281.673 mo
145.919 277.59 li
147.085 278.757 li
144.752 281.673 li
@
145.919 277.59 mo
149.919 276.257 li
147.085 278.757 li
145.919 277.59 li
cp
ef
192.835 317.59 mo
156.419 278.84 li
145.919 277.59 mo
149.919 276.257 li
147.085 278.757 li
145.919 277.59 li
@
153.919 281.59 mo
155.252 277.59 li
156.419 278.84 li
153.919 281.59 li
cp
ef
153.919 281.59 mo
155.252 277.59 li
156.419 278.84 li
153.919 281.59 li
@
155.252 277.59 mo
159.335 276.423 li
156.419 278.84 li
155.252 277.59 li
cp
ef
195.252 317.59 mo
160.252 278.84 li
155.252 277.59 mo
159.335 276.423 li
156.419 278.84 li
155.252 277.59 li
@
157.669 281.59 mo
159.085 277.59 li
160.252 278.84 li
157.669 281.59 li
cp
ef
157.669 281.59 mo
159.085 277.59 li
160.252 278.84 li
157.669 281.59 li
@
159.085 277.59 mo
163.252 276.507 li
160.252 278.84 li
159.085 277.59 li
cp
ef
199.085 317.59 mo
167.335 278.84 li
159.085 277.59 mo
163.252 276.507 li
160.252 278.84 li
159.085 277.59 li
@
164.669 281.507 mo
166.252 277.59 li
167.335 278.84 li
164.669 281.507 li
cp
ef
164.669 281.507 mo
166.252 277.59 li
167.335 278.84 li
164.669 281.507 li
@
166.252 277.59 mo
170.419 276.757 li
167.335 278.84 li
166.252 277.59 li
cp
ef
202.919 317.59 mo
170.669 278.84 li
166.252 277.59 mo
170.419 276.757 li
167.335 278.84 li
166.252 277.59 li
@
168.002 281.507 mo
169.585 277.59 li
170.669 278.84 li
168.002 281.507 li
cp
ef
168.002 281.507 mo
169.585 277.59 li
170.669 278.84 li
168.002 281.507 li
@
169.585 277.59 mo
173.752 276.673 li
170.669 278.84 li
169.585 277.59 li
cp
ef
205.252 317.59 mo
172.919 278.84 li
169.585 277.59 mo
173.752 276.673 li
170.669 278.84 li
169.585 277.59 li
@
170.252 281.507 mo
171.835 277.59 li
172.919 278.84 li
170.252 281.507 li
cp
ef
170.252 281.507 mo
171.835 277.59 li
172.919 278.84 li
170.252 281.507 li
@
171.835 277.59 mo
176.002 276.673 li
172.919 278.84 li
171.835 277.59 li
cp
ef
208.919 317.59 mo
176.752 278.84 li
171.835 277.59 mo
176.002 276.673 li
172.919 278.84 li
171.835 277.59 li
@
174.085 281.507 mo
175.669 277.59 li
176.752 278.84 li
174.085 281.507 li
cp
ef
174.085 281.507 mo
175.669 277.59 li
176.752 278.84 li
174.085 281.507 li
@
175.669 277.59 mo
179.835 276.673 li
176.752 278.84 li
175.669 277.59 li
cp
ef
212.752 317.59 mo
179.002 278.84 li
175.669 277.59 mo
179.835 276.673 li
176.752 278.84 li
175.669 277.59 li
@
176.419 281.507 mo
177.919 277.59 li
179.002 278.84 li
176.419 281.507 li
cp
ef
176.419 281.507 mo
177.919 277.59 li
179.002 278.84 li
176.419 281.507 li
@
177.919 277.59 mo
182.085 276.59 li
179.002 278.84 li
177.919 277.59 li
cp
ef
217.002 317.59 mo
184.252 278.84 li
177.919 277.59 mo
182.085 276.59 li
179.002 278.84 li
177.919 277.59 li
@
181.585 281.507 mo
183.169 277.59 li
184.252 278.84 li
181.585 281.507 li
cp
ef
181.585 281.507 mo
183.169 277.59 li
184.252 278.84 li
181.585 281.507 li
@
183.169 277.59 mo
187.335 276.673 li
184.252 278.84 li
183.169 277.59 li
cp
ef
221.502 317.59 mo
187.419 278.84 li
183.169 277.59 mo
187.335 276.673 li
184.252 278.84 li
183.169 277.59 li
@
184.752 281.507 mo
186.252 277.59 li
187.419 278.84 li
184.752 281.507 li
cp
ef
184.752 281.507 mo
186.252 277.59 li
187.419 278.84 li
184.752 281.507 li
@
186.252 277.59 mo
190.419 276.59 li
187.419 278.84 li
186.252 277.59 li
cp
ef
225.669 317.59 mo
193.002 278.84 li
186.252 277.59 mo
190.419 276.59 li
187.419 278.84 li
186.252 277.59 li
@
190.335 281.507 mo
191.835 277.59 li
193.002 278.84 li
190.335 281.507 li
cp
ef
190.335 281.507 mo
191.835 277.59 li
193.002 278.84 li
190.335 281.507 li
@
191.835 277.59 mo
196.002 276.673 li
193.002 278.84 li
191.835 277.59 li
cp
ef
228.835 317.59 mo
195.169 278.84 li
191.835 277.59 mo
196.002 276.673 li
193.002 278.84 li
191.835 277.59 li
@
192.502 281.507 mo
194.002 277.59 li
195.169 278.84 li
192.502 281.507 li
cp
ef
192.502 281.507 mo
194.002 277.59 li
195.169 278.84 li
192.502 281.507 li
@
194.002 277.59 mo
198.169 276.59 li
195.169 278.84 li
194.002 277.59 li
cp
ef
232.585 317.59 mo
198.002 278.84 li
194.002 277.59 mo
198.169 276.59 li
195.169 278.84 li
194.002 277.59 li
@
195.335 281.59 mo
196.835 277.59 li
198.002 278.84 li
195.335 281.59 li
cp
ef
195.335 281.59 mo
196.835 277.59 li
198.002 278.84 li
195.335 281.59 li
@
196.835 277.59 mo
201.002 276.59 li
198.002 278.84 li
196.835 277.59 li
cp
ef
235.835 317.59 mo
202.252 278.84 li
196.835 277.59 mo
201.002 276.59 li
198.002 278.84 li
196.835 277.59 li
@
199.669 281.507 mo
201.169 277.59 li
202.252 278.84 li
199.669 281.507 li
cp
ef
199.669 281.507 mo
201.169 277.59 li
202.252 278.84 li
199.669 281.507 li
@
201.169 277.59 mo
205.335 276.59 li
202.252 278.84 li
201.169 277.59 li
cp
ef
238.419 317.59 mo
208.419 278.923 li
201.169 277.59 mo
205.335 276.59 li
202.252 278.84 li
201.169 277.59 li
@
205.669 281.423 mo
207.419 277.59 li
208.419 278.923 li
205.669 281.423 li
cp
ef
205.669 281.423 mo
207.419 277.59 li
208.419 278.923 li
205.669 281.423 li
@
207.419 277.59 mo
211.585 276.84 li
208.419 278.923 li
207.419 277.59 li
cp
ef
242.085 317.59 mo
211.835 278.923 li
207.419 277.59 mo
211.585 276.84 li
208.419 278.923 li
207.419 277.59 li
@
209.085 281.423 mo
210.835 277.59 li
211.835 278.923 li
209.085 281.423 li
cp
ef
209.085 281.423 mo
210.835 277.59 li
211.835 278.923 li
209.085 281.423 li
@
210.835 277.59 mo
215.002 276.84 li
211.835 278.923 li
210.835 277.59 li
cp
ef
245.335 317.59 mo
213.419 278.84 li
210.835 277.59 mo
215.002 276.84 li
211.835 278.923 li
210.835 277.59 li
@
210.752 281.507 mo
212.335 277.59 li
213.419 278.84 li
210.752 281.507 li
cp
ef
210.752 281.507 mo
212.335 277.59 li
213.419 278.84 li
210.752 281.507 li
@
212.335 277.59 mo
216.502 276.757 li
213.419 278.84 li
212.335 277.59 li
cp
ef
248.502 317.59 mo
216.252 278.84 li
212.335 277.59 mo
216.502 276.757 li
213.419 278.84 li
212.335 277.59 li
@
213.502 281.507 mo
215.169 277.59 li
216.252 278.84 li
213.502 281.507 li
cp
ef
213.502 281.507 mo
215.169 277.59 li
216.252 278.84 li
213.502 281.507 li
@
215.169 277.59 mo
219.335 276.673 li
216.252 278.84 li
215.169 277.59 li
cp
ef
251.502 317.59 mo
219.669 278.84 li
215.169 277.59 mo
219.335 276.673 li
216.252 278.84 li
215.169 277.59 li
@
216.919 281.507 mo
218.585 277.59 li
219.669 278.84 li
216.919 281.507 li
cp
ef
216.919 281.507 mo
218.585 277.59 li
219.669 278.84 li
216.919 281.507 li
@
218.585 277.59 mo
222.752 276.757 li
219.669 278.84 li
218.585 277.59 li
cp
ef
254.335 317.59 mo
223.169 278.923 li
218.585 277.59 mo
222.752 276.757 li
219.669 278.84 li
218.585 277.59 li
@
220.419 281.507 mo
222.085 277.59 li
223.169 278.923 li
220.419 281.507 li
cp
ef
220.419 281.507 mo
222.085 277.59 li
223.169 278.923 li
220.419 281.507 li
@
222.085 277.59 mo
226.252 276.757 li
223.169 278.923 li
222.085 277.59 li
cp
ef
256.669 317.59 mo
225.085 278.84 li
222.085 277.59 mo
226.252 276.757 li
223.169 278.923 li
222.085 277.59 li
@
222.335 281.507 mo
224.002 277.59 li
225.085 278.84 li
222.335 281.507 li
cp
ef
222.335 281.507 mo
224.002 277.59 li
225.085 278.84 li
222.335 281.507 li
@
224.002 277.59 mo
228.169 276.757 li
225.085 278.84 li
224.002 277.59 li
cp
ef
259.169 317.59 mo
228.169 278.923 li
224.002 277.59 mo
228.169 276.757 li
225.085 278.84 li
224.002 277.59 li
@
225.419 281.423 mo
227.085 277.59 li
228.169 278.923 li
225.419 281.423 li
cp
ef
225.419 281.423 mo
227.085 277.59 li
228.169 278.923 li
225.419 281.423 li
@
227.085 277.59 mo
231.252 276.757 li
228.169 278.923 li
227.085 277.59 li
cp
ef
265.585 317.59 mo
234.919 278.923 li
227.085 277.59 mo
231.252 276.757 li
228.169 278.923 li
227.085 277.59 li
@
232.169 281.423 mo
233.919 277.59 li
234.919 278.923 li
232.169 281.423 li
cp
ef
232.169 281.423 mo
233.919 277.59 li
234.919 278.923 li
232.169 281.423 li
@
233.919 277.59 mo
238.085 276.84 li
234.919 278.923 li
233.919 277.59 li
cp
ef
269.169 317.59 mo
237.419 278.84 li
233.919 277.59 mo
238.085 276.84 li
234.919 278.923 li
233.919 277.59 li
@
234.752 281.507 mo
236.419 277.59 li
237.419 278.84 li
234.752 281.507 li
cp
ef
234.752 281.507 mo
236.419 277.59 li
237.419 278.84 li
234.752 281.507 li
@
236.419 277.59 mo
240.585 276.757 li
237.419 278.84 li
236.419 277.59 li
cp
ef
271.919 317.59 mo
239.919 278.84 li
236.419 277.59 mo
240.585 276.757 li
237.419 278.84 li
236.419 277.59 li
@
237.252 281.507 mo
238.835 277.59 li
239.919 278.84 li
237.252 281.507 li
cp
ef
237.252 281.507 mo
238.835 277.59 li
239.919 278.84 li
237.252 281.507 li
@
238.835 277.59 mo
243.002 276.757 li
239.919 278.84 li
238.835 277.59 li
cp
ef
275.335 317.59 mo
243.335 278.84 li
238.835 277.59 mo
243.002 276.757 li
239.919 278.84 li
238.835 277.59 li
@
240.669 281.507 mo
242.252 277.59 li
243.335 278.84 li
240.669 281.507 li
cp
ef
240.669 281.507 mo
242.252 277.59 li
243.335 278.84 li
240.669 281.507 li
@
242.252 277.59 mo
246.419 276.757 li
243.335 278.84 li
242.252 277.59 li
cp
ef
279.085 317.59 mo
249.835 278.923 li
242.252 277.59 mo
246.419 276.757 li
243.335 278.84 li
242.252 277.59 li
@
247.002 281.423 mo
248.752 277.59 li
249.835 278.923 li
247.002 281.423 li
cp
ef
247.002 281.423 mo
248.752 277.59 li
249.835 278.923 li
247.002 281.423 li
@
248.752 277.59 mo
253.002 276.923 li
249.835 278.923 li
248.752 277.59 li
cp
ef
282.585 317.59 mo
252.919 278.923 li
248.752 277.59 mo
253.002 276.923 li
249.835 278.923 li
248.752 277.59 li
@
250.169 281.423 mo
251.919 277.59 li
252.919 278.923 li
250.169 281.423 li
cp
ef
250.169 281.423 mo
251.919 277.59 li
252.919 278.923 li
250.169 281.423 li
@
251.919 277.59 mo
256.085 276.84 li
252.919 278.923 li
251.919 277.59 li
cp
ef
287.335 317.59 mo
255.419 278.84 li
251.919 277.59 mo
256.085 276.84 li
252.919 278.923 li
251.919 277.59 li
@
252.752 281.507 mo
254.335 277.59 li
255.419 278.84 li
252.752 281.507 li
cp
ef
252.752 281.507 mo
254.335 277.59 li
255.419 278.84 li
252.752 281.507 li
@
254.335 277.59 mo
258.502 276.757 li
255.419 278.84 li
254.335 277.59 li
cp
ef
290.169 317.59 mo
257.335 278.84 li
254.335 277.59 mo
258.502 276.757 li
255.419 278.84 li
254.335 277.59 li
@
254.669 281.507 mo
256.252 277.59 li
257.335 278.84 li
254.669 281.507 li
cp
ef
254.669 281.507 mo
256.252 277.59 li
257.335 278.84 li
254.669 281.507 li
@
256.252 277.59 mo
260.419 276.673 li
257.335 278.84 li
256.252 277.59 li
cp
ef
293.085 317.59 mo
262.252 278.923 li
256.252 277.59 mo
260.419 276.673 li
257.335 278.84 li
256.252 277.59 li
@
259.502 281.423 mo
261.169 277.59 li
262.252 278.923 li
259.502 281.423 li
cp
ef
259.502 281.423 mo
261.169 277.59 li
262.252 278.923 li
259.502 281.423 li
@
261.169 277.59 mo
265.419 276.757 li
262.252 278.923 li
261.169 277.59 li
cp
ef
296.585 317.59 mo
263.835 278.84 li
261.169 277.59 mo
265.419 276.757 li
262.252 278.923 li
261.169 277.59 li
@
261.169 281.507 mo
262.752 277.59 li
263.835 278.84 li
261.169 281.507 li
cp
ef
261.169 281.507 mo
262.752 277.59 li
263.835 278.84 li
261.169 281.507 li
@
262.752 277.59 mo
266.919 276.673 li
263.835 278.84 li
262.752 277.59 li
cp
ef
300.085 317.59 mo
267.585 278.84 li
262.752 277.59 mo
266.919 276.673 li
263.835 278.84 li
262.752 277.59 li
@
264.919 281.507 mo
266.502 277.59 li
267.585 278.84 li
264.919 281.507 li
cp
ef
264.919 281.507 mo
266.502 277.59 li
267.585 278.84 li
264.919 281.507 li
@
266.502 277.59 mo
270.669 276.673 li
267.585 278.84 li
266.502 277.59 li
cp
ef
303.002 317.59 mo
270.669 278.84 li
266.502 277.59 mo
270.669 276.673 li
267.585 278.84 li
266.502 277.59 li
@
268.002 281.507 mo
269.585 277.59 li
270.669 278.84 li
268.002 281.507 li
cp
ef
268.002 281.507 mo
269.585 277.59 li
270.669 278.84 li
268.002 281.507 li
@
269.585 277.59 mo
273.752 276.673 li
270.669 278.84 li
269.585 277.59 li
cp
ef
306.252 317.59 mo
273.169 278.84 li
269.585 277.59 mo
273.752 276.673 li
270.669 278.84 li
269.585 277.59 li
@
270.502 281.507 mo
272.085 277.59 li
273.169 278.84 li
270.502 281.507 li
cp
ef
270.502 281.507 mo
272.085 277.59 li
273.169 278.84 li
270.502 281.507 li
@
272.085 277.59 mo
276.252 276.673 li
273.169 278.84 li
272.085 277.59 li
cp
ef
308.835 317.59 mo
275.919 278.84 li
272.085 277.59 mo
276.252 276.673 li
273.169 278.84 li
272.085 277.59 li
@
273.252 281.507 mo
274.835 277.59 li
275.919 278.84 li
273.252 281.507 li
cp
ef
273.252 281.507 mo
274.835 277.59 li
275.919 278.84 li
273.252 281.507 li
@
274.835 277.59 mo
279.002 276.673 li
275.919 278.84 li
274.835 277.59 li
cp
ef
312.002 317.59 mo
278.419 278.84 li
274.835 277.59 mo
279.002 276.673 li
275.919 278.84 li
274.835 277.59 li
@
275.835 281.507 mo
277.335 277.59 li
278.419 278.84 li
275.835 281.507 li
cp
ef
275.835 281.507 mo
277.335 277.59 li
278.419 278.84 li
275.835 281.507 li
@
277.335 277.59 mo
281.502 276.59 li
278.419 278.84 li
277.335 277.59 li
cp
ef
315.419 317.59 mo
281.252 278.84 li
277.335 277.59 mo
281.502 276.59 li
278.419 278.84 li
277.335 277.59 li
@
278.669 281.507 mo
280.169 277.59 li
281.252 278.84 li
278.669 281.507 li
cp
ef
278.669 281.507 mo
280.169 277.59 li
281.252 278.84 li
278.669 281.507 li
@
280.169 277.59 mo
284.252 276.59 li
281.252 278.84 li
280.169 277.59 li
cp
ef
319.002 317.59 mo
283.752 278.84 li
280.169 277.59 mo
284.252 276.59 li
281.252 278.84 li
280.169 277.59 li
@
281.169 281.59 mo
282.585 277.59 li
283.752 278.84 li
281.169 281.59 li
cp
ef
281.169 281.59 mo
282.585 277.59 li
283.752 278.84 li
281.169 281.59 li
@
282.585 277.59 mo
286.752 276.507 li
283.752 278.84 li
282.585 277.59 li
cp
ef
322.085 317.59 mo
285.502 278.757 li
282.585 277.59 mo
286.752 276.507 li
283.752 278.84 li
282.585 277.59 li
@
283.002 281.59 mo
284.335 277.59 li
285.502 278.757 li
283.002 281.59 li
cp
ef
283.002 281.59 mo
284.335 277.59 li
285.502 278.757 li
283.002 281.59 li
@
284.335 277.59 mo
288.502 276.423 li
285.502 278.757 li
284.335 277.59 li
cp
ef
324.419 317.59 mo
288.085 278.84 li
284.335 277.59 mo
288.502 276.423 li
285.502 278.757 li
284.335 277.59 li
@
285.585 281.59 mo
286.919 277.59 li
288.085 278.84 li
285.585 281.59 li
cp
ef
285.585 281.59 mo
286.919 277.59 li
288.085 278.84 li
285.585 281.59 li
@
286.919 277.59 mo
291.085 276.423 li
288.085 278.84 li
286.919 277.59 li
cp
ef
326.669 317.59 mo
291.835 278.84 li
286.919 277.59 mo
291.085 276.423 li
288.085 278.84 li
286.919 277.59 li
@
289.252 281.59 mo
290.669 277.59 li
291.835 278.84 li
289.252 281.59 li
cp
ef
289.252 281.59 mo
290.669 277.59 li
291.835 278.84 li
289.252 281.59 li
@
290.669 277.59 mo
294.835 276.507 li
291.835 278.84 li
290.669 277.59 li
cp
ef
330.419 317.59 mo
294.002 278.84 li
290.669 277.59 mo
294.835 276.507 li
291.835 278.84 li
290.669 277.59 li
@
291.502 281.59 mo
292.835 277.59 li
294.002 278.84 li
291.502 281.59 li
cp
ef
291.502 281.59 mo
292.835 277.59 li
294.002 278.84 li
291.502 281.59 li
@
292.835 277.59 mo
296.919 276.423 li
294.002 278.84 li
292.835 277.59 li
cp
ef
333.835 317.59 mo
298.002 278.84 li
292.835 277.59 mo
296.919 276.423 li
294.002 278.84 li
292.835 277.59 li
@
295.502 281.59 mo
296.919 277.59 li
298.002 278.84 li
295.502 281.59 li
cp
ef
295.502 281.59 mo
296.919 277.59 li
298.002 278.84 li
295.502 281.59 li
@
296.919 277.59 mo
301.002 276.507 li
298.002 278.84 li
296.919 277.59 li
cp
ef
337.752 317.59 mo
299.919 278.757 li
296.919 277.59 mo
301.002 276.507 li
298.002 278.84 li
296.919 277.59 li
@
297.419 281.59 mo
298.752 277.59 li
299.919 278.757 li
297.419 281.59 li
cp
ef
297.419 281.59 mo
298.752 277.59 li
299.919 278.757 li
297.419 281.59 li
@
298.752 277.59 mo
302.835 276.34 li
299.919 278.757 li
298.752 277.59 li
cp
ef
340.919 317.59 mo
303.669 278.757 li
298.752 277.59 mo
302.835 276.34 li
299.919 278.757 li
298.752 277.59 li
@
301.169 281.59 mo
302.502 277.59 li
303.669 278.757 li
301.169 281.59 li
cp
ef
301.169 281.59 mo
302.502 277.59 li
303.669 278.757 li
301.169 281.59 li
@
302.502 277.59 mo
306.585 276.423 li
303.669 278.757 li
302.502 277.59 li
cp
ef
343.335 317.59 mo
307.335 278.84 li
302.502 277.59 mo
306.585 276.423 li
303.669 278.757 li
302.502 277.59 li
@
304.835 281.59 mo
306.169 277.59 li
307.335 278.84 li
304.835 281.59 li
cp
ef
304.835 281.59 mo
306.169 277.59 li
307.335 278.84 li
304.835 281.59 li
@
306.169 277.59 mo
310.335 276.507 li
307.335 278.84 li
306.169 277.59 li
cp
ef
346.252 317.59 mo
311.335 278.84 li
306.169 277.59 mo
310.335 276.507 li
307.335 278.84 li
306.169 277.59 li
@
308.752 281.59 mo
310.252 277.59 li
311.335 278.84 li
308.752 281.59 li
cp
ef
308.752 281.59 mo
310.252 277.59 li
311.335 278.84 li
308.752 281.59 li
@
310.252 277.59 mo
314.335 276.507 li
311.335 278.84 li
310.252 277.59 li
cp
ef
351.669 317.59 mo
317.835 278.84 li
310.252 277.59 mo
314.335 276.507 li
311.335 278.84 li
310.252 277.59 li
@
315.252 281.507 mo
316.752 277.59 li
317.835 278.84 li
315.252 281.507 li
cp
ef
315.252 281.507 mo
316.752 277.59 li
317.835 278.84 li
315.252 281.507 li
@
316.752 277.59 mo
320.919 276.59 li
317.835 278.84 li
316.752 277.59 li
cp
ef
356.419 317.59 mo
319.502 278.757 li
316.752 277.59 mo
320.919 276.59 li
317.835 278.84 li
316.752 277.59 li
@
317.002 281.59 mo
318.335 277.59 li
319.502 278.757 li
317.002 281.59 li
cp
ef
317.002 281.59 mo
318.335 277.59 li
319.502 278.757 li
317.002 281.59 li
@
318.335 277.59 mo
322.419 276.423 li
319.502 278.757 li
318.335 277.59 li
cp
ef
358.835 317.59 mo
322.585 278.84 li
318.335 277.59 mo
322.419 276.423 li
319.502 278.757 li
318.335 277.59 li
@
320.002 281.59 mo
321.419 277.59 li
322.585 278.84 li
320.002 281.59 li
cp
ef
320.002 281.59 mo
321.419 277.59 li
322.585 278.84 li
320.002 281.59 li
@
321.419 277.59 mo
325.502 276.423 li
322.585 278.84 li
321.419 277.59 li
cp
ef
362.336 317.59 mo
326.252 278.84 li
321.419 277.59 mo
325.502 276.423 li
322.585 278.84 li
321.419 277.59 li
@
323.752 281.59 mo
325.085 277.59 li
326.252 278.84 li
323.752 281.59 li
cp
ef
323.752 281.59 mo
325.085 277.59 li
326.252 278.84 li
323.752 281.59 li
@
325.085 277.59 mo
329.252 276.507 li
326.252 278.84 li
325.085 277.59 li
cp
ef
365.668 317.59 mo
328.752 278.757 li
325.085 277.59 mo
329.252 276.507 li
326.252 278.84 li
325.085 277.59 li
@
326.252 281.59 mo
327.585 277.59 li
328.752 278.757 li
326.252 281.59 li
cp
ef
326.252 281.59 mo
327.585 277.59 li
328.752 278.757 li
326.252 281.59 li
@
327.585 277.59 mo
331.669 276.423 li
328.752 278.757 li
327.585 277.59 li
cp
ef
369.086 317.59 mo
331.919 278.757 li
327.585 277.59 mo
331.669 276.423 li
328.752 278.757 li
327.585 277.59 li
@
329.419 281.59 mo
330.669 277.59 li
331.919 278.757 li
329.419 281.59 li
cp
ef
329.419 281.59 mo
330.669 277.59 li
331.919 278.757 li
329.419 281.59 li
@
330.669 277.59 mo
334.835 276.423 li
331.919 278.757 li
330.669 277.59 li
cp
ef
371.668 317.59 mo
333.752 278.757 li
330.669 277.59 mo
334.835 276.423 li
331.919 278.757 li
330.669 277.59 li
@
331.252 281.59 mo
332.585 277.59 li
333.752 278.757 li
331.252 281.59 li
cp
ef
331.252 281.59 mo
332.585 277.59 li
333.752 278.757 li
331.252 281.59 li
@
332.585 277.59 mo
336.669 276.34 li
333.752 278.757 li
332.585 277.59 li
cp
ef
375.418 317.59 mo
336.252 278.757 li
332.585 277.59 mo
336.669 276.34 li
333.752 278.757 li
332.585 277.59 li
@
333.835 281.59 mo
335.085 277.59 li
336.252 278.757 li
333.835 281.59 li
cp
ef
333.835 281.59 mo
335.085 277.59 li
336.252 278.757 li
333.835 281.59 li
@
335.085 277.59 mo
339.085 276.34 li
336.252 278.757 li
335.085 277.59 li
cp
ef
379.418 317.59 mo
341.502 278.757 li
335.085 277.59 mo
339.085 276.34 li
336.252 278.757 li
335.085 277.59 li
@
339.002 281.59 mo
340.335 277.59 li
341.502 278.757 li
339.002 281.59 li
cp
ef
339.002 281.59 mo
340.335 277.59 li
341.502 278.757 li
339.002 281.59 li
@
340.335 277.59 mo
344.419 276.34 li
341.502 278.757 li
340.335 277.59 li
cp
ef
383.168 317.59 mo
344.335 278.757 li
340.335 277.59 mo
344.419 276.34 li
341.502 278.757 li
340.335 277.59 li
@
341.835 281.59 mo
343.085 277.59 li
344.335 278.757 li
341.835 281.59 li
cp
ef
341.835 281.59 mo
343.085 277.59 li
344.335 278.757 li
341.835 281.59 li
@
343.085 277.59 mo
347.169 276.34 li
344.335 278.757 li
343.085 277.59 li
cp
ef
386.668 317.59 mo
346.502 278.757 li
343.085 277.59 mo
347.169 276.34 li
344.335 278.757 li
343.085 277.59 li
@
344.085 281.673 mo
345.252 277.59 li
346.502 278.757 li
344.085 281.673 li
cp
ef
344.085 281.673 mo
345.252 277.59 li
346.502 278.757 li
344.085 281.673 li
@
345.252 277.59 mo
349.335 276.257 li
346.502 278.757 li
345.252 277.59 li
cp
ef
389.752 317.59 mo
349.252 278.757 li
345.252 277.59 mo
349.335 276.257 li
346.502 278.757 li
345.252 277.59 li
@
346.919 281.673 mo
348.085 277.59 li
349.252 278.757 li
346.919 281.673 li
cp
ef
346.919 281.673 mo
348.085 277.59 li
349.252 278.757 li
346.919 281.673 li
@
348.085 277.59 mo
352.085 276.257 li
349.252 278.757 li
348.085 277.59 li
cp
ef
392.418 317.59 mo
351.752 278.757 li
348.085 277.59 mo
352.085 276.257 li
349.252 278.757 li
348.085 277.59 li
@
349.419 281.673 mo
350.585 277.59 li
351.752 278.757 li
349.419 281.673 li
cp
ef
349.419 281.673 mo
350.585 277.59 li
351.752 278.757 li
349.419 281.673 li
@
350.585 277.59 mo
354.585 276.257 li
351.752 278.757 li
350.585 277.59 li
cp
ef
395.252 317.59 mo
354.252 278.757 li
350.585 277.59 mo
354.585 276.257 li
351.752 278.757 li
350.585 277.59 li
@
351.919 281.673 mo
353.002 277.59 li
354.252 278.757 li
351.919 281.673 li
cp
ef
351.919 281.673 mo
353.002 277.59 li
354.252 278.757 li
351.919 281.673 li
@
353.002 277.59 mo
357.085 276.257 li
354.252 278.757 li
353.002 277.59 li
cp
ef
398.502 317.59 mo
357.669 278.757 li
353.002 277.59 mo
357.085 276.257 li
354.252 278.757 li
353.002 277.59 li
@
355.335 281.673 mo
356.419 277.59 li
357.669 278.757 li
355.335 281.673 li
cp
ef
355.335 281.673 mo
356.419 277.59 li
357.669 278.757 li
355.335 281.673 li
@
356.419 277.59 mo
360.502 276.257 li
357.669 278.757 li
356.419 277.59 li
cp
ef
401.668 317.59 mo
360.752 278.757 li
356.419 277.59 mo
360.502 276.257 li
357.669 278.757 li
356.419 277.59 li
@
358.419 281.673 mo
359.502 277.59 li
360.752 278.757 li
358.419 281.673 li
cp
ef
358.419 281.673 mo
359.502 277.59 li
360.752 278.757 li
358.419 281.673 li
@
359.502 277.59 mo
363.586 276.257 li
360.752 278.757 li
359.502 277.59 li
cp
ef
404.836 317.59 mo
364.502 278.757 li
359.502 277.59 mo
363.586 276.257 li
360.752 278.757 li
359.502 277.59 li
@
362.086 281.673 mo
363.252 277.59 li
364.502 278.757 li
362.086 281.673 li
cp
ef
362.086 281.673 mo
363.252 277.59 li
364.502 278.757 li
362.086 281.673 li
@
363.252 277.59 mo
367.336 276.257 li
364.502 278.757 li
363.252 277.59 li
cp
ef
407.168 317.59 mo
367.918 278.757 li
363.252 277.59 mo
367.336 276.257 li
364.502 278.757 li
363.252 277.59 li
@
365.502 281.673 mo
366.668 277.59 li
367.918 278.757 li
365.502 281.673 li
cp
ef
365.502 281.673 mo
366.668 277.59 li
367.918 278.757 li
365.502 281.673 li
@
366.668 277.59 mo
370.752 276.34 li
367.918 278.757 li
366.668 277.59 li
cp
ef
409.502 317.59 mo
371.918 278.757 li
366.668 277.59 mo
370.752 276.34 li
367.918 278.757 li
366.668 277.59 li
@
369.418 281.59 mo
370.752 277.59 li
371.918 278.757 li
369.418 281.59 li
cp
ef
369.418 281.59 mo
370.752 277.59 li
371.918 278.757 li
369.418 281.59 li
@
370.752 277.59 mo
374.836 276.423 li
371.918 278.757 li
370.752 277.59 li
cp
ef
412.586 317.59 mo
373.502 278.757 li
370.752 277.59 mo
374.836 276.423 li
371.918 278.757 li
370.752 277.59 li
@
371.002 281.59 mo
372.252 277.59 li
373.502 278.757 li
371.002 281.59 li
cp
ef
371.002 281.59 mo
372.252 277.59 li
373.502 278.757 li
371.002 281.59 li
@
372.252 277.59 mo
376.336 276.34 li
373.502 278.757 li
372.252 277.59 li
cp
ef
415.418 317.59 mo
375.918 278.757 li
372.252 277.59 mo
376.336 276.34 li
373.502 278.757 li
372.252 277.59 li
@
373.502 281.673 mo
374.752 277.59 li
375.918 278.757 li
373.502 281.673 li
cp
ef
373.502 281.673 mo
374.752 277.59 li
375.918 278.757 li
373.502 281.673 li
@
374.752 277.59 mo
378.836 276.257 li
375.918 278.757 li
374.752 277.59 li
cp
ef
418.336 317.59 mo
378.418 278.757 li
374.752 277.59 mo
378.836 276.257 li
375.918 278.757 li
374.752 277.59 li
@
376.086 281.673 mo
377.252 277.59 li
378.418 278.757 li
376.086 281.673 li
cp
ef
376.086 281.673 mo
377.252 277.59 li
378.418 278.757 li
376.086 281.673 li
@
377.252 277.59 mo
381.252 276.257 li
378.418 278.757 li
377.252 277.59 li
cp
ef
420.502 317.59 mo
381.252 278.757 li
377.252 277.59 mo
381.252 276.257 li
378.418 278.757 li
377.252 277.59 li
@
378.836 281.673 mo
380.002 277.59 li
381.252 278.757 li
378.836 281.673 li
cp
ef
378.836 281.673 mo
380.002 277.59 li
381.252 278.757 li
378.836 281.673 li
@
380.002 277.59 mo
384.086 276.34 li
381.252 278.757 li
380.002 277.59 li
cp
ef
422.668 317.59 mo
384.336 278.757 li
380.002 277.59 mo
384.086 276.34 li
381.252 278.757 li
380.002 277.59 li
@
381.836 281.59 mo
383.086 277.59 li
384.336 278.757 li
381.836 281.59 li
cp
ef
381.836 281.59 mo
383.086 277.59 li
384.336 278.757 li
381.836 281.59 li
@
383.086 277.59 mo
387.168 276.34 li
384.336 278.757 li
383.086 277.59 li
cp
ef
426.086 317.59 mo
388.002 278.757 li
383.086 277.59 mo
387.168 276.34 li
384.336 278.757 li
383.086 277.59 li
@
385.586 281.59 mo
386.836 277.59 li
388.002 278.757 li
385.586 281.59 li
cp
ef
385.586 281.59 mo
386.836 277.59 li
388.002 278.757 li
385.586 281.59 li
@
386.836 277.59 mo
390.918 276.34 li
388.002 278.757 li
386.836 277.59 li
cp
ef
428.336 317.59 mo
390.502 278.757 li
386.836 277.59 mo
390.918 276.34 li
388.002 278.757 li
386.836 277.59 li
@
388.002 281.59 mo
389.336 277.59 li
390.502 278.757 li
388.002 281.59 li
cp
ef
388.002 281.59 mo
389.336 277.59 li
390.502 278.757 li
388.002 281.59 li
@
389.336 277.59 mo
393.418 276.34 li
390.502 278.757 li
389.336 277.59 li
cp
ef
432.586 317.59 mo
393.918 278.757 li
389.336 277.59 mo
393.418 276.34 li
390.502 278.757 li
389.336 277.59 li
@
391.502 281.59 mo
392.752 277.59 li
393.918 278.757 li
391.502 281.59 li
cp
ef
391.502 281.59 mo
392.752 277.59 li
393.918 278.757 li
391.502 281.59 li
@
392.752 277.59 mo
396.836 276.34 li
393.918 278.757 li
392.752 277.59 li
cp
ef
435.336 317.59 mo
396.418 278.757 li
392.752 277.59 mo
396.836 276.34 li
393.918 278.757 li
392.752 277.59 li
@
394.002 281.59 mo
395.252 277.59 li
396.418 278.757 li
394.002 281.59 li
cp
ef
394.002 281.59 mo
395.252 277.59 li
396.418 278.757 li
394.002 281.59 li
@
395.252 277.59 mo
399.252 276.34 li
396.418 278.757 li
395.252 277.59 li
cp
ef
439.252 317.59 mo
399.502 278.757 li
395.252 277.59 mo
399.252 276.34 li
396.418 278.757 li
395.252 277.59 li
@
397.168 281.673 mo
398.336 277.59 li
399.502 278.757 li
397.168 281.673 li
cp
ef
397.168 281.673 mo
398.336 277.59 li
399.502 278.757 li
397.168 281.673 li
@
398.336 277.59 mo
402.418 276.257 li
399.502 278.757 li
398.336 277.59 li
cp
ef
442.918 317.59 mo
402.668 278.757 li
398.336 277.59 mo
402.418 276.257 li
399.502 278.757 li
398.336 277.59 li
@
400.252 281.673 mo
401.418 277.59 li
402.668 278.757 li
400.252 281.673 li
cp
ef
400.252 281.673 mo
401.418 277.59 li
402.668 278.757 li
400.252 281.673 li
@
401.418 277.59 mo
405.502 276.257 li
402.668 278.757 li
401.418 277.59 li
cp
ef
445.586 317.59 mo
405.752 278.757 li
401.418 277.59 mo
405.502 276.257 li
402.668 278.757 li
401.418 277.59 li
@
403.336 281.673 mo
404.502 277.59 li
405.752 278.757 li
403.336 281.673 li
cp
ef
403.336 281.673 mo
404.502 277.59 li
405.752 278.757 li
403.336 281.673 li
@
404.502 277.59 mo
408.586 276.257 li
405.752 278.757 li
404.502 277.59 li
cp
ef
448.668 317.59 mo
408.586 278.757 li
404.502 277.59 mo
408.586 276.257 li
405.752 278.757 li
404.502 277.59 li
@
406.168 281.673 mo
407.336 277.59 li
408.586 278.757 li
406.168 281.673 li
cp
ef
406.168 281.673 mo
407.336 277.59 li
408.586 278.757 li
406.168 281.673 li
@
407.336 277.59 mo
411.336 276.257 li
408.586 278.757 li
407.336 277.59 li
cp
ef
451.502 317.59 mo
411.668 278.757 li
407.336 277.59 mo
411.336 276.257 li
408.586 278.757 li
407.336 277.59 li
@
409.252 281.673 mo
410.418 277.59 li
411.668 278.757 li
409.252 281.673 li
cp
ef
409.252 281.673 mo
410.418 277.59 li
411.668 278.757 li
409.252 281.673 li
@
410.418 277.59 mo
414.502 276.257 li
411.668 278.757 li
410.418 277.59 li
cp
ef
454.502 317.59 mo
414.168 278.757 li
410.418 277.59 mo
414.502 276.257 li
411.668 278.757 li
410.418 277.59 li
@
411.752 281.673 mo
412.918 277.59 li
414.168 278.757 li
411.752 281.673 li
cp
ef
411.752 281.673 mo
412.918 277.59 li
414.168 278.757 li
411.752 281.673 li
@
412.918 277.59 mo
416.918 276.257 li
414.168 278.757 li
412.918 277.59 li
cp
ef
457.086 317.59 mo
417.502 278.757 li
412.918 277.59 mo
416.918 276.257 li
414.168 278.757 li
412.918 277.59 li
@
415.086 281.673 mo
416.336 277.59 li
417.502 278.757 li
415.086 281.673 li
cp
ef
415.086 281.673 mo
416.336 277.59 li
417.502 278.757 li
415.086 281.673 li
@
416.336 277.59 mo
420.418 276.257 li
417.502 278.757 li
416.336 277.59 li
cp
ef
460.002 317.59 mo
420.336 278.757 li
416.336 277.59 mo
420.418 276.257 li
417.502 278.757 li
416.336 277.59 li
@
417.918 281.673 mo
419.086 277.59 li
420.336 278.757 li
417.918 281.673 li
cp
ef
417.918 281.673 mo
419.086 277.59 li
420.336 278.757 li
417.918 281.673 li
@
419.086 277.59 mo
423.168 276.257 li
420.336 278.757 li
419.086 277.59 li
cp
ef
463.252 317.59 mo
424.086 278.757 li
419.086 277.59 mo
423.168 276.257 li
420.336 278.757 li
419.086 277.59 li
@
421.586 281.59 mo
422.836 277.59 li
424.086 278.757 li
421.586 281.59 li
cp
ef
421.586 281.59 mo
422.836 277.59 li
424.086 278.757 li
421.586 281.59 li
@
422.836 277.59 mo
426.918 276.34 li
424.086 278.757 li
422.836 277.59 li
cp
ef
466.586 317.59 mo
426.836 278.757 li
422.836 277.59 mo
426.918 276.34 li
424.086 278.757 li
422.836 277.59 li
@
424.418 281.673 mo
425.668 277.59 li
426.836 278.757 li
424.418 281.673 li
cp
ef
424.418 281.673 mo
425.668 277.59 li
426.836 278.757 li
424.418 281.673 li
@
425.668 277.59 mo
429.668 276.257 li
426.836 278.757 li
425.668 277.59 li
cp
ef
470.086 317.59 mo
429.668 278.757 li
425.668 277.59 mo
429.668 276.257 li
426.836 278.757 li
425.668 277.59 li
@
427.252 281.673 mo
428.418 277.59 li
429.668 278.757 li
427.252 281.673 li
cp
ef
427.252 281.673 mo
428.418 277.59 li
429.668 278.757 li
427.252 281.673 li
@
428.418 277.59 mo
432.502 276.257 li
429.668 278.757 li
428.418 277.59 li
cp
ef
472.502 317.59 mo
432.752 278.757 li
428.418 277.59 mo
432.502 276.257 li
429.668 278.757 li
428.418 277.59 li
@
430.336 281.673 mo
431.502 277.59 li
432.752 278.757 li
430.336 281.673 li
cp
ef
430.336 281.673 mo
431.502 277.59 li
432.752 278.757 li
430.336 281.673 li
@
431.502 277.59 mo
435.586 276.257 li
432.752 278.757 li
431.502 277.59 li
cp
ef
475.836 317.59 mo
434.586 278.757 li
431.502 277.59 mo
435.586 276.257 li
432.752 278.757 li
431.502 277.59 li
@
432.252 281.673 mo
433.418 277.59 li
434.586 278.757 li
432.252 281.673 li
cp
ef
432.252 281.673 mo
433.418 277.59 li
434.586 278.757 li
432.252 281.673 li
@
433.418 277.59 mo
437.418 276.173 li
434.586 278.757 li
433.418 277.59 li
cp
ef
479.668 317.59 mo
437.418 278.673 li
433.418 277.59 mo
437.418 276.173 li
434.586 278.757 li
433.418 277.59 li
@
435.086 281.673 mo
436.168 277.59 li
437.418 278.673 li
435.086 281.673 li
cp
ef
435.086 281.673 mo
436.168 277.59 li
437.418 278.673 li
435.086 281.673 li
@
436.168 277.59 mo
440.168 276.173 li
437.418 278.673 li
436.168 277.59 li
cp
ef
483.168 317.59 mo
441.168 278.673 li
436.168 277.59 mo
440.168 276.173 li
437.418 278.673 li
436.168 277.59 li
@
438.836 281.673 mo
439.918 277.59 li
441.168 278.673 li
438.836 281.673 li
cp
ef
438.836 281.673 mo
439.918 277.59 li
441.168 278.673 li
438.836 281.673 li
@
439.918 277.59 mo
443.918 276.173 li
441.168 278.673 li
439.918 277.59 li
cp
ef
486.002 317.59 mo
444.086 278.757 li
439.918 277.59 mo
443.918 276.173 li
441.168 278.673 li
439.918 277.59 li
@
441.752 281.673 mo
442.836 277.59 li
444.086 278.757 li
441.752 281.673 li
cp
ef
441.752 281.673 mo
442.836 277.59 li
444.086 278.757 li
441.752 281.673 li
@
442.836 277.59 mo
446.836 276.173 li
444.086 278.757 li
442.836 277.59 li
cp
ef
488.502 317.59 mo
446.586 278.757 li
442.836 277.59 mo
446.836 276.173 li
444.086 278.757 li
442.836 277.59 li
@
444.252 281.673 mo
445.336 277.59 li
446.586 278.757 li
444.252 281.673 li
cp
ef
444.252 281.673 mo
445.336 277.59 li
446.586 278.757 li
444.252 281.673 li
@
445.336 277.59 mo
449.336 276.173 li
446.586 278.757 li
445.336 277.59 li
cp
ef
491.502 317.59 mo
449.668 278.757 li
445.336 277.59 mo
449.336 276.173 li
446.586 278.757 li
445.336 277.59 li
@
447.336 281.673 mo
448.418 277.59 li
449.668 278.757 li
447.336 281.673 li
cp
ef
447.336 281.673 mo
448.418 277.59 li
449.668 278.757 li
447.336 281.673 li
@
448.418 277.59 mo
452.418 276.173 li
449.668 278.757 li
448.418 277.59 li
cp
ef
494.668 317.59 mo
451.836 278.673 li
448.418 277.59 mo
452.418 276.173 li
449.668 278.757 li
448.418 277.59 li
@
449.502 281.673 mo
450.586 277.59 li
451.836 278.673 li
449.502 281.673 li
cp
ef
449.502 281.673 mo
450.586 277.59 li
451.836 278.673 li
449.502 281.673 li
@
450.586 277.59 mo
454.586 276.09 li
451.836 278.673 li
450.586 277.59 li
cp
ef
497.918 317.59 mo
455.252 278.673 li
450.586 277.59 mo
454.586 276.09 li
451.836 278.673 li
450.586 277.59 li
@
452.918 281.673 mo
454.002 277.59 li
455.252 278.673 li
452.918 281.673 li
cp
ef
452.918 281.673 mo
454.002 277.59 li
455.252 278.673 li
452.918 281.673 li
@
454.002 277.59 mo
458.002 276.173 li
455.252 278.673 li
454.002 277.59 li
cp
ef
501.418 317.59 mo
459.002 278.673 li
454.002 277.59 mo
458.002 276.173 li
455.252 278.673 li
454.002 277.59 li
@
456.668 281.673 mo
457.752 277.59 li
459.002 278.673 li
456.668 281.673 li
cp
ef
456.668 281.673 mo
457.752 277.59 li
459.002 278.673 li
456.668 281.673 li
@
457.752 277.59 mo
461.752 276.173 li
459.002 278.673 li
457.752 277.59 li
cp
ef
504.418 317.59 mo
462.086 278.673 li
457.752 277.59 mo
461.752 276.173 li
459.002 278.673 li
457.752 277.59 li
@
459.752 281.673 mo
460.836 277.59 li
462.086 278.673 li
459.752 281.673 li
cp
ef
459.752 281.673 mo
460.836 277.59 li
462.086 278.673 li
459.752 281.673 li
@
460.836 277.59 mo
464.836 276.173 li
462.086 278.673 li
460.836 277.59 li
cp
ef
507.586 317.59 mo
464.836 278.673 li
460.836 277.59 mo
464.836 276.173 li
462.086 278.673 li
460.836 277.59 li
@
462.586 281.673 mo
463.586 277.59 li
464.836 278.673 li
462.586 281.673 li
cp
ef
462.586 281.673 mo
463.586 277.59 li
464.836 278.673 li
462.586 281.673 li
@
463.586 277.59 mo
467.586 276.173 li
464.836 278.673 li
463.586 277.59 li
cp
ef
510.168 317.59 mo
467.668 278.673 li
463.586 277.59 mo
467.586 276.173 li
464.836 278.673 li
463.586 277.59 li
@
465.336 281.673 mo
466.418 277.59 li
467.668 278.673 li
465.336 281.673 li
cp
ef
465.336 281.673 mo
466.418 277.59 li
467.668 278.673 li
465.336 281.673 li
@
466.418 277.59 mo
470.418 276.173 li
467.668 278.673 li
466.418 277.59 li
cp
ef
513.002 317.59 mo
470.168 278.673 li
466.418 277.59 mo
470.418 276.173 li
467.668 278.673 li
466.418 277.59 li
@
467.836 281.673 mo
468.918 277.59 li
470.168 278.673 li
467.836 281.673 li
cp
ef
467.836 281.673 mo
468.918 277.59 li
470.168 278.673 li
467.836 281.673 li
@
468.918 277.59 mo
472.918 276.09 li
470.168 278.673 li
468.918 277.59 li
cp
ef
516.252 317.59 mo
474.168 278.673 li
468.918 277.59 mo
472.918 276.09 li
470.168 278.673 li
468.918 277.59 li
@
471.836 281.673 mo
472.918 277.59 li
474.168 278.673 li
471.836 281.673 li
cp
ef
471.836 281.673 mo
472.918 277.59 li
474.168 278.673 li
471.836 281.673 li
@
472.918 277.59 mo
476.918 276.173 li
474.168 278.673 li
472.918 277.59 li
cp
ef
520.002 317.59 mo
480.002 278.757 li
472.918 277.59 mo
476.918 276.173 li
474.168 278.673 li
472.918 277.59 li
@
477.668 281.673 mo
478.836 277.59 li
480.002 278.757 li
477.668 281.673 li
cp
ef
477.668 281.673 mo
478.836 277.59 li
480.002 278.757 li
477.668 281.673 li
@
478.836 277.59 mo
482.836 276.257 li
480.002 278.757 li
478.836 277.59 li
cp
ef
522.752 317.59 mo
482.836 278.757 li
478.836 277.59 mo
482.836 276.257 li
480.002 278.757 li
478.836 277.59 li
@
480.418 281.673 mo
481.586 277.59 li
482.836 278.757 li
480.418 281.673 li
cp
ef
480.418 281.673 mo
481.586 277.59 li
482.836 278.757 li
480.418 281.673 li
@
481.586 277.59 mo
485.668 276.257 li
482.836 278.757 li
481.586 277.59 li
cp
ef
525.918 317.59 mo
485.918 278.757 li
481.586 277.59 mo
485.668 276.257 li
482.836 278.757 li
481.586 277.59 li
@
483.502 281.673 mo
484.668 277.59 li
485.918 278.757 li
483.502 281.673 li
cp
ef
483.502 281.673 mo
484.668 277.59 li
485.918 278.757 li
483.502 281.673 li
@
484.668 277.59 mo
488.752 276.257 li
485.918 278.757 li
484.668 277.59 li
cp
ef
528.502 317.59 mo
488.752 278.757 li
484.668 277.59 mo
488.752 276.257 li
485.918 278.757 li
484.668 277.59 li
@
486.336 281.673 mo
487.502 277.59 li
488.752 278.757 li
486.336 281.673 li
cp
ef
486.336 281.673 mo
487.502 277.59 li
488.752 278.757 li
486.336 281.673 li
@
487.502 277.59 mo
491.586 276.257 li
488.752 278.757 li
487.502 277.59 li
cp
ef
531.752 317.59 mo
492.168 278.757 li
487.502 277.59 mo
491.586 276.257 li
488.752 278.757 li
487.502 277.59 li
@
489.752 281.673 mo
490.918 277.59 li
492.168 278.757 li
489.752 281.673 li
cp
ef
489.752 281.673 mo
490.918 277.59 li
492.168 278.757 li
489.752 281.673 li
@
490.918 277.59 mo
495.002 276.257 li
492.168 278.757 li
490.918 277.59 li
cp
ef
535.418 317.59 mo
494.918 278.757 li
490.918 277.59 mo
495.002 276.257 li
492.168 278.757 li
490.918 277.59 li
@
492.586 281.673 mo
493.668 277.59 li
494.918 278.757 li
492.586 281.673 li
cp
ef
492.586 281.673 mo
493.668 277.59 li
494.918 278.757 li
492.586 281.673 li
@
493.668 277.59 mo
497.752 276.257 li
494.918 278.757 li
493.668 277.59 li
cp
ef
538.836 317.59 mo
498.086 278.757 li
493.668 277.59 mo
497.752 276.257 li
494.918 278.757 li
493.668 277.59 li
@
495.752 281.673 mo
496.918 277.59 li
498.086 278.757 li
495.752 281.673 li
cp
ef
495.752 281.673 mo
496.918 277.59 li
498.086 278.757 li
495.752 281.673 li
@
496.918 277.59 mo
500.918 276.257 li
498.086 278.757 li
496.918 277.59 li
cp
ef
541.752 317.59 mo
501.252 278.757 li
496.918 277.59 mo
500.918 276.257 li
498.086 278.757 li
496.918 277.59 li
@
498.836 281.673 mo
500.002 277.59 li
501.252 278.757 li
498.836 281.673 li
cp
ef
498.836 281.673 mo
500.002 277.59 li
501.252 278.757 li
498.836 281.673 li
@
500.002 277.59 mo
504.002 276.257 li
501.252 278.757 li
500.002 277.59 li
cp
ef
544.836 317.59 mo
503.418 278.757 li
500.002 277.59 mo
504.002 276.257 li
501.252 278.757 li
500.002 277.59 li
@
501.086 281.673 mo
502.168 277.59 li
503.418 278.757 li
501.086 281.673 li
cp
ef
501.086 281.673 mo
502.168 277.59 li
503.418 278.757 li
501.086 281.673 li
@
502.168 277.59 mo
506.168 276.173 li
503.418 278.757 li
502.168 277.59 li
cp
ef
547.502 317.59 mo
505.586 278.757 li
502.168 277.59 mo
506.168 276.173 li
503.418 278.757 li
502.168 277.59 li
@
503.252 281.673 mo
504.336 277.59 li
505.586 278.757 li
503.252 281.673 li
cp
ef
503.252 281.673 mo
504.336 277.59 li
505.586 278.757 li
503.252 281.673 li
@
504.336 277.59 mo
508.336 276.173 li
505.586 278.757 li
504.336 277.59 li
cp
ef
550.336 317.59 mo
508.668 278.757 li
504.336 277.59 mo
508.336 276.173 li
505.586 278.757 li
504.336 277.59 li
@
506.336 281.673 mo
507.418 277.59 li
508.668 278.757 li
506.336 281.673 li
cp
ef
506.336 281.673 mo
507.418 277.59 li
508.668 278.757 li
506.336 281.673 li
@
507.418 277.59 mo
511.418 276.173 li
508.668 278.757 li
507.418 277.59 li
cp
ef
554.336 317.59 mo
514.586 278.757 li
507.418 277.59 mo
511.418 276.173 li
508.668 278.757 li
507.418 277.59 li
@
512.168 281.673 mo
513.336 277.59 li
514.586 278.757 li
512.168 281.673 li
cp
ef
512.168 281.673 mo
513.336 277.59 li
514.586 278.757 li
512.168 281.673 li
@
513.336 277.59 mo
517.418 276.257 li
514.586 278.757 li
513.336 277.59 li
cp
ef
557.668 317.59 mo
516.752 278.757 li
513.336 277.59 mo
517.418 276.257 li
514.586 278.757 li
513.336 277.59 li
@
514.336 281.673 mo
515.502 277.59 li
516.752 278.757 li
514.336 281.673 li
cp
ef
514.336 281.673 mo
515.502 277.59 li
516.752 278.757 li
514.336 281.673 li
@
515.502 277.59 mo
519.502 276.257 li
516.752 278.757 li
515.502 277.59 li
cp
ef
561.002 317.59 mo
519.836 278.757 li
515.502 277.59 mo
519.502 276.257 li
516.752 278.757 li
515.502 277.59 li
@
517.502 281.673 mo
518.586 277.59 li
519.836 278.757 li
517.502 281.673 li
cp
ef
517.502 281.673 mo
518.586 277.59 li
519.836 278.757 li
517.502 281.673 li
@
518.586 277.59 mo
522.668 276.173 li
519.836 278.757 li
518.586 277.59 li
cp
ef
563.752 317.59 mo
522.336 278.757 li
518.586 277.59 mo
522.668 276.173 li
519.836 278.757 li
518.586 277.59 li
@
520.002 281.673 mo
521.086 277.59 li
522.336 278.757 li
520.002 281.673 li
cp
ef
520.002 281.673 mo
521.086 277.59 li
522.336 278.757 li
520.002 281.673 li
@
521.086 277.59 mo
525.086 276.173 li
522.336 278.757 li
521.086 277.59 li
cp
ef
566.086 317.59 mo
526.336 278.757 li
521.086 277.59 mo
525.086 276.173 li
522.336 278.757 li
521.086 277.59 li
@
523.918 281.673 mo
525.086 277.59 li
526.336 278.757 li
523.918 281.673 li
cp
ef
523.918 281.673 mo
525.086 277.59 li
526.336 278.757 li
523.918 281.673 li
@
525.086 277.59 mo
529.168 276.257 li
526.336 278.757 li
525.086 277.59 li
cp
ef
569.752 317.59 mo
528.502 278.757 li
525.086 277.59 mo
529.168 276.257 li
526.336 278.757 li
525.086 277.59 li
@
526.168 281.673 mo
527.336 277.59 li
528.502 278.757 li
526.168 281.673 li
cp
ef
526.168 281.673 mo
527.336 277.59 li
528.502 278.757 li
526.168 281.673 li
@
527.336 277.59 mo
531.336 276.173 li
528.502 278.757 li
527.336 277.59 li
cp
ef
573.168 317.59 mo
531.336 278.757 li
527.336 277.59 mo
531.336 276.173 li
528.502 278.757 li
527.336 277.59 li
@
529.002 281.673 mo
530.086 277.59 li
531.336 278.757 li
529.002 281.673 li
cp
ef
529.002 281.673 mo
530.086 277.59 li
531.336 278.757 li
529.002 281.673 li
@
530.086 277.59 mo
534.086 276.173 li
531.336 278.757 li
530.086 277.59 li
cp
ef
576.002 317.59 mo
533.836 278.673 li
530.086 277.59 mo
534.086 276.173 li
531.336 278.757 li
530.086 277.59 li
@
531.502 281.673 mo
532.586 277.59 li
533.836 278.673 li
531.502 281.673 li
cp
ef
531.502 281.673 mo
532.586 277.59 li
533.836 278.673 li
531.502 281.673 li
@
532.586 277.59 mo
536.586 276.173 li
533.836 278.673 li
532.586 277.59 li
cp
ef
579.168 317.59 mo
536.918 278.673 li
532.586 277.59 mo
536.586 276.173 li
533.836 278.673 li
532.586 277.59 li
@
534.586 281.673 mo
535.668 277.59 li
536.918 278.673 li
534.586 281.673 li
cp
ef
534.586 281.673 mo
535.668 277.59 li
536.918 278.673 li
534.586 281.673 li
@
535.668 277.59 mo
539.668 276.173 li
536.918 278.673 li
535.668 277.59 li
cp
ef
582.586 317.59 mo
539.418 278.673 li
535.668 277.59 mo
539.668 276.173 li
536.918 278.673 li
535.668 277.59 li
@
537.168 281.673 mo
538.168 277.59 li
539.418 278.673 li
537.168 281.673 li
cp
ef
537.168 281.673 mo
538.168 277.59 li
539.418 278.673 li
537.168 281.673 li
@
538.168 277.59 mo
542.168 276.09 li
539.418 278.673 li
538.168 277.59 li
cp
ef
585.002 317.59 mo
543.086 278.757 li
538.168 277.59 mo
542.168 276.09 li
539.418 278.673 li
538.168 277.59 li
@
540.752 281.673 mo
541.836 277.59 li
543.086 278.757 li
540.752 281.673 li
cp
ef
540.752 281.673 mo
541.836 277.59 li
543.086 278.757 li
540.752 281.673 li
@
541.836 277.59 mo
545.918 276.173 li
543.086 278.757 li
541.836 277.59 li
cp
ef
587.418 317.59 mo
545.918 278.757 li
541.836 277.59 mo
545.918 276.173 li
543.086 278.757 li
541.836 277.59 li
@
543.586 281.673 mo
544.668 277.59 li
545.918 278.757 li
543.586 281.673 li
cp
ef
543.586 281.673 mo
544.668 277.59 li
545.918 278.757 li
543.586 281.673 li
@
544.668 277.59 mo
548.668 276.173 li
545.918 278.757 li
544.668 277.59 li
cp
ef
590.086 317.59 mo
549.586 278.757 li
544.668 277.59 mo
548.668 276.173 li
545.918 278.757 li
544.668 277.59 li
@
547.252 281.673 mo
548.418 277.59 li
549.586 278.757 li
547.252 281.673 li
cp
ef
547.252 281.673 mo
548.418 277.59 li
549.586 278.757 li
547.252 281.673 li
@
548.418 277.59 mo
552.418 276.257 li
549.586 278.757 li
548.418 277.59 li
cp
ef
593.252 317.59 mo
552.418 278.757 li
548.418 277.59 mo
552.418 276.257 li
549.586 278.757 li
548.418 277.59 li
@
550.086 281.673 mo
551.168 277.59 li
552.418 278.757 li
550.086 281.673 li
cp
ef
550.086 281.673 mo
551.168 277.59 li
552.418 278.757 li
550.086 281.673 li
@
551.168 277.59 mo
555.252 276.257 li
552.418 278.757 li
551.168 277.59 li
cp
ef
596.586 317.59 mo
554.336 278.673 li
551.168 277.59 mo
555.252 276.257 li
552.418 278.757 li
551.168 277.59 li
@
552.002 281.673 mo
553.086 277.59 li
554.336 278.673 li
552.002 281.673 li
cp
ef
552.002 281.673 mo
553.086 277.59 li
554.336 278.673 li
552.002 281.673 li
@
553.086 277.59 mo
557.086 276.173 li
554.336 278.673 li
553.086 277.59 li
cp
ef
599.502 317.59 mo
557.668 278.757 li
553.086 277.59 mo
557.086 276.173 li
554.336 278.673 li
553.086 277.59 li
@
555.336 281.673 mo
556.418 277.59 li
557.668 278.757 li
555.336 281.673 li
cp
ef
555.336 281.673 mo
556.418 277.59 li
557.668 278.757 li
555.336 281.673 li
@
556.418 277.59 mo
560.502 276.173 li
557.668 278.757 li
556.418 277.59 li
cp
ef
602.918 317.59 mo
560.836 278.673 li
556.418 277.59 mo
560.502 276.173 li
557.668 278.757 li
556.418 277.59 li
@
558.502 281.673 mo
559.586 277.59 li
560.836 278.673 li
558.502 281.673 li
cp
ef
558.502 281.673 mo
559.586 277.59 li
560.836 278.673 li
558.502 281.673 li
@
559.586 277.59 mo
563.586 276.173 li
560.836 278.673 li
559.586 277.59 li
cp
ef
606.252 317.59 mo
562.836 278.673 li
559.586 277.59 mo
563.586 276.173 li
560.836 278.673 li
559.586 277.59 li
@
560.502 281.673 mo
561.586 277.59 li
562.836 278.673 li
560.502 281.673 li
cp
ef
560.502 281.673 mo
561.586 277.59 li
562.836 278.673 li
560.502 281.673 li
@
561.586 277.59 mo
565.502 276.09 li
562.836 278.673 li
561.586 277.59 li
cp
ef
608.918 317.59 mo
566.252 278.673 li
561.586 277.59 mo
565.502 276.09 li
562.836 278.673 li
561.586 277.59 li
@
563.918 281.673 mo
565.002 277.59 li
566.252 278.673 li
563.918 281.673 li
cp
ef
563.918 281.673 mo
565.002 277.59 li
566.252 278.673 li
563.918 281.673 li
@
565.002 277.59 mo
569.002 276.173 li
566.252 278.673 li
565.002 277.59 li
cp
ef
611.918 317.59 mo
569.336 278.673 li
565.002 277.59 mo
569.002 276.173 li
566.252 278.673 li
565.002 277.59 li
@
567.002 281.673 mo
568.086 277.59 li
569.336 278.673 li
567.002 281.673 li
cp
ef
567.002 281.673 mo
568.086 277.59 li
569.336 278.673 li
567.002 281.673 li
@
568.086 277.59 mo
572.086 276.173 li
569.336 278.673 li
568.086 277.59 li
cp
ef
614.418 317.59 mo
571.836 278.673 li
568.086 277.59 mo
572.086 276.173 li
569.336 278.673 li
568.086 277.59 li
@
569.502 281.673 mo
570.586 277.59 li
571.836 278.673 li
569.502 281.673 li
cp
ef
569.502 281.673 mo
570.586 277.59 li
571.836 278.673 li
569.502 281.673 li
@
570.586 277.59 mo
574.586 276.173 li
571.836 278.673 li
570.586 277.59 li
cp
ef
617.086 317.59 mo
575.168 278.757 li
570.586 277.59 mo
574.586 276.173 li
571.836 278.673 li
570.586 277.59 li
@
572.836 281.673 mo
573.918 277.59 li
575.168 278.757 li
572.836 281.673 li
cp
ef
572.836 281.673 mo
573.918 277.59 li
575.168 278.757 li
572.836 281.673 li
@
573.918 277.59 mo
578.002 276.173 li
575.168 278.757 li
573.918 277.59 li
cp
ef
620.336 317.59 mo
578.336 278.673 li
573.918 277.59 mo
578.002 276.173 li
575.168 278.757 li
573.918 277.59 li
@
576.002 281.673 mo
577.086 277.59 li
578.336 278.673 li
576.002 281.673 li
cp
ef
576.002 281.673 mo
577.086 277.59 li
578.336 278.673 li
576.002 281.673 li
@
577.086 277.59 mo
581.086 276.173 li
578.336 278.673 li
577.086 277.59 li
cp
ef
623.086 317.59 mo
580.502 278.673 li
577.086 277.59 mo
581.086 276.173 li
578.336 278.673 li
577.086 277.59 li
@
578.168 281.673 mo
579.252 277.59 li
580.502 278.673 li
578.168 281.673 li
cp
ef
578.168 281.673 mo
579.252 277.59 li
580.502 278.673 li
578.168 281.673 li
@
579.252 277.59 mo
583.252 276.173 li
580.502 278.673 li
579.252 277.59 li
cp
ef
626.418 317.59 mo
583.918 278.673 li
579.252 277.59 mo
583.252 276.173 li
580.502 278.673 li
579.252 277.59 li
@
581.586 281.673 mo
582.668 277.59 li
583.918 278.673 li
581.586 281.673 li
cp
ef
581.586 281.673 mo
582.668 277.59 li
583.918 278.673 li
581.586 281.673 li
@
582.668 277.59 mo
586.668 276.173 li
583.918 278.673 li
582.668 277.59 li
cp
ef
629.918 317.59 mo
587.336 278.673 li
582.668 277.59 mo
586.668 276.173 li
583.918 278.673 li
582.668 277.59 li
@
585.002 281.673 mo
586.086 277.59 li
587.336 278.673 li
585.002 281.673 li
cp
ef
585.002 281.673 mo
586.086 277.59 li
587.336 278.673 li
585.002 281.673 li
@
586.086 277.59 mo
590.086 276.173 li
587.336 278.673 li
586.086 277.59 li
cp
ef
633.252 317.59 mo
589.168 278.673 li
586.086 277.59 mo
590.086 276.173 li
587.336 278.673 li
586.086 277.59 li
@
586.918 281.673 mo
587.918 277.59 li
589.168 278.673 li
586.918 281.673 li
cp
ef
586.918 281.673 mo
587.918 277.59 li
589.168 278.673 li
586.918 281.673 li
@
587.918 277.59 mo
591.918 276.09 li
589.168 278.673 li
587.918 277.59 li
cp
ef
636.418 317.59 mo
592.918 278.673 li
587.918 277.59 mo
591.918 276.09 li
589.168 278.673 li
587.918 277.59 li
@
590.668 281.673 mo
591.668 277.59 li
592.918 278.673 li
590.668 281.673 li
cp
ef
590.668 281.673 mo
591.668 277.59 li
592.918 278.673 li
590.668 281.673 li
@
591.668 277.59 mo
595.668 276.09 li
592.918 278.673 li
591.668 277.59 li
cp
ef
638.836 317.59 mo
595.418 278.673 li
591.668 277.59 mo
595.668 276.09 li
592.918 278.673 li
591.668 277.59 li
@
593.086 281.673 mo
594.168 277.59 li
595.418 278.673 li
593.086 281.673 li
cp
ef
593.086 281.673 mo
594.168 277.59 li
595.418 278.673 li
593.086 281.673 li
@
594.168 277.59 mo
598.086 276.09 li
595.418 278.673 li
594.168 277.59 li
cp
ef
641.668 317.59 mo
598.502 278.673 li
594.168 277.59 mo
598.086 276.09 li
595.418 278.673 li
594.168 277.59 li
@
596.168 281.673 mo
597.252 277.59 li
598.502 278.673 li
596.168 281.673 li
cp
ef
596.168 281.673 mo
597.252 277.59 li
598.502 278.673 li
596.168 281.673 li
@
597.252 277.59 mo
601.252 276.09 li
598.502 278.673 li
597.252 277.59 li
cp
ef
645.086 317.59 mo
601.002 278.673 li
597.252 277.59 mo
601.252 276.09 li
598.502 278.673 li
597.252 277.59 li
@
598.752 281.673 mo
599.752 277.59 li
601.002 278.673 li
598.752 281.673 li
cp
ef
598.752 281.673 mo
599.752 277.59 li
601.002 278.673 li
598.752 281.673 li
@
599.752 277.59 mo
603.668 276.09 li
601.002 278.673 li
599.752 277.59 li
cp
ef
648.252 317.59 mo
604.836 278.673 li
599.752 277.59 mo
603.668 276.09 li
601.002 278.673 li
599.752 277.59 li
@
602.586 281.673 mo
603.586 277.59 li
604.836 278.673 li
602.586 281.673 li
cp
ef
602.586 281.673 mo
603.586 277.59 li
604.836 278.673 li
602.586 281.673 li
@
603.586 277.59 mo
607.586 276.09 li
604.836 278.673 li
603.586 277.59 li
cp
ef
651.086 317.59 mo
606.586 278.673 li
603.586 277.59 mo
607.586 276.09 li
604.836 278.673 li
603.586 277.59 li
@
604.336 281.673 mo
605.336 277.59 li
606.586 278.673 li
604.336 281.673 li
cp
ef
604.336 281.673 mo
605.336 277.59 li
606.586 278.673 li
604.336 281.673 li
@
605.336 277.59 mo
609.252 276.09 li
606.586 278.673 li
605.336 277.59 li
cp
ef
654.002 317.59 mo
609.336 278.673 li
605.336 277.59 mo
609.252 276.09 li
606.586 278.673 li
605.336 277.59 li
@
607.168 281.673 mo
608.086 277.59 li
609.336 278.673 li
607.168 281.673 li
cp
ef
607.168 281.673 mo
608.086 277.59 li
609.336 278.673 li
607.168 281.673 li
@
608.086 277.59 mo
612.086 276.09 li
609.336 278.673 li
608.086 277.59 li
cp
ef
656.836 317.59 mo
612.752 278.673 li
608.086 277.59 mo
612.086 276.09 li
609.336 278.673 li
608.086 277.59 li
@
610.502 281.673 mo
611.502 277.59 li
612.752 278.673 li
610.502 281.673 li
cp
ef
610.502 281.673 mo
611.502 277.59 li
612.752 278.673 li
610.502 281.673 li
@
611.502 277.59 mo
615.502 276.09 li
612.752 278.673 li
611.502 277.59 li
cp
ef
659.752 317.59 mo
615.586 278.673 li
611.502 277.59 mo
615.502 276.09 li
612.752 278.673 li
611.502 277.59 li
@
613.336 281.673 mo
614.336 277.59 li
615.586 278.673 li
613.336 281.673 li
cp
ef
613.336 281.673 mo
614.336 277.59 li
615.586 278.673 li
613.336 281.673 li
@
614.336 277.59 mo
618.252 276.09 li
615.586 278.673 li
614.336 277.59 li
cp
ef
662.836 317.59 mo
618.668 278.673 li
614.336 277.59 mo
618.252 276.09 li
615.586 278.673 li
614.336 277.59 li
@
616.418 281.673 mo
617.418 277.59 li
618.668 278.673 li
616.418 281.673 li
cp
ef
616.418 281.673 mo
617.418 277.59 li
618.668 278.673 li
616.418 281.673 li
@
617.418 277.59 mo
621.418 276.09 li
618.668 278.673 li
617.418 277.59 li
cp
ef
666.336 317.59 mo
621.502 278.673 li
617.418 277.59 mo
621.418 276.09 li
618.668 278.673 li
617.418 277.59 li
@
619.252 281.673 mo
620.168 277.59 li
621.502 278.673 li
619.252 281.673 li
cp
ef
619.252 281.673 mo
620.168 277.59 li
621.502 278.673 li
619.252 281.673 li
@
620.168 277.59 mo
624.168 276.007 li
621.502 278.673 li
620.168 277.59 li
cp
ef
669.502 317.59 mo
625.168 278.673 li
620.168 277.59 mo
624.168 276.007 li
621.502 278.673 li
620.168 277.59 li
@
622.918 281.673 mo
623.918 277.59 li
625.168 278.673 li
622.918 281.673 li
cp
ef
622.918 281.673 mo
623.918 277.59 li
625.168 278.673 li
622.918 281.673 li
@
623.918 277.59 mo
627.918 276.09 li
625.168 278.673 li
623.918 277.59 li
cp
ef
672.252 317.59 mo
628.168 278.673 li
623.918 277.59 mo
627.918 276.09 li
625.168 278.673 li
623.918 277.59 li
@
625.918 281.673 mo
626.836 277.59 li
628.168 278.673 li
625.918 281.673 li
cp
ef
625.918 281.673 mo
626.836 277.59 li
628.168 278.673 li
625.918 281.673 li
@
626.836 277.59 mo
630.836 276.09 li
628.168 278.673 li
626.836 277.59 li
cp
ef
675.002 317.59 mo
631.252 278.673 li
626.836 277.59 mo
630.836 276.09 li
628.168 278.673 li
626.836 277.59 li
@
629.002 281.673 mo
630.002 277.59 li
631.252 278.673 li
629.002 281.673 li
cp
ef
629.002 281.673 mo
630.002 277.59 li
631.252 278.673 li
629.002 281.673 li
@
630.002 277.59 mo
634.002 276.09 li
631.252 278.673 li
630.002 277.59 li
cp
ef
678.418 317.59 mo
633.752 278.673 li
630.002 277.59 mo
634.002 276.09 li
631.252 278.673 li
630.002 277.59 li
@
631.502 281.673 mo
632.502 277.59 li
633.752 278.673 li
631.502 281.673 li
cp
ef
631.502 281.673 mo
632.502 277.59 li
633.752 278.673 li
631.502 281.673 li
@
632.502 277.59 mo
636.418 276.09 li
633.752 278.673 li
632.502 277.59 li
cp
ef
681.252 317.59 mo
636.502 278.673 li
632.502 277.59 mo
636.418 276.09 li
633.752 278.673 li
632.502 277.59 li
@
634.336 281.673 mo
635.252 277.59 li
636.502 278.673 li
634.336 281.673 li
cp
ef
634.336 281.673 mo
635.252 277.59 li
636.502 278.673 li
634.336 281.673 li
@
635.252 277.59 mo
639.252 276.007 li
636.502 278.673 li
635.252 277.59 li
cp
ef
684.502 317.59 mo
638.418 278.673 li
635.252 277.59 mo
639.252 276.007 li
636.502 278.673 li
635.252 277.59 li
@
636.252 281.673 mo
637.086 277.59 li
638.418 278.673 li
636.252 281.673 li
cp
ef
636.252 281.673 mo
637.086 277.59 li
638.418 278.673 li
636.252 281.673 li
@
637.086 277.59 mo
641.086 276.007 li
638.418 278.673 li
637.086 277.59 li
cp
ef
687.586 317.59 mo
641.502 278.673 li
637.086 277.59 mo
641.086 276.007 li
638.418 278.673 li
637.086 277.59 li
@
639.336 281.673 mo
640.252 277.59 li
641.502 278.673 li
639.336 281.673 li
cp
ef
639.336 281.673 mo
640.252 277.59 li
641.502 278.673 li
639.336 281.673 li
@
640.252 277.59 mo
644.168 276.007 li
641.502 278.673 li
640.252 277.59 li
cp
ef
640.252 277.59 mo
644.168 276.007 li
641.502 278.673 li
640.252 277.59 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C36E13383F0ADFA95D33EE056CB0BBB6CC378
E318C596010C9D5017C58301E152F1312F120666FCA193F34BAFF9A7728E2D88
CF2F8599A92CC219CC18> |-
/parenright <1C60D8A8C9B81F2C36E13383F0ADFA95EB0D3347CF7699AF86D
05C9DA64C44D4B9C1DA244854703B576B8CF89DADBBDF27E06BFB9FAEAE6B7E8
4B7BDD623857D8CDD1880> |-
/colon <1C60D8A8C9B854D088E8E1AEAD30C92AB0D98EADF1DE7A77B7CB74CD
7251B14F346AB2E7541FDEE4> |-
/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70
768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A4
87B4AA37370316974673AB> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/P <1C60D8A8C9B64EDF881FD1B4CC946498DA3C19C25C4B8520933678924FDE
4A210BE068A66633EA9CF0A18FC1E10710CF47869E1E8874BE0332D5C37713DD
48920646AEDE175969913994AE21EF> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/f <1C60D8A8C9B854D088BD32B2AA38E03C8785A8768DD979031AA73FC70D55
2CF02916FA7DE01DC71A342AE3C3D8B4BA7C5EA263728006A3D26B7AF13FD368
6CACD62B8F7144E8E8E2621662105D> |-
/h <1C60D8A8C9B7EF325730A29066B7F8FA5E5A2B5DB35A82E1C18309DEA62B
C518CF0F1F9539ABFB89DF7E8DFFB04843990D3984ACC7B070B97764C6F6282A
232A5503AD2F34E23CD0A268E90C1B> |-
/l <1C60D8A8C9B88C080EC3D3ACA1AA9447BE5E1701C51D0B115EA96EF55CA0
1BE9> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406F39649904C93FB995842FF4F
905303BC539ACCA2C59EF4E92154BC352DE1B2C6DB4CB6E3884264B47C364E86
DCEC9778067A27BA6B7FC77EF169DFF24E447A16EC0025E89AD61026519DC7DE
3FD2BBBB9D1BA4C5E00D1949A9B69D4C9D685972B7816073A3E2DB2424> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/r <1C60D8A8C9B81F2C46C810F818CC6D7FA9350962F8DF74B0F191B25EF39D
AC43ECC82A5155465999170893BB853FBDB2F1E5E6657B1704EB4EA080223F79
E5CD0E9024AC9DE64C> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/w <1C60D8A8C9B6079F1E21163FAB7D42C978151484C642B124318B7CBF8C37
8A0B40A10228789196EF9EFB8EBC102BB2480131A59F7F0DA1186C7C9F71E3FA
F09067ACECABA3D1DF92300BA22E51> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 58 /colon put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 102 /f put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 119 /w put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef 
/F 6{/.notdef}rp /M /N /.notdef /P /.notdef /R 
/S /T 12{/.notdef}rp /a /.notdef /c /d /e 
/f /.notdef /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w 136{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
10 281.507 mo
(Man)sh
29.4497 281.507 mo
(ual)sh
0 240.332 mo
(Prop)sh
21.1196 240.332 mo
(osed)sh
PWFKSB+Helvetica*1 [0 -12 -12 0 0 0 ]msf
25 537.821 mo
(Difference with manual \(unit :   \))
[-8.66406 -2.66357 -3.33594 -3.33594 -6.67236 -3.99561 -6.67188 -6.67236 -6 -6.67188 -3.33594 -8.66406 
-2.66357 -3.33594 -6.67188 -3.33643 -9.99561 -6.67188 -6.67236 -6.67188 -6.67188 -2.66406 -3.33594 -3.99561 
-6.67236 -6.67188 -2.66357 -3.33643 -3.33594 -3.33594 -3.33594 -3.33594 -3.33594 0 ]ysh
25 378.53 mo
(r)sh
25 183.899 mo
(Difference with manual \(unit :   \))
[-8.66406 -2.66357 -3.33594 -3.33594 -6.67236 -3.99561 -6.67188 -6.67236 -6 -6.67188 -3.33594 -8.66406 
-2.66357 -3.33594 -6.67188 -3.33643 -9.99561 -6.67188 -6.67236 -6.67188 -6.67188 -2.66406 -3.33594 -3.99561 
-6.67236 -6.67188 -2.66357 -3.33643 -3.33594 -3.33594 -3.33594 -3.33594 -3.33594 0 ]ysh
25 24.6084 mo
(r)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PWFKSB+Helvetica*1 uf
/PWFKSB+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (result_hdv_result_detail2.eps)
%%CreationDate: 8/22/2014 5:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=)Tn<Z7+ku"n4a4MPQUd0InnW&s[MRP9`a78MR<[ep4i]mt2]u38jpf\AtfS"4rS=`dr+Or/8kWrX\G^0[l4u8F#!<pY"F/
%0hljnG?&d.<HV=9b"BB4l*WRc[s\4blp;s8?P!nA68F[,8;VreQ^*hNkH$hp'p>=`.?T.Dk^t.TilS-`aJ9VM67//D5db(93VdFa
%`[AZQZTT3AqVD-iP[,^8?LKHcf&+i<qSI*]g[5#T+lBC\5P[A%IW(1f<nlG;gZ)&8c9FC_$jPN_]4Fke\!M=lGIm0^J,!"c08NM*
%^qYcTF+2R%[Z2\ANV5'<OA&=BGPN-Nl>hQhK6d`onaEI?]eB$,H$_YC6Uj<p*X[\3#Q.u8$R5Nk\Gu/MqVV;Cs8:>Qroq2tQiHtZ
%O$V@lYWqo_%mQ`goKSI07&@750;RW;1n>4H>3r!^2<`W3D2_XIPDU\&if\gu\^.?*)B:@66]8j_-m18jdW/<E$dq@F6J,']f]Z9I
%["%JMs--eK.?G-Km$5a.?b,.j]^lYIpgQ?<#iq773h(6G_ol?kcqHKi+k7,#X`bNR<GeJcXhW7lU,LM&>2l8?Hu"cT)tgh,EMq^;
%/u041La]\-n*M8'jET&>?1b=>QQosC5c)rWA5Z/TL^5/uPfYJPUst!\`.68boTPr`(=cIn!LeY\(ml"6o)o[#Gh@<-oWkQjWTVF.
%do*0:63nkjGV%6!pQo<<[*&^Uj)M]O`dg%OE6.R1&3W.R0J;2o(\[-b/l3-;NKB`d%cuHD0?*dt%_npiEQ$PF/`_C'[n#Y]JH!YG
%]I&j3R`W?\Ttl,BAU'PQGUgo+<0kX)9P@H9iD>81pm+T?Z"+K)-'RFGCG_6+178Q8ae4-nH6ra51)VJETAUHA'add=:k5R"!^%nG
%TM2m):Wqj1&m$`QTg6.^.ZmJi/s@=gR,f\qA^=p*<JNL]#31;:-jJ^@UF"5o;"+g'?r6?Ma3N$t.`8dS'u%MWi"_\)a<F?rT\pQG
%*Bq9b0J7lJE(YEV`F*BK$>%@kpl/,WGFi32i0'`??:e-PH85KKIF:1Y+*X<=MA7<7TGWV"?D/f782>5VN"QUa5VX*#UGP7GW=39i
%=82t%,^]Tq[.Ec#]L"=i,J4Xu&p>G>,s;6qN#-Hr)(./eOY.:%6SX0TL)Vmo1'$*TdPV)o[*?Z]MQhS,"pW.n'F'AoPED'L0Lg;@
%@YE?AN!(f01;#pk(a,j(\=CehJj'6gE&qKA`\`YCE9@PN&>ij!K[H)nTCe3&Sj4XD_jtFn@H/TgLLLZUBq@.HSs+Z2o44R.c6fnG
%#U3!-nNXn5lKfm@:j"[CeTo/rV9T1[l"gj.S;=5Hgr*g=8o9;uPoA!sL/(uZ71&94lS=)d)CAHQ;8E4iSVg%%rf\Vu8:;lc@$-(k
%l9"fsW[AG?-hX&.9;T^Ropu"RVoe[T>(N9Bs)L-j8:;lcnp0e3I4,%kojX']UqW%BV%WU,^6=%unrLq=THUr\qNC=6)gR2n9(>51
%;(`1]O#a!g^oQ3S9Ha)Ks01&45JhsI)?1rMqX<cVWG[+EjrINqY,VYID+F7$d=+$*%N#aUkYn?`9W%<CU(A\7OX_iWMaF#6M\KmI
%,c_?-;8JtT5U5L%%"!l'Ta%1nrg_@LXsf22XrQUD91ZTeWgG7[T#=H(-/:3*Z;;-iFBb`a\go(XM3[L@81>8Y!1d.[O6;(>*]j0D
%#q@RKEsr\B]dP9'.PO>/LLHuhX9:2X[rMsG:DGUh"PR`b/W/GD+;d+dUnE!NlpAS)3WqSG.F4YcLmgW'l54[^'*it;WRV8j$o:8%
%A5X`/_`VWAKG)l_/W!RE<'7)N#SR^@#>6FpcF(\R<DEXnK`^Rk/C97lQ,/"N(u+,BR"YtNi)3AhdeOl"OmaQ*<M5/d@m_7J]E<8#
%<7I+dcsM@LWhg#LO[EE:;HP4_,:/D5'IV70K.4Yq-)JQhQ1o#@aXEE'7EJ)U_g%cuE?"J2R>-88>4H+c\>i6-MuR5N;L'M8V?grn
%*lWdWo8-;3FWM@D.GUQXIhreG_U.Q"#`IhYi?J/Q9dMU`"O-0;K<(dsIqR:1i">8X#*lQo)Lgf2(6"^)ZnrdA6Q[73RkgAGG^O.'
%]Se4jCW;dh95$4(-e0**j,D!2ZRF*R<mkg4(26\]"QMNH2=Wek,tnZu$VPW1E%PDt6Y%lMc>uZNMkl3:-`Fp_drG-kZ@W%HM@8tg
%C"4+_PY78SEAkLt\Bku@/5C_BMHmH+1-U@\k_rGQQpNQGG-RW)V0&7"<#Ic+e2/BhOgT;&C%0I24A8bdhJf#5*(QYM=O+-n7cb%:
%j-7hFS7C%tI)cTAV6eCLG(bRW;^P#l'k/VN>39F-JX<uJ:m3P/&9+:9PHr?2r"?$hK:jhc,n#o[Bnc$Ir+J*b-9.l6M?+bYrg/F>
%jCHo=<G%mrLQ]OG'J1c2oS>r<U_?W7#DCsh$;3g<81VUn8]R&"DWF2$K8N'_&AUD\TIs%iF`OE#JHr([c3-QV71tl-+@Cgf.[Z#1
%Q;a#Z2KnX15gLqtAS=XKBo7Zgo?bS"$#p^D9TR$'a=%J6k*`1GP38d[.A](C,,imb'qPfUFKK,-,C4*ZQTU-@!LP85OLSmXFNUhu
%"NXtA`:!k`&kka>0W8g]PNl^Z!)O9/@\3/(=B7Mc1(X\]WX*Eol>"A!S,u9gL,@nAN#1>L,nN\5hF1bjUuNS=O_Ko0!AN_/:0?S&
%W$!WkCoc?Y1YQhZ_@WMV4%X`dWm^?MFi'H(Ip/4?h^tn8XqI+<Kjh"iqm2'\YpmqDU8^n`QnmNm%V\B23EZH+d'Z;_BsLk4hmLe0
%5-HQ4IYZp?AmqX@Qif81;^Y2+n,_V`Csu8C,U$SNM*Ks!,cMJP&?N+n5h`JMn\,2XP`TQYFiGp>"#X$jj9^3o(SCu8:<#[+_:3JI
%["oBZ"bHh*"TY3fn/U<L.[*J=8'Ic&4pA6a1s@e(DOje8$cPU*ps.>o?c;5RmTn/G<^eU3;dj82aBZV,4p4L#\7*Mk)5I!X>'q\[
%cTYfTZ,d_iPEl-M^a-buI\h'+aY-\g#ZAqT-7ak.87e>\&ST<d&nGr'YT-].'0DUlrV'531IX$gW]IIleG4"9TOJ8=l[tdoC]q/[
%W7dfG3a^CL)AV2#!No^"4oICB139V$+-:nn'Ct6Ehh$sZb]R+aVU_e>Ac1B3d:t]f7Jfr1(K8SiR:[H%/Y)7T%X"dX8S,!c)0WN!
%qqW5lk0#YZRjuh0$j;jEU1d/SD$D<r$RV1Hb)2W5MQ_PZ:Pc6,_LJkgWo)`qQ9h/5!_n0%UB4$X:5]LU&pjkN;NcLL^L??KcRJ9f
%crCl!FRfot`RV6&N*#X/$E60!R`maC>I/(%KqYWOW4oieX$<<oK;lY&=M5$6?e6n/rcNqFCt070RlY'-l?p'@8Si%0[jjL!bVJ(d
%SIq,tGqVmjcs:hIWk,5q4[5B7kM>o*'roMgOr<MEEG`$A>LCB*`d,@OcJ@[V:PGsSRu1iNCK4M:kN&TP^P/3O]CJ&^A(;7j@pg>M
%HU7BHMtN=3o=SipPskY1AqEVO#<g7]W6C+^"9(YPV9j__SlU?=^T"uGn6`2W,Lo`bO#0-EEPI]M.98nAKrZ^m3G;"sni`i<#q;Y<
%4<n<uYn/c];hUOV&7j+P71+1'n4jkX8MO[)(NSkdZC%oa-;pFOD5;tZ8[+6tTMNMfY;XSJ:h;@--88Cu@-!-W$H;e_d.)@P!\(H>
%i<>Z$_=;nUff2kUWk*:.e"<8Fe9aI:MacpH2AT)n`q[lj[(82)g,:HVfp[0p'oPg>1*8C"dq/)(Pp@s_5T#G!BT\<b25-Cp'D)o!
%Y,G)i[L4H<pF=^h,doXr;)UR9eFgWpKD/TK*X)<ioiA#`!>&J.'?'jCI\r+q5)f\bo3rW'87Q2E1Xojb)tRSO0uEdarP[P!h(o2C
%8i?I5E#<T'W5#[Q.+QkOZriJ7$%J_k957u\ECd'@+ElolAh5:jZEfaGrM'\o]c\%4KL"%E;ao,49JZs"+qe#^`lRFO3H0BILLVK`
%M#rF)lH=p!">U6^-:_E_*N5ROV+;3$0ZG`T[o$"Ic/?U"M$*p5Rj$>*3iHR">*6UB"Tk&^,/K"WNl`J8;b6MO,/)+Z:lg<^S.iur
%b=^sJN@ZF<TVHVL$Jse\:4VF3f>[:DA0=VJ$C*nn.aBUTV3PJTBQ[@;i)@Xj6s[][KS4k8$n[[\]E-)C^L[a`AOfG+k9LZX>EhF^
%#e4OPNEAYL+N'l.a3^O?"=[.U(PbkWCaCfNYY>pC9org\4@Q8+e0o!)'dUFCMR_\W]b<s"@B:n9LD`3'`NYu0)D#HcU*O6u8h^gf
%YsQeA35>V]I"`V?fDp]]@*re$.p=6i=+CNpj@^1RNaQ.$*+]'L70oL79dLX?8;i?jqgpkT$CS`-o-)"`>_Wpo=^"Ya*JGVu&S'8*
%S0t,Mb85P)'QPs]'V3W.3/J*+8-4VN_@^8(6=^X`&f=62igPc3@Io$YJ.SkWa-'ppL"VYBf7c!A]Gq_g'NYDpk7^f5&^u\HF?8NJ
%.3oOB!2mniC(A0B-7L?&:JsgGW/Qji.oAb4GT.&3`.K7HU&2X.Ght^gfHJ3#_rA3rKnRP25VZ+YP^tin)*N,HF)qWq$O)5E-5c5c
%adc/Eb"c^@cr4a(`]ObCAMOc&eqpoR4]&"27@c?F8lXjhk("F_B=r%X[\aM^$*,'[Mo*92O]SDX:(^Z@ZLTfC#@9ko`&3GqPP16.
%)+@*Z'ILkp16\D)&',:*EG:$3GX@g4$*qg+ROM,%9X.TP<6NY]$]ccT1N=\&$M#rPaB<]mUVtX8ooAPEX'4F060C>0PZ-PGTHUa@
%/^]h*PU8LSnQM^9S\[lP]aeao#.mLp5'r%_o<]@bl%oAsgk*tRO!IQE9i8V3s3B;;jILs23P<C8J!E01pn=4NZ?rFtCI'QYrE/95
%5opPIJri*WP@;5\J"ofi0DO4GHTW2@I_#4O,%kBBPQ&'TlL`rEm=e4hp,9#Pg4m8(=D9PW08QpLQ"\Z;mFZ3`5OA$`YH8$)XkiAf
%#,;Y0+)BEahV(?nL7ZGSSRHU1p"F9_()sW9j7iO`<:@5(kKWk-hi#0B3aLNa\,A@J*L@P[G_3:35G7`>k@*Q@IB7t;7G/LJW%gTQ
%NaqH_X$1ij[D24c\C5<&A)h"2eV5V*eC[:sPZ7([A$,a?gE)>8$Xt:n]5;]E6T!fM6>SKW2\A*6nQ9if*4C4=hpId$X>0'k[X4#1
%d.`Hc9ZL92=L16eS[LOp]sb[:]hT)<:J!9os%]oWmIeN)pYQ5Em9XUb823FuCU[b[od4bgTbS.g2X!n*W9.V))ulm%RNSDKqSUt\
%IFrEfhs/J.\/kI8/;S"#L4<tr&cH]bc$$/:m39i3om:E_e=j)BW&a,%*i7?Tn9\%TU,qf6^#"/`0^+Rm"Yh7@EgRqF;`On6a&+W_
%n=*?GT7[0_EhulhFs0o'eRKn1)7<B%WgArrH_f.4!O9\1fi-%X`p^/W$kP:;9I_$G$HHD*A(%8bV;Bh"473Ng^W2@)?/UQ42P<]@
%q3%e+WRSL*%klf:6c:SDi>:M+7X#QI'>S`KSiTrb:-dEr7d:g2oldFYd*X2jgSFMN=rB3J<pFfuW=CB-iBVLL12V])*Wan@`VZ`4
%IBGo/(/aA)3kojr#D.m@WB)2a-CXp-PWHRCa(('ehq?>i?S:i^k?]@;s*QPiI'p9g7u3:T,dS$iRSp?BLRc`X_R#DZald0ja40!V
%C'g'#GB)f`/Ksr/g0)M)qMk3fmfNV;6(g=bYU9_.@m#1"#5D?tq4p)<%kGQsA?a[4mJD>=i7\Q?mH,6WY^^>q(60=UkY#k<n/r+U
%K.P"aUm-\mAHBIlP7-T,r#j03;BR9\Z:b(/]e]pT!%W9Z_tF.WMX'3)kku7Qh:+*d?i._o[/oi6WV:2?gE1AD/&*2r?+@$J#AtGE
%l.14Si<"J$[/D*nPA'/8LD&i;:.TmBoH53Q&!H_"Pe]7N@6@-''`%k/,n]^D'J#!.Y'&*cE`,CaEn)fgI0Ku#\.UEhl_@/TmZB"r
%p$qoG^5LR%&VgBLiWL,p$HA>r"&E#/1nl'@C![=eoA@;$rGH9?`C!/B6kT/[8g/;7!WnZQ"dHkV7u!gan$klB31Pra(G>R_XpPH`
%;aMK@!+:\D>>g63H6OZpY/["ONX;Z!p:_u0:&?65#i@/Fs)5VYKf[Z\coNq,mkcW--=LV=!Qd+b.f,X:M\],p9t;V55)[.t\4[[(
%aVidW#j?3"HZ\O*+RKW?JemA![`nQ>lJq%(6ES]R+q:O=+=;XK?TYq:lKJ&>1PWl40RG"#jYHf;/0mY$Fe&FWnN/KZQ%E+g9.;^o
%Ud/+>VdR2'm?bBWe_VQ:oAFbL8AnBkaH1%RAA\-9/gTT"%XS(<p$fGE/7>a78*b<aW;b=R#c#H'SZb>gXZRC8No>\*5bIOCUurNK
%r!qWXdAINIgRf6L@Gu1ar_Zd2q9[#8;Y6i?R`+OY_M7NGKc!]0i.G/[(,GH1nUB9nje)S-J,.FjoIp7:5<laFMa7,ZVY9Dm;r:"/
%^1$:MMK?.GAqH4-Z8t;;#3[ED!l40<&*VdS7]\fZjJ7Y3ngZ2e7;n\s6`-XhTuJ7<6;t1u.$03P$%\uQ/+u&>9`M.."PR^9mKiJn
%4NH(b5]?GOBu2;Ap#5B3LRZ38;8:YiGeC9mq!AIBeua)uM4S.RJa=,Ic\6Atgi-Bq=)DPE:q1PjG@\]&gHA_4>);Ph<%3meAW2Ql
%qDb_5)a44)+-&8+UcKTM'rik_CV;f,$H%LY7DU%6OgH+qbt.a)Y9$]'%R.6jFFu#qde!2-#iii,](k:D5K$rle@4_SAt[t/o<[7n
%2+UbiSkLk#,"-cG\>+2EhWVCRbmZP\r@^onmm82pX*_)OAcET@%c_A#7cXL"+$fc&.#V\-FjQ=[%7Plg4fA9pbT#'*5?`R9[\iWZ
%ohU&;rr+F0jJ-Ujq6qTg;dq)B:+,+VfNGiC[2J\13j%qa/%X2mIgG;080js>1@7'4pGQin\JcM>qM,o[E\=6<!.T&KAcEmj;GR%0
%)V4A[L@tEcAQT>FI(sSYSjn3g'TH;nF\GPfF>Z0jV*Bo6JVE32IkkiKnTh9e%&F$-Fao3rI'q#f(=KYRd$`,%SQT])Q\d5aj%>)$
%-^1'2PBTiA0nW5/'B#oTqUA;ud@`_TQ`G<lN+Gq(EjZ+B-kl(AVe3\*<;W!9>KBOYrIqR=KL9k\Tri5j[jR%@C]Fj84_/X--f]n>
%i_['6gDT\Ci7s"jCrdb6),"TX#5(9/\1m2q9i054?S<@kaEUhUN<XM<s7&#6Zr$:BB^>F#$J(!m7__-'/MuE#>W-=G/u:--/P)ga
%$<\Cm^(&g('0-gL.].JHOcU7-77Fp$Nb/#M3#5Ql+=?3WX;#4e^I#X.COL<-_'_aqP@8gf*ral"\7kn#`]FP#7]4uYs/qLt2[Do&
%kD&AM%WD<7WN(9)=5`G)EjX<7p1o*)jaB%dF=+_`8u73>-tG)DMOa<#]eQ+T!IOmQ7Z+PO'K`'U\,Q85IE3a1i6VGZ^\c3(qKE>*
%CV&kTRV7_eH-64ff$KW9)'^q!(0]YST=)9IrA+MDo];l5lG*Di@nGnp4%n:U?-se5(k+/"9unS2]TUa'd6q_m3s.luYY9ONJ/G2u
%@T?N1))*!'Ir,]$i%S2H#_KoIROUZU.jDaf=H%r']j'q_("%:+QiHZ,qZ$Q45QBi[q60hr5Q(CK,J#U>.3<+A%C]/7R`6=+?JoO\
%&/\Dt`=L^uG=>VBOg1Q#>YV9?Ju6]\A3<*ibFoP-<^Zn%p"nH!rmkC8kmobQ(J+maJLe8J#WT$a):?&+?cq2RIs=u^F[kg*&%D[X
%-lnYnBJM1c(XfUVN!bDdb.1O!X!*.l?"eGoV;K;XlG<a7?0/(BlB$:=5-BqaU=3QUG=,V+AJ!UBm)DJDTG`sA=?>l`Yrl(82!lSf
%$qJ[Mqt<]<T#r<\mp'?B<(;oS=67n;YLWX>]\VrK=ro2Z42[0o+O""IPdRNh$u(/!Tenb7ISe`RZ9p)fZK>Du"#OZ5%09jfW5,BQ
%T=MZ+Ut]HYi!QlF"9j+o":X@$g.em\[n,9!a1V5jDd)j.=j0m.BNjnM:iE@lF?Eu9\6Ns\EtElg=<%lc.%Rg5$Cp@AY_grj0t0>?
%_[+&BCjf8`1XWa:Zefhn!cWVj6`TfU0VUCFhPN!"8Q.O=8>kHj;jZY_44_9&3KA)1l\8ng5qU,J8P-;S0T;%\D^(`DM`,-h$uT"l
%9kU`eY3E")\6`N4D1uUR3?(A4!L_`EUhn^6PiU>*ah"NQ#ZL-bWk8R1Z5ERpC4,T\<0G_@lFh1M!Ej[?O\%iF3CCe(N\V\$Q/-$!
%d24(m<VJ9f;6rK'[9G!?l9aj95Lr"/glmP"*2nepA:_Zk-"Ri;oZ5-T\:%if=e0^sT,%`@U;H,80RD90j:tkR@KD_N!`a]q/<sRI
%p6Z?g>VgK<Wn<#_b`lj]OYT>.N023BKtKko(3O2LofBNogkcE8PB.8UK@3NI,Ak"[+"?Q85A`Cg"Hl)(0h>M*Qmo[4U"<B5R"\9G
%gHo:S.7U9=0<;UCWIDY88&#WV+T6eGli;IS%-7J2^"[ZX2YubK)JGe9.dB^N%GPPUUGd46kYMs2rEWEM$Q)SkI0Jacn1lOqLYJo)
%XocE6I_PoWK+!3@QP_X`3#["9/`I6W$sN''"Ehf:ZWb<V;hMoJQEqG`'VZW+r;]OBl\k>G3+2<XRje,rRLKkVZG@#UE#"(+/!i]F
%I:ef)gSX<F&%Om>SQ+1r-0:!0>k+Wf0E:Rgs7lWnjWFNuci<aSs7?9\*uFqI^]0)(r8[hRkPt)PZDS3if@*8>,KQ`'RF\2kLpUlt
%cYEM=c0<Ch=99;V^.=#nfP6I.D`ompVWjUc:fkDKS%*#/[:@Qrc)9g)d2@Ga#OWmhQ8$=`GDFR!<8F5R12i;Z)M;t^DEq#t&^h,u
%>YafmRhd*SU.CW&)sL&O2>WK>BGGm_&-"rYo[Xft:nO4/@pm)j;0uoNKieV@-s.6(JN]a7k#h+SLQRUcK5U:))^.ZX21#Q-J\KJJ
%RJsjGhI;_*ADR*t"Zg<_])`>s^-8=Z*^ke9$>V%JK()oe]St#Il-<!=2jM`@(jF!br/+)Q;kXJ.dE2G]ND<<<G9.4?H%aFNJ)F91
%oT'Jc>Fip!bgrK:>Tn&pS"NV#NpK<:%KjgDISFi[HH_GnWA)(<,qY&8.iWUoED]p,M2T5u:X!G%CMt20FWD_O.5VmUp3X7-&B]tZ
%%:tjJB%.`miVqQ>;^tY,7L-:O4/.e1^%P[$gSD)&"`!W?;R5\8#R[;KWTVW3=+p;4Wc`1(%&<%M^#">D=8V.,3Xmu`&+r`;LM;+H
%@O\Y6i3u!O]7V77AoLVPiD@:%JG1D7MS9sc=qmc*->0ELd8hhi9Qc,bBF2&$$I4=9efM1HfcN'<,RuF]Z6MRdd@)KGY/B[hY,[+\
%JkVMnMcBlrH_'etG3hO&;7g"?)2G$j=/u"@b%A;srJ6@l)BI'U?HEQ@f*Csi\b:24&d/ep7+PYe^-eiY_2q_4c#c`\#\dU^hOA7`
%Li!SZ^OEXJ;n8(in[kQa8p""<$0&<WB^?9H@U)jg<+]m6T8_LCIPVLA<VMG!8]hP5aS9X_6W^mlChqdW!j(>'KmcTEE3mDUV*PLA
%WiM+NiJdIM/'j^P]IPA'mY@BUIVX.'g;DNc;pRS6qIn+HWqVC`KOe;l`!9<\_C5qm#%Yo@m9JBT>Z.U,?6n#_Y(ab*%(3IHLptG]
%0N-.!1_)h7oj?I/jJ[u[:?N]r]MjR@M-f!L5@Z,5hZ$N^do+;"FJ!NoF1T":(^s"2JcW*2E1.&Y_#FOTRG<'rD_IY0[XjW]bG"=A
%9.I;ieVFO:cs\3,o0/K!P8)n:c-"1];rn[AYT`I?N:Y$?9]`UlFLG1&^'_@(b#9arFd@FL#O^31rSbY`>6MqfC.;"s@B!N$LNYWT
%6>YsGJ70c%L#?Zm,`N:2:Pte7S`?&R3M2Vdah-Wch.G`EgeV5!6;)_V<1hp!iGa.EOUD\[p3.$&U[?:K7:cjX.:;FPn++<_?+"oY
%HH_U09CKp+C@7abX!X%Bq3RlKAMF`VIh5eafl-)m](\rB0UDZ.=#[=Xjo/Q`W\f+5'8h"qgPbW'DQ>4hk>FGM7UC7j9a!qHd,8j[
%pP5rDpAC%p,Rl.bpBP&3e*pS`++A)Rr5$Zkf,l!q4#"/e5Ibt5$pNcM:EFP$+PW=LncrS(*jm6mj'#;`gKlG2V=:BrCm;(n4%n*O
%oX3+934piKJ^d0,iPt(rps;_W#dO.b+g0NI!eVu+grR+*JH2]!@UpIZK,Zuiep!m0/NjDW=8]*K0eh+%s6RC2"ncU)q##T$Tu(KM
%J5PF1Qc/Xp5VRogPe9)_Jm)IF2I^lB:_B)RE79;$>.V:.0cTO/ICchpSLrXcRm@L#1uk&@:m4OF=*I.@$l)l05MZ&$SP[TZO%l<#
%Q9Wg@4aH)+%'!-QD-"oS+tsl'WYE3"R3O_@gCc!$iN;oXbMSXaiM$@DNV<m(?2McRW0l%/f%+r=Q%rGGG754+Atu.JmJZOZG_Ijl
%1t"8\(`u7$,<Db'L&`8opZZXV:m4Dd`f_(dk3sfOhO$Yn.]k@P-RX\&2MU1NQ3R/j("DN/e._;pTuM_oToJL%OU`jkTqne<0OQ]8
%6M]OrDZM`+[$!s-FtB<C4q$KO`<@#8-Gs,j/8qZAg@(B*:b/I./'G3#7f6+Uf@%QL)+,]*%01<!#"NI@i=S=\2aFK/J$CGl)X*mG
%p5U1CeD!MZ2qCqP)SI@NN<d[^H^>O`?`,>oW-aGdFR?N)2MHJ4D-(jVRHVS>&#.s6YQ`PRODnP'SsVl.OIp:LnrDTAlG[(B&#Q8T
%E6f&Y(GAfcMo(bKPVIqsM_&/@T%>o#W3EA&J?PQQ7[?lS!q#0%(">V03jOsYJ6E:'0\<r$@DR&qGN"H-9;iqj(U^mZe;'jh=FUXV
%:c41'B^t;lo9ilE$CaA1HFeC1K\CA5"Q$5Q@O^eEWYNd6>J:dfDoS]%Al+9#UW=(%g5pruaV2guQXg0*^,W:RAPE?@l-BheE^9](
%@0>$>Xha[0l"1_th&>Q[So"Eb9VHoIeoae$R$H;#`E*IMb28)'>$5hlP`G/^!&\5MManAfneB)i%$sR.;$(kf:]dat"$#hbed>7\
%,qim=#?n[j%W/&'mK%(H#W9/u\92#X,,kBf*E:BHV>TjF"e7`8lA#2`h^X$eW&p?RRMNeSJcBu`j7Q0G^75o4Vpb@`04fJ>VK*L]
%9NM+4lYBm74W["TB04MLH9+G6ES/Z%<CLO?W>qbZit<eK=K1btK\ER[iMT.jJ%$ZPc?A2J:Z2RWU"27q=qrFkL]6VHe^K\#gtXut
%HMT1_(I#kJBuU5K@H%-!a_t&T4t9h(*X8^;-A5%lG?"=$>AsGVE8j[@!_0.h's91f>N@6W3:51CiT`##A+d25@'5hP3NE3O_KE.`
%Y^1U>gb#?DXe'tIO#M:K$IT=d*`Bl8a(s>%qEm_s]%iCLT'cs3aleWN.E?/K6SZ0$OKbZi%u?Vil-SF(@nFnJ5*`7AT#54O:)EXV
%$8hY>dAPL!GhNL^[iYjUk"cXd]o.lpnXUuSUsY$K/\$jaXT5YK!`eX:S3L35h'Pqj;G\9UrL<?U&)C.oBu,SOVY#%H?9K?W$uKm0
%ST.F5OnCMF'I)eM4UADI6M^WELe+i=Xhfm0]YS8R&+.$T1?7cL*H>XL2I7mV;`JoX%8^RBDar,m6Fi2=2@G4dll^t]SI]DAQ^'1F
%7j\3:[%[qE0?J".kl)C'LFrhfHW>mA%b&*KA7samYVCglm-CNXfIk-(>E'boMMick$tW3kU3jBuX_jUsR&Z25U#SL8HLjrHn*;Kn
%rk:DBq!F%ueAZGYVUku"@&c%jjA.A#,,P+FF',o'qI0Yoa><m%M.F-T[T6Ir<2d]32De=)auTsODr,7K$u2W>_=1n66WJ8[q"_3V
%gu7<_N*8Qe4D+[0=e*R9GgJaq$r)MX+ftqu6LpIR#o/pFQ;GE#BQ:V6G.@(s[PcS,dHQWJ<)?J7:l22IOUQQYZPCtg")4+-@1"*+
%U?nI/.n@i4?-s*_9u\8im`G]/LdciO'%%lQP$3?u`6454"I\jspB<S]l=YCD(_SjHOK6\*>qp^UL@GX*1jZq">lrNJ1uP;'9;i)4
%S8likm??'aoFBCKo3GZl!W;o7apNRuP$[IU2%&;Ektr%ob;(]e!:K;P!Eclp6!m\pkY(l/e&6B(4TktS^FtJ@a&.O01Y:mYdL(C/
%+8-"mLdf+4ZT8</LBS+s)<tWeW71RpHb6ch08ME.KK[LriBA\Z/G^&5Kuj]kW<aqa-Jh.Lpk]BsitjaCCq?*rnAGi.1E!!3K_XZQ
%JVH_q5.%+/d@l,Cc]`M&I:=t"NNfT_g)CKDhE`p<NK?YX=`_Lc+V8W&3O-72cW=uhp8CJhh"$g$.PBR=bodDDF1*I8^([ueSj=<I
%ML(g8g(h?/;CL6X8>4f-5XSfC;Orgl,oB1,_kBD*N>)`&@c"J^T"![`Y"-(k?r;tl./L0Kec^DtLF`>qjQ3oIoH]`bal%?\K::o[
%eEP)pB/-p;P5X=[9D^!G\ig=:%Wjk-U(^tHEq8<SY#R50F.Rk2$16.'[FpY_6=:q('tjh*"[b1\pWC=P:6F.I)PU7e2@FC>@\36#
%\"]n?g+B\PQSHWK$:>Kma0`7oaANJo25MkPRb"hZ:`L<!?pjd60l",&`4dssJ7\4PmFb1KkK+W?!Y<2+GV\)_7"srG[tjT8aWEK>
%'jbSJM>,cG+D?F3H,qjsOVZ4IBXdcNKe3*J]G@79(;i6u<OFV_2,d4S;mO?V%:o9.&+(/r1F[uWFe^'Gj16+2X]2oErRIp2.YTBT
%`%k(D?`@9D\Q'7-bA1,$AW"jSTN@Npq(q&T_Uhg5@+H]bY7l+Qb26e(c+Bfoa'G='lrHoIJh@fPK[S1X>A[llaWfZbBWLI0THP6`
%`g>&T5@;]k,D>b\qat^_/8I&KVHmT2RK?pXU:&U\n!j+rbsC=[1<e?di,4!7dn)LE8>Db1k-GqDJ*X1?.=^r".?F+5))^'K2!;?J
%HY_#Vc*"qO:=W[Jn_3`*l1E3WHnN][H<+Gbk.lm8*OOt9\#R*REDW,25uuE#Vl)NtkW.qZhdAA]SV3Af<6p/!:[l#:ljVJZ#C0_)
%'91QLSWTd;$f;VW!5LbVOCi)hB"uUBXRZ#*B)+5$Nu/;^*ECqUR#R>L2<^@k#=mVGfL,5&??0tUSuf%sBf;$IT&6Xq0q0S+T<Kq7
%KoPD9=nHF@A1n:g'QBabmEHg^oU=%FSpO=B5JhDR9c]oc%*gZgS[8XA\\MqQRf6'T3#:-;+6?WpaJ8e[j1G2VBkP"%Ml?49XlB]D
%..i<KPK@]&e+jh/;g`kZloKNn1S(g:e2Z-rp9g+?_MiR.7ENa+`C3kR'O.KQf=n(1W&er6_o#fqh[t]8_9$+njiGt'"DE2Bg<>25
%GHNP.Fb?HrEU\\O4ir'ZhAmchT;Jpm4p#fUT6Wu=<EA.jFmUI.&bdYVA(/7cA?jtkDA&Pr-!%aNII,^.`R%9?/d\YK]otSsldT`r
%kAnPF/CNr/=K0u+!uF-Z4E#%=CZeU&+7PGOFce^.&+iMi3Et-Lam.fklf+0#B'41bkagQ&MtGpm^E?:fmb(ORFs3)mHN^L,ZkE*Y
%$J>?;QIucW/)V,9!$Og7q%V4jMAp1c(D*BJq5bH;?(,TZgbf4\BoUls7@sqN[t"i>q%@U;>>;o&F&0CeAtp^%oAn*6$L#XG"\kDp
%B[,\!$SO)Hc"n/AQ-_41`*(pk5e18f^Jd+/6gHA9"(3)f$I([ciYi/YkCT@_ALdc#_chk#MgA`2H"!IjW!@rE:%[RWb3]LXVi[O3
%(NWf0TOX8MU$%t595M%;-0q*Q%;g@Ge5!Rudj>[V8N69Gelob^>Mh'`Mjqm=V42@*6ON#3U`4&@O`&ZPRskkT[H9fe3@[k`d$Ei<
%"^l-'NEic-8.DM:jtt,5XMp$E/%d0f)fd/pS@]H`g&;n*/b\$3D)#?Pf+55V$eanrESHO/cHDp/?"b2qSMFReXm9K:cu3e)];paj
%!d_(`)1gpJA%T:g@-4gDHuijJEV8i'DM7GCI6`LS`)0MEDIVK5b`$F8C,VrZ)DG_UC`FDB.K5X8:en?2BY(,L>q:0cgOnU)foUVU
%'BV-B/'2Niimtd<]i\3,jj:2lou0No^HU3bCG'EEe&>1&']**@XSlWB9Xd!M)256F8(=!N!"ESe/[XY3q_t9#X>d?BU)X,kKD;W'
%*mSD$6Occ%)JPNqeBlFU8[oMKB?qdUcFG)q[m&M!NlGo[IQiXI&\%)$rSkmV]tdPX2QVtmJ4Cj%C2q/rqpt_u<G7[:g0m#@Cr"P2
%AQo`bKW6iWC'tR*&tY=q@cCS:F4AoK!jRQ%q`JsXcWphHC`mGI1f"<(U?7^[rDVO,2)bk\Cjk03K)]e^6r%hB]&c6beLa]troQ,5
%>Gc?nL.=J8V&=Jm[nIg7o)##KPLg]Vq3uTCpISuY)L<u'*K2ATd9+ap_N$OGiqT3);dQ'<R3La2(K\<=.[W$aXij7Bd[GjmBoLP,
%/5skH+#N4!Iu4&5m7epD!U^3)GrFTYa#ffh;gu/=BSN'&F8TA/?Ib[+9<CdbS6=]so"fT0gF&hce+m[YPXR2H>LmC]kHiLroANV;
%k)dl$#$&q0o9lF-:6Wt9T?HD-Vi8igcDN@aBeCLJd'KS?g#qr%PgmYie+r?Oq=pMtRF:mt[^gcL/p202F?]S,5.VI`HTIdI/g&o2
%S3<Fh5*o&FeYc%&dfr'AB-LbZEtLgX.=B]l@,I8u@`t4pDV<'f@h$LQF#Sau'_Ms8WC(7cMZsEk1TIMbi0-#Wn`t(9$L`mVLQlRR
%)0XYjL;i$eb,-o9m.(0O6N.sJ$>isf@Sk;TD),-s,k8DdTu#,6"l`[WSkTl"q2H-@h/[OXg!?-:o(P8'*A0tWWALs!&U"-+e0t'2
%.DKae9PDG:f*som6W0QC2R@`<%IRZH<B-%Lg7>kN&n4GeV;8]S1trJ=(j0O^3MkOl`L"qsj+J@WE2@1t7DmJi'?/`0G\oC8^8b3f
%08Hltfq"dL8/"L+MX.q,qVq+@Vlad-En6>'Zt6S&ase?J=@+Y^9("ek(61<?7N<hm@BE%RUrQL5V0V8AXbu4<VaRMqcUUWhSTG8n
%3JC6B(C;atEXIpqAtOPT&RCofb;r.rD4-'`bNIcmlBY0*rUH:I_Ph<HTi:$cqj]uJ=u'MBV&.>=oe^TE3E)GPF3*jUn!H!f#.:>c
%JtHJ=cGpcHC!Ctm@iD.'A/TV[RQO5Y>(87e/5pTo0hF<E8DeE`k#V/X@[!T6FkYTHm^\K"Q@!CIB6t39F4!ic^K%Z\-'Di`XUBJp
%]X-VKSG-0WA22qDFk_X^17049_1p`GBQ6Ytdnn.KK",RJ=KsU1/CXSd(K/$\,Hd"g9<YpP_Of"uB;*YeOQ);`fk:gK]+fi^EN%45
%I2oq?#*mLkdn?`M>36`g>USb4pnNko;P:\UfiDfi-G`8PlY.Gf]",#ne%EnQKIYUF<lL7OVg[oWo**fXYYdn%0@QfY"6UXee0hnT
%]'5M.mu=#:M?aK4CG&k'k.U<LPPna]b*2S>?q+kD2d9e*pBK'?]R+Qj3ULU3B((_lS..%8K[!I&66s=gV>#^i3UA$:fD[maPL0*a
%J_BYRCqVbkGNV6MI(1',2p<oTq/A.1,O\i_Dg8a^]3IX;mu:%bO@`\)+NR!'ONYFt(n7+cKS70m;eiBa7J]9I8Gf:-ONa:W\D_Oq
%"8-]%=uGlrA]dFsX,CK6%e+f)2,Mn8E'aB;.7"_mN-[2LZ"G=Y),gA`:-S98ib'QWFXi/FMVkcQPPh_0@-a_39P2i:q.\W]Q4.Vq
%kGO6'7fma+^EJMadrU0s'%5UeUrU\A95ACYR<cOBSY'M\RHK.MB$&9G"N.7]H1T>*Rjo9+HY/k[M-H?kAtI<tF`BU5H2L.GFf6$R
%6Dr,Q,;HZFnjI*4bVMZD?apedhD4[BBeuC*4I_m.GPa^lX8Y3os'`T^LgPAbIoUZe:i!3ZM2T_Re<GDHBY'<#p"[*99eT7!0Ft\+
%SB'$W\<SR7(3%rgf#5"1Kl4*J2Dk";!&p5qLtm$;a&@f%mXSfteRBGBmjc6oC$FC<qY=6>.%'!j':.Qo52K%SfI^<Gpk[rfV__Z7
%LI/1m9AX6KALR2>P<nG*<A1;u&i6NP2ck'gO&qWm!T$LTglST4k]"ZMDJ8b>Gbpmgjus`NMEc!\iT=N=4q,^hA-.b;&?l;P\MUqO
%T!WX'CjkitnpG&Y34q0>6Vj="HTft+g$:XEaZb*u+\>^>N6EY@(,[q@,["eop*<ejMBR.^g4jDpaDa>9lHiS"FLm<<Etk]Mr0")5
%ki_!tco<,>LJte#%&(@g+%aV]=OuW*Pc"uREAI$]:<GA`T(>b#RtpCq+t6<'HWg][fott`mK[5%aLm],Zs`N],Yr3l2+BVEV$frc
%G5=@4?YO"&XF_@=r)(LX.=Ro_G*Bh(Nui#mbMI&X$cb%[2-u];Aok";6J9MRaT]Rc8eO[mEtQ6(G6Tg]#0HS+bqeLQFfjtnmQ>PS
%aMLT[X/aG-nJNT!!&Z^fT.QrP(k;>Zj4o^FW#ApRrp3uVfF\#?in61o]RC>,Y@%(V060YZF9:P2rlDos6AXHFVWd$Hec4\Bao#(P
%QB[G8.3>]b]/tiU4JjtBE20i&5(CPQp'SJuA,5K?1>+<%I'?8UH\tol`A`pK61rVU`AQm_qR!j^]<jYL_AXoZ7*\S(I8ZG,!o0[Q
%dH4WCe(leiWZg%+?dPn`=4Z8-\9knQYY'GX[C\co:!cAal-o&AX4GCA/"a)IL)&4LIBm3KaI3R)-8rU*03LX75:e*6XY:a':%hdB
%n#bkG$hH9.iT!]b.<*^U;%A-pV2ptsDOOfmhX\9,2k3![ncuErL,N_EC_EN.iIK3(@qTl9`:mFb[jS4`\m6Z#$#(HDMfamLam-[c
%:M&QoZ+e\&pKP,.9qCn:GX[TEU2-@Pl^@DPMpD-)Y@g<gmr#b$[70Q+RALJRqkE\!/"5*VS%IKCNj43X\4UrVS=qAMdH)_*e+o^Q
%lOdm%pVt\?VTt'AFiTAD`1-UnVj]Q]CG#PD$<=a2<1h]2_9=^?O*-'#lC6XCA!tt^AgK.?h&I+*X<#6#:$aYTS<#a&F&%R?Al0jH
%,ink9qqRaf1NR#t)gD#r')VI$QrhKjh-hXRM1&u=I27s,ZR#74mIU,*+[GWllnbuNl0::T`'1N/50ZDJT>Wq"X?K"kb3Xt5Am'OG
%gG?F<9'inR$d:];cYRT![j't#fOrb_o/N5-')TnYqR"^mg6aHd@\9Iu2;c>9Z_i\N`A8n8Bq$j\^s"=6D[o<ZPM#%>Beq(/Bq(8u
%7%.[r+6-orX3]srl/aq1cV,_*lcjejqtLA_lnS)>ba@$q)$;bR`'-g-GJ8o^Ajc.f1AA^N1FeN+T"-3A3SL'j)"EjCB8-o_<M+2=
%T@o>$9eVFC5$bJQ<&UIGVS-M1L@h0)d8B?d-E<K&;'1-[f6FmO^9Wh>Q7BrI\+mL83G,kAcg2!'#F31IWZ:I-?>!0O&QS:[WVUdc
%_!03b*MClP]e7E>\@p3;^u+S&4f>o<\NUTQUij/J-aop:d4IKXRsNnb.d97O=IMqSEoo0T24=12-Bg0gM:2Xpgh-?\^R:;KpqX/f
%E\)#[s&25u?$_s;]_kRojY4ILcXRH^naaG/ih<9[r6NmKD7KUaRT(`\jaY`@+['-1Vo0)!hZ#NW^(bW3WN*PcrI6UlOJ$/oM$ltD
%2DO<$SiIjEK3=A,[!QS%Ho#CK*LOfikZgLCEr*.Xq/k$?5kpbREY!8S`\miONn<tB,==!oj0M:;_`.9LLi.E&C4Mk>4,.pHdM+C(
%duY9"<^%i6lk_n`Pn1P(%f'](6K1jDiso_@GmLgp(;YAbXmk!HZZ@&%\XOut2i3p.?bo<;6)q"L$b1#oGmu#<P0OM^R#73t#Md[*
%RJ,ck1*2Tl-9BspqgPmSL2>b.[e"C$l\$)(R]H=J'tqr=,(S7q>mWE,0f-isU!7l/maOg,A(*>iii91<qjGcB/r(5WFR^bX-cTE:
%olA*rq-EE5M,Pg7QNC6:(WsG;9d42j]8g;44phbD]MD4)RDU``UnR$N.(&[W1h78Zj=MnubnB&KZ-+[*MtqTZ0W%[>ht54kWTU&"
%HiJI'q4:[Z8SRb#/A/O<8(2hb4KIbrh>:haeTFsn9qD-U\bC#g'A(^HIm1m\"QsgoT>>1#qQ`;kegq?]dKpkZftO'HrUY:p^:j+,
%4_9)1<i.%BcQQZPIC?>haI/@JASm<@?ZFK<rUN.MgT_@9gFi%\ga$@S+kubFhYH7oU'in:9t%7^X,\-f4ko_bl"iGBg%U6"*Lg79
%<<odG/sS/+#P,8Tm8l,^16NZ$bPCoq[$csr&uk*#G2kKIb"X)1g/^T0mGhp@.<GeuHZtT9:NQTUf4gXG[C5bm@X:'\;CP.XR7lWc
%-.C)`\$8(J(9)*ml919PgAQQ5ARhTae/4$9CDcb_nS`KRi2$9FCZ;\75gX<'D'<YB5X-$ThXYP',O[]Xf!I`Fc0J?2#2HdLYIrUV
%2!&U6b1-ZI2p^nF9"!H6_Y<]Im4qAb-ehQh>j'qCds*rofJ<]0`^A?I_kAnnV?qnPR9R`g]RZ>SJ#F7@LD7W-c81F%[EPpC^/\J-
%kU0)bgi+OA%"4QaG2:\jMc)HCSsd'u\8%G"2k7NKp%a,K@n!qs:3o"0J=9_@D]LZ"NSiUGAKcMY3r;C5M"l:<D@(Gcgja3F6#Gk,
%jCgN6E]%/%S:didOW,mc\#hFWdadaRjY(2H]$.hF/HTF+s50-u21-:X.LRuA[!_Qn4fM7d1n*CWUd$Jt7r`=CQ12t^,ub"ZXW9sG
%>GVHlm@`%]/>3PDQeQs(.UI&#M28d)OUDV4gDL2;J"jje(@G@5DTY+:^3U]+@o5(no_hb#3Hcs?Gc0=e(J[NKH,q_*__?pS!ag]$
%Zof40$;>U(Za?pc84_I1ac=etETV$QI*/j7-Ym;-QVPq!2Ri7F6uAp&,jr'rUAKI:[TDTI^R,3;YAA]COBX$@Ln.:%'6i0GXo"jk
%%5?Ld97'Vu#B%(JO'B(M^q?MaBd5ol-L#Lk\B8XsQt+VWN6j9jhJn4en:5%2%q/kSI527ue*TW8btI[C"(jW52QXf0Bm5MU\6?G^
%*U_%;;,=%!=;iKlF*>6DDK!F&n%LJ+Um3"(lpGUEDM"5;ZV>N\=djt-XY^PIfMdWE'?t^I29n_!Fb6Wb>Gm]RLEf@W@jpR+=`U.D
%k%*#,b[S@MqU;gF.&(^&W$-SYNHtq?;_QJEP&A@!DM[6q9>A2c.,'CHG]XcFHs%Ng:DRYW2kP!6mP@#QhlEOH8X`uUl9<P>>+]kY
%P(beId4#Xaokf>FH"M@[9TNXZPr]gF(j#%E`qh(fGH/6O>ORkL!\Wp6eg)PVFsYBI-kEkbNjo!a)KPGhRZ'W2<$<%tTiqTGRZeWL
%R_OTg'O#?YVt\bI1;5iG3G&qM6J?h47j1T@G<fe/RS@Ca-B$Qe=mRR`dB1B'Sq#c]-.-QnUA=G'SW[[:$%4u]5FO$!'&D[pl;pdM
%l%H51&_TXf72nuNM/Mnsm1"4T<-"=dBG^X*+skWR5,-A/VO&Su>im87Cp.T/j=,/lAdcpK-1UcYHs@^F/*(9q%pi;X8#H4BAVJY'
%f_aXN$?^5JQh&&cAVJ\jD6B3?l8Bo;lEW_i\(shb<iF2Dq5MOEIC%_tl2ItTVg&7+<dSY^=-N&3SSGPip)-Z6RdS$[,HLCE*DR\n
%Vn;HF4s>P%c,tWWIGpm5X-uTC3F$fBJ(p[_(au9i%pbcA2=#sO8ckZ"?BrNu1<YB,?Lp>CP_PmFmEhGu4^<5FJ(pZriA&T2LJoRb
%H+WRmdQ)ks41#<EnTNlbrJ_1KQhPhf??k\Vf/`_^LYK8H*VskZ;G;MtTnd%.=Y;ht=jZ@82FQ:oHf:[s1a`4/3F$fB^[bOnBc\oi
%Zj;/U[iP&5btJopg;dc=UV!'`ZYV6VoTVs'rIp#AjHJ86LV>2mnkCc"Zu<q=R52a8LK:PHBA:\\OM`pfr#n>3?[-7V)Q\jJRf:/k
%HWuMkm[i[[6i5UJIFbs=hC^p4hN48NKno@FhOL?V[L3UOV8pi0iLuEsAh$8D[*Ing4If"NGe`apK\a/m%TRXjg4ik'2r\mu:Z9eP
%(MYHGm!9-X*h&p1W2;92[!>o$BHKUBM11iR_F+3a7oV1tI%9?96UQ+*k-dXJK@kMX'YEk]P>%JF_F%D)qWo">DVO#kkjs7!TuZbS
%b_+!7^$sDJ[R6Nqc.dr--LNWal_e-&^[TV3+[EA?G\Cl9K:Xun$P2Wi+2"]"j2+01ji94S@@@Q7c*B6-8+uT36/@6Mp9!!77X;T7
%d(U6&J[o$1BV-40/u$PM_F&7@qDo/:oG8R;L]+I3%eX5,^@4rX+*G%5)J%R/(EV98;>Jj-L!J@oZQ-Ac7,$E/YP?i^Vt+tFOd;N,
%mHNWI6i5UJI7d]-r"?2,DEH@X+(i(QO99!5gS)HU2XQ3R<^ItrC6<[fiLt[_0%89]^@4sO1rF0ck"`uH/j-L:dWJ%5>`s2W/:2Nj
%$P2WC4#Flu:4(rnrE>n9WToh.p=Q=U[Dt1@"^NJI@3hj*TQl,s0=*CH7i;2:,Ob$[rS]]S>/PWM)Qk"B>[E4O-O!KMB`)A6*fgGo
%1SNl<eJEQ9e^;?>UG\[uL#I"JXKribDslf,o_#c%[_5e]73JY3)S.o-&,e!hTiF=%NVmQfeTZLblQ[5"f`'0L2E/p!6Pl<>^/-;-
%i751+&]kCAK@?>emWWD4jYRV_C3rIs6LF+39fVRLhhCYh3?qeqFfpD@dJKt`-&fIQe^N);\;jetKY-_b:j?e-*Xbb>2m:*iR626k
%jI8$cjY1X7*"GUAAiP,#D[\"&mqOh-:'X7(WE%:YcGkr\\eaP;WlNYbbj4]Ij5$2SI<FZ6A3%?Nc**Y-=8#_Q5?AU:1U3^j;Ra3B
%(XK0(2a2,:S*MUSd6@pJi^YX)Bnnj7J<qcn>c\4Sm2#QcUi._X-uEq;lY$D-Xu1\SIiIQ'aJ@E<B(HjH(g2AG*adS[_T:eBGhIHO
%%YmQ:ONgnf_4/fK]XB>To*9Q7r7]pB.`Y%dUSXl!"-RBs']A[D5"0HAI<7-\b0POXO?=7M=/fh[s.KucDMNA@8ir"h<uJ^T^=5s[
%DK'n#qHY-[j4/=YRU5R^(SbV`1:mGr3ZJTqT8'b_<QH5`8bq+;M(gs(@rT&#*C+"u!hj(JAPs";p\)PR;g,LoWQ.Ej/;1s.R\/IT
%J0'iEX0&T;X+*W)[P#I#bRpcp`V5M;4-tk&pq"HR&+g2#,U&J0#Otlk*U`XKf5(_B78rmgR=L.M#h^Xp^H@P1@Ji]'hV<K-56pWf
%K\*-X\)!%4Iu&E"^iqXeoNmaelhlCP8jdk8<Zh+X/\`n!=d6,^[e6X_&@_t-jh5m3i$aE%.TU;BFlg(D=1If8D'C[VZO$SIJ:nd9
%/OhV+`0#Rg@MGlbRKR!>`NE\1Bglb61dm3X#%@_L7MJm+`XuM2!Ee_bUSLjF=b)6%"WVP02QOmn.rDb@G;!FWN"ETQLLQ&%T/(_=
%&]RVC?o"c*js!F5#f5UZcpm;lYEZnli7%+KE4*mt2C&nA#@m'iVqgPg,1LL(D-,=;':mU[.ram5Z),i[k]11#gqJ^hj\h/A!1(u0
%nF#)81A'tIPl'at7_+0;lPGiBUu8'Aama8o0oo;8DFNMC_X:=lDGMPLT\)A%cqiIj$%E$1'IWWNGg2CD_>5td,eYLsN<EtUq/.";
%]Skd-[A;t<;Y4rrc]^0=pe1*GiP%C1ld![Cl\"6)]6L8rF]4"A1q:rG>l+mO-oU.WMt'ra)gtr:SMX\h`Ig>R\S<l,m*="1iY#DE
%SsdHk<aK+#m'R_\`u(6AX3tQ!pK(\W\51II`Hk$'-e!*;?TEOYNXHYaj^NEGk"Y:1iaJt=M!SFmKqPl2:[9C:6u4tVQ:oY7g4fH8
%pT.\LX%ItY,;W*4lgAr`Y4l29#]@<1*Lo&=roJdrGq8CW;"Ll?0+EnB0#q"L^n`d]YXa%agg2B#>2))FLEa\1/5NiZ9Ys8\5fMf,
%WD3R8dM%3.eH!.@[6=A>_"-bOJV>qhQrK%"LQI2E$Bq0YV\-"&U#-2Sd+rSelkDn\&u;s(U)Yu`-RJHh:j>d8=,=DAK\1H1!1$AZ
%BE\H?.fQo`GT[$o,d\\g$[5b_f0UU9%O+<<+K65/mVhe&<5'>P-Ia91YM[TK(OK`,qufn0N<op=-ll`-2Zs7E,VIVNMQRYYEWi)>
%+jcLK;Mtj<`k`-"SH'ag::5(AIR`\7KJ>;nP_YA=UG)lIUFs6]7s;l6mO$@4V/RC\dDE?)qXV,s-HIKMGO+s--`pA%/BLQ5o9ZZd
%[V&,<7Qt:Y>JsbL8T5n!"l<Dd1&UF*jAe3=MKM[/-0[jEH3qDr!4\ZB8n\rf1db1(J<(_J)]QZnag$B_kL;*jCb[Yq\=hoLlcqr#
%;lT0,X23gQ>"<KhUute@82[0NDWB*o\0<GFTlH"3`892PI6EHijeI@N(_a5Doc3E.qk#h%;Xd@D5Uo/;oJFK([9_baC;#@u-9L3p
%s,/W#W[=t6H+8Y1IcM'd]uS''b$Qh]XZ2Jmh;]N:n_T9?glmd^;,npAN0O"84\9e4Y\9:j<36rK0C<<;WTo>97L(Xa7'nEkX0GE/
%Y6&)iFB%p$;QN-oUFP9X#RkeG":ipRH6Og.W_Yq28#-06je\,fm:N)-j(tT`W0/DNP2;OZK><[Y7T/B"nkN1(P*V+<cpU%R!B#O(
%<)>TPUT.O],3Bn^A'LmY?9o5#2Z@b2Pm\HqijX1/<KqRBc5!!6L!]e'O6*+jM+U?C3F10peZat4%X1]T]fnbn]P_&mPp^8%L]o%?
%jm'SWZ.;*rpjaj\;KXLBNujDl%e&M9%'K$\X"a0=(NcMD!^PK+N`]TD'bQX`2VbDnktQH"jfd,*B(Oq7pAPuaO]OWf/beR*(9ukg
%,d\N\[(@cFLg-$$b65"1;CmOU$Y8d4U/@pHdFXDg0*brD'rd=OY)4cbTB\KZH(!(3"`[ZFN1RbK_H@Yfg_B!2S==e>6X68GN%SoB
%b,#cJ'9=bI*fdb7&55IKE)LN%/dlPu=W]YsaZFqF`TC<G:K8m_k2%k^7[lJdB#Nd4Q-Eji[hlS[h2?EaCWOrYptA3.*MD;EG=Pai
%pS^?&R(Q=56XFJeFtm;8(kh>%>-)fB;24b[/Ub_ZjEC+BjGQMW\9sJbo*3T$+[,:r*THn\;2__&0!@P1oW8hq[ubQfm#d"CQG+u-
%lXRtb37(a`3CNMq.tV$]dF$PLENt2j/tAcB,X#36AP?GI`+@miZd9M(a\qYEI8A7goYaaD1KWPJ0=3r^O=1U/Ps@)t=P1hg?PgZ"
%o>[CjW*P;K;H;C#I9fNQ^#p0[G?#2AT>ss/6dB-2=pA.!_RUg)X)GV9oQ<H)XE@:Qp`fPMOnp!Kg*Cj/'leAq,i%C+/gGN9VF:%j
%=.3,@#C&tb\^"oG8e=Hs8fJS)Da_mQ-h/[miBjjP;IpE.n$\<Aq/V/=6.uifMf7s\;U-LdAPQL3]KdERnI9C&TZ-YA'AK*"263R3
%ORs``Nc?b)H/>!P^/R'b_JA+BHRd9t-a#muLR,Y37;:RDo3lPN.IHdk%i/"X$kMh!jY\R'E.AjaDV/`*MM.RP^4a!u-mAs!Re'-P
%7pN'7bX>e_EN97Os7:[MbbC?71)Xp0VqKAQq+P*MDlDfW(5YB3X_$R-o'1W]aPqU(o.pJu?-%Aa][XOE'%^c:9H1bA5+tU.2Ue1K
%&o'1jo<)4.*SNB!pCVu]gN;:gI3q3=B3hUO^0bKH0=!PnqlroVXbKn`Tfk$+Fi#"0QURdq9/oT'ZrE!k.QZQu0?9%D[3b6n=LgQK
%_G]=`IO=p&+>+aKZ]>7Z=qS^&*`tlL\+DOm<pbR#\FrZg6kP)UE>)PGQLo=NXC/Be"+=75N*)-?WTNPUnhMl=<5SIs%b[FEA5KVR
%L:HLi_=[B]IH`-4'GZLoa\11#RHSFqDpUVeC,='Qg\L/e^+P6-;c;_0)_cb3"mSpVRrDDF:FjWP`P5G^P8AS7[s#!1kLJpINHjrm
%,Jj5ab>$j9dnPC8_Rim_*<GnZhQ;fj%$^<8*[,>JPS(ILAP_1!MeIjI$WdqlhP9)p='jR*PJrD]0&TL7p($5;gq&$#Q(i'e$:&+U
%dg4bMkad52)GPrDKJ3@G`=0+LG=G[$>&6<Llr(m^ASMIg8^TlF_E!uNFY9f[-5;o-YebLT;6CVBAMU&Fq_NSVU6UmCO/bX9=r!Bs
%f<CjTI@M,INup\daY-U)PAM@#inWRm.77;M*'k<[kTsTR;J=3MRu0u4JLdK*U=iH!Q&8rE[+VuCJe3`UW52_bXcim/-2kZT]*qs#
%JF@Etqnl>-LjTYL*bG</X/A+1,dqmY&"P>U_UERU,U[NJ9?SD@]W(a[_dV1>p:m[p+N"pI3`g=N,=npJE%nu#T_)([<am+hN5fb7
%r_iUJm=!#]G-BKBDK?U5++`G.I<%Pr4p`e.DXNaa8i4LGDA:,k?q8g@5HI;_CT)q^H$+oChL+ecX2E]_F1AfG4+>qcjXuG\jl5Uj
%kR7\r+tt8Aj'#;nXn7LgiRZft%a'<`S=Sn0T,(d8#>841:i)eu2kTVj&Ju<o7K`&f;3U0_]d0Gj,LRL@MLaPDJ0Ro)&T+J30Ilee
%a!\K[j^KG(iYL>YoL$V%BGPQdK.]^>kOmYjL\Kt@o^$-kGhqXB/.lfTFej6VM[$r3^B1<M?TtZ[FP7%]+p:1O_GccW+&RKAYNH!=
%HfTQX:+)C6[Bn\*WSP[G"p1^!l:FM$rQ`B&`P&J#W*J\HGs!;p(j6`LG1>a-BY9f2RYBO/#fgpC/o\Og4b^]#`R+<heaIqMTL4&D
%]uA?hfZg=#YVA@c;hi#mZ+[1*io2AYqKKkEMfFu\lYB._rp]ZT"u<Rj\*+g)#E^0#dW9mt\-pH]5Id9qq]k@HP<[^a,#R)VI=USa
%Pi!YYlDVfKDYZOZk918Zj0YG5"gP9Td')08<sMrVjlc/f^\![OIWmsBV\_74Q?*n%CNR010X0:<U2,(,6bIsRf&&rO6O'E_[,n4u
%(_WBaH*poL54..N3<Wr+.ITUA;tkpRQ/2>C:48[S?XRu%N7VWXaoShoiuQsI#-88g26^;6D*A;sh6NoI@Usr4c=s/5giO`p`"K+b
%6bZq"[q"HeKmZj]9%WmnUKi$dm,jb78*/`*.']BPpTnYS]CP_O=&$CKmClm82G1m-`c7a-GZl^pl6jWaZ/Kpfs)KBUQSV9km;ch7
%%!F`?O8DT#NQKpu3$4+jYE8:_?=BL.\iA<3h0g#jf]*X.#f)U]?IGP7jO0t@lJ0)90!;@4)stl='91oLT),U]eOoN2)R)KkY-n%b
%Z-Ug+V>jWt[6]uH\)O"!A9/-)Go>i^h[_u*B=t;\SfZ\O(o&=%`KsZ)R%]_q;DB*G]LDu%;;C![s#flQQ.IQ<Pq&DH&_ck,V$j+l
%n_F,^g87I^XP=H%C)WVS7CZ.(Vf4,&EaB+&S<d0o@%UGuYh(:NloN(q.+4Eu(44T0?YV\?m&1;k'33oKbd87eDa;"RHD?7F5GbO`
%quRp?RHet(E50`CR&r1C.YgrUi.bEFW]ZnD](;615+Wa+csi0n75(-UZu@Q:iNJ`?Omsc%;(=H1&=qErA)j,4>W$L=7Ea$-3Vk4i
%Z`F%6[^agZ$9tlR3/I^0NP5+XcDK.6?3J9#pmi<[UCDo@-ku6ECV>L41po4s>AYsYg4/5W`dFaqlC`KGHPeFL2M:*&4d:L)iZE<u
%W9Xm</,(7PY,)NB48b(jjl/Y4;VCoblV17Up-`feRMB-7]IpbO3Lt%YcH0p8$/2mlr$+>e_tW0%T4_(4fNG)r^hN(a@D21dc_d4C
%3go,rdU";h4&/`;fp%[/k)D.B@,p[@5Oq7T&VOqSMe<Y^!K[/P]>1R6e;]gniTJcUHsMBb"s1VBG6HYQ)rM)dp'4r2_=2t,R1^4!
%ao0sYi@G,"2J5OnREFReAaUV!3U@>OCX]UQJf2hdBeAQe4;qg!#;@cPbup#Gf_V2rC$Q\O(XMKu>6\;EoC/Zg@!o7-D1Ff?l=87(
%S%/0X`_UnuSaAMu:EtWr9]o4;%>Nu&SbNZ&=3?rM8P3X=Ql.Y!(q2;M/Pt[+mt5Ko*PC50Vr?ZD2ET#rEq0@>kr]lmi`^\6GY^K2
%SNOB]W;@(PUN@,UfCp)^kE&E1V+28GeiS'#efQTD?%+oHddZ`REph1AQoL;6kEMJDBZG0:ClE2&.mJN,f?:^BrPQT:a.H0YU%6:>
%ouN0<WIMt\EAg$QIAV/d0_P6YU*$0p-9\Fh5>-DuHE7MP..o=ZIH35p+/D(I4gf3WOSY@&5'fEbcVYdJ*eF,ql5S<DGuC8LrSsF[
%J*:-g5@k=EL?="J3)?"eNUH_k0a'?B,nB]bT:'i`82toZF=j1F1>(2D8:0nI3='Ng][UC_F&R-$(g^E*&$FHj<@V61i]d>YCAd\O
%GB.`Fg3?cJ[kVTeHun$+lCG<.N<0(Ahn&ba/D*Th9jN-Mr0DOOY9s*WI2hb6^"UIdi<XbZ?]CS*K^bGq!Rn,A_684n:=4Vh/$\[;
%-3-75l-K%kFo'kU@L*Hs8LS3l[1!fbN-b&H:YOP&!d))Ymp<3L0lN]i;)l8OUeaGBHSD[FhrU^?4pQp<if1,t`1o7)3<&<-S)#%>
%b9Q69,!<B3>:(8O@NsV&qlpd]TbgA>@K,t,R@`ku`q%f8=C7"g:liPnL7t>iL9ueE4^62R+5O-+q%^Pn#>8fUI%%-T3(o.f@9;U\
%Yd3MC@<dUK0HQJHI&]^;aV:UC.#uRf,WlWNMLpW*rNUs0)_E,J3]rcQ6/Fa6"=OoJ43.1d3]g4Lhg=;,fHXq3^]P\P,OUWV'Z^Li
%'I6X"UPg4\(^[D]U%![P1Op/P-nhKY5:IYLM9$p8H$j;E$u:`eKCiDp4#LY!gGV$OZtfXpCDLcKCIi($"M$HWd;5\J)/G&VQ&s`q
%OD$^C)a%b.2%XeuYJNgUAAmLn5QF59Fb7gV^(!%C.lIcNRIMUnRenuE6l.PFkOt+0>6n%E*.*!F6Z%A:bpe?@5\3`.)fF;[HCt=%
%HWmkoG=%?bPrHrYW^q]3lt;BeZ+crNK4E5Ap`&,]l^9nYD5b*]M$Y#Ym4tWGVbet:2cq$.4`.a&b(;tU,-Q+^p<gZi6!'Rg1TmCI
%'\%,kD&X7\k(_\@VZg'qRr7X!mA6JmC%cC_S2SX)%;Ik>b(3Z7g4PF7m/#[MOnPsn+&6MPdca9W^q+EGSd$(u.W=$b6=$CHrNHuh
%DEFOrUo0XXlY^rGO^M^^edJbUBbtK"OgRF-TU8ctWi\RQ[F%)&WSG=5arP;m<;ke9?l5BcE*bRg\sA_3r)o*Y`m/>3qFn>'\C<E(
%Ot:P4J5&[B&i)Q?F8q/iq,r.Vi\Ne2de9pk$Rl>XlArJ$ks3R%4*^cP<[i^D1#lXbdf[X)c\!iF0F__l(<<j:4X.63SMk`C8MB%q
%.X\\1Er7U24GjY**b9tdp<[1>&Dc\WDsajC=c2r&)\4Q&@1V]+XM;#0(SKol54d.d&fPqdXE+7CZe?)?2:]8B2Z`\in>X*;(Ql&'
%<=4J:6^a`bj]b1(R?;@BmG'/s]&ndY\$c>#YXX.W6i:VfE_G)Rg_!4+B#J3"d8a?\7XF<#&;6MbI\7,iPL^7bE7er&?>6P/U]0tr
%n;4?)A[]%$rCS5"%mn9(><6%[7e+G4j14ZJ(r!(idgM9q;"7:hB2XG15;L_DKL;Jjd=(UhkGO7K/SC2?ll70MGT:Shm`;HHa^o/_
%ZPc,he;1&"WS7ocLO,T>$NS1t>9itg#^s2&>LL^R?q\ccmGu7Ob1Zm@;pOguLlJ=A+srqpF*.UU(LJ.JN?$4\#;GqkLK4@p=^KBC
%GMp9F?']>4bL0;qaT8n\5WLMWW'OT5KZ%D4STZ)M]OdZVjnpt.ec<[S1XKDT@(gcs)W-bWMhTr\m_!_Fk=67Fb]Cin;Z(p%aHZ@&
%)V^<=2HruR<:&CfL.IG!r]>s?Grl4eZQ@i7D6>)qZag=aWeaHtjd_G,6Z2I.Y:`Y4Kf@dk_!f<k@i$:PgK<Xb_mF-rP=1r"jBj&A
%NT"2q7#+u8O.t\ljP\>OL>q7:-cROWmE4Hpj!3GU0;W)r9-ETeY`!th&(_Il'uO.N_+Db91Nb^t(AH+FZ6R6>h*d,*8f\nU7@8Cc
%D?Lr)c_RhIVr7:3Gf$nn+;'j-p*[<hJliIE9L*K<%G0-j#+qfV)`IGmcJ--?bn/cSr_BV:@1i=AX!93`;[ac?LoC.Mi]>ICn:4J*
%\uC2[hM.;p&5hjj=l_s_i)LL\`0%'NHA7c%NN,_h8\?1Oo?)!-1Km_`bSCVM9H0"7[P&0Ph"+#;&Q49ZT*D.Mnl)+_7a`kNaR#1V
%9,m?EE/4WcFpI]L>QuXa/Nm1Mo($OnZOK76W19=a#6[/MaZ3HL^JIa%CCi3fT9Qg="*'QY;j$%C`2t4ID"Wi7Cs&*]hhB>4ZEX-G
%:G6Ou`s,s^I6Pa0KoN(9&]8DQl\NLb'1LR;EQAM,BiPitipNt?Ykbk_)Tnb#3amZjS+UO_rA@gY_[2gmqrHXgc/5h2l&DPV2SG6@
%YSf[mcnifD/o9;K)ke)!C,UAXC5#@`m&RG*YgK%0AIpbf1,?-&p\o-KVZ-:51[8m^fR+1,(H.mQ'4GrYN)Z&=-N5W6S:s[G-)0"-
%ZoHP@Rin57*4If#^@'?M*tKn[S+T;Yp$Lo"%ju0W^+t0S2Lioek5BXQ@IsJ8,&CT)Q?#ZerX@&d$QBaf;[^S:RZ/)<>%*VFj6lMJ
%oCUJhgdPIo#=[WkDX4ar>fIX3eA&XJ]GBd:@WQfoOWMPoPg7#Pr;B'f!DLFa]RLl-^SZqj?T>U02-<_P$KErJM.:SA*=b;s2oTBL
%-%8fU<A/k[S&+sbDAo#/jT`:=!DTF[ASW;]SBZoL\'[B5m4]Rt%8k?t6(1T]XP%cbeQuC7hmHpUein92[;pO@G?\`r2>W"f\/0j)
%<7$-LGr@g<qruR'\l-hE(@L^PKkPF0e_tIoX&7XYSR3'=eV?YG^QO38U)FO[<DVmAe&rUU2qBiJDeSPh4.:D3W0\#M$-hA%bU<a`
%D!'tj<,aN:\'K-$GcN#Z,DDpIhXlE2ZCns?j'H'*c6&Dq'25uPO<70#R-[H`2ln^2-&WDMQW6*^_O@H33pku"gr#uT-L0(&SIt.(
%#&e-oaVPNI\9/b+4f:4C+q\^oRBYE@3fLjCmK'GG]7KLi8J\PXR=kiP&E+-E'-)lJXTWOYC"sN`2"S*-7MI>8k;K((/sHn('nJ<<
%`!i0b]d$RL^()iJ:q-/JUOFkL<oE>1?MHMV>gr'1V:PHJ^?p/qlien;KlWVZQ-i,BMo3h0VuG4C62E+YCiD;p^GX95^,W:>XP#F3
%Q_r>M:gKi.K?SrEc+b^PApn:9"t:Ht<B6ZXk&h;l,-:jsbbPeRT"k+"D^cYrj`e$Xqql?K'WQn:349D\1,rp`,)!e3P"-6K;D?cR
%agmc'hL*8%:Ur4"dXlKiG.*E@Q=>WINV%:$#<5G?4?k3:I+e_cT+X4LboJ<!-?antMWD#U4%kL\Mk-\5m:_=.H!`3S2o`r1&Nb)\
%Wm?,`lqj*>,gXen*NVX"\dfK;)+3&9r^I9TfSQ[t$:sWrcb[S(U7'ZMRZ1Q5;F6r&3jBpm=&2KM+S-Jh%V>a:_D@\6.:4ED@Y\Rs
%l0#tpech!>cb.4,8W5AP4S'=M4ug[$W:8#8lnB)SVsr>pS]8V:?0i+V+F-e+^"B=6hKJ(g*DXD;RUYk&3sM,H1L^TbJ;M.\`6MIA
%C-+.QHJVjj?l,qY`(oFY@n/#WnqUoBNOUH]W62pj*o.Pr]\(>`eWdh-d'o2qHCq5=,p2UW14#_<BOp(Em5oo*6e"F3_j5buN=/8J
%^j,;ScGnXSS4QBP*=7(7I-L`,Y,:fT*Z`cTY]/lpH?:tWd#CQ9V]9r!iRF9V7gC9`cD`UP7jk*1;iq,^:)t:7:9q+ketYUJBUq3+
%6;2ID`Rgkago54[h[SYlUVhX;GO!DmUBBhAX]%_/VEM%O#MaLq`BssVl'hbdYT"L1deNlPb3r3R*sVLT9d2?Y2bNs<A5oVpI@WE]
%+h]"L!_1`I7PfSB-n>g?pRQ$rd'5-rc0i$Q.U?ZADHN%K3:0kn*+TJ9oP4?4AXUkPje2:4bWn/4-D/+4R3AAGWS/URq"PLTc12b7
%PK\Qmf]P'7,FK_PX`<*`jYJkD1TW).gH(`'ld4ei$t3P[FhV-QP/6HeVRKNN87jOVUWmG=:GN#LDJeq^%*8neWUE!<!H\?;,Z^@B
%WO.,&KiYC-^k65:%BrVLeSSS8h;ot6YBK>/Yo0AM),_H/?H&C?QX\BPpI[paNO%%N]PU6V<lWD8Q#8F=]2qpK?2<]0S\iR0O:Ya$
%DIlRoEKck[Zm'%\&7L4B$6j:Y%lp/7]Zpg&UrJTrQ#%!M3eTMV6C:M<O=3=GM;^`d5Up>%U6%I<Rt1G';^@/\%ho9]eL4qJV4=\$
%dt1ikQ$=A!/tt3'.qWHM>RlJ?m;Z*rW!H)fE[tA8?*8);FuP)TANVr2a@*Mb=tSTrmfFCB1";uI6[,)gEi5;u"tf3k,?httUd1HB
%.#%O[YflK7S^9nk.B4ASEiE&&i$@mSBmY,p,"Q2SV2jh&>GSk0f#L\]85[pd\m#2l!N["\5'AF_(,8:bld3isb>`C-"XHKV!jDB3
%"#3gAf4?aH0*e(((q&'lCE:pFYNL=6Y:%mN7`*kSD7e/oa$a[aCN8pM<o'Y(R_c4T/_n.<M;;CBrGnFdJC&>%cu*;U_'S;V+pt]H
%=El[!UI-<S;d!4pALk$\]ua;"G+-%4'f;t_[`gk^=R>fr(7t7pF&-8ca5;S@`(k%,7%1U'_8:rj%Pp`tD>p8!iqW/t^&O&0nZ`Im
%ITGJ'e5L][igd*Pbpm]WAeKm1<0*Rr:.-ILfHp"KQUL-bNj95oXMiL<d[h`p1'Q988/qa:$QV$[,6crh-$*KnM[QONAO'UtO:eP@
%bSam\@LDNc`L9N]H^TO#MiHH\-?f25"r4cK4Vaq.m:a8>[=R%[4b7B:\%kQ<I^f2&%1&cLgPa@<6Xi%aY+0e7EI@DkcJ`a.q)$[8
%gD9e0RS@PdDc=!iKK`-YB>Uuh2IR7Z;iA?(L3DJbg`>>r>Mg(ea7j.jkN_'rY>_bV4`#mce83JZJ'h0>?s_iu2HR)_q"E]1:cXVP
%dN%>PQPeU=$r'alf(XJ31)2_APj?5V+dTW@#?TU`]:jE`R9M&l?+=\daf;,&@k_mQ,`;(6qmJlP)A%IAhA\R?4[^8cl+QW7;b$\c
%2_WFJF51`'c*WKM2lBKVrL4mPg`S:'%\f?DE<F\=q&g"\NZ2P"e'rA)gtgNd;./1\C/1HF;dk_:mJb?;&j+KX1(UH+2^G?JkobkO
%*B1pgl#[KUbbn:An59(8.&bGr]Ys^s'KYkt.^;`XY9:"alWL$n>Z]ukkMQ=J+L:[RSl[REV[$'1SVV-<+,E]s8E'oZRJ!)8?:m::
%WONmuaMQJl)Y%=J*DTRV=7LdHCkmXqfK&SBk+-I!!U%foo:9i[q-^rNDN'AMOe$Fo`^T+K9KV3PQE2!>AJb2UZP.esj<j<@YZ]1Z
%E):]E::O&5(XNf+NY[Ss6-7)@\,hP&khjTGiFMu..J-EB&59DDN]2lqY*FPGh$&^2E%Z4SJA1=:=rCI7CKQkT&hDs);XV;2fUS+_
%fY55>-@#I0WA5cFZ]##`'h]02cE.Hh0sZtaJ1?0S:nq"p'1bT-k&H^(_K*pSF399a<WBmpW"9_"547e*T91p3a:N!AB0#!0F3:DP
%X8YJ,"q)<+ZlbGe8dYeZUSa/0[hIAEIQm2dDC0!mFebJcFaih5DNgW1QOu/=R%KKsL1iYq3AXUr'M&6MB/\^nRBVC8q:>CnoeoSS
%>e3A"'g6.CmnHr2mafh'rlHngl^hLdF%=lXIUJrb_+6@QinSD0rUO'gZ<*31`>^(r?7sAkIdJ+Q!aW8*,brgKF,GXhc[YhKS9;Qq
%$`$,eoi-#)c^6_*ke*=I+4sI4qT.oroCU@r3G6t[hAlJMAm-0L^6lc%',)tr1M4oMk3cj\R@%[H#A-U*rlO"D%Iu4LJM!G.%*T^i
%1M4oM('Z]>5Hpst(o2\I+'8qa`aPVa=@$;j]I=TAOsd7O(c="_RYlV</6>duY`Bf@7W]gmdk)`Tkq\<aTZhuH#<i\/$DTQn5\j@R
%asq"P?qVk$%8N@54C@tjQ^m;m/A.S^j\t47YSlOXPRlY@0jSfH0r'1GPY[;!6X]$rb,9AQd5X=Y8)QRqYI_C43g;:n`:77i&B]d.
%CI@p)8pbMe7r6]#2Q?N@2*$l#K0L$lVoJ7H$uHd&#7J@AadKV8.<p%Pk@8D[.)#r".\f;e2A/f(H,Y1>H'rfNffY>(jF"%9PCdH<
%!HI!HH43>XE"q>')X6A[oc1*`[2a8V1_Cci(Ee72ZB,0GUt2,blobXpc^VJE1?.S<&2m/_f==k15gEa\K7fAXjijeti',&,CHmsb
%%`2gqElL-HSC#9HS>cq&>>ll"j+Um&NU#U6Vt1-P2SmX?QmE'//He9cBCpbt3]T!;&pQbX.rTDn+/l9`RHL9h&$4JI85MDiEMjCI
%mnMp]iUANG"fm9MiABPh`u<#U[cOtMk?a0@b%\fKddrei-g-5FB7rO0g3mDPCePHA1FGEVj^1:tV?]>iV%_MUf9V5ldGh#t`4UMj
%rldQ*f;DE_e10ie=i`>Sq<LeoSCS3ekl_1o8i^ekNA'$Fpjj=Z`9)*Ra:9C@IUEGqqaqt3"R;!*+C_>^!Q+C!$uTmS8iOBS+Ca=8
%IOdaordXXuF?,@$=Vq"nB))q"8dd(GA-<IE7#@_L9@PSZ[aMmT8kZ,tPhg]cgu%]+o5Dk8+mrRZI>EGaF,'jj17?A8e`V%`=df%r
%2ujI3*"I`WQ]u+RE+eGE>,1WYg&*B5nblOEhe*U21S_eoqEEYlcC#DJcj+N2=ZjmE$<3nIYcr`1Im^-JGR!?E-9-9Z"^$"Njs`66
%V<sQALO8;"gYY!g8pf@jD"P'%<FH&ZT+0W#[]k@tcSd-#?b[qj[/K=&^B[)6QX4C@]REdA4#h9bgj%F,pY!R,YEeEXc'l(./)>na
%C!Wsm)^'ZWotG=G*e'saT9IU`44J\hF`L>qDaH%C4"!gBFr/[VoC:j*1[=l96FjVr?iu90'o2!4422iQ2QXqZZDCf8g[N+kj09'Z
%6Rg7(Z.k!NfB.H:YtrVr>0@_c9dG8Io>KW@C2PX,_,0a*hH!os(:ii(4&%&PTUVSNe:9U6(Y:=S?2"T(-2!8)o76mF3<Kb/9&$rI
%>hB//m6,Tb.Mn[':M];^21NQkDbsK$3fq4lp9m%cXK)O'C=A0J]Rj0n0n5ms<"E'+Opm8HFB0<fdf6=4S,NfTQ($pp`SYgCV+j>M
%h-Dc8q>#p5le@0&!1D%QMF"`oI!%SC^pSKJ-K$qpV2iDgGBN>D^3k"\_Zj@Jh1WM<fY$\YGQ@/<Z?dE*=EZI<aZXS+Z"tKK_TF<(
%.76o&nbKZClYl3-D631a05mljgqU;krkZ.qKtb+tk3C-Zp&1pq`R=_0?f(e7g0@p.pLJ.:i;D_(?U+C!b$?H)G9>o$=`EOa^"L,O
%5B`BNF72]>k5Rh>jX#'+Y1*rdq+#S[79EV2Y&+=s*b.5B/kiEbBdrOMKaV5OR?M9-cgDkEBSQqZ5M^Smd*Z-b402`d+M.FKH"]UT
%bc\mK[^!N>5/k2EX#Sm^E^P7TGLtK4fI.F%3N:3m]G<'Vj^1'^CL=%FO'^.d:45(hr?]XXNE=`e%_R$]]Qj#7MKnjTlLgd[&jH;:
%E4?pF=J2$1M9&mM[T9O\[:s3K[\MX2?Lila/Pr9i-1O_NL_k!<)\@O7]:M)$Pghf%nPW#>mUl@:&,>1Z&k)D,n`%Sp!Qs,!Z2*GE
%77a>Rk3L(I0C\Kg$`b*45e54U/o+$.ceeEsL6,1qe4MC/lGH%u.c5`S2M/Er#3WXX2V[fq\#4"6<o2Y0gt\tRcsg:`hd"ii?8',p
%hcdSciNb[Rg,<s\8BBZ#X)I%Bforh[Dro:'`o0l]qrYn@A^i[*A#Xoa:+?]u)ar\FPD_@@DGB1S9q@K.o<?>3RVj@#7CI;sLJ;s?
%1nsTO%\$VSViS>XZ>=etD&i:>4Z=h5f"ot5-\tj2bcIYSm2k->K'T%u7Vu8_\?uC#@D<jZAj^Fd1;[XhR18CPqSKV*/aufthj.?i
%I_;3?4b<b"C:mn>nm+:(ci3e&&dYR3OZ1^Z03=]'d\8-smlsn2aOATa`-fB]oAY)lk&f@VUZh;"pAJ@0^)pV=WSY,9X>c:FAc27n
%;?C5(?Gb[r<k7i!aXrUH(Y(Tp\o.B@-XYh<I!5BVYDu4.IT?FDrNXf;R^KnY&g6iWp\-&Hd2W&5OoVW0]mV)+b)``dkpWS*gEjGg
%*).f]lS71ZoQQMKaV9$eVK>abO*d?WN(eXEO&jC2B:@TO)`c\J.ILdpDG$U$hp:,Ci+8.:].'/+Hn,Xl0tAd;p1GHmI?iYOH+K_u
%MNl&Iq]X;`fPA<BV'bb'I?n$YQtXl[:G6"<_RBQojdP!<!pS^(A\eM7%p"p:/%2g5^UV#JC0f%J"eR-H-p_.md!]KNSeE!b`fO'k
%i/uHThQ&g=rl^MshuC8AFekF(eW3R1ns\!9G`k7&ALXH)fc0Xa/G!A=jgC\G\'/4Y5&I+KJm,N#f:DBgj<]lG<d'<gRK[%kUGh+=
%[\:Fbl*n1[*8NA7L0<BD>u+suVoQ\Nh7&VO5&nNc>NTk=?PN*UYMN$P#^Z'b0AqU.<Auuc;iO%/+/0dhq/uN-5L2S\LlF$f*?D!q
%^"b3rIF@OG&9T1od>l4CN=s8.S9@lEI/%QXfNNR43-jd!U-Ka<CO9<Qm1C+R=<!96R30=XgW6bd/G!A=j[]>11SJCZ@!,mu?-()D
%SAG$s1";nU/i5f=F<Pr'-7&3;\[AHPRjWRJUY'g5aVMX\^h\:%?"cVM]oM$Y4bbSbn(Ra=c-a24Q!XK!$^.bYbp<`IFoH[Bc-Ep'
%QI,flWdU^9_^sXb4MM@MUK4K[\l-7krp$N*=2.Zth$MPU>SH_R[k$%Si4$alp)VquFierMMn2tFm/bk1<\$^D^Z.,[NpXrZEoS4#
%SW#b)RFMWeoq-':*HE)V,@=)l/2L2^OHZ(F,3@ZL-aV=-ba=,sl"d7=/Hb&3'Y]kL![Cj4RoOSeL9DnZY3(PSQ9]dLi'un_Jj"Iu
%jk3h=MKcNgY1SfpkQQ1?g\$L4mc]qUY6NbM;u0\SY1.([p*Sp6N>sRCU?iK<L>Q/4*VN+%Ou"&DFNBn5]Cg,mq.%*Xfc#]*SmTKb
%:"krOVCq0hH)o=eJ,aRu%78YBo$,XagZ=nN#r`.!<TDCID2oR@VI)=L2mWcmP:Pb<)?nLFfefK/2RiQ:@N%9cBCG'NH'J6RhP`?X
%&^3<a\Pj?+>>sFsat<m)*DlnWrLMs!e9Gn=QniOgr0T+%]5,#mK@&WLer(OpKrF`s!3=>mmA/N^rR]/l@e8jK?)=G>[+[,DL^ra!
%^h/6L:eG6Ohd=@9,#k67M<R6t2A)2R>#bO4qYY9&CM5G!"9/2Y)OfLaPg@p\:LE<FQ99\'5)?4IHl1F_q;2CBp=^@gq5Tp@0$0,u
%6fs>hPN2^HR/D\4X+OC1C7rJ0>VuplK"k@NK@e8rlTVEC;CFK"G-sBglkS,*S\(FUHgquI#I!51(";Nc96E&dfk^/2f8-;B=(e^h
%7n5E8*,bSW=5VIGJ'peg-Uu*t+.Y;rhn?B7kA>A,+>s.GlH`7O&U';WSIe#TT3fmJc>A"@cWn6,ZStso?01QCc<O3pak1`2-TZ<;
%;IJiPVsX^gIuSI118hPXYm]'dC*QXij6<>sbk9qF,cG)JlbY!k%;rLT(?3<ikmd:m^9>MM_pi^>1D1\\<r,OHZJDg<boPJ,0$D<M
%[G8e65l)6T)i=.NK.qVt[(4LP3W\V&PW_b<K=aoujGTa-=n_LWQoAf3R_J.QiJs&ih&Pi&'V$t?P`t<=FhqAE:N#`S27H+V.<BA'
%I+.PZ>CL;$r9o$tokY[3ZYu]o]qG(#`mgas2_R@>\s=*PEb->qYVtUnjU5kJg>bjiCds"$gZ!jpQh>XVfEFN5S^c@LX%P,9bF^<H
%iTB:h#ON8)A$5:G9KbiP*6$VfOf8SG\?i.&c:gB?IrdG^cU=Y%&^:=9hqSerg`obDq3C80nEl+dUh=u175KtKke>60HAjIq[/7#D
%9g/Hk,+<h:QR[hLBtssde&IgZU'"/r>7gRZ5@l-aJL5J.nAo3[fLrchF^`=UOWVd#1QeZWm5G\_HgX[?l7q_%ZOFbErm40Ap.T#^
%Yu4ta@CY%@j$`'m_JmOSoo*/$qfi=k+)^I+bgZaN"K!6BVnLs!A5hcDC[IM?T"hNpoF\/f':F0*'G*^eg2m8k<_@Jd6Ha>'^]*fc
%XfSK,Vo.kmi9X-tD"G5GfG,ddNo?F4]-pFH0^\W3LRWUAld[3aV2\pKdC\S(X?@5bHCQ"%EbiuhVB0@;SgFO50N4#rif7O9=o.aR
%=[j1A7Q9[0au@S3%?l\8^W$`[=Os(#9Ki<.rTX9^[7;YkO00$c:?BLK)GE<kjdW.u:!1t\?Wo92_3%Hib]gn4r5^dnWQ0[T*-:]8
%bI<e)WFt:LD9Y!8h\oFR@-sB'e2)-M\?i=5XtT?YOF`jgH:"g/Z)p/A2q5@7*qOZgilarMbQTWEQWDW;iU)@O]GXguAe=`%Flng>
%c"9XbcU=WOF8!g\HZhTFbZK5kGR[^5>uN-oOrKK`qXId4?5a;'/N<=TP?E8-N!)YZCUYt*^<W_qf@4<<cInFKFoKWm+:ls6XZ[>c
%HL.K[&Ze,/R<h?E"AQr)fE4ls8$hn_AEjIsdRSBF;:spR,?J:8hTZTZ%Acnqf5tT;M+g(-^Ls@o&KQ3f6)<,+efO57S9F7e^XVH-
%7]0!b:JAjubD1En/$TQN@P^?2Cn$u_^[QWg<T?'We>#gf1C3AWVB3+tLuJ'olM?J=E?'1,5L&A9R+q9gC-,h95JFb3XL@._6\hR]
%*)#%+4&ei,EH@>WgFD42@@,0hqg4Z8ps<-scKN#]kqF`!f]ro5bh8=)DhuXqFgQ0d&P3RUoAq!o&fHQDV:hpagIegKYkRn_*W-D]
%K4Cc^Rn!)_hn_&8eW655D3@9F'RA:%kBUkE?!/ZgH9_<ae_1W+XLU$L%;d#PoR\U->Rtn*B`Va3WSc^+oW_])LT.sXT!a^&1,;V)
%[<NtWk?3_5POb^(VTH.KlJOY$emu+dNCr+Mh1g4+Pd'uQr(?csn,-KMc^Jjc^'jY1D`cZ?3_6ZU"P2o;>H8;D?Vcku/TJZlnTes:
%iTdOtPk>od$X=C,chblWTqTZNERY38$7.8bO#R*6'2">S0D*fWR<&2PcDf0&F3N/r-B7X1S%G"gNp?>5BJ4<do_uc!p%(E!CfTBu
%XnmM7T%rrQ,*"nB[1PK9TX<"t6Q)+7EpqNuO6Cdtn)(*hLgrQ-V+M<dp$optY((hK96Y6CPGiG`B.lE5Gk7agX1N0,`U4P+,?Cd+
%%r\G.U0WQHN[7(hChp2mr/\<;o'FUKf9G.bjVeGH=#sc`c/%K6<I;8?hd'3Z]16XGo?6Pje\eLp-o,m=$QDWAG7T_?CM"ZV,VtkF
%#`cC>lH-B_mL+4(:5gXB&7^j9FW]kl8`R`kKOl_^]QL\aNamsOaPOL\ep2Wt(2AZm\!03iUqkVDd5c]VS'9o*A.#$Ta!PJjdp[aH
%Sgq0lpXPT,@E0&aS_2]D\A?G<"Kbo%$Tai3EUi@:-Kq#tk<NZ6[9',t5nI8sqi<_?&&,r`)j%&[Wk<ZOg_H:ZHYX!%G$J8Y/(kh0
%#@<k@lZ;sjF`T<bF6;7IH/[!C)j'CUZHdu+0"s<S%hW?S4S.^i\i)B>jQA<4@2$9Jr*.hO(D8VrbI$_lNDI!T&N3_"s"/&9/o8$8
%."$fN4*b8@\GosukJHBSLUWUk_PUA3Wr:+j#@[3`Aa8g*PZceBUR<!+g+cZj:RRWMkaZ)C+>%Di[t9"Mb\TtQ@p5=FIf&Ge5!A&p
%q:f9@b!EH=\l><BSX\IUHA&VhM8)(Mb0J5'E(#k(c`hGOMt%p@UK8O#+*&+WV34jQpE5+RmAPX7f#i^[5YGlY]U#Z>UbBF*S^m:"
%\UOPUXt'oT/'+c$mt2[^iD(Gt22TT?-VceAp\.gWAM.e2jKbjUk99]G0i\]%fl69q<t:r[D2+=.<&\=N1K/s"JG&4$!p,/<%[(I+
%Y2A`X.rV<leRC#KX==HhYG!C`[)TW$Z;u)Re9X&a.gN'*\#[eKp%F]r-V,]lbped[dVo![fW!"Z^eM@d7SW9><^Li2?[Gs:81aLE
%o>7PFXYrle+#/YY`)!JW4<3D4apX\A'L>,MB&qu8B2A^Cobc`I5GKEYU"@Z8MBJW7K3%Z@.eEN#71^2NaA$+sL*V&2Hp,j@6R,'t
%:>p#H+JKpp2hGNkJf$mEW0-QKPuVDFETb0<HABE28<m?2g@L_TU*>CgO(m)^]"DV``)m/iWA6Qm^9-+@MaoFP3)SPKI-CD'\)Sgh
%)3Nu_1TX5(Eodjn=d<EAN:H>-Ab;7OBsT=ALn^99*+"nu\-<gJAU"52?Fa<h$7j_a<e#KokHG)$<Wj$-(q1+$U^3\$3!VT9CGnaa
%VH9s>B5bsRk>50U>l=;,,PK?TWf6e55-0Uc]?P3[RA4UW<0aH@qWTt,4b"B%PuD8bopi?8)-kP/X3*+ZB&l8pO'.`VHHaIkKKOEX
%L?UG<EU:28)5bI$b@7163KC8br;IpVOr9YfAm&Acgg9XG5`[A:'D34;DIs[GM0b,'M*H/`L)"d\`Y>Gq#eBr==$j+g@lIG"+BuQ5
%@[gD0(,%.p#>gt1V+!O:95(HMCckn+@9gS(^N&%3F@)>hT;XNST"I6rc9UC=GPibq:ljQFr\LPm@7*VH?'SiEN*4NJYKF*61J[!i
%c:sP/Pc6G-Be:E9P*&tXou2gE=c[OF2!u*Bk%4gt%+A]c2ohuA4T7-JP0r-0jpbY1%<k6&oRb2b17^Q!A(Y0*9O*icHuWR6Hsc=$
%m?5q.(43Bi[9"]i@%-;&.52=r<1/)_pDdI6Nu@ojb0b>?E=B=+rT]`b&QBVrG^e<4Oq@5shl^^Z*Y7VXX3*+Z7Xq!c:h?"8@s.#"
%<>j?Tgm=O&#..,2ptebQ0Zhjn&gri>ASNsoiK(\5mF(!Hi@=!RqI_/YXS1r>aareS">eD;(.&DYJ"%oi(]Tp^AmnGiBo\3W"m\9=
%Wh-!Q$?6Bdl5f%U%ghPCs08\#P\>jOQV%O^Zaro"&9-gWU=_O,nCL?iq!UE]<\Eu+Ui5\hmcd*4:JS1,G&@suEOVWb9Ee2*i-]_i
%P#JGKHrYGH0F!#P0$f!ZGn"hK^npb9[KOd[2m7hj?b6XuZEb*h7K%6#lL>^Da0=5:,'N%hZ]AG,q-+r9(B0dEUS\\dp)#Z27*f6m
%Fs=D'+eTbBp,\'OI>i30k?m`r'o8D**i$^d3u_gucu<L^BhIr$(fiG%7s%@ZSD-#.m-*0eBsG!ee'*f84L5\_=[/BC`/^3igDTtQ
%(J%o#S_+f#COu,ZfHJ+Dgl&,+L`J!^Lr+4$+(6C;\:_"f<nbig@85K;9tjo5n/Spi):@4MZP,F?/hi9GnB]'KIfM!Y.m1FZ>C4r-
%%an)T@Kur]?X8;GO#AA/T#n%V%sL_d7PAr?eMm7EX1<NS?s@7t%G_Yoc[:,mD:Hn[iB0/(PgAb=1^cN$p7T0i).W_Xl2Ri*]6MC%
%GT;u4XfshZ%"NnGBgJZD4)+u8f5c>q@Lj]QaWd=m79?SZ#h_]aH0/TgCf[ufBG#goDcbJ(I<&8)TnfP`))i@llK3?V>TKCDB4R2`
%)XH#iFfpVr)il+;d-&HK>WDSKkeT[g0D'XZF8Zu4JorCtXN4Ms]`g#HHV,Hmgi?-.-<snq(&o('lOCXS&GJ++B!W.(Dg]/pmOk&:
%;f_#Y:@Zl58*;MiEa&KRVnP74[WAAVg$YH<#uX#-1@-rF1NMsc:1HY7TBD.rqn+<;1nK-!:*&[@DF5I2D5*YiOl%28ZO^;J")^du
%V2_C>Xh,E\6$T_[H<78QXR8f"6`+i+1\C%?-YZg"q.paTg5p*TH/Zq!97![^!Gb?bJF^Q_j@]n]A8#Pf5\04DGRispSuu:5IA!Rl
%A.pK<Nk$UW>)1une-,0BbL79NMrisi=-k(gi6Kh]a1K/.<t+62o"RG+e<FEt]#"@2`(&k,c=iBnW8#'/9G8AAaMZc5CZXQZ-ZsUg
%S$99sWQ!0HT,nqoS76.'O#)VC/1l$KEu.Bdc=/#)ljd5`V\p42Mnbmu=tX-/[B7p.0X7D/Y-m>QX#GDIU=E*,^h)*JG.Dt^o_&m9
%%N=es\"G)VQ&=o0ZO-T]f0nX<P`HaZX`"Q-\!C[LX96?%QtpuE6GH$XhJiC>XNCF!@0q2%:?5k8(5;T]^26Y_ef"F';B6iLkkE0Z
%lWd-5dsE)#3:%Z?_WKj5FiDUrqq<hR05T\jXTBCH)bAu#.^,HBGjk)IC`]mX2ZFONs2BYN>(%@AO"P66oiqiWN@qm9AaeNnAmAd9
%-q\6lh]W^m`VUUP2iI!g:>\*;f]`03[_MtY2P'^;[$p(;5O\N`KZsT73V@<!o3Y5E9^HX:$6/DQ/ETULaRjCZ1PW+W&QE)hK^UT+
%2X_,^W?31/0Li@\Ydq!Ir;3*ZQWuk(.Vp4Hnn#(O=!hh;a/W/t1A,R_Y>*<B<QUM8rt8X:)?7).b*%g*9kE=&`[sh)IWcB0;iPUN
%M.t+qO)[ktD@+dX-',4.*ab:Ef2QF=*kO!!ne$c?WG^Kceae!/;^Kb]D"`9^k#Br3WgfDUD.%QVUUX>-9+\]-gQdJlY,U9+]%@l.
%e<Thh]]%JGODd*,NQ9m!'bh2a[C&s$[]:jZj>Z8IUQ@^CB("3qK&bA7'm]N3SaLDBCgQ#t\$5Z]/Sl3"'/g6'YW6pXX"rMGL!<DI
%NHW8!_BsYcJZs_'HqLAcI;@k>@<:i0jj(Sb\0MK9%B*!.<f:_uG;&m=KFOtL254Z_ZWB<PLFK6`lXSFhV5V8@U<0EqZ`&]?-q0E$
%6`%@Sk#,1#eE?O]4*E&&onMW^:7h=;\FqPG"7h.tVEY%?[Fj:5Y\'%Bk\-P(Hfo;!:LVZaS>0m4LLVpP3F_YE=^;6a%AkVkq05KT
%5Ik!XZ=uU=h7N1L&W[n$o&6)8bJ1eVZYGOi.?Bto9A8e0h/15A*a*hBbH#9JC_t]05Mo#f@nl%JB/]#7WdE?FI/`O*qO9QN)sb,\
%bF@c]pTL^4IrK9?]'5^]Dm$ge=l7!*<@lt`r8m=,/bL^/Ha:)-E.2l%Y9/1F;DM%@W6B[g-Z`>eVgSaKg0H2R]jFn:BD;u-q@.`-
%_6,b0QXu7m1J%ZSYOp&\Zb'joO3a@eNTBZh?A,>JT5%&*H#t]+72shJ;!k9j^TFs=EmKu$K?=2Z1O=FmD2b38LO0WEDF0=s?5F@W
%b=Cf55u:\AdH`fe1#9@;F#gnEk57:Vc\WH6^0M>sIU'QM7RFo2T+6l,a[f8J.CN9[m`>'dQ!+^G=DkU7r8mbj`.n"Y&=kin0A^M(
%C6VfL^,pNm./A#VZ;R!S)Xuk`!WT_:Tj"A5M][-H`/:-$Rm3KNKWke@?U#<UJWH^3=M8rl:90#.rjo1hf#Y0V5!TPLV]TZYQX@/:
%1D$;X&!aqX]BZ+g2d7;C;-a!?G=QXoZVgkoo"&)@\ZuaZ?4q<$?EGY.j75"$$YY=[T<ocloKCq4ST'q'O\jVReHk3$?jfIEYKct&
%nisHmnX,TKNg.LqFD/qYK=,T*(,_"W]QnPggt_/^fF6XqcNZk?*$mFaESO(omqNR?CFo!`%B,I'(.lm]H;fTXNM3e#"c='k:TA84
%P.fZO*I:J-&qM<4$e7.5e]Qti_!gEAEUZ3e,gsMX^1.FU^F%6u]\8$E5;MY.>JG$&o0F:qO@&a]aN>5gecRAWYA^J*iKmhq\pmd1
%7I0aVE4r#^!f_:o,7.q4qV15Jpp6tZ.sLD5J#r,,5u"VQ=1sFl`)b/#:Il_D97'^H--7bZq4MEI$Z;kCT9_2@#qI"F]"Fi"jD\c*
%_H]0Q&922YCME=VLF_GL?2eq\adf_5pKnEo(]<R;SH"o$>;+NPU['=G5e5WTY^]uLK/L,b_>^uPff%\O\9Qs(g:bAkHk.=!F4dOG
%hN%2"4-)U>])_D@jmiKP<k^W.ES:;pE<1Pcg\ZV'pVYiCrh/E9_n,a(<p>*YDVRb@`2V%o#h,r#2AXCFUhb)QL$s"I8_;i8N:H5e
%nAc(4_qe5jW>=/Yp#k^"G\OmO(Kq"lGZu\QkM>rVo@*9NbHF#&4?B=#h"n/p\[;i//Af\Z>5e7^[sQt*d.6S%;LQQW,\W=O"P#.`
%@V*BIO<<rO]6P86PFl+4>^j)$euP3g0QHL`CFDcnI]itLFi,b]ko+R\IW0%/4881Bk2+k9-W*lnr2=^1p:g#_A5@W207L/6lLCpt
%Zh]J2W7SL2ke5,F^V,*#CfgK!7g2llS6,`:>)n!uLY'kkQ$uN-\U"-G\pqDqF;oBU5Maja?I/^ClH_uDQM/eV_Yrd\Y-6Gj)UmJh
%H7R*UcVM\"qH@3r%0&@u\bYlo+e%`/kO\.$IW)Z5g&2L'C"4"q'Rp'(`so'G`U^j?-/\#-]/C.j(J:p7c)H3+.c%kr$@L-:@0_9]
%d;\@Q..OlsIf@Kdp=B\MDJ[)#ECOl5=68*O6`VL)K$lC=B+=CP"hR]Hi#,&4+igPEK98tP:Ye5#-.Lj`b0i<;!c("PF`c2H*N]A,
%rN9+(i"`RYH,WTWr!Gru?!#To%GXjJoP0'^,?P4pQbDJnX[7?#/%j-j/?onW!5*q7J!Gr2f9]8!?9doME\)*uq.9k[APEP_3W#\=
%^aeX$f0SB,^4\"B)u2FrXo)<UdD_&eNl.>MYI]_LKp/]lea[j$o/drcQJkX4TD$mmNL-9gh^PPtG0j+p)b8:e/:4G4&-#9C2;54:
%:392Z:+Y<$nbM#8>MhYoq"XO#iohJN7fQRsh^ckT?f1jnrVbQaqsXOI_<.A.IXHG8p#*d-'?f_92YQjUHLos^5Ms1:Z"QQslc"Ri
%_QXDQjt)<XDqo`tmsNjfjmM53S*u9U=*U\9\Sq6BK&\U+oq:%+r5f=Rn%8aVErY4[V>]-rk<FF0EcU-\\S!;QjmKeXf:9!tq\YRA
%+"k/'ni*R7*]=9X/KQq_(rR<Us!a=+m[]m&*>[U0kcd9CCoPnm&Qqds[)eq!g0E<\o(Bu&qt$.\5$NL4n]T&'f9bp=Sbr!4rlOb]
%rUN*_Ql&1PE-hKq'ngS7"5mbu"^t['J8W%j:_:Xs%\T:?'SLJ6K98_LF]8NQ>jVM,FCnlEGK@lV<YZ+r'<J<`lmBbL)H%IUCf\TX
%1o)r4I0Mc>V'2Zi=C^-+.LdhdJUTPuUbnl(#&lTF.Lkgurlm&,B:Y^8RR;"_ZkP_(p,aO,]CPsGYd:Q`Z!,sfrj962@(>gk_=#@U
%4/]'VSNo,*.42jT1$^/8`Pe@aN`.l..4499G\jr_8hn`ib#GsocW<[X!7*4m0B^%dMeh7c\n2WXPCKG.F.:h[1hJ:ee_L=PpfI.X
%qiqc5esSGYBcDsP[oaRW)lHcHoYC*Z0'<#N'(:B/G3[SBeXb^eRBN+;^L.!3]K7*q]80D?gLmaMin^S[RC2SKdHu)6`lGVTdFe82
%08O$WD#JPA!gE^<Q2KLg\Im@[/ZNr4@p-^R17&FCCj7,2`Ri49YhP>Ms3!F?iJRDLVc^\2kf<Gdebh4"GtsbL0"nf<"7DjYBq&He
%s&d$%[ai1_Im:^AnGFdoh5@]qs*/flki7?q@=E+eWS6o=<BKK$E[eNTdS;'6DLS,*MAFEqSqh'*H59JPPL/V?q!AkZU<a?fOpM3Q
%:&EAAc<o2S/H%K!/Y2auJU1<(gT">gN,Sa\L\'28de<(o83Qhk2MZYY4o@e,_iL_)oQtPp+YR8T]S*3?j_OT'/s^*8]D&Q"jR%$_
%*pd1!HOoLfp)`4[E;h\>$*,"prJ<2DI@fRa5f`jefP/I@#CHgh<3U1bQ0k\Lp*GM:-,'NG`ik09@T^YCrTN=7b?O*lI)#OQ.DCJG
%f;J*:Q<=Xf^<hNNq3dM302i8Dco1%.A/s==8B7MQgGhE8)n?0oMGW+Kl-#H$S7iK'H,a]+R$Nj\p3dleTZJ$RSpV*po'b<]VHmA:
%WW=^#`bo:+55UlmrfIl'rPe@uCr82N%)QUr1"4-EbJG6=(GC`p7PG,I2O=oG;C;Y/g7>c7gW$;E>@AI@=B],8Ki:"/BVQR-9rMq>
%qaM?TCSU\/V8[CgkP@[;h"#`<mdsS+l*c"XqhsA_D)o@-`oChp07\Y>G%_i*<AN-G2_/b@-O]&!KD<P<E@^G'2MrrugZ=U$Zm.=M
%`Y\i[[)9m,Im/\ElLKpo"k19]/%#d(&.@GDI?^'A(<7GKhk]:P9XV7#!OB2N-@M+s?]:cNTEN`51`'Vq3.-!`#@R]>c`R`,'2P/V
%oX8r)m`4_lWu%CEI93>op"ecmm`):<fDa.+j_/-[kIgEP^TB.c(\3?&k.#u_aK=VA=00*qf"8-^'^?YK`J`Q]Ms(>Ec5aT7A'0ru
%XUqC,CGXE,U#f@(cIRL)3EuMt&%)"uD?U*B<0QeCH2!gk]s@4W`(@[m^@oC8OQfTpd@'p:ETX\/@?LQYTR8hA),g;+q8;=greH+'
%E8gHGn*Yt#o@@Dfs3rQ[/Wbb<@I0!Q_)d0QTYGp(9D57W5J('c+rIr:4tM8S`\q)9IX]9qIV6JZo(lPshn^>W4`FR@I5Tj9=Y`dd
%Bf;WX4,#]5^Y-;ss0V1-H1J>L#.2G*$f2k;PGuec(Z2f1"&CoHq&\=\D_:\ScX"m_Hra$3#@LqiC3#_"R;1&a"CjAnV#9nS.hAYL
%lg;$fF2jterlMj;cHu>c:]p5\>\%=Ca4jCMqhJ_(Ls=c!+?pp971LC&V-3bdDf4,!?_8DGql_);T:8f#>P#&63b\O)i1a49XA'We
%Sub5A:R:Y?L3W66^G+_%Ib_>j^RTf7fA%$cfD>'dgHYTH'di^%q!^0"k2jLE)s@QJp%-UeoBWmC]\h=YfP#3Nr[%sKe="\6qPl[L
%A+(H6DOrGL0E/%t:mkODZ^797p0X;m55OH<II>]?l[1\$2XWfahY_cdc2-8n^Ra,*I:;LdLo_=9"b(Z-fn42P3c;hA\IL5h`qH<;
%1bMQHZG>O&\>U=VqJbbcNQ6M@!i?-k6G\9f@QYHcX095k.8MORbmR;`ZjcYG-0h71]E'd)A*HV#F6eroZocn&[3Mts%GtL#r\T0X
%?/Mg396k_;YFXTFg>]S_Eu3Y4a@4@pS<D6;TB[#TMu*l)'Wte^gjfr?G"0:7-$lK;J,4Qco;SqJ>b$M9Ke8'ACCB@@CSgaMp'!62
%Y6ukjGP8]r&gS@eY9XuDNoKDW>taL&E='/diHk(6f%7D'C/Vl\'Qig"_2iO2Oo!&IG99"th1,)>n!#d`:RM.ulMpA2[QdWHmY%NS
%og]JTrp.rrk5N-qp]((Ss3L`E5QCKX5#KUtfE[u9`U`m"K?]Hq%R0mfp!rg:3,qf*O)F;Kf\8N.nH;b&:_]6kbc.i^0,09>H!]Bg
%^46frYIQWt%f^hH5N';c?pl*p?Y2h9rt"njRekVX$Mtnmb2U@!'2P58-f0m+'9DRArc+WJQXhW4'6PajWk&`h^(@M#Whlk4g(R*?
%C+?J6HC;]6n`Nl0$@EB%\-p4/JcGXfU0+Ekr/X_FT/hXQUOSg6!TR!D.$g\.T6_eZ@49Y4rD&M#8Teu*!TtQDAug5L_RSj:%V*c_
%r)%:=D3mX<_]_!u2>cu8IBuYq08Un6b[Y(f@m#Xn<om4^L7EOJ2>cu8Z.W/1'f+joA$"@U58l2i0BqSB0*15X4o`;M6<O6\6_'sQ
%j'&,91n4CE-QL#l%1BSTgEq=!A"oX&mU5n6*7ja&?-_r^[He.?FV(q!M.Q0A!DaC@V>AM>?f(0uIJ`G^>2\8RTAT[d"6.6Sd&qj]
%q"X.Ga&g1!Y90i=$TtKolUVCfV8kMBk2oH%HK[cA>q9hijJd("Y1O-P=NI:j.?b72QH=0E9U8#^C'_@<0P&YmPYVfbbG^d[UJ8@"
%nEE?&1$\7Y;$Tk>W15<3U+DU65,/ChYLDIHkNTcr)6IMoB\b9u,*G8&jC63iTcCAr[#ESBAQ4Yl'Q(ph_\ejY%_/muZqNA6APuRR
%;Pb(iJ4g#42Eah2o\d*8[^0PP0488qq/dH`e%u-P(7UW3DPg*.;FF1/@j.$GVG'$e=sj."1>,]#O't^CN%o&*J4YYnXWYhg%B@SU
%[_72aO+gh"Qu_GqWO\P$*`P'Em!0b@%V&aI38i4o;fas',q,PL_fe8qR7,V@^MK[OqSZXa<Wbr8iZ4@qSDbKTiM2TXGs(B<A:74O
%M+mh:M,D.'d4ri]mYus^:B!^qX+DVA.@/.sX=9H.p?:RB*fp:T=e?A-!u&FH@NKQ.F::O"H_]PpPJ>Mul2aJoQK)uo]9_J4I!"rN
%oC;#FPP$rpXutqfV0f:lUZ7a6ll/ZdoHrVd5A<(U(GR;SqtgaPU:lYrH8fS"WhsXW%E<O*'s-n8;lDM*M7Tkg!2[%-oL:I@Fu,69
%;Ho_hn5=$*B;Kog:,FgoUdj(lIjC;ca#(JZWeQ-.SERT-Dr.L8[8%Z`E,s1PSOTVsWO?Y$cA:#Y^AXq6AkHaoN`>u+@ed4:_I?,5
%FQ63/]eL5poho]gpVoQ[_HGTqYSN%ho:tWIIN&GcC=cR?N7qH?CL(j13iWKF\m?q1H3PY/&K$%e!?li+8k0&\6r(qB^:%5'E6CS_
%[ouKL51_f1@I8:0Z7MR.[mOW4#/"4R_:I9S.kf7Bp!t[Mdm5OH%<_mSet?hB1SphOX020bTp0FcYhE>PZ>s?.*6Hco[seBN[JDFE
%%0;/hb%`U#h'`_0YATm)Z>u-[4$qZ=N7M``H3Vp7c1ElIf+uN?[I^<moe3ErbQQML?6]nY&ZE+8Zkf-0Mq-$$A[qD3:&7[nPl^,B
%"Dpkm\fu4GQ"K:1pf>#\G2+3]?0@Yl&aW0BEJ_U$/(7"HDm4082"_"<op[QG&qu_aeX@G8;"DcM(,\[D2c6sYjbqt+`>U]NL*B0e
%F_VD:aI=SnpZ`,^C-NbEeO$ZQB!(G`@ff\k#1^?T6WR^$:SMqD;WnmCr7mQ^[BHTrrnRs]Kbf((*ic$f6@Bs0$Ds8-#h0gZP+#sC
%_--t8#s&"mCB+-F^PL70g>XJ5C:g,hCp4Ki;Np6uf@8q3>iDF)Oric?^V7/+:l>BI[!"'j$7X`L@NE`igDd4_!A-?@0XUrVq,V91
%T?buMnLSeM>>tRkErgW@#()S'U:1e8+E;>e+0%+](h\tJ9#"P?;(;e.e;:LTQ!?7KURkka@NM,Yp7r>%DUs2^l6FcX,07754kEma
%).0%9d_5lXW7p4c$^=7eka*F]6^=B'R/.qO:CE)feM#+,:T`#rXWXSgVmb!hDlu7M18&!^^3t?.AJSuST5-9u^kZj3lA[etU/[>!
%Bs85bB3@kp>7c8L`k9c,+MVZNC+ZC)A%ZX5iNtu+VD`MFTcfIlCS"I3LWA,c@ef=?/]hB@$@=)2CqnE%(YK_`@%mF@cj>>IjLoZ;
%I4lW7i=*H+-((61Qif:]hC`h+J"F+j^9_.\"8@@G7:Fb]M`P!@f_<geBW_\XafHD4[0E[O6`J5F?kV'\V07>j6ZkcmKah(t!u)!*
%-nJEppKVEP$CJd*K\bIqJmc:N9ss0[E$j_9N*4m1X\kHb+A4SHF&],%_lO=+hfDfNGG+X^hhQM"k.AQ!C#pVA;Vg-;<RoZHW!'&K
%#ISt5/Uj$$]Z\I!8Pe**L(CS].kM0Vh(N5\Xf7lJ^V?YPF+hE@C<^r:b_NN(2e:.7S_oa]p-ps&mC;G7Pujn'<*a>pU;g2=lOASt
%I%\"7HQLrZ/%_CPp/:QQ?@h\,a5".IP=FB90'jJh\;':cXs$XUX>0%;`(e!ICY.7E&X*tt%3Oun.'Gmb)o\_lk6,+2e/ks^:Z>Wr
%3tdidIjU;$rCPdWC?]ULH9BGC4!,L%Xg7O!7i(ihg;NZQ,i?>`Z[+3Er)g?"g?\2:0kiAlbA)G@lN=[pf6/d'k2WT+<CJT'QPCBZ
%e+e4[n#nHm&',BmY$es/GnVSb@""L>5b/%tlK4'CMqk9o39a=b/U)j-hODFHiAZ$+Na#K@n"YB2'E?\35OQ>S'/9KO-T7M1+Er9X
%p\..n'R86a\I3h[,5JQ'mM(U8M%$%7=eCJ<>X1=b[RMju*Sk`"7?e[+d);TY2YO?X?+:+Y4@#SlTI%0G5ab$5KA%C!Kb[U,UZN'd
%!l^K`/Z:T*7a<G=fV$9$I!BDSM*49c<5'8d770,pPSn;a`!.PH_9/?AWD1_W5k'jU;.d$u',s#cHdcqJV'ibrn(q8J=sC.1AHmc^
%be*:rs1mpRNi']g'hpN0=2lYPa8e!Ig-M7CogRVU)V:LG2qHte&ZO&(1Dk43=h(bp1'iccG#G%)ClLtCIU!Ir#(o\;8[.Go1^#al
%A^pIf<N8Rf4JL&-Wfoo>A_Hp@Yd$YBO*r?e/u!;>as7$/e-7He&$9dki$eqKAnZ0lPXu!=d&69NW=%!<D*&m*!ug)o"^mQd7!6j;
%UI9#2oYtsu*lu%Vc<KmZT8P*RfV$=qgi\'7FiLH1TsB@6_9/s[LbaSlRN.W'dJ,AiX6eGCTJl0(NG;7.'?MYdaIl,L@Ot-dDfi,[
%Q4$ZRSbWnZ.hQ=s)`4gfb+eS#d2-COBJ]/O:pom-X(b+m_$3VO2UAi'?O!%O8jkjA""T8pLbaSlRN/b3M=S)&k"BW`FV`^=,qbrd
%,(h68^8Pp5qAu2H]t)`5Yu!<:-o9MKM6.FBasjP1H]tN-=KPG'TV.051YA@W[>>C.5qkLWnIYRPR]5g=A@+p=!8>kH5^%gEc?Td1
%$`UIZduHG.%b*XAG"t]pYJ@tF%YH8$^e'LLG[VR*k<Rj%l_`7J\$C%,,3E0LTiYk<DgH!5BaB#6SPdU6@D3RW^?2=u8soO5.6Sm#
%J\!5,L;GsNFT075R8/<FBY6hXdh*2T5i#@kQ?FX=iR1$d6nI$jE^JbD*u!g&h352@Wm/Yh#18g0.WW)YDEK2T&;Z-`+S6rWm8$G]
%\W*Fdih6gb;(Aps`l'l6pJa-t\.bKRj5Rb4r=&hbbn*f;,>LV;(UG$V[EEtQ=#d&n=d"+P^UhO("!^Q.d#0_"Z#!5daO^%4OGb<,
%HUR9;3,okb]h!?ein_^,n#&ltG5QKI+P0;G3">+YRc%LCpEH.j+I>OrIS1HPQ]O09l!A[_P*8&S^H1'.eYBl$ZWCaP)2sDni*baX
%?D.F&WdibT'/_e"'8Hp&9Ul3-:JRmPW'?QTT1XKP:._Jh@?VAf5i%Y$qW\,.&)?cD$Qh2Fq-1`@5KJX?#7cLFb];Nb-`'_K#+JiQ
%O]t>*'hN<>,2sRJ4fR%>R<@N`LSi"j?N7S2qb;oknXMQJ%>NT;";mB^5"gI,TYE6.9.V:4JV0Z*\-Tr9Ut\M9RoiYg@cA@e)#D6X
%]_XX'NTI"<a]5JS<'dR+9Ul3-:ZaEmb.6*fHrPRj94KI7(i^JB]l\.%o.-O-RN.`(Ig\tP![CH-cqE\i.5-1dH=$.?#HtPWrkjQ@
%ORC)EcAH9[mJu?79lFsmkqtOMc@H':]\i$9&nHd,mFJ"eQe=*5%NGnj>oaYP+*E[pl`D?ipb`7FH0GtSk<Rj%A_q-\rU_CNs08bX
%-qR2XE>m9==>dJ+n$I:oob%cA`;+pC3&'>K"MOGFX*-Rmm\e%YEqE9arX:Y]4!NZ(W-^:Dc/d@[Xq**K2PQB<3B)!<1c-%a)[hH"
%J3QKc4CPbWKqQ+uiZ'opqSGs]>M5`i\jG'`h[Sns6)Hagc@KBRL9#LXJ)DT5-ot<XclId!3I#HO7\#2;6Z'<?eurjdqSe-qW,k%_
%`)IcikJ4p\LROn(aXf*>*0SB,I.K(4%NJ.MTqKdr)3ID,L\6b."6gI4k<Rje_#:_2Dm.2%*8PFG\$,W7M2662@-F^(^b`#&hJPX7
%K1bSAk>t#=S-,H4@5dG[`IL&/Ni+ICe9_LE`9E'iVkLq'"55X-]h3K*m>.g(G<>)HB*okY6\D)`IA6gM89ZU2fAa`0#u12b3"6=O
%g)<$"O=6n<B]Q2L]101of-,,DKV#!mf5#IW#;7RuBO)8&.dq;0pWB!c%I%3STiA]7hbW@B70e8g/mK.UKbNW7h352:(IW.BNO-*g
%_j@toTH@`5S-'#F6K*mNfTVfuT(m^OJ$Z#f]<@S]#7cLF]R+l$nATXM_8MNV$1#N1lapcqM%f'f_6dV>VF$,C)aVs2<KVE`X0lRH
%m62f@J^@>4p5VakSR0f`0<4N1SN,C:Y;o(BL'C#I:"Euh'QAD.L+\=hT(h1/K<?YC)Uc=oe"skUC&E5kS]&0>+E>bdLi_K^ke2E"
%In,Kf9]G?uHjqU3&OaPtE%pq8!er(4JHm8Zgj0dV.d/u?c@LVA(J`<JqiF&?<9S2d4<nY6^l!tii*bcNTZ69ti=A2l8]j,"ie9Wk
%S--2!JD8m!JT&jUJJrV]&cT/d&CD7*kJ4p@@.=FYPKp`ATPL.l%5jW>f1[CJ*&s<$lm3-JQE%.(Hk:PcBg#5Y/l#YM6fK(FQkg+e
%$.L(ZA!Q<"n2k9JkrLSBS2^``V?M>D<M5$/H?5KDS67ptV-5]8,nY,,e3+[r9nu$!U3H='%c&eck8&O>NJ>AcBJ@reZe<+&hC6c6
%)Vr(?0D,n<`+`m=0??\6kFS@DEK`tA(;+!.EDhgQF5UHiNEklY>i#7lV-UILL?_Q9*G(FukJ4pH-nS_NYBPV;ZM"g0d3fZWR*jd-
%8^idh_jSb"e/>&GDRG:K[U.@XG/'gtkL;M20Q3q/X90JdeTg8maP!"%?t819W;W*"GXI1+"J4<#9<BE;52a95=BBG0?Hn<_fO3p&
%="^)'A6IS?&RQT$$cf#>7%D)d+1OUiGMbBH6KgrW2op``)5=/l]%G!?3H-Y](qd]p8IFK_l*8RaJ\;A9%uGAc?lC_mUQ+/lUhG^2
%HA++KHc9ds)U314E<_&EK_7eNBKMF9a_A7To9X[/QXoTU3.hZp>f0"nFTs;^2rha#e:!t!b]DbP2OJ]!&uH?HIRV](Pb@T*+T]M%
%4sJ:'K6^+LBEK8^_O[E*h/T)R:O6Kg)/M!Z2`'fPetAe\3RD7Y)[7sg&eu)C5i#@O?G4cHr#A]hOB7P-#@Zet,p<>[3.hZPnG:\e
%PbH[1@kpk&AjJE9`#28C,J=BP1K<%A(F2nt-eXXGar:q*YeduIhU(<5MDR7gLjc/Z+F(:,'Bd0I]Hr1HBG-Q;rA$qe,mKdeUesmW
%"19YZ'qYXAFEM(X)'T-t7Fog!8]QZDfO/$Lfamo\"^PtTTR(]!^i5YFj]k3D"*IDIg#78LQ'RDpSf[f'K5>kh,rflKe,=AH*hpJ0
%ViP(d0&X^H&)8?-TFl/JK79=dHAbg;ff0R16k(-=FPe+-Td/P*VYdW<#>KpNJ/(AZfi3X]"rO`Ol%]j`0\qf_SSukQ#I-h.+7bG>
%ck<@M&TJ$(rE+RI%WB<0^<-#riPi59K^/)24<i'Yg<WsTj\^>p)e,]2H7MQ0Pmab35`pj^KB[i"VbsiM:0keGMoIt'Ygj<l*>.I"
%h,@tVNX0MALZl"h,8(2MjE<q]"/.+&k,H:+K570i6=(9jUQ7K?Hbq2PLcC"rL>Hd8fT1-[QNZ!PJ@19Y#:If)\f[u#\JPn6:ZEP9
%GW2PF<@$Lc'5+Pccl;)I-$e-hVp/Y'\IYd*7%SDX%&Wp$C`ErA<`b!7a6N1I5f`.-=\O!9:7T-)o8]p-,jED"q8]!@n/;W9!/V=1
%&a)F8P81A\hRZaAPM.m#SRP]09h*Hb1Y?(>C>MKMZDJ@R'OKif'l.o(MMZE4?s]&5CNPW9>a0Jm/e1&FZGB2,QoG?9Sf3M[<.uh=
%HS/0b`NVrIg(t@a5j1c['TIRtOG-bZG"-H<@'Csan;E*Di*[J-31<br;<#m]>BM*^,]#.Yc@LU^^n)Eshd@s3q7o]5,'AI5,T&6[
%c@LU^^u?Ys064Z_L&kbnC)cdd''I'H1goqeoPpq-J!L4/qB4EE=>h;I@(IF!\(YpL-)3>Y1h^CKEODZ^%!7Mc1RRU.F-;&#FL8l?
%2>J(pY\lhBg5%]n6;Q#ufV0B),'u3=22Rig:91GC&02?q0\qeL?E@!cWV$-qMqDY]<G_LT@B>tYKB[h=6JCh2&:nY/E'_@(?)Vd2
%g18,>%/Qrn'^U-N$C-mW*JTVbpiB1+k/98VpE],?pO4cN=D@ACK9om]<)(g<E8h9a(ig(0V74ZJrbUW1cSSJ1-%fjK),0eb@]O8Y
%WO6)=,e2P3IlBaqE8h9a(ioNPUIbgp`VlmM2I/RnLDI"Z3!Tqj!@'/BWXdG>r`KYBmsN7cs5l:\#1NOX:7K;1.tk8K9noGHn=f:[
%iJ8015j52PgNM&0Nbf\]e!#eA4)Z_9Kb8;/e,@oD7ap?te@7;-6ZrPJUu.>#HVU*I"uB#T8`0b'"S=cIjk#h0r9m1GS2^``jt67g
%`m@ml725iq:4R!d&TJ;6Sm!Kp)Y1_QXoDue+b<9a5ebj+3!\`?S0$7E\(B:ND95H@W=R))MhlGIm`FSs+MN2a-c*a-dhl;5_a@]'
%,2s"h(j^7SJ6o4:HbnK.&2=/,Wp,9aleo]!CbYK.St8K-c78*)`^T'=BP`8&5=_5'KB[j?G?A=I8(Eqa\H4fi@PWe+[)n/GT^KpN
%La@@E<P@3b8s3nkF'l0pMBXFn@"Y-h2O0Mn5kY=R]s9/4Ju)5u&TJ!obY']]KEaZmhWZ-q'0H"h)AQDpS2c-1L>6<2^_jl@hr0\g
%5+eF!6ifcq)/M"f2VU<.pN9oPHSQD)nq1WM&TJ:#9EQ&sUaN5!PIj.T,_@Y00l[[C9EV\.aDR#QGI/mJ&$tu-3-,$9&SJ>ad$p)k
%,Q10";BKc>R.@$sr@m4>VY`*7Fg,ET=t"fbI^I%$)ANZ-N/08,oMZ+O4l/]E^F_YqiM02n6;i_\iXD^]E@J!nnfs[c/-Y"QV0g$T
%ieTRHl$hD*VSj<jmHgq/`-%"fA2"?Q-I.1hPH_'<6q+/"f4?59;!1SnP/8SNiPZU-pJ^m@Gs3$s[&5*gPu>45;X/EF&SEfR:[:5g
%GPZp(3*('o>oOI@<+P?S3.jL]dV08e`V^J!8MkNTogsG),^jan*2n4)g#InXWN;uD&XaiV0*m\(S2c-1L0hbMA(_Z^(!'Z/@&>'U
%hHQFpL_4:(_9a-d*S!VU3ik3&Ug*C=M9'n_M)1Oea)2&$=kU2G/p(X?]),@7Aah4>'5+PccoX#op/>+h.;%Jck/Pj'rimP7SA>Cs
%Dd\MR!RlVCcA%aRgs$=#;&9gWYee\u!smI9.(jm4AomP:?BT2`'5+Pcd(@fr=;\m>=2^_:B8n\EO?)LB),0d7%m#surA\Lli@Qa\
%U*BIQ-dH+P+ZD+N:)bS*M"ZknXiP_/M)3dlhN?Dfr$LKBmKD3II*+"G#=ZQkE%h`#c;s9A&%0$]PF+<;'63\2micZ\*6`bM>FYYI
%g=kgTB[kSc^!'"tdO6?c@"W`!7X[NTBNQln(W5lQ/nJ-\3bQAKCbRNaW@@hcFTq%nR'+Z0+X8H$3,o-ANfp/bU08JWr8`Q':$-2R
%Z>u_uN8WJ=4BU1EdTpVX']t6:Vcs#Bb)I`@NR#!4HP;V^V'AQSE%_7T+2qgqhF7<Sam-F'JFeh2Z\AB$_e1"0Rf3&W^0/k'og;0;
%/<2I)UY'Bg8(C?t`gZl%UY)Y>PT)gP0\5U:+2qh"]JK9-(20GRQ[n[gii71d6clY\8L\s=!TtPa5F*teO6'[Lc9HVg@FR$qO6^j*
%VqIlYQuEHI2;Ate;4Bc8Z)XOVahdV7H)t`D=#,'#^531uN)?t!'arP(6BjJ8KtLQQZK@fo3Lcu*aS;:9GklkK%l3Pm*q8@/BfV]^
%N6Bin6B#I*"T18.jNaKa2[<(!=ZoV"T(+gVD7FGuRg0gT%M/@+i3XJ!<(:S<%].8I)_gK\O?WtKp,k5bG7t^g)P9)3O/CFjJ3=Du
%rYut5keUsnS>a6UfGmqg\TObXH7\.'_3@*D:!;?\`Sni"Xtb.I!I##`gfZVpc=,1B2c7-!Z+0ruY%6=5/EG*mPWOq#bMDg2]Hh^H
%j:ec\6,oP7!sUnJ/Vg[[=`bMhc67c_LE6uu=:\0MiG<V&N.S'fV2_6GgL=mp<'2mZZdE!?a(36H(oLob?23XEV9ESI]-L2<Nk7"U
%l]/UHdE/qgNS]gT)HcFIYo-[3fV=XO2]KFVBtJ?>NFBD;gkCeacJ<;YQD=i+EArUU`Gl\X3]VDjd92Wu*66kPL)e6>pupeobsl>;
%)O)dsj4KPHGO3`!\XST(Ou,'Wm`$qr3UU@_en!R\7UPsm1Sm*QTWN.,DnJM9_*=rs:^^Np2K=I'S_h08`H7Pc8a6Mg2GjOo\3#i*
%8W-0q^g4eaC!sR0b[uQo-HaA:i+[Q?,2ms]Fdm=Tim9i#P>]I7DnjK4Al[;O"[$J=!bhs%/(@1XA54t`QZS=.gO^/(WBETefF:E(
%9:*k*O;(%4<X*.BhkJJC4%(A+OuC8nA-2?_o;#)Z#'o=cH[u%*g:dUYaq(DuBja>[*nucF=/WUUam4=t>FQF!O9.P+Ygtp.gg#5Q
%=$c9"e.CuITMOk-g(T(8jYZ':"Nb*X8OE)K,_'`J1SL-UL>\fjXX>Pj43Lrt65$jX["kQ5=p'n-VS186%XA9WS*k.].T'RXVUFS3
%073>pKIhktK%lJ%MM7Z9Ou10iItqAcadaA.`XM[UF!-IugtAKGAV\!"_B^dif%dV?';/c?]dL4r4IQPpUfjH+"R4PgJ-tk3-A;'O
%1Rh?)%hfB!]dcn4R72g/<1R`]&A$:?Jl^g2h<L2UJ;1RsfL9<A]*M;l'f&[T.3e<EU1rDH_G<0;)hJYoN6r3>UkYi<U[^f>aRY$\
%l5WlW>`1sI*:k&rSi\;7bk8+>H^iGRk=kL3<GL,[M.>nSDjMS8f;)PRRbGe^(=r:^&/PS<q?('&lPi5AfDm(C'W)KtJW7H&9u[4B
%-:hg(Be#&lT:kF;CjlgZ.mdE$,G[N?Zj,)<-VW>o$Q>4i+;H[Ts+0F1o4q?,f#\UQaH*QgG(_->d!@PUPM!c^ecUb$<a!&d5iO\=
%:&mSmF'SK(X<>i0D7lM5OsG&3k5Ec9$]XgS'/b6EZLPgUq(eK!&mi%sZF.hd6Xo?8hB%_kd;8,0+_VF4=5/!d8L;""^@&jf6kH/0
%M91A5XkSZ)iSqOB-31s"#CACI'X&)8BfYPY8quQJb4XfnR>]A)>nl9uC"7#t%^RYP+sR8tSM=**l8Ot^7Q/?OKMc]3NHN0D>hEuu
%!,9fHl(edj[.I`s;;TI,!Xc6T<$mC8`n\/+.N9HP87Et`hZP,'j,Qfl\KG)[">/lKmmthnS'=7G@)BLadu;>JWc:OB&f+o8X+HQi
%LH#l?gYeF\i^mOD&?FX=7k.WLSHBhjmI.bfj+(f/kpO7WZ"ojd+R>mXggVJNTs(OWkfJIZSS!9(i-4S#7c.cUg_^eh5%rPGLLM$H
%O3LjC!^C,B8akP)D>%AN%_4g.+M3,?oD)4KFcC+KY,PL&>n,k3K3scrFq>Hsl+X+1^d1UDlaeE^eheHZ:8tBBXOf>D<F+81Y%r-p
%m-HJQ:/J?<YQrDHl`ui[gspj?45q;prDn')hLA2N-?4+1D.HVm[0r[[Xj)'"b).VV';F]:e.tF7/\?l3`'LO^$*to)"Eb!PI5dbK
%j[Xjge%`iX\E_7hGkUegi>(E3o;pU>%S=#fSJ4MR&2t3.4I<PfS&.ju/5Rl`XsX/i]N^SX^]n)[=(X67J+OT6\=:pbb"/8B2)Zdb
%Os6c_Yeg`4@YM\j)Q%FkFin)`l?,B&7=CUK=@ARn#!;lhh$gm!jd7<5BlC,R(gnLu&fJc9Z=pp[WmeP^,__IdRpe.h3+W:5kQ)Fc
%ZCS.f,)MTkg5kZT@[o3+%J7Ss.:l4#7qi=5)e,;.0u,b["rlb<)Z?7SS(BJVC?o%Rl,,H[:ap4r1HD>jmHma`egdZ*Ah=#d$Rq:\
%5`YUc<i>2a2D,/JX1cfX)^(Y+K+5b2?ns_[&!4Z*]S'95O<36n76"uc)ZhOC<=a42`oEp]%AC7fh'j,gk.i.ECsWf2H52@P&*V8(
%.0)AJ%NGOk#s+iJ>--ueh]KC7Rf3lZ`&VcBCbWf(7jjVLC-<'AFZg<j,0ka,@+`;gW3WdQ$Ku3&/<*(CJ2hNY*!0nQJIB=p%Kcq5
%oTtPI'Hp5A!s`:e,-rQMMe^@u#eQft0I0C\"'W)XVPGW:4&2!?fi$>fjBP,#1"h[q,&!X(1=>m!"q5'TIO(M,9-(&I64n2I*!5FF
%L8^?b=LO*A)!#K;kRcgn3H,6tHK:!lp)'M0Pg\.:#XM4U!s`9_,_]JQRoUHo<W:fIB@*A\'jKX+BF%:m&m'6f.pp3Pd2lGZf1@,\
%S-'"2cR^"daQITX6]D@&GGULQLCbiYJHIcm(7eM9TE(>;M:@M<F\[l,MMQ?35V90NO8G%i_'MX;FB_p!KK*r]*2klao$l1/_FKB"
%<Oi*gLi_K>CrD]UUMO217"m33DbHm68=YD=@WnWFUoYJ'%=19FF8I./:.#,gA65QC-fRQ,1h_.`@P^!S+Gc^70TOU+?hUf7N8nbh
%N5-.e`&Ve0(AEh';`1t^8u`')r:;)QM0%T?bkNJVm`nCrK%,-`41sQ<K7?F^L'DZSJ;L=8*;5,^#cOjoSUr#))B-\."(%1XI>Km8
%re'Pe-hAc(&uVFSgg?-eTY7[M1MZg,#fqhNOR>QKMiJjTBQ',qJs<%rHFqBM(_Pprh35TdWDMUHG#(PZ%$\?/9N$rckJ/7N]YR!3
%6<i)<PU,35FP`Bb:$rQ:iZ'q>)^/MBbP0Ms];V#P>.V1u+=GHc6ZC;'Z%`1G$*>JiPo'us:7MCkd\uZA"L?Sg^IurfO:eCaJR4,>
%UsPI?%]d\\R=0-"aGFur5T1rFWa#QR&.UFC!/AF+BHYoMGiXT0:bU_q0!@P9L1!QBL'Dr;85b<QiKXnc*0a3^Tcb`.JHNGh7&(6*
%dq09Xd=MJmKtBK:0I0C\"5[,m*Q/bUU'cZ/$l+;O3"6=A$!K0=(O'+68HB=cmN)Ha,Yg]/\Q>p3Xro4QH6KR^2Qdi'L;[e>+BPtH
%jHcj1"L[)7[FO7CaGA<lJ@E8s3q:&*Uf@Q>c#i&h[K$_me'L?4PfXksZ8o&;%.SYT`_0D:6fKpZco^NupEpU@XB000\Kq\gFch1d
%E=NuP`OG&%:JMXh<R<:udfACG3H2dgFGX<`:bp2MOcq_%]/LOV+`SD=kQSY9Oe8LkpY>D`^NI$_G`g=/F5RVbqVs"j2!-TXGT;6#
%:tAX$J.Zc2*2kB=`&+$ZF[EX=n13+qpC-'"3H-,?$)FY(/)B^:\'_^<,R#'*)B&[D#IIIG7@t0Y24>hEc<nj>:7MEA^lJPf?bm[H
%2bJ7reeUdb5u*pP#ND7Nj0$b>%?2Wi(2\[V(C5c6BaB#NIh/jI3[^H^!c+nqMEhbn%b*X%b@]Ge*;.<P.Yr^OkA6sqaGFs\oRreb
%UaT7#(md$VJ#]iOV?/Fqc@NPSkO([bjIs1Y-&E.k(JGP(j>h1Pbt=KT=d[u"H4,TK#XD.U!se+\,Q+,IpuVk1JA-:S=@A[qL7lf6
%McT)t.7j;N:ENu73!TrCM$Pt;=*k4k[Wf&,]X%tL)0#j"W+/`i^KPSM17.hHag>F-HYSFXiX@_AB;Ygk#"tHR*J>AX5Zn>B!+Wqb
%C`j3eFm$/%-p6QrOc\E\,Qnr/c<p`ob%c6MDh9t''Vs!nH>9/J(*h+4"*O7Q"Em\q+gn,oQ7K*PJrD[A%FfZ^'YomK3LeB)7^[Ao
%Tbo$"?itOB,H5gne$+!*+oYuGo+"@U\AjAHi'>!2aJULnUZAbGV/r`2+=#0>"8/1b81>b2-D`ZH7207M)/KSkn]3(Wff!OV(?[,8
%Z%t@E%b/J$`&CaTmMeK2,Ud88^*/@giX@^V[m<mr'^?/7lP,2YK\jn5JrD[A%=p#R?J@d5*GJdfW?7lQ-cJ&b%NMEs,DL9\g.Tnd
%bX^j0qToh;&SJ>!pe3Rt(2Tt`CDcS)[)J:sN"K^,JbifL<Co(q1D]bhTl2:J>XXYcB<Zs`G*:9khRBhbV4!ip-H-gA"rdVn;)H<Z
%eKM8KUZi6P#o4-9^k"P?<i#XnK:]pCQs0@=1rM@n%NME[CQ3UQAa<AUVOWp2>MU"R`&Ve0m]n^LN7ZX0+/R8kAr.'M,0kbWM"oo&
%NBu8\akBPCqrRYpMLpdHK+0'tlYY"gT^*2TFr,'gRn!*MN"K\Vkf<Q-2e^D:?X`PC&moQu%hiCaE=NsXk^_IH]n#HSUNd"d]+VYB
%O:c+Zh,!?"['>">?-4`rUq=e66kj1M)%?@-7qn]jg'#EI<eBU?Y8!\&1agS"\gK/K.U7(Dj*eDa,J1/fO^ah?#7`!<dTmNPHLD#u
%_\Y:1";u1`)b/=O*3\h(161+qCXT)adN:2=S-+P^pDe6gK($6kS>HbFp*3$KF\\G/LVTUS<!+Rq4%mMq]Pp^]'][+lE1gP.ZmHC]
%G[p]G)X.iE`#3BaD5&o$.Vn5!>K-4Kj2;gO+Q!#:MBMB4hkR[^Emo441?&^#cj510q[pc13bgGg?;Qc5@Vh]7#GbOTY_U)Uel$P#
%)$N$?"rh5$K-^B)Es-KD(LH:&+=#0>6P(8hVFQH&E:34E'oU5K%uPAd*&u<,$bQe$OGhi(DGtkn&dZR81Y=t03'%JEeR9Gp9t\i-
%H:se<`B^M^?Z?,d88&;!L8b%'L:BEH2Ka+t1#`U"ODpBnm=A*/a7nW/5hZ!_0J8%kB<WNb@DU+V:a!idf`^qZdO<+lF5T=C@QM_j
%mL'.`!"B.UfNf`;(i]a!BWMXTg:$:JkiiJS?/H?,`#3BanN2!XL\RFW7ZXp0gs-f=3H56B85,+,pjOqP6-eD>EC,*ZV][50?iu6A
%C,#Ga`#7)`*701c[G*>9O:c-0J]'1/g,HG^d\`XD>MrMc@QFO0"rh5<</pM0%L^2tj\$_M+=#0>"-'QPRgd5;\YpcGhDu#MJrD[A
%%5_t',lNh7/_[)N=Q?&-U,O@%+_VPF1TRtUq,qBFT[r7F6&ZK?^``t;_lF%K0QY'-=9cj#D,Q<+kJ1LoU=NML0i>L&TWZ;Be2h;;
%Y_Y7DlCOg/E;`jKgop?NK&L\Qmbe@+iXD^]n^1H,hsRV+N!;UldWSA?:7MEA&WPHgb%Y4.bH>2JN_PC"`&VcRO[-^NYgg8Y6p_pk
%_Tj.?(i]a!7MoC_indiTDL3Y`W%3-4JrD[A%5_It`?RS]F`FGlMt&WQeR;i1-dI8FM1TO^_NEU1>!YXHJk6Q4Lbm[K+tHm1dDO$t
%&jYYIha3D:B<Zrq.7f:7\%d&k9HRZ$3.hYs!jj9ls(WY>MsoKdob?K*)/LEmV-W--?*umIoX(EQ]s@"B1,ArN"rh6O.f)s;&i[*E
%Ji6=]YuI*+7J_kGJO[D;1)%*n$Pd?dJe",f&TJ!oBLFF%ViYcQL&mM2.LJgE0h.\L"ra=rHY`#+UXFRt(=KBf`#*Iu)ee:cSl]]A
%N<^IF9n?QZ<!imdiX@`lB]9NfT@MBTIDit)(3h7JW+/Sm!s]a=N47b&6lEn.SaAH<)0#j"BUbr3ko+20ZgKf$J2-$l2UG98h!F=K
%B_;r6)N^GU>lo'+$oX4:ljg^\FmTfc?H&<!d[sSQA&K7$+<fV_7Z5daU5,O1JGM6+)GuS.B<Zr?Oa!a35p77WqsfTFEr.j#3H56B
%K$\T`HJD4**G94@VZFeoF5RVJ]Al>BX/,p!MjMKk0i"5@#9$"fTckG/kg=!Kqr9!A3,oEJ8>@2O+(AbE$$""iIKFQL$oX2*l)JgP
%rkSr:>^EK.eE%B&";q?hfbMZ3R/$S;U(8tRS-,I_el`Qg7&I,jCRu8,""'!-_)QE=e,?e`%2`r`X*_I-0`OFQ'+%Ko&SJ=V7+*G^
%.-EX8&uKq">0NUh(aI=6_hb+!^gg!m=]lt@!"[Gg=i9#(N&ZG!,Eh0iDt.T&!iI-Ze.3kJD$1_r#1NPGe.H49l>=+dP3b3"3I?Dr
%-dI:\Lub>Hdu^_q#0XM-a\/qr&cp(11Y=CU3A/Zg!HME^r=EmYTep%jF'N**$r3;pLCm+J6#'c[9,^B2;/0/`2$=e:"rg#W)$bI#
%?nr3)M?:cBbr8$F7\%;LTM7NY2>0E>.4,s.:U$3G#7`S+#b((K_@6iHo0@6G&d9.m"ri.f,l"o.p.Rff9V?V#'JW@Q!sb"G"M?#9
%We9pjAlQ;+1kkg_#o4-9^k(WA_)#Cr>!!=D1UI2]I0:B3c<par_a7g')GsZ]JEA7&[s_2:&SJ>!jE<!"*o)RoVSbmP09D[25XA/8
%_$6>]VSn]KNA-Y.8^]d(^&EZeN"bBii@+M(Vp@U,P<rqG8e)A4/aftuSSAN'`1Ks[INGO$g._CY7gbs/Xa`pOIP3Li<3Q$/n:]%5
%\XmaKdl0rc9Xf$qo@=HuD?T]oYe9)i$0Wc&Dk`Kc;t`(GK(^YjRODJ<P^Q8j]R7l9-;#RJAR?)sp7ARnM:-39g"/Uq3i;7ZU?u^,
%^;NFFA%])sLPTst(F'5^V>c]W;9ZOh74@n)=cP611fouqmB71E2rhaiiC9ZS@iJfrmOWSK;3qRf?VPfrEGM,K=R(UAKfGc47+JY=
%Glljb-hCe9ZR"(Xbn.@4Vo.(J<\Cdp,mpLFQ_MuZlXq><`BBlF2\7USe.j!PW+)l.X=$Br0c2o/,'crsM>V>J6Odgbo;%2N5mf6p
%,%/nDAq90MU+JIf!7K2OO@cr.BuqT=UOXr+^B>jeL`Vp2QXLEG*"KhK;UQ<t&!jJ8WMtb1ABeVM\SA,19/:'ViWHo9\Q!Z&I7USC
%"R?AM#c<C@)j.c\_PSE8H`1DUE1SV]rDM)ZC_f0G#MCa:)6hiR"+C7(!(S,G=Xu)i$&Aka#O*1i]I1Rr+-(]HB<?-E%'(]q(hM2?
%Aq90M\eKguWc127<YSFHD+g8_Baa>^6-!^P(`8FZYQn\K#N6^QK,.)9"#*bEN)]mg'k^30N(M#k-%Zm8mhQKu/BJcn&RuPgX9r.0
%;N,a5jg4Ce0fq5"KHq9f$LeT$c5ZGA;_\AuE^;2blcB]`9FoN0,'ct;9g9Wl:rcbu4;h18\922\,%_#c*e#^>%O$\B@'%po!B'L2
%X@q,:aa,^1*eQaf,EheSXQ"3S6^"joH*XM0lMKu'OB%@p6%TmV=g8O+k'm('.uDi>3JI@ITT+j%@q\!%LZmHR]H>"g)iK'?@;Tt4
%/=V'>c(5BL@r-;p2I"15bM$VCCpn/9/Ru+[Yh:`hHe&Daa05m'3m>WpCa*JGfLW@@*=IkFhd'.ll6Q_c#hF`<r>6H65mP+5ann@^
%rE.i2'l/HnA(agB@F*Fa`9\$Y=Y!M<']:)&rRX\J7FaGTo*S[#=\jdn@sX6N&]oADSGM3SLK`79kK0q8`?.(?LtP)fSCKg>C<'KE
%==[[/eW(*Ej/hq\<dVh9jT/PAGd=En"KO9tV"uNN'uIjJX)OUJYR9J-Jl^$=!#3n7//bM@'=*M5E=YXl$KoO:=t>`\2AjC!+<`.k
%m\OcS&,60)91;/@;K/iM>*5na2u9@s9FoQ1,'ct;<BhJt:sE2&4BY^s"KNO^AB.hi'<JX4eV:K[,Znp9+C!-+Rp`YaXELZ[cBDZO
%S8Gh5NgL\0gfXmIHWS/N]1tF`eV9A1!nr<*h(lqg)j.c\A/0m[*\(;CS0uKpQ!h"/XB(ikR:'#M<["M=d#*Va5VYDma]Xl8<\)I1
%`EM4_=]W@uSF*;3fg.+H*Jc$2XE+pI!@ZKo,*:+5:E-997rN4hJ$L6o2C.aH0^8o'*bnh&S0Pp"\8lX[&Mmo"^OqWq5/CpY)!r08
%?%UIaNNm,Tp+`=%(lM6$TTP$TbG[H4Q#*3]bVH1.;(Xr.5u;F?2OY]b)E[dla]^,r:N(=Y"-;\4qF2b!M6Q9#iuXAb(!`"S<QVj&
%ACMfHJ4`$!<:YWV@hgb%03'$X]6t^,:^9-#!fQ8nH#aer5a_.qE0%@l$SCfJ)!_iVfX&'Eo/Z.MF4g"CCfr9*@LcW9p,bHn?"+:j
%5)2::L%AhWKq\ue_h9TBbqMfXDaMDp+T;u)*gF9MMDf^\j=QXu5>10*(bBAl7f>nFkD/.@PIr3eTB!OTn_N]^ee-e^MXN%S]AbDB
%.D@;rg+)*o:@VU[HoJ\acCa./B;_=S!U*#-L$(Dqr"D&K2E](^^tNL*DjJV"AuoioRNoLCVRu=[(U.B&iOi<b9+`]S"LMYj9;_[j
%'']EBpuqqe!'jXZM).[&lHs'.1?sq)NPk=J$/Q<Xcgb9gjr-NEg5=-t=XE4AP\dKqakMr7\Yc#;X(6:2]htXW2V40.dgkQcn_Bsc
%meBmgc?#K7\`#Y0]U^CgF2Q&PE1YeucRn=jj6^gB/C1%an;O"\/%BL$4@B,3R-1(4b[j/0prWZbN4!:\@rI$55:6D0akDSrF$(hO
%;$:u'9?qUq+B8b\OTL'@PH[U^TGafg4=A?N3%"Z)`S3sgVP)X<JnH]W7DjCg;EWR$B.augiX6,Z1Y/#dgn]1436us_Lj3u'/&atu
%fo;XDX&=e#&MW&",<-,)M03+n=Nao`=aua_K5S')+W9rCg%N>SO7g.3cCa3&.[aW6\OOr+<e>CBY\-7BNfm2H<+hICfWu:/=t3X(
%QHk,/[+LJ!qBLCJYl&!_\&A)`I+O5N7aR.'iq':6GeU$8o;rSTP"a(Y"jL^,T5X(Wnm1e]VX0\93.HtW/iDN,T;=H7ml!&\9f1`:
%DlH=QGJe'mM<;EEc$(,OGK3qIr)p`W.qLQp#hm\Cok?DCE5NU?G9>'gQP;4F]`k&HD9qAaq]gLKYl%uWCFS8hnZA)oRr&BjSfp[>
%fi"E\;T35dY),Rd4B.';PX.O"VWraFg*S*2LN;YbiuaFm/!BY%\SP_-RrEaL`+9s1=[cRr@4P@%AJL6/MR]`t/t7[?->]MMEnPI,
%(_=1IFj*.KXBP$8;sJJ%D=C@8[aK+2(';&:Kl/Z[+3J08*+]BXVNidm.T=neCmHB?*@#*@%h,d@a=OX@Reg^6M7MnR9*g>]m"&H-
%1aJjq#gYI]pD@I3[hSAqpm/2LP(8R2ac)R_c6^CTZN:7#AZ90UK8.P$Xr)\$YTbo4P27V=Or5tVAkYR^43'4K[Nhq<kQVE=GTkZj
%5(_gF>[>0p"Hg3&9+C2_dh0rcei+kLr[?ZQ=T5Rc\&A*KHoI2VOGE0n)t#jg2NdkJ5bXZA=U,F)r_L[Ri'Ki#OK9P@Bu@W?#Qprh
%PTNcU7#jYVEa3WdU9]W'M#_!i2Blr`E[N&m)'=&No)2B;\P!NC^pK8F.Y?)oO]N+qh&*\0&Km3G;;#p7,!]7'$/_HW1h5Y(7AN/j
%1\WO0fJ+tS4cE"3ER.pL#j=b41FFD4+tk2),]kglFl'*jV(Qrk#s^H'd+*sE8,;S@ZVeMuDCOSknXXX$,+ornbFP[6M>;&"HPI[)
%V1aJ$!1M;U(G!oUiOe2H<WP:ZV6l^lWQUPsHoHG[Fi8Kpik(*CY'<T>MXQF`[Yjj_;gd1/h[OL\oB5o:&iP+?h.U#1_cKBF_cNB_
%)h,tK"58E&4TO;OR1188UO9Q+L/6JW/TLb@hjoS!G8JD-od>s[>o?4P#idRido'8#XV?oi7S&RORuj]n_C5u758<Md?*m7<0"Eh;
%&qFkY24*/,M5<.AdKl[.`8-2#<=.na5r7)L95j0Xnm$8#h=5n9im7.36aB(n4m5Ai/[]^TG9&ku_bcgn'eF*dee9!;=a-1WK4_@%
%+W9rCflj.]:\D@DcCO&8&m7Z0NM%;.?h2lN83GXg]f2HuaH%@M<$Z(FJpOfVOGs#\Cu_bt@tM2.q/^r8M:kAFNOE<&XakZ)Hc]n>
%1+\(fai&!ocjWtGfuF">gD-2pb)C%jF6C&Nj4G4N]"p9UH3THZHj2V<j(A@#/_+iG9)uQNL+tN\5K\/eU1aUO9M:m?_`-)=AbHZG
%ff0h>BJ$HD^stV1:Orb$#UHlGW'/)t.0:E&ahT5KlN]ErK<ZP-5Y'oiIN4]:D9G;,95`L9R]_TB-s.C.#tWE8AD8;i).1Lqo_hT=
%\S[6Y?s6.T[\0($'K\]J2o_:T%ma@S.!u<90Ra9gAM)"`XsX4o=FEOllAtL@ZRDPu*RbYacgfhfq!Roj]85o6`HN9kh=-`!']0?A
%D&`$$VYKR'^,t0akKi].7E"J_X_S(,B]0H9Uh^`t.,>Pc(a[[!lmUIKCBjm_2$*API604LNA0b?jI[oI4.J7MF-Yaqi]L;4B:7a^
%17fYgJ(TcPn4Z,(<loWQ.@r'8F2cnm]K)Q.[l+c-EH9)X5aZ1'P`?2YgAhO`M4E<+A4FYrgO)5M;=<@3(bi(f>hl"/CujVG5W;1#
%jeb[OF#Q#X6U*NnPdQbFF:1>i<po9CqP-/oDmt6;do+oW9gG4"[qcW'NY\@)"1tGW\+Y2@lV'3&jK9',-*\0;)$<]r()rE6ItV_[
%Q@H!q/TLb0hee8>QB/J6phiuW2\Fq)DlHM%?1ZH%&`6<?ml'1;jXkKO/Dj:D+lXG,4'K/XApj>%^AE`TNq8gG.gM^bD'/<(-ht\i
%\]6*[\tt3Ia1(+f!Y7;_-*n39P32kdOH)3&&O>U7TU!U49HZ,X_/'7g+3LQn2?LaGBgj@b"Af(]Z@!82NKIGZFT#N`q1975U#cXn
%el'BU'nBnth"!o1UHEV@=29i1.;en/oppBL+T^D4=jS;l;:M;$/F3oJekRFY0EB@"=m.$nNAAb1%g,j+46c6%-q:9;%!\qB`tq\Z
%%_SD6n5&gV<6XA1!7jo^j!t-&==`P(7=$1@=3T\T@)]L:p@o9gp6KaS#'gk)1c`'K(3jPP"/pM9"fNnB>H+Ci$OE.4qBdKRLGISh
%Rq9HeBr+PZ/F.>eN6Ad<`Wo(])4,cqAJ]@>Kj7+Ag*43*-;@%^&)e-+iuUMkF=W:la/+a*PTcBVF'4EWbIZb>en*K+Pj!]aApbof
%de,u<PS'6;Cdf\]XCEma!kL,;bY(4N<U;$)CTE=X,1i!e,i`,+!&S3Y%EYP5b&bh?"9Na?9:S5eG9R``J8V_V(_MXN7a["lL>dqb
%ooc_I#Y5@h1Kki_8G]*/o:X$P*RdnI/.mc2[XugaJp+LtT=(Ln)%%%6BY+);Z3e&/=??eE@.YKs@s.1[W&MT#+-V&/ZD-*1G]Q!j
%'[Ms6//cbpBV"`'7:u^oS!(6Z-?uD\)67.-@rITEaa'2b*R:/7\Ol>Hn?FmAk;pS'c$?I:4&q1$MN>1-4P)$R)pWNBgYoe*T)05J
%4WeIcH1"QmGF[i^\'q4!DY[Brc?#?3\`Z*L]H,:ejgc*4Sm0%NWdgg,[q10S[U_M0>V<C?0.[+r=FE7dlAb<"a5ij*]H,:ej#L]4
%C:TV1j]8NBA`[[;Q)j"IXu9kQC:TVQ[j.[).*p\keT*0A`1,et:%@$0Z*p1c-H1&DH*2ESFc,@NO1!q/2^t>&c?%1`iOi<b]->(4
%=0SrQ"m<Eln_A2W43ho6ijn)Zm5`L@JnI:ppCq1-[hJ;oGa9eM-0JDdSi`(m=b.aB*OgJB5^90!)67.-@rITEaa'2b*R:/7\Ol>H
%n?FmAk;pS'c$AGlThBcA!GKJVF.V\3cOK'JiU(U@*7$b8rC[.%Z$+>a<R>Oa3/fcf;AD%MJ9uR(gLpSU_7$&(.d;pJh(^Q__#sC@
%mOZse%/cFl["D?YZXQ;8mDt.o+oe5N]ArVS/n%`i5Wr:e84NOi^2[9SZ')S\M"0)Ea4@pf[-mULFg$k.HbEhdS%?KaG]VZOf8%p?
%CdPFV.&W2MY7Ia^IF>^Y\$8^7!SnS3jqFI^-ukjjW6Z(PKE/kmWad-1!&S2fR84+QO7M'[T9+RDdh:iinZC(iA^C2GTGqagXdXZn
%O5N!$DUh]WB[oL9"E^=h&f[!2J!BD^>;[ikVBsN[iEMYIWL3*F5VlRl&CFB&FbQ-=l(1^LV!6U%5$%0-$J(cEo,nI-1aJjq,b]:S
%nkTSK&Eh>Y?)]K5h)H%o%2R)Re*RJRrs0*%F]JZk/&C0fCe:l1/=d%%BPg*llAr7<LZKVYGY=Pka0uPiWYs\8FJIr[SUgK*E#^n]
%1Z5n,/[_ZE9BSSs>2PF#qP/H0aNf;Vdh:iindX\CRY('hTH,Tu;^k@2(kT%VmL_Yn"br<eW$B5a.Th1hNduG_fT;'g,CJOUr*t>f
%`;+J%/,@T!?&O5NZqB]7,2g)L7rTGe&`*\=f=[rKor%$[BL_;,P#6^nDa,fQ=Naq.r)pb-lq,,SJp+L.i-b8J^AE`TNq;)'q!Roj
%qhX])_)DkI4\",P/OfRt^9o8dAUJjOnI=lO<)2a-qBESJ!\c;S85\r49%KO[,G5o*1R!sX.+`oEr\;M6inQPsq+:<R!4p"tT]ZPb
%=7P5O^u.rN?GhL18"]i=K6?S&W&Ml,+-_8Vjp`W^nX=6Bf)653DQmEbFdqC%j]jaWTu8*&!6nnUc?5W9\r4)dGXI=O4E(aRmmY(&
%7aMV\0(J85U&=QX#`aN`2M5>RL(Fp4n3(FhbEA?Wh?_^m./+Qi7Q2$$kI?h_<_bp#[8?-A]j_-jd`SE3b2-%$-VN;o)/I=pBL_;,
%P#6^nDa,fQR,fi=rZ'g$XHaIGNOED%3?XGb/g]<&F;95*i@QplQ5kEe[([\$ogegqR8tB5@p7mi=h`.G[LDt$d#POIiOui[GNCSj
%]@'JR#uHo"TosP2krbmLM[de,5JjiNQ%)EsL,aC;CF'BX_7B94)_;\t/*UJ1+oW&nL(_R%91=@t=A+hMBB_PB7V`s+;1FgI5:lh:
%c!03*3PLbFgi;]q5r[L5>c-auX!?Z8Fp^tH6/93(62*Z<2=&T:H-hO/N8>r\;83"5r*q<sM=YBUY!F3(lkG2I)f<nF&chH_i&EtM
%GJSZN]VUY]BB_Nl7dD"V;1Fi!Sjan-m-'`ZrZ'hn2#&?sm:a=G+?Y)'A`E=g[@"k\B3k"mMT"bCJo7s^oSNMY^2[9S0n,.BpiCga
%M:3i(DR>S!5&6QGIB$&pknCW;>7ueA-O&=>g$'1IUO5^`qP<JFQ8jASDgi&m&qFl,9uM7>ik(6GY'EZ_MXR!p[Z:-#;LCD8hu*Bn
%nRqZ8MM+)^d#GKsnm!?C49pq":nC%oJZtt'+jVTN7b_p.Nr;hhHS3Vn41_8E5K>_?=2"g1*N^rt*Up1mQuDIT#l.L,CT1"s9gLSh
%P4O\3&\`6er\;,37f59\Q(le&ba+'X)f6V8eH+U#^gTJ29q\RF'lU$[h,ucLR_eiTACM]4gPs??eaS;QGE1uA@6m?/%CTOL1c#,@
%$``KE=\uqu,&F2L=AUI1#0SQrfH95/NQOK9nV0#IQ>8@JGje,K%^mtahVAs(]t<P)hVIh*,m6V$([efcOGs#\Cu_bt@jPn>im7.#
%-"\)^a1#Tc%37mDh$Q@#/N:<e+9K,nP-?)Iogd]$CpkcKVBO6Uj17t0G0=Nfa,U36cZWOafktT^;Os1l$C]And;1b@g#fQ7!B[/)
%cCa41951=Ff213m6Z#a?C)^lc/_<hRP_Rn4%CM0Pe2F.s[ZQ<uE=Febcg`ScHqQA$a<;,cXcSq=Y2jtS>Y]BtY:Tb!BM6W0p.+nt
%@JRqhDi+)Kq!Jc`3J).U/_A2]&o6W8__lLhYa1`2AkkWJg4jD*fH94ejdJ2@a0`e\Z[DM/dYM\;#hmZm*.AjZb99p$j;KN'bm2W*
%J:oKt+9FS7RaLtdACM^[)i*Ms.p5LWIu\HXe?gd(K7Ju#eZKTc([2)eK&_@q1EA>?6&pQ$V3:Laa6u;M>2PF#qP/H8@JRqhDi+)K
%phg^F<!;#j)fA*pdJDXU$4-q=.r&G]L8onAQ%EVP27'#dDj5$%.0!De)rfX5XufSB531FMDQo[8.l:"-6?N;&#`bZk;-M<uCT1b@
%g$sF9N4*<&>,4C*[i^ocXQ(mPrX@[!V#'7T<!&N9<cI:E=A]*UXf-ZoXf1#J6Df,>,kjhP%EYP5jI6S$5?<Lj`V_a1'38'63kh!s
%'`c(PW6e%J70S?%Pd$kdTGq]\74%n0[[@jf@)b$f[\Ed$[(SQ)jZ9_"Q65&_LE59F+n<hT!Y,[pL&hC2UM]c14tAJfpH9t>WlD!/
%;en[iI,A8\jESn3.)&*'"%WAu.QGE,Btc/cZOMm^cSi-9+F,%,X5HsXB,^uG[#M!Z.Q\ZmR,,9"j66M9"fL&_U[Ank;0Ou4N4N3r
%O:mV+<NrMu0^9F$dW^FC\$FJFN7j3V_lK\tmi<B_:HZn27>uUqb'1gP)ga+;m_fZ%T(n!-'2S4"FtP'22gr12.qm0rE;FHRMgU85
%p76g;Xa(;#-f6ZhVai!CHriHCltR>u-U-dAa]cY-,,)d9]3)cTW\*9n>J;oh:5G,ch[.hFnsqAiKmX\)6@Zn^3t:(/37PMQICJYc
%ODf?)mu"i[jh$,u%HN@Apti;WYnN8Hht.p?hZ8-1o'J$d*dtM=&N#Y,I*5o!lcHWFHjB3_&./;0hZYPITeZS)dA\cKB/'0#6j:-B
%rJHF-pq:8/XlNd:95J<WZ*+d/e>J>ilPIoK]]aOHO/ctGrW"I6XN5KlVW:NWdE7.pXDIT16?K:kpSkgqm4&^<VV4P7SErmpj4dQe
%r,umdOMss_1;7%jJj\`)o#)p3/m56B7jRud<P]X3XqJRM2Ni"=gJu&pnf8:`pi_o0G-umK)rIe2Z<"5`8G9NnK!.WcH3^?Opi]XF
%E$*eHlpLZ/5T/cT4l,ee5b@bHD>8FB1=Lg$h/L%d2@.oTGJtjdSD[RgXB6shJZcnA5_n<%"tuDSjG?[B?E.$TLHt'@\rJoM-%]'3
%JD%+AU"QWr%U`,>?QjY^niRkfJmGL6fe:/hD$QI,;Kb)6qO>2Tmg^,LWA_Z^i"-Oi%W4SG41NZ>;WQZF.bN8ufGuO<V!e`(K9`!f
%K`6_pLqAnd<,edq#PkNgmn1;%qC\*&Jnch3Y(lBsCDMi4^RG*qheW7koI[MeG2M[/jY#3t`W"Jk"(&KSX8mA?U2?q\fYt]8[t7>c
%?D:ITLHt'@]#N3m^/T'/D'),hZ6't'6![\bpuPfa<a!WkP5dtK,cP0Q]7<$68`*1l.M`W<3;r.5?$Yn7#Yqc2p.i%%m@=[Q-jR/(
%Z:+c8Gf*&U]@m[?-O$.7?"!,sZI=r_hsd1qdsXZ(W(eZ9:<)P4+W]c.*Je6rm]1r+g(!,":\`eP<\]A#p?B;"0CMQk;/[K]#u:4(
%EdPWgiF*NhMZAk%D#l-=`Hp0j+S_aL38IZ(ks4HM\i*T&7<".'("sFs'tZr0=6s)nOGjoX'qB%3MOi[h[W."%g$)'$$>i>akd0X6
%<*QTQP)@Y"H'(@a-"TKe7\<*RVcr;jCd.*q@%TmAkt(#Vps-l#64k2P1[ZE&s1uE*mNHBY5Vi$EWaP::iZ:G&-[]R^6`B?n,^U&1
%aAsB?@imR,+#R8Ne4b;?N.'2lohdO=;)@lBZdhRje47d97jWZ6\$7\?Jl=8(9Xfi:)crn@"H\S-BbfuLEFi>C8`.$5XmC-THY#7&
%_jK74#L#cKXU]Z#4',p8]5=(bZeN#5;DDdmAT4Z'g$R$3I92rpQ?Fl+ni)!WWlgY8%^g/SKD&T@iO`rsd(Tmj%hrN>>m7jo'7Fd_
%iHraO`Gdtrr(Z(jnsrTo,i@#?*QWFi,\,0'$?ih.Hq2A(,i8ojd,4JTD\.Asi)Eq=NQ"^L^TlFCqMiH`$V6-3+B61[2T$JlJku4q
%nA_3.dufSJ,b+7K[$/8@pC7\@YJ=::fafTU(YLi!S8@%q2:;soV1/Z\g'-Po:\`ePAhe#_66^p.[rFlr#Ys7uhVJXj3$b@)e[RHc
%'7io-SPB@#=Jt'5'5Z+)LU[#BR1<c"&eju!%d?%>m3:Nc8;(0iO?6(CNhH-;1faVI]FdO8]@`eNSHq.<3l8TEAYoR']BL5@,5b?T
%.CP?(Cq7jT3['Tir?^AKR>p6`9tDt<\fd+)MWDs'4H+>j7'MSdJQDklmDd%'-`.&qP,Fq+$Ko?`J@#dK`!@J]HsZ:o=f^238G5%u
%n\ECE?Re$`#KV'N4D280<OQDl(SZI#s84A!`Hn(l_'WFmaL3kQJW-^9QYS^!r_!EmfM'sn<jiZP4!"ur,6.Khf[V=kG-\EE.GG`&
%N3i/GmrjG<LV6\337PC3+4SmM>%AB$3nib)MO2%-+RO\XoiA;t>sP"VK^UL.'fuGQr(Z(bnf?)d-f<eMI6.$!M?&eqI*5o!lc?QE
%I!bE)&./;0hq@Rk;([7!U.#LJOaKYeMO*^eC*WOLQ>c\=KsK0id,4?[%`>b;:i.N9ead"eG<r$6q(AVSORHr[Y39*D\WFnioPL[R
%Mr7FtE4n=oA%arb>jlPB5Vgp&<NrOCokqSnHokU%<d$Ne^"sd#Z/.'a;_>.r[tru^f=P5iOGrjM($o[T]j'tthmhOFluXM"]fS8b
%]itW;>$162!J`2?dG]CqMZAjDhQ;B8/?X1)5%tte]9ScoA?U2IDle/@i"53_]t4I#[E%t.(',Of]itXnYo_N/"eTc$@D,m5ks4rg
%GP&m[U'ON!31&8A1oD*Pc6]n)+;o6W.bN;2>b^/?[W*osg$)'$>[e,]S=0^Y[5b)8+uI=Q4jL%7#Tt"+C+@ldigcIqPJ2$3:"d(=
%aPZW,bc-HW:`F@KX[Uld^cAe<!@2/M9a/.4S5U)K_KWdU2.`[1flLnJmi.A&P?seu!PQc#ji3"V,JlKk$iuIlYIgiC<uYS=?gpYE
%$.ep;SW8C&VXMCfr$",N[\d$,o>cr<S\G?Y3e(WCT_+-XhGpe<c$GpfYY!G>e1+K1#i,sAHf'?m/[m?;@cN<Jjh?GFU[>A6Xt.)d
%QKnle(QKk$iHgDc`D-P&GLL]=>R,?kaL/K^HZ4t66__!1,2uX^NT5ji\dmd^+:u,RY-[4NUY&8CPN=j!l\IgREZJ"n6J'>"S]Q"D
%+ETPI-eqPiV1M)$orSPf\lu6e]#Fpu)E4)lG-Mcf=2X\H22`d5#fQ/.CHTN69*M5/#;a@SSNLE;Jkk_C^K<@TEO`OdG-M_$':X+2
%@)c<:ks35prKh<[Cd/N%@e"9LR#JBM=qFqc">V=,<NqAjkh8#N:P`2n+p-G1qo**jVBqa,9/N-(XP'sKZY9_YdulSXQ>e`6d;3!l
%B%%C;VBqa,,CdUT2GWu[_4`dIl$b?)Vu*lpSi]Y#jXpV_2GA(.*)CCfFiMo/PaMo8geHC\hb+^#l.Wt#WA1%C?>9l5pJMq^+<CBO
%W![^U$cj!Ro^1SM<+VsPTtfhRnp@>[37S4X0==74^!uhOfC,QE#U"DA:K.M0=qC(u$9m]9^jE'':.IX#dl1Uko%M)B>@N<l<lR(&
%@SWYH!ddN&_)GS-L<!642d<01?Crk+j.GY;EN_[jlT[]s_WsGcq1&D85@/B5PK`p9m'$HaP-M@n_KifJgB-!A]E5.PocGiQ<;R9k
%/+s<`QlU.Oer!`Q)oa+h?a[>8=m,u*o$r5F4D'eAh%cE&gT6XF)g@,biL8_gK`]*oi9I^NXQs+F*k?s[-"n&d#_Tk&h/[pq?CIFI
%Ts9Q;fP_RKrqdlmrHQ.aUaV&pViru)&_\"Nf,WQ'Q8)iQp]U[^L:P[G\u+hrfJFHAf@uVficg5Jn,!B7(NKfAJ?.35Z*&,`GiTK<
%Q_7J0+:S)bG/oBJPhd(D3rAZa[ZS'-/-Z!q@(T)tO8qs[p54!X'?)2[n2f+D1'p7ne$(mIpT(BufMl#NpOBZ5Z:c_PV12-_(Wm#I
%JZI<6Z*&/aGiTKTQ_7K[+q4>5G2'PU6(+:+Ts9X>^ZFGi)#l50YKrn\UK'V(5Fnl1,#d4rn=!i+gbNK(;aGqp@4o8434MV*C`7\,
%9Mr7.2=(s65.ofbMq\_9d4cWO=tL?P.Mn%6/n&l/RY;s&TW_e5n>0=s>]XbgL:VJBk"E2NqbWVs9aHsXEg!]11W-'$\V/c?Q`d^C
%@F/)bHQFR3'u?TN7C;+H37r6ZJnMa^X)SMI][$_@-TWpE:9^ke$n*qlN<aj<Y0\pEi8K!jdl,RYK?%bcBGcL857neX*B[dIPB7c%
%+Y,Y`Qs`$gc_Ft@ZpIDpJHi,CTS5G]jpfj/[>9RZfRSe)OI2`0>"m@YJVHdA(bjGZ2Q(D]!]ZaE.C"<r6T[G,EnX:8cq_mh?k.4g
%6XA[Un\?E?DE4bZ!uPZ3:#%4Vi0'M$>s?TU%<DpBQMEWF5m;-Z<H-$=coMP(krV3.X;hZtoJjLqUOOpkH/HFe\/cCu<KhRV?"PVO
%P7F<d6)5N`ejXQASOf@IK_$d2(6a2.&ilK-A,gkfG.rROH+6%*^FcihABZ6%Lqc,f01pKko"[3LXl,:&OZ`/*j&=JX'aY0E%H%0C
%;4e+H\J<,4/OBQSdhN_q[0T)6*fm;Y&6rW8-Q&]Q$KFA4W'c]fkoE8H?Re#=HO&T,e"8a!C-b!\C:jgpr1`_>$4am"N0XUAn@jUY
%@Q<dbO4/Gj?X_R37qd`RrCcRq:n/i?L=![A0+%l5$&WFrMCLn"_ul3F]B$%[$"+B$25fgM!kP^^E652#B=Dpskg&l*md,+1!rs(r
%cBc9i[_SHIq5!6^GIDVBJ]Qa@mFn^k\@Qm'b'c_(Wp]4mmP7F+3;_G5U=_b.#;H/3J*@[fJesY!7U^]Q>K%RJTuZErH:,#jpD$qb
%@t/,iR#8N"<mp[L(KE!t;ujp8E<V-U"m(S<H=+NiYs_FPEHmQ)F_0Z_#FFB&^G@<4eQlc;.K-<4U0&S;!fWo6$4al[aqLQB^4aa?
%dSYcDO44!l#HsNh*Lq`9G7\lrjV:p0QBLrAKqS#9MBJ,c`_g^ZLYr?tM,ANT_H*p,;!;nF2hop.\-1glqi&N#]*7kHo8GZK((odO
%8(dsd';P2[")[.55lG,iSNMm,An[&r%S%ngdHDjH3''VY^sGK0#^)7K_ul3B]B-+\*alW<3_@=B]a-6Y3)AEUgg<]6;r8c)A^&]*
%i/il'on$';`qarBBL(6,p1HRrmHa3eZi5hZk8/%!pA0*^ad#qKJdXT\$ZFYi&mZD[r3O>'gB",DBa9Cn?Re$XAHs6>[X:LaPC,^;
%Uog^!ctRSqA8iq[TjtD(K\`J>Q(kMkq4#+YYLheV)X/8IEnf?JWhIRDQe=^F@?mRS-R]Las7TfG"c)">jbZi<?c#jK85SMiHEY?L
%_@A37'djf<0d[]W_9%D$#q?mX$Sj[E(S"a_N7*'laT^pB5bZ6W]f9>p&]#p+35&(.QBN,">#;?NSE1ldK3(lKYfg<CT(n!/V.u99
%"GHcOn(9g%Y$I+8OrF4Qc@qfC95Fp.De9Q74MZ3\FB)M<+``-Y@$5,gS5gs=9LPc$BjmnC,SkEhfkDe2$"+B-9cu0Se'(Pp3@t50
%/>r.tY2suh-!3sQQKqsabOrYd\^IljX_YK,-+K%!nHmZ;eLG\S&Ghm1TpJbjhrob!O5T<>WP_5F<Bh9:X@eYn8+;3bI<g2C=4s:I
%gmb<+$W:CKUs^ebj]R[;ZQKup5q:34<1!ig1^d3,(8TA08;13.C<_@?@hb897<$=qV&ZqM[)a^Q!FPj3)d6DJTo<h8.X2O3-r5e.
%<*[:@0i(X0EI(Ej*jn=-CkD=.f8aMti;/]]-^uCeb?Bp-M&\&l#nRV@dVXU/.,eUM,\'![*L5eN6u^7!0^mC52"0DWJaR:0UI>_D
%o.5P%%_3J>4TqPP?!uMV3>t`XEHj^-mY(pA_'a=XghCj`>#7)um_nOIL^</kFtYb:-U(u:K^OP71P"i[Kf]so@Z00-Rp[#dSWRQi
%>>WXT]+aoJM2686HZ]IU-Uqf5_(<$81n`4UoKJ:)d,%iC$*J,(Y=a,oA[[cR-(39]I:e)R^j&in_'+%hH"*#pQ`sJk&eoX3hApK&
%qGP-Y\1JPslb.e!*j58''j@#J7lQGaY!3ZfEYjld5%/i<>,?0O(&OK7EBs,lJkL!9+d@&)LJTS$LJZ:T%NH(Cc>hHoJF^W,X_/J;
%.7XK_(pl0hSi/1'ckPecgS/brDpc+I:GShl0!;s[Wh^\%)oMiBE9hN@U@?N<]X<=<H&k=L'j=?q$mhEf30\)"4d9pb"IKiap`_O?
%3Z(I?-L'$t:dTCD0Jko(S6fQoKf3`PQd"t/>@AfE10_`j79ihD&l]"R;/lbpg]cer;>OV9<j>=pk](k9Dn1Jo*F+1HH*<P.6J`)9
%(!CqI_1fO'bBl\HdSYcDO4/G[g;io6#H-MRTm<iqZ*rjrYQ8[CAPTXCD,Cb8:11^aMVo&YTKFq9mp"Eojp;AX:@IG6437:+0#@L=
%[_btu7CJ<OF^/cH&5iMF;/lbph?E"t;-KU'<iJJXk\rSdeeMQ^1(=DjpeZo"5%M=c"#V(7\G&sA#gR\6DanHSckTmo$9\mfmG1[q
%>pP##E*GJ(X)kGW0T3Q$>#=T=EY8$pM28AWEDOqNo#)oGDcs-.,:%@jSL7a1'Z$V)_RcPTc4%ap\'r=H\tl)I:1p[A3a,2k:nAN#
%pB^)Jb0b`+O4/Hp3L1C`@Oo[-\6*^1`Pi7,/FGQK>f($Aq%05C1;b*T@ZkUZbcqEa"/]7C/Enu\,<IkrV@uHEkqGROmE=jB1_OM1
%'908J$?is!aqLQ>]nNRt-UFHHkrnO=!teep4mY4C&__Bcg?PWjFl;CRklT#t*WQopJfX2=&<,&LLKt/-d==QEdlWQr^Jo.YcBS'6
%jZR&/k=_lX.N3T!_'(d8hNO6!9R3N:/U8>mk6l[[q[QB;mBoeE4lp/ifg=us!haL=&SO\)WjdRImR6Wa-]B]YX42tkjDXmTrD2g-
%"de\.o;V+7[om;NnMm/0Bkhf]S>s)N6h#]u`$h`@@B3KU..fL4isrOO'jQ?s?FXkR>.A`9l%SF=5bQ%'aXT:2-G=@Mpn[G](Ts$m
%!G(QTCVC2EDu3GK.CU;$UX%uD46g!Gn#1$7!4='"H%BgO!m21OYeGh9@Ke^RZ,c+b>M_MgpZT:M_g?Ce]po4J)W#%E#^5E[1J7,-
%]R,5sO4-2(jl,,410<rsNu!<&7BYQQ*j0%(Tsm-PBSaU94;O-&Mf3l#Gbkj4%B%bJ*\n=t1960nA?IuM6e6j8&"0Knp61:<cP9eE
%&l>/:L$pU0(%VQ^*iF3uA\M,_$'*B4eS)=)mDV*9Wms@"_._A0E6&L8Wbjq64@6)LWHfb=e+Yi^7JgE--+ESH?\G8]bA8=*-B`/a
%M<#\>`\Yp?/gO5?deK!5M?uKL#p"3Prp\]U'u?Tq\"uSJ]-T$qI9,5@1>>l]7'VrK:@:EJ@"0MA-r5e.<*[:@0i(X0EI&^>phT=K
%\-,<hL[aoae_9oq[X]bA#V#i7W47FHn:L5L.(r-<LJX!8'RH;+C]FBqp:c,OE7)!f/[1+K+h<(;8JK@$P_!dQ>f!+X6$Zq(er-,J
%;LSf_3ZQGkEMg0b^4TAQl2!CogXCH91/#[p1GJej#jD?+X.BT?]dM%>#X2[Eb?Dk)+ecg<4S;X1[.>#;H;d&s89g$(bZ5@+WKtl&
%JWKpE?M-^*kab89pn[L-CDBKqKFWcYf@F"5\C5Y@lFdZ<5%X?9(+3a_XTX]tnCRKT$>N)$WjmXJ0HPZd(kq]9C_i4p3YZk0hMkYE
%&R=0U[d_S0Q13(-$h&%86:@?D#gMppo#)riHYhX]c:Y=]koC_60,7`D'=;fI<+0P'g1mO'j]j(,BXDe83:o[VjYim@StM?ie6\<U
%l.e6C6Nib4g:tZV4;l1M[,CV"7o9[*aq,/!*KS>S:nAN#od+Dh_q4\:j7)IWpZ=k_$GMN6QG#<I:[ZJQ&)1L)57$N3cBS`[]aMpq
%T5_MUX^[<Pd,B'fNNDU,dMjq,4r@Gs!OM36(aL<R3Y"+PPUArb4_!!=UB-&iVtXr5F1u,Dj9rD;^)67-ce-P=9MjDUk@AN;cIgEZ
%7d7To4!u$X..fL3?ge;141Bi@E&aP^HNgpM]A?Rfm9DUVkqLgO)=2Z.PUAq/IHaq3*$M#nkr]eYp)RCa"$YDm+j9Lg%sZetM]e6?
%T'S5B"N-FO1J6s6TBt"RJ3o=GH[6,7NXFWEE!^DL!7d8BEL5?N,.p=lGS)D*j05b>6Z@^F8-G^[^4`UtM4i5Un/h7L;#Ti/ZhEGJ
%KG?=Jq@S%JKP]1H1QIfkF[TLgdA=+e5>+E7*gG):m5UkV^4T?cFP&I3VpRA?Mn,j'*Y1RuN39]"%]Lgtbr;9a]4J*RNf_WHF<3$s
%On;+`*\?ITSU3]oQ?,iJ"$-sYo17.O+ecg<gfQ<F_52>q_^[bd94fc#*U5,3iKBUb3+YCZEsX6jN7.S9[Yj%,)1*@[POX75#VNq.
%+4eha6/,c4fBR76pk#r13)pQ^YT(^uU\%m_@@clkD>#s&HXkcD#H-M@E7ua$A(iB&3:2r*Ji\m*-Q*nU:RlU^N5GH-[Yf?^6BBTB
%1qMg2\-,=gR\sP8c*''FjjfJU+aKhu/qZN0J?J_1PKkCrc)%%`KFXo$A"0n40"i"gp1/!gDF(eeBs$2qbLN1b[0;dB7d7VGh4ASH
%"a_6GF"776$6hG5?SC(ng$rnIiFZ1nnCQ?qV936P5omac<><8%GXHac']-='<Ql$hHCWhjs)=q1^4K!slCT16VW'57Pse_2oPG0Z
%TE6fR'h*'I?;R41V=u9P'h\[`*f'K1r,MhH3/ZW,g^\RkX`pq[a;326Moi8!BPZ+J<.Jpe>f!+X6$Zq(eu,ZR9)@dCjD[0S@+l!R
%m:9>T4Y>U"IBZju:Q'Ud'mPZPq:OAC]gN[N2ZG8c-%KViWLn^C4g!Yj'k+"1Ml\\'5E,0F=<OOBN2,A>%]p,]';KZ^KWS^?T[;`k
%?Aqb4%PGR$7p55H=;kbaJhY=s1ghiRQq%=8i/FG4bp^7A*+_]3!t%1$ml7/:joF+bkfXeV>n=T,WuS!:4V!p1O%^R=).QQ's5!`$
%!Vih!ir`Q?dgD]D>.Qo>-"QmYB(NY6JM0mE&X3C;;/lc;ed:Gp;*&%#<j=ndk](ppQM4()'7!B>pIO-c5t/tD,f,VU-d-i\n!Tiq
%A,#t[nM=8MLYrr!B5jum1UuGA-!q$DK6K_00DOJ,\7nMgDXTpE#V&=\'RQA,"5"+3Z%lQY'iAS\iSYJP%pXMSWJ@7IlQs,!k2@'c
%17uBTA`ieP&R;n&bkHhWARUtp$Z-&Qc1cqX7:ZiBH1jr9LXlb&I=b<Wc7n.R*"==g35&CB&rGNZ>iA6gNl"Sd(=Z-S`f!Z]T*m,.
%";c:q#tF0m_NRMN)GoX;GX$V'iu,#]*Lq^W#B+a?CVd[Kjss\0lUCe@Y6[Ic^c3gH?l-JL4>@33>M(Ff#mrgjn&?iS#VNrtMV/%f
%],sdQ`G?,S10-,0E9P8@9Yi-Z_^_PS1Q^s'bi#X66/c_=_5[/D\\9XD4Om_L$`WW%G;ossm>/,%JjXL2pUUO'YeGh9@a\,/,*13b
%0hipFb<&H4[0TJ?"c(Pp/V6g=1m&+T_)P.7(o;GH-;oj.PW__TS?\)'JkIf#@g6SIA%&%:a)&BoAZTCAi"1k5R"A1]a)t);BL(8:
%R%_2kS?S:9_'QV`mkkDMH'd2Vn/.kW&j[gO]IJfs&<)AN#tF0-$!Y@U6(u?Xh;ceC0,:"/r<^ri/OIq'TcGVaVM/4WTo;QH($pN2
%PUArZI1'8uE8(bISDN"pg#9dE$800^34;albWbAK>D`BF;jOo4.tUS=(e;O[*.euk-V!?K$!Y@m6(u?`^$qUU&R9nqm)]W!o:ET1
%<."1f:P=sWMjt+a]ijgG'7A5RJN\;$cTjgP_g+3NkM\hBiC)kf0V#UnOL=[PcE$'>U>CUbM,-+gZ<"5oOO2s.*a_'=Qr=X6jZL=_
%"lWW?LT-#I/Zon8YJ27ejahDN>eqS.6$Zq(h?1DtTH"ChoJjNsUL1?[95qn"c29u8p7AKq1V^^VTVBi;Ohi2#@D?D19(*Yp2:Bm&
%6BB$24H+H$#FFA+mG'5/m9KO7Z>Shl+fJkWF##]X(Mr7mU\%ltSWf'p'R?5*4YMJEi"R.o/;/[)(/'sVfKeLa8;JWZS\Ji@63W/&
%"m(S<Gi-A=0i(X0EI'PjTL<`*`X/RZTa@Y/E<<./&B^Aj;SaLn-_LU;oSsS]b0bb9_ZWpo^+^^^95sciK2W(6^+^/YoiVQCH/KJc
%7)Z'^qNt[ljbZi\?c$E[KO:*SO44"!#th_bGAmma:;7h(!\VCLM'6/sa,I=V8Ot3?Nf#>HoI_OfN5GG>[7Y^26AO#MDR]C=_50*-
%P&EmBQ[E"60DRM4K^ubUX+E]XJ0eR=.'6!AndY5;21(kMX*)B_]M)8?.m=^.MGG+npf@TlZ>mk,i"2FKMVjB@H_Dt(&eoX3hQsJT
%9*D0NN17A\O2'\?VX*iXEoTO.\=#uXK_::n\MfTu52eWaAhN1X+PE6p6@0jn(OSYjl&C#*[fpH]2malH[G]d`L_P+4<<\07!"6Mm
%;-K$,_,pFM8Eb"RYEncPH4)beQLdeq1Eg>QGp^4mS/9@o60FMpd,As#:5(%X4#loA';^ucEZ36XX4Q&cD&3K/RX:^(Gld#`;)hpo
%<[gO0k\rT'h6:69\F]uqO"]@WO"VR;j'TG)jc'"[)'"5kcGsimBg(C%I)2qtlu@?t7N8gh95qm/XsBd%CL;ZnD-XmdTHYS^j(?Jo
%jG?Ynce-6/56D34%d3NG/SlUjp!sebY_@Dm(:JbV?AF,N*K,_qNc4[s4SN%K$0POD.WuF;3h4Kj0fujsbB^nV\JgF[\X*;`SZDP>
%Z%tA>&Z4&9PUArb4lG[sF>TZ;j7J@Aa=e95JhrEjCGnYa2;tM,'g\d/N*9e3#Ym?oh2Kd/`_gNJ!AJfchIAXO)V:TLE!VKEU">pr
%E>\";f)iEbJ#`:pZ%tA>&QXlLPUFIfIHt(5:-`9De+r=HWc/0?#VP9njQO7`mWP!MUjW;7Sqta<&aBM=J,=/tJj]$Zo#)rY04CoK
%-ReUH]c4#4Ol#Da8&D>HX,c_c<Q>k@,\,A%"c$DhFVKe_HGZcDWZsSFc;.s#;$<fR'3?47@B;MuTUq^4#Hg+FLpW2CNWR?:UTf4,
%WhXUaTuc9dDQGmVi:;o/N\*SuNq(%f`tgrhA(=E[LL=A0'TCI%Xu\%&"3OqmN+]HeSga%6o6s.RmrXG3m)O`/W*n[l#)?SK79hN=
%mtpV,#RW^)n(/N@0H2Zs95oU<p_KRVpisL9?IVbM#cdCL\-`_^"_QcuU\%l$2I8E/:ulVBGPl7n_'umrH`Le+MpSfDZ05hIM]e6=
%5HKH0Y^X"g7cAb'>K%RJTuZC\E,Sb[Qf%kWg#tQmAg8@j*Z_t;/L&V(^>U(%#^*s2SHnB'.R+"A*DYeNGdd)!d[Td[mZR*V^CEG/
%cZU*2.N6WV)'"5A52/#koUbU+/fbBLoJjLmj_XM%K2ZadBJ=\7QM4#.$[FCkpHjH^H*;ts/Sl2dN]Il"SDHEtY7SP3h8B5LGb'$g
%U\75kX2jPaF:EB`D?gmrK(4M:_'m!DfO(<l%4Lj.^#R]o^Jo.Y:9^oKatj1/OpLr"U-(nQ5R$$+U4PaOKRG_0;0l$BY=:Mj:rX;3
%S+g<l4,Vr/N9cKU_QCJkFiP7`-t>B9JjV5p3snIA*S2<sUCK^6VfuY,;$<fTJEr4M)!d2:i4<D,\F(ah_L'(@7fh_.;0WV]m\h*7
%.!sc)"rp-_WSeC/1%-8(Gn0rI*WeV2,O[BI":*0JAsD-sjW,]Lf]2U1NSaRC0#;e\HL0gd6]\YtO"Qp?IY>:ab!p;U#)D,q^%oo$
%^#M]Mb0b`+O2H=_;\d&HE!h%_TWO--dFQ!_d+/@_9LhLHG<E<'5^?fQhRB^h%$-'PO41^\.Y\3]ms$<ON5hh61#f/L/V6g=W>I*E
%"QQHuJl-j7;_aN3!G.m\&S!_FZobc#BC+$cAFsPFJf\dIQ^(!->/qG32j,OPkr`I:<r*\)k\rLW`[POE3;"U\jX`m]Pd;4sPd;.A
%X;e(-WSe>HVjn&_iB?-KB?F),,*13bEGDN[0(0kMp10]Ig4F:Q-YbW(EUTmb&FAn(:WBB96J*cBRuc7_oU_$i>fuhD8dV,/.2bpk
%p&_jT_Bmuj.O%VfKZDMqo#)ri-[`d&7fs)]%e'%apQl4^_<pH-h6T]'kh3<XIGM5$"eg*-H8!nkfhe7WL%d08(8J@gg#M_mH1.[;
%0(0kTNlLF1mq<*/]q[=B/lWDpehcahgdn%3UiR&n8!T]tKFXo$X&#(]:RA%VQ`WGWVES:_5$bVnFIDuIRJM$YlI0>0dq.gnOiQ_B
%39Ns<QXDr=X@6e;/nR6/X@3]C39Ns=LL<7-9JB*-Gg;^t1na2Vc=2-ASRuPZE!h%_@"u+[`XM5b#W&iA-M`QS:Tf:Tn:pMP.(jJ,
%X-b+[oJjNSUSZ_],rf@,=+\iJ[9)U8935dd=H!iW$4al[aqLQB*jMQ*NWp2DSDK/YN[Y,:+78+>H5okh0oieNV,u]EJqlOJLf5$s
%n?JZL0hUmPa"c#iJ3o=7Hc>Z?0,:"/l[dpY@<o';SVDd9(f@9j&7!W[Aea+2YZ6VtGKAh:*fMtt*F.GaX?e`o>(^X-H4@0R!g5@j
%+D#NUFgqXd)5VHdCQQuj5XL7T\[D9;C%\mnl>*e.?Rr7m<a'pRf'7%Ie^mEoYLQg)Xgn42C%[`2G3A*Dk359Ql(r[:C<b4-R\uoT
%)q!C6&8?KEJF^W,XlDO7EcaUPa6DEIV\?li\4(KYT+5A&/fcoIQO]O`'+lTAi]Nc^o#0`\7@^8SNWt_2:R;Q=-0n2-Qf&"[g"3Qn
%Ha><&HF'TAW=MON4-qEVoL@Z+'n"GTK&3U"1Q[Q^c7\;1b'Km`<Q]WmZ<esFR@pjNoh;>7PkAKs]i*E36(u?XI4sRfmrC'I(OVhD
%FA$X!_,A]VeQ5PU(."mOT/A+N"`GebN5GH-[Yd(s6BBTB1p6U0icY*T^_M>'j,-&'>k'2%"@Y^^a&1GXo#)oH8%diXT7MY*VfUY^
%ntgq2Dh3@b3lO1$>=jQuI%j=SakHKNBR>D_o#)ri([/me3[0);%e%^<6D=`\_<uuc6BX.=OP#0]XcPrCIS\PHdh@.?>sN[E']-='
%<=HX(a<%7'j./sX>i,"AcPE3[-HY4.T.PXk`]KeB3!A8'T7Tpda*0_4UB+r@o6L9*5MK99g'Jl"-1L6L\6h"7p(-W'fT-ARJZDU/
%9jj9s!ro]id'dFSA>+N-!P!HX'l3cSNT-)Cmn-7!/<g,<?2Zk!Wmj4IY,mZ)<*9$AdC4lds*\nM5'+ApA.=Y98$=WkQaBcMCC4Kg
%WL-,S6E%tEI9rUs7nT6)Z(\:jmf2S00'Vd'B7Yp$O6ati]?GgK#;GgC.sCTk-\t9em;e&OAK5*NULA7l/QWfqZ)Q.F0B6pdI[=.<
%>lVt70'!S`!EZJ4@RK9CnOOt=/j6O;!#0N4bXT<.I>$@t#IljDi4H=D!(#G3hBS!BHUc"-R3(eA9dS!f\3$OF$O'fFZe&90Q.6J7
%$?Q4KnFht+^G#$-^EgIM6k'_C8$=Wk6e\L-22/9D<6QOh+_5,n%a+'TDFeh12RKlo&uWB(lRoE_?QIlgg+*0/"2^dgoeGq9nOU#m
%/hnRr*Ae1F1lPbYF578lfJFL-`&&(C0!P-L.(]g\+U_ibS?0,-SRRoX80t?43O=\6E;]lb)HPTi1YV&K9S'AtiH3L\RfC+#gM>X9
%@1o;hLl16Mlc1!-9A6E722-"Y<6QOh+_5,nG%E+0f:PE-CaZX5HOt)1Gb+LWs8<Xs:W50iCbg/k04;8I9frC2n%,+_-[lp#fG#"l
%__=Q/(ri3jL+sfAi.mPU?2B/%(iCPV0C"=dFDtZ]UH)0>WtNkEN_PM@ImeXqW4Tt\;#1F-GG0UB"h8l\'t\!/'TZ51ld@RudR?MH
%=2XC48R=UiGAO4J8&6i#rP3[V0^Qj&b<dSnSA<ZjXk4q@Tm3BeB"+@7a9)d\)J0@Aq0-YTbja\3CXW"=Den%kae,eaT8_WIJfaSS
%nOOtMApEl>(DdFil=TY@5;Oe6mat?]IIg\(/0DL>`6/%<_eld_a:8KV,1].7&<B66kn5eqS:H0NL=(OtN#A$1"$ABFa(Im8nBAsK
%6TAo0GN=qLiL)DLKY%61N32tD#f\Z1Ib%_kbKsMVUta[p\BSl'^<8Dn7g+\((<Y8U1$UZ@'+(!s\%0r'Kn58qd;n.fE^ketEkieQ
%<uaWj!e\R!'ZBpuaVnUo\EeK9Z/'73,IV_R"E6)si=Op?`hkm(ND=KKk`c`!ST5pua\@>F>p<'XF>fC<lCcNR0PDV2_e_Di!#hCK
%Rk!/ME!gM0m1N&XqK4jP=)El8)C>MeX!M5Ab_>&=8sin1At]V]kc1+hF$U%Q'R";kCstaKR]Ya*0u72$6ZpW=JM7=J[9=d*A8W*B
%<86cj1CH3.6!(tj22MZP=)=nL?;2*BAW==?;D;EugP#^G"Q4%&7-p)I:cqV^ZV/UqPQ1km%C>Gc&2:KHZ)P%CD?5%/[["`;A'8&Y
%8bQF:,>&0?<_:4^PnV(\Og)FHbX*%0cr7E"*hJ/7+uj,AL`/gVLZ=M=$`]omH(5"Zrh;]]$9#..a:k*\e[ur".l/1Nh+cK=$th"D
%_0G;]!M9rnA?UdlLgVkC71i"#*F-0J0J8i0H[U3bSo&$k;[QTFW@HL;=$gu]75fMIG-%3F!m8;;lE/tU3e0??8[D@F.TI&ch$r!!
%R%.6\GArF&k;`Ued-5_AV;lAb$!A!)$0hZ5;/lam]c5',TeO3'X^W?6d,B'fNI:3QOrGP$D8hS,I<s!/km>EMq3Jjr<p+hY8_X::
%/^8AWF>mK89DPE995K>pq.qFBA%UNJWaTePL_RD=<5C1Gl,HlQ8_Y,OB4[tC),GkH]:U&QfD,nO[J^YWjf%afpRFaBMdcj`G!m6%
%qU$aR4:qq`>LtDQ%:)NcE'!aKRhW^#gd?S^29b%iAIIcEjf=#,:ac#0<3Y\2d&Rk6d^b-^V)$P_d,B)<GRd=KQeVkQ:b>#_:hO"Y
%<:`rLr0"XA$9UPKJmE;F\L9`lSO]',;MI4F3h4K&rKn8enf:tU?]U2JmdaFiQ.\K1pJ`WB==0sTN2,A>G.e:*';9N^FKK!eOjN'+
%rXo?Di"_\Y?iQfi_5BM:(u4WR3;A.1fom46:V@Yr0K]mQY?T7$F=IuD1k"BUm["85Y?k"?ZiJ?dSDNLeN>=c%A'IpU]2kgW2[#\Y
%m.L"*1=L6%am7,-[]*U`\AT/!`I0XJEM'KNpG`p%&a:5=5Q]%@Tep)[(&.Jc+G[j[3-ZWF"K1$u'R<aTXumNRJnd'HYl`:432L!,
%-#Oi$FMd_a2+pLs(Cn!FY(P,+ftlc2?uI?9UUS\&i)FV@3'qXTDaalB>S"N59dac_m&`f?*=2U<hrC)(m<]#'g/i?AWb6Lr]?D%R
%g+fb1=<a[HN2,A>G.e:*';9N^FKK!UOjN'/Nmlon._+P?\B[GrY4IRIkar*2Z>lGYi)X'h+6,DcGb%pS0dc^clg*Y>m<OG`d+@1E
%e;>V:[Gla5X`sgSc)urNV/^!i+;._aRT7FC'PBS:@`29$'j:Y`X>?A$i'Kd=l'6uZH@YOq&g0MH@=Zm_73m:N=Dn`d3XW!A?Totn
%#`@OQ=^Xh*7;,EbN#<B7>6LWT0@m+1=.<W,:_67N"dT@XToOd9L\$1_k?f\uje`-Wl<Ar(l5PYQXD\]$g(C54WgS$]jG?\mhmuiC
%R/(BMds7U5G_VOMJG4"e@tf7h3P:+\1^/a(/J77d*T"\t89t_i%rVgr-!9n\b5KS"m;rMuaP:+M<Z+ZEbSK^ep_T4S'F?5jj&JqZ
%]@qu"M,:ci\lQ(p8Eb"Pc_iLtg;,3s+#p:CLG>fDMn=:7Q"Y]6N)>TBG.eV\<LZfEhmujn'9L;oFRG-Yn)/6S1$@4-3H+@Kl^[.%
%TM?`p1>)7\bkWTMc9:;p)X9lWE&op9m$nr;m$ns%m$ub]ZZBa2[*o'^A;kn8YcEJ;4+^5]L93P[9ZOCsn!r(rKk9P'AaG+^Wu%),
%(RD$:QE=Iq`a2ce?<FX^@2XE#)1,fQDR_=UQnR10.CM4+0.P8705<-tlhR8q'%CX>(WkU3G9_AW'ZRVb<Ql[#3h4Jos&2!d_'M&*
%m?'!)MJO:62Ft7^+pB)/'j%W_>tCOmV=?!MPtD=8rhaULSubaE>\K_1=S$'Wk/dtTP8.l)XPc3DTm<qQc'&m2-S+t.+G[j[`V/st
%"fL.%@Z+P'UID?k[cjP3e;d)_(#%W+jG?\mhmuiCHo@)(l+HDr`OgL&Qh0p6Z5QqS0/DQn?=!R\[4$22e-V)O_$YA!$cs'UFM;k!
%@NLZYiH/t^SlM4BX#,0(XkC$QZY-Y/iO!b4S@Eu4+F,/qc>!!Rip7OCm*8lulPrtd7<$AN\B<J7;Q!O?MacgA&6(Ab3G!0qeN'hQ
%.d,A?K$)I5jpa>@cAeEb#gQM(%d^a>Sr\8k\"LI]?^(\)gik7#ojZ6A&:.1aHZ$u&8$[JZmRT=hYX1utK"2)07%A%+U$JXS;()DQ
%m5brTY&Rlp+Hg%EbV]Y6*@2SE%IW.U`t!?<m%B]c%XrckBWlo"TCDj4_(Uljq@0`iiIOPrUmK.4r>+'p]gh-Z>_2ZJ_("r.2p#6R
%HK+@GGKF"gJW.([<:J=^_Y[kq:09^=NA>(Biu%)4Qg;F_.hQ#q"$E^@l1o&DK)033GS/*gdmF;N?4Tg^5q%]tGZlO`*=3`]kOd3Q
%$8&7Pg6Fba]dn<dMcVL)@Hc5l&aC;)jf:fq^#J?Z_Epbt?GLUKV"LC/cHm1`%Vupsl7B4)gRY3i(4[ikBiH"EY&Ifo+HepTRTX<.
%\59ugoP*qW7<"-+f]-der$6=8j(u"$l83gW.QGtqPK4V):8)G<_e0lJSBgZli\)$Oc98nblo`UN3p6!LB'0HBnJnA4G.eCCB\nEj
%\]8o_l.'J5rTVKc^7"ShJkL!9&Ts#YLt]83h:7>8d:Nl$m>,_kDaGRl,*^A/N2W#8Nb#eLe=>""aBpF,jApM/\S=7/?6oA]oa2g<
%0qME$37[;leY\P=.m0s'-#.T^>mDEHMr5<H!nQDr(8:9*CM[`Jh'*-dG^QQD?*AnNZlg(&\#r^^+;-`*cBC!"fYJjm_?co*BS=c8
%oE_3\&1VX[?Nm?64i.b`dWrbCL,@DBd,B),XmDA]0"D_Op%FetC=cfYB\,C"/Vo4)%^Yp3aV1@i?Emf1pk0cF_g*qZeqr=L)qGM-
%Bdjl\lWh5rFY;Ut3Y;tLAan+eE+b^a'[F1j<Ql\N]sH"<D"L>DE66AW.r?42W)q\:Uoo'@+VIa2HDNCLod9$jDF3SMA$8iMl:C,X
%301Rrq+Cmhgj%b**Y79p%i+R):_@G4S>rOVcAgnA:cR@D<\`6PbmpXmCi@$eE&m[Rg`+PnCX_!_F9L\6k;(]_3caX?kFS2R>=f=&
%F*pLC9*L[;M"g`<IPp!F(JBK)#bd4S:'J,`%$pZPhmujnLe,Ni@$gK%ql`D,aXsasb/MU%Y?Fci^N)%@;W8-_.bNip^&L^O8`'^F
%?R\&W#lP4iajJa^L8NDNh_=at-]L:DFoji#Hpom96"A4]\hn:5%n+;#<jN,nNT.%EB8SP>S=q5_i7PC')h>3V[C\^$oDmocm(#Jh
%TuXG$,a(=nN]jk*NY8J!B/920M;T#'qrq?@p=$R*qrq8eToAql.bN;2IQBbC?/pApAZ-j,qrq@c1^c?395;FKckdPEK"aQta&NeL
%@Hb?6&XjX2NiPSo]iLX,h%i%D[:V]\m@[[W.59cl3gXOcS]_8`K'!/CBEt(6>m`NF#9r+_isn+YTqb^OkT%9FrhY3>A:SZrghEuM
%GSjLo:I*bR=3=q&l=!r.l(mD@j%=\XT&!,mq%p_N.=t3/eur/dS:8lOPqAq@YAC9G'S"L<O"/f4:*<>Sde+<^8nGq,GJeP`pcpPG
%>[f3'.Fo\bVO5O1%M`akKIVB%QO7oL"V):]K[P+!UW&Ik$],iukDiUn7<$E:8&WSMp64R2Y;m,`(WGm_0+efA$bTsqO?=*^k?HOf
%jq%h>:?Ra`Nf)bX)dqj-]09&P3PRahY?J8aa3od";\di3:P%S`:c],kF&X%B8Eb"RVc0WsBM$0aX'D?NX',e#<$_SSmF`5JXq=I5
%>"$dhSmNcpF;4$D.p(u"NYRua/"Y5K$6@XT9#2lTd78>\^R_AMT.q;&"-N(Un[o??iBjNpM&ia&/'jJ]Sh$p*=)6p.d`O@_<cQ]N
%%u:$K"Hk-!l'bYE/$;!u_s*[mSh$m)='BmP]^f;P?HEp_Sh%!,=2"1;0g$"=YI*k*ou_?`<hB7E54'MaMVo'!,1ck2_FE?m[Kq8Y
%f$sgu+sJ%c?rr9Te-a([>3HkjAZ-cW_s)OgGcRC=i,\6om*m5[bSK47J\%SC,:EeUUZ)W(]aMpqTlf^2'Vu4\,]l#:[nSjCHj,kl
%%'r2NZH?u,W?48SMC!jH^c3gH@+W#P4:t3K).nGaToOd9Vt4mX]6:o?9C=dt?!&SgbSDsoMcW+S6=jP0%b-'<$cs'UFM;k!@MP$P
%iGa6,?H!So.JGt%a,7=%oAin6IieR;8"pil$Rd2o<E*aP!m)+LE5$Is@LeOIiH-.;GEK<)'jPcHs2;4IjEI"D`:jd#Mdh^>*&.BH
%J*Rj9H5D_l6Krm^>/^OeTu6-m3^bWOo+bMN';"]?VHmdABkQ1e,`>*CMSM2$Y$fknO?=+Ik6Xr\Q%h=43ZQH$phHOD^4T@e)]rH%
%QKg*/L#@5kr[\>_,>M6D_6+SM<YL/'q:7E]8OF:,3LnC8pN<k7'jT%th?Da;X2rjH55QR^3C7aO3%D(=Qb/>A&PD(^eg_CG#lRKT
%j5ZlfpBiO\WIJeb3/Y>lee.T@%ZM6d!YG@cJ*7X6Ehe*>6-r3X9@YMX&.&4Dhqg>f<<SZBMX@u2NbS0h@(T/Q4hS1,_W.3pJ`MYa
%3j72=H[J/A_s&.Ffe4)1EkTA6rUh8fY58meobT8J*CdXnK3dr&mJ8.DcF9rV%%e*lE&s'"[I,8GU$WfjqHEX0\CTDX"*L_m:Is?P
%en))/%</Ff3pA`c[4^ig+S7U@(X%"G[=s!@bBHG5e67+WVGk;`2l#hXq(Ca?+;"Ag^;Kab\K,u[8HbsF=!XAX`kdF?QWZX]6+n)g
%qhe33,)qN=V0=/0+r&>3Y#XgV,]l#:@jClIK$/GTN!F93r"[^!DhgXZOu"jGK3bX8N,LcA4(-&14s%f&oPM75.tUE2mN5:ANf<^R
%>O_J7ZRCRskDG'P%e&Qf,Ys*Aq9l[.AONi]ch6[8n_o#tb76/8D0qageD%MCZcL_F[`W0(>nfUT5WC6r@$eKe4:t3G;q<KGm9Dp;
%Du.I#p.GReg/eE[o]V5a]ksuM=*ct8kqoPb)=2Aa>j7_Qf\WW/0mksB^Zdft4nTh#C(p<j@l/MsmIUY>;f=$O!)tXul8%#b#4/=-
%6KpU@:L+n(8Eb"P:P[=rhn^VJ6;ROpi1>6GfMd8g&?-L0FW'Od$hi(/Tep)LV_7@A5ick[2Vudq_5T=Qm'.nt%:+JNUJO,)KQ$(3
%Lf5%25BA&p+r&&+Y#W[jP5U-<V_\mu<,fs=fW(iW[-Fh;[-@rFk!_[!LH0=)jG?\oO4^Jmq$l\03\Nr5Ad=[XJj#K:pAstq?:!ek
%UdS&$keY>Jf:0#MZO*K"JisrbW$A"RiB/(:jq5EYpH%ZWa`]gMhrdSugH+WoTeH$`lOuDf^X9B<4OFJm>Lb9jiBocpDu012T<(Ak
%^4XW'lW2,BFI(`8Z\>dcTc0K`PFtZY*#2PZlWm&Q#c7-hCDHGsKFXo$CXt)dXBVQ)[qs=#AX[bb2!^I0=gs?rDOG+mZ8Ls6C"=lr
%X;a/>cAU4s/(AddfQYM>h^qda/Q:OY>CEu>ICDmu[qt`n1A9N2p>*gIoR4DT#;ZrR37YGX"ne,+k]6)H9?20sK\W!HGS03@`ddk=
%]n0PY#s5*iTeO3'X^Vd&d,B),HYgDqE64*l\s6[1DV*PRZ?7[Bppu8Pj)ETF#4b/0I7J,08jje3&(0K#p[<NFh^c4dk5OUAi@+(K
%>=e$$+r/'@5t,0$%T]h">tCOmV=UO!(!DDd%YsZLjn])QRu6-g>E<,KlHd]q]?D$gJ!H]'lYZ*BL>!6;.^!12]9#,e$KkXF.Wtk+
%3LnBiZ"gk&bB^m'e+Un1=uEE'=&%GC&-1gO<Dse%H9JF"DF3SMi2Wb5e</,:FH4W4QO5@U);=bPNHVu^CtEGHUh$ju1>(\8CtCV>
%1nLCHYP<VjJ,bPT.\</M&KGOm(COb9>e:Usj-;B+.HAt$Gf;dFaLEAJ`eCQqm*nSmE&opAKb<NI(nlG%,"h$Yg\#N6_BR0$paqG4
%I1%:X[kK_%-T^MH6b=E/@i4QNqJHZqeV!<*>\^&5Sj3ZCFmWNsg>lR;^J5oI!/.-,$?irfaV1@)5%Uio$%^I\n9l3<2\B;0U$'u.
%FGGVRHYtEe8B*6ZJmC#&g]X>C%6ZX]k5liWe$nMn-P;k`gJY_RI1#?TpGi$ac4af^=p1NoSdeT6Y4mV&-UB/>DdBE27jN19SRW?1
%V1M?XKT*BY;GbBfnII\@m>Dd2'TA!o@$_fdj-rj`O-oHj5fP&0nr56fQO5@Q"l&[UE17p&Bb7:=D\7ZFgr?@%f:0$>hh9F&_)D7n
%Lh&V8Re*s7:X40'b&-$\d*CH]35<1,Tq&`ITFSlM$sn6=Os`TTI-XtT*$V)okrekn"_OApE62sdU!Fu9q-@S?Gs,K(gr7ul&]t.7
%^\tWJ_6.u*Gp8KuQ`a=>+;-`*cAeEb#VN[7F)(fjb8p<3=p0tHgJ.pa>jT!-6>7EcDTY]ZqErTR><Oo@4Z?/"2fJ?DK#=0aMr;!\
%giY+!ohs,\><Oo@4ZAEb2f^mK@l+"YK$1][N&N*+\9F>1L'gJsaLDZ@n]i=hHkT-4*]!0R!C?^^De%?m"IE;^F__SXFUK7'h1E[M
%2\C&0U7*SG8=g*`EL_/ML,tJ\lP=m0R8so)E\#A@LA%#BS7ugkHD\)=&1[:qV[?24HDX[R9'6q$>*YeAKFWe/G%^sFjqY]]pD))f
%GsaQ92fB)hh7S^`TY.PA<Wt.i)p&beE5$Is@OE@n_s.*LhB)u]cZX7fDb'Z&-X-#ObSK4245D&>6?5>9eJ#bOG63&aPJ3B`<@f7(
%qO>3+pOG>5I("Z#D>I9'.IZh/A<kh7?G4FEe^"m8.K\Y/\:S#T6LmMmSM+9L=@OQX31S%,\CT\k(MMQ0!7uP)Y4[\(H73mi']WA`
%_618q[9ei.II!?@UnJ0Q*)>[W=%u,&3Hq]B)WJl>VCe`J9cG`P*P@9/JmIgOX/:JF3d7fCWXO"qF?#g1h`_^i,r`\5H&L$AH&)K%
%b$,"BN,P>f@+Q?*V-FR(k7Lb;Q(a4KJ,:cbgeIaDJkL!tEI%Fb#*$f5/2/]S%48pFV%IZ"LHtDu.%M.oQcF\K`d[I?4?7j49*D0J
%jPYHfOA:6HWs/1n=<ZY(>p:J_-[:PA+F,.FcF9rVbTRT[SBd,-INl;_ia0B]N4jZlW-1E`>!t.>qPdkh$[_gTSb.ngrKNi_AFK1!
%.3$lbb'8KO,&jZ^A6eFLijG@%5t0g;Qbfg`ijHK,V=TYt\hqp!d,Ar8%rM1>H\m,mqP$nX?m+<dU'Rbb9<o:.d"!LkipNgQJkK=+
%I[1gcYPM/m1kU]D?Re$8Ac)gPMsuh7m9@q)c:k"bC^^>EYY.-!aLMV2hi&Z9<JEPtYoImHO2_01#FF5%"-=L]!D)oD!23[C_:j2I
%E.`m1njFms7i[%M6QHIR:?U.EFRJ(M>B%sBNan_JB?iL#Ug54]g3O?MK8)Y^6n"TB*-=e?*=3_rk65H7MOY;mk:,V!\%q*2%_QqB
%]_@>u^#n4=U0Z;BE+*P2Y7b:G5q8L=N.#sq\5_G$]MOQ8GqB:bb_#`_6q"V>I<bn9';>&VqsouFNb%V%$cVCD($]EHl=Uj4T2hh^
%<N)NiXF=3dITE.k<jDL(L&+pUqcW!!38_=MKQF[o@E>RTO!2RR$;u]:a)LPM<8i6/.QI+dI11^(3j5cK5oI7qaPh7/NS3gdE=0=(
%S.2[IQjnNK@5bb=ec8OE0cM`t?*D0!n4b=$DdBE27jN19SO;R<%<pS&$+eN9=2[EeL-[b%lCimW,P_>m<P8O%[LtK%EboP#Mq\7=
%G^P&J/l`(805(qY^>ME[`tu)g6=i>U5QupB35.Wh9"tOi02RBa&j#C)@lke6Dd<qpEoV/VXkP%Alc.t8>IR$4b.*^9YiulnSd<$.
%GJ^J_%!<h;31V!O/J26.Z)8<IUSeh;ltNj565_p<($p7OV^2VFF6mTi6QO;:BuS!BE$p61/oJ1WLU#g@"ndV^`f![5L-$.:H?$in
%+I(/k_jrR4OmEO$nME/ZM;XVFieG&\0s5]TE7Z:Y[2U(Q<3Y]-%<mD#3'VE#SMG:1Oi-EG=O%"/pZ1*Kc;05@:MMX[j1\I.Y1JeW
%D`RRQ4<P7tSB_dD!f>iuRpZjW[SL5f,Z"m68YF(]:k:!*<3Y\J0F9!1V=OhR5funn6ANJSFn,PqeO4Au`K+`?#X-_tFoF^)5>WN%
%_G;$am!9%%eHDRfNh=iuL+X`l31V!A9ShVklgTUbk_p<)U;Ico=p1OX(FE+clbsYe"JKf&n:_0[W$BtK9LOY//70m:j9A`9Bb=Ou
%Be4R--XPOY1mI/l()<?coqIHhPg0@^l6o"?a]LsBS/Zl9&R9@]&(`"Q[6*`m[0T):I5hu.HEdu.#c2V/_^Rqnkmr2%Ii9o/5I"A^
%-an!n0Ntu07"fI:>XbS3Oj5Ja9,ktdTl@_gX^WY%Tu6+7>M:_F>g<F3pQfl]c98<FLkp$<*U<=Ygfr&+3QJ$#3LnAN^[N_)95[op
%>R!LR(LCVKfS+Y1[7(WUnf+MWf]=_2:P@0kPdO+p"@@UUG;tSoHj?S'E8Y"C%c]29(%60=%>Hh03Yh"-/)KBW:`/*$<j<="aPh6$
%.kG$W\=>W_dV46=Usjp18Z+")Uk@9$<,fu[90.Z"qKB*='Cd%Jp,@E[!m?o;0!u:geRAeHXVQPEBse^B-tAaM$?j*(VUYgCFM;k!
%@M+`]-)A_0iMfcg>]L3GV+,a?`>4VF.Q,B?/I#26WD+,oH8A6k$:=!i^f7<he</,:E),RFI&Z%ggNF%iCHW`Y[GF+FTs+,]f6Xj-
%oa7&L!qJ`,HuE#cfSMl5GnHB]A(alcQZ$-;NR:k:D*dPN;JQl(Rna.!>`ZUYAQtjC'ak:X0AFL6q=lBN>\Z&758@\fj/6'W+$UKM
%,cJf)6)e8DS)F&j5q&::3.=I;l:C,X3)?I"?f/[K2]^OXImpl^h@>^qrUj4pTQ\8QMRo.fOZX3_k?HOfFoi::SBccK4HOV[cFr2L
%D)K\cP9VJg31%Iaf9(,m3VVSs+;-`*c>u):)kL_)\E"trd_&"LR4T\mK?3-f/Ob8K^c3gH@+W#P4:t3K$'$iDL,or.SBd*iUP[ol
%>OdQ9N)-4V+?\$aT'@RFdQ&;?,`k,#9'6q]BW32=rFrX+N<AlBE6?FM^g>7)!IHC(/R69tp-_;.cZ$[k5k7;kS7arl:DrFgp&TM[
%mh:f."&>N%+tsfX[jjol0Gbt[\6(s>cc*u`e-g=PRnu-V3#<eKFX2&gSR8!__jmpgP+1DYK:(+@3m+*!ohboJ7tQW5k\'u3m!A2s
%E.UnIcZ#,"1=VH5@<[1uo0:t/r%G8Rq%`r*s8MgYdQdcpn^%7.T.^+`e]2IWN,*?5?=2%Tj`B]OHAsS6s8((Apt]]bYO-i=kC<KO
%f`82?k<K"Ds(KHBs#St9+fo$nK+&e#AHPle=7#tdZej`G&AE@D^t34jIjG4PaUD$"GQ7(1rTN`Zd[*=Nr!H"C])6l6R4-J_m=0KW
%F#;80MXg*/o`Z%mroFT&Wd,uBcdKL&["c9.(YRZskn#$;R>M1(9Cd^g/\um@+!S\-G0%7]5GU:,>@d`qXblAd2Q$^RF`/T%@D]Kf
%-K+2W:&EM1^Um'LLq8l:Vb)@s?iRg1'_8;IP%;Sq<FBD9^VB_UEkePZ,KZYKoq-2k=m/]N<l,rRHCnqJ2q[m\>?CkP%>hW^jN$Ij
%Y-,*CF_8O/#YI_bhS!1V`Ub9;?^3Y`hc^4De\.7%LC)ic(kJk$?G)#Dj0m+Ls-_(BFYCuMPI>"K8p6Y!Jo;pHc"0\jkSFfe=9^V4
%]T_Vnl/!dKiN;5?DYMbdCJ_:/HV&[JYU)9D#'J;=^>>VYhbCB5N9`F+1U]:qE2n78aU]'!:GW'1.k8W@LSuaqpCdEQjmTYC3f;'Z
%s.nlhU,BU[#9CmVqKFlkWTL<N5>(Z.blHMeL"1Xta.c-oJo2n18]$eQGQhZ1oDT&6-TI]m;38Q&rf#N[g!E^i:4f+7H_4^B]Nf4Z
%:AnrI6nIM-H68ntaXrn8f,["\,IosjMX(XnZObRBT#FPe"%0b+Bmks*D+Y-,HC&*t0Y>qH&/fM+V=e!6Qb2=([]?MaICj3RQ.sI/
%.*1<$J>SdE;Z%s!q_UfZ.H<G/0]L5`,*I"#`K/ESoVO?fQKbMu5^b`-amZ/+m.8.QD^^'S".\Z58at2^mo,1\rG#LL:ZC(O1/$-1
%6pFB!dTnlhD5m%&B!TmU;jb=I>CaZCK7T`QXY`73oesVhg97@u^i+'$)00VkpK>X!]9SqLiV[<9qX+2]5'L4u2]D_q"p<DhPO>=T
%h^9Fq^TOGBcUthnZUEVBqno3_LO"'[7F'X:r:NiGs'rXXSnYeh[K30G)\t9\]TqhRl/&9U@/Es3jsF\YcD2XM\'k1"@7tSu;B5C/
%m!ai`][Xl<m]fQ+5uZ$4.=RNLI>U1JB_!n@,j$nu,U,8C')WU&CqAA8rAY1Je!n=T[nV&Ydk?!A5o7nbVj_fBr@He%6mq=$B/bUK
%lc(]9=O+TJ5=YBf<BMlt[?""/F/3(=m+\UGWo=.2_a:J08UZEYI6&lR)s93$1[Fc]&f,L@R1GFf<$k:MERX^]<2MYccPqP'3uAh"
%h+Hg><,^5WT^=ZjGf(@TL6u0oI?Lh2F\YfW`24VuVWn1&\?C&"aPYa&VOD_Wq^gS#'IW8%'X?"@++=t?$bD\a#74b_g*mXo7]PX\
%S)JOD6Z5!10oK/cG,*=&^ejK#EZ_'&Rof`/^N?(7UE?VK6">_]Q.RGjIp[@ZZ16)spQ%PWRKM?WjlUJ1IW#=WC>MSOUNGs'*:X'^
%Ibb/^>'Q6g"Pl`@K7pS/>RR_5^ES/FU#5R-cbo/7nKkI03i,9]Q1(OGH-5k18*#,AXbip?","irFYE+mPQ(!qBplI7s1EXCcUhIa
%p0^1'?5&s3hb3k<Ui-pmf_mj8F%mbO$tZngrtfp`o[=Fn$e91h\Bgqq^*1>6$kP0p]U/3Pa?HC\icITc*Sm\9r[&6!\XDL@#\UJm
%*ebCLYM^LKB($]4F"N;eKa#NX#!>r!Q08Ip4s[_tFMrHXfun_4`,]`BqDlFMh(RsdFF1L8rB'h6d#l[Oichm$\ba!-5>V,>iIj@t
%/aW61J^BL%0CaOCpppHWFTI0/G4U\$TSO)s<4JW4/e!-1Id[>_T(Ko(?u2Dtc\$RqIj"[RVVT!Q]UJ[Q>?AYQH'\2a]gGp@:M.Qg
%iTdm)KtfnLiDMr-MpQOSg*X2&h7OGn-iVqO!TPZ.5O$S)_jXR)E^3'2QOS>FId[>_T(Ko(JCn6-R8S!3?kZ_lDI*=h'E@L8!+,`O
%I=!U72(hj6Oo`HF/&oT/pCdKOh><EMmT4mqb[0?-h(>WKO5M'+rS;l@WK,lm-[N?M@nqb:(u"Cg?t7`6WIC#u6`Lam,!4u\1?V#!
%.RVY/<'O$eT("E)ZkKDBIl<\c4MGhu^1)>gGUqkdP'ok\O0'C_XUHD>F#2Lq&cV3I3QL0^l#5D,5,bH5!CN?I$uE"k0>UH4]h^BA
%IeC,\Ap6ou6diY)5>8ZVl.-np^AXP+gP<C%miLQ8KVr&!U>X2g;ZAT8L\,r-iTfk)YL_7$,?ZtSs"*D0J%!f*j5$PE35oD0j2l*S
%,[C<!"n3=!5?n8G4g):X&+l17P'6FPGb2EN$K84lK)0*CroX[))Zsb\ER!?.kK<PIs"rhmjB(-JE;F)RRnYr0FYiR6P$U_(GSJ:\
%?PrZ@_R&N/:)KEQ@;N#k0A0.L]h^KDNp@#V!%*sSl!C)+-G:$43RRX-)i`0gm"T-PqO&D3(-5O2Q0u[A5GUEj@lB,\SU%T"9ujPW
%VYjTFh`XT$bKj#!Is4DlL$[^3:ts.F>kMF?T-aDsmR"$jq^V+=ff'k6Z)!l2IZj7oFi@(UB0<pn>at0pMI6;c_`]Ef`iAd]r$:+q
%,STTZ6H7)\h-Lk^+mE=%+!t:lol^Nl9tA6I?`a$7Im&ZJM<@O>%1i1h=;5$9?L"/[r/gnC],LC4r%\p4*Qbm\rb"f,qIAZYOR;6+
%p77f+Sdp@7^HNfN`EUH5OR,?'knpu)43lNA2af4[Ar<3*D!=ZLOkt2mGus4U#nD;0p!T/-aY4*pX5?SBo;(gg:=rVPOuOJ&NeqSh
%+4%n("le(F-]d"i>Neklq"ppOj`Lg1I*`aH#!>r!Qi?0h5,=a0QTHF/X>>]^G+@BPKYP-+3Wn\Al-0>.O$?&s`&5#Qou)W7R.sqb
%<hfTql%ap:p:.P+^>1>,9A7Y/5>Sr\o4mW=If2/h>=k;;TSh$:5)e;j9Rp.3>lmgM]h^iNNiNUqJMF,48bWkt0PO1+[e@8p+)HhU
%H`M^NiSU5.nY,6]<'NtK+k;BqrTXPf?VN";d`k`U97!Eq>,hM;VMJJjaZ@n%56`lD]U.jFa?HDfc8n#Xg6qGrk\"NY4\9mp2q'8b
%YFj_X]A*&&Wj3Ws`f;8OT<$jAo3WX=OD`"N#fQi%]/?u%/SR/mr]G0nIlXK\?@K91]gPu0dnh5%(-Yg7Qi?/>hl!*Na7[Fkc>CE?
%mr\R;`4u1&^qKITJ$PG>$LG.L:bigk5$,LC!Ba0Si<$6lU6Up$ao6k\a*ZbD!qGQhQXX5(ji;^[We6RAN@2&AODsksQbm)PrGX2.
%p-fgCq;!C)UtrZtSgSEB69U<g?N%th?"ZS\'+4SC(-5O2Qi<m3h^?1eiE9g8`r6.2mUlcJ4\bdb43-brrP:1jlI"[CiEd@2A(>qJ
%IZj+dU9/:pV;ST8V#'W<p4l4hGMg%ZWkR4)pW"rP*2h3KY1E;'$_OKW8bq6drK)8>CKgC#LYF"0V;4iEo>K5a?lZ9%K&?%^\\l7A
%net-__SG@"pF_!Z8O$G[`o4@=NM=J$g093VP]lX"Gb4\Srrqmj@J`Rj<r/#)=u+T>2=\6R^%=NbqDS;24g$_i2>.Q6L9u<b&,QaQ
%=8M*2V!8#;5Ipj[?M'V%Z/\1b9Q[Fb0E"[FIRlXC*T>Ss/trOK"5V;KX*C(T%e&28ECZ9Ub+"+[[t?bd3`n*TGkgemMh3J:9)dk8
%+-OrWn67i4])=0@Q?>"Zc]Y^ur]DUtm:_Drp?gZRe2rp.7f;t=N"tfXqDkkU8I!\JI\4D4\k,;1mNqWo_CN0g2pP^FDl6ZpO>-5A
%-Y0<'0>5\oI7UQ^TlPJe<;a-5,*I"'^!@9sl&@YUn'6Sj1-R);*OoCW_9htm^rEC`debHKLBJji=)[D5_jX#*8\1>NB1]9pdm8O@
%oY!Y.&J@S4mY$N6n"oh?Z4BMZe0@$+DWu@5/E^VsT-J0oF]KaSNh>sS?%>qg!JPBgL!GtPV>4iJpW7S8]@gA93^`WPF?c6mI@Be#
%HEr_5k?X-ur^$,A$d>s%h)^K_rVhJ0<UZd]8\,G37bm<RYBu.Bs6^)Z+mN[FT;K<M?$W3Opd+>GgE3Fq))/F6CLCZ&>NpU$mR+Pt
%=5FPKS*1'A-0]$IT-\?RIf5,LC0,nhUYU4cFg$5"<>t%&kZmpi\t>ktORc#=*>dnVJ)=iR)2l(on0]ZgF;m=!g/%7&KSsKciAVI[
%Xqj3&^R+NS8`(ndYfAUjPAbpnr,KXR(Po7&J3Fn*Y)2U+lkO^)I*%:>jakdho"EO;:&,t&`o[uucTUC(DEj'IVgDmEVeo!9`d)KP
%qFNjr5.J99T,1H]egrA"Y'qnoIt@5Zne$4RCMUIqIc/-k[%uMOs7=1\"d!Dg/:;q?`.X86gYe%$&B;_ipX9$dh>;j=Y.d9Amr"7*
%U@+lTES;qrQ'7cQTBrLPW>[It&];E(Wje/i.,BYh,OSWO,7eO!%5LT+c"'%5gQES&"[!j=Jpns#ibOp^BD$l9d?B:1eaFg_H.)Gd
%-gYiDXnFWj[tKLCHcc9q`)lf;(%CG%hk>r7ceE7igp^a/XElPi:XXY^3T>MT2H"^n/Lj-9c#c0CHDNZ,WIB&m`1MMlI%=_3i@Lp]
%cB[iEr+X:a8ImW_)GaiQe>=Hn2j=4ll.YJ8l1c)3o:*D-hs?HM4bha/DWWn>9G4LW/,asKoYUi_f].9^g"<d,7;,9)GnE/7h!Y13
%4`YfWV"5rq>uTOj7T\?6:>0r%Tl]=Baa]cMIHgi9?YSNo\*6H7]sL!tqR\heP_YlifoluQDSC+LL&1`WFKU!Ej\Jg(8@bWUc?/RD
%kWdFVXICYgQLmdpiKXB'(dOFKh)!osS@',AiH+Zr8cK0o+4>&/LEpjlhp-dABM#h(qWE]>qX_hns3WB'G4;ra=229/p9Q*.W:IX_
%5>Cqsot7=k4t5&rb+rNM2q.aWl'6:)4%9.rP<B:&X3JoeR'k;Oo"Ch`:&.!;R3/a*=g<F*S*l&-p4l5CUg)S&EqmJk\6LY*WD+cX
%='=`lq-MLAVYlPJ5\m%`KVJGBRrfqAB%!:t]om8\id>)>hb&2TN59V5O)CHN>kqFK+/f$uFSb]UCFONWD:5\jRn8*qZmEC&B7[KA
%iVSCm]P>>>msq.@ej/E@pQGM4jbKX5C2($Lf%'cu/NT2?1[35K?:g2Id`_H]4'd6-HS'gaj#cTS5$,Lcp?,$)-_@QWqNGCEH>=DB
%-8_OS9E&9@^+KEG**B[G1\fN)+Pr+2\Hm9b>3K5e?M^:kr/ghA2deY))pkH,=Z7#o/87b'2,8pD=2GJ;moA_uh&/a?QEnlJnu\]P
%:AH'tM+1C^)nR(`3gOnEl-GN!8a#K)V>fO>YMu<BqtFG:qd]m>I'.oOl-GQB83::1p#h$Kj&q&$[%"%ESp2j5eG54CGnl8Gj87"U
%<Nl?3/7']4!j$_:&pTT-II[\g>\stZZW^<m4[&@Mdd*KCrIYOC:-Y/DX4NI&+#SCC,B)NriMlOaHp:@$+m0+o/hikQZhY#@2tR#2
%n]RnMB<IapL#f`9fbXK\o)6u0m9d9>CjBlmN!u+.i48QPm/I77&*X>_EOEWN5:2jGlXoFS-2lYjqlF`3(40=GhbAE#2pg'_JMsD0
%:3H#:r)pnGkpG>.Fh%f6p>4M6/F$9IT-h8"?,hT$nst-6s/g[@X_40SrO.:<cd1NKpK#!M-N&sD!<*V?MR_211.0R9Hp:9XnpR*1
%^<=%_^Qn8':TitY2'?^6/9%V90Ak(gI`Q`,QIR'sgd8V/AWdq*DW^h!dOX4SLLn'CF'M&h8p=Ol=J"6lPOCC3SEes(pToPAduD/<
%/K%@/YY]-o<cp(Q:U=@6Y=?D-B^NO!n2r<Ohkphd&D_4.37Y^/n7N%l,i&!nFrmF!gOB"p/2c*_e]ib3bh<]tS<<<JIZF:3GK7;9
%p@"VC9`G#":3CJ$r*dGQ#m]Clr`#hQIX6Xk:j"SQ&$oRK&#4hT)?8+"bcP<6Ch2i?arFNY,cZ;HmE^uF83LFC$Z/(/o34COg!/SB
%c?lBP)sMSG#ESNCh>-k>$D\7JM(mkup:]NOcM9Zu"KcU.4V_l+)8bh'rd!?NpU*4$<9iKS*q$26k%;nnqs/BOao\>:ja2i6R.3Pt
%&c&Il.38Hd(7h/bB%e?iD/&aI[i$[_Fl*Q#oBp%!?m&=Eg-V^[\+9MTj+k9KmSUSU`dVA"A[32ZDJ&iUegopOVV]!NIkXXlESW_B
%C$SR_<ZBsrpKkk3-%)>("MT?]Z"bF(YpL?H\sMl@8R&cYj4X/"CWst/1jbkc]dF&ZT0U5+BFT'`HnXFh1OdD),*2&*cAHILMp7?+
%1ZqQ_?<Ie>f#nS9gV^bTel^)X&X+YOE2n78kmnGVa>j6].kK%$b$m/+h+[X^XB3CT0<^'##Li&`XT$+PA](%g(;ITb:3H"Or)po2
%#tNonFmYh#/K:b%QggnUYCot%iI9&PHn46&NtQX@][>#.pg!c(et4>gOEnbcf@aEib4#-7AN+]13,cuh4H8^*T4C/-X3JiiM:u/A
%SLWMhrR6]Int*@rm>!^dEKeLVaL[f4LKWe8.3FO\oMG;+eb?LEq<7Ro@1AjH>l'`-0K?T9^&1+?q;DY\k_h'rFnqR9MpB[lo*T`0
%F^G0hP<QQBcddEQ!"r)"6t\?o"pJ#@Qi;aXh^>%Xa2KsW<,2nZZ5Kt9AcHc(X3i"jL!"f@_2:pfCMIgd+;tpT#!,buQh6%N59q83
%^\T0r/W[!Fc_N@=h9>`U]IiNm)T%EijF5sLfA4UN`,juD3`WnZpSSlnj;jB5*?sr5K?]R%1[Rue?<N=Yes$!ILb?N&n,T3]CBccK
%]pJA($/ancJZmtFm'5+;nP(oBFYDiPZX+Nqgq9QSK12/,etk;a-oW:6?lS$'pKk_/-2`ko^g68JmZikFhm'GdRgFS3[3[pW7`'X1
%8XIcRYM?mBjs^uHSEes'pqqb,&tXCB,_\+A$LnRn+mN[RT-_2!m>Z5>+5Gc,n&^X@RnD5@h\_n7hb3anPTNe0NOpe0]59L1#+Zq'
%B$MK1]onsHl.PI]iu;,sH_@lHOQZUAOTGo^CYqe^j.,T0NmQf9UQ)93*UC;'pSV/t]Gk@gS:8gt0*eTGIYk*tV1?t(nu\uX:AH't
%M.]HS:G%'GK?fR$1[,FV[\O_[;`"#3pg2C.@8jUh9a3XY^6eGH)*aqP)DPf5`+6,UZ>Sh&C"b*%fm*+^S3NF"0@<l9Bu_Ps(+aj9
%IP:<=PJ0gV@:*.cHUVHtJ(f:)Z?t8SSp/H$etYG4e0P\+glm4P-X6;qKq/cb3+Xd?h0YL(Z\0FKDiCL7hX@\T@$1D0q"?CU]C5'5
%=K&$.oBH#.^9>Ski-#1QdZD\'J^;kb-2fKYIRlS1J+Z=Pgs3?l@.@CBDW^q<hCJP7/OsEf*^?$NY@7)W<Z:6h47k+DWd?DhcP!rf
%3WbA#Cq_0_hib7CHPq=#oLa>i*RZhCk[lJo+4icPNN3gU<PFghLD`<e4Rf5uq0\E"+>t1^\s`,E=^N5fEU`\cR_RaN&')e=Q"r9=
%f*499^6A-.)*ao:OY8cArG$u0P]\eF:X`WA2ce\aQ12Jgqpj]-8^^f<Bk!c7ja1-[R.3Pp&c&.oX&BbmT@ln@2m`K?m?R?0dl$Mb
%q"EKZ37>D9k2?=M#Wn+`37Y^/o4JBeVOW1W"ZCQ^b_$"61)>!_iD5Z_6!H<n]e(5ocVnq(#ArGPMWVV(cu>Gp@\C=,')sNALVu]O
%/SgE(H1gNNc6?aq2\Z3BBtM\e??0gG`j_jW_s,c+\8OIc[:Onfh-9,mR.*JSH1P5:72+Kt#+6Y"B"FT\^![p7O;:UcB"-ino:=Gp
%dCS(-7mdFnSLWMipqr'Z1QKQ.O'gI1mCLnc2O8J=j\N3h3R:1?it$J'B;Ifa"baQY$_8d)9DQJa+&\-?(YuXA9`*GNfF1nAF8e"5
%9=d3DUmLOgQ4!&U]h@aMi\%Th:6f`DrFs7^8OqjFhFpi9fj_9uh+[[oZrb[=c,m=7jSO!R_$-4r+&KIAbCo'4p[\;CkPNIJoXN2t
%QF.:]o!,EGR=Cb#b5@co<N-Kn(o4dVQ7mCo4RM%2^o?b8Zp.4Y+m5G?0t!m!Fq*R:M+u!aDJ&fLdOX5*b'3hN^YPNhcJ=#L)f:+(
%h-9](R.*JW1O#O`hjYNNI)BQp\s`&C=^/nZULOX_5CW)eDhVh.Zhi)Ki+CP*kK<Nsr\Wa6Ua,G3D]lTE2<e5o]qdm;H6k]m8cQU5
%6t%-WTb?;ZVDH#em_+iL9DB[hhRMGm&!TdD(3MFjc]VW!0#gl&:Ho_g#BADP:&po-B#8WV><.2)o0_7-bd[<'X-qcmYkSW82\Z3J
%D+f::Gok7tn#r=<i:Q+hJ8e/Y"\s4/Ac5cK%k00=1U[2BPoEkYbtrO=it&J&#r`W%f#\-R8pI#\7iN$,c*G]qo"BuHbkOB`K`%Yg
%&ZbeFZ5Kt9jns,P/*Vo"7YW!*;A%u@&*pq;T%CM(GclHJnW.a?8A1pT0(kT6pRTRL_JZ7MC"b*1Q$,R`bMcZnO2c)0#"<qj$_D.k
%b5Ck$+#;03dG)Qj2P]#SL9R/8J"!fW5+XkO)lbc8nL=!TMr*`*Kke$-N)#Z,V>XiB%nT:PEKM8$&T4jVZ>M#fC"b*%JYutPqn[Yb
%N''6=:S&U`^o?b8S3K[A533&trUbfA`_8-'FYD\aP@!M!`dD$M5FA%!Ki^KJ0NLCHFK0^Ai=@_na>bB)lYA,#lsJXZ1M#=cq9u]&
%lfmKpR@&IXBM86/"04p41S9,)Ti:&W8Um3!6dcSBX$7[5rV?_f-0o0kT;K;bDB'tUIZY^_4n?ZSSOO(tFK0^AlOPeccT351MerCj
%+hhGBADPH*j0Vn=q6f=Gr!ti..FZ=[/g0FW)<b&q?IBp-r/c$\Ge_i`b.T6fmAHih5#6MO^!Q)Gm6WLUO:Oq/#B*m?ah$pXSLWMh
%qU:BFP)dU"SQkuWes*,PB$%WPoVZD-dPIL@)3VOqkYop=OI^u4oW&CBWdHJa%l8Z*3[0(HLBJY)@^9.BDC5<rg+2E=PFd8C[T(=f
%4_Ie&1*:FFJQ(BO3Id@aIEE/s9/Mh&V`2_HGdPuLUfY.6Om_^k/mL$aTuqp&57DM2HS=4$&q3Aqi,t*.)!`4i)lpQ<mtY&LKND[C
%ID+qFSW"Aoq@m`"GqR+&<!/[@hb*^nN$!)#aQa*GcW#hIP'&SF:Xf=2juMbh#D^*M&lqZ9E_q^sM$>ri]pJA($/ancJ\OSd.=Z].
%m&0_'+!t930pQDu4oBT(pAQqH;V!_8A/Y[q=:A1'?KRk+r/c1f#%IVBqa8C^falE#Gae99dke21'm&U8iC:$6rlXi\QML>kJ5b9.
%l$f#h6b5'<>)QbdrjQEmW13%#Q?;$JquP@aqr,ZcU&)I>]6,%L"uJo]qRu5[:\s#W0Kta=p5qf7m^!0NBfE5IkD@rQ?hpIu/b]-g
%\XI]j8O+I1"ut/HQhk>$hkqKGa(9G0_nmbtl$LP`P@!K3hI!?Kpb$'TYZ#TCnPk?r:6k;0qdIJT#tO&rH/WPB2OblUB$-aC]om9G
%^c7CIq+fA5GZS&M)(As8WdH2YO#)5U](JtS3m/h^AM[oR9`!5F^RKLtJ[,.rh]B#B,O1l^!5_I?(-'jXQh+hrhkloo`s%3m!1Sp9
%h+IIkUfY/'e\ub9CVK(4](bA2,nP2?/9In>0Ad9rIRlFBJ+]9W_9HSu)7".Wr+Xk8l,Hqc48>qbT82W%/q(`:FXB:R^QnW05l)Z"
%`lWYretGB[9k[,1RJuB+Y7&-jNA8^'8\UPk^l@a`&rA<XWU@IT5>1c8mg)%Y1MUl'1)>!ck7<cbI%S^,pCCSDMeD0ApBAKpY(9?5
%mj7m?`X`qWjKF$E:jZu`)7"/Br+Xk8ld<lO&&-L-car7oQb!>G;o%<jpKl:?-2`jG!5?P"24$N\*1MmUh9>Z#UqaN]4=2i;LTu4t
%[rZk]:]\[FT>@MpX`Qd$p`\IY(-pjsBh$]"1IU%mpTp[1]5cU0gLB&iZR*3$:$b=^^V9qJ[I7])C!-01-g9mj0AI*9".u:R?Jb\`
%nWeHM5s;gKKDq>jHB(MsaYY\2e\.=EB*geu4`FKF*AkB<PHh'U.=[ZUG;i9DT3Lg^9tNX#V-Q@Wk@\b6HRmta'7S#HiDt.#V"1EB
%a:(p)oDL6)mqs+h4\(!LIp"Z*X^g1($V:3l"ut/HQgSJmhkqEE^\X]Kj"G>6Z)E$6I[KbO2icYPUA$n9Vu+]ojom#[I0QU\pX9!k
%iJ2N%mP;Ds?"T:Z7GUZ3Z_U[6ND4E?V]VEFf:_?o[K_G`aID[(qd.PikPUEbJA17&RLbf>'E*KBFkt:=_lPH[_:TP?_[hcLJ#T*s
%a5WF#3AAgZnu\uXc1iIF`nBY)o@`CURjIB4d\!DMZ>OK;MrFU5?AXDi#Cp&E\-LJLVonb>r\3C0X:t0toC#HSr-3t@p=&JM4\pE9
%4jsV'(k/^>4U0bghLKjHCnO_gHV&^SnO(a,'s;\hMeHg![N@0(4\jap*Y0L[q'YKC&MCJBK^Z^GkZ%@Yet6RPOELQ(E=BJZ^Dg@7
%c&d'(kmt+,3VT'8Gl44WO$O9n-4mSm#!,buQh#nLhl!!+`ta?$\$an<HD&dZZrb\>O`^VUX\nitquFSsGSW9h]pJ>'#sY5U:NVIk
%SER>0H].9Hk=@b]H6o(?4h$@-qk)2pl%"'9!C]p4(-L3_Q1X6"5NFut*(cZ9cmf,5T-<Q5ih*)bR8:/A-W?Xt+0;$2^f0.4fXbI@
%;r)e7J!TSPc4ThE1m;DGXA/E;]b1j>rpIdcI/>"eXeboWfg!77=6;&UWdHJY%l8[U3$NkFL(`Aa[+Pjj2fnsTm?R@_q]HQ%E;ak+
%o:bp9.Nk,[#,f&AErIcOLQqBJ]J2EQgTnm/;)]0f/ErGfC8BTH;X78m[uPmW'co4Mi)KGW\t:;HORC!GV%dY2h'=dEh+[RLUb1Eu
%1j24I+.O>dF6!Lc"XJPG".\Z5bP/>rn+2OS?i@5pM]F,^Mn58DLIpZUMD5@m%[I!b(K')(VAOC*RrnoR:Pp#(<;Bk_+(kG4H><ap
%Wk>KKZMf%.j5[M]]6V\LqYtn(]2hRFlO;Y]b^\iGJHTGZWq;ie3FIKUOFV22]?i7VAAI"7Aqn8'pY"!O-)pONVmNJ:Nitd0B<=\+
%Vkd5TCYrgmE?U=fPK&C"+]dZ/))tL]Z/LCr1ctgaKb=aEKg,KiTrc5C%jn]K>Q-:hqbVaPVS29?F`2OC4pU1t7^%%%k$EQ'Qn189
%8p"hN:N]%a$qpKT9`6\l$6t6;l.1T$h>*E3Nj;<%EE.0B2`9*5I.Sf,RO>'X;P[J2G:r`Zp&Qr'o.Q1$IPibcK&XicX5UA>o_cc'
%H;4A]^F&\TK!)89)/5I]LluH%!hBZ=;J&J`RaA*q#mQ82qdFP'guD`V%2%lCFO%)VH,JG:Mt1H<k1Do&e3g$&X!6n8m?ff,nn-2Y
%rMhj]OTNYsWZq2bG')%GIde=PqW62RG,=p;4>\UP+!O.b<H73=rReXHdMc2hI>3=Ta`K$7F*ir2g#ecu0":"k,NQ,LlV!ra=m@/.
%,ZkY%Y'3R/X2d>Lb#[726jb1QXGY5Zo00%H@/#$]0'K^?oI/OR0s@pea81Ot6^1!@(?k[NLL\I8WBFj<)Zg0Tr\0':m-u`$p=VSL
%AB);!^S91A^TmV^A:8/1I6EeD&1NdBME=md9Ue7:o-U,=[.=JOh<9qXJc"32>jsImG0`\Vo"3L*H]M7kQe/ouh$aEs+6#];*GVOp
%M8(3J=YR]R-Ql;,iH[X^ACg[kQXs"[?_<'SR^1[<EIG7,Z1DA&+]@B''fXfh0Qrs=N?'AM6#hS4%CC)n0DSH8Fej3"DeqREXmi^4
%r>UtILKK[IA`1,Z0la?CZi@.-4GAnaa\43PMslJ.Q9MaTV0dKYqtC!mkc3MFS2t0%+]dT,)gLWe&jKc4h<1-u%6YCoMBoL0Mp/?U
%'jZUKcX1[_p=Y.gApKF/)iu?ei^B*_:oAbtU`!\:DjPl60#M(*6uM[:`N-m?41P6K0"1WS"c-Z@$>(:D@:G%VGh%J<Rl04c2sd)`
%f8Kt@$6q@-L>)s`l^Dcl*LD3.'D.lVW^CTTR9IB_:9\,LL_DdLKUk2"j5eWPhqL(<!eS;1*38&(j39dF70gM<s/m-HhRMS20Q&jK
%MQ%asi`6k>C)><1Pi)Ml)APQ#!f7?O,)bP>/f1Cu-Sp[..mR:B8YpR%,B$,=*+C4c[=P6Q+`W7IrPc9bW2(h>,`ueHA2\:*SErjj
%?29@ngHJ6@U((B69+@"-e#Kp!cYi)7b6>qic^9.L"[t_.A<ms]`Gt]hD`E5+Q\X^Ti,r27ML4_%>*f\j/!:p*-'Iq`VkPne_>1c%
%RG)RW*%@1E[m%5k:XAIqW'0LB]1_.q>r0`W)i&r#3sNmHCEk4dh)GmNf;22AlnA>sE)8*ZG$SdIDFnc\/nogW?]sj3,&K+Ia&tBj
%*J7qO[?2-eEL_nkf<)1G[ecm].$d]@0!n/nUnt8;VX995FfFsDHi:/&rq(=;=S=IOUg+d^/fZV_SDU6:CYa%K.@*Z<3jqRTp`5Zu
%<aJSM-0a527C,7fXjHt_/ebE!S]E0?Gh+b?1R&R.h0hZefIYpJkC7l@?Z+'!/jJ^'K$?X9V[#6j/Gg88'<_e6809XSMQ6P9C=D2s
%;CnM`D/>>0QE*[,lgOPLS(+AP2E%XKq(Z,"rZ.Zpnf`2XG/NSOnFh,+*PhIOn/F!9XDM>>V$Ff&BCT@2a&stf(b/IfM47&VnWdPC
%.h90OW)JEdfs"mL:Xuu@+)bA2/^3jpD\cT!U\QWL-<qX=XrVO!TPa;Uk<N')RJM+-(]A@/::M3hVkrS2@+W:IfkLpP4dLF''o?#2
%9p?T5FPW8[#n..ee?','Wq1MJZ),K&6TO2KA=3a7CrPsT\4jCrFJ=3-SUkt?a&Win.@<rE2R]Qn\34]:[Z(U))ZV8VmFEb-s2D_&
%)VhAeo4,:$r]<Bkj[8G;%/X"+X`0:F"d@&0`tnI_B'&b=bEp/ZI1i=n#ghU@jtT[Z>Rr_)*MB$ICO9'i)CHp]OAN501(0,=G;oq)
%G<XVp+C@l%NgjftFps[nej`DVa)Qm^lF+.k\#t4"*#)$o>SgS.>OmdA[QADKS&c/pXlRIDnmf1']0>jl4QJ+[#;[Y?`sO.lYDt4*
%f`[<+G?3Lhl1Q<#%i1JG=EY)gWE2Sb`*6@AC7B[a`lE'q/>75mBU55*ki?#a++!MP\FX5tgqduKRN7#lb-d?Fj`'@1osK5@[81f:
%cIlu#lScdoaCLfjD0RC%rH+ZA#)s:,T$<QD?jr<Wf>O4QLV*fAc&Yg+"NCcpe#n^JilUoU/i.54kN`$"g//kiHajf@+u!,p?QD.P
%"Q4$Ja6T!I6&rR$*J67lf=rmf9[&3u/_+3n^Rp;F9n\5%JhdUdbOk*fcQ</.?%@+%j4`oLNYP7]#cM85OSuNJ+)\3t"h#OS:CJ4*
%Y[o!a(Wh.3kX>E;])Z2nEk@(IEMQu/q:aIF5E_Qq_;EpP'b&d]']>&tc&TUqp"IKDGW=ruL@,\TAq8n/SM&HIB'Cg@j#g4GhE;eZ
%R4&T./:V/Q%$h4O7S\VtR56JHVUX3]_3&15Q"smq]7._Ie'Yoj6[Sg0O/D;9XY8Mon<b^l@'E2:3q?N?A1kCAL=.Y4_3&3KoW)Jk
%IU%Mbl1Rq,H8=cCOc6jg"N+f3J3J)G&<+.U0PrN+i]'giiBs8tboQh*_q)YR>42ml@No<b"G^K$Fps[nf1)?I:N/XF9pSJL;]HQG
%-=%Kmg\p9V&3mjV@-5,X-[(.hZ#+E8^gN:PFlYqSg[:B=m;@&-S`+JTZ;\f02P8omT=Pbcq/gLpD(2:S]SZ$6@/2N^-=.cT;,;@(
%j=(]]HZA!2m259lcMI.Eii)nIJ+lfm]YdP$mB`nqOulB/Fps\9f1&NRPKR7?AR>W+)BZrS]i%<A>GV/$c0(>UNJ[Ql0+_Gj>X7&0
%%54S&feHSQ>p">A*A\L:4e:0U5/E@jaf\6:`tmnGO&0Z%N^n!RXQ"uto4W:UQAO3_:;k%A`JpEfHinT]Gbd7)%e&b=B-as_>Q25m
%^tTWcHRA;WiHS!U6X[,l^G^,,+4a8t[9H"8-7J<E"mO1Vgu^1pK)\AeII]9P@4!kX'+V@(1ckobP\VMiPn09I5A.ml6j(J<Z"2"B
%Tga5Ph>D#+I)Qoe3n1n^59ah00iTE''fV7l`Xh<N%IHN/!eWfGAa;[hCq&DIlC@MCm^rDP_'el`HMhNNq(Z-O>TZ!=5N^8,Fstb^
%J>?jFq>0%?!'&E\[lS34oDnNU7.j]?0Z%;P0j(;[)`a$&@=5J*f5p@Ucl4qmQ;G4HZq,t#o\4QPR`K>?h70tAHH&.8A]J2HEc'mJ
%ndT2)\#l,Sh<0/F%Z;W3XphGmGYdaNcC&V<^ruBKA9moW_R]^JN1hHcWjmoX0lMVsr<@jSrrbcJ,a>G>c0a;M*LGN0GkOb]^3)Y)
%d[(F2fc\s&=Jf:A3DhtPc8`/u2ib7OQG?%bKZ\G27Cad?gam]W;BS,E?bOuTK't(Q*J7qO[?2-e$,3!)2`"X,*61@MK[P":=aF3.
%/,e&HkPX[Tr>X>2ZMYOlP5Ys<F7#($!;eRoHc+mZgKj_=J;\ks_/,^;Y<V@s+4(nS[OSacABP5&O5[AL5T`%4!6>A34MC^YGHEsG
%h;*:MO"Ko)DQqp_ZG.D4a_+sZ-BbbKQ64"Uo(A[iq.&hj@GAN@[J%?T7g^T-YDk.)e%":IZZ#<DGl.5Kf/ifZPmlhP0_ZD6;Qbm=
%QOS3Jbh"o^pAUAO8<IG_Q(_?&A1K>lgedCLNCmL0?u$"hNkmL,g;o-A0lt@F"`'aG8>1^ZFeSJd4d'/jfpmK^$h!qNh5t3V`#8-?
%70EgQjJsNOj[80^$Z1-:MBg(Qrq`u[2RiM\:@b0,GA!Mm))>pg/52M;lkh8eYDo'.[kMCU@b]X:?`tFS`=cq;Kbip_i9K=pSMe^!
%g(/EtLLeG5R;d$(7/3-0j8;M]8K!O&9;l)7>GUEq_Flq)pNQ&@aA]bHZJ?&XFq.Vt$l4\$8"PV\1)H>DQGN8r/]U/^AD3<BO+3j+
%b#M2hoD4SnV0B,iK)k\[+dsF(A^7]G'Bek[9:PC!FfDf0Nk>$Q:YO1T4<KW9L*#g-e9FJ19g"meBDF8eVHk9)&^P(16_,B=%Ogc=
%`4S.>aH,!3_fDfo#M/`jfpcQn@$u:WjMX,4H3_pQ?C`S+\=5#9b0^)3cE(T@boja7.'EQdgM=7t+<oauQ3#!%Oa0s^\b1Jkg#2Q-
%crU)ZFn<STMJU9Q0cj*(ga:#])-R7Uhbjl6_(t?1aGG0Q?W(lX?W'T$`Bgb^mWG5JIbA(T["%iE*4HKaq8(AcP4W7Wbdnj3iZ!>T
%EFV5<85],1dnppLhrgKFpNbQ^9[CZRX"=-$/T-^Kp`.OB#)bSo"4(7?k(9Wm#J-@j_X@EkT0B\CcbCtN#3YF8<W70DFSGem#o4I!
%ac=1mle9F:GDcp5rea@LIL:]o$(YiUMslHTnjg\=A+nQ'qm=N?0S!cg0j*RB)`dHU@JH@YI=8G%5(u:rKYB=+fm!7/c_5cbj];8=
%XKco7Ct.`_q(Z,d>TZ"H53=I4At[7c*%@9%]/I+-cWb3Up\)m%MH#(lTh7l:IOpq9$l4+i#+do3bQ[1a'R6[-MS"4$fmA88R,*kG
%R1rCWqX[R2ZD?fgQN\@n&."$6ScX?(j@L20(LVQ2X@jIb:`q3Un4Ct3k8p;_/fCO!c*EROiF3</T+en.'reiNH7I*u_(toAaGKd;
%F/^Y\>fZ+=E#]Wd-si<FX;gq>2bWra_/%KDZ9F\IJ6]V>Y8d^REeou/f*7fRLVs?3b3)V$rQJ\P.$8FbB^P5iK6P"S?<)9G\'N5Y
%q(&/22ef,T4Wjc7A`@i`'CeHLcd+'-D/XLmC'^_GWJ'E!WMQH3k8WEZ4^IO61VgY,:]L?#?]3#L<b>SQ3&)JZQd%`:]@VIHG)V0P
%&fOiKB&aAf?Hi!lr)M\^]@qDH(.XNTXA$,Vn6GaUq"&P9@tWA_UQJHrKPOMEE/Rq7bk"*t7H<]gj!h;QCiUd_#)f"P,:D%OBlN&(
%\%_\V%8/"3XpZi,4hf-Ub"KnOL[S(>rn2W>l6!?BYY;ScEh[s&S8$aKH>r^EQK#,N6KcM@,!EaI].$7B9?p2]A#mTBr1q#NSHG0"
%_e%]tTbI$-mS[K>:S37Ac6FVK\l\(G6+l)o2jN(_lZ'HtMD(mG7j[tEoa4<QJ^L445bE?$'L:s#$a8/tDhI">\RZ5%3]?^4T"XDJ
%Iq(=M;\'Mrr]'Ta0KTE\]IOXCf#Pu<QX2>t^A8_,'ME+F)dBDMD`G)Y(t+cBihM-Z,A`M_@V*u1JJ72Q#M6u&_0)l-9#FO5Pq,e>
%nZ\1"DRLKOqJrB\&F`ln3srda&1]N=$p6I4-8$uR8(Og-)%6m!'<VbGn+P[I+ZAM3ZYr'X[@>cmUE="c9=e>ZJ7+djA`?,VR(;-a
%m:klf'r@%%$0>r4962aN3&$^qYGp;MXkc2`YChGr.U6llP=)Fq\LqiqHq9c9p,/atW-SZc64&A36F6*iP4uNC?>kEg^=2D!lKd?q
%lTebSPO',;1Tl^"G<TUk1lJE+'M"$,PHIV3efB4Q\"$O$5>TK6"q9a0=aGl>=]\*gXH0=g09AUuc6FVKMUr(LpAq2XCqS03>DN0Z
%p"8/bj:EgTY7$k6pXn*/"oDI1_a4ZplU%rG[%QhW8p=QbI!./ug/"ouLp$GCEep"Fecefj%uEq:R6!]5CS&DI:dX!Ld%]9V8\%@:
%la&?a-*&2,,Q0/bO3o05qTO$HOLjpDNh@h]PY:.E*F$`P-gHcPrLFgOpY*l3OPn483(je01@a)>M>&`IiMARch?6Xp.@<rE3k(JP
%pp'8QqT^DYJ]rn]7-;BiILMRRf8!,fO1@o;)4V3"4Amr.I<Fu<heAF:I)5V>l$#Sro7Gt3/+acuBOf^==QEeXGV4Hh>\O-0\$#CD
%)AYuC?(5#nHh*W/8M<(_32lNd#Lt([`6+>1![ku>%]Ffo!B#R>TnL:*U&1Xe>p9d?I<p7?k'U(XHSTm+"&>F!":!'!CEk4t"4!Ei
%Q->ap*#;1\?^[@PHhi)SZ+5YOc@h1<V"l<QIOmP`bH*3--diYd^0p6Qg:rf`6,R.<V(5K&FH;W-2<W[pa$b2\?WH&B%sBXWfeHUi
%>TJ)BIEYr0^(.2JoeRMP9'0@r>*S't"cmT5qXK&$3SW.$4AMK0lkh9PY)Sr"pGd@0QTCFM[EiMg.\UlgBNDiapt6^,ICo_=?P_:,
%'MAta1?[B4M0&@k'taDR<<24<rc3>jE,gq/?;95C][c%on(>.5Gr(a-U.+M#Olu-UFlBm>)U]<r*\!N$rB#OfHa4%nmsMo>6O))'
%Hr,sl(bAUhNLZpphbu8hi/5tNI`*[&Zh"$dN,SG-gIK$Voc>-F:+8+O5hdOJ+^4#5)`_n%VTui][*P[ic6FVKHIiB<pD16gUpY*L
%^S!dL9R0h2^]I(;Yqkj\^iSmQiW@jn-$QJO_+:81b*AYhGJJiLajnYdEo#u&MY9mD(,r@Yj:EiiXUL``[^][%`Ho8.eNAImTnL""
%Tinj1M!inbJerf]*)WV!7artP7*CO),:CdWe=Z?^k"<YAS4?0uoWA]WmL?>6FD3DMO)6>HWCZeRU%pEJVI(E+GlYk>V8>oQ_sST&
%!0X&_*rp_.GlTs#g=XBq;5%*AVS]Pu0COm18X:BL-1^_kVs5GskN>ao32ksr/<rc<2RFl.0PQ_L?Cn(<9UIZCMh@EAQ5tThb-d?F
%jUS03m#pXu=ZE6dWJ&E:Tinq\@$?:MQTN>7X+/pL`Nj!X9Y!'%U)^YMg"!kh.Au"W9;`4Nb&Kq:XiI+g9[VMC_O0&cRhkksa6X?g
%19O>6(Clit5M%[K.LD+[jcVXUk8*Fk/t)*i?LmMmGDf`/)-O6:&1nR!NLZ@X;h'6KBoJNchS>8*$-fMllRiR[_+[SKI.(sQbTEb-
%m'ad&*_(Z^f`RlT4P)eE/hg?kV5jb(,DD;k=,&X'\/Nie?5C:mA7W@kf\XFU(bARgNh"0LYgFc#C;<:TNl,<4m42+VO7+=eplB1"
%Hq(tj30dt=4U\q'9Fe<_jgr6an:3m-8&B\G[+.9k@A/@gFeMr^^g"p$f]=Ul1)$N[nkY<4B1oO?YY;Pbnm)!X\^2o$[>[RI,u^rT
%/]o)OTZ]@!DmRNQTue1)9o`e?@$,MIi^C=#%BeM%dqYN'YZO6Tb1%W+FR/)/`FRP]X\IC)`E4ZQ#0WNP,:Cq0MQjal!PL%\h7T(J
%)k*$^EeUkXWG]M`i&op-7Va2agLJnk=QWj-3H6*Ks.\=F8,"edP_Q"I3nK'$k6Auo[ViUhj?18EVR!Q6ZR.4d7*D*9,L;oJlGBm;
%R>LN;a^j8c!F4E,]U[&HGC:E1IL,K(aVnCj+k\SPjB`ieEGoe:`!0HOTen<cd(:ne4&66(md;'LYVs?u&p\=!>9?KKd5't?aGKOD
%FfDHc182Em3K=eIkZs``e6CQkQ]kaiX<plNl+%P,8k=+6(5Z*_Sr4[H(RftDBUjgRP$(k@(?GQ5@@Y(g)o!Jl5LdFo;r]Dl7*D*9
%,:CdWe:j7SXEa,L3K=eIW*Pt+:Wg7[_/D:L:Mr$LT9XgVkoGH\4B>5q&1r55[#pPb?qd,:IQp\PO?n/fAAX*e+5EFhEn,,8W4DdB
%p]^AuG"(eg0Esq'*WpQGq-sE($dZX`'5uf"_.6>m55,T@5Q:*6^0GaH*T6JU0^HhL=Y)W;bIf>=-ec\5@Fb\SR72+>mj`YhDUFKb
%+hOP:]K>J5]k=I.Uk`WOG\uN[r0TP:_Eth@c6FVKWn.JgpFDhn[,hP[?O>d4Y'e#NfRAhQ5m0gkd5(IMaGKdKFfDIE/W*R4S4?0u
%FKZ3-mN&b5@-V3^>^\bQhhqbbV$bD+_'8R;aE.#ak!JZ!ntrd`2qhq4MfNjAHsX4mI+prA_@&;)S4"aH+]`2[(HCr%EW/)=3kPft
%0J&I8[k9N7hH&(<V`X4L+lMX!Lh*P29+TE*j4_S2o.bCM`=;RMEZ?Nq:qJctQoDPPU*dQ!5*;EpP-&UI3sNmHCEq0EO-pC#@6_qK
%Uf9,8b0ZlQgfB_^hO(R/G^Gf(a/s'!#SoGP-;KfcZ#^lS9)gh`2\3O$;i>b1Q*TMaUth/FnJLa!9<r'3bdfWP,!Fl][2q6oX.ReD
%<'ocZd&c#aX!m:Sh6g,8K*ku3Oo-+89b5W,l.X48FRmUkG/(ced*m$lh4K@I%rdYl^ZiD7f3N1\M4I43j@gc>Nklq4lH"&>A*-,L
%Fd]>]5GR$t#,r"_b42rMCc`tlV7@t3'.1h`#nrUGU1MWXOV?nflG?2)WeBt7ab8OD_:cLJk93d8jk^X_m)Tf4&(*0,g;o+tEa$R:
%m>$&*3UZSi.=H(gn"A4o"hMlYg#TQsECh^JDVWjcP!c<=]/K.X3[?=3=*M.MR[Cpq:a4rRd%WT7h<r:Mc7K5)=DkB'R\8mg>%V"Y
%3H76[0"d!-X#G:!A4#b]i9]=Z]f'c=F(8@mN]h8deV+KfVMAiQHYqi^4h3PrXUDjUhr*>(Z0XWh`BF#C)7Qd#:W;F,>WBog$TOa2
%@+d8:k$B!PmXEAbBR#.HV3+Zt]IQ@-F0_>tkIf3q^Xd=a!Y"===aGl>8QSDWUlVJ_09AAao16uViq:,VIUWc#rAO9OpD-fJns]"A
%CU5QP`6-<i![li[`!)Il`*'-g#/`b6Sa/VKDnk8SI9WkXZF`!PW^nbt\.l`aA$AY:2KGNS_4!o$`u<Pt3"8M,<3?T\autdH2fkmD
%J$%TLl@7PZ?d$kb[)fd=o%Z7$/j)pU=jA6<PBhW_E,gs)0lD&TBQ-8N_6<(Iim<Q.LKKsh?/S,_`DP/$iT`*,_a4ZplU%rG^j>`s
%UNbSs>U>ZYL-7+8LKKs^?/S+p`(nmjH\B6b$k"B2XUD8cjOl*icE(r&U,q*VTCK,mlHB<&IggnE1ABMDF8KJ06F3el%;.Xu/=Cs(
%C2*)J:<)Ccf>m:`pT$AcE%"GD6``hh12nGmi%V`K0@8<5K41I,^3-,PG?i8!RL.S!(sgC6j'FWV4PXu%P!c=p[k;XZHUsZ8G/9c9
%_QZj'hn%1ogZ%/9hRR.M)01:)?HC*";3i<AA^9tB'CY"^B4niWT#3SXmN'dF!A=?RC%&M-]c$VJ@*(Fi>SoGO6h=ftkQ,o5kkP;\
%\I6bmVos@0IkBk)\68jt=!it$DlpiYgoTop>7b</+^4#7)`]Y!QGRG`_^j$E]a"3@i8WUT6+q-M*I>ObmWrgfIrLVuLKKsi?/WX_
%rpHe-\CZ;LDZ8:h2RN8!Z`Z=MSXr$-:=kVtFD-+3QT<ZQSpQ7J"_b0]V*%d6R<j:!Z(FR&GO9Dj\UCs':!g%L^s[#6j:EgsY7-q'
%a*WN1C\J0i;qT@<N3o:>J"^4-ZJt/dN=U6ri1*,?c\7c#OrRqB^3+u?h]CrSr&tkdW7ko[?s"hNDdDQj:ZiPL.dd01p/Ltc1nDN+
%BQKb]FW^gCQ&4)rSr4[((RW1@E<[YAP)37pQA-IN$f9VWb:g'rl&W5jn>mYR%`'@Hg;Jj;0lt1]XiZ"Y1E7j1d()1rCL?V%CJK2(
%ZRiX^+tr,rhGo^Y@V+,5JJ79m's%f1.bJ\I]6XFX2RM\V\EXiq)rGDk"psH;IQEVP&1c53$_6F@pt6?>*(WpD(.tN0(Ktncm*m++
%Y7KIkRi`"gY(Dc%(b?<&N]^B,AhLH.?>L]V;&Y`mVHb"-Q#@%jh1C'%M=p6Cfl6^+fPX-@*J.kBQ&-15CmSVpFt'lRB=Q^.,PAT9
%48G/fSFo?MGHBVGddG1X"U*#eCEk4h4gqpm5+<r09-sB-klMt,\o3)s]64)4Vn`0#iL_q$gY`#&l-l9=I.uZVIsV(.+$Y8Oh3[Ro
%r?_JPF!&-p__47Ro[if'&)ZO-?[qn5LQ?raiT&6KI/,u+q-Ul8WirSe_k[.e4W^a:s6u'krpr@W;Z.?qhoN*Q5F,UTIOoF:Ni^!t
%%Y+M^?[qanYCGa7lSi1bqu+RMIer;1^O#h:Rt(J5rMMmZo^R]$J,8EqYJ1&4j8XT)nF=\g++O+]bGYAcr(eEKs68"Y&*To%5QCJ=
%s-NbKK5/1\hu)WoIf&e>rt!@BCRY~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2034 1540 a
 /End PSfrag
 2034 1540 a 2034 1366 a
 /Hide PSfrag
 2034
1366 a 1418 1417 a Fc(PSfrag)g(replacements)p 1418 1446
617 4 v 2034 1449 a
 /Unhide PSfrag
 2034 1449 a 2014 1517 a
  {
 2014 1517
a Black 1994 1526 a Fn(\032)p Black 2014 1517 a
  } 0/Place PSfrag
 2014
1517 a 2034 1731 a Fj(Fig)o(.)41 b(S5.)33 b Fi(Error)42
b(in)g(band)g(positions)i(with)e(respect)i(to)e(the)g(reference)j(band)
2034 1814 y(locations)31 b(for)e(187-nt)h(HD)m(V)e(data.)35
b(Upper)29 b(plot:)36 b(error)30 b(o)o(v)o(er)f(residue)h(positions)
2034 1897 y(for)k(the)h(proposed)f(method;)44 b(middle:)f(mapping)35
b(between)h(the)e(reference)j(and)2034 1980 y(computationally)18
b(predicted)e(band)e(locations;)k(lo)n(wer:)e(error)e(o)o(v)o(er)g
(residue)h(positions)2034 2063 y(for)i(F)-5 b(AST)g(.)p
Black Black -133 5542 4185 5 v -133 5642 a Fe(2)p Black
eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black 2247 -253 a Fd(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 731 43 a Fc(T)-6 b(able)33 b(S1:)39
b(Name)32 b(of)h(data)g(set)f(and)h(corresponding)i(results)e(respecti)
n(v)o(ely)g(from)g(the)731 135 y(proposed)21 b(method)f(and)f(QuShape,)
g(along)h(with)f Fb(E)o Fc(-score.)2916 306 y(MSE)576
397 y(Data)g(Set)f(Name)1347 b Fb(E)p Fc(-score)77 b(proposed)i
(QuShape)p 538 429 2806 5 v 538 429 V 576 493 a(Fragments)19
b(of)g(Old)g(W)m(inners)1052 b(1.00)198 b(0.80)221 b(2.38)576
584 y(FNM)19 b(Apatamet)g(1st)g(try)1169 b(1.00)198 b(0.55)221
b(0.86)576 676 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(-)g(Reshiram)864
b(1.00)198 b(0.22)221 b(0.68)576 767 y(wisda)o(v)o(e')l(s)19
b(apatamer)g(#1)1171 b(1.00)198 b(0.24)221 b(0.38)576
858 y(Fisk)o(ers)19 b(single)g(aptamer)g(2)1121 b(0.97)198
b(1.13)221 b(1.49)576 950 y(Starry')l(s)18 b(Single)h(III)1312
b(1.00)198 b(0.10)221 b(1.78)576 1041 y(fold)19 b(vs)g(shapes)1426
b(1.00)198 b(0.18)221 b(0.15)576 1132 y(V)l(iennaRN)m(A)19
b(design)h(01)1175 b(0.88)198 b(0.49)221 b(0.74)576 1224
y(V)l(iennaRN)m(A)19 b(design)h(03)1175 b(1.00)198 b(0.12)221
b(1.11)576 1315 y(V)l(iennaRN)m(A)19 b(design)h(04)1175
b(1.00)198 b(0.10)221 b(0.33)576 1406 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1244 b(0.53)198 b(4.73)k(66.49)576 1498
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.88)198 b(0.52)221
b(1.88)576 1589 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(R2)g(-)f(Zekrom)
809 b(0.96)198 b(1.10)221 b(1.10)576 1680 y(T)-6 b(adpole)20
b(2.0)1497 b(1.00)198 b(0.09)221 b(0.46)576 1772 y(Kiwi)1698
b(1.00)198 b(0.18)221 b(0.51)576 1863 y(LR)m(Opp)o(y)19
b(93.4\045)h(FMN)1198 b(1.00)198 b(0.07)221 b(1.26)576
1954 y(EteRN)m(A)18 b(ensemble)i(design)g(01)f(\(L2\))834
b(0.85)198 b(2.38)221 b(4.95)576 2045 y(EteRN)m(A)18
b(ensemble)i(design)g(02)f(\(L2\))834 b(1.00)198 b(0.18)221
b(7.60)576 2137 y(EteRN)m(A)18 b(ensemble)i(design)g(03)f(\(L2\))834
b(0.99)198 b(0.18)221 b(0.74)576 2228 y(EteRN)m(A)18
b(ensemble)i(design)g(04)f(\(L2\))834 b(0.97)198 b(0.39)221
b(0.34)576 2319 y(EteRN)m(A)18 b(ensemble)i(design)g(05)f(\(sparse)h
(5\))674 b(0.99)198 b(0.05)221 b(0.55)576 2411 y(EteRN)m(A)18
b(ensemble)i(design)g(06)f(\(sparse)h(5\))674 b(0.94)198
b(0.40)221 b(1.70)576 2502 y(EteRN)m(A)18 b(ensemble)i(design)g(07)f
(\(sparse)h(5\))674 b(0.97)198 b(0.36)221 b(6.38)576
2593 y(EteRN)m(A)18 b(ensemble)i(design)g(08)f(\(sparse)h(5\))674
b(1.00)198 b(0.10)221 b(0.18)576 2685 y(EteRN)m(A)18
b(ensemble)i(design)g(09)f(\(con)m(v)o(entional\))537
b(0.91)198 b(1.68)221 b(1.06)576 2776 y(EteRN)m(A)18
b(ensemble)i(design)g(10)f(\(con)m(v)o(entional\))537
b(0.82)198 b(0.58)221 b(1.48)576 2867 y(EteRN)m(A)18
b(ensemble)i(design)g(11)f(\(con)m(v)o(entional\))537
b(0.99)198 b(0.15)221 b(0.58)576 2959 y(EteRN)m(A)18
b(ensemble)i(design)g(12)f(\(con)m(v)o(entional\))537
b(1.00)198 b(0.13)221 b(0.36)576 3050 y(Brourd)19 b(-)g(FMN)m(A)g(1)
1305 b(1.00)198 b(0.08)221 b(0.40)576 3141 y(The)19 b(Re)n(v)o(olution)
g(of)g(the)g(Mobile)h(Archer)733 b(1.00)198 b(0.19)221
b(0.75)576 3233 y(Fragments)19 b(of)g(old)g(W)m(inners)g(\(3\))963
b(0.94)198 b(1.05)221 b(5.13)576 3324 y(Smart)18 b(Solution)1398
b(1.00)198 b(0.05)221 b(0.07)2596 3507 y Fb(Continued)20
b(on)g(ne)o(xt)e(pa)o(g)o(e)p Black -152 5542 4185 5
v 3991 5642 a Fe(3)p Black eop end
%%Page: 4 4
TeXDict begin 4 3 bop Black -133 -253 a Fd(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 2935 43 a Fc(MSE)595 135 y(Data)g(Set)f(Name)
1347 b Fb(E)p Fc(-score)77 b(proposed)i(QuShape)p 557
166 2806 5 v 557 166 V 595 230 a(Lump)19 b(In)g(My)h(Throat)1248
b(0.94)198 b(0.85)221 b(7.12)595 322 y(JP-14-0-17)20
b(\(FMN-SBS)d(II\))1059 b(0.94)198 b(0.34)221 b(0.30)595
413 y(SBSII-2)1602 b(0.87)198 b(0.56)221 b(6.44)595 504
y(Mod)20 b(of)f(Quasispecies)h(design)f(Fragments)h(of)e(old)i(winners)
219 b(0.87)198 b(0.48)221 b(7.35)595 596 y(NUP)-7 b(A)m(CK)18
b(design)i(01)1244 b(0.74)179 b(21.50)184 b(62.22)595
687 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1244 b(0.90)198
b(1.70)k(16.09)595 778 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1244
b(0.90)198 b(0.89)k(46.15)595 869 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1244 b(0.84)198 b(1.09)221 b(5.58)595 961
y(V)l(iennaRN)m(A)19 b(design)h(01)1175 b(0.81)198 b(2.18)221
b(0.51)595 1052 y(V)l(iennaRN)m(A)19 b(design)h(02)1175
b(0.84)198 b(0.20)221 b(0.36)595 1143 y(V)l(iennaRN)m(A)19
b(design)h(03)1175 b(0.84)198 b(0.05)221 b(0.84)595 1235
y(NUP)-7 b(A)m(CK)18 b(design)i(01)1244 b(0.84)198 b(0.45)221
b(0.20)595 1326 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1244
b(0.87)198 b(1.36)221 b(3.30)595 1417 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1244 b(0.90)198 b(1.70)221 b(0.34)595 1509
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.90)198 b(9.63)221
b(0.72)595 1600 y(V)l(iennaRN)m(A)19 b(design)h(01)1175
b(0.84)198 b(3.20)221 b(0.67)595 1691 y(V)l(iennaRN)m(A)19
b(design)h(03)1175 b(0.81)198 b(0.06)221 b(0.25)595 1783
y(Fragments)19 b(of)g(Old)g(W)m(inners)g(\(4\))946 b(1.00)198
b(0.09)221 b(0.21)595 1874 y(GOOD)19 b(SOLUTION)1238
b(1.00)198 b(0.15)221 b(0.57)595 1965 y(Mod)20 b(of)f(Quasispecies)h
(design)f(Fragments)h(of)e(old)i(winners)f(v2)126 b(0.87)198
b(1.01)k(10.48)595 2057 y(Combo)20 b(-)e(impro)o(v)o(ed)1283
b(1.00)198 b(0.12)221 b(0.30)595 2148 y(EteRN)m(A)18
b(ensemble)i(design)g(0)f(\(sparse)g(5\))712 b(1.00)198
b(0.08)221 b(0.59)595 2239 y(EteRN)m(A)18 b(ensemble)i(design)g(1)f
(\(sparse)g(5\))712 b(0.97)198 b(0.20)221 b(0.75)595
2331 y(EteRN)m(A)18 b(ensemble)i(design)g(2)f(\(sparse)g(5\))712
b(1.00)198 b(0.18)221 b(0.75)595 2422 y(EteRN)m(A)18
b(ensemble)i(design)g(3)f(\(sparse)g(5\))712 b(0.97)198
b(0.06)221 b(0.28)595 2513 y(EteRN)m(A)18 b(ensemble)i(design)g(4)f
(\(L2\))871 b(1.00)198 b(0.02)221 b(0.20)595 2605 y(EteRN)m(A)18
b(ensemble)i(design)g(5)f(\(L2\))871 b(0.97)198 b(0.34)221
b(0.78)595 2696 y(EteRN)m(A)18 b(ensemble)i(design)g(6)f(\(L2\))871
b(0.97)198 b(0.13)221 b(0.68)595 2787 y(EteRN)m(A)18
b(ensemble)i(design)g(7)f(\(L2\))871 b(1.00)198 b(0.17)221
b(0.34)595 2879 y(EteRN)m(A)18 b(ensemble)i(design)g(08)g(\(con)m(v)o
(entional\))536 b(1.00)198 b(0.05)221 b(0.21)595 2970
y(EteRN)m(A)18 b(ensemble)i(design)g(09)g(\(con)m(v)o(entional\))536
b(0.97)198 b(0.15)221 b(0.66)595 3061 y(EteRN)m(A)18
b(ensemble)i(design)g(10)g(\(con)m(v)o(entional\))536
b(1.00)198 b(0.61)221 b(0.65)595 3153 y(EteRN)m(A)18
b(ensemble)i(design)g(11)g(\(con)m(v)o(entional\))536
b(1.00)198 b(0.15)221 b(0.27)595 3244 y(W)m(ild)18 b(Cross)h(-)g(2)1413
b(0.94)198 b(0.12)221 b(0.72)595 3335 y(Mod)20 b(of)f(JerryP70)1342
b(1.00)198 b(0.07)221 b(0.55)595 3427 y(Mod)20 b(of)f(brourds)h(1)f(st)
f(round)i(-)1018 b(0.84)198 b(0.08)221 b(0.88)595 3518
y(Unique)20 b(Stacks)1414 b(0.93)198 b(0.24)221 b(0.54)595
3609 y(G-C)18 b(pairs)h(in)g(multloops)h(in)f(same)g(direction)628
b(0.98)198 b(0.04)221 b(1.38)595 3701 y(Fisk)o(er')l(s)19
b(Binding)g(branches)1070 b(0.93)198 b(0.12)221 b(0.76)595
3792 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1244 b(0.95)198
b(0.25)221 b(0.93)595 3883 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1244
b(0.93)198 b(0.53)221 b(0.39)595 3975 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1244 b(0.93)198 b(3.05)221 b(1.41)595 4066
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.98)198 b(0.43)221
b(0.39)595 4157 y(V)l(iennaRN)m(A)19 b(design)h(04)1175
b(0.88)198 b(0.40)221 b(0.48)595 4248 y(EteRN)m(A)18
b(ensemble)i(design)g(02)g(\(con)m(v)o(entional\))536
b(0.95)198 b(1.80)221 b(1.35)595 4340 y(EteRN)m(A)18
b(ensemble)i(design)g(04)g(\(con)m(v)o(entional\))536
b(1.00)198 b(0.03)221 b(0.45)595 4431 y(EteRN)m(A)18
b(ensemble)i(design)g(05)g(\(sparse)f(5\))674 b(1.00)198
b(0.06)221 b(0.05)595 4522 y(EteRN)m(A)18 b(ensemble)i(design)g(06)g
(\(sparse)f(5\))674 b(1.00)198 b(0.26)221 b(0.41)595
4614 y(EteRN)m(A)18 b(ensemble)i(design)g(07)g(\(sparse)f(5\))674
b(0.98)198 b(0.19)221 b(0.39)595 4705 y(EteRN)m(A)18
b(ensemble)i(design)g(08)g(\(sparse)f(5\))674 b(0.99)198
b(0.12)221 b(0.10)595 4796 y(EteRN)m(A)18 b(ensemble)i(design)g(09)g
(\(L2\))833 b(1.00)198 b(0.28)k(13.50)595 4888 y(EteRN)m(A)18
b(ensemble)i(design)g(11)g(\(L2\))833 b(0.98)198 b(0.21)221
b(0.18)595 4979 y(EteRN)m(A)18 b(ensemble)i(design)g(12)g(\(L2\))833
b(0.99)198 b(0.08)221 b(0.23)595 5070 y(UUU)19 b(/)f(GCA)g(T)m(riloops)
i(\(Round)g(2\))877 b(0.91)198 b(0.69)221 b(3.00)595
5162 y(Uracil)18 b(in)h(1-2)h(x2)1373 b(0.85)198 b(0.12)221
b(0.79)2615 5344 y Fb(Continued)20 b(on)g(ne)o(xt)e(pa)o(g)o(e)p
Black -133 5542 4185 5 v -133 5642 a Fe(4)p Black eop
end
%%Page: 5 5
TeXDict begin 5 4 bop Black 2247 -253 a Fd(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 2916 43 a Fc(MSE)576 135 y(Data)h(Set)f(Name)
1347 b Fb(E)p Fc(-score)77 b(proposed)i(QuShape)p 538
166 2806 5 v 538 166 V 576 230 a(1)19 b(U-le)o(g,)f(1)h(A-le)o(g)1361
b(0.94)198 b(1.01)221 b(3.98)576 322 y(Bonus)20 b(Army)1464
b(0.91)198 b(0.23)221 b(0.86)576 413 y(wisda)o(v)o(e')l(s)19
b(2nd)h(round)1233 b(0.76)198 b(0.68)221 b(1.02)576 504
y(C)19 b(-)f(B)m(A)m(CK)1534 b(0.88)198 b(1.24)221 b(0.24)576
596 y(Beauty)19 b(in)g(Balance)1301 b(0.97)198 b(0.13)221
b(1.33)576 687 y(V)-8 b(ery)19 b(Lo)n(w)g(Entrop)o(y)g(\2410.6)g(T)-7
b(-B-C)18 b(#5)858 b(0.94)198 b(0.09)221 b(0.16)576 778
y(Impro)o(v)o(es)20 b(on)f(Quasispecies)h(UUU/GCA)e(T)m(riloop)467
b(0.91)198 b(0.08)221 b(0.06)576 869 y(sta1)1728 b(0.82)198
b(0.21)221 b(1.86)p Black Black Black -152 5542 4185
5 v 3991 5642 a Fe(5)p Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black -133 -253 a Fd(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 750 43 a Fc(T)-6 b(able)26 b(S2:)j
(Description)e(of)f(longer)g(data)h(sets)f(and)g(results)g(from)g(the)g
(tests)g(with)g(these)750 135 y(data)i(sets.)1063 103
y Fa(a)1101 135 y Fc(An)g(e)o(xtraordinary)g(result)f(mainly)g(caused)i
(by)e(a)g(misalignment)h(between)750 226 y(pro\002les.)982
397 y(Name)312 b(#)19 b(pro\002les)77 b(#)19 b(bands)h(per)f(pro\002le)
84 b(MSE)g Fb(E)p Fc(-score)p 943 429 2033 5 v 943 429
V 982 493 a(GIR1)19 b(noref)250 b(21)404 b(199)320 b(0.09)145
b(0.99)982 584 y(GIR1)19 b(ref)324 b(21)404 b(225)320
b(0.12)145 b(0.98)982 676 y(AdoCbl)19 b(noref)180 b(16)404
b(179)320 b(0.61)145 b(0.97)982 767 y(AdoCbl)19 b(ref)254
b(16)404 b(205)320 b(0.68)145 b(0.90)982 858 y(VS)18
b(noref)321 b(48)404 b(195)320 b(0.16)145 b(0.96)982
950 y(VS)18 b(ref)395 b(48)404 b(233)320 b(0.12)145 b(0.96)982
1041 y(SAM)18 b(noref)255 b(32)404 b(103)320 b(0.09)145
b(0.96)982 1132 y(SAM)18 b(ref)329 b(32)404 b(143)320
b(0.09)145 b(0.96)982 1224 y(HTP)18 b(noref)275 b(32)422
b(79)339 b(0.05)145 b(1.00)982 1315 y(HTP)18 b(ref)349
b(32)404 b(116)320 b(0.05)145 b(1.00)982 1406 y(Tbox)435
b(20)404 b(141)320 b(0.34)145 b(0.98)982 1498 y(tRN)m(A)416
b(20)404 b(119)320 b(0.63)145 b(0.83)982 1589 y(cdiAMP)339
b(36)404 b(171)320 b(0.16)145 b(0.99)982 1680 y(16S)495
b(8)422 b(125)320 b(0.21)145 b(0.98)982 1772 y(C19)468
b(16)404 b(319)320 b(0.18)145 b(0.99)982 1863 y(tC19)447
b(16)404 b(248)320 b(0.01)145 b(1.00)982 1954 y(tC19Z)401
b(16)j(248)320 b(0.01)145 b(0.99)982 2045 y(C1Lig)420
b(7)i(167)320 b(0.04)145 b(1.00)982 2137 y(Hox5)446 b(9)422
b(261)320 b(0.11)145 b(0.99)982 2228 y(Hox9D)373 b(16)404
b(296)320 b(0.44)145 b(0.99)982 2319 y(L-21)447 b(20)404
b(413)301 b(2.00)2594 2288 y Fa(a)2758 2319 y Fc(0.98)p
Black Black Black -133 5542 4185 5 v -133 5642 a Fe(6)p
Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black 2247 -253 a Fd(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 731 43 a Fc(T)-6 b(able)33 b(S3:)39
b(Name)32 b(of)h(data)g(set)f(and)h(corresponding)i(results)e(respecti)
n(v)o(ely)g(from)g(the)731 135 y(proposed)20 b(method)f(and)g(manual)g
(annotation,)h(along)f(with)f(the)g(ratio)g(between)h(tw)o(o)g(MSE)731
226 y(v)n(alues)h(\(proposed)g(/)f(manual\))2715 397
y(MSE)804 489 y(Data)f(Set)g(Name)1022 b(ratio)93 b(proposed)78
b(manual)p 765 520 2351 5 v 765 520 V 804 584 a(Fragments)19
b(of)g(Old)f(W)m(inners)681 b(1.15)168 b(0.82)194 b(0.71)804
676 y(FNM)18 b(Apatamet)h(1st)g(try)798 b(0.94)168 b(0.57)194
b(0.61)804 767 y(Fre)o(yw)o(a)18 b(-)h(Cross)g(FMN)g(-)f(Reshiram)493
b(2.60)168 b(0.24)194 b(0.09)804 858 y(wisda)o(v)o(e')l(s)18
b(apatamer)i(#1)799 b(1.32)168 b(0.26)194 b(0.20)804
950 y(Fisk)o(ers)18 b(single)i(aptamer)f(2)749 b(9.31)168
b(1.43)194 b(0.15)804 1041 y(Starry')l(s)18 b(Single)g(III)941
b(0.73)168 b(0.11)194 b(0.15)804 1132 y(fold)19 b(vs)g(shapes)1054
b(1.22)168 b(0.18)194 b(0.15)804 1224 y(V)l(iennaRN)m(A)19
b(design)g(01)804 b(0.97)168 b(0.58)194 b(0.60)804 1315
y(V)l(iennaRN)m(A)19 b(design)g(03)804 b(0.67)168 b(0.15)194
b(0.22)804 1406 y(V)l(iennaRN)m(A)19 b(design)g(04)804
b(1.04)168 b(0.09)194 b(0.09)804 1498 y(NUP)-7 b(A)m(CK)18
b(design)h(02)873 b(3.80)168 b(4.60)194 b(1.21)804 1589
y(NUP)-7 b(A)m(CK)18 b(design)h(04)855 b(10.10)149 b(3.18)194
b(0.32)804 1680 y(Fre)o(yw)o(a)18 b(-)h(Cross)g(FMN)g(R2)f(-)h(Zekrom)
437 b(3.31)168 b(0.98)194 b(0.30)804 1772 y(T)-6 b(adpole)19
b(2.0)1126 b(1.77)168 b(0.10)194 b(0.06)804 1863 y(Kiwi)1326
b(4.07)168 b(0.11)194 b(0.03)804 1954 y(LR)m(Opp)o(y)19
b(93.4\045)h(FMN)826 b(2.07)168 b(0.09)194 b(0.04)804
2045 y(EteRN)m(A)18 b(ensemble)i(design)g(01)f(\(L2\))462
b(5.33)168 b(4.27)194 b(0.80)804 2137 y(EteRN)m(A)18
b(ensemble)i(design)g(02)f(\(L2\))462 b(3.03)168 b(0.19)194
b(0.06)804 2228 y(EteRN)m(A)18 b(ensemble)i(design)g(03)f(\(L2\))462
b(1.12)168 b(0.22)194 b(0.19)804 2319 y(EteRN)m(A)18
b(ensemble)i(design)g(04)f(\(L2\))462 b(1.47)168 b(0.39)194
b(0.26)804 2411 y(EteRN)m(A)18 b(ensemble)i(design)g(05)f(\(sparse)g
(5\))303 b(2.51)168 b(0.17)194 b(0.07)804 2502 y(EteRN)m(A)18
b(ensemble)i(design)g(06)f(\(sparse)g(5\))303 b(1.91)168
b(0.58)194 b(0.31)804 2593 y(EteRN)m(A)18 b(ensemble)i(design)g(07)f
(\(sparse)g(5\))303 b(0.83)168 b(0.37)194 b(0.44)804
2685 y(EteRN)m(A)18 b(ensemble)i(design)g(08)f(\(sparse)g(5\))303
b(5.90)168 b(0.75)194 b(0.13)804 2776 y(EteRN)m(A)18
b(ensemble)i(design)g(09)f(\(con)m(v)o(entional\))147
b(13.01)i(1.69)194 b(0.13)804 2867 y(EteRN)m(A)18 b(ensemble)i(design)g
(10)f(\(con)m(v)o(entional\))165 b(1.16)j(1.01)194 b(0.87)804
2959 y(EteRN)m(A)18 b(ensemble)i(design)g(11)f(\(con)m(v)o(entional\))
165 b(1.86)j(0.17)194 b(0.09)804 3050 y(EteRN)m(A)18
b(ensemble)i(design)g(12)f(\(con)m(v)o(entional\))165
b(2.51)j(0.23)194 b(0.09)804 3141 y(UUU)18 b(/)h(GCA)f(T)m(riloops)h
(\(Round)h(2\))488 b(40.59)149 b(0.51)194 b(0.01)804
3233 y(Uracil)18 b(in)h(1-2)g(x2)1002 b(1.20)168 b(0.12)194
b(0.10)804 3324 y(1)19 b(U-le)o(g,)f(1)h(A-le)o(g)989
b(3.62)168 b(1.19)194 b(0.33)804 3415 y(Bonus)19 b(Army)1093
b(1.61)168 b(0.39)194 b(0.21)804 3507 y(wisda)o(v)o(e')l(s)18
b(2nd)i(round)844 b(12.73)149 b(0.74)194 b(0.06)804 3598
y(C)18 b(-)h(B)m(A)m(CK)1162 b(2.75)168 b(1.19)194 b(0.43)804
3689 y(Beauty)19 b(in)g(Balance)929 b(9.22)168 b(1.36)194
b(0.15)804 3781 y(V)-8 b(ery)18 b(Lo)n(w)h(Entrop)o(y)h(\2410.6)f(T)-7
b(-B-C)18 b(#5)486 b(1.36)168 b(0.14)194 b(0.11)804 3872
y(Impro)o(v)o(es)19 b(on)h(Quasispecies)f(UUU/GCA)f(T)m(riloop)78
b(11.22)149 b(0.08)194 b(0.01)804 3963 y(sta1)1356 b(1.09)168
b(0.23)194 b(0.21)p Black Black Black -152 5542 4185
5 v 3991 5642 a Fe(7)p Black eop end
%%Page: 8 8
TeXDict begin 8 7 bop Black -133 -253 a Fd(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 750 43 a Fc(T)-6 b(able)45 b(S4:)56
b(Name)45 b(and)g(type)g(of)f(data)h(pro\002le,)56 b(and)45
b(the)g(Pearson')l(s)g(correlation)750 135 y(coef)n(\002cients)36
b(between)h(manually)g(quanti\002ed)f(areas,)44 b(and)37
b(those)f(quanti\002ed)h(by)f(the)750 226 y(proposed)28
b(method)f(and)g(by)g(QuShape)g(respecti)n(v)o(ely)-5
b(.)31 b(A)-6 b(v)o(erage)27 b(v)n(alues)h(are)e(posted)h(for)750
317 y(the)19 b(multiple)g(results)g(from)g(repetiti)n(v)o(e)g(e)o
(xperiments)g(with)g(same)g(data.)2722 489 y(correlation)g(\(a)o(v)o
(eraged\))538 580 y(Data)g(Set)f(Name)1348 b(Data)18
b(T)-6 b(ype)78 b(proposed)96 b(QuShape)p 500 612 2920
5 v 500 612 V 538 676 a(Fragments)19 b(of)g(Old)g(W)m(inners)1076
b(DMS)184 b(0.9383)164 b(0.9654)538 767 y(FNM)19 b(Apatamet)g(1st)g
(try)1193 b(DMS)184 b(0.6913)164 b(0.9468)538 858 y(Fre)o(yw)o(a)19
b(-)g(Cross)g(FMN)f(-)h(Reshiram)888 b(DMS)184 b(0.9750)164
b(0.9433)538 950 y(wisda)o(v)o(e')l(s)19 b(apatamer)h(#1)1194
b(DMS)184 b(0.9796)164 b(0.9546)538 1041 y(Fisk)o(ers)19
b(single)g(aptamer)h(2)1144 b(DMS)184 b(0.9708)164 b(0.9588)538
1132 y(Starry\224s)19 b(Single)f(III)1324 b(DMS)184 b(0.9788)164
b(0.7297)538 1224 y(fold)19 b(vs)g(shapes)1450 b(DMS)184
b(0.9890)164 b(0.9880)538 1315 y(V)l(iennaRN)m(A)19 b(design)h(01)1199
b(DMS)184 b(0.9927)164 b(0.9745)538 1406 y(V)l(iennaRN)m(A)19
b(design)h(03)1199 b(DMS)184 b(0.9957)164 b(0.9929)538
1498 y(V)l(iennaRN)m(A)19 b(design)h(04)1199 b(DMS)184
b(0.9667)164 b(0.9232)538 1589 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268
b(DMS)184 b(0.9148)164 b(0.8848)538 1680 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1268 b(DMS)184 b(0.9557)164 b(0.7359)538
1772 y(Fre)o(yw)o(a)19 b(-)g(Cross)g(FMN)f(R2)h(-)g(Zekrom)832
b(DMS)184 b(0.9832)164 b(0.7436)538 1863 y(T)-6 b(adpole)20
b(2.0)1521 b(DMS)184 b(0.9757)164 b(0.9444)538 1954 y(Kiwi)1722
b(DMS)184 b(0.9964)164 b(0.8889)538 2045 y(LR)m(Opp)o(y)20
b(93.4\045)f(FMN)1222 b(DMS)184 b(0.9899)164 b(0.9422)538
2137 y(EteRN)m(A)19 b(ensemble)h(design)f(01)h(\(L2\))857
b(DMS)184 b(0.9935)164 b(0.9917)538 2228 y(EteRN)m(A)19
b(ensemble)h(design)f(02)h(\(L2\))857 b(DMS)184 b(0.9650)164
b(0.8977)538 2319 y(EteRN)m(A)19 b(ensemble)h(design)f(03)h(\(L2\))857
b(DMS)184 b(0.9215)164 b(0.9130)538 2411 y(EteRN)m(A)19
b(ensemble)h(design)f(04)h(\(L2\))857 b(DMS)184 b(0.9145)164
b(0.9482)538 2502 y(EteRN)m(A)19 b(ensemble)h(design)f(05)h(\(Sparse)e
(5\))686 b(DMS)184 b(0.9835)164 b(0.9616)538 2593 y(EteRN)m(A)19
b(ensemble)h(design)f(06)h(\(Sparse)e(5\))686 b(DMS)184
b(0.9889)164 b(0.9822)538 2685 y(EteRN)m(A)19 b(ensemble)h(design)f(07)
h(\(sparse)f(5\))698 b(DMS)184 b(0.9452)164 b(0.8044)538
2776 y(EteRN)m(A)19 b(ensemble)h(design)f(08)h(\(sparse)f(5\))698
b(DMS)184 b(0.9752)164 b(0.9748)538 2867 y(EteRN)m(A)19
b(ensemble)h(design)f(09)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.5389)164 b(0.6876)538 2959 y(EteRN)m(A)19
b(ensemble)h(design)f(10)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9898)164 b(0.9867)538 3050 y(EteRN)m(A)19
b(ensemble)h(design)f(11)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9962)164 b(0.9480)538 3141 y(EteRN)m(A)19
b(ensemble)h(design)f(12)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9882)164 b(0.9109)538 3233 y(Brourd)20
b(-)e(FMN)m(A)h(1)1292 b(SHAPE)145 b(0.9747)164 b(0.9480)538
3324 y(Brourd)20 b(-)e(FMN)m(A)h(1)1329 b(DMS)184 b(0.9908)164
b(0.7227)538 3415 y(The)19 b(Re)n(v)o(olution)h(of)e(the)h(Mobile)h
(Archer)720 b(SHAPE)145 b(0.9897)164 b(0.9360)538 3507
y(The)19 b(Re)n(v)o(olution)h(of)e(the)h(Mobile)h(Archer)757
b(DMS)184 b(0.9816)164 b(0.9785)538 3598 y(Fragments)19
b(of)g(old)g(W)m(inners)g(\(3\))950 b(SHAPE)145 b(0.9942)164
b(0.9756)538 3689 y(Fragments)19 b(of)g(old)g(W)m(inners)g(\(3\))987
b(DMS)184 b(0.9976)164 b(0.9868)538 3781 y(Smart)18 b(Solution)1385
b(SHAPE)145 b(0.9903)164 b(0.9883)538 3872 y(Smart)18
b(Solution)1422 b(DMS)184 b(0.9942)164 b(0.8834)538 3963
y(Lump)19 b(In)g(My)h(Throat)1235 b(SHAPE)145 b(0.9529)164
b(0.9545)538 4055 y(Lump)19 b(In)g(My)h(Throat)1272 b(DMS)184
b(0.9904)164 b(0.7225)538 4146 y(JP-14-0-17)20 b(\(FMN-SBS)d(II\))1046
b(SHAPE)145 b(0.9441)164 b(0.9762)538 4237 y(JP-14-0-17)20
b(\(FMN-SBS)d(II\))1083 b(DMS)184 b(0.9827)164 b(0.9684)538
4329 y(SBSII-2)1589 b(SHAPE)145 b(0.9177)164 b(0.9057)538
4420 y(SBSII-2)1626 b(DMS)184 b(0.9570)164 b(0.9093)538
4511 y(Mod)20 b(of)f(Quasispecies)h(design)g(Fragments)f(of)g(old)g
(winners)206 b(SHAPE)145 b(0.9422)164 b(0.9724)538 4603
y(Mod)20 b(of)f(Quasispecies)h(design)g(Fragments)f(of)g(old)g(winners)
243 b(DMS)184 b(0.9649)164 b(0.4340)538 4694 y(NUP)-7
b(A)m(CK)18 b(design)i(01)1231 b(SHAPE)145 b(0.9675)164
b(0.9706)538 4785 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1268
b(DMS)184 b(0.9858)164 b(0.9842)538 4877 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1231 b(SHAPE)145 b(0.8283)164 b(0.5124)538
4968 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268 b(DMS)184
b(0.9225)164 b(0.4406)538 5059 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1231
b(SHAPE)145 b(0.9465)164 b(0.9102)538 5151 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1268 b(DMS)184 b(0.9987)164 b(0.9978)2672
5333 y Fb(Continued)20 b(on)f(ne)o(xt)g(pa)o(g)o(e)p
Black -133 5542 4185 5 v -133 5642 a Fe(8)p Black eop
end
%%Page: 9 9
TeXDict begin 9 8 bop Black 2247 -253 a Fd(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 2703 43 a Fc(correlation)h(\(a)o(v)o(eraged\))
519 135 y(Data)g(Set)f(Name)1347 b(Data)19 b(T)-6 b(ype)78
b(proposed)96 b(QuShape)p 481 166 2920 5 v 481 166 V
519 230 a(NUP)-7 b(A)m(CK)18 b(design)i(04)1231 b(SHAPE)145
b(0.9990)164 b(0.9898)519 322 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1268
b(DMS)184 b(0.9995)164 b(0.9657)519 413 y(V)l(iennaRN)m(A)19
b(design)h(01)1162 b(SHAPE)145 b(0.7068)164 b(0.7119)519
504 y(V)l(iennaRN)m(A)19 b(design)h(01)1199 b(DMS)184
b(0.9524)164 b(0.5016)519 596 y(V)l(iennaRN)m(A)19 b(design)h(02)1162
b(SHAPE)145 b(0.8846)164 b(0.7067)519 687 y(V)l(iennaRN)m(A)19
b(design)h(02)1199 b(DMS)184 b(0.9773)164 b(0.6991)519
778 y(V)l(iennaRN)m(A)19 b(design)h(03)1162 b(SHAPE)145
b(0.9866)164 b(0.7357)519 869 y(V)l(iennaRN)m(A)19 b(design)h(03)1199
b(DMS)184 b(0.9806)164 b(0.7832)519 961 y(NUP)-7 b(A)m(CK)18
b(design)i(01)1231 b(SHAPE)145 b(0.8479)164 b(0.8934)519
1052 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1268 b(DMS)184
b(0.9871)164 b(0.9948)519 1143 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1231
b(SHAPE)145 b(0.8883)164 b(0.7229)519 1235 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1268 b(DMS)184 b(0.9475)164 b(0.9425)519
1326 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1231 b(SHAPE)145
b(0.6236)164 b(0.8557)519 1417 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1268
b(DMS)184 b(0.9437)164 b(0.9545)519 1509 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1231 b(SHAPE)145 b(0.8638)164 b(0.7790)519
1600 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1268 b(DMS)184
b(0.9835)164 b(0.8958)519 1691 y(V)l(iennaRN)m(A)19 b(design)h(01)1162
b(SHAPE)145 b(0.9422)164 b(0.7428)519 1783 y(V)l(iennaRN)m(A)19
b(design)h(01)1199 b(DMS)184 b(0.9710)164 b(0.9098)519
1874 y(V)l(iennaRN)m(A)19 b(design)h(03)1162 b(SHAPE)145
b(0.9845)164 b(0.9231)519 1965 y(V)l(iennaRN)m(A)19 b(design)h(03)1199
b(DMS)184 b(0.9950)164 b(0.9144)519 2057 y(Fragments)19
b(of)g(Old)g(W)m(inners)g(\(4\))933 b(SHAPE)145 b(0.9743)164
b(0.9742)519 2148 y(Fragments)19 b(of)g(Old)g(W)m(inners)g(\(4\))970
b(DMS)184 b(0.9932)164 b(0.9890)519 2239 y(GOOD)19 b(SOLUTION)1225
b(SHAPE)145 b(0.9518)164 b(0.9355)519 2331 y(GOOD)19
b(SOLUTION)1262 b(DMS)184 b(0.9840)164 b(0.9714)519 2422
y(Mod)20 b(of)f(Quasispecies)h(design)f(Fragments)h(of)f(old)g(winners)
g(v2)113 b(SHAPE)145 b(0.5981)164 b(0.6670)519 2513 y(Mod)20
b(of)f(Quasispecies)h(design)f(Fragments)h(of)f(old)g(winners)g(v2)150
b(DMS)184 b(0.5231)164 b(0.9051)519 2605 y(Combo)20 b(-)e(impro)o(v)o
(ed)1270 b(SHAPE)145 b(0.9483)164 b(0.9111)519 2696 y(Combo)20
b(-)e(impro)o(v)o(ed)1307 b(DMS)184 b(0.9960)164 b(0.9854)519
2787 y(EteRN)m(A)19 b(ensemble)g(design)h(0)f(\(sparse)h(5\))698
b(SHAPE)145 b(0.9528)164 b(0.9265)519 2879 y(EteRN)m(A)19
b(ensemble)g(design)h(0)f(\(sparse)h(5\))735 b(DMS)184
b(0.9814)164 b(0.8917)519 2970 y(EteRN)m(A)19 b(ensemble)g(design)h(1)f
(\(sparse)h(5\))698 b(SHAPE)145 b(0.9179)164 b(0.9152)519
3061 y(EteRN)m(A)19 b(ensemble)g(design)h(1)f(\(sparse)h(5\))735
b(DMS)184 b(0.9547)164 b(0.9228)519 3153 y(EteRN)m(A)19
b(ensemble)g(design)h(2)f(\(sparse)h(5\))698 b(SHAPE)145
b(0.9322)164 b(0.9145)519 3244 y(EteRN)m(A)19 b(ensemble)g(design)h(2)f
(\(sparse)h(5\))735 b(DMS)184 b(0.9506)164 b(0.9029)519
3335 y(EteRN)m(A)19 b(ensemble)g(design)h(3)f(\(sparse)h(5\))698
b(SHAPE)145 b(0.9961)164 b(0.9217)519 3427 y(EteRN)m(A)19
b(ensemble)g(design)h(3)f(\(sparse)h(5\))735 b(DMS)184
b(0.9965)164 b(0.9216)519 3518 y(EteRN)m(A)19 b(ensemble)g(design)h(4)f
(\(L2\))858 b(SHAPE)145 b(0.9967)164 b(0.9172)519 3609
y(EteRN)m(A)19 b(ensemble)g(design)h(4)f(\(L2\))895 b(DMS)184
b(0.9895)164 b(0.9782)519 3701 y(EteRN)m(A)19 b(ensemble)g(design)h(5)f
(\(L2\))858 b(SHAPE)145 b(0.6165)164 b(0.4973)519 3792
y(EteRN)m(A)19 b(ensemble)g(design)h(5)f(\(L2\))895 b(DMS)184
b(0.8898)164 b(0.8574)519 3883 y(EteRN)m(A)19 b(ensemble)g(design)h(6)f
(\(L2\))858 b(SHAPE)145 b(0.9795)164 b(0.9049)519 3975
y(EteRN)m(A)19 b(ensemble)g(design)h(6)f(\(L2\))895 b(DMS)184
b(0.9885)164 b(0.8338)519 4066 y(EteRN)m(A)19 b(ensemble)g(design)h(7)f
(\(L2\))858 b(SHAPE)145 b(0.9676)164 b(0.9730)519 4157
y(EteRN)m(A)19 b(ensemble)g(design)h(7)f(\(L2\))895 b(DMS)184
b(0.9512)164 b(0.9526)519 4248 y(EteRN)m(A)19 b(ensemble)g(design)h(08)
g(\(con)m(v)o(entional\))523 b(SHAPE)145 b(0.9904)164
b(0.9249)519 4340 y(EteRN)m(A)19 b(ensemble)g(design)h(08)g(\(con)m(v)o
(entional\))560 b(DMS)184 b(0.9947)164 b(0.9326)519 4431
y(EteRN)m(A)19 b(ensemble)g(design)h(09)g(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9413)164 b(0.9193)519 4522 y(EteRN)m(A)19
b(ensemble)g(design)h(09)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9930)164 b(0.9218)519 4614 y(EteRN)m(A)19
b(ensemble)g(design)h(10)g(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.6075)164 b(0.8549)519 4705 y(EteRN)m(A)19
b(ensemble)g(design)h(10)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9651)164 b(0.9046)519 4796 y(EteRN)m(A)19
b(ensemble)g(design)h(11)g(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9865)164 b(0.9857)519 4888 y(EteRN)m(A)19
b(ensemble)g(design)h(11)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9881)164 b(0.9845)519 4979 y(W)m(ild)18
b(Cross)h(-)g(2)1400 b(SHAPE)145 b(0.9936)164 b(0.7966)519
5070 y(W)m(ild)18 b(Cross)h(-)g(2)1437 b(DMS)184 b(0.9957)164
b(0.9414)519 5162 y(Mod)20 b(of)f(JerryP70)1329 b(SHAPE)145
b(0.9583)164 b(0.9068)2653 5344 y Fb(Continued)20 b(on)f(ne)o(xt)g(pa)o
(g)o(e)p Black -152 5542 4185 5 v 3991 5642 a Fe(9)p
Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black -133 -253 a Fd(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 2722 43 a Fc(correlation)g(\(a)o(v)o(eraged\))
538 135 y(Data)g(Set)f(Name)1348 b(Data)18 b(T)-6 b(ype)78
b(proposed)96 b(QuShape)p 500 166 2920 5 v 500 166 V
538 230 a(Mod)20 b(of)f(JerryP70)1366 b(DMS)184 b(0.9960)164
b(0.7095)538 322 y(Mod)20 b(of)f(brourds)h(1)f(st)f(round)i(-)1005
b(SHAPE)145 b(0.9992)164 b(0.8678)538 413 y(Mod)20 b(of)f(brourds)h(1)f
(st)f(round)i(-)1042 b(DMS)184 b(0.9998)164 b(0.9901)538
504 y(Unique)20 b(Stacks)1401 b(SHAPE)145 b(0.9687)164
b(0.8632)538 596 y(Unique)20 b(Stacks)1438 b(DMS)184
b(0.9832)164 b(0.8142)538 687 y(G-C)19 b(pairs)g(in)f(multloops)i(in)f
(same)g(direction)615 b(SHAPE)145 b(0.9857)164 b(0.9698)538
778 y(G-C)19 b(pairs)g(in)f(multloops)i(in)f(same)g(direction)652
b(DMS)184 b(0.9972)164 b(0.9866)538 869 y(Fisk)o(er')l(s)19
b(Binding)g(branches)1057 b(SHAPE)145 b(0.3513)164 b(0.9764)538
961 y(Fisk)o(er')l(s)19 b(Binding)g(branches)1094 b(DMS)184
b(0.2634)164 b(0.9424)538 1052 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1231
b(SHAPE)145 b(0.9909)164 b(0.9591)538 1143 y(NUP)-7 b(A)m(CK)18
b(design)i(01)1268 b(DMS)184 b(0.9958)164 b(0.9836)538
1235 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1231 b(SHAPE)145
b(0.8850)164 b(0.8366)538 1326 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268
b(DMS)184 b(0.9646)164 b(0.8545)538 1417 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1231 b(SHAPE)145 b(0.6981)164 b(0.7560)538
1509 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1268 b(DMS)184
b(0.9497)164 b(0.7813)538 1600 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1231
b(SHAPE)145 b(0.7580)164 b(0.9667)538 1691 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1268 b(DMS)184 b(0.9234)164 b(0.9888)538
1783 y(V)l(iennaRN)m(A)19 b(design)h(04)1162 b(SHAPE)145
b(0.8825)164 b(0.8842)538 1874 y(V)l(iennaRN)m(A)19 b(design)h(04)1199
b(DMS)184 b(0.9937)164 b(0.9872)538 1965 y(EteRN)m(A)19
b(ensemble)h(design)f(02)h(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9477)164 b(0.9561)538 2057 y(EteRN)m(A)19
b(ensemble)h(design)f(02)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.8835)164 b(0.8607)538 2148 y(EteRN)m(A)19
b(ensemble)h(design)f(04)h(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9796)164 b(0.9433)538 2239 y(EteRN)m(A)19
b(ensemble)h(design)f(04)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9903)164 b(0.7494)538 2331 y(EteRN)m(A)19
b(ensemble)h(design)f(05)h(\(sparse)f(5\))661 b(SHAPE)145
b(0.8986)164 b(0.9915)538 2422 y(EteRN)m(A)19 b(ensemble)h(design)f(05)
h(\(sparse)f(5\))698 b(DMS)184 b(0.9937)164 b(0.9961)538
2513 y(EteRN)m(A)19 b(ensemble)h(design)f(06)h(\(sparse)f(5\))661
b(SHAPE)145 b(0.9553)164 b(0.5474)538 2605 y(EteRN)m(A)19
b(ensemble)h(design)f(06)h(\(sparse)f(5\))698 b(DMS)184
b(0.9612)164 b(0.9208)538 2696 y(EteRN)m(A)19 b(ensemble)h(design)f(07)
h(\(sparse)f(5\))661 b(SHAPE)145 b(0.9885)164 b(0.9736)538
2787 y(EteRN)m(A)19 b(ensemble)h(design)f(07)h(\(sparse)f(5\))698
b(DMS)184 b(0.9533)164 b(0.9637)538 2879 y(EteRN)m(A)19
b(ensemble)h(design)f(08)h(\(sparse)f(5\))661 b(SHAPE)145
b(0.9738)164 b(0.9753)538 2970 y(EteRN)m(A)19 b(ensemble)h(design)f(08)
h(\(sparse)f(5\))698 b(DMS)184 b(0.9775)164 b(0.9060)538
3061 y(EteRN)m(A)19 b(ensemble)h(design)f(09)h(\(L2\))820
b(SHAPE)145 b(0.9765)164 b(0.9359)538 3153 y(EteRN)m(A)19
b(ensemble)h(design)f(09)h(\(L2\))857 b(DMS)184 b(0.9843)164
b(0.5745)538 3244 y(EteRN)m(A)19 b(ensemble)h(design)f(11)h(\(L2\))820
b(SHAPE)145 b(0.8987)164 b(0.9365)538 3335 y(EteRN)m(A)19
b(ensemble)h(design)f(11)h(\(L2\))857 b(DMS)184 b(0.9417)164
b(0.8063)538 3427 y(EteRN)m(A)19 b(ensemble)h(design)f(12)h(\(L2\))820
b(SHAPE)145 b(0.9790)164 b(0.9616)538 3518 y(EteRN)m(A)19
b(ensemble)h(design)f(12)h(\(L2\))857 b(DMS)184 b(0.9649)164
b(0.9511)538 3609 y(UUU)19 b(/)f(GCA)h(T)m(riloops)g(\(Round)h(2\))864
b(SHAPE)145 b(0.9889)164 b(0.8104)538 3701 y(Uracil)19
b(in)f(1-2)i(x2)1360 b(SHAPE)145 b(0.9749)164 b(0.9665)538
3792 y(1)19 b(U-le)o(g,)g(1)g(A-le)o(g)1347 b(SHAPE)145
b(0.8023)164 b(0.6919)538 3883 y(Bonus)20 b(Army)1451
b(SHAPE)145 b(0.9743)164 b(0.7612)538 3975 y(wisda)o(v)o(e')l(s)19
b(2nd)h(round)1220 b(SHAPE)145 b(0.9796)164 b(0.8770)538
4066 y(C)19 b(-)f(B)m(A)m(CK)1521 b(SHAPE)145 b(0.9705)164
b(0.9441)538 4157 y(Beauty)20 b(in)e(Balance)1288 b(SHAPE)145
b(0.9879)164 b(0.7477)538 4248 y(V)-8 b(ery)19 b(Lo)n(w)g(Entrop)o(y)g
(\2410.6)g(T)-7 b(-B-C)18 b(#5)845 b(SHAPE)145 b(0.9745)164
b(0.8384)538 4340 y(Impro)o(v)o(es)20 b(on)f(Quasispecies)h(UUU/GCA)e
(T)m(riloop)454 b(SHAPE)145 b(0.9849)164 b(0.9971)538
4431 y(sta1)1715 b(SHAPE)145 b(0.9954)164 b(0.9117)p
Black Black Black -133 5542 4185 5 v -133 5642 a Fe(10)p
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
