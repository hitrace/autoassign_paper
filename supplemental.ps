%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: supplemental.dvi
%%CreationDate: Mon Nov 17 17:38:50 2014
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusSanL-BoldItal NimbusSanL-ReguItal NimbusSanL-Bold
%%+ NimbusSanL-Regu CMR9 CMMI9 CMSY9 CMR7 NimbusRomNo9L-Medi
%%+ NimbusRomNo9L-Regu CMSY6 NimbusRomNo9L-ReguItal CMSY7 CMMI6
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips supplemental
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.11.17:1738
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAD7D2ECC69471E
2E0BFFD4778A2E21C19645790DD11C5A93C1C33BE13B6A35DA4487D9EE9B38A4
1B2049FC64E228D7319ABCDFA4A29B08A08DD8430B4EC67FA6ECA214DAD0BE07
680225415ACA2FC86CFD32CB6210B93F60CB7A2A2959DACA9F8C687C1205E017
F6EA82A4848CCAE33228E1E6E2034652553A03E1341025B4F50E8120F8B23987
4FFE2072A731070FFB5095F90DE1D3230BB98D2190912BBD038F21047D0019EC
277F35014DC7DCEB4DDDFFB4612C0862322F6714804141805DCDB4DF615E2CB6
4980C415B399C243978F660F023AADD86B025FE51B8D9481AA5DD8D1A6BA4453
2245117DF5BF0C4F6527B2A51C2974914930226DED7E77A8B4E0B5182C1F9F01
C677EE3F7513729865761E9A49C5275E66B11394A9468B30AB81F677461C61D8
B3624F4EEBC57CE06AA9A9C2805F46DD31F1B1DEBF5A230721E51750128367A0
AA72945C949104035D601CAC8F4EB2F16F8765614227C71C390C32ED5A690A77
6E288BEED7010ADB1076B23257F94841FBF7CEFC601FEA3FC202C8478B0E1C44
B0D90C20DADD09A5E54B4E5F84D18147590E054B70E3F30CBA547A0EEC06C030
DC43B2245F9D24D31A31F06EBC6577C4C2E9AAB40061A6764E557CEC87DB572A
42B4F49F6357021F6B56DAEA3577DBB01E39FDA69C81621E58EB3432279EF8F6
94AFDE8C03B25BFC2B5CDD2591517589BAAD70364C33665F90E24D35581DA77D
776D1F943551940DE4888AAD7232E4346A5BFE8DA3DA8F90AE4A346B1573B9F0
2724722B9B749AFD87E637298E2FE8B89FDEF364C224B3C87F241CABC4F99545
5BDFC8B2F0D6755D8F7F5A6F1A68BB974C12EE5E31D9C2C1A139680095425AD8
B4DCE63A5845CC77126DF2D93AC2027A88763A7F0AF2DD0CCE40F2CEFD4D785A
4320B491DCE3489FA322F968E512AC8A5FB7C4DADB77BC4F4954ABAC17E8B0DA
FECBFA23611B7B354AE32D9B908A72B8B06E2C699D6AB75FFE0D0263598C96F6
B3132A7760C13A25D4F58FC0C20BED7AE3AFC8DC8E8FA28C5262CBEAE15984ED
81596EB2039CC1A9D525BA7A7A768871675D0C203DDC23891E5340E340AB49D6
CACF97B0D86FF2BC399BEAA86FF6D34DCF21BCB4620BA6E71CF9EA41C7E5BB38
F4B350CE6F8424DD8BB8FE0AF47722E48B590F4D9D412F7DCF5ECC8387767125
358DB0794BE8A1719A90CEC4BA5A6E2F7097EBCA2387F92A4B74262D7729B2DD
45824839717614242357FFF7AF3CDADCE2FE6D5B7E562DBDCF13F0603C215A29
9C3D4F7F4116B07F1625707CFFDEDD5CD672101B470A6263805542515AA19B5E
0E9FA83A47EBD0680B74207F0434C9599D055D786DC25523AF3CDCDBB0D96F60
F6ED768BD87C1806BB162028CF9D79ED3D53D4B5C232674A9840F94B9CC17028
4FA71225B2BDB257733811FE1F00D6221A3F0677E7155A03A55E5E24795E241E
6A95AA4017DC05940F32250DC3AC668888D2559750B2FC25423470B9D3B0C902
A7D952D8E491A4DC9EB1F79F2E67992DD013E75358392AFDB351BE7DC517F403
076BC8897E6A8D5B3683C9BF396E8184FAA7132BE44229304ADC8A686D6732B0
207BF2EA019F2C7C5F905227DA1EB25BCAC303AC954222B4F6D08F50AA5451B1
52FD3D69260E987A7011ACD09B7C7CBAEA88826B998EF4993A3F7AAC4D901E5D
90094EB79BF159D52808E0C400B9BF95431BB5AF78111F05A1CBEE181912E3FA
83E5FDDFE871D7CA53FA5D8F6D4D5096214B9EF03C8EB870C016A4C4FE5364F7
E40EF37EAE40DC484BC565C093AE790DCE337B0324149A9C6A48C7DD6A92E7E9
BAD4EE914F7F18719401A2C6C4A22D0B3D5B1AC263170C07ED7117702FB18E65
A190D7F0771A82F52EC47FE77253FC7A103C4CEDE64943D727A13564FED532B7
95F543B7442BFE8902969E8F525CB1A9F84A51367B6B0B2C69505E545CE97127
FC81486D0683024E916430F6697898F739D55E1AB926E5F1230538D96AB2484E
A11D7BAE469B4494F7BB4331B6B2E9F6E868823771EA8E28006A4C9BCD0BB25E
144CB990A1F91618595AB6D539A3AB5D13CB0500106B9ED5D16E0B45FDCB6775
C94F942C90D9FC0115D85BD7B8DDE271A0D13042DBFABF4124E048782F415DA1
00ED3759D056E3F40CBD30907F06CE2FB5827F840576BC0A55717C052F06678F
15F8E90B351B015320794A89E84C34F32B465E2017E8E4217D2B46589A60E0DC
CF6D71323A978165FE475C03130797203C142323DF0F8666D6A0B14F8C3365B6
4FE43B3A1E4F7D4A024217CDB9933A718F0E6D91F1BF332D5EB49BE21977146C
8872ECAD4D82A933A8AD159A270497C44D0C5D34FC406C877AEA43141AF56418
D7159784008721738B5C8C1DF1CFD26F72EFA688B4D482463AF0C7487FD386C8
1AA230D10F40F273C3FF139C49E305763F08DA29E18492BF19033369195430B7
008EA14C41EBA75D41C7B997E60ADA11E53095EB86B8BF729B4B7467486C673E
FC9F867CFA5CFA86B7E717F3ED85E49FBF0428125639D0F9FE44C80CAA8DF74D
54DDF7FBD46D78D457CD1912F93210F985EEBABF3DD73B968D7E025311BEA11F
D3D09B4505AB49C9265E8ADFDB8B4CA7CD4E69E70AB0073D6C92F7BBB1B4605A
00D65EEBA914A515BE7F74FF21BD3F4C23C506E32204ECBD388285D682648368
89EB987631BDC7A04E9387E3E188F2F5C21CDB95994F56D69D659A21527F91F5
F20D556E956F19270A4455D81D6734B038CAB1FBD0396565316179A6F61EF486
5326D578EA9315FCCA90D78E299DDD66A941CE305961546D0AF86A2E4551DDF8
447E2850774583E5C73690942363BB8BD4D92DACE0A7B4068772E5278DC12151
83569207CD569E5C6147F75B3A9B3DE7E230CC48F8B901580D5AE4E6BF0D1AAB
8077E21BE3E767CA6BFC0A34AE5F517A7FE8C30572AD06D6EF7B0ED471DB9418
11E65A7210A1728D0742EC26BF11F977F0A82869341D6788F2FFB789F812D056
5F4BC740AEF26EFE447E2C686551C6B3D02964A9D8352191AFBB572C2D61BFCA
9981C1602259E6390F359CF18F039F3026354F553B14CB4A17D968CF0EE33427
2D0C07FAB282082DED26D9EFE8E76815C389EB932443AB7C855B75672B3C0022
635959DF14405AD0EF2B7E4FB2E203561018F0CE7CB1F9224B1464E2EAA7C8A7
23BC408CE4A039F7672A114471A861F64C9FB4E235084327EC024E40A9EEFC59
B085054144022BE6620E3BE3BCFF07C029D465A57DA7EC16B98745EF82404447
C87ED40706A2A3339854CAE8FDAD510D721956F7200EAE8F93ED95AE429D7CC8
C42A1206FAE8F5F752A36C01D95CB3DB66B0161829431D8501375F86F04D17BE
7FF0A470E148E378FA4FF8BE90E9E9BAFE9E1DABD0FD2A9D6897511B2022AE96
1289B625E7414F0DCBE615256B9D16200D36615072FE170D993F727ACDCC011C
DA31C45B7C0F0BF79744EA65E3F189E28727C3C1B0E9FD60A790C43029D0B451
36298E4A8412466C68C4F61D4DD5C126E5BDD170408D11B9AB980A7EB499C449
F3E12336AA510607C8D2624E694563D2841A4307C0265F9616A994F5C939189F
47A26AC917414CB461C9637A8786113506ABF455AAF8797624292BC4B949EC81
BCF89071C9EB5BEBDECCA6529F5AC43E3A2A237E763DF275C1279A13E6F38455
21A1174248F458F0B46C30A3AA503426BF1013B7434F5E37195F90D1083DBB97
DFC14A3CCC7FB0F63F596F1D5953303B05CB44DC92FDD700F57CF8C3ABB4FA93
F6729409A19BD399E387F53313B6F7C03EFA62929AB082D3999F1F051A4F3EE3
816DFE0042A6FE78787F58BADC555585CCADD4BB22BE994C8BE69D6734E477E4
59B9F388C30FCE16ECF8899BBEB28AB8730F0F4D153C018DB98A800DDFBC580D
D5397001C7B97F6F336E758B1B71C61066D51D68101C1BA9BDD29CDEEE7C7E24
FCD74442986D9C8A06C00BF282B93E1C37739E6189A88606473A0C74CBD62AF9
87C9074C50D65665E065DADBF514DA09934CD93AFE810390E9CA79F4D0CFB5F9
C44E2C537CC0AF4C48C199E9782A1E54042ED8855F3D5E9ACFBF5A658832D462
D39FD27FA5C17B7ECD8A92B9ADAEC8C69AA2BE70170825BD62D9C1729F65C269
96C69E6486DEE35F247C439B8FBB696FD3C24AD339181124180169F3AC7E7A19
D856576916A327CFD6BA64E896EDB2ACF366069ADBB1B9CA71D375C7016AD9EA
30214411A8EC22E6D306A76C391F9759AEB81F60A14440DB21AAA7719EDCFFA9
27B9976CC8974665D6D3DCAA1172A04E445A281AF2607DBFFDFABDFCE3555BD5
AD0D67B9DAB26FB40C629DFC98E644F5AFF9BDE7F1408D1F434E3FF24D031800
7B759391DA5AE8EB379A0C374F1BB5DC96B5B927F693F3506D76C9184F8DAC53
90F2F43AA3B9AF63A2DDD3A44E4CF388DDB70D0535D76F15C47344F7F087692E
1CA20A680F0DF3DEB82BFD66B4F1C59328ECF8A0BAC70B0450588943DE555534
E31418C4E4B67265585161DD46B8A044DD445B8413954A6C181D61D7971649DC
9608442D234E87B1C39D7B72303BEF64BD01A6BA8965E3BC0874039470AB20D3
78662C8005169666AC6207D5DDD9206A3814C7FDB09D1CBB17BFB9BC73EBA052
FAA5311407ADDD4BDB10613A860B1360E4B70F8524CB12BC34CD34C3251813CE
12B7620D9DEE2D6BCB026EE9EEA1CBCD4AA143C9D5F48BC15D9DD4B45CDBBD27
A3E75A8DED52D40A9D3BD96B969C8038FDCDA35C428AEE554903D3BCA3A99448
0430B3817F4C85C72C49382C03778F67FDECC3DB4BBF0897CA4B909C83B6229E
731333107A831FBE6A6CAF1BB6D934295DDA30750CE0FF1D61A3392B13C2BAA4
F2EBC705FD27CD6D252E786214FDE117584140381D43F8F39618E4F572819FA3
C724FE075677C61515D91B86093F401F42165F0D5442364341BFDD5DED06932D
5C8B83FF8F16ED7860E2AEC4E5D7ABD94719F604EA68B1108EBB5BEBC3EF465B
DD213CEEE1288588CD52CB0178E37213EB4B15F2817F78CB4238908072C47C3B
4A2404A102FEBB173400073C21AA067BCC5CCBC4A7C3D0AD578D0B0451F2767A
6BF81C8DFF62939B8A1306AA74484117CE5D847E287F626830680703803F3934
6F9156826750A779DEC0047602E7D7DF04F5A3EC7103BDE77ADE41E32326604C
59CA016127709AFDBE73113298371228B82129BE4B0CA0D614270C0F460F84A2
5F7DA6404DCE156C876E12918275E17D900F620D2C08D1FE8B52B6439032D4D1
BCD52F450A808F8741C594FFC9878D2F97D0E3E90D2A67590CDCE8F0ADF27A28
9ADD4A9209DE8A4D5E8A5FB11D40D48806F82B4B5A54301DFEDF4482D8508A5A
BF80A50BB8D053EFA6E8C45BA8FB7D7D91AB2AF53C297A795976B7A9FA607CFF
3D6CBEE77CF13B4BE73E9CC292F791A053937CC50CBBC62A28EA9AE7ACECFFFB
3A226AE4E251F1FC213C6C3AAB962CB9E16A240013CDB4F38DF570E3B1EA7136
15FF4B2EBA5E902D9C5ED30617417F403ADD5B290C2BBB84231E6BF13AB85DCC
12A3A8B9AD5994E179D72AB4697325536F506606366AF6E50E03D6605F4A9889
4C6FC98CB112889DD3B16E3C2BF4191D7947DD3A94669BC1E5BCE6D4AF2E318F
2058F294D236578CFFBE68A637F825EDD7CE0EAF2EC676BF0059B715DD5462BA
30DE7F168AC3EE99ECBF8E6C60013B38F49C5F4D443468204828BE842146ABFA
137726E88C5405668BD979D0E189113DFA3E58651B2FA8827ABE229BA994FB4A
0185E3855CBB26B02365A1B2AEB8ACA51B5C0CD59F19CAAE0B28C6DE0975A2DD
250FBD151440F4C5CD454FC67C6D401A3C6E6B8B93E5E8FC0CC4A121C38F9927
527A4AAC3AC93CAA6A6B70113D5EE7B15C46E393933D2C0C9B6E55C1634C0612
DC00F8BD0C2BB9CB469277A4EEBB434FAD09E297D67686226BE565D6AD0D9482
CF1D735717141196B0C9FAE3391095782AFC3D84143127B8CF9F9801D5D8423A
4B836B0196960CA58A51705171C197F78AE62F66986E23FCC0B2CA47DE26DE43
2ABC8F695E5E31DDE304F2498F905D1D74E554B61CC07CBE503272B5D63FDF71
131FFF47E4533DA66CD991640317676CE49FA34EA77677BC935500722066F025
C1104FFC325A98403D1E060B20BC8498014FC6AF9154768BA86963E94FDD8DEE
A590BF99760E2DC5ECDFCCE4922C000B053453CF404D3D2A68B2366102ABAD3D
8ABE1CFB0A9DE45E6CD681C0486C57E52DD412FB66F40610C2299F6C60070239
8C40172F4F29103848B76BE67D51ABE9ABDF14ABDD50CC6213EEDC75C8890DBE
CB670000924D3BAE8E782D1DB2ED5B28AD0CF0A7C36886429F9D70DA0C55A9A6
82334109D6F3AB7D037E509C5DA4A954235A57F0F59D220AB2075FF97C68768B
4435372423C4BAF6A443C80D8039ABF1E9B1553BC56666646FB94D3EAD77C5E8
835253E6273F7A28A16A343214089692C8B5C2BD542B3D428FD0A6BDFA633EAD
07643CB2C30CE907623303ADD601D9B3F89EB9096FC4300D038C9F0C47B7DD6F
3FAE90FF2E8A7443CF84F332FB505DB3A32B284C08E9ECA92359768840CE7CA9
EA568EC57FBD9367157045A9FCC007F910998AD4AE32FF3F963F38778E9B281B
3B55C2F4209D4105814FDEB6EC993284216044467BAD7A3C7548142641BBB3E5
F45F9C0A72C779BF938BEA36CCF55857DCF15D0207238E2ABF7760B66BC25ABD
6F5CF1970A0A4687354D1A79F6E9B380A4E44A4349E2078FFE692AD2C05030F2
023280667B73837F09C5C8F625EE3ACEB484A773A38D108AAF231FCEB77E1CBD
F8774E9941C942A3DE68E7ADF63380B2532AC82E158399081230E22C244EDB96
BC6230AAEAF8D502B081DC1413D36DB0CDA4CC303851EA327DAF7EEA27D53EB3
5BCF9644D7DF3004B541D884187B0132CDC1B03813352F6D7560006E34BE4AB0
229C418900A11972D083B4EB0E3EC1D4841887E24D9D55823EBD0D9B1EF8B6C4
D6E02D1977F14D5373C801BCE68400C6706D29DFAE6FEAE635BAED78B9DE71BB
BF60DBA7F83BD336E95C04C087434725BC97B5CD717548A7E6A6BC909085F2AC
AB00F8A4B1DC58421B009BF9B0C16328F899BAF12FB4465C134AE05A8C8B816A
1B31232CD447BBD4AB071A858A64BB7ABC84950D0D259D91C00A3DE3E7C1DBA6
3F7EADDD11722D71E2927BFF86CD894089DAD26B8BD89F7C7F13D6CB0D46F9EE
7C16863C05DB9FC1E7A456574261A6346D259DBF58118D91BDA0C07D9FC8E734
475DD6B32B01D9E6664A60C64E0C92F728DBA34745F1B6E46DE2B6EAB70F8902
E1DBDEAE57399AEF8C6CCAFEC96284154355D91B2E57AD9A9D7EDEF2807193F1
840FE8510CC21D9EE1FF6B17D365BE09C93146F8482766F101824B7CBDD93FEF
61B502E510A2417144DFA20825CA5E90BEF5D52F505268BCBCD26DA54CD24057
AF6BA25D026D0EF4595A481F094E091F33049DF1D74187A7153799FEA8243FFF
491CD78D4AE77D2CF3117E79E8DA959B0FA790EB2B6ADEC3E22F3F435420037D
BAE1372ED123EB8B1379B972E7F1EED862B1BB4EC660419282D68BD80462E8C5
AAB3AADB0C82FF394717EFD48403736362C71A971AB84A47819504747A903A29
76859186B2F116304931B916B538DCB2D1C72E2F3DE9F59C4E653521FA1A0003
2D1734A5C19F1EE32DB06071BEB41B45EB05780D3C0B22E73E9CDA2A6237005A
4EA675896F1742FAFB5F587BFAC8E71E5C29DF4B517EC49207E25257117A9F66
47E8EADE34107EDECC9597E41936261336124C518BB57BBB9B50D232448B1809
00B5491F4F74A1F637DB80C8406C58FF0958C8137B9028C32F8424C1CEAF24DB
36B92D0F1DC862917B4C909A33F5928A3618BF5B3E26B09FC7027283A08DBFCB
7C24AC83F725E99D43AEAC617A9C85877D256CFBC7DBF21FC9234F6A983D7856
0E3FB858041DF286EBEED7776584224BA2B42DEF65DE77263CDD8A4BC5DFB670
A5800B4FEDC4A92702D2C69283FDF45E9311084A3248961C518C5219F3FFD269
E258E44541163DDED8AA9C008C557F5552983B17454725406AD77093079172C8
AACABC4FDA5FBEB3BF72F8412B92738050D50DE395A24B30B0C1B95C657B39B7
9E7452B9CEDC9A72E526DFF66FA49FEE02F1C2047A83D806288A4A4655AA8F09
EB8C8E372E359E03A30A20998E85487F0B132DBCBFE4677E0ED991B725AFEF14
571BBFD54DCC42DC48DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463B1AFEE36C1C3B9E85BD54EB70431575E
BF28ECC41A6A0A5E89FD2B68A2F70C638789E364846C907E143CF1D3FC1360C1
D342C94322EEC1547E7ADF123582F655B10A77CD82EB3C0FB8C09606DFD022C0
BB2449CFA284AB052240413FEE760A8C80ABA4CBCA22DADA1349ECC4A995085D
5FE4C6E3956DFB2E804A825629F9C717C0566FB37194BE04D971C725E9C2EBFE
57C59ED52DF91DA0F614FD31A390DA1AA4AC4FB39D93C7D560D1A15C317D8FF0
E9127B1B32022FDF31B6658A1629DD84F5274618295E283C73B88C1A544E1F4D
E75D3C0369917295861E0791508620C52AA80DE83A1ED16F51836CD2D5B0173E
37632FA04912E199447E0C516F3FCD61CF880F6B9A1B6B68F3CCF0B1836A57B8
5EF68A9777EAC02B52D12EA8988FBF3E808D98373BE5A0987922E0CFAC1D8802
34216AA81E48BBFF4A9C07C17C2E8073E85DA1EF9EB934479F0419EF52FD36D4
5A5E340B8A23733983CC2EC680C49B5AFA3CF384A117617CEF422F7E209C1916
1FFCFAD9CBA9F635888C05218DCD8124F8E93E24F05AB2FA84A4AC41B34FE7F3
6ED2F1EACB243DDB6C5673A5BD6D0F4E869D0E9E3155CB94633C9CA212ADDBDC
BDDDA4E87A9EC166F0FEFB1A03D99E9A095445785C633F2214D0F5153D818501
1BE8B8BFB0A270084FF6DC5290ADE2BEF9F82014EB00C07DCD76514565D3E6DC
BA5BBF1E7DBE2303B2D7BEC29A113448784AB49BAC0E8B4E338F176479DB81F6
69BC2ABB4462835ACEE028F14B6856FCDAA0C1E49CD8D7CF9FB27DE2CE18769E
84C4A58A558A0BF3659E29AEB79356AB64F5A6FBF6CC8A06C726F2ECCF9901C6
ADA3119FC9A835C2E790709D99D116C8383398A73699600807EC37BBDD16A050
18E680CCD8C8FFAD344F68B60FD2452EA0AE98D1459C83D827FEEAC0BBC778C0
20DFBB1E703A74C6D2A22353E9B6E9AD23F9932A03467A626CD8C4A2F37B9C73
FA693298CF87A13A3A9771054905A58B78CAD093CEBAE2A1DD461A4C66C31A6E
E4CFA2D0594BB2CF6CEE942EB5C1C3FB4B25956D8E337BA0F06DEE2E80E8F216
8C1F1678AA29D3FC55C12E9985FDEE14E7AC7905C35469C03AC2983315F89589
12F2E9D29B45D1DA4F460189CA642DE07BC95A9F3687E8E4CE668EF3CFF38D4C
428F73F8083F64CD3FA005178C1F1996F20329FD9233A169A67462AD60860DE2
A5866C4731AD0F10406E1CE7BD98FA12BCD55DC6DDA50286D88B0E831B528672
C8FC60386E2ACA9C692F78A4A625CB88209129FBACAC663206661EF863BAC7B4
80775F04F8F13C63F62A51DF9C4BF6CD0454B827F42EF426AB690FDB4F246D82
0E41791BB216DD15E5C81B63D428D2F9BF42AAEB7BB718A73402A90D516109F5
65AE039A41DB1D1DA80C5ED0923B060EA6EEA5B735D0D62E41842C07B4790EEE
7E8463FFF7B0A03F7B5931AB2418F069ED57137E0B0F17C50BB65452A3175CA0
2EB794510B30E960F2CF8E1D94B5435159884E743DECBED602BF78B692CD1BB0
F246FCF1A109CCD37C2993F63B6A23D41557C62369484B1011EA7C2B87226EE6
A4C6526AE5D8EC00951944E8205963AD84F305C99A04E9DE6CF33B1F6F538914
CA986D90864BA13504A76E3B85EB914D37E275D7E86241AB753C3221383E2975
61A37D8915946798BA564700255BB741E36C51D541D23F9D26C3B65F2F15E302
16BF09F654260E23523B10292CADE8D91536505D9409059A477AABEB585706F7
D189CD11CFFB27782CF377981CE2770C546BA0DA4EC2E4CD9C1D195EB5F2CC14
8CA24C6817FFFAE58E8F3FAF0243BB8B240936004055058844E38C50DB8FAD3A
B6BF002436D9DB473B92B50842444B5390076A43C82C91B982B19D7AA8B61516
F4B93D0BF9F0BE9D277B1F1AB4D071D33132E00EEEF6F968803CA3B929414B1B
29EDB53F00CFCEF86DB4F0C65B0C367C31B7AE43ABEAD548B20FCBF595122C73
CE399E13133110C76409A0FE876FDB48FD26A2CCE2DB8A2564D4BE2E1DC38CAC
86B17A1985AE4EA1DC4722212D7ACD6961844CC35F2968EEA58A4AEBC25582DC
64BED3DFECD0E4A9D65A0489C6E7D0EEC4D907C83B3AE8959C1F6721929BA79D
23871E9ABD09A6CF8F76D6BCB794432C7959987893595434F2042E145EE3959A
700143DEBE96FE1BA4FF50B84EAE04D534A9DD234A7A83944A6A2A86BE1C538E
6B0E57BF12839DDC16CD451AEA2AA6C41677519886FDACF388834B1E6FE3BC91
7160AC31A8ED3AF8897BD16EBA220B626CAB57FFD33D3F046ABD2F6E793C31EB
F5C89965E329D5452E0E67C874B4E7EE3A8A30DB997012FE16D28F724FFC7BCB
17645EC1167969BCDDEBF9C837634AE662E06B4FAF72B3F3760F5FA35BCD767F
EE4E9808EBF05438BA86436C77BD8C8D332D0BCCD1046DD47CE6505D1BE43CE9
CBDC74E87B613542F58DBCA1007FF58CD1A3F8239F568B9ED225D9D69B658186
4E351CA800EF63554DA7E1CDBDBC5A0541FF5E194CEC0F3A909C9E8EC4F95848
CD2BC751170B446F9FC06F4B6EA145D5DF31CDA82F74B03FB31AB682BD691D38
C22CAA7DC3183309A39B71263B7C3CAEC8AC487A4BE1DA4D789E367C5BF7EDC3
6C78E30CCCCE4EEBEFA2169FA75AE50BCADCA2FE214955FAA891C7AEC18EF334
85035BD4C47EABA59DF06B021F85A111019D507A3C8ACBD7FE39F3BA2CFEF4FB
F5EBD18C5BE8703DCB70D690515B24E9456F047B15A4A96B2772BA8BA179B0D1
563E7E339A5B31AE17B3A5F26C726618551ED6F3B85C5DB458F9FDECD48E151D
BE7DB966043D6E6527DA0FBC55BD74FAE12A61E46CC1E57DD4B2A8099EC31086
9258F43B46B8C512C3368DC59AD0A0948833593ED9D2C75BD93DCDF1E518F5A5
CD297CC27C1EDE7A7513C093D52026755BB63192927CC273451A1629E9AF7119
A7DAD598FADE1EB1E6913B5581A0EE53B5B411DD335215AD4ADA1BD5700411D1
682978632F81CD33B027A0B555C3DD7B30EA5F489375024C149D0E07B471815B
8ED2A86E9AF9981B8E2C8192067B7F3554F1A92714618E5C2859E019C60337AB
62467054439A561AA5DC4379469EAC4DFECD45D6B900DEA8FA21D3D133AA272F
20A3E2A95207C970CD911060A33BFE746AD7EB5C0AA00082FFB6D0240C8E1DB2
C7480620D78DC0DD6C1C791B8A401198BEE36F584A26A205865FC9B886D23FFB
0E63790DC92C4284647137F51242C7BEEF2D574F2F1413B4C6B0A24A37242EA4
B8119A3159E06F45C84054E62F752CE3F9E90B484FC8C8D637F6F6C0136E0E1F
0FB0A3B37ABCB90CE9D7EB1913D307114496116FF0087A487EB3D23573EDF779
8A4397FC6B28F7DFB72F5895A6BD4707BBC94AE5888A7A4FD92860505B4F9128
47080C3AE7FCC667A5B810B665519E7E1450E00BB9D0279A39D79FF10136EB44
A8DE87DA279FF7D54B40F95494511717CA3493A7590E27B34C2E2E1BE2ED884C
AFD6B95DD0C1451610AA956E22BCD5AB67777E28EEF2F3B6CC3BBC829FA6CE85
05766A92A30DCF28A4BB318AE2C541568232CEF707373F07E753AE55712F2E5C
5BA35E994A095D9EE5FB336746BBA506603279BFA918D47B051AE1826675A5F7
CC5523D27FB37B08E03DB9FDEE5D5BAE73131662CFFF5E427A5F5DBB56FE1FC3
2EBC4FE38AF37D16325FB9929DEE8C2848745C4BA65FA8D1E0553E0BE93F884A
17BBB0741AC2E477F3C5B104A7F7CAF232FC4C567CFDF4DDA2908CA821367EED
D6C24748C813B80CD03A5FF4F2F80C1FF99B6E9F731B075C02424E9FC973BA68
F56BE3F01B9ECA24C6BC5028C05C0E0CEF14BBA11DB311AF2FC3780F5FD49D39
06A69157093B1AD3B796AAB073156CA0571D06A495696DF2A6B803423423E9F1
F1ABC7E3721607C98F595B50E187F9E15825F5720BA9DB4ED19128C657C8098E
D5BB7691BBF8C1F6E1B32E37B1FA6FDB0D247F4088BB9B710745EA0567811C91
634C50DD4313E4E95EF7894145D8EA94186A67B4288592F6DDE960B8D969B268
017F2AE80C7807FC42516B6F7F042EE451CC86C8D044D44BCF17E822E3957632
C560E0FA3284186CC6BA6A419BBFDEACFE4B11BFFA2063407BC29192867A182E
A420DBCE370D4B6CAFB8ACF7FCC75B4C2B5B5DE09A443023B69D70CA61B835D9
4D3ACDD7FC04E8B9D08D72EE35C67777BBD4EFF14DF5964C41E7C1935F71DA3D
923A8C474A2703715D699582240EAB4D7FA83DCC1FDF5E3BCBD7C0A3207D0096
B4C4C2A2D7CD8C4EB79EE59B43DA1D384E5EEDCA4F7197129D2FFEB06AFA7916
FF304C851624613B6287035F79024D3977DBF2FEFFC853BD05EB48DF38251295
13C4EDC47DDDA16928806F5BCE769D9033BAF9BA931D255F0C8C0036E35125E1
1CFB8F1E397508BCB97A2A875DA63F800271FBCCD9DFAAB5E93F903A8FEC0119
ED1528F7208ACEF1C8D3D84C98927D4667AFDC8F9BFFFED21BD538E1894109B4
7B0F8F4DF8B4BEE9DC1BE65EBB4F6F2AC41CA58701A844C2BBBC2A83A15B813E
BE269011AE7B55321BD67837B5ADB99010C83EABB99136A2A35D24AD6BFB635C
8C9626B4975A70EC458DA17809AD4C9D71722F062384006BD87EDC0E855D4665
ABB49ACD84779BA2DB331CE2E27C86275428D513EC9360E9A8E4608181A82500
1EE60736EAF6D1AC4D59E1980C2180824BAFBDE48BF96DE463FD137D825B83B4
66C821E7696010ED53DDBDCE98FE8812743F6BC29762954CB72AF525793AF97A
9CE3BF7714019C0AC2D2E1B347F705EA50B63CFC32207875238E9D9407B35545
0F4AD06B6664A2DCDF4356EC4F4121AE3FAD1D407B640C08D3AD5C2EA5829A51
A55C3B90C119C9E649899F6B792E6DB69F00DDB63772D73C3610CDDEC2D3CB44
45E52224510231350D1FB0FD77907AA1A42B82BC63104BB1577E917FB39C5A56
86764B5DD934BF676F7BCF8346602B0BC0EA532BC854FEDDBE444251216ED760
86C9336C38735AEDC57680F76E56AF8045C11A1FF2998D34D6EDC3DFF265D4B2
67409490BD913C1BF577330E017B29398179A60C7063FB79C9EA2E472321BC41
10782EA0A3C39785627ADD798DE75D669C59AFD4DE972C9F59377C5987F6AA04
D48A66E8FE40FE455695F50AEBF9B5263D23663D50806CB34A868352EE5B3F80
10D46D0836EC710A0A2A818D38F43510562424F1B89348178A589F8A59052A02
3F387D03AD291BC5148ADE9285F7FC3FE4A33B9775F43B9E87661EABC510DD08
07512E0EBF5662FCBE698338641BB4E92AF0B9183F250A60A7950B3939DD7709
74B3720572F045B32289A2AE66CC44A1C13FB8BBD4E184073606C3D7F3AA612E
0FDDA6ED16BF1A0A0ECAA2D7DC8C40FFCCB63412E7634D9B961EC61B17D2A847
8D3088F4D1C99603AD3F6DDB164D567CDF9FF87DFBC53EA35FABE9D92CA3A94D
0398BF5389AEC4C6EDDEE3B3CD57351CF13B7985B12A3FD6C928D99E8E49E5DC
53A25F65244C7903357BA7EF0C4FE66617E2CB07EFA3164535128A4E41E61296
B04E5CE447439AD4222B7B3B2152F5EE596AD5B76320B1CCE99209692C03E4F4
098C74E4FAF775735C0BFD12D2ADFB115BF4A08173182AE23EDB89D2CE34CCCF
4CFC655D3C5B968099C13CFDC41853F6921D427EEE0E098E8707985901423B99
58C73D306B5EA3C381205010C61B3F66C9448F9B520EA55BF8D31EBDDE4AA834
185C68A03BAB8B9E2C70F5AB4FC6B0F5A55A6A6B51B7930E51A3245840A98D21
7742053C054DEE7E8C71C7644DFD9BFF4D1535D06648E644FA847153D94C37BD
7B29290BB6860998CCFF4ABBD82A0CE46DBFC8808BD1D433164893EA2E0117AD
D3043C6613B182008C447703EE68CF292B630E0D5843C284B858E956C3B14D54
1E43DDEF61B64F73D46AB05185AE430B17BF6B55E5FB557A362A2135F902CFA9
5183E9A00F23B8CABC29E982E0F13E9CF1D70516B2EC63A0FBB191C596B83047
C1CFC22746ADFAE256888C972C02780E10327E472F8E76C520C05927A008BF1B
EDAF15FF17320C953F4A1D53077F0802F0DD44F3E394C43A6286D3534FF57225
E187E7FB20C2F0DBA35422C5179518F0072D5083CA178FBA817752FD522B4482
5CBA4D53BE7980665A358233C591D805B6D7853518F8522B9D5C229C89D59664
FF216EDE26FFE9F98963FC566AE808AE20CAAE74590B3DD20E5632ED3B5080E7
1276C60EAB7EA5B8229764EEFA7DF5DB0BC0C43B5D4AAEBE43A8BCA8CFE55830
A76C6B2480AD72FE0CEBD193739AFF370349BD6C55308AA0433C55FD41BA7529
655D0980463358A68D9B649DBC731B662ECA01E742223756C232D2146CFDC59B
B8AC4F42CF5F8726284A04AE366F0399D81AF7843E58849B007784D3F5E3A6E2
F461F4C34FCFEA86A00D258068BDCB86E75715BEE99940BD3B542DB5DF3FF3D2
306398244AD617E196C9252A0445FEF6D2612412BFB5783DB3C07D4FBD268E2F
A3930B234F4B358C816576A2D18DA69F97E11B723A8E68DF1CCA64E069D1FE8C
D9FCE4A8D8D1033B619313D1EBB0AB672BD3A830F6908BD1A473A40A3EDF8B92
C5A19EC12972781121FA253536EA43DCE9AF05FCF286FB8C2F1BF16BD88FD880
6394F2AAE9AAC501EAFFACB82A0C4098ED42BDCC3666669C95872FFD356F29E1
99285609CAA0FC1EB7D24DB20CE1C065FE75B414B09295B583CE944173EB4C7B
6EF475559A6CE0A2421DDE750BD645260E8614AEF44009E88CBCD9A70475C18C
5D773268565164BE2F370E818B5C06950A01B6D5970254D021AC036222DA9B1A
58FF24B9493A6107B8923E7A736E32CA7FAB1711EA6BDC1CA3AEE6F0B71D070E
AF213C866648B75738A5C8191EE933637A398B71BA7A830169D4226CB034D1F2
61A087B2C5C296A6C9D43D3002D39B4380921B9CAF9E856EF818185B8F3636CC
D02F1C09F22013EC4B560271C0E36A2ADD9F8AB8BEF2275EB6BFA32850BF210A
E2BFBFF651C226133758DA5A248A538A9F8757E62384F6565820A65C185B69E3
21F3DD4E02065D8CDDBD45160BE05D064194D9CC21689AA99CCADF01BDF6ADB1
A4F47985B1ABE60770A57317D3620FD9DDBF7C46A83B96F4261444111E1CB316
F9D22305EE31C571BC0A1C98DA95DF8AA168A4FB6345F0587F952AE97DD78841
299050AFF5B9F8BFF6A649062905DEB532CC4F900F7E81E94DC179909178D9A5
44430CFF122312C156948870010AAD8BD56725C28744055815B6A5217BA797C3
A4F27AA992110404E15E46F7CC41E6B7873EC9D57FA9ED1394E2506F0BE802BF
966DF33B0722F67EA45C3D516086C7A3A2F7E02912CCA4FE178378B93B59083D
2E6A128C0209A4E8EEFE647BFF9D9B567C16AE4DF436C75E95E13DD70DD40ADF
E810C7C0F7C90E1A1E3914C5CCB26632A953FB18CBDA05E4C6B288E752741E4D
7EDB6E2A21A99630264CD9F55EB6591BD63BC018F50DA074689DCA6B27AB1125
A2196D7DBB84B7D8A0AF17B08759FB45133291C5B945CB12B0259767D3FB281F
6F34EE241674A3EE2645DA90652D589681C491B43C8C802A1517D9C6FDA34745
91F19D573EB051F2C541A4E3530340F8347DB6277982BCA979CEE6F9C59CC72D
28C5E0E314F947ABE611D0116A4040CD614F18E9FE54163C94B93A4C903A65E8
C8A0E10F842B11A789F231979991905DA0323EC2D622350AEAA20BA78BC29D8A
1EA94A878BC760F2F70D4299A4F76115EE6135F0ADF70A559B5A4E0E5B1DE965
B895528EC9017860DDE223A5D1BC8F0BD6F297DCD3779B48A23BA00CA211D468
4B7794BEE465A354B42C8975742F75BCB6C0CCEE1136FC7B18CD4DF65F79EC30
FDDEFCE6DC3C07934FE9CD4ACE1AB8D09A4FE8FD49FC9C8914C4A02DCB27989E
0752A84CB62C9C581634E789A5C10BC1E93488DCC273143E753D5ADB6B0B0340
A268B0DDB25BD184FD79C57C9EA994E8F5D090490D2E07EA36553A97F164D73E
DD84489A998F8E2C7F981236E31F14BC8FA2BC3BAAD162DEA2677D46D4797D03
9985F2625EA0B5B6DB576B177A69483B2172AECD25DCC4E613533B4095750C44
CDBFCCCAD7FE46D935CC19EFAAB524A94577EF320491A3FA8CB2D730293FEF4C
637E97F8985B6823BC95500AA1711E0010118D340D0BB5177BCCF14778CF7C65
AA035205A6E77500B2722E86C30A676D15736C339C5BFBB0E112A2C738385501
943C4BC2AA690B4FD774FA6B7A6476E4D29D487A67EA1D9A222E261317AAC247
DD691725318F059770CCF351A87CB2823E3B6FB2A9F26D2B7A0510E190D05B2B
D0CDAEF3A864297373C89667E22ED7C5064D58BAA8ABE016C561C8218F0E68D0
FFC9CC167587C4DDFFFAF2C8DD625D18B622BAAFE22DDD70E20C6A2FB7BFB3FB
FC9F81FA4CC87AB7C1F649187A72EAFD4F0119B1FEE7375AA5175ABAE675CF2C
E1A7E4EEAFC4E066D5840766A6F4176A5BB55E7AAD0A23CFB7F631E070A8652A
D9B32F26204002B410E56FB8D97536788717091C9B89611F16789397B21CF200
7F2AAF5539BB614BD80EB0CA767DE4BF0DD2185ECC3E591B2360762C7BAD464A
8A5981691680708ADF80D3BDEB91B821CBFD12998AF3A4E50DEC07C2A898FB87
2435A6F3B2A54F099DD8B7B7FB5E02E4DFE5D7E2BF14CB8E8AB05763C7A4305B
4DAB75659896469ABFF01FB5C81D7206651116D3603EDC3C52D96B86D641382D
95299AC9A6E5F3C861CB90E032ED2357FEC1D3A8A1411DB396DCC79E6B943893
ECDE0325FA8F0B7C147EECE12C1DF921AA0627777890191037394DE4769CF0B3
6CEC7C76AB654466409CF638A67AE3D8ABFD8CA0210E60AFE3A41010743EF6A7
3B737B299887231A7CE3CE7025CFDA741332EB8B9E6E7779B8BBC8D1612F2375
0ABCEDB2B6D8B2A25B650143B8EF699DFD6585141AD664F613665CF791E93893
4088658385FEF2B5848C420EC889C56FF1131931334F321BDE3DF454D75D9486
1D64E0F380E499E914B3A81DDEC22A5675FF9702C83946447CD62F3BD519CFF5
85F81454AC7D544215C7D9351AF49F331A5BF546B3A0C90A38EC1F809B96998A
3FBC3201BE9DAAD80B3F5AD8E44B443137D516C287CD7FCB02888E8B20DDA464
A1DB15B97CEAE6096E3F3591A455928A7B13237A908918E42D0CE0F124B0A43A
6623312F09231F75E179CAB45F341BF9213792E54A9EE8C622BB8059EB131E0D
FA31B4685334945D0A483D952BA841A4E22A317D6561662D9E19EDB0F5083A19
705A33849D159A930DAFFFA60C720057D81429C47DC28210AB0C4995898EFFC9
85D09510E0FC249CD2AFB9E922C869BF09D930F2F41C875E5716E5C0F451BC1C
6CF834DD7997E4D15436BEA5F92069AE2C2F94E51BDB1D1DA081D0DB6335FC4A
6B27AD73EC1544F5373B3B953897C2C5DC82B4DBE4FE1A997587A0FF9700BCA2
C977324875571C142CB00237467F8B9FA15A8FE28DAA74C14D499532E6E5FC23
30F646A38E710389F9EC4E638C278C802F6EE0F96D2698A11F6FD66479E60002
6EC26AE90A9415F2190BEEC7D90778C4DC4B0B56704904B4CE1D89E66F9782A8
352FDB939A14AAA42F94C095B1BD8E23EA906C7E229669652C471CFF2C21A7EE
EF1924EF3B1047DA244F4BB7EB5A303A13ACEA128EBE9FF5B874E9FF76F47A50
2BA9A39C2D23BB90DB6F6A5C2FD843C7A980AE1527A1F08F7C784508366C0C24
A643FA3368AF8C7430ABF956A7E31F7A7A498387B81E248987CE1A14E62E312A
CD25BC28B87FB071CB1D4CAA7E34A40B9098F4CB0F26A82703271E70E3D9D675
8EFFA81BB74204F16D4929102D9C76027A75793253CC3D952AE94F8E8B1D95DC
7B152EBD636BC133BEEC4F42354D3D56F72F616A40B5B910E41AF4F974EED0CE
C78D538D00B252B4B704E03F20DF27AA0578BD6CB606676839CCC2855419A247
48B1CCEB55E5B9805ABDDDF5FE57ADB776AD9DD17FF1E4C565367E2B633398B3
CAF4A299F641BC47441D8B3A6E0183901E44FB44C7429EFA4F3864BE3CF45CBC
90333BFC4469EA4D485A491B9F401026D68B020E842178819434ADDD0F7CDE6E
8F66C7E79947E26854A21C5A0922F6A4F37A429715EF9D12C72D73CB5F038FEF
6D5073979CD67D5638B5CAD64F2BF02434234DBA543E3E2223D8C2296BFC28AC
505CCCB4C3987A42336EC5193B6A7CA1D4DD9AD8A3E4F85BC46F152ACA117C87
46C2FAF502AC5C6404328D4E879790A275373179690F52A1240FED34E36B2799
19E7C766CEEE13C3AB22FB3F3EF6B8A99E65EAA63202FC945E4BF72C8CAC140F
E6412187142484B7EEFA080419A1BBAEBFC77BC72CAC7E668B3217B1B6EA5B1D
FA4C736D775FDF529F6F99785219D4298E9823771433504E2AA8B0A92EB7D9F4
33C5D6406B17D9C03F4DB0277ED4001E1E3D1A537AABB336F651
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8939AB962CB9E16A2400938D226056535EBE5707CF0A8678B54E6E3A103B2EFF
0BB7306D7C7C3F523B2AEC267A5F1E3F99208D8EC9AB27D658C26F635C2984AB
5A4D214768C6DC775BCC616838159AA10D5BD93CFC8B2D836EAE5ED480FB6DDB
24253A62A1B798BFA51B068B6888B76D2233B6FB11794F166254CB3AC8CFB650
429866DBEB8D09E6D03889899A4E8BFC9A855EA4660F928D0AAE8247EEC1668C
8E798398D53E52A5684CAA59C47CB38C8F1009A8AA12A269A587593874C2DC78
0BA989078910F3D70211147751E9F7264D6E64F1B05410ED3427BB7D0704443E
F2BAEB0FB9E3F1C1C14B178E716FEB4644240447A3F02211350E36E1A586A042
9AB336C6B44C0D2977294E704E8695B6DAF079BCA033B6BD3485EB7A78582FB9
373716136C63EADBAB3A2577738F553F81135829F9118F4BFE20CD51190BD7C5
17035EBE97F26B0B58973EA9B5E0D111D9EACF2FA54B223C4F40C139AB891A41
C7D5BA5338BFD58090EA727C3FD9D0C0217C05798787881D07CEFE019518CCDD
A7AD72305F06A98717CDA80C5DAAAFC50E3C6D78D2B5D851BEEC46731A6C29ED
DDCB9089DE5CC2DDB696D3B7DE3B67F066527AE22CC1AE6285DD1AD42E0809EE
65812268D28E7105859262E9368A3AA7FD0207D47DE5EA5591927F5E568386D3
A61FCBE872945A272C75384BE1E85B26AA094704715F1957DE37A2FDE2577BA3
85000D0708FC918D52360CDA828CEDD17CB7D625155CEB6931A29025B44EC8FC
3678FA08027B20FB9649D07F01484F2FD2E1746F290E32434FCD4D15ACF0708B
EE3FE9948D3AE141749B47810558D71D592735C1C86EE375BE7413B2CF462660
0B115CD043EDE5612AB895CEE0909DA8D165408CD5C4C34114EE4D7FAB4C37B6
A31CB829C4BAB2DD04B1A7097DEC24C6429C13482667116522F94EDC99DE551C
A693362BE4D277E12829BC466E13D09841B5D9AF504BE4EA59E9C2459EEA5AC2
C678E3FA30CDFC5AB855D56C1AD8374F9769A6B575A1DEE5AAAAB4F716DCEBE0
0FAB8B0B5522294CE3164F8446679FCC7AFF5BF49062CEA58F5C661A895AE753
8891536066F8416FF5E357FC34CC34D6B68ABE2FB2C540A7123BBF90D2671F65
90515B96CDD1BD2C1396BC15503CAA4CCD3CE28E0361801BDC5DA98887B2C39D
B84A0A4DE7859C7DA394ACC497641ECE12AD8A7D62AC5F8E6BDA0577FE64D581
35390A37A1570CB25B23B747B236F3F2606A3FF6E487A78069A068E7AF13A8E9
315016EBB2552F644065408A69F1BB6FED50486B2A05D403CD56EC5D3671C9CE
091995D384491B65EEAF33078529238342C32A4B81788C31E62BA0614BAFCF9C
3C1CD422C605740A8939487E26BB9233D4CDE68AFE7A0CADC3AECD739C9C425D
09CB50B4B4BE28115BA7FC59B541513CD6FD08039CF40A1F5B90A8BD1263806F
EC35AAA4100ECC05416ECE2F061CFDBC321CF3324F1EDA91976CABB8D2D9ACC9
B93C575C363FA691E18215311431841DE8187A20D6664348C7A8ADB06E867D02
07BD48FE8067168C4412FC80CDBA62F8B9209F5407670A26DB1F7F5D67C4D227
90BCD0F1E8640E5F9288C410487290808B88F9421D506386AC95CD959FD1ED07
778DE2F62958FF409D37332AA4BA88C735F2A56E4E746EE98B9667072874B21A
5F98225AEECABF5CC818F3FA54EDDE178B40A1B1D6E2F900365E2B503346B213
DDB43A269C5A973D303DBF615AC3CAABFC39FE2144681E7CD633056BC77D95A9
16F54291575AFF7A3A4C13ECA61A8D261B3A74307AAC38B50C0E55222626E717
DB6E122547B3B8A766FB877DEEEA52ECE2E74BA02CA7676F0E037CFFAF287340
C19BBFD9378D8E898225EDA3FBF814AD51F976241A7285DBCC62610FE998EBC9
7DC5961AF9D70A6786E8922E7932A539F1606101440C6855F2284EB34A895CAE
44637B6A0B1C6386C21F11F2E7EE2ADF012EA6FF35314981226505BD4B0EA25D
371BE9FB6FC0425D8F374CC51FCB15600FF7A49A4104BC29A369C8336438BD4A
45B7C8FD52577A49ACDB394CBBC16C844AD99F85B5AF1E8018900D50862D7C7B
045EE4BF7972EB05AA5696A004F3EC9BE95C4C14180C7C8098A3A0443C0DFAAD
91E9C3A37509B29066AF112DB77107B9DAF2E45E72DCD78660D5D56018CDF1E4
CA787593C31A2D6EF925E37E4EE77E687E149BF506664975CCBF5FDC20B5C306
984208FFB9EC2F79E76A7A029CF5981FD2D07176083D7FA0D9FA7B1E6C6DA9FE
423BF29011478BA39FBDC7E77BA230EE7B89728C9312602DDA359F1EE65BA362
D1F36657943255D62F0C84FE8A630204A8E64D8F940E9DDAF3C2DDC16FD131C7
F302A2F9FB65ECCCAD4616977B2EC724FC6A4C39417962E0DE1DCFA69AEC8A02
07179266935B655D20AF3D45228AC3796FD2B7B6E0580904A27FE0C8023F4FA0
FD70E469E5F309690C6AB737E9E0DD1DB57FB312362B64FF1955401395B42086
07E7F9449A8953149F324B4D5785C2A0A4C28EB487FD0BFD65462A1A4A741BE1
B1876330912EDEFCACE1DFACEA7628D16A4716D3989E1B31830CBC2BF9FCE144
9F0E80BDCBCFCF477A2C30A72EC227B20A0AF16FCB8356BC205F18C6088C1D6D
C579F1DCD23FFA147D72821B7A63FC011D5718FED41B16EA1D83ECD8D2ADE289
54EAA105F82F777B6635C160D0E3D67FBFF2080DB2A99D489A070D865C39AC9D
2A88AB5FBCE010919EDC0AB213A09038FAC6D3C81A4972E3C5683F49480FA5FE
B8CD3279398028DAB63EF7E8E1DF85A63F93273F187F8F8619C14AB824C97C3C
70D06FBC0A1B4BE1B2B7F11EF469ADEF71617B304B51C462AB3C6C0E831C9AD3
CB80C5E0D0FAFD079D7F4F245D542EA892C6FE3C3D6D1AC2C92371B7A33AAB5A
AB8375B4CAE9661C9D314999093B2A04EA1CB671C9F07ECEFBA615E023CB0F72
B6EED231AD31B1F4D03E807E56C1E1663986EED65E3EE47A2DD11C1211236973
4B4607A6570F534DEBC72AC06DBB2149F9EFB793A917B3B604271FB764FAB871
F7AA5A5FCC54533951454FE7AFA29CDDEF96E951AAA9B8EEB3F9B418BD132974
C601B6FA29471DC34814FC81A1E1A5155951C12022AADCE5826302220B18DFC3
D30B2277D08E7CC7A87BF1B8EC4507B43CEFB117119D86DE3BE51BF870390EA3
D8DAA3F74CCD3712D1C00261E853DC3078DD411189872A50D85D58CEE8FFFB1F
0288029490412F3E58F83DADA08FA695B18EFD0A4F289705385A411FCB2D7A47
FFE38977FCE18188C0043C448D27E160EE752BE0D44D0F83B6BF642C694AA530
E223AEFA3FDB17EE7AEABA75B9A86D7CB0F50AD4D5CE68D4ED48CB0C188F9DC4
34548B48403078F63079BCE8529F910AB280EBCAE7DF9F824DCA756F9D647DC4
D42DA412230A6231307E7495424F98C9F129CC4A326A3DD8E476E18D666F94FE
53EDC87E47F6D84ABB643FF3B4084437DA26B4A298F819F4B6823EDDAC11BC85
B9F5C5D0AA1E7B0DDCA82C8E01944B3EA48978C1B8F4FF47779A5523F600D33B
896B659C31F4F6F7DECBAE0FE1F83DDE18F77F53DB140A36B0F6F4B883EBCBB2
B6D353BF2CA6102173B6DFBA0F452D011F6CF7D661A470C3C5DD189C1E83FC4B
9372ED67EF4ED9A5B98F85C8D73D490133B7362AB976A385CEC705A2EB89D7F3
2FBD60C08B86A30219AA2988F79E6386062BE839C1F9D30AFFDE82CADE3494EE
13041755E76CC07CCB3A4A701461290B5B79728EDDFC63B2ED5CD4BBE0C4C365
75488D590258CE2084F898D7C58B3F65B09DEA2F8D4F71E80B2A2F8F31D5FCEF
7A7744B64D7BAA701E473B85C65814B0A93E3FFBD7B2AF85E00FFBFAB9BB7766
F444709A47902C919BD2A4BECDCE07B64053AEA1058E26024B46153D6BB92C0B
59861B2DDAF3D38DBEA5BFEDCC49938EB98188A3C4DCEEFA1F308559F7712CCF
288219C6A3D4EEFB81A2C5F154990FD8F09713A0531017D74B47E1F97AA6F0F3
92CE5BB7475C676247D57BB14FF676F11A4B5B564AC26BFA9D85C9CB0414FAFB
C35B46EACF74DD964FBDDAB28FD7BB304B9BF4E12CD15B3BBB163DD66E89F24E
6485C6EA63365D29907F6BA96D313F9B2AB7D175D549F4235653EF979A5C63CB
6EE50CC333387A0ED88D30D9FD2197D31A0894ED0A47B15D92DCA463A8C84B3A
986D396E6530B2E9BA127BB5662CA948A8F0C563B9C868644B8D01064DB6AA72
090DDA0521E6D778192A8C6D4D4639E80E309194CB76FC5D4615F396DD85B06F
71DFC7F39A259E322C5E7D28646310EAC92E5F6AFDD6071B21E6664E1CDD3848
C864CE0E380FDC48B251D52B5094EAD64D380B6818E2C8B1A4EB8F9C18ADDE6D
6E4CE1DEF2AE8F2649F1E5AAA05720A358A74E181568A10B536F68B7A0292787
12C34ACFA5BBAFC4AA3EAA4D8EBB26E20BB00D228B4EAC4A163E0B72899874A3
F85E82C396D9E2891D8E0D6E5571D4EF116879CD2F5485DDE4B9D40F638A3A95
DE5DDD14ADBE72F5BBADF0D9950A195F64FD3209C6D47B46B7708F855DA96CB5
E9E1260F6699D945A611A7EA348DB3C86BE4B32FC2687F15C4C86957018D428D
F6244A1FB6A99122BF89D7ADD01C80F2B2BB2C7168B02C400BFC98D65394948D
C736741F9E0244FE096571F087C5D6D7D022C726A4CECF37CF2DDEB1E9D77098
60C5D43121BC2E4B72A2D895A5AD2F449196AEFE8C01784323DE3804363B88C9
1C86124F431E6DD0744C3D073FFF4BBC2B98BDEF713BDEFC2DA4E0E22EDA76D0
34424CE13529BC04C078DFBF8B3EFD96CF662C4E151F15D4F8EA52641689D4A0
5F7C9EC4EFA5119DB9E3A61E4A669C29348A1E71382C093499CD35D7D1227A5F
5BC3DB96823C167100074C70040A55142148196567C20C7EECBB25ED6E31F563
9ADD24D52ACEEA4B88114EB6DBA9461C2E5262FB9529E9F6F0BDE20D3E209A8F
0C9FD81B99B00D268F764593BAA894F7AE50634766C922F751ED183AACAEC03D
B7D96D012CD0D111904245BE9537EDB0F8769AD1A8ABBD8D1CBBE5E79C53C00D
983C69D8865E93B6495A2F15AD9AB1DA7503BD5B85EBE27ABA01F71E56482BE9
D4342AC2562D8E6D1E4146447561EF5068D17306D66A52FA41644897A9B161C8
5DD4161AA3D956E7961AA8020467E76A833E01C974E32AA2B8CF27D62FC81EE4
D74649BF9530306481F430A539A95DCC2502F712947F6A68DDA00589EF404132
1DBC8B94AFD827BBD5F77820353FDDEC5D98FDD256E858581054789781AB090A
816E65AD3DC4A68B4EF2356E7CD2F906A859DAD680D649457BAE159F91805D52
FB6DCFA5D0AC6373FA8325A817563BC9ED89A17D8CDEE9B7516F38908E426F05
1517EEC7941CBADB22390E3E2E17D62CA67F37D01377C5A1E09BEF5B795B4446
54B383193351E05ED8BBD8B0B138CF62A428C78744582EEC90A41C3BD44A4E73
C9B32EA4936C211269BA5F883D45B16681F8AFA0646A4031EF69CF4936305336
5758F50534E6974342F4D232B5024DBA0EB297E3AA3E9EF0935BD47998370420
EAD844C7E336288356715CEB8CB8492ECDC8FD8F1183360FA32850051442F4D7
C0250D658C633DE21048F4676A1875DF6A8A61F0FC7C25DD5ACD0220798CA70E
F09A72B19595172AFB9085B9A5971AD1B9A3A2508884A3BCE88C984F58389620
95584866C59F89120C7F491CDE35B9D179F11DB0D3C30370138852050CF14B18
C06DADC218335BB465DD88304F1C1CD11062CA72649491FDC62D571C082CC816
261444906D399760159F6B1E6DF4B42A7A84750AA61C034B11A6E7EDDCDEB54D
E1F5151042A8E9F6A23A81A235FBC3908A85A6B05D8162BBDF3A672715B6FCCE
554E98DF1F4583E03E456469890F07F83BC0A8954FC5EDC7898F21F6917D30FA
36FAEE98F622EF313CC8431931D83D271CEF880DBA07B832A01384994E964233
F2E29DE305C3863191F877DFBA44214DA68BDBFBDE1E3B8B9659D7800DF5BD19
28BB1425A51ABC317EFDDA09D29E04EC8B17BD3B78085595120B58FB421916C6
AF4B92776EF8A8211CC376A37566422BF2E2A840BE57A357AB9B9ADAA20600D5
C49F228D2F7BB606FCFA867342884FCD426A72CA4C5D09612BBE26A2D9D3C8FE
15A55E095B6705F2A2F2A00C9F1CBAE16B91E13798B96D5AE66B5A8D1CD751CC
9747BD951A55EC3FCC11F58F8AFB40913166AB60A01B697507FE0753D085E5A8
8153CFCBB70E29B7073AB33F7BE2B6BD070ED974D0CFE4D41F7F57F05CEF38C4
251AA826E4A1D37459212C1B411B6B51FAA564DA0FF48EE6402B3C9FB77D502F
61FEEB32602DA2B5FA880C537F60E1394571392C3FBA4D110FF47A42D923C153
F7A83BC1FFE67CD11FF1A763950F2D7B6D9575F45562C3A9DE6D4EBF59482D7A
716F39ECA97FD68BE71AA73987D570CE2DDF953C6EC97CBB76B147CEB8973564
7EE159434E3AF6588F47FF9722B7E90F4D9FD0C5B9E9F3A14F9BFBA60CA6556B
0473DC073A961731D322161500E15ADA373D503552C0B76FC6576088E630CF29
B9B0C82CB348259EDD482520A84965A53CD673138AA57C32E41FCF50FE24A447
4ED23401F43F5206DE7FB3B6D1750223115919D85B54EAE8298A19212E5C66E0
C05C6DD7D7F8DD877123205B7E391A189E11FC30FDC6532FCA87770985B357A4
FBF9C5D261A4C998E2FE8EB96E27DAC9DAF1D3F0EC7422A85D9C7B241857209C
F372C03C1100D8EBF3CE4AB3C0EFC1F979C5999BAC6D4ABB6ABAB1D059C53F7E
34F972F56DF329BDB8485E39CC98CBF20CCB70A2A3CFDAD4DEB3267578B02F0B
0340F42BAC749465951198D2EA2BF7995852A50B5876597E55E1A1977B9E2F0B
8A8FB0F03839DCF6BD5542827208D443ED4B9C0145E4522274A02E4420F738E7
962C6D9FEE17520ECF6D6772E5E77D6ED395304699DD65D7A610D793E38CE3DC
E461843D5AF1E27BED5652BB84D5E85622B48BEC72E1622AB11506ADE702CB2E
8CA3FFB8ADD5C2470207BED74F2B34FAF8CB61DD5E0BF54F2B8E1C7EA1FEE81E
0E0A16747443630B04990EE1BE9DB5764A580222B27332072E74A60AB7B789DA
AEE741EB538E3AC7E38B333C7F6DADCAD5B9383AB433359862DCB30BA53A413B
5E9947EB637E78EEDC4B8B17CEC6B82F4CB8D2D71A37921E69D428723823EC95
0F683A6BFB55D22DFB161E1D6B6DB49DACECE6E43AD2C51A70E6342A85169FDE
F8060D7DA7E20B4DB176BB862C29749077D7104BCB313E5C886A01CB16F11F62
984C5F853516C1419DF929D29EAF4490A3AEBD24358EAC006A594AFCB839778F
D0925E2DAABE74C7DDCCE9A4F454633B52B445FEA99105FB0699485956FC737F
25625D53DCF0B9E2386BBF0900E0E011E8ADFE162D5876A850A6507512690D2D
D1F00992F4DBBCA2C63CD70B16DCE15D1C128B9D6881F3F7FFEB68D7174AE093
92546A9760E5ECEA9F2FCE0B991E853518833CAB27275951E05DE00CDDA4868C
D757475804524B83CFFFB59FC3BF0ED249587B34F8C5FB2EF91A54F29EB0FE77
87C9C49C7820D4612B464EC20A89205B12308A8FFDCE2100BBBED8B58BA539CA
EA5FE4C0CF761E92ED98BD48D2F448D1108F27DCE7047D98254F0C08D908B1C5
AD935F42BA87F2A5E50887AA1B0D3E5ACEB5EDAEA605AF5FD5A211BD75DDFF95
F564EB7AA7581CFB06A38617882994FB79C8A67B3BA58728304A89D56F596F0E
1E2A35E4D790F0F074AB70369ABE28B7078F57A4D6313458E50D04F366F41A74
BEF5C8743351DC9550AC182A98736A2FAEB50F133764B8D3051BE747C134397A
F98F26AE6BE96B9852BD9B788235AA0847B7E9A4E1D5C3FED9F2798B396E7BA7
F6A67087C57B5519A98804735147BE66CDFF25B5506C04D6A156E3EF0EEA375E
957540002ACF62D68A79AE7A5D09646BB6027B54136AA3560C33927004913860
2A1828AB92C96765AFAFFBF0E6E1ABF115608A648CED1B979F7CBC5F433DE2F3
6A0C5AE69E841CD7F953C61CE29A9C35FB9E180FFCF3AF170F20B33BA7216439
8F5533463124DFF7ACBDE31348BF529251AD5E570C6C39FC4C14161608B647B4
E462D49B0DB609971C26FFB4F1F8F1850FFDFE8EECB76E4177CBC07BB81FAE3E
5EE64C8D835CDEA64084E2039F6F694AD805B540002C75ABD706FF620458CBF7
0DB7C40C663CE263465E84EC54E446A5064FAC9CFD0F289533E1BFAAD203D8E0
A73E3E733640CAA212AD29B3983321AECF7862664E57704ABAA418A9334BA7F8
20419153A11D503B7DD93A15280C75CEED0E986592AE731096D44AD105D5A6D7
D8FDCD2B2D8DF80E5FCD788461B707B022562B04744DF497A0A78C628548EEAE
916E7598848CF32F6904205FB31C974FC3B57F029061E329A3E67F23EFA6DE49
5C7C9D966924F124679B84B878ADE5BED2698E34B2B91899AD22102AE68685A8
6BB2BE1B1041C5C68C45B71A717B81834A23F54E812CFDDAA5926EA5679791D4
74BC0B7939D43C0AA387BDC860F683E0A69FCC925C5D25BBD041EDA5DD5659A0
305B092A18FE28F830562887FDAFAB6244BE43DCB6A70E51FF466729F30569D8
6C3FA13E10329476B8E44EDC31D08B3B506F88445C172EBF553C90B4F7FB949D
5225B46646A7993118F5F9852614175CB86BFA39FF624A3ED426EA8237CF2209
82F992E567B4DC63A29B0886848590976900C72DF7CF454581D486D7635BFA0D
2C698A491366876EBCC64A3AB99941F6940A12E9EC3C63D5CF7F4F041713156E
AFDA59F224A24AB48D99878E0FEB386D0F7B5550CF4F6DA9B7EECD4C294E2AFD
D9CFD89D31DDB7D6F757C202000E691852A6833B4C2C142FB20780A2E77AF6E5
25B313128359FB837C6159BDD3495954E877528149BCFD7E7E0A23C75927B4FA
E9E687F69754A5AF56D3CB4062A0131EE8196600DAF4DBFEC49C4BD6229ED34B
EFE965785C4EB2DEA1B2743752A7B4534BC3A200E102840E68ACF691393E6A3A
DF983C19E99524F1949AA4735506E6A03C7A805C5AA651DFD7BFC5FC1ED36E66
A1B412502AA76AC1FBE852B7993E98FE31DC936F3F8EB5C8159E5848B3062ADB
1E73F90DBDCCB31A8E2903098DC168AE63B11D15A49B6E46D8EC621225A259A6
19C40D603B6D218F9741A9D0BC2BBB60C369C4183F6673CEAF464D6C86F05088
BD36B92F4FCE9B19B7B199697FBFF647294D69198995C75EBDE2E0FFA891F7C4
EB8DF08E8FC81C7A93EC9FC3BB5BDA3619E904570286AF4AF092D562C02AFA68
2C65C411D784E143285DB6A5B530F5CEA5F3712EB3029E680F91DC145A4F7FAA
A554106B4D89AF8FF5387F0F57089A2DDEC2A5205FD3CD2015A07BD5CE875DE1
ABF68E2522908436F9290D7D99E274F4D23A6C3EAF270385A45FC37EC5674153
3144EFC8EE5E5DEFEE4B4788D76011788B46F9DFEE91E68DD6A747E37634B514
4A076BE869121ABCD86C0C32EDED13F1C185F4C08FBFE6E72943080B2ECA3A86
9A3A7321FADA299285338A3F583E326B071A65136EA7757BFFD90D2D3BAC9452
3B93649D2192F76026636DF3AA3520AFD6A437880F9F9D4E68D71655F90C0488
B2246C4BFCEDEB56F9DA67A2B99450F00D4F0240AD2BFCFC8AB3208640BE91B8
B3D5FF8B8DBE202679E01470C7282DBC800772F1C9A8EEA4BE97B6FB6BFA8896
7A2409493803E6BE594178D3568791E80B043CCC44DA00C4A18050604F08C5B9
5867AAB862ADA8E78EA2E262D7486867BA25784B02BFA5D9F7C210EC584EC1D0
821345636DFBBE1D2992B229D2E69168995B473194C2866E031B9D4D9B782C3F
06E746CC19409291405D243922D1BB99CB7717EAFAB857EF95791732AEF2A91A
856A14BE7ABFCA2FFF502CF65874FB434E1EC90EB8F5C7383CA3FAC8B6191CDC
B6B65E73FD13D6933F15CA2283FFAB265B6561B208A62B1C4358CB1632843EFA
EDB9A06D4831608FF37988C7DE6AED5CACF96D62E874C2A1123E6881D58D5B5F
B004253097DF93CBA6EEDDC12ECF92F52B0904023BEA6D4A123C7FD739E27A69
CA0A04CCB4C093854A5BBC8C06BBF851C454B7078D5C737132B046773E1ADEFA
ECB0B08026E3115C47B7B1B52D643A6B102AA310547A652CB810C87E86FD2DFC
707D35327C02A63037F5CACE34E9FBA721FFFF8A6DEA3AE5A004026D0684C28B
5E8E90806DA6F2B785EC073E49B877A19220086CDAD1551F999E79C00593A68F
C72B3F2856B72B9ED232F0047B32CF758389C561982139E69F8C270F3248D10A
F01CA450FC8C6CCB6377776EBAB2E91A500D9067FB11B17EB68280343C9B6BB8
8965E62D78B5FBAFE7BF2F88E03DBD69E67C8D79336CDACBE193C41280948451
A9ABB77C28F0B7A336D00BB9CD1D61867E37085304F998478FFC1CE425EF5527
076DC5C2A8F92FD9E2EA060D85C79587A901F8FD59E03BF7967D78C114772105
FFF0C435A6B4E16317AECC8E11ED94A4F9AB264C4046B4494EB0329B7B6A2154
E70542BEB179E58ABA89D9664A84A9214C1DD78B6AA644CA2DF14FEFFAF524E5
ECDF22B31A2A94EA230B7D825F785E32BC9DFE23BBB4D6B8AE0AA560A1C2900D
93C746FD3D27703C27BCE62D373A256B84B8AAC44F157C23B95997943A3FF5E1
7982EA8DA4FA9FA14A8015B2C9EA245F8F24BF6CAD0A061524F088256E98ABF0
764C4057A8136A4C0045229EF7A96F1D23B6E52A64A13F8E72F9312A5478A5CC
6EE68F39FC1F935A272DE93D058DFC5797B3121CD06DAC6DF93BDC8767B74025
EF5F339C8ECF87619CC46F12FBDBC2CB0CBF991600794D96C8B1F9D62740A6C1
E4307112AAF90308C7A07D18F6026DC75988F1DD679B85F4349026E2BB40B809
F7340A92279E14A292984FF81570D1AE87E9B38462155C7DFE9D572AEE910D6F
B2AE026D2BF1B0D4E3294FE20D11C54B059C7AD8201E4EB1FA3B7D3C05AF4EB2
31B99503F54E6275325DA551CD799659BAC3A7831D77417A8217892433FAA473
C4B76D049B17736CD97EFD2006279CC445BEB25AB4BC378FDEB0D5B2943C4391
267AFF41592351EB294229D6615B6B5378CDC217E82C9E731277D7595EADED36
6BD57798F034DB873270DC15943E242C514A8516E02952719D1023F95B24A400
93D3283B8BAA95925A5A0BE85DE27081DB17BCB5CC50AE90A4E0CAF1F7F42662
368817BA98C5653100E80754D0526718308CAF8EC234ABF85B61D0E95980C757
8709BCD780ABDFF94E96B3CBFCA5BE624A9E77C49076C2E0BFF44163FD9286F2
40E6945E2B5E0E56BB4FC549DD70F4D5697926AA9018CA6B8ECADF66F0BE0D7A
3FDC11F99AAF642494A5C922281058E571794530EBB573F9260944E8F1984F36
D7E913CC939DCB129CB0733691FCE2133D09B49C407BD954B2CDDA6D01C9B335
CC245EFA8FE998AD2AD6A7E290FFFDCF79B72324D4ABE781CF818F7DF23DDE5D
246FB50A5DD756C9C9F5701A9771B89FBAAB1665E41E717C4B70C4DC931EAB8A
7BEA33DCC693CF4DB9F59E3AEDBAC30F9A20ABA179ACD32468D85DEAB72214B5
EB77C5190608DA5CC66B9DE3B41A359E3D09ECFCAB9AC7528E37054E1935ED44
877757E4C4B8939D6CB703D9B4FF663EDE9EDF028C0019529D99B7983570659E
5E4DA1EE2AB560FBB1743EE022D2622C3A6DEE1F9A33C3D708B16BDEE46E7A41
5DA452CEC1E9E097996BA276A0DF223531C12C4C36CC298A4F4F4F109296E45F
B5A7DA88931AFA44E16B05AD9E0E1972EBF29B1736D3868802E566ECE7B4DD82
1433128F53D23394FA192C4050EC9F2A962D12B3FAF4132D673AE018900E5D0E
DF6D3971D3380A1DD05992DD4480C5590008258DA9529657F051EC6CE343DF0B
66F655A99DA205000CEEBA38FC570504F95A16B60378A3A776C956D7034C5464
90ABE1CBB68FA80DA06B6DEC74D0730EDDA5D8367A7936B3A0B20586A9B6BE71
1856ECD451E76FAB77F469F2BBE3AF22E873D05305FE9AFF63F920E17E83046E
222B15F83DF3CEDF46AA24D050B983B796C62D6087260DF8391108E42B187A5D
345EB5CFCED343D5380B8637ABB6338A5BF6F26E2515B4B63F84B0D4DA64E7ED
76B6A457E42A5DB9BB44F58BD1E9876037CADBB9A40747BFFE1E199900162739
47FB39699A1F726F2783C1A1D8BEC25DE35B795BD2C55ACACA60A618C23E7296
766FC41447A3BD0200EEDA1A1DF8F5EAB5E059B2CB5408C3463455201FE0BA6D
39133A41A2D0880CD12E8E5416030D4076D47B375CABA3DBA57310FDE036DD53
2BA3C5503E1AAF720C07E17F21A608FB8B5FBFC9870022EEF72EC42DC339BE43
78399A23DB3C817CB107C0D1DAB3EB55CCBCF6554BAB85E9CF610550DA9BE671
73A53D233934305645CC685F62653421CD2885FC289890E199E96934CEA849E0
4BBAF949F49FFA8AF3219FBD540F213D9F38439C4C32AFBF2D515EAC4BAA893D
C4F3CC74DAD0DFEF443B967515CE31A9A8D2D7F10D27380B73CF2649810488FF
7B789D5597FE88BC77BC528400DD78D2042445DA46F0BB74E0AF3A08ADC476E6
909031B3B44995362233F00ADF8AA7CB842C832367B9CB6CACF34DBF442222FC
BE7C4750D7693EC52533A4036DE75DD9D9199FB88BB2C12256360A9714D18882
16CBF36964BDEEF8AAD743790978FD8654A55079C3EDEA43969C8ED5B72444D2
7D90EF0B464209E4E0AE9F5CBE8B9E90666EEF67AE9CAF3864B371BAD0460A23
20D87D08F4BE1470976DF9B3A6D2DCA452B7BBDF5EE1CC5C8E88045704BA194D
546D7AF44F250447E2EB7D90633AF957794E9858D309E214E706E1C7223305DB
72BB08EC68B2622B685CD24121A1FD26F4C87C368FA49D454DD789538E1DAD13
406DEBFA03E177045A70CB59B4FAEC6F29403E141E844CEA8EE3B0872485B736
BC123BDF07546A60614EEE1492B2526EFE6FDF2AB8D1FC2D843BEC5C5414638F
C3540E0C292BB07DE2436D3E34C5BE4E64EAE4CCDFC11F3DC72D1F7735DAE4EF
8BBF657288F1363DBB7AEAB49557421D2986DF8E30B29769914597762F62F1FF
6A452F69DDD8A03001D43065AF93F3845C510C660771B86C5E04099F14B5C77D
171238117B70E43AC3B5ACE662EB8BAF7549EC030814D3506D4D31FE259BCA32
3666609915623F1DADEF379FBA81BCD45A18AA50BE88FB00EABFF4CCA6344B58
258AF314A4D927DA993B764A10A4B5DFD4F7BD5C89F7E9582CD31C81919384A8
7D89EBF2B7A1B923ADC58499825DD0287DAE5C2DBBCA735FCFF6B3FFF5CAC2E9
6F9750D2E5C3699FF13CF857907884566FC91D67AC3F4ADA640E14778347E421
8BAEA927EE342CBDA0AAC0DE162A313EB43A9F810408FFC50BD648FB818AB1B4
6293D8A1ECD4A1475D7214F8BEA4ACD6996B1AA3BCAC6954DD993ABE8FD62C3F
1135EBFB7ADE3B5F6B957D6F623041477AE7A0AB66B9C61E835C6C2E5996EF83
8119838B58F7370F4E4D98E798A229FF05B3E56883F57C110D212670B061BC0A
B6183EC18D681DF84FB5857BD0087A0ABA839AE90333C78F7A493E8E104D7D6D
5EF78BE42F30C4D50A515832B052FA0D77FC84D45A55C85FD34D30231E4E6A38
FCB329953875F95CC5AE0FD34B8FEFF1A40B34989A4EEEA04D45AA2868F1F4D3
861E1D79962881C988769C02624C913278AF873E3467AB4936B96B09AFAC68FA
7FBB2BC8E9AA00145C73D2C0DD4462D9ECE862222407159F65F4CF2581618BCE
481FE7D5FE9AD9CAA0C3A74DD0998C858731F13AC7CF1E241810D9C6E5A90603
E3B6DEFDAC02BDEADC838578751FA7497C78D1AFA2D9A9E710E0AEABB0368401
01DE74ABD28A1564BAE419606B3CDA4701ECD24CC7E1A1F2D8733C8020C7DC16
91334F1172D5D15290257EFC5218D19C158E575009ABA349ABE307D0181BDBBA
E5DCD1E007AAA8D9E2C81C03F6847EF5F666372BFD66A584908453E49B2DA68B
D283A185F27B4CE890974655A221FB43BC39C2DD740601BD467B35A59C293D7D
9D97A3FD94870E5020D3BCE5B0ABD543BEA2DC1B28ECE0E22DC3AC019E222019
C3C247E5982CCA97FB41E3B5B5EB5D5BAE80112A6AC966D92ED6B0C50799E252
DB038815F80151627CA44CD4BA358A89A60D8DA54FC958F4301ED8DB80B64A98
68E32D1914F2B5503336C97F594FDB53C55D2695888899F5A64D2001A2B4D308
4E86BE8BF06A545546A8F9C832B811B48FB677D5FB8712E706645B96ABA65E28
50482F262242272A4ADC4F96363D28D83441109F43AB26A92B5190ABDC589334
1815D40BC45C231EFD6E6AED57F44094DAB29FB4B3407C6C563EEBDBA3C5F911
46D045F350D2D3F8B0C04FE0ED0E1472A0A439907FC5E1CD4A61B711C0566E9E
65DEFF0B639BD23AF3E38ED91159F84337FC4BB5A87DCBD21029B8FB8FDB751B
42BC7520F4DE7C2208D1666A3FF0D32E263B67F4AA7871534898F1F3EE060AFD
6A56475026C24C3ED9ABFE016E56C1CB9CE7DF00E2C7D937540C8CC2AB5FA2B8
EDB7E7F30FD5F5054BEF2C6610EC5B113C3AAF779DC4FFE49EBFAC7C77432428
34D87BF080EA88F66F3C8E0F80A7B8B164785FB0E8414F170742FFFAECC47C19
73FBD0A53DFB8E1FCEFEE0E7F92069AC65AF52F1F35482B7EB5D90EFE3CCCFF9
006D252EF323EFDB0294083A2E78C126CACFF5F6E8805299761B210F72493E43
9E66352F0D59C6BD1FC752CF0040E0D140D7DE443C68BCD3C08631AFB6624AB8
4D2EC0A5D58DEF1F5519E0B7148B702B90DE7DC8C218F3FDFCF57B30BA74EAD5
222F355A515B55C3E8334435D51A97CE3376FD143D3481B2DB6E95D180C5E9EF
410BE8974D7B5DAD14274EE92CB3E87813E87F0691DAD74A25901DE740F74B77
AF96C6877F5BA326FE160428B91DBB44F27AAD69F2FAE8873FF8C7F32439E054
2C6A39BC308DC71DFE5B1923FC0DCB78DE935D48C61C3DE3D44A59A07E3587A6
D4AA192E68C39ADEC726E69C0F1A712B4480C3BE936D3C548FC53468AA4B26D3
950807AB252259B667464FCC848329BC2CF7BCC46254E5855D1787EC91C6F1D7
A7BDED291E196B174E1051A715399BBDB7476506BE06AD25C34AE566FFB3419E
50A18047C75641CA4ED0B8AD4C61E9683CB5D51D95BB78AD5CEEFCAC7A5AB7E9
59DB72519D3F13BB94A0B6AEC4A82E0574F483D414793F1811081F721C7F8770
466C02ADADEAE8A054668F7694C3DE4ECA9D52D4B22F7E9543E2327BB6B8A13B
8AEA7A9ACFC0AB9705466F8D3758394BED069126AD35715281F0B2008261CC73
79DE1B4BF63C58940A4155BD536EA77B53F36991D846644DDD3E183851BB7901
30F6E79C6C7BB18D97FFDEC834593435495EAE32F688C99B1D864EC9B9131883
6F2416870573E8C0262A644160726C284FE2658D8835158A8BB3C9D9CE6C409A
2D3615ACE650E0F7B803FE7162FEC575266B9D84D502FC8D2BD599E022CF8E31
984F7A39FFC8C10DAA9FD846E75F8CD6965AAF4CDE06DB9EFA35CC815F4C29FC
C94086E6D229433917ED34EBFCD1CD29CD8B368E52D34E67C0FFC47174F13E0B
EC3763FB7ECFE059538CFAAC2A553DFE493E2E7E17B900600348A6D4F847385B
1D7FDC3C85523F35F7706924350E1E6F43C9264BD901C29E71A4DFEAB6A3280A
E78F8899ACF12D816F874A114DE3800B1D0DA7684DA15D0E2EFAEE1025009FED
300FD06802C21B5561DBC14DBD9D05089C6E43FA4F854109659F2FACFDEC96F6
9B757BF6D3A3A70196AE7B362D2F22151290CC98FE5DD0C8664E27DBBF81BB5D
F7F7FA13FC333F9FDA8A71E0F434476D4C63DCD3E7D5FF20584723BC04AA4440
E93EB036C84EE43E9131931387A78C1E733A926ACA53BE3159108C81919A5EEF
C32A7A26CAB86D8680C79C0428087F1F567E8B1699728E0FAC6918118800EC00
9EBA5E80B75A78B4C84C8F0B274D5CE3CAC008668CE13DB8252FE1A5DFF5D6A1
AC893EE600614BAE0C91DB8955A5754007212FA3B7EFB629B145E5543AD1B29C
188853CB64A7A0812D49B7376D42964EA4977AB90BC30F9AC5D3685C5D408E99
61D228FEC4B8A255DBC2728C75833813D34E877681335D672C184006BE08D28E
74996D259F20375A1F9AF12C8F8B65603AAFD31DE04B809645D02C5EFE5E41EA
33184F48FE12FB13761184A479AD4DD45279BCC7683129532EDD0F6C7F1EBC92
95C05ADE4FB3986CEF8676B788BD449941ADFB73260CC572990ECBBC3F5BB4D7
B4B03E177B248C98F001CC25A3F4EA0EAAA465B49FAFAEE9506DB356558692EA
E57065BD5FC997C1D9D32490094C1EACA0F77A71DEA9DC30970D51D930CE9E6C
A0FBF5D685797BC49F4F6944383E26B96D6C122E282FBB5C9CF72100309D548B
69A4861561A969266DC1496899F5E48FB85AC7571B0778C0E97291E7C5783337
38BBFA11516201D24C9E5C62389DB523D940EB33E972F0B40E865803F0783204
C55306F2F6BD3E31B0BDE3016E56064274C2F41D88FDA188769EC58DA8C1765D
2F8888FA0CFBB9970AAE75EE3CD9AC9C34F8D91F18910318D881078F291FD279
83BE7DFAE843551E00259658013F60A3C5AC4E8AB3CA7BF8D7FFAE9CC263FF5A
1347D8849129B66E0AADB8921D259418ECE7B6C3D02F34E3ACFB754A95903329
29F9136B129AF3E28D1B0DCAF3814737CEEA3E7928FE0EE6081606C1BAE66A9B
DF4402AC6B693EA28AF1234E9B88BF83A3E8600D103FEAF0F95CAAE0EB768E9D
60B397FA48C043B597BBFC2D4BDBF3F0A28F4396CF9615066FD37D5C535D083F
81FD7D25B5072FFA553DB631039E36B499343A8AFFAD14E0193449F4338DAE65
F768B9F5C990DE31962CFC2A943C0E6DAC898DD77F2C4C3EDBA7597EE79BF0D0
4FE6659C662A08BB7B29B760BB1DAD855434C813879E8367FE1D42D07548AEC4
B557179E7E03000A0E7F16A7D1761BD8C1CFC09CDC54BD0ED888B861CC40AD19
5B8A99038E161C1010CD63FC656562E610099F4DC7D2009F2938AB814374B00F
B5D8DA50B8321EA682FBE78B6BAD85AB05748E63B475F2B841786F589C393606
364259950F54FD31F6722F59726188FD15EE01029D3AD449E763BCEA9C1C60DD
0A054AB857B3261DF65704DBDB8D8205735C1597A35B943B5FE12CC8FD37EB01
B1771175F5E1E2159F60B47C91D41D0BFF538B0732B2CF5F12A4879E760494BB
F7000318D55BE5D788A281CD159B1D8520F838F3360D8DA8D89C90BC176A840F
E64F91739251DD5A7696D2D4BAA2658CADE9D0F1A1376004702D29D48A2F6B6C
526E53A478304BF674587B8CE3FCB22E21DD2CE9C0924FBC25C6C7C4EFE59DCD
3D9DDBB68C7228558F07AB7E434CF69BD90F67016BE1AF6C42A50C7ED6CD26E7
45C5AC71E9B6392E1A0044B5A38537EA95EEA22C0C7A711D13322DC9995E2ED0
083AB81F11F51AA0B340E026001A26EF4025937EC8C7D2418C2531BCF7B62CD3
B4FD3312D73C30E8D8F40E9EBDB06FE4B59A9C6C7A6DBAC359A1AC1E92202065
FE54AAFE705CDE1F66DCDE60290DDD18A550F7CEAFBD50DB44C0A9EFE2C434D1
467EF8A5982EB34381DDB17335716B5BA9F96F9147B0143F3A3DFF1D895F2FF1
9E6CD3CECF2F6436628EB50647B5727C612722963255221279E54DE60B1EC40A
AB5ABD38C513CC756C2C4E606004F7574AD964D2D739C154DFBD2A24D738A971
D506C5FBFDF3E174177E5A2ED0903E09706A263972B9E7ACEE2850608A6EFFA3
517829452377EBC172A8E04D1D59782319F5C78D2446E4AF11C73D5259D10FAF
DCCD4F009F44BB347E62E96E3AC07FED9C0E8A3B10520E361AC937700B03D47A
4E2696D7749B609721BA1BD250122490F4511C9E2EE02A1D3F265171D22F4085
0C10953A7D26533C0B7D85DCC007B1885B415A022CC702C263D3054070E6BC77
E3C58B941166C13F4560014BFEF283666A72D47D0AEABEC47371FABF275A8422
BAEDD6E99A9A4B1F306F80B58CCE009D97EC7BD8BED26E8DBB69D0C377C4C37D
BF99333017552BE7E2D5D3E7887C91094966683117A67BA221A35AB4962651F1
95CC41E4B38F56174581882F9A6601384084E265241F9F6C8D090A755CE61A1C
FED13092206F1838B8998B71A5C2A3AB701369C921C389AC642CE58E4B0729E8
E8FBF94CFA8F850C135A6C108A70FEC3375B232EB7758779DE85F1D9F272E4AF
6363BD52FBF62A1D433085151E53974A37898C4F6E5DC34D411A63E3A6DA96FD
09940947B150698554DEDEBB82FB96F45F7889DC19215FA3881714528834E149
470BCFDBC561179C6F2A888565D285186C75B17721259EF7AA17D6F11DF97147
0ACA54219A606ADBFCE4AD7831E2BE669E9B9B4DF097AB4C7EE77D21BDEA49EC
293AAB08B30A1E0C2DE2566BF69280DBF1739EBD93CE535FA77C79DD9FAEE7AA
BD914EE13DD8F8D774789A70F371E0D4A1BFEF8F3ED40D023AE2388225E9ACAE
E79D818C4F84F3F0672F63A4F4A79612DE14C1DE8FA2CBB2CE4A530F0063B47D
75F9AD23ECE89FBFC206339B48A582A47F9D934CA5FF2F3A80526B6048FF7A42
EA4DD5B780E75EE7B70BF6B8FE443F5B75915A2780BF5BB309C8CEC1A303DFB5
67E98C84B1E8D03CFC722300F26EBB9CAA924CE1A099976B6839CDCD0A79B80B
AA77EAFEA307A25E61CCE18CE0F77D7FDF54DD4C0DBE6203F10C1B75B319139E
2104F5B88FBBA4DED80581397B0704EF14D290CD53FCFE1F1060C49A4346DAF5
7D8FC81B542F1C14E89E4079D6FF3499F108BA180FC8D0E55DF24A65311FD2BD
91E8FB2DF3682A40C51C27647E52AA8812C90E78D496451DDCD180315222BCBD
5E692ABF4AC2C190EF34E1D66B606B9A10AB553331F6D14A91F37F0BE1BC3811
DA1E51CA63717825174DF8AFFB9CC761560CB149C0C33B29FF45505F0BAFB4FB
C67270DC6A8EF8ABFE85B97FE358EB76297343333ADD3D1BAD57367DDF518E5E
D215865DE535A61CFCBBB88B6DBD219E8A77258BF1C0E3939FA83E9F9A5AC658
76BE2BD3106C1C9D6A61E3436D05A63BA5B74E1FA1FE301F9389F1271B750B0D
4339B9BF8EF8842ED53254EB78349F053633BE55E967D411407BE246E17A70D6
F8177B86C351A42CBD42BCFC256BE7960A99DF593E31A26DE71E0823272EFD03
F8E2B148072E2BFC7BF836F0317E7890520491BE7E68B06BA5C28958AF47E3AD
D42468F661631AB7D038F70905F223F0E320DABC5A1DB90D7561D4D3E13D1A06
0F9AE9FD296BF9B9ACE15865F725F13DF6CF74DD55F4104A4B5FE42E51209993
1CBA9908D0241B92DBE76332D69B1FA142CECCE73EF4CDD1D85B9DF5583460E2
9CEFC6E3CE5D5D3D7A5ED1D6859CE168929DC2888B416F79630A21A87D6B4EC5
842738189A44CA4FF11329555161BFB12F1E4EE50C13404AAED027D05F633806
CEC9470502BC1608C6C792A2A1D8A3C9DE81AF49657FB6B244CB8540DD4A2B65
2694EDDC05E60089482E1176D4FBC9A36A0619A5E566431F573BB978B164BC74
9B96AEBC0323617AFE3010BBC4C1663EC46CF250B33227EB03C923FED46B8635
BF2EA01D8C9791E2FFE409DA5AE5799A1B6A8CCEC8CDDE3DE2B34FFBAF716E1F
4286BB28E43396A35C1C3D285905329C714C95A05C0B339E78208D8C84A6DA00
6D2EBC5343738A7702CFBEE6C5D26D330749F030694A10
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/UniqueID 5087381 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E168092C539BD54D5D3FFCD
2B5E02399614BD5085D49ECD04E14FDB8686A39D6B3F7FAD25D751CA66148781
32296AFD919D83DF85BA4FCBD7FFAA1D831C8897E39819D72F271AB142F1C4B5
D94BB96F64B76C0C8A2D1481910C9571078DC7A4E23C0F133241F06609699988
7AD4D12DD860E2A8E037290EACAB5FC3D90C30A01449D0F3EB9358A8B1E1C2D6
AB92277FC241439926F02B1D5E36F4A5E94C0430A0400E3EDDCCE5BE60B3AEF9
BA97205FA0BAD80C3EDDB35945946E27DC9682816BFA4436B7C995E8353CA6CE
A532D8D57FF0B407C2AD1E917998E0394DA34FB91A4D0DDC48A5A864FD0F9471
93E02919AD6C9143CEAF479DE58330B0464489C0F01853B81FABA80ED0589969
89300C1C867B4F94BD7F470F4F5AE4EB6AD1762D78FDB389BCD7741A144219C0
E2F6E9DC24349F2961470464810C45AC5AD0E28D8F0E2587FE660D65C6BBE763
702D84FF4B2745F76C02E7AC61087EFBC6CD51FD2DD5378881998F9BF4B6EBC0
9EFCADFFA77B37CB2A2C4B91E7ADEBB51D7D870BBFF53D5BA93EF4F0C2A3EE8E
5DEC67F8F66758319E367DF053CBBF541B36FF1AF7F13D61514DA087F692D465
04F825D7568476E6096B0A2575B5F433CC6016EFD0B4441393F46F86995FD975
41CB68E7867D2FF922F2F3D987809908D8A1D433FA5DFF828643F695693AD4B5
871886C89460293D001D2C7F8ECF6763A4C4CBA78F0B28F629AC72C68E4504CE
7BCFCC4FA6AA5E44EF8363BBC98C217C76927006378FE621985D9E96
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-BoldItal
%!PS-AdobeFont-1.0: NimbusSanL-BoldItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -12.0 def
/isFixedPitch false def
/UnderlinePosition -111 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-BoldItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-177 -309 1107 953} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8CB756BFBA4D5AECF4BE5E
CD4699C683E5E6E065CEDD296F8EEF1D3836662A861996EE78FD9D22FF3AFF04
47A8B7FD0FDD2F2867810E1559355E99439DEFA982006CB3C153627A15770AD3
9B9DEFFC210261733003C864223974E842F5C50DC4466F905B826F103F09117D
A18CAD1CD1C450EDBC35A1DDB1411A6B70DD82C6D263F9668A53A8D5BE4523E4
310D3C300046B7ED546245ED686428447BD857D2FC5D2F7C13359F95FBDBF0C8
65FE137C5706D12E3756C2E2722EE193DCB95928742FF603D2F8DCAC9381C8A6
93C435D832691D9F03E2D49FA26C67CE66F45C0097819521128F868EC3DC1848
830DC53D7ACDEADD8DB05EDA4C465B0FA706A05E17091D994579C89890897F2F
847729712FDDCD476D4122751B5485A0292278490A7F09E311F6188F2AC426A6
8702FBCFBC3BE34A3F6B57D45EE25F3332FF220108296B151895D06BED1D9B82
1C9EB7946197ACA04E7EF6F89DF820042478B5146078201573D3E0C5CBA457CF
17E17C8CE317F8047C0A8941039B7255CF90F60D51E1ABE0CCD86BE3F28B1F64
F6DDB25DB89A6A408985414BD11EEC5DE5200200999929ABABD227CEA73D9A47
75083D96B0469B6CBA06BE5ABB69368254BA6A28520DF69BEB167A68E5FD9F55
79139771FF3CEA9690EBC0759A11CCC3FCD5501A83B2624A5E8BC33B04E27901
EF48523C4779D9317A295FCC99B62A4BC9C8DAEE06FDE9B482A53B7D889A9FA0
379669AD9D9DFE63D85FB36204B0C56B563C813D8FE5F96EC166CBCA4110D1F8
197928ED01932308A1C9F4C8CA95E5EDC2BFF60C929F02AE87F5D62290D83B30
45AE7B8381255F8C39C370F9E9B0E4820B4185F2DB8FDFA795D4E0F57AF743C4
A1453AF3FFC96A7F864470FEE912C7A16BA596C8D1286A8B9D15CAA534860B07
AA63CC8D12DCF1F26DB6592515EBD6F73F63A55A12B9C84AD19C21824CCC9E0C
E6AF42F220B87F2291BFB1E1140AAE4EFCB4DCDBBEA45AD2998C692316CBB248
6D61BED35C2A60966857E924FF8CB6D27941097CFBC0152DADAD834A435DFB38
9CC14E33D4CE17497C23877EF771E24ABDD91972D5B20AC7484E4EEF35CC0716
19B9438692C501C7DCD7FFEA4E889870116EC2165B90EE4264B1C4E91D35DF76
7FB1F6AE193A55D17766E68064A83C6231A4FE72F042ECEE7BCDA604B971DF71
5A959492560DBF9027FBFF6B20D68DA5B49ABA0D67A2F6C006B65A81BD05FA8F
CDBA92637D2CE33D4EEBF0AD2A8782CDF9E0ED9ECEFADAE921575CF4A518C1E5
1B921FB8BF6CD7F036B7A36FEBD489C0E4B284FFA332B3D433E40E8CDAD78E42
F9D49AE24D11B9B064801D47F41B366BC38AB11EC6790DA9A6B6B3B8B66822C8
E94A33FB5033DBEA582F8B401381B9B86AB1E1B7E0C048E542485D8916D49130
1D6F8F9E8864D2E7440A64DAC8E1EF4AC76A7070F1256E6DDD52B18DA4304B1B
63AF7EFD23CAE96C94B20AE2F1D147AAB602E9889CA3D7B79D9FE70A9C4D0076
715533B2F948ADF90E8319EAF91DD6435FC6A7C2B91B672FA23D9F875C001E76
EE74EFC86063DE74AB46A38EF4A83D2E4D14BBA67CDE2BA21A60DDB2317D3C80
B1A70B71AA537516A6AE97864CD95FDC0C8D5BF2E7D04AF5F2FCA69C377DDE8B
FDFAAAD7096E1F56D8759534421E85750C955879D940EAB8B5863110DFE711E9
88086AD2A5BCDD97447886FE244E61483722BB725B80C85E2356A05DFAE2F930
17FD89C13B5E45FC7AB9A306F4E8DCC0EC329C83EDD50502FF5CBB09590B40FF
E9611D320B35F5D7A492397D9101BADE7EA701B5F07DF7B38E8D2BB0A148F6A0
013292F581E7E675136A907D99247AA85BBCE75BF96A710C206B78D6B9EB6AC3
9B6BD772E8E2779F1AA6C042AC6847F2B3291D30D4EEB934A0173199B0306F86
50AFE3009F4B5B5B94363EB81B61D72242433D85534DC1B358CE61FA4B9A8A2D
C1BBD437830EF669589A52D66CD401D3BE7B698CB264399D901F1DF32CD5B746
6F76A8368D8F9543230805C8763BA4DF2418489580229DFEA4CF551103450057
E27BFA25D69BC72D24DB44795B8A0E1BEFD383D8280DFB565176F46B6376AC6E
3F7414E4A017F9FAE43F47C36E5544A790DA1EC1000BF23A56FBFBFE048D06EF
30420DAB5F6E30A982C30AA85A6DAD465D7F23FA6CC431D01F3E73FF7F5B209C
5BA293122C6599386A9FDE5673CF35E206C199AD291CD4F0E033445E86EED300
3DF83FCB4D8216D136C4B20B96065574316F2EE82417F462A0254946C2A763DA
FF66422D6CECDF2A91EA9B6982110264E4B82391D797E8F45B23CBA363CD7215
BAA2D57AA59F7A302CA639A34667A82A4C20F71129F117536ED7582550ED1801
D2E1E0890E1A6EC8766C28863DA14FEBA138BC4638F601D167121F2EE337886D
0C1D801AE1CB0BF72A5339374C40C301C20129F370A31CC4DB362A3EC3AD4451
93BF8FD4C70AE34CB2B48DB39EADBD5B796593ABFB7AE698D5D27BA7D7566DF5
77FAB300B6827464032E307878F37560196B744498262C6E8C4C3F2D12308839
530395F5A21DBE11C8E3123588FB9F523440F4C0EE87E3199D01AE237BCA3BA8
093A81FC067869C3112E7DA26D679ED4D88F60425F55F7A116CE6C27E6B87268
B66C9423855D10E969517CBEBB35358D4A2136D6F059E45618804459B97194AF
A15325E3517D7711D1F495D780F5288AF6F8184A73A5CC6D1EC909ECC922D5BF
C1C82638EDDE790B529C3B1B74485813A61582FBE603D54C4AA4831BC0B7A2F8
AAF27E7E115BE85D71C300391464383F84C9F6BD8300C9106E18207935824E6A
56F38B6E73AF842E172330B7C45B67C84563320D69DF611059AB782AAD5BC543
27AB3774CB6B1166CF26E5DD772E599AC1B58628694B42C1373ACFF3D6705B75
CCADBFCF366596F5E35C9B8FC70A618F06E7EA8857421D03BE31EB29C735E3C8
6A6D4BC14018A5E4C844A0E1323D2B6F8AB106FFC9385D0A86BA9936555A6B03
931A7BD7AAC7DF2A8EDD75837F0A4EB5F509A3EAA3441E8203F9481BA4311F6D
D40479F67BC42485D9DB3D8AD97119ECC9771B459F638927F3DC3EF44719CA6C
14D8519CE6AE125904A0668B48B8BFA23840DB74481700CEE9F0A507E3127711
1BC4FC2CE0E37DA58E38CDB754ED372B6E21F2FBB89979DD6B882A592014C28C
C80021BC78B56EAE35EAB4C8C9BEB5303B6BF637826BAC89547EE7EDABF40531
F48A8DB2C360DA554628A3046D90AF2F763B996B536C7F37A046D4D5B2BCDA76
05BC83A83F169F626D49C409EEB53974A69D2FC7B2005207EE7676D8ABC67D28
7AAF68FFDB416935BF25534EF2624694FA3898FB8BA8080801F9BC7611DCF9D6
AA4A8651177CB857FAFC17E3470B4B43338895F3EA54C559CF33FB7376D464D6
3141B1EDA0E6FFD1D82CE4D084352E97F0925B11B8FDD312B5CBFC4A916A6CDB
708E37926B072C4FCC51FC11AF7D0A61C666D3550DABE839BC2DB2DE0B56D88F
2DB4AAA5027F87D7C0A8DC3082D35617EEEBFE47051BBAA42A15C48FFB0FEC7B
89209983F00331BDD361103A359B68FCBAADEA205D585BABD246585FD44C7FFB
D5B878504A44F088E9CCE364DA954F895436AD8E34AB6B32B5003F5D19B78C7F
280053479A3A8234D93B303EDBBE9C97735FB9C83587A2536500DAFBE0CA7772
A589F8D9CDE094D032050163A73F6EA328E44125303428643E8ED21FCA15FAA0
DF5303BDF4C89757BD860D5479A701BBE303E74E8428BBBB487D799F17A28722
DDF48A5182F822529623BD472E3A7B05FDC80205ED6680C2F4E22C93778C30C7
07F241997679C770C20768A0635F43121CCA21E2CFE07DEA46CE64D8A8853C69
5C665F456A96319D7561B43F3859F3821264DA5AA9E03C2096BDEB4024E035D4
468AE5C73036F3704B16222179BC1698D28901577DF22473C89EDBE0951BFD3B
3E5B49EC9A2BAED7052DB44215D6E646EC37BB6FBA5169B7ED30FCFA10237565
6D225707AE1E8BD59E1DEBCC065A98958F8901269120B0F07596530D42F2E319
95DDB0BB2E0B2ADF528AFFE256CD3BF8A84E0EF98138912565D06D282A433E1C
09BC01838E1415387B024B70766152AC159C272B1B9E1A445D5693EDE464C9AC
BAF5B64CECBC44440DF602DDCE0966A6AF25584B16E80D26624B1D7DE6F3AE16
301E644CF68041D4E1FB4CFB98609000DD08748B2D340F5C5E0C8DA6D7D809C7
9DB6E45C56E52B786689D12F58A2C5DC8E33C024353D906B89C79A1D8F75E1FE
87F564DC023CFF61C7324BDFB76CA74C9D6DDBAF21002A1CC5E9D2D252CB24E5
ED04ED73C0E7EE1B6CDF41D5E0BC9B2E7FDBE23A8AA1FF6203A51656470E261E
8C48403B5D89BBCB8E30233EB228E96BB183F54581052B63B704A3C238DCFCD3
AD96645559ACA5056F7FD695D18FC6BE2133004BB7CCB2A35D5C9B4D8E318D16
23B71D63015A8035A9BF1DA3F832114E67896323A364BCBE7828A529F46FFE55
CEC85629C30877B40378154F3C9AE8D3DD9B34A60A1DF76873BD1D5812330D6A
3040C01B13F40D3F8D619DB75BBA85281C413245BACAF61A76C03F37CEF94FA4
247020DABD961136713786AD1DE6AF42F220B87F22913A4347A4522359194522
155CCE495AE3EC6EE9C4FADAA72FC2C4A95C05EDB283FAA0E3C33421B8006C3C
D93617E6B0B1E0DFED7FE5744266CE245095B21421E755BECBE942D5F370CE0C
31BE367A364877B96A40346172CE44FF83A7FC46882A67033816D6BB0CB3B1B5
A5C3D0DCB573C959B446A8A15EE28E5772676DF8F2F603F3442EE12E1992F5F2
4D6DF96C7906DC4D3F814370CD3B1ACEE58FA0AECF8C1F0C4EC952C94AD319C7
15F1CABAA2BB9F7F40C658B8D7EDBF8D085F082F84A35063986A42B54CEA1FF7
1BD3AB8647D6542B4C13689C8AAE5CD664275A5230AAD9DBB9D5FE2EC20FF979
82022F676F74FBCA5445D5B4714DF71181B2244F41DEFEA8CBEB1D816CD92891
EF8EF3001EC59B39FD2733B795EFD6DF67C7D6282C2710A0005699C8E9233C1A
D116C8B52E7064C70C76C8A0F9C4BC6A0E21E540522005D44BE632DF43872D7B
D88A0BD8C6A80494B0F1484E50DA2F8F634EF811C7B0A8DD0C05C28DD04BB003
7FE312A5EEDC40B7A9B5CEE8D867F7A98040673AE5154B9227AB5D9DB4C8E6E9
5D303B716ED984B70273199BC6BC8BAB20AC92EEBB236A1AC1465969C26EF641
9C4C121B84DE8B70FBF0214838753649B7A640441E9F1D298A6451A3275DFEFF
1F9667F2F3067413877FCCDC7736299743FD492FE7C3D7CC0EC29B34165459AF
6AD6A0BD3491332087146DB1E0DA32A221D8C377EF43D68390822CE151FB514D
0FEFBBF1F53606B8481ECD5FA685C542CA5D86A25E591E0531A442F63B6D8659
0198C5957B4070796ECBDC51BE128255227235973697DB087A97CAD622AD2C6A
842FA509880E0C448046CD4A643BCD5069B7523F3406A4BC08DD6698ABE4BA9B
D95617B6ECAED1A7BF1BFEFD016105D2909FAD92EE25DD8427BF0C1FD943FFFB
0B4E00ECFF538E8D3BF95924D84CD1829BA9D358006D2A7FFA731AB0A699687E
5A666547A6C579E0320DFA04DAB4649C9BD693699D467EDF1DC93410DE39713E
FCC5B80930DECE8AB7D09C59200534183A7BC46FD2BE0EC3855E96425AA5F10C
A1EF4608FE644DA9ECBF9FB40C3B28B0F44DBB92FD793EA37DC67D93D0487E79
FE4943C4932B82A848D79FA178B893E3FADC53835443CC5F676C71FDA5E29DF4
C794A4FA812B13AD32B28BC12419F66734602C39047FD0BAFA91D2389F1C2E3B
262BC5DE05E422B435B4D7D91EB17F913A93505042CD6689CE381DAAB3EC41E1
C8BBEAB138088F3E3123018D1A923A078A952BE760F64560F50B146EC0F3B3FF
B1F9D7B7AAEAF9EF398C700948FADE7A6E4B2335E903D3CCD64BCE98CF50EE18
EB907EC3136954D4A9D288D2883F713271099A724DEF3F5D38202A50A8BF86DB
590037D31B757D1835465DB7CC5CEB8D1EEA9E6BA8CDE849B513EE32BC4C0A5E
98B39A9288698AF06712270221C5903F8C590D0E36FD60FA010DE7B08CD1A4F8
FB4DDD2E8CE937DDDDFB2F10CC9D7A16A35DBC00B6445547C25D2893E35EA436
B561FE32BC7FD7832388AC7C94B0BC073FD16A8A80B3FBAECC6BCBF8E6854D2A
1901F8EE29A61E6CB6FE7024057C14583B86DD47D7D0D43830E2B903B64F1AFC
602FCCE890DA197DC0DBFCE43D1E50E454F6200692EC078E3B168C8C7A3EDA1C
457AE3FC7E2EB583176495683BFC3A7D14BBC95AB950C5C0BD9FC83853B47E46
3D7894836A4D7E1FE8FC184AE202B86E7BFB4B00186D318D849C05B30F285EB6
3583B1E81D6C228D0DF0F0D753C3BE52510FF11A6F9E0B83389981067B92DAE7
C12F2BCCDB5E70D725E484023D78E9DB5A0B980BC0BD5160CA0E9A2BAF50FC17
42AC2642EA361544EF101FA8F2D5A9DB4D534757A78CA6082ADD110ED96539CF
733FC53C12C123AE2FFA1E577E1050048F02E8D2D3B22B04F444394CD43A53D6
392EF768BD776EEE1EA3895F1B317E75E5E54D0FEB31A7A07AA201C7E71AB5FC
72AF08A8D70AEE51EB0ABDEEAC94BF3611A6C3560C88244EA38E7D327F0F4C11
7F34AB17610F5D7F76C207FAF95A3296F1F66DE67304C8159E8EB6B7275C48C2
FF8E0AF8A0ABC2E2D3BC6E2C50316E16C3790BA720C7FE89091CAFC6BBB366C7
05803E0F3428DEB8FDB828986367E2372D33DEC4370B18001316F0FFFFFCDE7D
4EDE64887E6AA4AC90243C33DE88A0A1796ABF91B9F2F8642AD3DA077FF97308
0C388746C5C68AC1700237D1B40A978F1EE6D211E53A1EA2B9AE53C9B5DC7867
BE5AB7DCB5083BF52F48B60E9E83E4AD91AEFE55D3F68D46F3ADD237D911F846
A5F811DCCF566089489F7ACAEDD9B914AD2DA85750468534353B20EB77100338
5D82C58509CC2E624E0CFA8AB1B31853FDBE3AEF577B39129A89428301D4DD8E
99CEB625B6DF09BC50C1BC7652B9E76547FDD7396C26BABB986161BC527AE249
95B1DB317AF64FFF99D2B0B7FDC88AC122B16BF91328B4AE1AA41603038510D2
D48CF8D73541D32DC9374FA1C341F87805145CA7C88BBC805C8BD33872E29655
12717D1E7DB316E8D6B5566E53A71D7CC728DFC2FE9054E16FA097D94FDA04E9
77358F9E072E8639DDD327A43E4AE932E2B747CBC8110A5CE80B433B16E39C30
B9A7FD44766E184A71F7A8B57BF15ED1DB28B0D52DDE2B6DCEDA4BB16291A5A7
1D14516CF75DDD0810F02433FFD5B823CD6A422A625C8E686F3F263BC002C888
4F38F3BB6E09768DA01CD5AA7450D22A8FF7418B1748B2B229488CF16B268AA7
54D994E3AF90ECD2A3E0234F01BE72BADE44EB00EE2B7543187ACC0F680A66AA
8D29846FD6EF898C821C238EF07B60D548453D4D8E36CCEA4B9801A1E8530E53
12EC071B101196D37D8E4370C478020D11CD0C411592CCE94339C59CD62730CF
66AC12CF4AB1A44FB87FFAF7E49D20C538F1852A4F8BC1AE23EB9CBE9934A549
ABD10B4D63EA1E87EA4F5ADADB3A9F520F437814780848F8FE3903A941EA2090
2678ED433A0031BCD6269FCB4E10CD9438F6C1C35A6E519B911E95A2EAE2D316
3A6B891F80D2282642457C821A57DEA70CD2286D0B5604241F395CE5D1B5202E
D38F2E4C0363B0ABC51DCE4D89D490458248397176142194F2186E9B1804A05B
350671BA7D5EDFBA344D6BBED49CD71965ABFFB6F13DA4C09C3CE18C36952952
92CCEEA7B21C9B8A0DFE02B50E3354FF10196BCDF6635B99138BBF76176410FC
32F24F319099CB79BBAFA8C8A4D4DAF1BFBB93C7DBEA42BD43657B8718D8FDCB
2D1A3B6A94B3667CEF0FD5FF75032BC8A1930CA75318F382399E28AB06FCF003
3314795375478B68865970DAC97B0963E96D04B6E9D31DF73907739D7EC6A3BD
1B16ED4B0620CD94F6A13F151FC941D0082658D35A251EA07539866A1DB78393
61A2A39E35F4A55A241F8CC5DBE1FF101A0A492961BCB7BCDC2FD909F8B12994
1C49A1B9D9D18DFB3515FCECDBAA9174D995F4154FDB773A7D9E29FE46E464E6
02CD2067CE591D242C1D066E165BF330F4D3A0A807DA8C72ECC33595EF5AE62D
CFB82C50EC9EFD3DB2AFCF4C308C9E0CE76BF62652F79150A2D35BD4580DAC8D
FCB09C9B2F0CAF51517BC04AB08EB03EF22105AE17B1F03D21129B5E9C9CBE06
88490B3A656582CBC1D90D9931DFAAFEF5383EB3A8AE43F782C9C7F3EAAB6839
3918581E5D402BDB26097BCE9413D853847B32CD7D5C5097943F10715FABCBDA
C6D93BCA5F131550E83404843FC36D9283B20A208840FFBAE3ADFCD1893A370F
E5428EC243C0232D9275B6618CD94CE466C1FC3E5A53B11E8B8D4B8190C71F21
94541D624210DE3E63C206E7044D53414D19B1396528AEFE032A82125B839CDF
D2D76DA8AC2E55757D240A62C6D6E0250A358A65ADDBE9EA367E12C615910335
910CA61F5B36096DED07A8250C684DAC5D5595A3C018ED39462647319E38C8A5
EFCAA822840BC8FA3E02D9B520F7E8785DFEF225DBB0E088A006D05396235E0E
22F5A84982C779EC123B4524C794D282665B4A9A9E06210DC568582584C21E0F
14B839C1813663D33205454A1A4B2D9173D593615C445987E30E3040EED97319
A0009DA31174DCF5C2A980B837E51DD299B23B877A487B252B5C8AF4283C0FCA
892719668573A26CC0D7138FEB68C2F14FA41AD6019E7F444B549234C8F9539C
E48B10DFF138B6EAF2FD0B521E205D472B96D3FD0505E6532BEFB47A747E91FA
2F5CF6657549CD60A676FD98E1D866463FB7CDEA3D21FC14CECB4AD7EFC5E0AD
4ACCB17706DA244B8DFDC8B09D4AC677316AC50B0116FDB2C01C1D7ED7215213
846BF109C4ACB558B54D39BD054AD811A883E3DF73C5DF2A818ABA85EF3003CD
3D55C132C55164C6EC8FB34EA7F2003D5029B9867FFFA5FAE46743E6A86CD4EB
C8FB5B0EEC03D9581EA1CEA938B1DEF9713FE5D7AE249A449513D50B8908B6E7
86F693FEC96DB845C708A8A275F0A0D47AB0CB042F19683E6F6CEEA8A4B011B6
12C8579B7CC6B3085775664EC99C0AA51F05BFCB0D4DC15FB599B9EEB0C060DE
98E2C08A663CDE6E83DFD6A950CC30E00C41B94131082DBD5EF01A0F11922C2C
89763C7B0BB6ADF4E299555567A88F879C0A52C826F56408295B70D9FE022B5A
91BB6E98159DCF07FB3038A0C431DC3EA5609FB01BD14B61BD20023FF06A9ED9
A189D846763667E9ACA2D76BF06F0F125F1A9F4A31C461CD143594271E3C1AC3
B1A8B6DC7EF39886E8B9CB758DE90DA4F0049C2A4ED08E25C48440AF23544DDD
A002535DB573AC33814083C5AC36998F18A6397080D2E5361CCF32578540D0EE
AE169098644153D0267A1475E4FC00DDD285958BD97DCF653F1D721BA2E185FD
DAAC32C6925A84ABECFC00B4E520F17DC65DEB358C78F2596A6F892A1DBBB791
C07A45E7DDE2364F63929EEC1D9B8C14D8053F84E69AFF1EDEE23D1E18F1D52C
D2D3EA73BAB53FFDE586EF02F559A6FA964FE50C29555126C69131A962A8AAF3
D3B33E7D926FA19CE25F7EA026E67B750712929867B787B5162ADCF329D2710D
1EF4D0F225214B02885D5423AE88422D79BBDE21C1148FB7EB0E766E84F722FA
B55AB7413849E3AA278F364C3138255AAA8F67C9B93900B00D5149CA89A28A29
4E6D7348787C8498C8EFB529F24A018A1B71BEDD6874F4C01BBA0380FE446359
2A0CC0D168074E8665A397202623D88C45C1D1BD43A33F5CDBBDFBAA5653F93E
CF4E53A4012773A0997220CF12DDA6256AA2F9C8EB37BD583B0A36EA2AFD824C
88453970C05823D0AB800B022A9B59500133156F283BDB4CE6BD2F4C3AE574C7
BC11A9052D06C9F508DE64083AA77BA1EFFF5D089C9E19C81CAC4811C8833E79
F367A8A3E3C33421B8006C3C144934DF04844389AEE76CEDCD7E0DCE9CA8470C
8CAAA290F5900666EBAB3704DA8B2CEAC86A5309E31CFBABE20AB2D4B19221FA
2C1C11CF6FDF3E6E71FAA5EE8939B362568EBA5408F46433EE7C22146826EC90
B35F14FAF24C762E3214DF693A24B1B8860CF9581AD617D1B957D2A7432584FB
EE46CE0AFE56B567F2A61A3D11171B23C397A958A8B899C7CC8821B070E435D5
C3FDE1812802B91DC7E796617ED244FF89F652FA542AD968CB3E74C7CECC76C3
298B3C4B80F0AAD183BCE7B6313C2AC8E0C145A72A0D9F60313880D8716B3961
5FA4C409F6738E71063022D2D73A70AC8A43D9FC05C91A42A2F3FC6977DFF7D0
79EF1BD499EF6DA752362F09843CB94153EF99E148C093F5D97A18B6708EC8BF
2F92C199A49A16AD389EF091D247429B9615F2BDFD8203AAA65D8116A0074C84
695FDDBC264BF43CECD490197823BE01251F876D9294CEA0A46C54B51684BC2F
BD7A7777F475837169F780251F107E276C9A2285E9D60E4A48C3743A1026A65C
7D6B4D981AAA739ECF1848244C116CD5839F6CC423A2BD76A70CA4D0E6EBD329
D7DE0197C5D6AD69FAAEE71B0EFD89B801BE95FDE887CD5181A6F96DF0EABA40
DB4B37C49CB83F7BD49261920D83FD6887591645C92297A264445CD3E15DB85C
9CC6EC08DB9DEC93771232F2E1D7A3CA79BC7B918159496F21A113BFF0AAA5BD
833B0D91A874F95BA4E3D11AA35703BA6031FBCFFC0B180D3D55633A6BF62386
16B603788F6CB5C564ECD7F4FB614D7F21CB0D414EDB9C1D2935C2D2A1FF5DDB
689091FCC695DA147F072986067B33E9581104AAE504A742A8DC81ECF8F3935A
61579F8FB30C4311DA767A96B81C8D5F45186CDFF72CD784CB460D09B477E2EE
FFD527EAE7BD7991197BAE7E68CC6E0BD1464339FE1676F1EC07027C9F3B6B3E
B1E52B6FFFCC8581FEB9998D73417558944C53BC9A850E70D539DD8DB003E563
A48EA308C580BA84A84C9BC409E869FC6B31F156CF93EEF96E46B8A574CBDF3E
43550BB004964050C48466C4352CE45F1E40886EB59A661131E339589950507E
B1A5101DE7E9881C23C57B5FC434FE4B67B08FC64863E15152954169F5E44EA3
EB2FAAF67B8EA4E1A2877E657A2D3EE98F8C8E2C255E2AFC6EDB5EBD070C7B72
27AB621416AC7A810EBAF32A00CBFEF7D2743C3FFE091E57641459A6489F03F9
BA2DF35D2174C21C9AB231D65CCADEA4A530A39880BEF6301EB2A0443C0DFAAD
91E9C3A34577669C6CC81D6483EB03B3D774D50E46BFDF3602743AB24AAB7879
7EB93819B3155BE8B892AC85DF820F51EBFFC16239E346D2597002613A73572D
79A8CBE1700412FF4E99A8AFBFAB8583AE4D112C05816B6C6B60DB5AEA07A6EC
2C6585FC74036F39BAE4AA3FF2FD0FB165D2DD92A6351ED6FE1722ABE70E9065
9DAF0C5B1C80F749FD9E579FCF288653F9B3C73DA6A2F1D8BB9EFA02055754AD
FE28B025DD2E0545805617031403BB992601D292FB22F192CF42985E5FD5D026
EB71DAADF23A51E140DD3D824379C42E7D5EF72A7D5BFB0D0117B54436513885
E1F90D286C7C959A9D114D5E47831EE6A3EAAD746F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C4B19E33
F046CE97B53DEB549FEA96CF6CE66357C4904B7932F5B1CE03CFE3A10C976B9C
C9AD11D7A02816F8E11666CA8B3EE1411DF2CA94172659BAD929E3E3E5248F48
0690CEC6D8F7061608CF2672F65ABDC96B4FCA84D5C847440CF9523D3BF23F6B
D4365582E4B187B6A1A0282ED323BF221EDD0A4CE11CE7EDA738D1AF48B2E19F
EB3DA1664DE99C447C35DFD45069FDED1FCD70B4A6855E91FFBD7146EFE88012
0BFF1D6D1ACB53D5E07FB5795F561A4A3E953BBA7C03A9762ADAE18E58DCE6B3
B1A703122EF3B16963AC7CB9682CE60E17947E7E675D19901C7E8272CE4C9FDF
536ABDFFA429B820A82AEE9A73D7DCF77DDE4D8E251CB3B3A5B0A91C0FCD7FBB
EAD7A812FF194FD049F28B82F4C2D73E41CC73C1C9F668931A2C7EBA5400A1B9
0902EFE6792F207136E1E16B41794E6CBF7316889A602D35C37EF36DEC95AF26
E9BB0900456F2EBF2705ECCE7B2ED90343D23E006ECB282D4B3629BB0C3892F3
FF9C17FE6C5FAB68358E1CD44AFF021948AC9FB8410A3DE22E0A01E367C52470
2A8CFD284CF9E8F505D5DBD7BBE242FE071FEA0094A55ED1CD7C9BE6B7C56C98
16AD1985FB7624F5E48CF6C0C2ED85B466F64C52F017B20CDABB85D24452E086
3942362E764A2BDA0F6C1B24426E302DDC4403A087EFB2850CF3275C7B24275A
AE270F212831F4C4A5D95DEAB61923CA126E587E8F5ED4F2D5738F06E8C4F911
B346B8ECDAC481DEDD2F546305A7CD63CB67D40093C618FBBDF498C8D7EAD8C7
1F5F022D0BBCFAA8670E3B3B999A1697C947AF38D7E1A360E3F0825A9AA77840
D7A9DFD575CE2F04D308F7C553EBF569AC84F2C12AA0869CE107C713A3CCE624
5059BFB3F5AA27D10E337086144AB09286BE3825A3482C5422454C6A9CBBF205
833316780EB88302796FC427A0FB9E53A7BF24577FEB3FA5D85CB6344F908007
183522D3C760C11FC7DA8D14BB5DD800576A6B4D1B991C1BF3DB0F9CA2AC5D22
91079A199F2F6E6DC68213D33EA893B74F6AFF30ED1B51F8B53A015FFD4D2076
B71F73225B151CFCF11E2A2917CF1B3F60E2B4D442307C394E1625F7E60EB12A
F2EB9CA7B17B082F1664D09CB7A3F38AEA99A13F659089426126F47FAD5B6DC7
64101CD437DA3C22BC43E7A8DE07253EB371470EE1E4E42A5D1FA2C4DB5565AD
79D6271AE28E8FDE5D4CB24064C145DE44ED486A1E7DF2DF921F2B1BE5FDB120
D8B781C3655EA72DC22A2A2D37579F0AF60B42320AB25C8D769124328C2718FD
61DD12AEB2F205F7524BDB04A71B9B841E8D1718EC76B4126B1DEFC3C980F9B6
85AADCB99E46ED8A27ED6D85F54C29D524819DF6BCF9D3243E962E5E31B8CCE6
97B76D97B63AA7873A68434E3E19F8BB602F4C370C2628CF64FDF0B9B21B55CD
BC9D43984BD552A6A9DD8168CC7A6B6A8764526105E28C7BAD368EC5EDA3BDC4
2B5E33E37105E1AF8C09C79770359C39E044865DE7308E8B8CC58DFAA362D839
33ACA7B15E5D7DA44256843CFBBC7F844FFE16EF6BB90BE6C4280377C44427AE
AB1B276B793ACF6AED80A2B715340059B49F7CCAFF73E3C7106DE30A0BE3EFD4
7261CBE2F070C4F44720B3C5E0DCD6D6D2C4E34FA18BAC8819AD0AF42F590873
2E97533B225B51D3135CABF9616A60B3F25A32DA0A4430366BD60DA9B1672F58
2F3BD23BB986A6E37E3E99FD381850AE69AE49C54A2D5CF136CF9D10AFF24E0E
C808FB679E3102A6ADCCE719330551E0D6B47E695101EF6B65B0DF76203100ED
60175732483C4717174821FAB3A35463DCC6064489AD1F64B881DFF6FF6642DE
566DF11DFB61516526DB97696A0687421ED026722BDF06E5C2CB6465F357A300
3EA84B1B240B00801872410D07764882E2572D2ADCADBFCA9441E69AB04A10B2
22EB2A73449D8EC84F76CB7C170C51BEEE7495F8C6A43E3257EABB57F4F77133
6D985C0C360B2F5A5877FD00B36CAD20D0DAC57265D721915708AB5C96653E33
2DFECD4974305BFAA1F1C1F92F82DDF3142D2940FCF6BAF0643EEF378752D3CC
D67BFACA1F9168BFCED95DF198A8710094E2F544BCC791D7F03B5D86E8FC36D1
1A069B28E6F993B0458F8008A371CC3E826B53F33B91BDFCE8083AC0179569BE
F78E29D44A9FE5DE1D9C1AA8B44C5BA5FA52C7AE1642BDB232CD5DC3B2E4BB3F
A06632C6E1954359F1D07FB900188796BCD2E7E98D4B35F1A52670B48E62F8B9
B96E2D21F0A1CFFC30CDFC5AB855D56C144D266207BE9EF39DC8AF336680BBC4
AB0D5BEB5160BA66CB7B4B0E3BB4A408480E34D300EE501D5669581704870679
9A5EF39565513DECE394056EC3A3F78459EEC14BB6C8293B5DB98EB8B4C9C1AE
7FE199B0D73D6A1FE327D70B1C97FC8574D4180B533C631D8D3C8313DA9EFC27
F32CC74CF2C8217DFD1C4FFA9B6206002F4CE1B34B581417DF480B97EC3E58C2
261DC3CD4D4201384F271438EC6932AE5DBA545ACD7513D83BD41AA384CC7826
BED655B4CD79B46A5752527AF38AE130DE58928B59A875DA2A45093DA88F34C5
83904DC284B45B1FE4B6E9E11795C3AFBFE14B9497864B3E16A7E9544EA7E773
049D63B95B4F921C1FBB5E6B223264627A5C9762E9CB4B3DC971BE5390402C15
688F7C1E91033937FC0C66EEEF2FED377776CAC680F2C0627E7A167A2992206E
64FEDF1E82380CF54718F6DF85A7723685A2800C540B997CFC98C86E5BCCA2C2
6CA0AF8A510C59E5785C54299607C439FAA1E16B9860765031E331E896F6E15F
7597803B1B466B77EAAE2FDDCE250F72D212A64427572EEE2EA522F9BB9A0BA1
83AE7EB5185BC9CF8B986A4A800FDD3858D5F37D82BC4A7ED4D48EBEC0315B46
B7EBAF4D51258AD07F49A868C4FFC458419F8D592EA8EFBF5E2EE16884FF136F
2A2B90961AAF2D7EA5F3D1B1B84960F0FB847AB87709AAD4FCC3EC39852005B4
6123D78C296F0A156E288433A91BF5609DAAE869A2146D75497D79D1E08D4E74
1F3521EB52C37433B39DD1BC2B47072AC0336024DD1E3BD852A0171352434546
F40C0C888575659CA4EB7D2364666338C4C16B60E843387ED251733B5C83B9CF
D37B9E42A3B1ADC853E1ECE72587512DC9A9F99462BE3D409D7DBDF71305D322
2C2719C7FFF6D4023CBA6352AE36A0C5FB78EE0EFC3CBC45B147188D11AF8339
662D16373012A33E147FF5CD208F8FD7AC52E5342DB762D5628B200B98404F38
11D9CDE32A658891AF2E93F1F4755E7517355034FF7DA57DA8E102D975E79BAA
3C703F35C41AF179897683C2B2078E21A53F2BDFF64900ECE4CA7057DE96A8DE
A24B2F8A44A9AB8520A182588F3BF7C9C5BAEB3D87A60E017E5B87581107DB12
9A17E5AF0BA93E988A469C7251192AD0CF463BCA4DE70B280622D99C8FD8E295
AEC15F8D75BF20C63B321F0584F9623A71F05B694C7382FFD8F54FEFEF9B540A
99B60868D8D3CEB7C2BFEBDE0A635C3E746B597150AFB4994E8B0BE065C44076
6580148609339270049138602AEBF6B5E5D5E8459680BA9CC520B2826B880D6A
47AAACCA3BBA4F5B3149770FD36C3FE47512F303857357F9004A87B2E9415DC4
E738762434947D4ACF22EC57D40ECF628EC96EA4CF43F002FB88A89D4370F728
D86F5DDA983EE440207E66FC1B985F869B5ED92BF513ADD2A34677D5EEDE8D2C
DB0098589449C6B0FF73A672307B352E141233CD8B94215DABD50D4814D9DDCC
E81EF902E697A2A69C64085E0E4AC3B8712D1CA44E0FFC78679BCFC1B3B346E5
BA1FA26A25992856ABBD718CD5D9CCEBBD7DF39B4869DE18407AB99EEF38F110
610C982A479732DB10933ADD9D9AEC2D26C1AD32A34D54C35EBC6BF44300A524
DAE56E7120C75242CB2E380B0E49C43F89D5DD6407BB98387F4EE637F6D81126
E2CB7822EF4003C1E9D0D6FABC0F3B7392B1B7449B4C251FE60A4FCCC99F8637
4E7AA94D8F5C80D77AD3776466739042EACEB28BE451426C8C29EAC0BD2E1727
01FDB0FFFF34D6741E9B6D0C8A568AFE964E1208B00085E830E7B3022051BE9B
DD3A9DB16092CA2C489981D7C68EA062A4821F7B7C8BFF43AE487FF44F0AEED0
706E83E9CDA423AA7F3D9546AE17060A9D5F290F75A4F947E50C4AF24F45772D
E6FBBC2D2FFADF8BE0B2391A550A4455286D1D2F8E5735CD593C919D21097755
A7598AC4B6B6A4D68AF68F0434C7E00919BE27885909D9AD3C7C4F79F96F1415
A7C0E87399FD9931FDA9F1FA542076F28B47B045B7B7F73CA6915CDEEFEDFB47
D236F1DF488EA9100D499A87C0AD1D8DEE6D1F5A75B4E2F93105BCC847EB8EE7
2E09A5046F5DCDE830C0658485CA6AED2EF6EE4338F601D167121F2E6400DBF2
1626A0F0D873CA605C8B739BF90E400524186392C0ADF0909DC6BF309D44E0CB
649EDF23020D11BBC94429EFC2A3A8360C0FB25CF59AFC27F5CC8ACC86ABC443
5B81ED98EA7A31E4D35AB20CA976CF0022D260F04F5B7EF8D27375736544BF27
23FF4B49EF8F80846530A88228B1F44C73E8CF8FF1E99D5CD63E16A7D3967C70
CDE19942E2A18E961B346DDC72A8D8FE5009B0A9A811A6D2D6865320BCCD763C
199C3114555EE52D557F00E4CFEAB8F78BD24CA34028E7E24C98975F1BB707B8
A437181628682E546B3A78CCA9A73EB8A06FF8D5C793023FE0A20AC42421FDDC
E145F05DDE0C7529EB1138A86F16952417FE9C4E1508E5935F0AD38473C91CE1
9F2BFA1E8E7D30195A7F78F46687AF96C90D3C204B7C86718A9EC50F4C9CE0AC
D802147EA162389EA7D7196A7CE7CD9A253931B3A65CC080D414F3A6138865BE
994C6C74228EBDE48299CBCFDB6C84A32807C0BC46CFA13B270AB88ABA340202
E77B33EC7CF4718DD267EEFF4C0000F2F31F3F8C1418126F607D31F950B2CBED
CCB7F6C2FC4BF49FC98FD0797D1C23EE030CC4266899974BE93A89999F15C7E4
EEBE5FAC790043CC161735D2C649C0D4AEC9956EC1DE5224FE992AE7CBE6B3CA
9D8E81E03906EC3F8702FEB4F7F4D38D861DBF4B44A7BBE88938BE055BAED0E3
97DF51EB5494D6070E76BD5700265CDB69B9D833CD0708A1B45270BFF88A00AD
222594D963206BE303D15C6CF2DB27491CF0020EF5F45568AC539B2AD1B8D2DD
DF626D118C53B88340473D690CA59F9E460A46C28EE2A260608B64DFD2DB18B4
A735A8D80DF645CA5AB1B62915763F36C1ED13B184B5A800A663D317A559361A
532E9234D8684AFE194DA347C0CBC9151BE5AB2A2CAFC254B52413A178E62F50
D86AF95E7B445983681B4900ED58133668122629F3C62B0E4E73AFE46C526E75
49CA892D8D2D66411D3E9D6C6AD0AD28E170A1F6B433EF0F82EACC3D9E51798B
4787BE27870BD4F52FF3F8B61BB3E93C7FC6A75D867E63027ED01C26E3FC5FF2
7FC1322BEF37957FFC9E691906709AC46D6632950282A4CD40C3B8DCA8F60E80
7F97AAAE4FFE52F990F780543C70310509B4C66CC4F4C248948E397F8F76AD7E
563FEA357806A3D0D706C0D93B4683C63FC6874EEAD85D6E7D1FD1E8006E12AF
C326F472736F2B9B07233BFF35FAF65A7280E577E044F42EC016455CF3287B6B
334B6BB3BFE3BD4913A7F2DF81F922F528070E72ADAE129E4CA6112209E8BB07
DF1AEAC7B2E74CC5357A2F35EBA2091FD4FDACAD8827070E9E469FDDEC17536F
1DEB1D833359B4088E886C494B49A6EE1941A393CA179BC7CF42F422F1F44B1C
CD4E998B369283A7945A3F17430C320B0BAEF893F5553CB4F42F155C81CD0AEB
710F5FD0A09C7CA0C8C900BEA027C3A45C3D14736860C86B803E24B2314513A9
EDE47AF973E623B7E93842F4C8628BF345252784539A9EA5B3A934529FA1BFB6
9052E68FC157146E1B54DBF9A3801347FA1FFFE41A35E20E65A993ED61AE2CEB
7EDBA3F58C4E3997B9779B9C691E0B6937E93F93ACD179CE454DFF93669E9098
02D87AFE17F524BFEED6FE363BC5E777D703D3935AFEB20379720A63410EB564
7B86F5F63ECE5EA6C01CF150973199963FFBE09B172F530F5E0A27E9B1E1FDFB
1FE2BA88727A80869626C1D2321AF407F6E5FF01DEB3DDF260A42A1B24C133BC
DF133A225F5505E10A8BB0C29834A7A1744629AA631714262F54F18D6A7CCBA2
B4D32B4F3872B02A6F0BEDFA729E6E985765D126CA224953D331460E2842F0FE
03A72D6BF09C1B676766A870BB209CE80A1D27EA076115E8764269918D3529AC
B3ED2A3C733FB9D4ACA8490F001C7DD2A85F14A3FD1C7B27C3BAFA50B4A314BF
2C95A8F95A6CDE819E7CC45486B3C649A2B722300716B4ED5D7DFB58139B391E
A12C11793536F67C1588ED210DB05ADD2D090A11960061A6C420A696A186FCFD
9F1B1A3BDAD73A5E972178537F6906343B7F7E376E2940B8EA2D610CF7B9BD3C
317B581D5AE39E7F80921F6895240E31668D3290C001CE71966BDB39C4CC43E6
B8095297FBD685A3B0A4E238D325FAC472D36FCA1090BA2CDF850F9E1A5C5856
D41D8FB730E04B0C80E13A98044F77C9EF13C7B14A754FD0E07C68A90B3E532C
F67DE36BD013A05DB41B01540963159E3EFBBEE6B30B9443F34E730E93FBA25A
E419F469924573D548A1E5F180782F4AC8C68E473CD0F8C7AE272F8CF645E3DF
F3BF9007CD86D2AA045ED8F5B22144D82C90F5D0F6EA2F71C6B0B117AA039E23
F4CFC91B0A48553A7A28D492233277DDF91BAAAEE61A2B30C71F43F4164D26BC
061911CA5172248E9945997576593D9271B16920B943342D9ADD1E4F08E9A6DB
793C1B1F3B8F937AE7E4D0699150E7FB81180032E66BB8024EDB83A7E8799479
C0B57E7FFD05F881CD7EF4387121F72EEB3A9ABF13F7A9C468C4ED93F5C403C5
A91AE20F1A22BBBC1B1166547B306D7570A208FDE8268D1553651A1C43428357
0DBC57F42D5A4499A75DB103C3AE71702350D62048D1958D36E175006CE89BD3
EA31C5C24F873E1C799493D858A29D7C093407CF8CFC91177749AD10E9E804B0
84EE6B64702F3F968C706541754F90B6F9F596730FA8D3477142D646E34921E9
A051ACCDBF0207DD3D23F8BFB466D6FD1DED9D5E42EAC0AD70B4E4F39B4E372C
87AD1B2D921894E5129DCB059A36569ACE3F8A51D74C737B963ADCA396EB26D0
0189E18855D22FA2B5478D80FCBB49386EB93CB56A1062ED2FD67166D19A73AE
894C8A5D91A8BBABDDF51562F82F04FDFACCCBB612308A6A0ED3AB689244CE53
9D082ADD2BFBBEB52F816EFDBA9CFF83AC072C75218AC4F3C0BC2A7502B3BD73
F6BE22FDF714FD46C9CFCB4CD8F0846D52C8871413AB97CD14B335C3E85D5ADA
1125B5EDC88C49912A2813504CA1EC0B3FB5EFEB091F3ABECB34A508E489571C
79B1FC4EF87B91E7273975069C907199D36165A282C7C6EA3D3FFB17E4621145
D1DDDA77BE41E745F20E6478350414D4D6E842A797547F96F9206935478D5133
B9E7614AD6E2DA7550D3CE0DC86DA1645B9163C671A8E071FDCD636887570397
F728313D2B1C52A334A6513B3180AC47F46FA27C1AE9B4D41487AD6A0A188EFD
CF0426BBC9B6882B31E4D683FC1DCADA8C9F90CBA770F6B6A655DCBB6619344A
24F67D9508E4AC3D5068AAB174E0965F73E0EF8175EEE2C3353D6C8B4E84FCB8
FA302C68CE685290A69F1004852EF82E1E517A76B754D7D03E02278C3CD7842B
EBEB2562852B0EAD2A6F0B4912F9E3728EDFCC5F0CBBE19B2C7C3BD37B2B6300
A083E7D1A12507FB4813F402CE4F609141C06772C69C03EA67B6F3B597A2562E
312E147ED1C425B265D451B1FB3DC30E5C31E39393688B1DDB7F1FDCC4197F99
11A092667D389986B321ECC6195BB737E613A34B5F5BEA5D456CED8D245093AA
8800B6FB0EC0FFCC3DAA09F2007F5238FC4A6F3CC4299017BFDA910604646EC8
A8FA9D2EDEFC40D90CECC09F0EA24196A54A0EA0162A90570FC51678012951BE
7F7511C3F0900E30222E3F1906249F6D40C6A93053B1099FFBE0B875B6EF9298
31916F09001A2C64C63E71032EC103831C19D5377A378C201337E29B0DB25DB4
1477263AD6B0D3882927D5216B2608430E8E27D2EEE3B5F3908099589449C6B0
FF73A6A41CD0C034DE431247BCCDF60D481A682FC9A3243FFCF86ED40C5542B8
EDDAD5828F4CF9FE51011263D55A27B3307952D14D3A765EDC1DD92FEF5FBA23
3A766C13145B95D6AFA72C34908FA38FFA76712E6052F816DED09D9E21D11E42
C6C64D4EF7CB6D59736098F5673F93218243E81F0A4B5E9A8EA42D569CF50A7C
5C98DBFB2FDF4C91C5112C07F9122339C9A410D98936878A847A0A30A41818DC
91C762BB76DF058EBA2A3AEA4DAF42D4185E538A57C1DFC3E44012F882CCEA71
672A09F4F324C7338AB2E32BA7B8D13E3C131184682A1D5480A74CE91533E5F6
8F79BA6E90F5907B5AB7AF0A16CBF3DF3BF895FFCD2FBC64668841086EDFB038
BBCE3B2963FC8FA054C63F68E534BC0A90C349E22E64FF4095B948CE0FD9FF88
ABFC5A2BDD836E133B412824E6C31687AC9348B88FAE559ECD0A293D4022A240
2F874386A08D648FEA2ECD5575D7CB872690C5A21A6DBF2B0095345DC65BF4A7
78641430163976DBF8A2AAF5BC8608CD0438D5FB0DA4F3066FA9DA462A737FA0
8F0447A67ABB74A6A7A075FFFF91CEC66A50A9345E1B236AEF0A503C3C6977B3
D5C3C8223926B360B3CF925E38CBE6CCA897ACC7F4113068DB9CE6779C6141E5
5D89CF3851097E47754F038108BD7A61B0BA1EBE4E2763C7E3FE513E239C2B19
941072F4EFB6FF0B0D28B049F33D63613F114594B40316604847F8B6C0EE416F
C3599050A94159C8C561BEE29D619DBF951E8BD373239E853C88B92D157F8281
DF9FD9F0D0FEA212990138BDA8F0517380AA2DA8E1247DF2FED6F6E0850C7364
7C187BFD9B6B1F9302A51917E8DC317E4B673CF7488912921DEEB08F88C9961E
813783341E40D2CDEFBDAF3A561DEDF4E9E6F2C113D4F393F7B532647689F1F2
CF536A1902A4FAA8415F7DAA46B8629EF58454DBE0D8CA1304AD3FAA0C882FC3
538206694EDFDC0C50A03C17CB87C5EA07C46D4E2E0D1A9C0DC611FF69712561
6375029752B7F8D500AA8BE40A6384C9C2F37FD940C8C6FE4723738E1B94C302
2891C1E1A98080BAD0B23708CBAF76D64858A1D61D4A3A0D231CDE71A9091AD7
775CF293461864787D4852D020F3A21B023512FDD9BFE56488C560CF25BF1521
902C49253C7DB3B08827918F1D826925EBA1BB1AE2DBC13E1BF9CEF9BE42B557
734E97FFF6982EDF2A8941D9AEE0CA41FB1E06D1E5FD8FCC8F6D6B675426C838
164055E7BE45BF7C2F6C99A4CDEBE0910F2A1DCF6ED9FF7180E27717304DE567
C7C5AE21D9F57D751B09A9B87D4DDA69B9F7B12AF06BBEAE2D909A91D27F8B4E
7DFC7F66E52D703C444C03456EC4E5D7CBEDD8B5CD3744AE531C637B5A93F069
9B308588FABA46A841A5E45C24764A66C7D6AEE897DD9674BC1850479B6C1B80
E5D5CF96A3F9CF26A0298E839EADD20F9A8937ECB66412BA410C297219D21848
5877B63B533081CFB5B5E93B0FE1B28CDC9BB12283FFFFA78DE8AC0A49C579FC
D87A71D9940C233DFE8180D59130C9C1B48FE1E99D381F03761CB6C5DB080C1C
8F96052B1C130564276FC073644B6E8F04087FB565249D7F118284ED3C07A7A6
343C76C91717597B5DDE4CFBC37E7D9E3447EBA7B1ECA715B0E16D639A60F596
F3BA9B789A655BE78781776218CE1EAF4EFCC3A372D1586EB0E10BDD17C49FEE
485DE8DF67C92126324B407E0BF31B1E3975821F176E6B10DBF65A51A5814D67
7D39B4B88E99974B21F1F86ED5BC255646B613C3C54208E89075B6363B863473
A48E34AA5936A54B7378A44A6F5D71EF2A4124A4AF6E40594DAEB98D3835BF44
9570C4D6F0E4C0950B713A806CA9C60D3A774AC7E2CCBB6856F6B36B54DBB3E5
2F56A90EAD82EBE0739834F6D0492707FF628290ED0F1D5A8B8D87B877201B59
13EB905CF33C2D51DAA179BB6B4BE60C6E7E6011245E3884A43D3F908A4C50F4
5E9F1D7184322ECE5E140163A213996E963BEBB73D48D3E729A35CC2C3CD5054
E0F7B07E0FD3C36C5D5AE7CBCBBF3C95E72FFE6D0DF6484AE2DA2376320BFC11
0ABA01E22D1B9938300E6E50E32EA9EACB0ACB2EF3DEC7C7EC39E0B8077ECB93
501D27DAD12D293256C893A6E6AACFA93BC238A8D2A6A97D2A8F0A7FFFACC671
0BE721898086A5ABAFBBE399BA316E394F6B24E836800465E5BD7AD13B91BAEA
C685572DA206711EFDEDD78BB6E6D42EF002B8BE0D77745D74CBC649ED750A39
28042A9D10F5415AEF8EF5DC935CD0AF4BE255157C58EE3800A25F7A6D60F769
1ED1DA16FFA7F82227C6A803CD7CBE729728412C42B8FD5DCAA66673E2309F4C
00BB66725CA52DE179B54B95603DE0B78C01A43D2F9321D9DFAD7DC15BDDAB6F
BDB83C400B94D8F17D48B862BA6AA468A6AF0C78DB85B800CCE6CF71E4701381
E6157EEE95CF908FCD532F97CE18679777EEFC65002FE46BCEC2AE3AA09B8EF8
433523F0897217078F1436CE7BA49A9B52A7BC551C1871521A58BD4FA31DDB51
5C54C00DEB2F61B887E280B0EF9F09F2B244436FDB70BEC505D7F4B0E6DF901E
64EE75C1A438DE625F0CE4BD51F434A2DEA2AAA4ECEC8C55AFA7BE39E75CAC6A
114D04BC0062B775BCA5633D251BF3FB27409C3FA734449C3BF5A4B451573AC2
21040F13244BA74B159BF416F74EF64E4037AC19B46AB54A225C77F1E1105CD7
0F030C65A40B03E9683E12455C9B49EC9587706A537B30EF3DA0D5AADA4483BB
90687101F3CCED80B8B147FE5549440FEB19575FD9F430296F0E0EBCDDC82839
28BE9F36FFD6831A0C8CE412D802581D3AABEA731EF307899E64D0640FD1303B
80B1FF695FE40D42A9C8FCF1001C07693C9A05A60646419D1D14262B235F44AA
12BCF1F6E463B650BFC2ECD8314F9931805CDA5AEE1A2E3D4634D8EB3B578F3D
EFCD01B9069D631047678177D0698E17F082EA1CFF48FF6ABB11324D8F4A5C29
349B618667C59EA499B79AE47C5E4BC00647939E52F30A9488A8E95B5FDFF46C
0A19BC25BAA1ABE59A483A4BB33C7E872B160C1654667BB02E2FA5F076336796
0B43D16E0D780DA82533A5039B7790D9B4866745D67D2714273C1CEE3EE1ED7A
CE175ED6E11FD00743FEDE52ABAB74D83FD70064C4A4B0D0F82C361A3D164EDD
FA5380AD35A01EAD80B8BE82F042B61959D738508A8632D0EADD322F6C1B0475
3DE51F4F79719D25991EE4B5474687AED3159D02A9BA6B51C33EA1BAFD7DAAA4
2838F071957E70B91DD538B6AFE472CD2599EA8C5F18DE3256718D6823A1E937
98E7E5F9C81E519C9E9C10EF635D2DBD72131BE773301D7FA30BD045CA65B48F
5715B87094B9F57EBAD57E4EC36B53237559EE3F4145D2FAA074E86206D78D05
B29615893FC2A1D3DC224FC7E9D2C08B085418FDC2E847D7CCA11ADA2E8EF1D5
1D2E88C6BCAF9B713004C88443E83A62C5DCF63BE690CC6A72E2AE02779153AF
3FACA8EC2BA8033721B57BCA326CDB1EDE1D273F666A4197BC51610E5E096E47
39CE75258C6C06784F21C74428A14465C82FB6AF254AF95628D2180C4187541C
C2972554A4D610F9E1AB2E7DFDC58D1144C04E897A396028DD5C7355D3C178E9
EB63076703B29D2587F75955D69B5A41EBEE04CB252075C6471A3554892818E6
F13CFEDB7A035778D3649A810F350E94659586C2FC899B9DE14D50DA4D641151
39C4E8D61974E4A17F76923BB7210133B8EF291E19AFA9E666860414F5C00062
0E4962A05FDC6DAF476212AB237F187082FE471652ED9BCF1B11F4BF8AF39B8B
BD7D5EEAC1026F2F3CEA74162294F78D36624D2F182C9AB0E3F5DC3A15CE0342
336F5EED8A227EC5B72475602B008DFE972D1B4EC62F39F1237FD41DCB9E3DE0
29ED3C1D854628FC13CBCE5F498D50844477888606031FDD3014752FFE7ED450
3F3023F4C2C074374E5AA8809BFB6613E88DBF397D93C964CB94A6D2C004090C
B8DE419317492A02E0CEB4E210F281FBDE6E733F4B3E3F33669D14D365FA9077
64E949A68BB5F1D54463340693131F376D645C6480B39179C3B555E96C370B78
7F53858480105B6DF164EB659CB306F06FB7F822B2A4AE0869283785438FBED9
2A6957AEA191C2A67F6BF9EF8466CC163BD51234F5710B77BE269DE3B2C0C4CD
88ED04EA987E4D33386269BDE97348010A37B6DA445ED143652EAA508B7BFDA1
3157F3A303DF6BB2524513133584D478E3182BFD816E3E837B42CC715F33BEEC
071BA9CFFEA82C242507921E828DF4A2B17115720D1306AD50734E2B141CDEB7
95FE6CCF47F4374A22EA4CF160E2A81084DE3897EDBF9EDF1CC2D0C4E3C51C7E
73862282A3D3589C162CB52F41FC57F6B4B18860C94C59ADFF91E28A8FFE39FB
3C1A446E7EB4081D3978B30F03B166FB7A338971A9732769A0C0D130C4FA451E
B0A4B24F8505D1E472DBD92FCB80F5771647F0AF7E91CD3F4000E7B377CEE93D
339F7D619A609493142D1C429582695EEC98975E67B008CCA0075C7B26AA89C2
2717CB60989BEE5818B8A9D20D1F534CFACFCD5E2DB4245A551581920C90F91A
B4B50D94FD1BC4F148FCC35F99A6B7C908F58ED2080F91D18776B683D1FE6C79
20DB57392E51491DF0306895A7E1C53EF2EF2D4A6E23CEF4B1510BBDD532AFFB
9DDDC541D7E32B49CB1A5A4DB26E2CD0313A67A95C670DC1C7468B285B3BD8DE
76D8FE1C9B522647BD6F0D5FCABA2B623E42E05800B5491F533145B12FEE1D87
07A98B612A4BC3C24B309AFA81948B25ECE88D5017AF4944C7EA0EECC91E7B45
782071F20EAC025835CB602E7B0F0B9783175A1FABD5763B13081DA55288307C
86C49829370D5BF531F787E6DED92F589B6FA328C981F1FD2313F07399094C54
825CB856BD4EA85911D460CF25B8ED62BC50F2713F80C202588EB1CA575A1F7B
732B15DD027F7DF3C33DE21EE580BD5A3D1C89FE8AF8E6C4AE9BBA062DBF5811
8D8E0D79E6451E3170941B1BDF5997800902EFA5E7ADEB8537A8F6AADBD6E386
26ACF335514F95A334F1DDABE5876886703D56EB5924DD066ACECA718F554CA3
351AC97B619898ED1BF7D4A8207863DD9A0700BE6A5831597AD43854CFF6883A
49184883CD2AFAA7E851E3D03ABC8B3DA3F40A588C9B4E4D684E235FC6A3DB2B
EFD2A57993E836155A92ACD8C9683704D71E94BEE64ED8A478431A38FE32E4FD
82B3F9A70F444A53FC565F9082B4AA858C8BF637F8499FBD0DBC5576EDD1AB85
A4481ADF4DF8FFDB8EA1039B99A919A11ED74D95DDCEC7150896C48D0F80
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B00F6C8614D23084A0A70E5D9D0DCD118ABC5B
96912E91FA3F6A8B9A7B83BBB1BD9C2044B5335493C1B74A8C85971E454FE379
C971CC567A316AA11D6745C6489340A939E49D3E402213EFD8AE74ED4DECD30B
3395BAD7D65DCAB84EF2B2BD6E178687EC870720A395B69F7F7EDCF23C703F76
42509CF6CFDF972BBF78431564286903743B208817297B75D9F46F272A3F78C8
9D302D05377EEF4C4109087264467E3E76615D94ECA5E9F4D1C6F05BF19C11DD
D76D595AB0A57E455857E8B1EB46CE0DE84F08D145CDBF6154E83A1CC3EA7E36
D05BDE406BC36D8B66DC0E03E487
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
6B28CA5465E87196191BE975E7C827B443B92E15342609FB93598571C63AE16F
CB7CCF15B8921F38FDB6F24403EBD6D6BB66AB49962AD578E93B235E6180B4FD
4920794B3F976477A04AD21728815D3185C74C8A1DF224DD3EE5110C18BF691A
987AEFB1DA55E4EF631C48E3B2431BF959A66D710C206B8AE5E988B7929BEFDB
CAA93FCD07341EAB622A755FF5608562153DD6A09E462ADBE677E6F550F93921
299E8A99B0B72E990A1D84831236FB6E9D0A187FD36BFA9D85C9CB0414FA7B15
EC02E8C08C8A4F71226A952C5164E68A44344BC4E6810FAD9BFD3532A9A515AC
5D6B5F8B5A1402C2C4DC011B043066ED02AF0030ED0D0769FFA19112C97076BF
F950438DC37B172FADA65DBF0C00EBA9A358B189F80CAB3A55341E4AB391F7C7
C03F47494A607BAF90BBFE31BE2A5E1FBDB07D5BCEE30EC3FE52FF996A595DB1
2AECFA9F05D26DCBE562B2A1AA7A2EB7727816C25E40F84CD33FAD87D5051181
315AEF884EABB76C5B134E7E0185E7D59A2DA456CEDC82C054F197229990E895
ABB45C025940C558D4C98C6764B00D6917766CABAAEE890025CF7C0B1A6BD5BF
1F8E62D380C7849CDF06492BEC78C972A98026CDDF2A30625A96D549BC5441D7
447FA16D4EE9D8C8E841269B1D361F0D9EA02154A8F563979FA89334075CB13E
CAFA59D893763EBCE2B810B880C9135064B104573E9606ABA81A5F36CC8C1A96
A16F057568420A735A17630589E37624FBE48F378107E6EA880A578654ACA1F7
80307168F5F61A1BE8D00DA9D4DC314723B7A2960FE961F23AAB485260F1FAB5
D7EB7B5BC72B8D783E03E76AF474F73A6ADA241621C368BA9CCFE1E68464873A
5914E66617D23AF3A4A972B07B5E6DA345F29CD2561EEF398658783FAA758D30
BB16F55AABDC8377A9F37112DCFE34DC3BC7889625773C7E53224FFFCEE27D32
9A62F6D03DEB59AEFE38551259A8CB31CF7C554C013617581ED034C304360FCB
2040E7C672920455151F81E76A0A95A558E056DFF187989EA1554A4608FE9446
5849B7FA0B5CE164777E439F98CB68C43D7561C8C3974A27AEBB8E50DD091B91
7FFB06EF9CA11F2B83B1A01E3FBAA321D869F1CCD34F56387A78B42685D9AE18
4801CC10F5A1E58E8097DE61046499135FAF474A25E2CA705906A6E15CB57F34
1B05C9D8A5E002854FD16417A7461A508B17DACB587D2C489DDF4EA5F644DBD7
ED1CD223F5F35BA3609BEF46966F9D76990019363CF8E32F286D48D6166E317E
F1297C3BA5E075FCB5F05A12EA2E30F1BE91DCBE42C0D814EAFBE88F1F99445B
49849681DDEC62792828FFF60407BC2A0D2B07C9EED014D89AB4CB82245B574C
006312B0F8FC10B66615CC18BFA5486EDE7284B2871960D316A48AC87E1F9887
01ADD7AA3ED43BF28647D31AAAC8455E617FEB0602B482C0B2BACAFBCC1DDEA0
E7B467FC1D8606ED27EBA786A6267DD8A194A076D5414BFD725E486BBE696AA6
732DBA9D7180CFEA2E4A4C69E45EA1BFEDFBEE2A8C2BF11950654B8BCD2CEE8F
016B5F91CD7BD3C3FDDF87640C0EF718D0F9456E8A6C60FDEF6AE1F8495374FC
EE1BA5EF594812C2DC4989142C4E619B7CE1F7A9D8E6C397E843568DE2D3773F
1011A0DE01524197270E30BAE6F3C9CD656B21DB4796149E6CD9DAA0CA26D7EF
CFEAAC163E337CE82307FF5DE31660FEDB2AE59C1D4E1175EF8D7A10A775188A
72902E320D50767E09F1278BE056BD58AD9AD4EC1F8E6B3249A9C6C27FEDE92D
2AD1C6AFC0752C458860508D87D25D0B9C28CF30998559750979B19A4B62B720
22AEDED9D382C39395666DB76713A79530C8136AE87DB1B3D9CA2207493839F3
E07B353232C40180C4CED3A7FD0CC1D283AB1F0F060B8D6B64408887F615FAB9
EA50E0F2ECE0634A27C43C08DAAB74A12CFFE749970AFDB1D4DE3734728EDE27
D14989F669418D13DE286A49D8130FD9D8D886BAB6ED0F599425336EE08FBFAB
89B236F46D82754F9DDC4A2DCE4E19F69D17044114CD3570D74E2FF553452E6E
F8AE1F93765D6FB5A67A4B449E67EA3A80F21E0E8800FF1C2762EA5E07953BE7
860B8A7F0A82FF0E2DE8322DDB90FC76457AA8D32148F44CD5A5B676946F75BF
A20792906C047FD39065E0873E6959FD85F905D764E04EE5FF731205C532B74E
69D245FD9F07D76946A5F8F62D306F35BAD19087C4E4B0E7759068C23BC1A6B1
A6EE9D2C3C52B7CE0DCC9F3DFD62A83E26AC82AC04BE0D2EFDA868C149EC1EB7
631F1E2E7B4CAB582212E15C2D654F4233D90846D961BD487BA083144D5CD7BD
EEAF39009C9929BF96E423AF2C38119D31FCCA8C32828938B364ED6A170B7683
9FA54672EF1C51FDDBFCF0D49666BA2026714FF6ADA7DB1A742C5A929A73E402
E0E6963E5DD271B704621F1E1DE328C69803AF416FE004123C2746578D3D9660
718963D2BA3FB65439BE3270F5C1238349532D95DA7E932330A2F2D237FC51C6
DFD371960096345E7D020DAE503830C360F1A559C01580A8F0D97C42609BB5C6
4856232D0BF8B91612DD9174425D7F2A3010565DD690BE27EBF822D259C967FE
2FDCE11DA91B1E3AE0582086500C81DE3893324801FAEE0A59A59D691BA3D9FE
DE8E6C5D25271573CF5142B6D7E769F98E3C5A346362A6420675F14C4FC0D59C
19163E5D3342F58043E892BEAA103475EA9DA7E3A2CA5DFBB0476DBFE41EFC33
64FDB70D25053CADA1637224839D315801068EA1DB11704AFEC76D4D9F6A7B0F
7014BC2FDE1AE34DD8EBD294917437F62D307B8596516E4B68E4C7F0FF28E437
9ED86CF203EC068C99DF9526672081AE5805FA162E869FD2E1EBA35E7359649E
5CD868C8F6ABD48EFC0810BB10D119A3BCF07CBA109D9AEC08CDABEE17DDC06B
A9B94F9A3804974F314005723C647EA273E8A7EC585243685975FFDB593D6026
68F0471391284B2A7764050AEDB086D5B4C770BEF2BF2D09FD4EBFE6B5F85C91
C3B79CB1D9086B2B5DEB217AA83051D08B96F66288FCC0631D2DA3F37D33EC3A
468D598C9BEB9FBE45D324615D82F42FB1C12D5949D491DF7578CB5124E84199
31EBD1BC0744B18DFA94FC2496C25597B4B735CFB94E8C41F3318CC0C27D5251
EA488F7FE10CDBA8430E199ED73B69ED71F2FA5A9D72339FB0026DDF4CE4733D
F52A6911F54E03866610C5E9E947022219FB50BAF7177A60B46E67115BDED44B
5D6D8818ABC94FA0592E602779555DD428C9F3F13B01F1A73BB31222FBF9E5DF
4796E21E564B10D478DDBAF6B70FB3860C515C963599B60768220ADEC9AA59FB
5ACD3CE676A6488DF87619D44BB4A81905C4907B40F3DC74417118406B12C8E8
1A6F27E54FC50FC0A1D45C2B3654CBD100750F8DB5F74BCE782109C97130C7BE
E473E08ACE6A5A65822C5C5A89A0A7D76D5FB00519A4545E3EFD4AE559050A72
BD737ACFB883008CC426E579244022611ACFB1C6DF69A1CEA378E83489F806C4
096D777C5D513C452CC084706F4F0FF197B3805FA306FFF6A07D9DC2B7252DBB
05A5E23EB3806C7359C97BDC7A97AEAF643914DCFC7139406E9A98BEDD2B8A8B
9A1D19073CD5B8D07AF32AF35382F7B94603DB3EE4FE664C296B7961981E6E0F
BCA70C9395AABAB8C5BA750DB6CE53E77DF14DD43CF935DDB829964612879D5D
16A663D9A988C0A44D523F9DE328F3740E889516E7234299D93D87F832357650
72A3D8B45E4C134BA365685A39715590784F36E4B70CF918CDF47EF121D588E6
2D879636D432A549BDA22544BA75AE3B94706455C2C0452E9960772C1845C2EF
35327D6E049AAB05581AAAA02AF6368E0CC5A92E4B68CED7DFDB3596EDD0522A
9CB8ECAED4B0E95401B5BE938C7F4E3CC2E3D25690450EC7A2157477A0D09D45
F792CC9593A4B30E0704964F634BA5600D36084D2D4BC32CE67DE84E93244901
A544DB42DFD9CB49E06D59AC3218A94B9A2A04FC5A7AFBC7F8F9C24AB29A3034
B48111656DF1A1FB96FE7AA60DB81235C8781832F8E40A7EF3E6772027F5D80B
033FCCF56970FD3239C744603DB7404A2BA3D54CCDAF1AB445C500145FCF7D27
07F9EFD9F05421594AC565C2626AD071F48B9E23DE6AC2048880E6429B2DF0F1
938F10CC615C5860240F5AB9982627117AAAAB619EF352A0C35D66954B824589
F338011D41F14F06C622F747EC999A5F89025FF0589F675BEAB29A0007C76A1A
FFF48F6B707E39E9A233FEE16D4EE3BE252178749745758B563A53A26E95576C
9901425779FE7C82880687BB40289610F177AF7A1DF5749B392E5159F8D02800
65CA4FD6D28F2411B534A10DC536DC9C9B1B3E5D29B012BF9D65625B26CAF259
B2B6F4B57CD5DCB3261B26615CF520002D18D914141F46B49A637D7BBA40EBD7
AD5E5F1A6F4926DD901F238425E15DFB050760BFC5A9FE2900C81C55C43E2BCE
415D3BE06380E6B6833A74ADEE2645628C1682B2FAD31C60B5FB3117F692FFFB
1003E1E6E9E477B96428E6CDD76A87258C825A5CAF45BE21EBEAFCE67EDC5E74
5BC2E7009E018B93FA9735E228F1DEF47507F95F1F7E06CD5EF9D51B942527FC
3C7896A62C66F02FA1023A1439F8748BA9E4009D232F0EA8A1072A6F3E025D00
7685B9247CE568F21135CC701B886A18601E037BA4A2EBA0A1E1ED59FA779398
E247ECCF3766D1E0ACF358076B6757A348361CD4D20D015E32A4F79D2537DFC7
F615CF0A1B12304EE3045D4EF5AB7960FB243D449605F8010839AC9E4CBFF755
5FFDEEDBA4DB9B1A1223F404815131BD24171299154E93311993F4C7B971A0AC
B9C7003090B45F18A7AFE33A230D451A6617D909FEF32E2C51FAAB861C681B8A
5C35F3F8D45083ED0EC6AF1E05521DEFD54A0E99F03CF553C9902F404B82269D
176A22403033109F52AF47368AFF480DF1D86FC01779B7C8D4E8EEFA4AA67521
1546DE0F1A1DE734C773FF80FD6FAD879B8BAEAFDD46594BF4E27099DDEAA657
51ED019A21CF1FDCE21FB66834781DF8A989FA960AF71417EF12820CE7788D71
7A67D8CA18024B72A24F07A82B1471C283C39FEB05DBF8EA463AE4E0D26EA108
E8056CB31C18CEF9592F8BE7EE320D4D45A402AA972A7CB57FB1B7D5548B58B5
7E814C0382DBE24856A902AB63D1C547D8680BF37BBF6B1830D2679E12CD8A7D
7E87A79C1FDA2F27D007F68E2B11985E1D4C80BD27DEE1CE6C773CE47B83FC72
8C750A674D2B0FD69FC8A5620A83C0FB05578BEFF5EF48762ADF2263EF8C8EC3
7AAE08ACDDC78814FB2D45C6B11C6DC7293F682535DF0D3778A9CD1F5E0125C0
9378828F3AAAA64892BB8ADA34BFD595F4B23AFC3403D512FD654124C9A5BBFE
E4786CF9DDF81FB6AD481331591ED2C202772389ACABB181F4A73D36DEC2489C
25898255E71FECA5232B330EA99DB79561573A2AD1D77B75DC7D0510A6E7D1EC
171245F40D7AB37E3CB514A78A0C23569EF32DD70DBDCEAE546F1EFD3F7BBE3A
FE5AF9B41765F43AF746C2629DBB23C444E6B6365012FB284F2BCD65D69CE88F
32A457B437924737835B73891EBDB9886FA51BD76F811E95AFDB963D17047235
5DED8FA3432EFD096824A07C5D2543FAEA008CA5E4F815D21ECD7E93CF170EBF
61D194C8BD3EF63A91755C47502710D4F8A92A2BF4066F7910EC437CFA6443D5
D379513629E5F3804A14488DF17C3F32864EA9991C3B8EA62EDA4204BC825049
2C1E65B8F66E43698E4EAEDED41BB8D4290F85A8CD521DE44641FC3F732E0DFF
5EF316B131E187FE0373D0F7BDD005EB43F27B42D9D7EA6BB01FC6E8EB0263D0
FF027AE2C689C020E949F81E0FC8A4F176A732BCCC3CC4F6300E9DB21A9E7514
166FA3232BDFBB4E198F6682230A272855126CC8CAE8E1D0FFDE0FDFAA2F124B
A1C76A3046DFF3EE254C9714068784A643CF52C84769C085C68202A07ED77830
BA2067D03A0D88DB25670D1AF557FB6E87D8158F1D953D8450902F8473679F95
6E412D720F31721E671B95BC78C2532FEB86BEFC62C03755034D8BE4D2D05B17
F37968F66C7B757816655E3CEBA82DD98FAABBC2158AE68537E6B4501852249D
3ADAD4C2009E635B54448755A44CF7829C1861BAC13A8F0073FE12546AEAC545
2D41983CEC21FDE8E6005EDC130CE8028224D60923070D1BE64C667C7CED3C47
C8B149D1F3DD5FD7C5B4840DB15C95B7182CAA2BC5694F17797C405FA1035C81
A99357D681924559F41FBAB1CC65B9AD88427DA6C7F64C6085E38C489EE38BB6
D38F336B09923CD26DF46341FDD761F7C6910D096DFEDBD833FFD50B450FD7DE
8DB02E00B98B69994D8A97F03E6DDECB79B3E2CDDA9053FBD22B85CC59097B4A
35E6A54E508F6A0812B824C79B5FBF3DFD41928C66654471729CF48D0C801F87
4B7BB20B539BA1E7F53FA6DA525531E489D1351FD8A82F02BBE82C89CAFA539C
6BF59B65CF19425E7753A49736AB0367DF51956AE30433C576C3545D9B4919F9
9CBA7E0F702A35EA992EA08BC3B3765D573587AB052F85986D8ECC9C2D7D0581
3D73630AFDAEBEAF72B53C3D1A1F28512B16658CBFB2A591F564AA0C4B52476C
A9CDE588E4A909903C6926F9E2E18CDCD4084EFCC7EE774AE25030756BA2C5EB
E769D8873A3CEE5DFFBCE12EF4A77F3AF203976CA8DD346912292894859E6BE9
183187D4B8CF3F628CAF7D3262589CC23A4DAAB30F7D077DEE8652760788EA6D
0162982C8544A40F6952D00C608A1C913CFEB52826AED98F2C9A2A9313B6843A
3904CE09A418CF5B899C31B2732D02BDE0E219AA2DAA60868393FC7BF05DF389
CEB0A938935D81281382A9BC5E2E2DF677BE956D49C3F2DA4318849DB4A179CD
00246FF8DE68BE32591DAC5BA231AF509D36EB88E0DC7696C26B18FA1C9F18E3
57BD2113D571310F3A1648897F25B54FE19F690C3C108D4534AC158EE1C3D1D5
8471FD353BD3C98F05486092AAF38C9D60531622EEF58E1D3601B275792F6256
0DD11136278F94CF74EE191588897ABE38716E510616C785AD272FACA4F803B0
818E4B568BB958C900975CB7B9DE244384872121E5AAB182455C8C5772BC5F09
0DA9A09A6FA686E2CDA29B71B62C61449CEFDF2FBB8E06EA9A43CB3537CE775C
82320622CEEBF7964714A8CD3E9A4B247D64FED74FF5A1D64AE4FBDB4A3FD5CC
6391D4C810EA8486A51F268ADFAFEAF1872637607AF7AA181264E76AE3834CFB
55FF9FAD7A9C68C0C12AF249110BDC13E4A6E4CB04E580511F0AFE6A5DD7C6FB
3247BA68A701515A080F9199EC28EBE1A43C382A08318726348CE49CD7BEDF6D
598B478CBB42FEA8C44547FED8B274EAE0EF731EBD547ADE9AFA351066DD31D4
BD0D77654B8A85886AE9813E8545546897BBDA8EC67FFB51D7B9D8432D402792
A721C733B5E041EFA3890B15CCC2C82F068ED4633F5A56C9D7C43FA850552A9D
A45BD9F9509C91BCA3FD99DD51F48F81BE1838999319B9B5FDF51F2A1DE5E7A8
B10E7E82AD63CEAE02062C962F5DD3BCD415E38B6A2CF214C61D19DA6EC8167C
11D47D9CADCC299E1978BA02B78B487089F9A54E25439DD1C7252DF94EBF2297
C0036D9220442D0F460CC9E97BC0AEA739A7BB2591553F3E13C3C3221F8B2BD7
AC1E4012A676F53B18F91A7E8E47EE6FC6A79FB8BB9EDBFBB491E58A39098AC9
6EFAB69DF50D8F4ACF2F2AA8D267D0794C5641BCB4CECFE8413D328BB35807A6
927AD212C38C87FD8BCC391AAA1243518EA064F2F344F3C06199F62A521DBEFB
9C776D36DE24ED307EF2C47C2E8097D1BB77162BBDA7470FD939C1B465FF1A5A
0E661B952043B1354A473D1AD14537C6E4508C4A8348D90D4EC8E29A7D9A2108
AA530B7221A84C0A702F08BC12EF0D42B4F06ADFBAE1523114426389F09AB331
F36CB737D7C35921CD72E513CFEC37828A4EF2A0BD6370299853C23CBE76B891
4022C234C73B8246F29B5073C1343EFAC3CCC35C17DAE07DE8B8AE7E05896271
BA1703F28D8759081F6E960466A56CA72E10E5208B92778DDDECD77F66A6245D
16E5CBDD297202E2BDB9EC3484162E40EB91C601A40948080E0F9322F5E64ABD
8906D804001417E95F043B4EBE90EB1456D90FE029953E35AAFE4EADD6673B0B
EFE4109EE0DFE24C20CF6078E02DF8038E361E1DA6BA8A070BBAA86B2A31E289
1A866F290BC329974ED7B66EB99FE2092DA8E7935058EEBF32F88D680243832F
77F0B38C96786656CF91C310F89BA56DE6F78DD1AC8D63A884EBBEC89E092AE9
81B91D1B72EAC3371FDBAAD0F607D10BAEC4807B71DBCC1AE32FB68237102B7F
585B1B9711B67260210E94FEE9118EC4B994E4BC480FCD122FFB0ADA031BD6C6
2DCB891E1DB6FA65465B1FD4126757D2CD0D0C3950D1E7C2EA0559DDE5EF252B
4FE08034913D6519FD268D5B098183FCFFCFD6A25CC70DD5CB2E1EE2A3F7FE26
7F901280462D45C7F5F2CAA0892FB710619DA48446453ACA62B45CA722D1E137
63D255D9E62A04BBBF99A714D9145D3A6914DFFBE3DFDAF1A187F108420D1238
2DFC6DB909B90B9A07196AA8C253ABCC1A29226D4A9AA2A31F6EE63196D709B2
B112D527CFC4740750B428423DFD640E87B14E1954F8F6B6728DD4A83C48CD79
9479C0BA1E87E8B57850F124DB4FDA7431A93F5F926E8FE4D07B973D335C8670
9DF282DF9AD60301DCDE22B9FE93EF577D7A2837A80CB93940A213881C84455B

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/UniqueID 5096647 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D78874558397C923C330CCAC7180CE00525B342BB015
E59A1DB2C85CBBE849DC5E9A1E035F4F81843522148C0B0286B281E1CAB803DB
56AA72F379E098B55246D2DECC5A3F186E3B8B32621FB10E7AAB28BE4D673CF3
76230ECB7C6BFB808A1BA421A17DA6ED7EEC042B3522294A7AF140F4D6B48895
8C858454A427A661603136FB4838F3D6DA238DCE958DF8C6E008DC8615647607
C3196F3C4A5FA658EA3E0FA46FF50A880933B2FE621B3E32870B5DE9A1D48E2B
F9452CF6D043D2AF01D609C4AEAE00D64586CFABF000AA6FCC6773015975DF8B
D150E30874ABF6CC106B4510079DD1C09247A6AD308598E7F421AEF13B2B2F2A
02AB93D42D66591C190156585A2264856BE3DAF0044B7BB8387612E6C66A6619
10364C80E2968A1508A3B1183A76C850A03AE894C4B1B35490BAD29BA8E74140
7F76410D5FDAD273F5F78157632276BC39BD69D7047E9DAD1E8BE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A3B9670C67D7CDBA4D5421F2A01241CED719B21FD1FFDD0A5C786D8B71
D6A0C183E57EE02710004BA25B47CB338824D7560F40B382BDA4338A2C02B3BE
B1BFAD36C649323F30FAF580B0BA100CA24CA32174B1AE755434C8540BB163E7
1AA422DB553D268C70631B80988182ECD910E31DFA7DF056AACF7D25A4C8E021
0A35ED58DFBF41CB08EFD4ECD6E80825F023C44738411DB2147CEDDEE6DB4F6A
F517976F88DB803E78AD99028EF2F2F6A93C43F1388059248EC11C62D214B0CE
1348D537A4E62C2771B6F0C49281CE9BA747224A39319AA0BDDC5A3575A75092
F4A78AAC81F189EF542EA849C6F5310F631957E6CD4C7720A4F5FC4593B43F7C
DBA6A7E92933EE6BE8EE100B3E411C70ED2AB5606CA0300F0CC76835CA612161
2D387C89EFF621E4DE9E659E463F88B99217117CE735215DB047F4477582807C
3613F962DB30F3D86B39BB351BAD24611B41F348377A602A2D96D581619FF1E0
462F8563B66E0A9510F7216D5D508AE342DD08A8A1226674657F8B55912690BE
8D182B1B87239B6219E50ABABB64E570A8A58B8504D02C5399ADE5B5D1EFB41C
E47D33596C37EC7F5E162697DB6AE7F75F36AF59BE01972D20F15455C48E0ACD
54E11361CE7C3808C90A46B388B3500E6ED9A47D25701CC2D94A4C86B4F1EF41
EA9C1152EA94E519F4D6BF023881EF20C058DA88EEA3AA27F9683C85F2843709
99DDEE77DEB4B93630BC0C734BA661BD0159E7E046E29182F0498A1DE1A31F32
A6463AC6E5AE654C23E3A51F8F17DAAF8EA752E967C518D0F8B4C8AE108675F8
97998E6F19CC0B70FAD2CE2CE20AC7C2F47266F35B0235E2A1F3B74E60B82951
3429311795C090CF2237D2CC5C578F9F8F573F469CB1768C28C863E20261C95B
4AC22395266D3E4C53FA92BC0343ED91C900553D4348DFDA79501C5FD0BE4882
DCBA26E5FC7EDDAFD9726AC0661242E7FC22863716E3323483156D2C62A3F9BF
45F942DE04794A552CCDB3988B348201D222949F7E3F96BA9033B61C6D1FE7C4
A48D29D419AFBAB5CBCDFD62360DF1F86E1B1EB94FF0D204A01DE3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/UniqueID 5096650 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC50FA1F
3E01CC550BE5FA0703E1B89486C67E8A16C560DBC051028078BEF85B349D3058
55D633040BF5853FE9E50A671CA0A088959B2AACA1B614DBDBD906FBCB6A6B13
7ED6C5BF448F92E9EB110ECAEADA36CADF4B6D79703CA2EA9BBCC810A6E3532F
63C155FB86CBF6A6049D730B4729C613BD759AF3742399C6B118C1D2B38FBC4A
22154122B3E325ACA78A9D418FB443FB334F67F8BD2D33A8491FB2E85BA2BB40
F538F5DCA031BB3A7E6FB3A4739D0E8B81CA2C85963E65D86552C771BEA7D233
62F1811CA91DF9091D9A45D022D215152A2D63B0547C3A80EF52AEF1B3E5196D
D8E54FEF4CD779A9026A17CF3DFD14A0B45A64A15211E85A77D3C62424906B6F
BF2F8DA73DDE063FA68FCEFB994C12316791CDC24C08557175275FB1A0F5D09F
F6248BF9DD6AF1897E337230837D8190D2E06CD1BF023F1C37C1821012E5CE9E
955185656FE232F3F2E0551699BBC31A4C9259C38E292209750511EF02B9C53C
5C549FBA73083447A151841AD245D7F545AADACF01EB9C336764F674273E74F3
25ADCFB1879526F9E87AC1AFD391AA66C9ACB0E2AFA717F915E39719AB399D6C
A43CE2DE9B9944B07B96C57FBBB4821D1E5AEC2F5C366A3A2CE0552422F243C7
A1A78CAF7F20C97094011E5C1167D75674E3A7618BC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/UniqueID 5087384 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /rho put
dup 59 /comma put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB4C90E011A8C6BFD
78C82BDCF2A4AAC3F5414C57C9ED29EEE1D68060473C239DBA7010537BF1D2CA
1310A26AD4F58A892D67651802A3EF85B6AA5A101829266DD160AD2B34B35AC4
91487B62B46A5BE8EB57E87860DBF4113A9B6E1CFB18A021D023EF837C7A37ED
682BF5B6D816CFB4C8D5C24EEE6F987E719D801A080315FFB0FD5A97920F0CC6
A3CEC2DA9EBAC3D7B60F69B5C8863C0DCD21444DA67D3F940B82A27539B438F6
FEBBCA504D15ADC3A4B904700C326F1C8548C3BA9190FEDC6ECD56830031F1DB
36114020A8203628ADA77012FB60C5E2DF310985931AF76829C650816E4A2FDD
A6F2E4BA5E37D5E8C3899EB694ED1738A67157DBBDD9FE30760E4B83276F2EDF
0023B2A6CF8DE853A821B87151842D929D9357B183527FB6F4C469C53F1D0797
7A71B5AB1D01D196705F49D8DBB8AE589D9CEE7A9ACF8EF9316728B6A8D274CE
5AC2D51F391CC4402DC6E22DFEFECF61FE01970D397EECB4598CB44B319EECB1
573BF43796A8086682F099CEE9D534A8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/UniqueID 5000792 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
59EC46D1798442BC3677E06DC5A2F70FA14529BE16F9E7F1473584BAE8060DAE
D28CDE641A2CFA0BCC95E3FEA848F2BA7F649AF87AA556D2ED84E4723B3BAB88
4BB606362C818C8785ED46B2205D9B4A293247679E0464F79D51584476FD528B
2FC34AB914C268C8874E34F01A8F3E17FF98DDB1102F19D4C26C51B7F48C3820
23595C40350B9DFC1DEC1CA5711D6BD3E75F966CAA3936E5654367EBD86676AF
1732A86738FC4C2E7A3A4438D1D16BC51653FAA26C89AE39711B96F7131CD693
1D8AF54191792FEEA3CD0419C5E08EC814344AFC21976BD13CF41A65EEC545AA
C80E0D2727283C290A2EB5B0D232DBCA6F9623A4316E987DED5314A244DDF170
BFC8DB4B8D4F2B7C46FFFCF9F4A83301FCF15591B27312E42836DD5611962F1A
E06A483B4CC63C8BAE4668D738F45701D214AEAB7BBA09F04600BB8D84E76B0A
7F15F0839547F275C4B553216CF17365C14065E67D42E05A9076D394AEB82CAF
D1964CC9A1C90873F25E9FF12D03A1BA252D76A8C6DF38E5967387574159E4B7
BE116A74A0D72DADFBADBA62C98AEF89A55247F983E4878340F9088751631819
0A5099FD33DE3F2C7E7C8EF8C2F37C2C4863D7AD42935AEF0508255780A0C8AF
A02091E449A99CE5933FCE6A38F53A532782D5D529BEEA2B2A2ACE033A650DDE
FF429AAFB3531BFBF1FFB2FFBCC84F9C1013F4EB07D9330D9C73217F84E492EC
FF712E0104F2BE6FB515312A345F4433A29A179F9EEDF437A5893757128078A7
8AD89E9125E71D9F1A83501C58DBDB29E2DA7535C783EB6B1C90F35147161B63
AD140A385EEC6C8E2ABB5A78352B8EA08515270BDFB97B1A2AC307D6AA3575EC
AE482A7FB95CFF78616D7C30D957859EAB507A8969D24E2DCB7480521892AE5C
E2E5B978E7E01A7F3A0A17C93A4F68B9AF3FEB0A588D61040F915F49F59FC85E
67561B3C730474763AA7E614A9936E5F5AAE038ED403EFFB5EE72412611F2ED3
942272DB899C4B1871660699A790D0F82AA42E2CF7F655D03A7D7EA6E865E8CC
86E5586A22AD9EEE62FADC947BF5FE1D50FADA5DB39EEEAC32A38D944A52998F
B03AEBBB21A08C012F63170D0F483EC42A81D5658DEF96A1F00D38D6F737C1D3
B52D9F6AF95F15FEA6E8689F15979757FE343571AD247C169CF31CB4E9487F17
94FF674B0428C064E4083D12856A1AA45C4CD8EC91F3534FB5DA18EF67FA52ED
EAA9708E8E3DBE18D3E8E4E2FA80978312488218B87CB6C129887C3A3DCD0D97
D0721200DF5698E1456E755227B8C32DD31A7D157A6A1AB667D9E9597C62A45B
076A6E68C977155D031F1285CC540E5FEBFB6574190BCCBE56BFC295435F28F7
0430EB03609E30C44755562D3DE65C9FA66BCB4FA0ADDA677252AE189841E61F
5BD5F94FD33C90519D9A09C95F2A87413F842784111F687DAF450C7ED14C13CE
BF204C7B615F80FAC65FB5676042648C9402BC9EF75A6E4CDB23877A16E6094D
DFE12D8DF97ED4DF02AE17C7EFBF6BD2BF54
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278EA0678603F85C0F3013AEB1B2AADDB2337DBAC1B2
52B2B115732959E1FF6C9CA993DF3E7C73B00F4A6A6277A32F6D5D10F8D4EB81
47315E5BD5FBE88DA5B2CD9D71A8B51C803FEC7DE7BCFCB04D76C24CBE3E40E4
9FA463B5D955A864FB6C5A78DC38B8B50077EA5974E8A3ACAA54356EB2F96D30
2EF8913C6BB60B5A8EF988AE0EDF80660A26B4A346117DE5CEE30B3060CE054C
EADEFCD37AD00997C5E88265319829F6550A04FA0598477BF73995AA4C37BD8D
5AC97935DE4A73C3F5D62536119B5F7E15A4207DEF9096D27D3D6EF1153AA263
41AA5AC2DCE2E64092DCD8A43E34700E6547C210AA27A3700E11D47169D9703C
24A911062B9F016F858D6608F304E3C1B9FDF97FB541A598466FC13A35978D6A
C89C5D7D115D20015326BBB45A5A145E6200671FF0A54D301FD690A4644B1B71
31A6F795E04FA38D419001AE35BBF8E45CB1D9EC09E266A736E2119973AB763E
3B857A6D32903A4124E226400024EEA61FCFA7AC9BC05EB2031832FB9EFCFC3F
D4BBD18D50575CA02EB794510B30E8BBB8EDCE84F332FB5FBB9CE97574B443D7
DA77EEE6F17953381550E3E98D5590DB347AFEBD9F116385726E908BAB7D1357
504048C0F2169D030905B62B3F55887945CE1EF5DA1909F3BD556FD50A65160B
FBDA15F774FCE8DC1B25C9158BB885C78475EFBE79D3E91B09E7B1F043D88595
707278FC37797D62308DE371FFF6016EEC5797ED839F79EEB3DE5407EF35C4C5
E91132739A5A75F9C302CD52EC4CFB03A510ED0F96AE70E3ADEB906185A7FF18
9A2D07B80DBFED8DC090734AF589054EC7BC936650A75DDC136E60A19602FB4F
CA967D6482B4CF9C12F53204D8299B2AEBD25C25D001E6D0FC5643B52A74FC6C
B3A90041C07370C7D6EAA68AF3038D60992EFD60F58A86B7BC5D4CDF3C64E447
A751B38DFD0EC03C9BA85E1885730B32681450784C70537C5AA521304B914F76
BCC4D187F7B772557C2BB5F996B9A125989BF1C239C2D02B68AFCDBB973EB6E1
8FA27DE632507F31273EF542C945EECDD602D656C3AC8EEBC0FAB621EF336476
D8018624F7FA2D502263A7BF135C668887A32122B9CE76BD4EF3041C5E5B9AC2
B397AEB6B3D204C5D3B93D589DFE3D57DAE725022A13E5B58D118837CB95CBA3
A9788737E84E5D9796A45BFEAD62148C9249262C85079817BB132205C3F22899
4F5E4C05283CE6AF19B43B989D2D80F0FD531F77D4AF1AD0A567F6826034453A
88888C82E654E60575689C2E33D55192F78F31F206CED05F5716CCB8979ADDE1
4FF1819A07D3DC9298889044532E6F85BFF9F537F7483F84715DF243D8BC5687
C35F9BE079DCFDAA7B20F7C34E5C7F5EBF7D686FA57F0ECA46B0CC0B18D58FDB
D3CACB5691EC6A59C8DF2D6371CECEE30AD85BA0044B752CE22302056B7EA353
1A780FD04DE7C5E6219BA3F75F6714CB27EF89E86331586ACF7DA88D032FE452
0D65778942E7CE3B5A980C10583DA8312584A420CD1894F572A1B8FE8BC34B43
06874181CD3553B5E85EC2F0DDE069BAD0A0B0BA1E3F3305B25C40BFCF74B385
E4F87C8752A6B48AAD9372D47BA2A16214AFF0862D0434DE2082209D9AA906DB
F49D44C6144EB02DF0D4473AB278C6E4994BC5DFC443B93D892C0B9BF7237733
03942056407586940A51CC2CE97E9343DDEF889E6709F12D3AFFD3E001DDC61E
747424387716F411475F22C45FF462F4CFDEB2134E074684500A960B92975B20
A9B477470C2C412FEEFDE59C5FEED17F79F81D70829A1F87C54BB70F1860393F
FBF8662A60E539CE86E8C0489AD53282AE72E5742C9CBB52103CF5A353DEA8D4
91D426362043372BAB25EEA38CE9EFF4074D9C3FAB3EA7AE0ACEF8424DBF9211
F713E12B48517AA297CBCA9746A1C323E8B0C173E4DF9175C0E07D6DDD2F6E10
87A95B88B07CDB0F30BE64F2222736C9430925BBF0EB0B25372062F783DB7BAC
C63B7B3483B62774A2355BE9269DC2F57F06F61BA6D88F97F574B4550D5EB4F8
704BBD25183412D1CF61291438AF6D0BA270D01D25845D6CF3FFCD4506F63A97
92D67BEEB73A99B5980230E4D8A7CAD896A875CA53E704D3A5FB160086F8D96B
A63AEF37B61F0882130C0C37FC0F6F2168B6A3EFEACD3C57FC313459ABB36BF7
1044E46EE8AB7D76324F071968846B952E94F0C3590419E077DDD03848904C75
F649B64D04252B4AE0660E60BD747EF4B5F4B7695918417BE1FF45059E36DCB4
AB13CAE55388F2A537EC31E0663003EB85474E8B5722144FAFAEC78B9A65ECB5
30DAE891BEFA8096991BBC1EA94ABDFEF7CF99F80C71BB26F8B17999A40AD772
D8A66DF83406045DD4721ADBC7D2833902D5AF47F6777EF63BDAB24162C458E3
763E318A5CE87B0B83A021B9840D3FFAD88EFDACC9C3FA6326840FF95794F59F
70E756C974E3310A47441891C1A4A90DC9FDB0E29A4F5D70B6A68AEF802E4875
3529212D13A6AEEEA82A36FD844F7ECB4C8C92F3ADE881AFABB31B243919AABF
57CD9873DF5C72C63AD4B3BCCD19C8DD14BB3AFFD8FD5BF2E8AF8FDEAF2F7540
B4632E2341A5FCEE3211490B113DB9DEC2AD33B0F5E106342D5EB49B6C1FD75D
26C19E6F7D6110E02A3E1C7BBF70227F375C62CBB0ADDA2D37BB0099E6291701
D9E7B697991B1347DC3E92116FD8071D739AB8D01AF2AC8E4CE462D981A4315E
4C806A98F8C71B95C6AD03D54B23BB78BEDC5F645F700BFF326BE4CB245C4798
7F5EAD1C9DFF2AA71D3510D68CB166DBDB9F5427C6939C335FA10DD1A1790355
50652122B42B5CF1B492AEBA0339BC2838A891620FDCD457F15CA9CAD9980CE2
3160D621CE2C45B777DD0F5968EC687BC5DF1C69C668F2579E07CF6EDC6A5B3D
879136C2E92513E2681053980DC29021D2318E86B2E02FD32E28DBFA138CCDBF
495EAFA039CEFB41299A91EDB169121D59535F4E6DCF92F407013BB2CCEB0EC2
81FE876F8BB36B42BCDDE3100CCC4333F3ADF7447B0CBC3EB6A2DCEB56F1033F
4E14E941F432A817A9613858A76B41E18871CA06B767011123C4ECEF07C20F3E
517C8C5955905D89ABD95C4125DE8E70F4629E86B2D21A906030A091B1923D83
7F49ADA863FB1C56F4A10E7A27FC9297F9E759C97FF1C7C25A9964BF85F800AA
0A251E3345CB621418223FC58958028D8211DD2A89C09EFBFC18CC1697D990C6
FB5DFA58D7181C947BEEA60503A851DF0C7809
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258437 52099151 1000 600 600 (supplemental.dvi)
@start /Fa 203[29 2[29 49[{ TeXBase1Encoding ReEncodeFont }2
58.1154 /NimbusRomNo9L-Medi rf /Fb 138[29 1[23 23 5[16
2[16 29 2[26 29 26 1[29 14[36 3[39 12[36 65[{
 TeXBase1Encoding ReEncodeFont }13 58.1154 /NimbusRomNo9L-ReguItal
rf /Fc 105[29 28[29 1[42 1[29 16 23 19 1[29 29 29 45
16 2[16 29 29 19 26 29 26 29 26 7[42 1[55 3[32 39 1[32
4[42 2[42 3[42 39 8[16 29 29 3[29 29 29 29 29 1[15 19
15 2[19 19 40[{ TeXBase1Encoding ReEncodeFont }43 58.1154
/NimbusRomNo9L-Regu rf /Fd 158[34 97[{}1 49.8132 /CMMI6
rf /Fe 134[37 3[41 22 37 26 1[41 41 41 59 18 2[18 41
1[22 37 41 37 41 37 20[41 10[48 65[{ TeXBase1Encoding ReEncodeFont }20
66.4176 /NimbusSanL-BoldItal rf /Ff 198[42 42 42 42 42
42 42 42 42 42 48[{ TeXBase1Encoding ReEncodeFont }10
74.7198 /NimbusSanL-Bold rf /Fg 242[66 13[{}1 58.1154
/CMSY7 rf /Fh 134[29 29 1[29 1[16 29 19 2[32 32 4[13
2[16 32 32 29 13[42 4[39 45 28[32 32 32 1[16 46[{
 TeXBase1Encoding ReEncodeFont }20 58.1154 /NimbusSanL-Regu
rf /Fi 135[33 2[37 21 3[37 37 37 1[21 2[21 1[37 1[33
37 2[37 27[46 1[50 20[19 46[{ TeXBase1Encoding ReEncodeFont }15
74.7198 /NimbusRomNo9L-ReguItal rf /Fj 252[32 3[{}1 49.8132
/CMSY6 rf /Fk 94[25 38[33 37 37 54 37 37 21 29 25 37
37 37 37 58 21 37 1[21 37 37 25 33 37 33 37 33 6[46 2[71
54 54 46 42 50 54 42 54 54 66 46 54 29 25 54 54 42 46
54 50 50 54 6[21 37 37 37 37 37 37 37 37 37 37 21 19
25 19 2[25 25 25 1[62 1[37 31[42 42 2[{ TeXBase1Encoding ReEncodeFont }
72 74.7198 /NimbusRomNo9L-Regu rf /Fl 167[55 1[55 60
51 55 60 65 55 65 60 69 51 60 1[23 60 1[51 55 60 60 60
60 12[46 46 46 46 2[23 28 45[{ TeXBase1Encoding ReEncodeFont }27
83.022 /NimbusSanL-Bold rf /Fm 134[33 33 48 33 33 18
26 22 33 33 33 33 52 18 2[18 33 33 22 29 33 29 33 29
10[48 48 41 37 44 4[59 4[48 1[37 41 48 44 1[48 5[18 18
33 33 33 1[33 1[33 1[33 2[17 22 17 44[{ TeXBase1Encoding ReEncodeFont }
46 66.4176 /NimbusRomNo9L-Regu rf /Fn 150[18 1[33 19[37
12[41 18[33 33 33 2[17 46[{ TeXBase1Encoding ReEncodeFont }8
66.4176 /NimbusRomNo9L-Medi rf /Fo 134[42 2[42 46 23
42 28 1[46 46 46 69 18 2[18 46 46 23 46 46 42 1[46 11[60
1[55 2[55 1[60 69 1[55 1[23 3[55 60 60 55 55 7[46 1[46
1[46 46 46 1[46 46 2[28 23 44[{ TeXBase1Encoding ReEncodeFont }40
83.022 /NimbusSanL-Regu rf /Fp 203[33 33 33 33 49[{}4
58.1154 /CMR7 rf /Fq 252[38 3[{}1 74.7198 /CMSY9 rf /Fr
196[21 32[40 26[{}2 74.7198 /CMMI9 rf /Fs 203[38 38 38
38 49[{}4 74.7198 /CMR9 rf /Ft 134[54 3[60 1[54 36 60
1[60 60 90 2[24 24 60 60 1[60 3[60 7[72 4[66 72 78 5[60
72 2[78 3[78 23[30 44[{ TeXBase1Encoding ReEncodeFont }23
107.929 /NimbusSanL-Regu rf /Fu 134[74 3[81 44 74 52
1[81 81 81 118 37 2[37 81 81 44 74 81 74 81 74 14[96
3[96 12[96 19[44 45[{ TeXBase1Encoding ReEncodeFont }23
132.835 /NimbusSanL-Bold rf /Fv 105[37 34[33 3[37 37
1[15 4[37 1[37 3[37 10[44 5[44 29[37 37 37 1[18 46[{
 TeXBase1Encoding ReEncodeFont }14 66.4176 /NimbusSanL-ReguItal
rf /Fw 171[96 105 114 2[123 114 131 3[44 2[96 2[114 114
114 65[{ TeXBase1Encoding ReEncodeFont }11 157.742 /NimbusSanL-BoldItal
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black 0  0  0  0.15
TeXcolorcmyk -152 -130 a Fw(BIOINFORMA)-14 b(TICS)p Black
Black Black 3465 -213 a Fv(V)-5 b(ol.)18 b(00)g(no)m(.)i(00)e(2012)3681
-130 y(P)m(ages)h(1\22610)p -152 -39 4185 9 v -152 149
a Fu(A)l(utomated)38 b(band)f(annotation)h(f)m(or)f(capillar)q(y)g
(electr)m(ophoresis)-152 324 y(based)g(high-thr)m(oughput)i(RNA)e
(structure)g(pr)m(obing)-152 486 y Ft(Seungm)n(yung)31
b(Lee)693 449 y Fs(1)735 486 y Ft(,)f(Hanjoo)g(Kim)1353
449 y Fs(1)1396 486 y Ft(,)g(Siqi)f(Tian)1875 449 y Fs(2)1918
486 y Ft(,)h(T)-13 b(aehoon)30 b(Lee)2601 449 y Fs(2)2644
486 y Ft(,)-152 610 y(Sung)o(roh)g(Y)-15 b(oon)522 574
y Fs(1)p Fr(;)p Fs(3)p Fr(;)p Fq(\003)684 610 y Ft(,)30
b(Rhiju)g(Das)1212 574 y Fs(2)p Fr(;)p Fs(4)p Fr(;)5
b Fq(\003)-152 713 y Fp(1)-114 743 y Fo(Depar)s(tment)24
b(of)f(ECE,)h(Seoul)g(National)h(Univ)n(ersity)-8 b(,)22
b(Seoul)i(151-744,)g(K)m(orea)2445 713 y Fp(2)2483 743
y Fo(Depar)s(tment)g(of)-152 843 y(Biochemistr)r(y)-8
b(,)24 b(Stanf)n(ord)f(Univ)n(ersity)g(School)g(of)h(Medicine)o(,)g
(Stanf)n(ord,)f(CA)h(94305,)g(USA)2796 812 y Fp(3)2834
843 y Fo(Interdisciplinar)r(y)-152 942 y(Prog)o(r)o(am)g(in)g(Bionf)n
(or)r(matics)o(,)f(Seoul)h(National)h(Univ)n(ersity)-8
b(,)22 b(Seoul)j(151-744,)e(K)m(orea)2614 912 y Fp(4)2651
942 y Fo(Depar)s(tment)h(of)-152 1042 y(Ph)n(ysics)o(,)e(Stanf)n(ord)h
(Univ)n(ersity)-8 b(,)22 b(Stanf)n(ord,)i(CA)f(94305,)h(USA)-152
1374 y(Supplement)p -152 1528 V Black Black -152 3095
a @beginspecial 0 @llx 0 @lly 872 @urx 634 @ury 2420
@rwi @setspecial
%%BeginDocument: figures/supp_eterna_comparison.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: supp_eterna_comparison.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 11/17/2014
%%BoundingBox: 0 0 872 634
%%HiResBoundingBox: 0 0 871.1983 633.9810
%%CropBox: 0 0 871.1983 633.9810
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 96 8
%%BeginData: 25199 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FF52527D7DA87D7D52A852277DA8A8A87D27277D7DA87D7D52
%A8522752A8A8A87D2727A827277D7DA87D52A87D52A87D272727A87DFFA8
%7D27A8522652A87DA87D7DA8A87DA87D7D7DA87DA87D7D7DA87D7DA87D52
%52A87DF8A87D2727A8F852A927F87627272752A87D5227F8277D7D5227F8
%A851F8F827A8A87DFD06FF527D7D52277D27F8527D7D7D522752A8272727
%A8A85252FF7D7DA8A87D7D7DA8F827A87D7D5252A87D7D4B7D7DA8A87D7D
%7D2752275252FD047DA152F827A8527D527DA8A85220274BA8FFA87D5252
%7DFF2776A85252527D7DF8277DF827FFF8F87D52275252F8F827F82752A8
%52F8F8F85252F82727FF7D7DFD06FF27F827F827F827F8272627F827F827
%2727F8277DFFF852FFA87DFFA8A8F852A85252A8FD0427F8272726F82720
%27F827F8202752F827F85252FF2727F8F8F827F8272727F827F8272027F8
%277E52F8A8FF522727F827F8272027F8277DFFA827F8272027F827F82727
%F8F827A87DF827F82752FFF827A85220FD06FFF827A820F85227F85252F8
%7652F8277DF8F8F827F87D7DFF7D7DA8A87DF827A8527D7D27F87D27F852
%52F82752F8F820F8275251275227F8527D525252F8277DF8277D52277D27
%F85252F8277D7D52277DFF2727F85252F827522727F85252FFF8F8525227
%F8F8A82752F8F8F8A852FD04F852FFF8F8A87D7DFD06FF2727FF2027A852
%F8FF7DF87DA8F852A82727A8F827A884A8A87D7DA8A87DFD04A8FF2727A8
%7DF8A87DF852A8F852A827277D4B525252F87D5252527D4B7DFF2727A852
%7DA876F87D7DF852FF7DA87DA8A8522727A8A827A87D7D7C7D7DA8A87D52
%A84B27527D7DA87D522752A87DF8FD04527D5252A8FFA8FD06FF7DA8A852
%27FF7D7DA8A87DFF7D7DA8A84B7DFF27F8FF7DA8A8A87DA884A8A87D7DFF
%A87D7DFF7DA8FFA852A8A87DA8FF7DA87D7DA8A87D7DA87D4B7DA87DA8A8
%7DFFA87D7DFF7D52A8A852FD04A8A97DFFA87D7DFF7D7DA8A87DA87D7D7D
%A87DA8A85227A87DA8A8A87DA87DA852F852A8A87D7DA87DA8A8A8FD09FF
%7DFFFFA8A8FF7DFFFFA8A8FFA87DA8FF7DA8A8A8FFFF7DFFFFA8A8FF7DA8
%FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A9FF7DA8FFA87DFF
%A8A8FFFF7DFFAFA8A8FF84A8FFFF7DFFA8A8FFFF7DFFFFA8A8FF7DA8A87D
%7DFFA8A8A8FF7DFD05A87DA8FFA8A876F876A8FF7DA87D7DA8FFA8FD06FF
%A8FFA8A8FFFF7DA8FF7D84FF7DA8A8A87DA8A87DA8FF7DA8A87DA8FFFD04
%A87DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8FFFF7DFD04A8FFA8A8A8
%A97DFFA87DA8FF7DFFFFA87DFFFD04A87DFFA87DA8FF7DA9FD04A87DA8A8
%FF7DFFA884A8FF7DA8A87DA8FFA8A87D527DA87D7DA8A87DA8FFA8FD09FF
%7DFFFFA8FFFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DA8AFA8A8FFA8A8
%FFFF7DFFFFA8AFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DFFFFA8A8FF
%A8A8A8FF7DFFFFA8A8FF7DA8FFFF84FFA8A8FFFF7DFFFFA8A8FFA8FFA8A8
%A8FFA8A8FFFF7DFFFFA8A8FFA8FFFFA8A8A8277DFFFF7DFF7D7DA8FFA8FD
%04FF7D7DAFFFA8A8FFA87DFFFFA8A8FF7D7DA8A87DFFA8A8A8FF7DFFFF7D
%A8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8FFA87DFFFF
%A8A8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA8
%FFA8A8A87DA87D7D7DA8527DA8A87DA82027A8A87DA852F852FF527DA852
%52FF7D52FD05FFA8FFFFFF7DFFFFA8A8FF7DFFA8A8A8FFA8A8FFFF7DFFFF
%A8A8FF7DFFFFA8A8FFA8A8FFFF7DA8FFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8A8FFA8A8FFA87DFFA8A8FFFF7DFFFFA8A8FFFD05A8FFA8A8FFFF7D
%FFFFA8A8FFA8A87652FD047DA85252A8F827A87D52A85227A876F87DA852
%527D0427FF52F8FD06FFA8FFA87DA8FF7DFD04A8FF7DA8FFA87DFFA87DA8
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFFA8A8A8FFA8A8FFA87DFFA87D
%A8FF7DFFA8A8A8FF7EA8A8A87DFFA87DA8FF7DFD04A8FF7DA8FFA87DFFA8
%7DA8FF7DFD05A852A8A8A87DA8527DA8A152FD05A852A852F852FFFD047D
%52A87D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA87DA8FF7DFFFFA8A8FF7D
%FFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA9A8FFA8A8FFFF7DFFFFA8A8
%FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA8A8FFA8FFA8A8FFFF7DFFA8
%A8A8FF7DFFA8A8A8FFFD04A87DFFFFA8A8FFA8FFFFFF7D7D4B7DA8FF7DAF
%FFA87DFFA8FD06FFA8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA87DFFA87DA8FF
%7DFFFFA8A8FF7DA8FFA87DFFA87DA8FF7DFFFFA8A8FFFD04A87DFFA87DFF
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFFA8A87DFFA8A8FFA87DFFA87D
%A8FF7DFD05A87DA87D527DA8F852A8A85252527DA8A87DA87D7D7DFFA87D
%A82727A8A8A8FD09FF7DA8A8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8FF
%FF7DFD04A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8
%A8FF84A8FFA8A8FFA8A8FFFF7DFFFFA87DFF84A8FFFF7DFFA8A8FFFF7DFF
%FFA8A8FF7D7D27277D52277D7D2752FF527D7D27F852527DA87DF87DA8A8
%5227F827A8A87DFD06FFA8FFA87DA8FF7DFFFF7DA8FF7DA8A8A87DFFA8A8
%A8FF7DFFFF7DA8A87DA8A8A87DFFA87DA8FF7DA8FF7DA8FFA8A8A8A97DFF
%A87DA8FF7DFFA8A8A8FFA8A8A8A97DFFA8A8A8FF7DA8FFA8A8FFFD04A87D
%FFA884A8FF7DA9FFA87D7D27FD047DA87D7DA8A87DFF7C5227527DA85227
%52A85252527D527D7D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFA87DA8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FF
%FF7DFFFFA8AFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFFFA8FFA8
%A8FFFF7DFFFFA8A8FFA8FFFFA87DFFFFA8FFFF7DFFAEA8A8FFFD05A87DF8
%7DFFA87DFFFFA87DA8A8FD06FFA8FFA8A8A8FF7DFFFF84A8FF7DA8A8A87D
%FFA8A8A8FF7DFFA87DA8FF7D2752AF7DFFA8A8A8FF7DFFA87DA8FFA8A8A8
%FF7DFFA8A8FFFF7DFFFFA8A8FFA8A8A8FF7DFFA8A8AFFF7DA8A8A87DFFA8
%A8A8FF7DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DFFA8A8A8
%FFA8A87D527DFFA87EA8FF7DA8A8A8FD09FF7DFFFFA8FFFF7DFFFFA8A8FF
%A8A8FFFF7DFFFFA8FFFF7DFFA8A8517DA8A8FFFF7DFFFFA8A8FF7DAFFFA8
%A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8
%FFFFA8FFA8A8FFFF7DFFFFA8A8FFA8A97D52A8FF7DA8FFA87DFFA8A8A8FF
%A8FF7D527D7D277DFFA87DFF5252A8A87DFD04FF7DA8A8FFA87DA8FF7DFF
%A8A8A8FF7DA8FFA87DFFA87DA8FF7DFF2751A8A852FFAF7D7DFFA87DA8FF
%7DFFA8A8A8FFA8A8FFA87DFFA87DFFA87DFFA8A8A8FF7E5251527DFFA87D
%A8A87DFFFFA8A8A87DA8FFAF7DFFA87DFFFF7DA8A8A87D4BF87DA8A87DA8
%F8527D2727A8FD047D52A852F852A8272727F8F8FF7D7DFD04FFA8A8FF7D
%277DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A827F8FF5227527D52
%A8A87D7DFFA884FFFF7DFFFFA8A8FFA8A8FFFF7D7D27FD0452FF52512727
%2752272752FF527DA87D52522727525227A8A852275227522752277D2727
%27527D7D522752A85252A8A87D272752A876F87DA85227274B527DA87DFD
%06FF27272751277D52517D7D277D527D527D5252275127A17DFFF827FF7D
%27F8F8277D7DF87DA8A8524B7D7DA8FF7D4B4B7D27527D27FD05F8277D27
%F8272752F8F827527D2727A8F827F8275252F8F87DA8FD08F87D7D525252
%7D52A1A87DA8A97DA8A8A8515227A852F852FF7D7D52A87D7D7DA8FD06FF
%767DFFF8F87D52F87D5227527D27527D27F827F8F87DA8FFF8F8FFA8A84B
%27F8A876007DFF7D52F87D53277DA9F8277DF8F8A227F8274BF827277D27
%F8F8272726277D5252F82752F8F82627525227F87DA82726F8F827F82727
%A8A8A87DA87DA8A8FF7DFF7D7DA8FF7DFFFFA8A87DF87DA8A8FD067D52FD
%06FF4B527D20F8FF27F8A87DF8A87D2752FFF8F82727F8A8527C4B52A8A8
%7DA87D527DA87652277D27F87D7D277DA8767DFFF827A827F85227F87D7D
%525227F8F852F8F8274B275227525152F8F8F85252527DA85227FD05F827
%7DA87D7D52527DFFA87DA8A852FFA8A8A8FFA8A87D277DFF7D7DA87D527D
%7D7DFD06FF5252A85276FF7D52FF7D52A8A87DA8A852527D527DFF7D7CA8
%7DFD04A8FF7DA8FFFF5252A87D52FF7DFFFFA8A8FFA8527DFF52527D7D52
%FFFD04A827A1FF52527D4B27A8A87DFFA852767D7DFFFD04A852524B5252
%7652FFA87D7D7D27A8FFFF7DFF7EA8A85227FFA9A8A87DF87DFFA87DFF52
%7DA8A87DFD08FFA8A8FFFF7DFFFFA8A8FF7DFD04A8FFA8A8A8FF7DFF7D7D
%A8FFA8A8A87D7DFFA8A8FFFF7DFFFF84A8FFFD04A87DFFA87D7DA87DFFA8
%A8A8FF7DA8A8FF7DFFFF7D27A87DFFA8A8A8FFA8A8FFA87DFFA87DA8FF7D
%FFFFA87D7D27522727527D27527627277DF8F87D7627A852F852AF27524B
%F820A85252FD09FF7DFFFFA8A8FF7DA8FFA8A8FFA8A8FFFF7DFFFF7EA8FF
%7DFFA8A8A8FF7DA8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA87D
%A8FFA8A8AEA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFFFA8FFA8A8FFFF7DFF
%FFA8A8FFA87D2720F8F8F85227F8F827F827F820F827F8F8A87CF87C7DFD
%04F8277D5227FD06FFA8FFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87DA8
%FF7DFFA8A8A8FF7D7D7DA87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA8
%7DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87D
%FFA87DA8FF7DA8A8A87D27F85127272752F827F8F8F827F8F82727F8A852
%F8517DF820F8F8F8A82727FD09FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF
%7DFFFFA8FFFF7DFFA8A87DA87DA8FFFF7DFFFFA8A8FF7DFFA8A8A8FFA8A8
%FFFF7DA8FFA8A8FFA8A8FFA9A8FFA8A8FFFF7DFFFFA8A8FFA8A8A8AFA8FF
%A8A8FFFF7DFFFFA8A8FFA8A8524BFD057DF827A827517D5227A85227A876
%F87DA87D4B4B2752A85227FD04FF7DA8A8FFA8A8FFFF7DFFFFA8A8FF7DFF
%FFA87DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA8A8A8FF7DFFFFA8A8FF
%A8A8FFA87DFFA87DA8FF7DA8A9A8A8FFFD04A87DFFA87DA8FF7DFFA8A8A8
%FFA8A8FFA87DFFA87DA8FF7DA8AFA8527DA87D52277DA82752A8A87DA8A8
%A87DA852A87D2752FFFD057DA82727FFFD04A87DFFA8FF7DFFFFA8FFFF7D
%FFFFA8A8FFA8A8FFFF7DFFAFA8A8FF7DFFFFA852A8A87DA8FF7DFFFFA8A8
%FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DA8FFA8A8FFA8A8FFFF7DFFFF
%A8A8FF7DA8FFA87DFFA8A8FFFF7DFFFFA8A8FF7D527DA87D7D277DAFFF7D
%FFFFA8A8A87DFFFFA8A8A8277DA9A87DFFA87DA8A87DA87DA8FFFFFFA8FF
%A8A8FFFF7DFFFF7DA8FF7DA8A8A87DFFA8A8A8FF7DFFA87DA8FFA85276A8
%7DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8FFFF7DFFA8A8A8FFFD04A8
%7DFFA884A8FF7DFFA8A8A8FFA8A8A8A97DFFA87DA8FF7DFD04A8FFA8A8FF
%FF7DFFA8A8A8FF7DA9FFA8A8FFA8A827F852FFA8A8A8FF7DA8A8A8FF527D
%FD06FF7DFFFFA8A8FF7DFFFFA8A8FF7DA8FFFF7DFFFFA8FFFF7DFFFFA8A8
%FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA9FF
%A8A8FFA8A8FFFF7DFFFFA8FFFF7DA8FFFFA8FFA8A8A8FF7DFFFFA8A8FF7D
%FFA87D84FFFD04A87DFFA8A8A8FFA8FFA1527D52F87DA87D7DFF7D7DA8A8
%7DA87D7DFFFFFFA8FFA8A8FFFF7DFFFFA8A8FF7DA8A8A87DFFA8A8A8FF7D
%FFFF7DA8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF
%7DFFA8A8A8FFFD04A87DFFA8A8AFFF7DFFCFA87DFFA8A8FFFF7DFFA8A8A8
%FF7DFFFFA8A8A8527DA8A87DA87D7DA8A87DAFA8A8A852F8A852F852A8F8
%527D0526FF7D7DFF527DFD06FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FF
%FF7DFFFFA8A8FFA8A8FFA8A8FFA8A8FFFF7DFFFFA8A8FFA8A8FFFFA8FFA8
%A8FFFF7DFFFFA8A8FFFD04A87DFD04A87D7DFFA87DA8A87DA8A87DA876F8
%7DA827277D2727A87D527D7D52FFFFFFA8FFA87DA8FF7DFD04A8FF7DA8A8
%A87DFFA87DA8FF7DFFA87DA8FF7DA8A8A87DFFA87DA8FF7DFD04A8FFA8A8
%A8FF7DFFA87DA8FF7DFD04A8FFFD04A87DFFA87DA8FF7DFD04A8FFA8A8FF
%A87DFFA87DA8FF7DA8AFA8A8FF7DA8A8A87DFF7D7DA8FF7DFFA8A8A8FFA8
%A852F852FF527DA8AF7DA85252A87DA8FFFFFFA8A8A87DFFA87DA8FF7DA8
%FFA8A8FFA8A87D7D7DFFFFA8A8FF7DA8A8A87DA87DA8FFFF7DFFA884A8FF
%7DA8AFA8A8A876847E7D7DFFA884A8FFFD05A8FFA8A8FFFF7DFFA87DA8AF
%7DA8A8A9A8FF7DA8FFFF7DFFFFA884A87DA9FFFF7DA87DA8FFFF7DFFFFA8
%52FFA8FFFFFFA876F87DA87D7DFFFFA8A8A87DA85227FFFFFFA8CA7D7C76
%5276CAA1A1A7CA7DCACAA8A77CF87DA8A87DCFA8A7A7CA7DA77C527DCA7D
%7DA1A87DA8A7A7A8CFA1A876277D7DF87CA8CA7DA8A1A7A87620A8A1767D
%CFA1A1A87676CA767C7DCAA8A87C517DCFCAA1A1CF7D7D2751A7A8FD057D
%FFA87D7DA852F8FD04A852A852F8527D27527DA87DA87D76FF527DFFFFC2
%9A757675754A76754B4BA06F75A0A0759A6F4B75764A769A7675C9FD0475
%4BA19A7676A075A0A0754BA07575759A75A0754B75A06F7CA07575C96F4B
%757520A0757576A14B76A07675767575A0A04BA1A07675766F76A04B4AC2
%7D7D7DA87D7DA8A87D7DF8277DA87DFF52207D52F8527D27277D2752A87D
%52A87D7DFFA8A02727F85252F82752F8275227F87EFD0427F8525226277D
%F827A852F87D27F87D7CF8524B05277DF8272727F87D27F87D7DF8525227
%2752F827A852F87D27F85227F8527D2727A8F8275227F8A852F87DFFF852
%7D2726FFF827A0A159A87D527DA8527DA82727FFA8A8A8FFA8A852F8527D
%F852AF5252FF7D7DFF527DFFA87C7D7DAF27277D7D7DA87D7DA8A852A8A8
%7D7DA87DA8A87EA8A87DA8A8A8527D7DA8A9FF7DA8FF7DF8A87D7DA8A827
%52A85252A82727847D27FF7EA87D7D7DA87D7D84A87DA8A87D7DA87D2752
%FF7DFF7DA8FFFF5227A8A87DA87DC97C527D7D277DA8F851FF527DA87D52
%FFA87D84A8527D7D274BFF7D7DA8A87DA87D7DFFFFC2F851A8A1A7A84B20
%A17DF8A77D204BFF204BA12720A77676A7A1277C7D2027A17CA7A7764BCA
%7DCAA77DF876A7A1A1CA204BA77DA1A17676A7A1277CA12027CA2651CA76
%20A75220A7A7207CA87DA1A87CA1A17D76CA76207CA19A51F87D27F8527D
%F852A82720A8F8F8A852F8A852F8527DF85152F8F8A97D7DFF7D7D7DFFC9
%C9A1C97CC3A1A1A0C9A0C9A1A1A1C9A0A0A0C9A0C9A1A1A1C9A0C9A0A1A0
%A076A1C3C97CC3A0A0A0C9A0C3A0C9A0C9A0A0A0C9A0C9A1A076C9A0A1A0
%C3A0C9A0A1A1C9A0C9A1A1A0C9A0A1A1C976A0A0A1C3C9A0C9A1A1A0C9A0
%A027F87D7D277D7DF827A852527D27F8A827207D52F87D7DF8277DF827A8
%A87DFFFFA8FFFFFFA8FFA87DA8FF7DFFA8847EFF7DA8A9A859A8A87DA8FF
%7DFFA884A8A87DA87D527DFFA87DA8FF7DFD04A8FF7DA8A9A87DFFA87D7D
%FF7D7EA8A8A8FF7DA8FFA87DFFA87DA8FF7DFFA8A8A8FFFD04A87DFFA87D
%A8FF7DA8A8A85227F85227275252F8527D27277DF8207D5227A852F852A8
%F82752F8F8A8527DFF5252FD06FF7DFFFFA8A8FF7DA8FFA8A8FFA8A8A8FF
%7DFFFFA8FF7D52A87D7DA87D27A8A8A87DFF7D7DA8FF7DFFFFA8A8FFA8A8
%FFFF5227FD04A87DFD04A8FFA8A8A87D7DFF7D7DA8FFFD047DA8FF7DA8FF
%7D7DFFA87DA8FF7D7D527D52FD057D527DF8277E2726A87D7DA87DF87D7D
%F8277D2727A87D52FF7D52FFFFFFA8FFA87EA8FF7DA8AFA87DFF7DFFFFA8
%7DFFA87DA8FF7DFFF827A8A87DAF52F87D52F87DA8F827FFFFA8A8FFFD04
%A87DFFA87D527D527DA8A87DA852A87D7C7D76F852A8765252527D4B5227
%A87D277DFF27527DFF7D7D2752A8A87DA8A8A87DAF7D7DA8A87DA87D7DA8
%A87DA84BF852A82752A8A87DA8A8A8FF7DA8FD04FFA8A87DFFA87DA8FF7D
%FD04A8FFA82627A87DFD04A827F87D2720A87DF8A851F852A8F84BA8CF7D
%A8A8A84B7D7D7DA8FF27F8F827F87D52522727F827F87D51274B7D2727F8
%524B27F8F87D76F87DA827F827527DF8F8F8FFA8A87DFF7DA8A87D7DFF7D
%7DA8FF7DFFA87D7D52F87DFFFF7DFFA8A87D7D52A87D52FFFFFFF8274B27
%F85227F87D76F85252F8277DF8F82027277D27F8527DA852F87D27F8A852
%F852A82727F85252F8527D7D2727F8277D27FD05F8275227FD07F85152FD
%04F820F8F8F852F8F87DA8F820FD06F8A8FF7DA8A8A87DA87D7D7D5252AF
%7D7DA8A87DA851F852A8527DA8A852A87D76FF7DFD04FF2727AFF8F8A852
%F8A87D207D7DF852A82727522727A87D52A87DFF52272027F8A852F852FF
%F827F8A87DF852A87DA8A82727FF27F8F827F8F8267D2727F827F827F827
%277D52522027F827F8205227F87DA82727F8F827F820F8FFFFA8A8FF7DA8
%FFFF7DA82752A8FF7DFFFFA8A87DF87D7D2752FFFFA8A8FFA8A85227FFFF
%FFA8A8A827F8FF27F8A87DF8A87DF827FF7D7D7D27F8A852527D7D847D52
%A827F87D7D277DA82727F87D7DF876A8A87C27F851FF4BF8F8F8265252F8
%2752F8F852F8272727F87D52275252F827277D27F87DA8A852F8F8F82752
%527DA8A87EA8A87DFFA8A8A82727FFFFA8A8FFA8A852F852A8F852FFFF7D
%FFA8A8FF5252A87D7DFFFFA87DFFA97DA8FF7DFD04A8FFA8A8FFA87DFFA8
%A8A82727FF7D7DA87CF8A8FFA87DFF7D7DA8FF7D7DFD04A87D7DA8FF7DA8
%7D7DA8A87DA8A8A87D7D7DA8A8A87DA8A87DA8A87D7D7DA87DA87DA8FFFF
%7DA8A87D7DFFFD04A87DA87DA8FFA87DA8F827A8FF7DFFA8A8A852F87DA8
%A87DFFA87DA8A87DFF5227FFA8FF7DA8A87D7DFF7DFD04A8FF7D7DA8A87D
%FFA87D7DFFFD047DA8A87D524B767DFFA87DA8FF7DFFA8A87DA87DA8A8A8
%7DA8A87DFFA87DFFA8A8A8FF7DA8A8A87DFFA87DA8A87DFF7D7DA8FFFD04
%A87DFFA87DA8FF7DA8A8A87DA87DA87D527DFFA87D7D7D52A87D7DA8A852
%A852F852A8527D7D7D52A87D7DFFFFA8FFFFFFA8A8FF7DFFFFA8A8FF7DA8
%A8A87DFFA8A8A8FF7DA8FF7D7DFF7DFFA8A8275276A8FFFF7DFFFFA8A8FF
%7DA8FFA87DFFA8A8A8FF7DFFFF7DF8A87DA8FFA8A8FFA8A8FFFF7DFFA884
%A8A87DA8FFFFA8FFFD04A87DA8FFA8A8FF7DFFA8A87DA87DA8A8FF7DA87D
%7DA8FFA8FFA8A8A876F87DFFA87DA8A87DA8FF7DFF5227A8FFFF7DA8A87D
%7DFF7DA8A8A87DFF7D7DA8A853A8A87D7DFF7D7DA8A87DA8A852527D7DFF
%A87DA8FF7DFD04A8FFA87DA8A87DFFA87D52FF7D7D7DA8A8FFFD04A87DFF
%A87DA8FF7DA8A8A87DFFFD04A87DFFA87D7DFF7DFD04A8FF7DA8A8A87DA8
%A97D527D52A85252A8FF7DA852F852FFA87DA8FF7DA8A8A8FF7D7D7DFFFF
%A8A8FF2727A8A8A8FF7D27A8A8F852A8A8A8FF7DA8FFA8A8FF7DFFA8A87D
%A87DA8A8FF5252A8A8A8FF7DA8A8A87DFFA87DA8FF7DA7FD04A87DA8FFA8
%A8FFA8A8A8FF7DFFA8A8A8FF7DA8A8A87DFFA8A8FFA87DFD04A8FF7DFFFF
%A8527D527DA87D7DFF527D7D27F8FD04A876F87DFFA87DFF7D7DA8A87DA8
%5252FFFFFFF852A826F8A82727A87DF8A87DF827FFF8517D27F8A827277D
%7D277D8426277D7DA87D7D52A85227A87DF87DA82027A9F852A84BF8A852
%275276277D842027A82752A852F8A852277D7DF852A8274B7D7DA87D52F8
%7D52277D7E7DA8527D27F87DA8527DA8522727F8F8A87D27A852F852FF7D
%7DA85252FF5227FF5252FFFFFFF827FF527DA852F8FF7D7DFFA852A8A8F8
%27FFF8F8FF52F8A87DF852FFF852A87D7DFF7D7DA87DF8FF7DF852FFF852
%FF2727FF27F8A87DF8A852F852FFF852FF5252FF4BF8A87DF8FF7DF852FF
%277DA87DA8FF4BF8A87DF8FF8427F8272727F87D7D2752A82727F8F8F852
%27207D76F87D7D272727F8277D27F8FFA87DFFFFFF527DA8A8AFA8527DA8
%7DA8FF7DAFA8A852A8A87D7DA8527DA87D76A8A87D7DA87DCAA8A8A8FF7D
%A8A87D277DA87D7DFF527DA87D52A85252A8A852A8A87DA8FFF851FF7D52
%FF52F8A8A8F852A87DA8FF7DFFA87D7DAF7D7DA87DFD06F852A827767E52
%2727F820F8F8F87E4BF82752F820F8F8F852F820FF7D7DFD04FFA8A87DFF
%FFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8FFFF7DFFFFA8A8FF7DA8FFFF
%7DFD04A8FF7DFD04A8FFFD04A87DFFA87D7DFFA8FFAFA8A8FFA8527DFF7D
%A8A87D52FFA87DA8FFA8FFA8A8FFA87DFD04A8FF7D20F8F85252277D5227
%277DF8272720F827F8F8A852F8527DFD04F8275227F8FF7D7DFFFFFFA8FF
%A87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA87DA8FF7DFFA8A8A8FFFD04A87D
%FFA87DA8FF7DFD04A8FF7EA8A8A87DFFA87DA8FF7DFD04A8FF7DA8A8A87D
%FFA87DA8FF7DFFA8A8A8FFFD04A87DAEA87DA8FF7DA8A8A87D7D527D5252
%52A1527DA87D5227527D7D7D4BA852F852FF7D52525227AF524BFD04FF7D
%7DFFAFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8FFFF7DFFFFA8
%A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FFA8A8
%FFA8A8FFA8A8FFFF7DFFFFA8A8FF7DA8FFFFA8FFA8A8FFFF7DFFFFA8A8FF
%A8FFFFFF7D7D522727A87DFFFFA87D2727FFA8A8A876F87DFFA87DA9A87D
%A8A852FD04FFA8A8A8FFA884FFFF7DFFFFA8A8FF7DA8A8A87DFFA8A8A8FF
%7DFFA8A8A8FF7DA8A8A87DFFA8A8A8FF7DFFFFA8A8FFFD04A87DFFA87DA8
%A87DFFFFA8A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFA8A8FFA87DFFA87D
%A8FF7DA8FFA8A8FFFD04A8527DA87DA8FF7DFF5252A8FF7DA852F852FFA8
%7DA8A87DAFA87DFD07FFA8FF7DFFA8A8FFFF7DFFFFA8A8FFA8A8FFFF7DFF
%FFA8A8FF7DA8FFA8A8FF7DA8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF
%7DFD04A8FF7DA8FFA87DFFA8A8FFFF7DFFA8A8A8FF7DA8FFFF7DFFA8A8FF
%FF7DFFA8A8A8FF7DA8A8A87DFFFF7D52FF7DA8FF7D27FFA8FFFFA8275252
%7DAFFF7DA8FFA8F87DA8FD06FFA8FFA87DA8FF7DA8A87DA8FF7DA8A8A87D
%FFA8A8A8FF7DFFFF7DA8FF7DA8A8A87DFFA87DA8FF7DFFFF7DA8FFFD04A8
%7DFFA884A8A87DFD04A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFFD04A87D
%FFA8A8A8FF7DA9FFA8527D7DA8522752522652A8A252527D7DF87CA87DFD
%0427A87EA87D52527D7DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFFFA8FFFF7DFFFFA87DFFA8A8FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FF
%FF7DFFA8A8A8FF7DFD04A8FFA8A8A8FF7DFFFFA8A8FFA8A8FFFFA8FFA8A8
%FFFF7DFFFFA8A8FFA827F8272727F87D7D2752FF2752272727F8F8527D52
%F84B27A852272752FFA87DFD06FFA8FFA8A8FFFF7DFFFF84A8FF7DA8A8A8
%7DFFA8A8A8FF7DFFFF7DA8FFFD04A87DFFA8A8A8FF7DFFFFA8A8FFA8A8A8
%FF7DFFA87DA8FF7DFFFFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA8FFA87DFFA8
%A8FFFF7DFFA8A8A8FF7DA8A8A85252275227527DA87D7DA8F8F852274B52
%27F87D27F852A8FD0552FFA87DFD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8
%FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FF
%A8A8FFFF7DA8A87DA8FFA8A8FFA8A8FF7DA8FFFF7DFFA8A8A8FFFD05A8FF
%A8A8FFFF7DFFFFA8A87D52FFA8A87DA9A8A8FFA87DFFF827FFA87DA8A87D
%7D52F87DFF7D7DFFA87DA8FF7DFD06FFA8FFA87DA8FF7DFD04A8FF7DA8A8
%A87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A852A8A87DA8FF7DFD04A8FF7EA8
%A8A87DFFA87DA8A87DFD04A8FF7DA8A8A87DFFA87DA8FF7DFD05A87D2752
%FF7DFFA87DA8FF7DA8527DA8FFA87DA8FF7DFFA87D7652527DA8A8A8FFA8
%7D524B52FF7D7DA8FF7DA8A8A8FD08FFA87DFFFFA8FFFF7DFFFFA8A8FF7D
%A8A8FF7DFFA8A8A8524BFFFD04A8527DA8FF5252FFA8A8FF7DFFFFA8A8FF
%A8A8FFFF7DFFA8A8A8FF7DFD04A8FFFD04A87DFFA8A8A8FFA8AF7D522752
%27A8A8A87DFFA87DA87D52FFA8A87652277D7D2752A8A8A87DA87DA8A8FF
%7DA1527D76A87DA87D7DA8FFA8FD06FFA8FF84A8FFFF7DFFFF7D52FF7DA8
%A8A87DFFA884A8FF7DFFF827A8FFA8A8A87D7DFFA87652A17DFFFFA8A8A8
%7DA8A8A87DFFA884A87D52FFFD04A87DA8AFAF7DA97D7DA8FF7DFFA8A8A8
%7D27A8522752A87D7D5227277DF8272727F87D27F8527DF852A8522727F8
%277D52207D27F827525252F827277D527DFD04FFA8A8A952275152A8A8A8
%FF7D7DFFA8A8FFA8A8FFFF84FFA8A8A8F8F8FFA87D4B7D7DA8FFFF522705
%52FFFF7D522727A8FFA87DA8FF5227F82752A87DA85251527C2752275252
%A8275252524B7D527D7D7D277DA7522727F82727F8F8524B4B7DA8527DA8
%7D767DF8275252272727525252F87DA87D52522752A87D7DFD04FF7DA827
%27F827F87D5227525252A87D2752A1274B2751277D2727F827A852275227
%277D7D275227F8F8527D7DF8272752FD0427525205F8F8F827527D27F827
%FD05F85152FD06F827207D27F852A7FD07F820A8FFA8A8A8FF7DFFA87D52
%2726FF5252277DA87D52527DFF7DA8FFA87DFFA87DFD06FF27277D20277D
%52F87D52527D7DF8527D20F8512727527D5227F8272752A8A827A852277D
%FFF827F87D525152A8202720F8F87D512DF827F8F8F87D27F8F827F827F8
%F8277DF827F8F8F827F8F87D52F87DA8F8F827F827F8F8F87D7DA87DA852
%7D7D5252A8527C7D2726A87D525252F87D7D27527D7D7D525227FD06FFF8
%27525227A827F8A87D52A87DF827A8F8277D27F8A87DFFF820275252A87D
%7C7DA87DA8A827F8F87D7DF8767D20277DF8277D27F85227F82752525227
%F8F827F8F8F8527D5227F805272752277D27277DFF2727F8F8F827F820F8
%2E525227275252F852A97D5227274B2627277D27275252F82727525227F8
%F8FD06FF52527D7DFFA87D4BCF7DA8FFA8527DA85276A82752FF7D522720
%FFA77DA8A827A8A8A87DFF7D7D27FF7D277DA8277DA85276A85252A87D27
%A87DA8A8A8F827FD0552FFAF7D27A17DA8A8FF7D7D27A8FFA85252F82752
%F8F87D7DA82752527D7D522752A87D52A87D52527D7D7C277D7D7D527D7D
%7D275227FD06FFA8FF7D7DA8A87DFFA8A8A8FF7DFFAFA87EFFA8A8FFFF7D
%7DF826A8A87DA17C527DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA8A8AF
%A87DFFA8A8A8FF7D5252A87DFFA87DA8FF7D7DA8A8A8FF7DA87D527DFFA8
%7DA827277D272776FD067DA87D5227A87DA852527DA87D7D27F852A8A87D
%7D7D524B52A8FD09FF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFA87DFFFFA8A8
%5227FFA8A87D7D27A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFF
%A8A8FFA8A8FFA8A8FFA8A8CFFF7DFFFFA8A8FFA8A8FFFFA8FF7DA8FFFF7D
%FD04A8FF7D5252A97DFD05A87DA8A87D7D7D527D7DA82727F8527DFFFD04
%7DF87DA8FD06FFA8FFA8A8FFFF7DFFFFA8A8FF7DA8FFA87DFFA87DA8FF7D
%A87D7DA8FF7DA8A87D7DFFA87DA8FF7DFFA8A8A8FF7DA8FFA87DFFA87DFF
%FF7DFFFFA8A8FFFD04A87DFFA87DA8FF7DFD04A8FFFD04A87DFFA87DA8FF
%7DA8FFA82776A87DA7A8527DA852F8FF7D527D7D4B7D7D27F8F82027FF7D
%27A87DF84BA8FD07FFA8FF7DFFFFA8FFFF7DFFFFA8A8FFA8A8FFFF7DFFA8
%A8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7D
%FFA8A8A8FF84A8FFA8A8FFA8A8FFFF7DFFA8A8A8FF7DA8FFA87DFFA8A8FF
%FF7DFFFFA8A8FF7DF827A82752A827F8A827F82752F87D52F827A8FD05F8
%A827F8527DF8277DFD06FFA8FFA8A8FFFF7DFFFF7DA8FF7DA8A8A87DFFA8
%7DA8FF7DFFFF7DA8FF7DA8A8A87DFFA87DA8FF7DA8A87DA8FFA8A8A8A97D
%FFA8A8FFFF7DFD04A8FFFD04A87DFFA8A8A8FF7DFFA8A8A8FFA8A8A8A97D
%FFA87DA8FF7DA9FFA8207CA8274BA827277D522727264B7D7D2676A84B27
%4B274B7D52277D5227527DFD04FFA8A8FFFFFF7DFFFFA8FFFF7DFFFFA8A8
%FFA8A8FFFF7DFFFFA8FFFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DFFFF
%A8A8FFA8A8FFFF7DFFAFA8FFFFA8FFFFA8A8FF7DA8FFFF7DFFFFA8FFFFA8
%FFFFFFA8FFA8A8FFFF7DFFFFA8A8FF84FFFFA8A8FFA8A8FFFF7DFFFFA8FF
%FFA8FFFFA8A8FFFFA8FFFF7DFFFFA8FFFFA8FD04FF7DA8A8FFA8A8FFFF7D
%FFFFA8A8FF7DA8A8A87DFFA87DA8FF7DFFFF7DA8FF7DA8A8A87DFD04A8FF
%7DFFFF84A8FFFD04A87DFFA8A8FFA87DFFFFA8A8FFFD04A87DFFA8A8A8FF
%7DFFFFA8A8FFA8A8A8FF7DA7A8A8A8FF7DFD04A8FFA8A8FFFF7DFFA8A8A8
%FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FF7DFFFFA8FD09FF7DFFFFA8A8FF
%7DFFFFA8A8FFA8A8FFFF7DA8FFA8A8FF7DFFA8A8A8FFA8A8A8FF7DA8FFA8
%A8FF7DFFFFA8A8FFA8A8FFFF7DFFA8A8A8FFA8A8FFA8A8FFA8A8FFFF7DFF
%FFA8A8FFFD05A8FFA87D7DFF7DFFA8A8A8FFA8FFFFA8A8FFA8A8FFFF7DFF
%FFA8A8FFA8FFFFA8A8FFA8A8FFFF7DFFFFA8A8FFA8FD06FFA8FFA87DA8FF
%7DFFA8A8A8FF7DA8A8A87DFFA87DA8FF7DFFA8A8A8FF7DA8A8A87DFFA87D
%A8FF7DFD04A8FFFD04A87DFFA87DA8FF7DFFA8A8A8FFFD04A87DFFA87DA8
%FF7DFD04A8FFA8A8FFA87DFFA87DA8FF7DFD04A8FFA8A8FFFF7DFFA87DA8
%FF7DFD04A8FFA8A8FFFF7DFFA87DA8FF7DA8A8A8FD09FF7DFFFF7D7DFF7D
%FFFFA87DFD05A87DFFFFA8A8FF7DFFFFA8A8FFA8A8FFFF7DFFFFA8A8FF7D
%FFFFA8A8FFA8A8FFFF7DFFA9A8A8FFA8A8FFA8A8FFA8A8A8FF7DFD04A8FF
%A8A8FFFFA8FFA87D7DFF7DFFFFA8A8FFA8FFFFFFA8FFA8A8FFFF7DFFFFA8
%A8FFA8FFFFFFA8FFA8A8FFFF7DFFFFA8A8FFA8FD06FFA8FFA8A8FFFF5252
%A8A8A8FF7D527DA852A1A87D7DFF7DFFA87DA8FF7EA8FFA87DFFA87DA8FF
%7DFFFFA87DFFA87DA1AF7DFFA87DA8FF7DFFA8A87DFFFD04A87DFFA87D52
%FF7DFFFFA8A8FFA87DA8FF2627A8A8A8FF7DFD04A8FFA8A8FFFF7DFFAF7D
%A8FF7DA8FFA8A8FFA8A8FFFF7DFFAF7DA8FF7DA8FFA8FD06FFA8A8FF7DFF
%A87D7DFF7DFFFFA8A8FFA8A8A8FF7DFFFFA8FFFF7DFFFFA8A8FFA87D7DFF
%7DFFFFA8FFFF7D7DA8A8F852FFA8A8A87DFFA8A8A8FF7D7DA8A8A8FFA8A8
%A8FF4BF8A8A87DFF7DA8FFFF527DA8A8FFFF7DFFFFA8A8FF7DFFFFA884FF
%A8A8FFFF7DFFFFA8A8FF7DFFFFA884FFA8A8FFFF7DFFFFA8A8FFA8FD06FF
%A8FFA87DA8FF5227A8A8A8FF7D2752A87DFFA87D7DFF7DA8FF7DA8FF7DA8
%A87D7DFD04A8FF7DA1FF7DA8FFA87D7DA97DA8527D7DA87DFFA87D7DFFA8
%A8FFA87DFFA852F8A85226A8A8A8FFA87DA8A87DFFA884A8FF7DA8FFA8A8
%FFA8A8A8FF7DFFA8A8A8FF7DA9FFA8A8FFA8A8A8FF7DFFA8A8A8FF7DA9FF
%A8FD06FF527DFF7DA8A8A8FFFF7DFFFFA8F852A8A8FFFF7DA8FFA8A8CF7D
%FFFFA8A8FF7D7DA8FF7DFFFF7D27FF7D7DA8A8277DA8A8FFFF27F87DA8FF
%FF7DFFFFA852A8A87DA8FF5252A8A8A8FF7DA8FFA87DFFA87D7DFF7DFFCF
%A8A8FF7DFFFFA8A8FFFFA8FFFF7DFFFFA8A8FF84FFFFA8A8FFFFA8FFFF7D
%FFFFA8A8FFA8FD06FF2052A87D7DA87DFFA87DA8FF7D7D7DA87DFFFD04A8
%7DFF5276A8FFFD04A8527DA8A8A8FF5227A87DF87DA82751FF7DA8845220
%A87DA8A87D7DFF7D2751FF2752A852F8A87DA9A8A87DFFA8A8A8FF2727A8
%A8A8FF7DFD04A8FFA8A8A8FF7DFD04A8FF7DFD04A8FFA8A8A8FF7DFD04A8
%FF7DA8A8A8FD15FFA8FD0FFFA8FD0FFFA8FD0FFFA8FD0FFFA8FD0FFFA8FD
%0FFFA8FD1EFFA87DA8FD0DFF7D7DA8FD0DFFA827A8FD06FFA8A8FD05FFA8
%7DA8FD0DFFA852A8FD0DFFA851A8FD0DFFA852A8FD46FF52A87D7D7DA8FF
%A87DA87D7DFD73FF7D5252275252F8AF5227272752FD74FF7DA87DA8A884
%A8A87DA87DA8FDB6FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-11-17T15:10:19+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8F/5yf1uPT9U8kWv&#xA;6J/S11f3F1FaQ/WDbfvOdqqryoV+MuB8WwxSHjN5+YPm/QvNOoeWk0EWL3MqXcmiG5gnKSfVYx/v&#xA;WY3rVIg+zU3pgTSS6X5v84+n5utIbIT2ssbw3i87dfqkTrKGAqlZNq/Z3+H3xVOV/MbX9L8m2Wpe&#xA;XfLi6L5dtJ2l02ZrqG84TFpI3BE8bStyZ3+2KD7sUUl3nTznqF/F5b1bVdBEN2xFzb3gukIuJZPT&#xA;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&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -633.981 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 633.981 li
871.198 633.981 li
871.198 0 li
cp
clp
41.5317 .25 mo
41.5317 598.917 li
870.948 598.917 li
870.948 .25 li
41.5317 .25 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
41.5317 .25 mo
41.5317 598.917 li
870.948 598.917 li
870.948 .25 li
41.5317 .25 li
@
41.5317 .25 mo
41.5317 598.917 li
871.032 598.917 li
871.032 .25 li
cp
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 99 
/Lookup <~
z!s/N(#6b82$4$n;%LNOC&.AsI'+YTR(D7>\)&!Y`*>TCj*uGgp+rV@",odj(-lsB//0Q,9/gDM>0dS(
F1aaUM2_$6V3\)Z[4YA;d5VXnl68L=r7Q*('82rL-905*5:-CW<;*R2D<C8tN=%,CT>=_-^>tRQd?qj2
m@STMqAl28&BiIn/CfXF6Dd$*?EElNEF^J8OG[anXH=U=^I:lsgJ8&KnK5>0#Kl1T)LiI21N-0"<O*GU
DP'_9NQ%!lVR"9P`RtQ.iSqhdrTo+I)UQ's1V3$K;ViciBWg&GMX-J\TY*kCbYagpnZCR:![%E^,[@s!
3\"fE>\>>`G\u22T];hS`]W7eg^9+4s^TOJ&_6Kt4_R$:@_mHLG`O2mT`j`0]a18NiaL\`pb.P0(bJ(K
4beL`<cG@/HcbmJRd)Ee]d`0.fe&]Ire]Pn)f#u.1fZhU=g!@pFgX4BRh9s]Yhpg/diRZSnj4Dr!k1\S
-khP"6leg[DmGR$K~>
>>
/CSD add_res
/0 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 633.981 ]ct
[829.5 0 0 598.667 41.5317 35.0643 ]ct
snap_to_device
<<
/T 1
/W 76 
/H 88 
/M[76 0 0 -88 0 88 ]
/BC 8 
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
IS)[0-p\SX&Hs[p0GYTs'OqFN,%E-5('$!*57^V$&c`5=*+L0/*#K;-(DRA_1)(Q*/49bR)e1:+%V%k9
;$n^]@idgD).R.V'JC:l11N-W/km3O70#FM.KC)#)e0Wm2\7?"'`]0Q7Su8h(B?4#,q_1X*+MbE!&$J:
$qgR^2^r5\@glib6SeXN#U]U^@k_Cg'-m9^&7/jQ!*fL:!$5Vj9J'aO@p/\="@Qa09c3e<$!(PG@:NdZ
@fSXi@fok=!"Jj9,ZS>a!*!H1$"G&a@hW?6@kqO?@kD1l@jh<r!#8uK,;*IR@k]BB-=^=k1J]Z6/i,+i
11MP#*+L^5*&1+f9NE`T2bIRQ%V%.]@h:t:@gr?H:]Ou<-"@Kp&n;>[).Ok#*b,ru*]"!:$Pa+\$"FTX
)d<VY1JBf=1.a5d$Y(YA(h4t('.4:s6XpHl$oAbB&2YA:3$]Y74p,:S69%"4#Se'T4TH,s"U,D:3='*r
%fd%B""P&c)#aLh+T`&T!=f2;&-Orq+TMKC(]c;r)[-NJ"qMCT+Uf#',7Y@n7M$+2)\E9a+oiDn#lXf<
!<<W1"T\W(*<cEI!!iQ*!"/l/$N'l)!<i?$&HiRL!Xf)1!!iQ-!"Ao1!<<*8!!30$$7cA`#65A>%3Z&Y
%:]nQ&hF:d!%.mU!!rW*!uV1T!"o86!!!$"!X&K(!!!$#!!!$"!"B)3!<`B)$j$>-*t/;Q!WW`3!!*0*
&d&+9!=&T.&-E%C3!pZ5"p+c*#5S<%!so#0rVus3!W;uu"TAB$"Vh";!<<-##RCY8!WW<.#ljr/#Qau-
rW!60!"&`,(BFU<%K$23$jT<'!!=\N#lXf;$4Hn7"<7CB#QOl*!WW3%#64`)qu?a"!WE'!#lXf-!tbV9
"U+f)!W`9%rW!fD!X8W3.1n!;3sHl5@gXLe@g5"-56s[X!=o/1#QOi.!WrE&!<E6*!!3#u!#5,,"p+l,
!"],7rW!0;#QbD7!WWB%!%epV-R9Hq)Ij'Z).3h^#=14P&RtkE#QP23#lt#+!<<3'#lk,0!!!$$"98E&
r;Zj$!W<!#"9JZ-q>^L!r;Zg!/-u:V#p'6Z$6]WS!"T88%:]AI',1l[!<E0#"T\T'!<=GH#Qt;2!<E0*
!!<#t%0Z_3!<W<2!rr<'!!3?'!$2O_!!!$"!"fYE$NpqG!":4X'+P!C";3<s"qh+O$N:&+$N:#4!<<?)
!!30&!!!6%!!!)u!!!0#!!<K/!!E-!#6Or+!snr-"9&9<"onZ:0b-\i@fduK57ne?2$=+"@ho:L!#,>3
"p4i0!rr<%rVus-#l=T("p+c*rW!*&!!!'#!WE'G!<N6$*<?0@!s/H*#Qau+6=VK@,YeUt%qA3a$tB`%
@q-f8!=&W+!"8])#6=u2!!WK)*W5s@%fct<!rW*%"9SW("8i-'!W`9)!<<<!!#c1^#6kD5!"&f.2\lZb
"sXNb1_]ok!!!6("8r33"onW)&IfZZ#ljr/!!!*$!!E-!!W`B)r;[!&!!!`@"8W!7!<E0-"98K+":"o,
$P!DI"Uth>%LE1;#lXf("TAB$#Q+QF!t&NB!!!$&!!NQ/!!*'"!<<0$!<<9)!<iH(%KQb;!s/B$)@6HG
!"f2;!!E<,!!WH,'dWkb#nmUZ!!<9(rW!?-!!!6("TSND!#Z+Oqu?]trW)ir0`qOY!<`N*"T\f2!!!0*
#QP/8!!r`B;%4NM+p8ba"r(&H>mV\n9+*BS(]j[D!!E?$!"]D=!b23b!?MOR!!!'#!!33#"==4*$53CZ
=\f&9!%%[O!&Oui!>u.L$l1d2,n_&)3F`mQ3"lU.)#e"K'+YU`#RhIR#6G2<!"p.Q$O(#?@oY`*5mSY?
$ip85'`\t;?Wpqc@noj1@h1p5:Ldm,?4:':@l#uB?Ss_p%MK0j=^r"Q&KsC]0e$TN@lImP@m!:F;e';c
!+Q!Y@q,UN!>8lh"UAO*@m'^"%m"313b(?.@j5Dm+[]`J>lJ4o@i?:&'+>!F)[$-R(_1$].lJ(P#ll,Y
(LmnJ)GgE;:gOk@@fR,X9E7Kh/RoZ,$r.[M+_*NB3A=e=@fo%s<Cm+!%mNu'94Lt3:FHDa0+&*g,Q7Zi
%LYo6$kG*L7Un/_"ChaH#t5538PTOZ(`!_c0E;Mb(1RUW$jdVs@i&60@fe#&@h<-D8fKet@m_O\$8c7&
=&fnc*_uqG!#GVU!!Na!!AOfr'ak!P!X&K'"TeZ/!Wj,;">Ku\!$hOE$NUA3!!WT2!rseU$O-SD$j%+M
=9\p2#R^_@!$)sd#mptm/lN3+"=smi$ni0%"!A4Q)asi1%KmL[!snr8!!*'*"V;:H$P!XH!!3-.quA,H
!=g:V!!391!XAfD!WWH1!!!$""9\]+">3h_@maa'@nU;s@gZ][raQ$V7L&tl!!30$"9&9,!=8o0"q(k?
!!<&u"9Sc,!<`<$#6b51!WW3%"TAB$"oJ?%!WW6*,%Fti:1IQ,@fcsH/H0,^/Rnqb!rN$,"Tnc-!X&K(
!X^n)!WE'8!WW31!=8c-(B=L<!!!-%"U+l,!!!'.r;Zg$rW";u@jWoY@m+<j@k:gm@iS*N?Qr8H"TST)
!<<*#!!`K0!<<-#$igM1!!WH(!!<9'!"T&:!!!'#!!`K,!WW3&!sni*)$C6G!s&uH-pJb_%6#(7+?'^=
#ok<E(1RFF!!!&u!!!-"!!W`1!<NE*)u]gK"TSN'!!E?(!rrT,!WWE)#6"T*!<W<*!rW*:"TSX&"s.7Z
*!QNM,mP.k1'Jd4,nMp:#m(#*r;\YU!!<<'"9A[$"9\],!X&K(!!!$"!<<?-$3:/3%0?\5!!WN+!!3-#
":+u4!snr-$31/0r;[9/$Y'/?!<`E3!<E6%#Q=](!>k_8"9AN3!!<-"!<NE'!"K#0!<`B&!rrE)!<<<*
!W;uu#Q4W,":bG4!!NB>$ig;.#lt84!!E9C@fllB":GhB!<<6-r;Zm$!!E-!#6=l5!!*'""oA9,!<N6$
$3L8/"on`(!!*0,rW!f>!!!'#!=M$s'+,re'*8.G@h2rX<Y%k5/b/lA$2sr2!rr<&!!N?&!W;uu#5S<"
"8r3m!sel,!<<*("TSN,'bq/f+TiGa(^`#)@i8c@@h(R$!"B&8!!!'%!!3-#"98Z,#lju+#64i4!!**&
"98H&!!N]0!XT26#QOi,r;Zs$!"K#5rW!fD%gN:Y!"/o;!!`mA$UFk2$qMNI%0ICJ$[r6f!uhOZ":t\K
#T='P!!EW0!"8o8"rn'X#8."?!"oJA!Xo8@!tYh?#652C"UkkF!XBMF#m157$NL89@h'Xj#mVLR,9B/Z
$Od7@#7+Q8%0-V;%1GN&*u,b$$NLA7<rcA'$k!^K:BD^@'EL8q2Zs9j63I8k#T?8B#_!R4!Y5P>@fZf<
%:^VV(^U@'#T-c6&jm$Z"s"7K)b(,:!%C,d!=fMF'IX2'58ke92A?-4$"G>e!#Ybe!uj];!%7gV:(A7R
'JBn9#oYU02]*-:(Lnt&0h)X7<F["Y;I_^s0O@Ud8Rjtp+^d*9&7\7@(1UQY)e/kX+F[f]@h*!0@mjfV
@j,>>@fU!A@hE2Z@gFCd1(5N8>6kZD$O^Gc@gPU0,T7b7/Jf9R)&Ntn,QJ\k-jg_>)[6QZ#\+Pn#?E91
-t=)e$O&$e,6o=k)&=8u"TTYG&n;4X*!@l&7g``0-k%$q#7<:3@gs1].Urbl'4VP_$[u4[@j,=n4pFFn
@k8N+6O3i%@gNkX@hTh!3sS7k@hi)L>7P-E:^%RC((Dr'@i61p.:XT4'4;nl)Ij:f,%ETB(FfRj&cr7>
!!*'(+9MoM!!WT<&0_2X(^p]N"onW('F"aA+oh`P!sJr7#6tD6$NN$i!sJi9!!4BT.pY@]@i@Z]@k2%5
@iJo:@h9ga"UP/8!"f24$6Klk!!!-,$k+Zh"TSW1!!E9%$P<@F!$M=C!!*'"#m(),!WW3$%KHJ0!rr<T
@lm:B@NA&`@js_T@iAi;@i-m&r;[$&('"=9'aXd=&gJ;W!([.p!u:k:!<<-$!ru:9IK1_q)$9p?)?:iZ
$615i(]bc[(BY7.1-[?C.5bTY@jX5E=r:a3>9H$4!"&`G!>bb>!WWK2!s<$7&d2\l;?128!!`Q*"p4iU
+=7C#*tB_D;@bcQ0gJ,,5QjIo#Rs!+&eP]^+9rqk*t'#1@iSMV(_I)T$N^Y>"pt_<((+Ol)@6CR5[sn+
+_)'n$O?_:6l?1=raSJM8mGk9,[)`o@maa9&7>cN@k_>$":P\U"ssHk!!!'I'Oq7M#7)J@@nL5m@jtnG
@l7as;DM`:#$)LC"Ci'7@m+<W1ga`JraPt;6Mt<n3;d7f87N2.@fm#C#SSir*$.6K*s`Sm@hCC&)B1PD
+(G^h&Rukj(1TX.&MGF5=CYh@@gZ^U(1S1.&n;XS@f\o$rF5m`4]hVm"%Qi7<rHMa!!E?@!!si:":5&<
$"+Z\!<WH2!"<?J@h3&R@gX,%@gkR6'/1)0#=JYa@i8ba"]8b9raQKu@m+<s@nC/W9J^0N3*d+1raT\%
(C(EX!<W<s!WW<,%V$,K"T\W/!"9#6#Qb)5":>,<!!NX<&M*ol!"K,Y"9KAE!?;m^%ho9c"UlOn!"K8C
$6U)r"rRCG'bCr\"p5MT!"]lT'F=aH$tBSS!tGn`'F#NW+9;NF,QN8n!?D@h&c`D5/IVmb#QXuE$46eT
$NV(E#6G#9#RLJ3&H`^R!"KbE#7ge>#oO?f1'8+/*?$=-.1Ti*4!lg'/K"Wq!X\rM#8[FK#S%"U'F"q?
2#md`!!`T0!YGJD"onX5*!6?M&HDkA%2'Ta"98]6(`35S#lkGJ&dDMH*&@`u!#5uR!>#kT!uE*`)$1]W
&-*XL,Qeqb/-H[m80JWN#m1eB%KIUQ'EC<$*u,+`(C1?J$3^kC&-NFJ#R;:O$3C2:#nmaL/gq&n!!a3J
#o<pW$3LPI#%IoH#@dgFrX<fV!=]MB%LEjV!(7)&!u(tJ#S%=`!"]tL$3L>9#R(eN#os<W&-*CZ$OR+=
!B)nL.KM=E@j;-h?i^rF*XN`p%q?>a$Y']W$=bDm'OW+T%q@(-)D`%:&Ru)V*+KRj'Os!j&7Zb^%U9r_
*b-0d.1fi'@j>Iq'g![N$T8/S>%7e,&Rttl'KQ4l@fRY[@fd2B*roda@g$9Q@g?KY3<qDI@g6EC@g-?Q
@fU!P@g?KD64%-)@fg-C64=D-@fU!@@q/tX/5mfr=^tZG).OZc@iIF<+pS,Y*=W#T!"K_I"qD4^#7M+P
!s/H0!!jT-"r.4r&1/>O"Tnr7!+QEl$=aBP"UG21'EAXa&,fu@(IT$-=oMn4)Il#2@noj1":5&/#QXo,
"Tec1!!WE.!Wr]A!<sDJ&-)q8!Y58?!!X)<!XoMJ*rlZN'*SFA!"Ao9*s;]M>%8gL3b(!V6Xs,+%V$\h
@q./u!!WE)"Tn`)!WE'!"o\K%!WE';%0-G6"98E*!W`<%"onW*!!!$"#R1G4"9T)3!!*04rW")F!t-;%
2&[/0'h]DX.1B\k(*5UJ7LB;$!XA].!<r`8"o\K)$ipY7"TAB%!<W3"&H`"6!u(k>!!EN-!<`B)!X8`(
!$_ID!WiK)(bfG8!=BNN!?Me^"WA'^$SVY_!!3-#$ig8/#Qal(!t#,:$i'c+"9ec*'Fk$A&-<:H!!!''
!!33%"98E,!t,#-(^^WN'aF^>!>>SH'Oq1O!>c4Y#Qk>9!!<&u#lt&,#m(57!"Au.!!39'!YPJ5"TSQ1
"oo/6!"]Y@!<<*'!r;m@#64`J$3pZ!(+'8r!!WF#.1lV/!+Q-4!X/Q5!WW6$!!E?%!!`N*#m:5.!=er,
%0HV2!<<Q7#ljr0!rr`.!$D=D!!!$"!!<?(!'V_L@k(Xe/iG:k)AQal$5,0#-NF;a!!3E,"98Z.!WWB(
"U4r1%g;q5"8Mos#6"T1!XB2D!!ET2!t,)7qu?g&!=/](@fmr>$<7"7$=#)k.l1[:'-mP[q>^s+!!33%
"p"])!!WE'!r2fu"r7@ErW!E0!WW?*!sel8"98H&!rs,;!Ybtu*%hI5!+6Qu,u,7d%5AJ?!#Yn<!!!K,
!##M9!rr?%$igM4!s&B,!!<3&!!3'!7gp.=!!*6''EARB#7(A2(B=O;!rrH.5Qh]4"pGG9;?R11!$PhV
*"Wqe('Fd@!!<3%!!*B.#mUh<&ci7?(bl:<"9JQ'!\FBc!<<*5$jd"J!"/u<!!rW,"<:nQ!!NuB!#uRV
(`3Yt2^C3a!!4T!%3lMlrW!!-!!<*"7L'\<"p"],@g!#<1'.GJ#64`/"UG,1$N^tA%gEjS#nJ*a%KQtG
9IF<_/da0P6l%aH@jkh%+"/HY',X)('d5aa%gO-]1B7X\8H8kq#64l,!+Q6>"X*jL1,o:7)BKFu!!j?7
'+b9f$kNsg";qph(Gm*i(+Mjb3rWUl,#]4J+oYt#2If6e.n=)Z0/P.g>R28V)?^<M"r.[]1LgeQ;_\7a
@q,fO@q-#l/eS(m"",g59)`<.-=^1`:dc[@'k1Z_+(Jda*X!5Z%PqT),\%)r70!Jp0+&_06<5jO5>Wn@
2?%)!4B,fJ9`SZD@fU"K04Q>:@q/1praQ!d@po:G!&FI^!\Rt"r*qE&"U>PE/g3pq8Ic4d7LqQh%1t0g
4C]I6'0%%3,%EK)*<9SZ1]SI02@<r#)*0'=!_HlMrF5gur*o^`r*od^@fcL;@n\j3<@(r]01&u3:G?-1
@n&UX@q.#/%q?4i#ZhRI+_(g-@g>(,8eVs?4(A\/'Orb*-t<To0H2BL;e&rD*+M#Z&g]pG-=^IO@o+a]
8j5re,Yfgk7PmLe7nbO4@fR_`$X3W8!!*-*":YV=1LgD%!%86[#nI:C!Xo8<!!iQK#8[CT=WIb`"U-pp
!>#f$!"fZM.q95-)^l1C@gibq)BBH#%il'15qW<F!!WZ.!!ET8":G25$=a)L2,*uL#lt54!!!6+!!<i3
!"fDE$jd(;!XAc,!sBVE"rSR#(aM]i//THI!#R@Y1DNGj-ODF]:C[C*!!;us#R180(b#Rr">'HN!WrH/
qZ$TtrW!0,$jm(:!!`T)!#l@I!Y#53"?lu$%MB=E#::K1'j5$7!\P!i%M/F:('+O>!!!9+&.S[C!!WE'
"onW*!!*'#!WWE-r;Zm"":>#,(Bsp@#6Y&-!!WE("_/?6&QoWS'NHGh,5u'V$"Frb/H>hJ!"o>5#71G3
!WrZ-!<<*,!"8u1!WE'(!rr<D!WW3+rW*Z4"p5,2!!<3'!XJf-!+QmV.q:.0@fePu*WBOT-Y#)F0EM4S
!WW9%!!3'!$NU50!!!$&!W`B'');M.!<`3!!Z(n=q#CL"!!!,d!!<B)!!W?%":,&;!<i?$"pY,3)$'g?
rW!--!X/Q.!!N9$"p"]/!!*'%rW!$*!!!B*!!*B1m/R@m!!N?+!!!*"!"K&J!WWB($jH\G!"o;4!WE'%
!rr?)$N'l,#64c3"TAB,$j?tt!WWK,"ml9l!rr?(rW!$%(B=^>!!i]2!"/c2!WWf/!!*0%rs&?#"q1J8
#6=f.rVup!rW!!%#6O5lrW3cH!!E?2"p,/6!!39'"UYD9!!rW1r;[H2!"&l4!!!?-!!!64*"!&W!!E)u
!!_Zf!Wtgj)ZTk+!&k-.!<WZ/"TSZ3!>GM6!Xo&5!!!$""TAB1!<<?2"XX9N!!WN+!+Ys-!!;Nf";_1@
!Wi6""p,88#64`0r;ZgNqu@Nb!b2B6!"0,6$RYuU":#9>"98T,"%!+f!!*-$li7)"#ZL^&00TR?!#>SE
":#,2'-dMX!"T&8!@e*M3#2Jo%Mo9K!=K0C$=a5>#9!XD!WW3+!UTjm.0Kq^!!**#A,ZHA-3>1f!!`KF
*<6'?9)oA$70*Al(Ln3\"onf>!!!$V!tGA7#7LnC"oni-!UTjn@g4Xf!!iQ00*;+Q.L#l9!!*'25mRGo
@f^'A@gN,M@gi>J!"`WC@g-?M!!3-&"pe]G"9SW.m/VY~>

%%EndBinary
grestore
np
gsave
41.5317 599 mo
871.116 599 li
871.116 .25 li
41.5317 .25 li
41.5317 599 li
cp
clp
1 lw
52.3652 .25 mo
52.3652 599 li
0 0 0 1 cmyk
@
3 lw
63.2817 .25 mo
63.2817 599 li
@
1 lw
74.1987 .25 mo
74.1987 599 li
@
3 lw
85.1152 .25 mo
85.1152 599 li
@
1 lw
96.0317 .25 mo
96.0317 599 li
@
3 lw
106.949 .25 mo
106.949 599 li
@
1 lw
117.865 .25 mo
117.865 599 li
@
3 lw
128.782 .25 mo
128.782 599 li
@
1 lw
139.699 .25 mo
139.699 599 li
@
3 lw
150.615 .25 mo
150.615 599 li
@
1 lw
161.532 .25 mo
161.532 599 li
@
3 lw
172.449 .25 mo
172.449 599 li
@
1 lw
183.365 .25 mo
183.365 599 li
@
3 lw
194.282 .25 mo
194.282 599 li
@
1 lw
205.199 .25 mo
205.199 599 li
@
3 lw
216.115 .25 mo
216.115 599 li
@
1 lw
227.032 .25 mo
227.032 599 li
@
3 lw
237.949 .25 mo
237.949 599 li
@
1 lw
248.865 .25 mo
248.865 599 li
@
3 lw
259.782 .25 mo
259.782 599 li
@
1 lw
270.699 .25 mo
270.699 599 li
@
3 lw
281.615 .25 mo
281.615 599 li
@
1 lw
292.532 .25 mo
292.532 599 li
@
3 lw
303.449 .25 mo
303.449 599 li
@
1 lw
314.365 .25 mo
314.365 599 li
@
3 lw
325.282 .25 mo
325.282 599 li
@
1 lw
336.199 .25 mo
336.199 599 li
@
3 lw
347.115 .25 mo
347.115 599 li
@
1 lw
358.032 .25 mo
358.032 599 li
@
3 lw
368.949 .25 mo
368.949 599 li
@
1 lw
379.865 .25 mo
379.865 599 li
@
3 lw
390.782 .25 mo
390.782 599 li
@
1 lw
401.699 .25 mo
401.699 599 li
@
3 lw
412.615 .25 mo
412.615 599 li
@
1 lw
423.532 .25 mo
423.532 599 li
@
3 lw
434.449 .25 mo
434.449 599 li
@
1 lw
445.366 .25 mo
445.366 599 li
@
3 lw
456.198 .25 mo
456.198 599 li
@
1 lw
467.116 .25 mo
467.116 599 li
@
3 lw
478.032 .25 mo
478.032 599 li
@
1 lw
488.948 .25 mo
488.948 599 li
@
3 lw
499.866 .25 mo
499.866 599 li
@
1 lw
510.782 .25 mo
510.782 599 li
@
3 lw
521.698 .25 mo
521.698 599 li
@
1 lw
532.616 .25 mo
532.616 599 li
@
3 lw
543.532 .25 mo
543.532 599 li
@
1 lw
554.448 .25 mo
554.448 599 li
@
3 lw
565.366 .25 mo
565.366 599 li
@
1 lw
576.282 .25 mo
576.282 599 li
@
3 lw
587.198 .25 mo
587.198 599 li
@
1 lw
598.116 .25 mo
598.116 599 li
@
3 lw
609.032 .25 mo
609.032 599 li
@
1 lw
619.948 .25 mo
619.948 599 li
@
3 lw
630.864 .25 mo
630.864 599 li
@
1 lw
641.782 .25 mo
641.782 599 li
@
3 lw
652.698 .25 mo
652.698 599 li
@
1 lw
663.616 .25 mo
663.616 599 li
@
3 lw
674.532 .25 mo
674.532 599 li
@
1 lw
685.448 .25 mo
685.448 599 li
@
3 lw
696.366 .25 mo
696.366 599 li
@
1 lw
707.282 .25 mo
707.282 599 li
@
3 lw
718.198 .25 mo
718.198 599 li
@
1 lw
729.116 .25 mo
729.116 599 li
@
3 lw
740.032 .25 mo
740.032 599 li
@
1 lw
750.948 .25 mo
750.948 599 li
@
3 lw
761.866 .25 mo
761.866 599 li
@
1 lw
772.782 .25 mo
772.782 599 li
@
3 lw
783.698 .25 mo
783.698 599 li
@
1 lw
794.616 .25 mo
794.616 599 li
@
3 lw
805.532 .25 mo
805.532 599 li
@
1 lw
816.448 .25 mo
816.448 599 li
@
3 lw
827.366 .25 mo
827.366 599 li
@
1 lw
838.282 .25 mo
838.282 599 li
@
3 lw
849.198 .25 mo
849.198 599 li
@
1 lw
860.116 .25 mo
860.116 599 li
@
3 lw
870.948 .25 mo
870.948 599 li
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 117 /u put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
23 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D
2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04
046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F558
86BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D
9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066
B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB9
0D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-
/four <1C60D8A8C9B7EF325730A29F6E3A8E85E687770EE1E27F87CEA844D18
4B0E9BD502658E879E1F9BDDE8AE7D0C023ADEB8AD1E21CDA97313F844BB17B9
F9FCD84B1053ECDC8FF> |-
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
/seven <1C60D8A8C9B7EF325730A290D76D77983E96EE242ACEAA131574F93B
B3E9D36E6F4086FF3DB329E48A38DC1C36E41D469A4D1B83FEF82A3668> |-
/eight <1C60D8A8C9B7EF32A47D2AAF8C15BC9A859DEE4113CDE5C7D8BB37BC
632A2AFDD9E1D59E819868DA3B47FA265DB8E729BBC4B74D62996C8CD7000A22
83A23B9E90032D8BA762FC6930C943ACBD9924E3BB182B1447A1E2AF18A8F5C4
FF7E73B671B89EC1964BF90DA6A7AA5C360A10E2B9F34D2BE8C7C673C6A88180
4538AD6230812FB8978313B4BDE98D895F422138708DE46BC5394FB88DD33D90
C210817A05295D4CBA95598D78DA62CFD2497E0D80160F3DA900E68CEC3A30A5
1069510330F600555F89415B16F55B2952535C067AEC9D27A114154239F343BD
ECEE543D835ACB4FF5860A143BC179> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/q <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7C1606B5E4B0CC1666D106C
062CBF25548C316EFAE3CD807215447DEE7459A9D1F79881E23A7CD97C235819
3B2CF61D474D654F5D11A16B0F4A55DC2C0EBE047696753569C42AFD2B22ECAE
0F067510265AB7C26184F3B68C845BB80CAB35D9CABF5FAFF5C3DB638C995B15
CF9621519C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/VLSKBS+Helvetica /Helvetica findfont ct_VMDictPut
/VLSKBS+Helvetica*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/five /six /seven /eight 40{/.notdef}rp /a /.notdef /c 
/d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
/q /.notdef /s /t /u 138{/.notdef}rp]
VLSKBS+Helvetica nf
VLSKBS+Helvetica*1 [24 0 0 -24 0 0 ]msf
410.522 628.581 mo
(data set)
[13.3438 13.3438 6.67285 13.3438 6.67188 12 13.3438 0 ]xsh
VLSKBS+Helvetica*1 [0 -24 -24 0 0 0 ]msf
20.6157 397.073 mo
(sequence position)
[-12 -13.3438 -13.3438 -13.3447 -13.3438 -13.3438 -12 -13.3442 -6.67188 -13.3442 -13.3438 -12 
-5.32764 -6.67236 -5.32715 -13.3442 0 ]ysh
VLSKBS+Helvetica*1 [10 0 0 -10 0 0 ]msf
139.694 610.995 mo
(10)
[5.56006 0 ]xsh
248.78 610.995 mo
(20)
[5.56006 0 ]xsh
357.952 610.995 mo
(30)
[5.56006 0 ]xsh
467.116 610.995 mo
(40)
[5.55957 0 ]xsh
576.28 610.995 mo
(50)
[5.55957 0 ]xsh
685.366 610.995 mo
(60)
[5.55957 0 ]xsh
794.53 610.995 mo
(70)
[5.55957 0 ]xsh
27.5298 68.4946 mo
(10)
[5.56006 0 ]xsh
27.5298 136.495 mo
(20)
[5.56006 0 ]xsh
27.5298 204.588 mo
(30)
[5.56006 0 ]xsh
27.5298 272.588 mo
(40)
[5.56006 0 ]xsh
27.5298 340.659 mo
(50)
[5.56006 0 ]xsh
27.5298 408.659 mo
(60)
[5.56006 0 ]xsh
27.5298 476.667 mo
(70)
[5.56006 0 ]xsh
27.5298 544.745 mo
(80)
[5.56006 0 ]xsh
41.5317 .25 mo
41.5317 598.917 li
870.948 .25 mo
870.948 598.917 li
41.5317 .25 mo
870.948 .25 li
41.5317 598.917 mo
870.948 598.917 li
@
3 lw
0 lj
658.985 281.747 mo
38.5317 281.747 li
38.5317 255.247 li
658.985 255.247 li
658.985 281.747 li
cp
.011765 .886275 .984314 0 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/VLSKBS+Helvetica*1 uf
/VLSKBS+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (supp_eterna_comparison.eps)
%%CreationDate: 11/17/2014 3:12 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.f5<+^[OC;$%IbH-78fr&mUfL3C/I!,.SEHu3(8rD_qJmsVec&kpq_[u0&VM3$l^m>rO?8U)#(jRFS>Dm\421TlKZGEO7tZ+
%$]?4@.ukOY`i*'E.We1O7]Z,ekl/:[\#(M&\Qj#)P>K[,ahXO7Q7B"pk!1Pp`0/eQ&s\Diku8Q9<FQhGK6iBAQ;"3M@]<QRI5O+(
%Z[TC?*"7_\G.0\<T.Bn<mE?SPhpIqYgg.8Bmf%L7d&tqa`B&=S1IPe)c1Z)#@B3]Lhd)7g]lpI0YUPdn:VGtoG#Rl'^T,13<Jr=$
%WN*WG7]gjoAFrl;p=JKU=UdSk]\lXm&(#:BaP]./SpB#h6B<ag_]bI*l3*PY.N[IfMN_28;sAe*LVNhds5e2!f3eONQiHcOs79Th
%_Q<9V\+`niImO8$^Jlg#e$;ST/t5gMfpneb@TUgX?Fr77@c2"39Ir&fe.hO(HtPmqjDZi@=qX#!-'aolAHD.T2ODs7YtR'pB#g72
%q-0oqkOlBl,+7uO^91CZjnls=ej#hlX3%03OAG`<@ao;hY<+<91Dt"h<'Te/RVal^hLsag^=-ej2Y\XOEE2D@2hq[$]'[nLea9Ha
%AW:$CU)[25B_I-T:4(72<VH\.GqH.q@u5:OMh\)O\>@TcPup)<cHN8e>^B.F&udlKMn@2JF/kZe7\TBKg(uRSc*@g8Yc_VPWDEDn
%pJtptNB$O8f5EPAqI^@QaTnD;/1^XjA,k#o,>\f(bmp3P_S+s6J4WB"plb>jomuV;;f/pN4gT3C10GGiTo"M%WXc'8_C63sA#9"u
%>iC`PF+E*sk[,M7TBS1[k&Tro/@)11"T1t>i,'Y=D\EHJ(9]]uQ;0e%"N<3F6EtVNMP\e5c5OshTM-sCATHuVY+Eg&Z!7cr_)M.B
%@`9N*.i+gnYm>9*74=qsn5e-q:Ok)p5hARR12&FR1*Y-oGmdX*qa:KcLHeTDjoqAR%-GN@9A[L\i"O8KUu2p4SUlDmL3^T_r.7MV
%-T"8B7@Js&_'bg9I"B<l0Be\:P`,U"_:7BVb31lKA#k7f:EWA>8O*HOUahcqR/e*g)'.r`&"Y?f.mj5$0pj256;qD<aiqjg\o@-B
%MSU:c8e]R5atQ?\KO6E!Jd:d:#7lmR'8jUGiKGf>5o0T-1'6['i;t&__^)[4A;CB^:lGC8_1p1*9E5Tp%#smQg1JMtMQhS,"t%E1
%'IJX:PF7Wd0Ltnk@Kb:kNW^u1142D+QlrESYaeQ'!?^QY?ogYfL,9>-nDFVq&>W]%_Ub#<T8\iHT(G^,LBl-@L<Ybf+,[?&8b8_Y
%nt,cSK-u=E0Uo.,!>&s3a8ZDpF6Y,q:j#7@SB_tU3#rQ(B/ICY&Qe/J`$h7]2M3ko%2]`\-a(`\_M66gb^(TFPH(X_i.(6_Z:^D]
%dkpWQs!@\1g;-#QQi'5$;^q9ns!@\#)=j9s-3(8RniN<uHI(#hq)irAs,qkc!r:+@P(0EVWC.ft^Z8b49RcTJjI]oZUO4-6&3e54
%P2GUBq$V8nP/Us(0.@0e.4qB-8srR@$_Jk"O7W]0"2Eg09M*FC0E*#G(bPkYH'*JT/-t^s-Tm1YR?F`96.3RogdISF+>&eSaER2V
%r6CbMK?%g84mT&OHqqlKfh@k,`qkI'A5qVO)8)t^iA'SZ6%Kc&7\N,r2k)40(0?9bV_h]BK-oJHPGAiU5>t/i`):^FUeT?,8P,YC
%.f,GW&:pjW3%C\:R:H=UX-9O@\H<8f&CY.uA<:>Vn;.nsNIhTXR`/(/A-s/qn44o?^iL^K+>=p,`W*>&s,O,>$D]U$)BhJ#:V$a5
%138g"D#cGEs!kN>D+fE\Om`F;UgZGlee+lR(Cp+BL2$]$R%[c<N%6PE,L$6j0c#QI"f=S*;'@V9^X9595o9YPJ:*do)61#o@aGF+
%^mC0+&ORiOGqs.U[uM7q-+KVsQ"R/7QBYf&*^"qo?8/Ug2[h#9UhlHY\`\tOFc9\387W=S'+k`T0*$NJ13cb`LHuM'BB6i^5+?*X
%D%KYZeqfP685$dOOi(i4aFha+c(C(+X%[LS<DHJ+B*mZ3p-ABa+_4&hR3E^ZAQHnSbae89`ZB5\W!rBQdKftXirj)8'fNe4@1q3H
%:+/G]Qs']WOS0"0,eqQnO8OTAg#OQpo-R">Z?5;7cMU^TTsT"J-MEuF_$q:BiOr\;jRD(^SJ1;>`UDdha:n/lG`LlFIk2BJX5QNg
%*(C.rKHdci2JK=+f/#6kJBf!Z8P-0qj!'"MC%EhDouFb(4ck9KUj9)eE$4%HD(+I>r>X"C`KMW68VWIblGhP8YfD6Il:15&p68Tj
%!$^>6LW9ZfQF_2+k&n.;1iYWo;L.67[-i4CFdGp_Y.OV!Jkh(9YZl=FGI\Np#j[\30V&jeR6P@]8c$M]mG^Yr09DNep242F/+N+A
%jpjArO4Ac;i^=,$6Y./>HkN#';ErQVnqN7C>R$"<!DHf)hPV74`o-5cS,]dD:XMXZC`sGO4X"Fhl<%:)rJE$M<(&DLQO+C:mMVb,
%kZCAb2IPZiN(?Aq7G]eW'<'Pg^^b>]4[g==HC!5NHB3T68C$>,@W&9]8es9[Pr'ub0mjCh)HY6ffA"I@`V27uBA5i"rk3limS0(J
%S21]ieeu?G+<NE,'B1;N(,r8BhFV9uboN]j=qQ[KZsS"XD$ALmlXQTIbUgtOA&pRJfpQ)X3gH*\#h>@:`0e<'7$jN+%,MG=b^?#m
%5&6Ut\I&&s,jtoD+j)^pQ\gF8/39X>PM,8,6o*MY6J%7S%E?@u^1m)LLo=OG"LEUnpqN>l(>?$I]V3lD;+a4u3d3s"k=CYYY*@t7
%'\4JUGR6=EjoDa;R)/$Bp+;f#08jP+*_dKo$%Cf`A\8>X2GD!A8p4?Sad5G9!NRkee>s"rI=^s7YG1k=5[NM2C`0KP@F8gXfU*@/
%HO;Q;KJ);U/[+bH$r"?uemQbmi6('WbSVI`:K#9Y(]Z`7`hY2f>8J(#RC>.cJ2):]k"NjNfPkFT/.A-62M=md((fSXfr_!Mi=p$)
%9'r$'>(;fV>kD:a>ZMCL,+XWdaFaXL7nPYiW'l!qo/3aEkESJH8JW/8A',*Y"/sJ)=The.Qtm'k#'@uoP'm(]j2Jt[&@$aF?\j&`
%0Ge6gU^62Q:/*DH7[Q+o8#Xmn)#7E<-2'BF7Pm-fOQ?G*l-ejk,EK%;i?pJ35^3>_#q@L13C*NdYeENF!2^DD@dK;;!oE*?4LH_[
%)Glb:o@gE;8SQC!#_eEFpdIZ/kFWs[WS`HU4A-YVgu6@;=QCK?XJBB`PD$/`N-/f_.ck\2L*2"N`4<at.Ek^`8&\0[9Ua1[G\=Nr
%;&CogDeAiT'S7s#"ZgjXY+f;Y`0s5)kAlU[ddg?M"54AR0)4ag&!G..n=ZW2g697-S'g<bj+P8t3[5Jg*!?#J^q>Ns6e@m%!dO$e
%UPBO1W5JOFKQOGi?%hd5=c(9<Qm0bVbYSP91/u@o7jr_F"Z6%3(FVq,A,)$`d>Q303^Xp_G60VHLa[<W\.I\RgbhPa-Q0fP:.Q^q
%V@0=Y-PU?Xd/\'[aF%#84,#Q0)A$VT<+VY;ibYEJ%T!gc"gdBD&B7'S$7Q9mLaS>\Bm#0TQrkcW+Z:&>'fJS7g2fhN5t?W[ZU/-l
%eo8P?A/scW@KTT!244K0f9k[3.,2ihg]WGLW0pDu2AlX,9bYYn`!X6frXY_r_ZU@=BtCi`UC90iBqe!t*,af("(ooFh,OJ;4htSs
%@OA'.&n)cID*9S=Kut,B/;fD4-b7RZhA?g%`c4j4s+MZV\p?4Wg@$Z-=Pk'j'8s)0R&?m!2iQ"MrT.jRW!=HSZ4(D7-#coj)>%dY
%Kd,E^_Z:@/%<%q/&TmLYYj-Mi5q-A6!2kAoAkJ$&_BbQ1,OQX9G;<,/_b<?=C5Aeqg/#ZJ4`FULHZe-]][^aBlq(e(%f3hT"$1N%
%0XEa2ANR>T$-YM"JjdKVU[)j`?,d";[ng<hcd]Vd_<RE45[-t2NTZ[2V$LSs13$ASL4VO4ZX-@*'+paH<7^HAcJD40Q]$h9poq!)
%A*3@QH<]>ohAXq4F_[ePI+GTI?ujZI0Iu-K?q#l,@c^!GqhFBXMp.d!b>`Cd&HQVE#m[0WS;CeCH8,d4lc9Kd`FaqFac?C&M+5DX
%!`tEc]oKI7'gj/RXI*DTFlU+/-+&dQTHbl=d"9%c6sQ)WK(Q\FQL5C74^7%l:MFNX-":sMj+89nQIpn4&N<s6?l.*_Y\3%/Xk1Vo
%+T3h>4G?I4BC!iZ'=Nlc1fb2%A;W0_>+(0#0b$4-2=1mp"`+?q9^h]761/#8NAs?08@4Gf<Ku*lfO2NW$j,!o=PWets(itqZb!r>
%)cOg\lfi4@;s(ds$A"G#"`sd)l<0iUaK-g`[S1b$.cpDH7uYcUGm_J]0Hl;W-@T">j!]R;+dmF,O%aLMT7P&%4Sk>fB<^YmE=>Ar
%T-<[^%0.9[PJK'@*>LgklhG\Xn0\oADs4m'`u5C8n9Gbm,?,["`t_trkd(OHj'IY:$l*n?[\?Mk#2BL3!=W"#Ak,06`9ef3">CYu
%%AEn@'LAeDjYJ@8B.B*;6Jj6=Yk!TSA5[\!Y@LPAHl?/?:^5e>E1%p,aNd''4"@>kLM8/1W^$[5+B4).n-&`b7Z6>%0aE[>kg0i7
%TuGK+'buCVdVMV(+EYGkTdJ4W,ag<#e-%Zc`XE=!@CDo-&2D"k1=QJt2/fG0g+%-1%L^iR$Wq#7;V:!L$VT;>"O;bRTVu@[(@b`M
%*^gq.?3MM+L\2fK_;gKa#DkQQV0$!UnM]$j6@9FR&r8R9b93EF4VY:6"psR2bj.AZNhJm*91*cB(+:R4=R_i"T+/'X)3\GO4?QRg
%;dt;N6u`gI2TR!Q]-q)p>ab+'ni(=e9<`%/%7A9W^BNLI8*#gX`5t,$?oEio8O9uH6"%b>d5_hZeklR#WJkeYm=>o^YSi`3>Z.5h
%L/AYd=nE+N+ToIZN-HRS"eGa5P(d?dK+?9b7LrB2;0F!>OhluE'q7I\W!W)[SPk"t!8=)P!3`(jK\]'Z?sk'F>e*7i#_%CS'7qWX
%W$GSk*-dh50kLK%kZR&Y!X4i\*3?O*Gj-1d/qS$sJXMgUI`)18Sjj42ebT\=7qD^C$;c"&6(?fO'1Oj#'<&Q?SJ;fA2F^!(!IK@c
%d"V9YmTjr&AW/l>js;<m@<uKS#h]pA"&[Lfao]XIDAoBm%%RO/O9M41@WbX@"T*rEH1[paWr#hTdU)AVp7N:[11%kGe!rRQIt8Qs
%"C!:XUM(fq"79n5Zc4B:SH+U1YmESJCGoW8<%2A_5?A'"A/D;QbuHY;js_%\`:a:h$mf!d@B71?q:H*70D"flNKQuPKEHUW:1obF
%PS8>!pi^geBE!2mZq8a\^4[i@:^fJK/cj2!dq#/fX3+\P<6>b#6PDj"d$YXm3#Te>AH!r9+2I&8fS6pTKs@lrAY(A+6KpgNC$He:
%?=Uj<J-utZ!/uff0G$rae;Xnp'#VglQhq*bp6+rM"\)6fMOHli/Rm")[KjYBBS[Ia%pVpSFJdXr)Eh:Od9bj[1(58W-33/7Pi&:U
%^gIdZb`i]&b="6ueD/kM`?VG-KGBE>k*l[A2DUMB)kKsF]kZp5A8)1SNF'r>,4`;gh^P.r/8C\*!CW-qcs919)`m!hGjlR='W1H^
%kmeRY,""Yk+lM.'TbJjY,;[RF#<ZW%s(Ik=_\<)HOb3n*/#HT#mVKnT7O%F:b^Y63,"#g5J\'eC-H.MD_ieJUXQCNP[cb_@?C:?c
%D8b(^2=Edb%?`1LfIS.OA(^XPhVtmS!70:Sb8aoc_Dj^!41:O#iG?HaM)lZLN6%Ht/t(&6+>mG\]AQmb%!9"QSA"11\tScAdiJ#3
%pWnb:!?o#VKS:)%QJ8Yaa$jj.Rm]Z7$_'b5cpjf`QaD#VS1%!5`k!JnSRXUBH6R:dEh5E1lo6W6#bcc?A1-KLrb]0Xp]s:FP\fo[
%JSC6%Fp>^[WegQ!Gt.6B*I(&6\Gk:Z?r\!E4E/0=h&,(u$!n1XXR%&b(q&-%/XYWmBQZRNP=G#r'?/R0*3pIEbS;;nDQ"do?%OtM
%JnS/C]bo;e*'=Lg$!F`G%2p*Q;M^c-<G#KD(*4DS<t.mSq$?&P:TLZMDr?#'W?k%3Y0Ng\gY`gIEGIo1&e!*H3`?>fBV__.ns(m5
%chWP6`oC\Lo<Og.J^(d4\H)f?$j[]&k6`*9TF#P5I0l9K?GlgM*ah#2(6E7=V'h0/ZLMQE-lF6s%A\`E2Wt&//.sH"^]_oE/jNYY
%q(cKi))n89SMuNIK?QS)U74Tg&03/a6<8&f10JHH;0\mhZ%6+7LTs[=+nI'4;M55Lc&da$!Tn^$1/=`E/7c8Y'$HBr>_d+bKF>$Y
%R+$(M_GEHS?A+;nJBQ^NeLh[[M++^4R4cD-"Kl\,%.[LP9!]]gIEl51`8[JXW&(Xb8nhUEWYf6b"t$5C1Zh7c'_6X;)$D/316mf\
%Ogl?$1_%?D66OPZ<*#.Q*:?qP,kFM-XN]guiG*)(9O`j_=sBoFkdr"u\U#lA(UA`CWoUI10ZeNiL2B*FjKG`X9GqFt)5%YRR\[h<
%NK_Hqo7TpI72q+*6?Ik=Ft&R#"r[fA1F>[S1%TZ^9ZimNl3&fJ$d$ZORCs^l-Vj'lb>p@7A+#/b:DNW7R?@QI*bPo"Fp1Nj7Kk%H
%Fob5[YH'er0Ps02_!R#(Tb2Vum>O#5Qd^:k98g>$G`FW^WT^*7.1S@*`YhpP_SE5RR^19q<$Q%d-Gr+*V)#Tolj?k2-"<Y-F>>ej
%pEQ&/A>_Bm3c1J9Q_@..6X+qM@Mbd<i"$>DG%&rTAOI+L2'D@h;_\4`K)d\?i00OBAF;MIfn^ZV6p-;EVF7ZJm&XB^\,sYaXJ$"G
%B6.F0M;&m=c7qN*'EbXtJn9n&*D\fNe9?J#UeKDE/MLnuKAFDdms,R)$YL8G./.Ld(NL*L[=GdIGYGRYL95)['IAg;2Pd;]QSGC%
%=Qj$s=XV?NWcM<\?c5\<(qe-(mqM:!OlA^P:E'*8hFaNoAXQ=&@s^h8^W5Wo5i,4'aR9RJ`(X*=AXU[i=AtONXAu,K0Rh;u7C6<;
%W)8OX2s^Z=+M/s\3ef9..j2,);$Scmi.gW4;$3Wn;ac!>qf*f)U'Y_cLd3u^WG^c[SNEJEe(T)N/AB_mBFPP&c5CC.-<\5CHB33X
%UO'QIUV+n%(lYgWJ:r&@Mofk<*&h(.T?!s/-I#j74Ps7b0tg<r*i=YOEG!Ef`VQ>S"-0GQ\I0$NCkB7(H(m@F?QjcIAhXIC,@WFP
%n02\lcu]GCcBO]KaRIMSm9!dW$N+]LQFA%$4ZS\=_8+-8_uq$M!%H)+V(AsNGU<[#30dHn"HDV+=3<M.ZD9j"iQsub,!Q`qqJ"'%
%Tlm6[@`unRj+DDsP!<E]j02`@b;(?q?6##?@k<frTb6T_XU2]L_C@<mbc<Q46"Tpo`pkJq_&-V>k=kfX73gM5Bb[ul`2ja>?mkg]
%A?S:m-c['_S*i]&%;&1J:`2b)(RTWhV7b?Qd>a>baC[IBgX*9Y@ZY0c+!cl885]Y?JhCm59Kh;Q8/RugDN$n<BN2+P_m$+;DJUsC
%]7G!u[^_17Mpnf+&jmo/UGh[#MBn"16%J>aEs%82R*[X-W8E=hGaS5W*Kn:V7@:!/EWUsE?rElCfoNBoL,TkbI!HBq$;:]SE+]B-
%1ISj2l!2TAFB">g#%&-%_T6^nN;aC*VKqAHk6!9UL@f@E$B*;Td6JWqqB\jsd:)+<&>_5$B$Rq.p"8MV]7i2[M+V_F&h"^A$*KXS
%dOIh0Cc!]!Lk:Y[!gs^3QJrK]loB#'[f1@Zg)sE`-uaC)6tH@`ZD8,nFesO1#Y;3g*]WA*GnQ\rpVHnT2Sirc,ABLs,dTDU,>D(G
%QnuP9YsJ^U5Ol`9)3VGi`s`N=ec8Dff9n$$;iSF)7705"5Duu$"'ZYj(btY2%(%#+S_/bN.eCnkgb@EJacrm(TA9XoCf=/ibSla8
%[rb_r_h&YNEJn;6^(YZZaAHUn(cdH<'ILa-AGFD(_kMcrDJX^5R`Y>K[bo`59PU8.,JZ]&*&LEg+#oCA%HnX]AfbADb9IUdn=XL1
%.=1n4f:"B`F]a,T]3at>3u,#H&'.tj:Vh,3Xp@ZmZ+7Hn"#g0NTGfg>O.QISZB).O`4TYqhurs$3Ya/Y<X!VO>X\18b(Fn+'mioC
%kacco?;OmJEta9?l:e.pDeG,jL<iJb38L_RVmIhhp#3R?[eN*(35ED<XSIo4=1,pMUUglo]WeqZhYEM>#rd0r(<ds+CjP8cF[B1/
%hXFOVpM^!UmmX<6!o;,UfAr?Jo-Pik41iYi3!!=@]Zpufp7BTY/2nYtb8/D%GT>I\GH>]T-fF1)WXE6="?9YhR^fLN0\u<[EoJk_
%gYa>%&urJ(jor0U#fb_S44D:*8:SM_AOBpIQ)#UCbbH:3>?=69)<7ujfBq.[.3uR%i:[c7*<)*l5?E`oD0H6G,3!qR!B)Dp\+.Yp
%q&!ggEtQPhZTP)09JW?_b#gX/qoe=3[P3XpgZo_"!GoH'js"\f@%[u'<q(YYVe-:ga8p""NHbjHI]/--$uu#\T=rmEJ@+C8&MT=/
%!"o_Sm\)O(B3lp9/`l>bdJTU.DO^k]0F%V\b^(s9J>-%3R`2!JS0?%8<e`OaZpE.+7#.c^Ij,L?_pP4WiHo`].]NgQ]u7"NDaY2t
%WC>7scV3(S7MM-G+!jWRJKpQs`JSIES90>hbiV<NLk-e=P&Y#bZ#I\`ZZ[n9r5ACOKfg"OC5P>Cp\,I^Q0;;WC]LH1PRK+Yht'MJ
%B=rtjYfJY9>)4)kjLZm+:L`*i[[eQgQuT0n1'th%Gu/*Zk:T$lSn`I[\u$#r15Z,s<ujG1.X)eM'a=P>m!cd!,&e+t\YeAfhedSp
%l!+,h^Un:l8%l^1*Wgg`jPo'lm]\]bFl(lt\Qh2phQQq0KNg+hj\`cSV^<+O7'/L``o#M+I]Gi-2JV;UZe]Nl"te>Q]MX*,Dt`E;
%oKHT"p$8BV[s%B;Gd#dBIWS)4C8VZYXB5;T:AfOiC?)bWc*q-ZZok65;l"8TJD.ouqlTURU!Y/=b'oFR[1R^GN&NhXlJNoDr5*r<
%X`gHW+82ap-J\<H)B25<P02Tm][7b.RtF!7XtGRg2-S6gRdjc<53Q#4#TW)>]KYWTS"9BtkXR[?lZYR_SQ`ECplh/l```+^^"`F:
%[b5T328<=c<X2XNBQ41T<k[5TFGKCI5C+Er::uXR@Xt?,CrF)gFVkkq.pA`nY<<esR\N/rpuh'QKRhY=p>a&OI^<bdWn'\XB)HF$
%Ve-T^r2`acl]58N2]JlB)du4KgYk$:JA/%9qP]BDPg.(gmnpKRlG2#4CAX"_5p$U!e=7<#@sgO9j[kMY@5[WZ^3O5^H'giZ?]Gre
%&E78+4^Q-n;(H4OHJ,7+:J1#<0(suSqaR"En0<C64%.>`Op\+__PpAjP`4kVW:r/a%pQa@+7[fG)fXf*:$A$F^(r2*)n#+TbH$\A
%+(7gKs+N/8efMc1UuNqo:K=?!-!aT37]I:FeRlJ>^sOFXS##^(YDeob)YI:0</ZuU$!jos1/.n3%dC2jMKda@\jD*'/Rm4F[!lf,
%!s4DnWB)4dND/@M)0Pp$YD3r3J$?tE5@'NVq!t$+_9:A:o[R3=4$eZ:+?(9K7T8a)]5Tj^qV7!K)jGS#e3f`jO7O"FP+\lQ!,`,5
%0@nER^<s&?YQ!aJ?;dSc(Y%giK(T\=cUeY^bJ'LS8*K&@^H:`JGM]o^5D=(D\XR2ZLcF$O1`LM6[@cYQGV8WU:mB"RRXEU?.fPo6
%d,/qk%Xgo2-5%1o+Ho'%NV]npWu(Kn9Q+#0brP>1e\sc#h`(>rVgbW@f'RtW#0>86kI5'8gCkJ`SfgFlqbcbTr%rlRY'-iD3W-a-
%qb^"adF8g28@6E*8cqn_(WdqNOiG/D'S]Hh_b!L6ci`oi)?EXWY_&h<UD=IlB2u<.^;bl::Cf`/=2JOE0tJ&1?MWld3rG?q[#s,\
%#S=d-:6G?_?sY9=nW`'%fAr?_#6"1Dq8ZR=gMRJ7`84@0Wes<?AIu@O"a-+t"cU;^B83p@kHmURfH1Pdk,u;O2X^pTVhPDY5_g48
%DiIO'NC6DcIEak2+-Nf+[?&Q\Cca8F6'JQ.h#IEQ\;F:^q]RuJqe4M#L8JBsJ3-@Kn5.O4dga]u='m4Sa4TQ/ec[$,#%`*Q['OrJ
%Dd[gSFQ\bZL8:IEHZgu^q<.%Ir\8WHWqDL/eF[.4J;/!E:'1stEmu"Zn0H)H8n5Sors'sJ<L@olrh%2[OXY2_`!fnoT\64XdR#\k
%ncH5&$gmQ5Ud4M_Fc3Xb:TYj3hSIa%_`ujo04=^^e,==ms-d-s.!E0m?H5jA?d6,0H@=KClF!,$HY)UZ5)9F8$"$\YCZ=_'nEU(&
%qh^pCGtqB%NoqITPds6`]t>IVD]>WH/8+-(!e6Ys,P;)OaFea4gHYYgs88Mho$;g]+.rIj73Q0Oi+"hgCM^$BfJ(edU]m-2"95H[
%X?FpRU%bl3l+l`(:DhjeAh;gAH<*Q9(O0:VMrUr/&Mi;jJ6Jj=$;H=SW^:#)i=AZ]([O.s9Rc9V"!';3GEdC`?K1;PX>g&ne_q:j
%CB"h85b3fL&7[tYNV],k,8Y#;;Q1m^J$.W3FSU=p%,#M'ktb0c.Qq<"2#Bg(lMfB$pL&)4%7Q\Cn"VVY<Vf_"O4Siu$MRf-MU^1&
%P?(!ms53j3s5uWEe)1/*s73Anh7j1O^@&@iQ%73tbV%\:3bM+s]0,4tUZjQOc#=.hT8b%K7WHhWifWEdNgkhR?Jkjkrh0ZaRH(cP
%dOGRB<983Ym#?a+Q%Z\O`ckDL]T9)]LkBkt^aiOk>C^le6YspVS%fJ^(**h"Do(?Q^HFbA5nJ*>qi//5mpGGl.^4Z]l*kEK#W/RD
%qu%urpFk">N-Z)YeN].4gi'K@dHJ0GfC1L_Q6sMYjj)fG[q^DsJP_?bQrs'kC3sJ*L)0rIJfTkmF>O*kc[YV\WjV>ee>aT]+cmo'
%-ZnPS>[m5+,4X`X7Io5Jkba3F]CjK^_q-/:d9.[4oRKco!T@t!>Lcohl&.=pXR?,OMa'C(=T?W1>Ca#/+%Qn5XH*S'map=sqtm3<
%\j!'E<W`[A@Pn'=oj<;gd"),P`q+,,PQu,Vr]@paIg)?icu.D6mBH+s7Z/RV=cFm%NmmuKX"jPA[I1E_hZ`aL-PE[h<qW!=7h^%u
%I8,b;rO\HSR[R2ba_WHk3Q'bQdHoc4]Q1QMQ;48>BD%%`=oIl71+U7,i&I?4GDHrmUZU>#[,8aT><\osXn6h4;da3_fcBbObsHW-
%GFJL@KK,-;Ii%/?C(@9RUi"@a0Y+.fZd>?T).,?NP`FH1;o0[6?F@TX3l=P\<?6J06o!nJ/^Bl$]>[T)_hbA@CW5MD'R`sL[ekGg
%q>Il%B\52T;,+T$m!iIXR/?4mS$P0pcFjlE]j'1@T\HUZRr^I>j[:5sQHmbJWkE"oDUA4u[B"oN9/E)F\[c.`g)9O_,cKk=heJhD
%`\:=p;TfE$X8QJ/>O=B3cn)g-3=U*pC.^I!/a'UJpO:RV,1",S__b/e;MgWZ;,nU3B3B3_SqZtWe8un(0T%W8@^4Y_XZEuQn5N+T
%H,b6:=3]WXGakR6CUIBa5PS.9#)iFt0Ag\Ko6<LU:/uFY)"/"+FO6lH>BSF2I5[L0/if9?A<`I]jDooAcFU.'&6!<,@ao;h9jF3J
%VplXWg=8EJX*mGsTtgRcs6ah*l/0ab<X5kmgLXo?QG6hNS4gi.XHJrLK`3WnmAoXYl'dRmX?1+3"S$9P(euug`j.Tnoj:e.0JNbR
%$r//[,0?e,B"Lq]U/aDBeuNYTiP8FKU%CN:L@(=$A]=CF@*M!h%'"&'VSj1"$%D%2ohi?GnEZt)+/!&:\$SU+DZ$60,_TRl+gQR-
%!*sS?5]=WD@)8FHCs--%AAFc1[KTHReN-4hABM<a?EH0X&.e#.*7PEjl)`oADHb:L,A88P*XXtH=Z*+sdRf*cfd&m7-'c\V84%4Y
%E`b1QbJ8,J],F#)VT0l'.Ul,LS>Ur><W7EfKqD"H!0aBu16p*0*W"CBh/6T<(,sa[Ka!G*/F*ONE'Z;"BPC1`)DKB1*,d<bN@i2V
%&q[`[oJ9UNnX@J_0sA'q6.<Ue8'ESDg[-1_<a!OtA#iF(&2]jI:b*)7fBlO*gJN$ZrY8Mh6nKZ9Chcs3_q#gUNN*)Ui*&`M4Ga%m
%l72_Ii4,b0>([>RPThPfP6jpFl+(U332%FO_up)AF\Mjl$/8b=*NjG3)RP;##/[f(L.olGA)M31FaKuG9u(=b@g-[SRG(;H(lY,!
%s6\K+4HiFCdJ8MV@/cMnkDI6-VpYG@Z<?X>)Ilgr>Q'+S7i8X=<n=7A0r<PHK[JihnA/e]M@Q&5b*qp]%a^^t2JbY/HFMdF2Jgm;
%\bJa?BRXmR]2uC#AGkfe+V5Rn)$49hB"mU)4fNQ,]AuL;_mQ^hCoM"69:[T*?&me[WTKtbciXSC`Y$;Us+E^j^sWN)rU_@KBl"]*
%E=QT($>(LOd6-nqDTdn!!cG7K!?X`Kn8[D(n:AcSdV+8+;m_,8<:#L_04_T?6cou+2,6K@k6e'l&613,.`[g5%6LjFrdb<N]q@mL
%oEd]ZfGf;%EXi'pKmZ4K[V,ul&T.A>QcJO<[5p;H#>?,T0_D);g0L4qio327[2<ecg28\sQZ^U*`_rT.hX"<*n+&l:>4s@&ph]V<
%#V_k`H^;kJRqVYN-;:E-;%so5D9fXY<pN_f^a:^0CVqjX!TF@?)T5%h$$MaR`19A!CCS%Y&<LH09d1QL/DkgSqMZThYhA6S]u>es
%Q)UsIjWWGp?n$"!Irk4V5nfZR"o-3=fG(FN!_.]c'>q_(qHNe9%,8#knOd0t0ilb5SY.%++?0H$<9c?Td-Gkqs1!@as36auH!\I-
%fmCCr/a'PZW"9u"kU*Q?AlMabj8tB53pTbnZsTUi2V@jmKH5^;5+b9!?081]AJ<>k-&)65(p[>jA[nPK$$SadrLa)L?iTZrrnB[:
%dpN.$J,e.#m6Anpm=5'FJ,@:dq60hss5C[Ucs4U:5ce8BARIQc1',h"Z*%d&\MP\#Z_.FRL0_2.*3[a0[,*lfc<a_X>baA(Y&30]
%h7&]hBjo?O#DB;VB=d5ZZ-L&=Nre'_'L>1kOpaWrh7HAeMAl%!M46O>2]9lKGeXhX"uF[WX(E,a>Oi4P(a%T55;6hk.+Y.G8QWjG
%*P]YMOc^Dg&PB(_=DRt4-_iQFK"lTTFAVG6l[QDu0iFt,Yuk^\Tcl1q`8(fV=e[3X=*m-H5mt7u!)'q9#McGabSl?J+EZB\0&uMU
%]*lR:V\5_U@;EsK/#K-_KfYA*TPmG]b!i%O'rq#?4g-W6lEu`-j&M+M;tmt=L%Gbb.(*f>i3oFn`C,eZ5"Z@)H$L,?`KCak8f3DG
%dX3<($B$.6UTCrM0\0oaE(!U&f73+0>hL9b)iSM9PpYiuCOi;Z>LQ;r7n%/E:k7@;I1Y^$hlFU8Q:!+*B_lZVJ3+6,5pVdX*j)hM
%BWoQaW:n:dL^cPJ%7mLBD[sm'E.2uWpc(BPgQRM+m%hJd]pLgR,,*Z^Mi.0ZFoli<fG/hD1F_Yt;NWE(0%d9X01Z]l4Gk<pkh[h7
%N2pPhh4\Ag=*N[a\AZ1"q/M82LtaWOaXU1g&%r*KM$"ht";cD(Fm<l.64-SVLOh3%U'"JsFui*oK"\.DMg63]oe01a$6<)me]qE^
%CpkjOMS:9%]&@)oI3B>%<#"_A:K.U92f[$b[LgV]Wdk!+jq/.sG)%/6;s]3H[-(S;d;0V)3@UO%FOp<%ffj3FhjS\5KLaS/OR3kQ
%QXo9<AXfl%[=iL$b'\=2>\Q'3**\c[hjVUHe;S!GEli.M3#RAh4t4/Ri'?kY^dZ4K_I4YPL%kqD(\u86rdHb*C;LnLQ6Y.`f1]`<
%VA<7mOlNjjcGqU>hmDJ,q0Ko&EGg0A0/aG)=2RAh/[tIW=h*+aQJRk<D<%`6ft'_("@E^#Mo"WIm2bI=(obR$Jl,5q"s^aL5pa6f
%(W(TsK#R5)EhEl%d7?m%adpo4m6i+eaJSFT?h^%*YBi/!,G?sh>G^o=/GAtq>IAjcGB0p7QlBl)?Ea(2:cJ7$cMDr4gqKtVm`SBd
%4h'p#)R&34omA'VhCZC3A?SY"[ED(:Z+U&FK30.D&?$PgEF^Sh5@Ss55'^)p5MdoeHi<A)ho]lfe^]&E6b>o@qLL!Y7L!P9hbOHO
%2p_B;[Hq'45^F:V^V4:<=ZI=IBr$@>en7&]*Yqp5\Ze'(AFor;(!oJmo6;J6\]Wo-Jc[-0#Jm='P.%YZ?fIpO[oe$>h:$N_.aR>A
%?5p`MY/DZ-2!FZm"ulM$G4nah-SNU$njZJ8W:JAR@eVu!68_aON)MpNr_mfZ2jQGGN[!5)_.C=t\CY9cij.UolZ<*jjl7!J$F;I2
%N%/bZVS6,YMJ]QCl2*97?7QEN>5[6[=4BsZ^DVD9/DT$OfhH[P4l9Gr?8"J^f_$09W$aMEH;-%Dgt\NtE3FcnnoU(>pPN9JTA'!"
%YQ)g!FqPa,G.fC%>J4Lt/*[=_]W<FJb4\(qhDLP2^&FT$>kRQ$Xa!iu_'Zd[F^=fHa1YqU4'PjMQ8[.*M1=Gi&SBV:k,!Li5F$+?
%KYuA`9g0kYZ0O9H=6PB\goDFAkurF.T-tWd:;,6UcWTql^=SS>lG@akFA19*1>Tc5YFmuM>1q:alFhVLam`SHUO@P7oa9O%V6-V6
%a*,-GqVc_9U"AqR;C\0iETm)`7FA_K=.%[n9Qtr(EGPBKq/L9+leZp\`c80)CV^infCIt"NdE'7%6E@9%hD]aUBB_&e^A6pjbo7;
%VC2+a["%X7HbEVk8TW.P@^19se&7:"FRKU[dFWZ`^=W>Z;>04VT!dtY[,%fS]e\/q4$JUOpS&/25"(XYU[O=nYD7tt,@015g@fj#
%hqA>+FIMXZEVetNWRm;RUHI`+HTbP:\8&[XDX^suXRV<hT!noa^#"F200Q4>O-Lf&3sCCGb7W7KO54WeBKP&Ikgd"LY<V3RNX?90
%5,OUCl>)(IC(esIq31-qkPEUue@*ulkM$fn?G"IQd(<5[Qj^QmO%T,peZ[O!gYqtB?*F5+ak?g`[?_(k`"U7pQ4p(GlMPT3M`'A]
%AoPFJ8e`$(2/;CKF=["^>e]#_]l*LSag9j;MpborF/r3BW10WmL\WmaYu\A5pW^A167JNhlp7gj<k`ga`["?"-ptLLrYZromY&`U
%Fdb?dIB57LPX?`4f8GDr^=\B\APXA?f=86?o[<Zg?)<.!4U=ZnK%?n9:-WF4lfU!:\j*f2j\O=jcLoSI)8\q[s8;(iH)FVJc\g^d
%D>4jqeiPadE``^.Q@k%6=3nU,15q$%44SG!gIE*#glgN7esSoU7sX^59F=lIp&11s[%#G3>:[J'hbfCdG*5U=o?b`Zj"Tk"TVrh8
%Iq5,,QBfqqre8hU(Zhst3FkC](3kWbQT#:<L[#C)j_FNLjRb@,>R/#RdT]#o"I8s7R%X\b>cXUS>R.aZ>G*tIgB6R"I;R$hm1FI3
%@kj<o.WD-[8=,60DpO[FL!5b0gRlX;mJX$c1eWD?N:QW4/a?120rI-@D^:k0mOBmSQ^m\K^pKHB)I#?u3E32:eD.*Jm-qHlTGEic
%Ff2^80UouOq#cBRor`W3WO3`&2T"b8cbj>k\#JQ9e]-b@h@XGTi%2AN5/=a1#['3^MYV*Q(p!"@PIE:`e;!AKB(FlXoMtrqpbB(R
%]q=%\:PPJcRi>]N_V=)(l30$P&U3!tKc4$T6?dB838+"+Di#EO0UqWCZQNC_U-6)_0($Z6.n*tUBC;u)MG3!R(j`(C`BpY4//I6#
%&QJ/'8#s<U[:)$$dNN^LkQ9KHM%s"^i/?5Tf=gk[B;4qVChEq)RC=DW$m@h3[V6Se$h;eK/W<5?^5S#EoeR9Ima#Z!>A%_F<Ccc0
%l*8%;`ElIbX%SquY'mLq]3FH)kOh;Lecfa-<,'&rS3-A#PigHGERh&?=1_cF:P4]%eoJWL)p?D4]\!-j4Ye^;9h5gjhL6G]Y[7(X
%-4%qQE3EL_87!q>l1RWNC<WqaN,oKB,)[,f'ou7r(np299hT9e'`n,'F6jX2(66([?-s4*!V:DsG>77,ZR=qFcFngm,5"Q-FUD[+
%;dPu?4h!!0_KqI?O2"P6?ahOUbp]RTL9DqfO%92lL!PQDJ;OujTcKuSrZk5!+8Q82o.(>?8cmP$!`f^9T4,Os[(iY2YLP'#!/*gk
%+%2FqodBE#Edj!iTT'>q=h&mggkF.,RX_jungN`%+LSS05@@'48Ce^HiRA]A$*6c?(L\=*lqdnrGC>3p/hbV5lE-_9927Y"%4_BS
%;Thjg4^lXQTXW*;oHS\;,lf,)!FsE&%L<T'-5\Mb_ed\m$h99iBaHs7B'q)ENl/_D15\&M.9_ap%gl2LP+QR'M&>_,++VBRFGAFi
%\"2J\&:e@K8b3A\a+_PP,5qDkE=Ia7%4h3/>%PT!-Bm6o]>dI([t^&iOA'[>1+'Z(0k,bd&9//)TtM8fn(mZl6'&VIMdOVr3e-<]
%5n9P(CekCd05U;U5oU.9^#XtB"YVYJMKLLUkUtRF/M;4G::;?XR)kj!6XtgE>U[7DERU%4n"N0`7+-$.X2c:rI+VG7"2=?dND,of
%+1EUn@N!imDFZiPEh"*s:GtFmafR/):QBfZcXP)P^$oW0)@9uG#h"'4?f(BX-M+O`q<,'3*.7aiRh?;9Q6gTUYF\m),j`p,mr2E-
%j@u"r<iZq,"uZlD0='Lo<-=;Y8oo4tV\iqe1pMLG>H82QeGuQt6V*\M1D?G8ZOgM=qt;a[5$2:OfFjhe*ij]*!dklf+=6M:C9T)?
%%7X=,$<MRf:SYe#f;c[m*Bs"B>7h"_d**#SVD-AkKb,8j34=Y'fT`jSm(m,!Vrq;Hj/NtUEG_$gq/'9#cYVKEkh0r!XK#JB&Xq>=
%^e%Gkg5X^c9(E_R_^q*^R_>Nf]uZ0r[CWkGE>2>^D(L!ur??aRJmRs#WeKfZAFam&@;1Gmgk#F.N8aONdt4(]j=BF]QlqK>0"Pd:
%$XOU"\;[T%SrYa>Zbc-/RambjfjKK]r7SaA9bFWg7;HK9j4"bs)]u2qXaK$O%VQmjh`0)4>7]Q9%VQK!)]NJ?'?5DX_sMBa]%%.s
%c]7oo2Tr&8m\DkX=8Z9\p+j5]]/paOSgJ40(UiC-\G_qi'mWhf&*@gNF#rZHC%%>*il9s);ugsu(6Y9O!MGdH?[m^_Ca9KFd8IY+
%FsFhFj#Irb,Tcm!@3d2%'*b4+#SqD*-3euj+oom5IU)o]QW_5nJW'<0)NVBI]K=9liu!c7E&AIJpOf7"r7jg?TN_&-St<'c3,(9H
%K20cH-a=m14sm@h:hJa7=:SgZ0"A4hap!/@>l3!S!a2l*\aQ.*\Bf+2=lD.nLV\rZGVAH8@4krV];E=V.LjqY_G>TK))<gpQLVjW
%A\+;ta<K>br0B$'1^_9VQOU2];S!\IAIG]HLg>TKVf[dt0e9MY*LM]>_2S!X73r`$kN@7R;d>k'?O)Ug+EulbL53Bi^S;F&JsXBj
%acU?O"DE8Lb1)VJm+bhd99Z,dj5C@X8!<aM`cm)4Ii:iS"4YRiGNpVK;V'p>p$F$Y;%H-.A(/=ej</@@2Q<t:,u21F"74e4L!U5$
%/d\kQ]sE/GPgo'<cLk)^&CUQ(E)O#hLH^*%Qu6/+CZelDTC@FC\O`9QLU(U#7gg+bR8;*Z(FQ#JSa3EIpuj=<l/&*b&19a;p%+hZ
%&1429!oHp[8rgjtf`$jJfafYIDus'j!+SP`K6>nb``p[k!1>.*1I?01jJ(e>TWT)3KM>bEXb`R&I!EaL6qc6j!,jO2g>0!&2'L;P
%0-:hRQ[9+/Z>n:Gd>\Yi/S`Oj$HM8T5Wn>=DL>QsE(Jh7S@"ti+2`YI4<'/O4YPe5$:e_1TJabjTURZH+`8ki^/u,<NS1!H%U1g<
%gT(Xi-hpH18<6h.'0e1T]pJ`N4,&^ACb0AI4'AGg&Tq#2mY4E)<*8-tkh3PRH:PHYIB"*mf+W0`8ZX(hF(X2:2.^_cC9:4E#DH@Q
%_;.3g-u`iIB#+XYCYoY0Ec6a=<-VoAB1'u2`4Zo5P/[t,i?[9tM+b:la]aUPF<auuQgFAIo:e\/p6:6ta11'h0^12HNf9,0(e(KG
%bSYZgLU$`6kUN;Cqi28%4uKe')r/\sp4R@&*'(/A0AqWMhREeifPqn6EX7>Hf<[9Ea&986b41!2G@omgOJMY5[R)^nV4l#*.\p,7
%f(U#I[pqen0hiM6,Zg-B4lY&4o6[a>R*$Sqa6NS/7$`naq'-t>O0*AcNPaEl;euEc"I"M6SPeTT5,-VU#&&7.DP=JC["#]1"aT^:
%cMR.XGd.55r:+UA)JWq`Bk.upW1g2CPAi%XB?qaTcFY6"P)o%JdCN$td\Ak<k#XaX$V.Yi"eL=E76[l0`\]H@KHiD-[iU:<6F1oM
%LZA<a6ae<lgPRZcPZ+I.(*9b-`_qDFM<d^qW3r#r@M._qV=0>fI5(3a:tc@l@i:qQ2/iEVT6qU/hC-$Zom)T5r.i=g$EV]3/0@K_
%,c7rcmG43VVJn6/R!r^=1[`O_9V%c5qjrD'f,4^FgQ1:f7-<PKH7QutN$lBf=O:$iD/I:Mj+l3%EHra@MH76V?QO\u_&f<=Hq*sq
%ef6Y?D867YCd#7:d%k=P,p&8V2jp<B\0'MiX='1O#Fq]e^Gm;l_p4B)rRboC<*r6*NDWj)/abe-i&mLrZguW1Ho+mH+d\7H[AhXN
%giN8mplpmYV"<:4b&d@[G,^C`V";.[ncdYp,L`O])+\A/b9nG)FQn2@\U4E&F`GQG55/;GEMmcUFM<QH/mgk7?(<C8cTRVUDFI6k
%cKCeB7lM]k:ZlfFjl<B;7-T*]!,1Oh,`HG$JnP:@cT)O&gMon\XSEm&H`T3XJF#+:93=MPG">=I.f3&J3/G76j^\@`Xn[`[pTmfn
%:bk,.I"TSI_d9VSIqpI%aXD5R#IFg5o@PL6C!@#O9f$n5=RhNlkBhq!8(RloB4H7m9jADl<dYG$bL,EH2\Y9@NQ$'o.+RMOe.+u*
%r)6gp4<UHtq?\mM)0b+Yn;/*IEjFHLmO^9+`s#i/4J$82ro-S,-1."AkL7oH2Pj<qV]"T]G39TI6KuJt2H"MUfN*k9U&?<qq$HQE
%Y%_1E<\Q1^\!,JeUSqlO:M5RR][uHHbPYIHf`C-7+j8=!Fr?PY3nc9CSj1g(GuPb'D<?g;:kGHSNs\I>gC'<[TjoqQ*(?D1V<U8e
%/N`UQ0uh<aHli)SGk%%tL_MW=r#:IU&q!s03H@j7,b/-ps2NZp>U&W405M7j?#p@d,4GKn'FNWY0q/K_=B;W'I8e@Xin^%nL6)5I
%b_\'Q20fRYMJ7AY@k^Ync?gXs!6lb3?qd4>VJ4<A0.)HcRa*$&ksc`Y4205"MX2h$8Qt+an!:QJMf1TCX]<%$5tpIA-a/!&Qo@Vo
%a-^'Qp>Bn&afd]HE&u*M\?kP2%EE!593?ehE]\ik.qR&69(ik8(!FUSMkT:#p8@cF!hKtnD<*^'ea4%D>i_H.4p+_UHCebZ2Se*G
%#XYB%S>lBBGS^dgJ8M0M=i5@*2(JJucjtq&*S[DUNFulcV.J<_-V^\?rS3`Q?ddECTm[%nhfR'#A;b.dpW)k/\R_pA8!(g@-GorS
%*'H,*/3Wq?CFnq6AP@g`$4go!=Cp[/$-:5;^-OWBpVpZ3RCtO`6eQegBi3o;Deq/qlX4Jr9k&**Zm[YuM%YJ4I[*^t%J+VMELa4b
%=Tg+Gq'ADWkJOiVDZ]p`J\q5%;g<5J?NBZUVN+/1E:i"CDEE?YK$N3lQg>ia\5!$cNs$VuJJW;qSu.0ohP""cX=m$=:f=(kP@[:f
%T6n*,,g1ab3Gbgd`6NMF7l%-+A'YXi]GWY)f4K&3pW4:=(2eqS3;'Oh,Z#@Vr#AHq)_]1VM;q2XLKBAjU_/fb=?CWtds3:H8pPk4
%\#CT=46?90Z1<]ZY/hQfka@AAejr>]>E`Q/juHU\Zd$]%bjPBc\'2K>0Q!9&4B!pb:X5GPB&5qlYiBBYfpfLj=_Hk#]M]PYPF3e9
%j?&-#0dUr$bWHMZlR,J=Wm!RujSb?>`\q.8T'+hO-8WtZVpO>8d,%K@(5`&6ml]U]IJ@0/h'gdA02CLOoFa#-mfuQ&'#0mMoWdX,
%W!;qrQe/Q'=r"Mej,!h$)`!o8%^"+F<S)u&4p'[9RK\g8mdc;O@P&U>bZug/OnZRVXHAg_]dhK@q6=T@6W7*=5C0u3i36E4Do@Il
%'sBE"r.dVBHu%d61riGV'eb3fQ`=BQd1TBWlF/].TuS+m]R]NG>hkDoHLs1."?//#4l/`JB^`:tWVGN)C46YI'Z8ka671%f/HJN6
%bbs.=p8"7CA?5;<Nor4qL#EO]5P4#.Z9Mri,l;(@8[=E71J![/kLX=0,`<S09p.%a1jtN<C;gfI3,(`4(1ac`i]=GF-CmOQ/k<ah
%`%Q,T7]+4m^6KaHq@gHV/>9br?]pZ:+P(.qP\1KhnM9S]:<Kmhce0]-c,02HOd'Le4WTpBoLX<TpOb='A6)9Ik&06IOsdZqC'0;_
%8RVqcSUM+&=6>kXVkD%[Ggs!&MVk>Dh;kj$,6R=[EBII]_=7q.%@:\'g"a\>-p.5\Kj\"Q:'0[%4sG7-c9R-;+Pn/`&VJqCf@$%^
%o?>/rMfHU>\Mdg1B9:bfBY)%Z@PNMH#t@..?3ZN1FT`Ma^B@UK2q26BFR]Gc?GD/Of<9e,=8=\#4+hRmi7d-_8r;GSAuK\&l@+V@
%AH"$L,o%P(MMGHbm`sgL#\d3=ggF]u.parG^-XJP>J0`Q9_M,6+5PB5T%=s/`A`q6obsK)MOW&#jKuO3\$WbTb.1T`M-M<%3@W/u
%!H'^gjDqBXq<is`X!QF0?dNX`2^.'W\GKdDkEGsjkB;R9]4-f/PLJrk.aH.b9:taDRT$CipLM$%A_h781pQTL@)9,"i8[0#g'PVn
%f4;XAI=GC'>+jV-gcteXOoe,_+6?<XKC%hhdnc2!VcuG/jnba=:[oPCMU3+jPn>aN*Xt\I))n&.-,.u.\NO0rP'36E-_u`a>U0X?
%ZfRdLT?>-hid@ZUm^FIm-I-o-]V7lQkaLW+H?Nf8XE1i%le*lIphm^MQ20s61Mn/N%jg]!<_TcN/pFor4C\W:^aeRk3(m1,U<??4
%VtWV1c8.:;n#`M(9q2sal])^pJ@G23:II.agJROh(T9_dWLVL/]:!5>*ufm#eMk%b`\FaEc:VJ^],;sh3BN%0Rb273\U\X\k)9rM
%m%R+28BBI1pA$e@BBmE!5ORqW,kd'h0s=\eZGTAk')V%$qA^\&Vb-6]gZJmI6\&d8fOni&;s?<c`'1f75*I+V9k'`#<hC[JAbs>/
%]<&_slPWtA-2'@o"_O=XB.'5E<lE2pqs;=5+(mB0@\6q,T:%ehNS-'5p,OU!ZVBemCWa4k4EY,*\LC/ObcDHSAcOYPM1,AS2H=4Y
%\Z*N35]]WcA%4(%o`[H6]uEh6ZdVLN]U<VGT@a/(4a):*.22RuA"[G'f]Qr-c8MrRDG#IEbri8WDO!aPcV,#L4DdkaLl@VOB*Sq5
%<M+,;TA>aM9eV:?4t50(+raD=Bs6h)9DVJ`jJd?*'@gpDW1Wrnf6I/:^2i-NN[i*1\+oc#3MsC,cgD-)&!b$SW''MK?=dBW'3$'F
%WVULW+R%0k*MD#T]fqe/EdOE[JA9j(HX:ph$=b8T8EXDA'D>O<U0Dm12td"N<I,'cj(L1o(3?*fZcR;3RnVDK-:&GeF.;.cs/&P_
%'*H:PbHZ$"r6GXGo]^(]nFAfsb@,o#hj?Ekf$"(?M2.\\nip?&\)mV(8Q)BYQiBeJKH0=K59k?up&;^_o;.f^M6#oZp]!r&6%[%n
%Je45%Bk#6D/9<q"LXRM-RJ5:Zr2.ad3jah6OBb0PEr+!pq..n/YjbS(jW7$V`\%9GT%E[=,=<FO'6$L'_`.:7Y\nqVC&jf`5D8`u
%dM0!UduY9",Tl%Jm_[:Unpsm",JVH083@f*dc7F=0g`"H7513-.ss7koU(A@mO-0":Enrn=)a='O=KRV!^7RoQ@WR6d^u2-8C>i`
%J/aq*e)#OIejC);=Jt%mhk//T-/80,dsF$rGJX`&c.Dp8L>M**&O:-4^)3=^bj;#pf&j9uG3Ym*Z0@]DERU2sIcdu)al*Cl.3<'[
%`0fkY?LE&$]?;4uE=0\W>i;LF6b*a&8]6RHY@H4<O$Z34mh:mcAoN\0BkXdd$F>-_%CnkON>E@gW5Q8MlnaR:JKF9+eeAJ`9Qo8g
%9TMC+r<ml2HeusnV('3cn7G.N[eKc\Xf>0?n"3T[Q`g=W3;(=6n)*1QmTB5_"["FLSB8Ho(8$TTbPLR/F$*8l@Q$EVIE0(r0/1]A
%m<aoO'BYXLGoG--4S%V4BD\_#Jn\p7CD17UWq1]-QOe>sNf@H'oTAn,-P:D(ftK]+SR9)U\o:$#AGaMUFkk@9ftK\`cF+ZJqq_sn
%j)U&#G7_CK;H]c<+CFHg?(qYD89WW+l1(V=6B>V%;Gj]BlSk0Q:En?3<_`;]M/+nJkROuni?NcBkQ$@@dkR2(Aa@eMH$U`6)*me]
%9B@BEe'?6_Yrs+\e9WN$INk&`qZ./L`Cq@P@jF1=B%af8cXpY&Bnb<].,]K(i4+'A`L-5trKq_fQZlXQN5+E5]Jc^r=e2QmK3K.)
%Q$6GkAc1pbq78i\p;R&#WK+Sfpn#3f?&"3UjEet)n%;k"`nRKQNbsP6*r9Qsmq]g0RP8uJ]7W5`/,7a+7d@5\822[T4Mt:\.(<k@
%hm,("qTY6Lf,pqarI?>P?+QJB?<bb/BBF'V00<e.ogc2?3?O?!X;G$fC%(3p]quV@Xb2pGPBZb==bo:BahElM&`6>9*ID'm%pnNr
%]f)Z+3?$1Q>YS;0'RDY"a:/nKRSK8rfuj$_ig2B$.5NW)LUqK;s)6*J)SVa$P_GK2=M4FWSp@Ln)q/n7dN@ZF6.3<q^$+dAA$;i#
%Q"DH9iKOrlF6iL4`Ne%oi-IK+Hc>QqS;=]P[!$"ag1HB<O2')]#T)qK?[g-\O1mY%B&c]E^$tu*^-2-?QhmB-7g199kWJ!qb$cIQ
%f?fjQR-LH\,K&T*cdBJdOcZqARiS>\daZl$"H7-Pc;o%,P[;a.0":E)6uDHn')u-'aa_)RgFEZa?VH(f:No#jaKH4]_G2K#`18`(
%l_3Bg",o7udN)<DJQr-&j&R00Yjp0%b`SP!S+O3FYf^kmQtOn[bg8-WhK+Fin:5&]0uC_2a(-,A-gaD!btB$,#0`?M2OqZul#<_D
%\7WH$*:>8C;:"?l=;kb_F*>UugtkJTj86]`J6%-3E=]>E]*Vf8br3u*g;49rC#rL-_4JhlRqTBcY&QY"WtU_EDS8p\4cUY-O.i5p
%Zg9npc-*+9gVn]&kta*jU8ZYfTpk[l2sUd;9i[gZ-!a0fqcO=L=o-\EA(<0$B2"']JsYN6s$TD)]D86c]?b:h^/mhu8_RM@l9EV?
%=eG;.P(bnLd45dcpMGPX=_<!1Cl`&`8f`m3N-c$bkBmtr5?6MrX:N>s!?_&^S!"CY]97=Ee/5`mT""^G2&,8oGo?MIWBrd&Jm/B)
%R[4oP)o)5I$EZ=kF8XU:,/-:7H"I_L"glsQO$]9jmsn.>1mcEG;\l]^ZZrR97)'M@IK#5pPXN:^M"]oo4!i9g&99t/31C4P')gr;
%b0kA/F@'@1Lhn<nTae2i7)/PRmKU:a<UuK;kSF-T,:1`U5%;<7VO&MqI-)Y7Cp0;*1fib%b8-[r9&f*CrOg.[XAItl^[SNq0f%i,
%?<0T+O8WF5=eXobo>s5:^9#\LVp4k>6>8gX='\j?j0nh"QPE+1/&1AT_SA#&HhtLYcmrE&L=I8)lIBE)?DgtD%0P0[XX:[Ld#+j_
%D24<FgIW2&\gM#BTK--d^+VTjG?#:d4bF+Qh/>CI*<YDGiM"RrXerf$cq"/Dc)WT[;l7+pE85ie)5Uc/D``&2kV4\PFMI4if'o'f
%_S_3Db/V'_d*Xk)D``%IJ/Rgm6h_N9!^?)IoXs\?Q`kK,$P0^PD`\@u=&M_>iSbWiYgZj%.&*Bb$#GI,S+OQbG;:NEZl*+nkUu\$
%os?G,4ELjYU:2/#p<?PQ*kKC'RA7C-6F0oL4<,l:AF^*=H/t1FD23ZK1@f984EPM\hO-.8KniF*LhGI:eW@g/&`Os!dpI@`Sf00!
%5YZ^dTt;m(7X%XNiM$-cLB6RCh!m!Zo\P\"ab>N<+l7gGCUslaIAOtYJ)R)`O_2d+Cp_L0/j,Y[$]KSoTaeR>[iKL3E70JgSMq2N
%EDPQ3.2TW3&p?Ej$P2W&0"<?h0l7[B*kKD=R\Cn$\a[uEj:U7.5`_+6G\@DE2ViO)3Jb^OJRTE:NlBHo^[TU:W]pB8LYJu@*<sNu
%Vf9lOJ*_g/-b]#rrO,'0Yr:HmLGnQU60kH)9Rl#pcU35[^$sD!lioUi2A[FG.mI.;c/QT-GNHk'qI,Np&+-Y\\KcHAn"=d]TmJ;-
%]2<'DGj*ukTYO5R4EO@.p(u+fF5c)&WVVb_C@V`CmDFD*D23-j'45u4dA(g<TnTC=HJtQE&648:;s9cX2pG3H<hR\gnOgI]E$AYe
%)//9&fq(A[4ES@*0OU]Ac7\Y0k-dX@qdGp$%u"n;DEG6#djDctd"s2>I0jWF(EU.8kqYD=l3e+s5dT6hB^^VEi5.kU,[G>]bp5k>
%^p7%>^$sDI[R3\mkG/n8]#tH&V(.C]k0U-?22<fiJr0jpN.gKuL.D%+H9Em-K[DRlId\?H&'kZ"%HgTWYc9(]][-_N'fc@Mq8X["
%&I:@/_T9Wpc?G0$dD]:a2.)fkIXh6h[2U3**otl<O%X>$HbP/k5ZUr4EckFM#F?JVb<bV9"]q9G+2QU\c[985q`>VIgpjkP>dZc-
%9"Fj59@*1T[<4o&4O5O([rnM5S`eRgU]$Amjll$t>rca\5Es@O6r(;HDquhnK9%tQ7N&Y"S*-o9nmh&6UteJD_obnpr`"/l^3rpd
%/eUP520$7&]H2jRqu(s]]'0_H],U^2g:?I/?F$9@8nJt5KSq"LR]`a")O8do8a^Hik3;k.\@T=pHa]<tBGZu[0)#jA5<bFrkB$0W
%cpG@Y[%GPoT@SJJQ8VfI;IXSZm3PP7$.+\o,QTR%?X564Mp2HPG1O'4-Zj3E^?]/,$*He7[DH3I\0-uAYIIoSnA;sBTS`/A:EkUR
%^6R<pkA\1cZ5.GJCGL8VfhAL6.XL'XT]g=e"(grnjD2!hS?>.5D3/qNrJaTMgrc3N-uo23#T8fg9)0h*K'tp'iht&"6rdhS10nJd
%)Z&He!lF"*iq9o-0S[cqF="O1%*lmG''\'6A)qm]?[V8`]e;bHk`JoUMj+O2j#[ISpO7cl2[c<M.Cq@a6^@Uu[J[\O=_q*u.L[(Z
%ilh#@mi:u6VS,qI;'fQI?3B&q#\Plq61l)/O#4+_4Wf<K/'RKJh`st8ii-H*s$YT"DAW7VO5QXdA1s#NR+bgj4,)n?e"@Sth\(j:
%S$2Z]pu,%pHes2.h)Gc8dDuj;Tgk<mX79Y!Hr4.K))%`^7=a1agG%L'`(KK&DoN/RGd4]es1r$3K^i<t]qbD'nLPjuhKt:5;)cM,
%2=Xr_0er;O:,TK0M1TYT<%I2X%=XIu?.I[#P0s&MKG:EYe2@$3At[9jNp,1,J[@Y&O](jo&K3]3E6+GNYFOUE[,(TWK8Nqj9)MGF
%`/cQ9'Bng`'Yi28l#d(^=#&-_&mif!g1]lsV/eC/IbrmWDAG[\L0,Y9?u5d4b,o1dTm#J/?)^]@3[\]E&_^7F$\Q^FogV0ZI@WLB
%B:^"bbb;H6rFM'8o\G.cs6:X7nqTGY]Q/,C_P>*uK>S3#H*gI\.gF<*\ne/>I?i/FWIC;1hqH[#rW[.:)Eg2mRAH1deJJ'VHVZpH
%.FQ5Zr@TpP+2\n1BeO>!ki7D(7MiH%fC5nnIJ90aSC`b?:BAr4PEGF\D$=NM'5$k4,?P(<Z'!\L)I=-3Z1lfH=oI`dFLWF*j<gY=
%mMmes/s0`:R44)1'bX07r?gk'.8FQ+=h@GgnKsP\*`DW7WS0,M-"siYYIlufe)JoA?>@dgh;g5l*`pLl[G;oq+ZS2oVtC^-,!P@i
%os/b2ot`lG4f^O!>Y3j31;bq"GINY$4"o-bnAaemiFREj\9Jk&CkTMDO+OFi$[q?+bOK/\0I[/IGNe6cS#^)5<jjV^Ta7ndohc[7
%8_=;H.%C-3XqJa/oL)g[8r29Cg)PK,@!Q=KoS#-1\5ld[L`d2<'dZdKDqD3CKq9#hTY'"afI;^A,>;s2PTI=.-`-MO:jC<c=,=DA
%Pk]DW"I;eVBnSh=Pl5O(j,&GN88(7V(ETq%4c04a3a<ml"`_e3l!UiuT^mEQ+K-YI?b]l[cZaK!J&5(qN<q>e(nKXBD?La=R(-+V
%1/q0<l"^QP22+Y[]q`*#WZCM(ed;:"f#\lor,^+'9,KuO7!Td)+UV/0Io[6Y+1VKUSG7[-8kn&2jB#EF_"\CS@"MY4G.6ll-#U]R
%Ag%c;8ipBNiJU`GLt)u7gFZkXJj`h'X*a."Q<N2%=\gT8YHHlek^F\[*'Se.^gR4fSB+<9PQE[/;KBRnO0c_Ejl#PTL2%K^+;OA3
%9HYM6A9i="LlC`RY4ekYDlE>e_ZR<0=ZaKH4Z9(DmZK9RUqnRWd(&mrlg2'Yf%7@]eB62h8^Oat9=X0[5`MpRXK.WB25GU^hPF(.
%M<4`eIUY<73P\m`*H?&f`K5;s'NbK.GJ%h]k[4InBr/$*T"Sha/Etb"kQ6*"I7jt:-Vh]ceZkE>$AR*<2!QDb;%>t>MYjE6[A6h.
%Z+-e]-YI*q)Ma12f&D^sWadV0!6sE$,5H>$;GJbJQ$iougK!Q$K0?tB9"aHLYNjG8KY`SXEq&mD!#26-[A0bnP+(EI-7./\C(%/'
%^.enk\@E]"eUA]*ir7p`,2VuUri/"3WV0ME3f1?6:@hY7j(hkE>JJto\g]2>/nf'sT2g:f&BfQn-,nq:<crg2l/k2B6LAZ^c^I[a
%O:c2,UH,PGFqH[IhjU!1"/[<&S6'j>HkcU*MerR+lf/X.2E\ub<M]6d6q\K1./P;im("-X<Hf!Ok)SH'eG`2es7145%H9cG%/BgT
%.MH9p"kF-NZS?GF1Qk1g)/6H9?Y+]g/t>?3m^dud'(Mne"jtTl&[_,oQYrr]Rgc"YlmGJT91N2qf-VVJK,n+`E&*^p>`5eU"=*Z7
%h-d%Le:Z/8`W>uGP683:p"2hiWp.K1GdS(lY%?4VKAfjX41Nj%ItY9<SA)BucI_&NA'dh=i0^r>%O7^G%Ui^DC/$BgPeg(8pZ?F1
%?[ir""j=+6dguC'>$8q=^2G(SY=cpUdbFTU!dg.9_5EQ]dTGe!qYdPn"WN,l8un"Z9:`rafe1^j;lSCHe],p3C&]?)OM;chk'%Df
%@tr#$c+N=DI?&e.Fo"XF?RFm"p=luUIp(U`Gl2e8`@bKo`ODsENDCBB!r"]BP@/q.R.6Z9Bnij&.fpP]O5MKPlJI=gO%k_l@S:'_
%K?\RX<c5Zr]9WAdDfA(qM0qNio%Q$&TZ#^595i"eL%Rj=<%D$WlRtF%Dh@gqc49-S(t3ZZcgg7(EpV^^)fL/2UU];k$CqdD"S6cM
%+q#a20ITFppE043RihTgB!2/jjr40=Hrhq\b15cLXF/oms1f>*]#fs@nm$Sb/5<b3c2\)CF+sG`ouh(fS9f1h@5@i3_>Q(5m%p]Y
%75qmP4iZi::0l<UGNqB"S3i2s@c&#b7qUH6a]"I4oXjjMnC5PTr!'CSe)3jeH4aJR![h7VAp]BG$*NA'g[NSr7ZVI<_/R.2%7YuR
%.knl1$-?MJGsDD&A3UOD!>MKHQ9TRThsjc)KT!GsaM&UaR+^-;H"oN5F9/R*O#(3tDE!J"^<$pZ<XL@CBY16Eg2>KWfH?\s)RAs-
%F/YS-\\&Fg%r3u0A050[Zi-@rX"olr[:pucR'VVlp9-p\T.oW6!QN7F2K@@BZaLZc2C+UgRMO@W'tNj:%!ImPDQ?-?aG@?u](;Lr
%Il][:jX]Tf0)F3O'OFQN:@QS73BP[_;Btk?r1e4VZl:+T*9JcN@))JY:qA3B[0dVI8'Ckop#h>3UX&R>qr[Sa'mWV@*K1MT+/mN/
%SnV\Z@0LJi#W>KBM59u@"II".9,+[gCjKOgk[JbLgh[]h6_X*ljfG<HIcobedf*<`TU4AI!H6V!'M+NnC`N^-?oQ;"FuHdqV2>*<
%\lUEu5$'e+V-%>@J/&KE!hMHm;YR.M@BUW*Mkrr%BmY22T4k&7hnCrekZ-%^gm'A5Co1/\I;jBGG!0?g-7`(s\(t.?pC$KDMm[O=
%-sJko7K;:sRYar$hK@aP':9Bl1YZ8SYZJ9bM[p%pH4p*llXK/0G6GUC]R_43rD2`0!+t7CAPca%1P+O."Mu_Oa<i&@>*W@8bf`j7
%`"W[&Oh6g)[&<9QlfTXABd]')a@Eko8nh9'pjn+DlcJSL<H"YfJ#]&Wm&2krdR%GC0(#a+'Dg6Sk3c<m)o&J)=jf4pG:K(_ik8jC
%Rq]IR*'1dCL]m,>,EO+D_W(0^UU7Fd=u\eF?VoUhME2ZMkRHs"-4CJiS[E:'4)P,>.Ik1&E<?FBl?dHsh1[P#s$*kg/@P?V.G%A\
%m`*'jKI)S^g_4I(G[k;iOZPb(K?n.QDDT>9\IS!Gn<4D$<c5sNZO&#G_UGBt1s:R.1!N=''@*'92#f'h+d%%XRYB$6,Vn_m_6Fg,
%DoF;_F-mGl:[W;^$,ecf'Ys$Y6@OYj$X.N:Z$Zja`$=aX*l<gP7"&CY:H1ct(u@AX%n:K/($mTDZ*TO*H`3E:46l34*jR[[ok7%X
%9UXD--R=eCa3Ko`bh:)hko"_&m&#eQT\S=XZS?K6B^Z)lbH^p<jggq,bJ;K4Vt-b]7snpQ4)+OIg6Hb<EBPk4?g>20fN7eG[*SQi
%rFtLaGV)sD3lmneT5SA&[Z$b#_kOdA;#JVXl=9hYqWG1<TnC+B3;[[>:i6H+DG4*'f3^_rX*VKcrTWITjfArA6OcKV6#c/(9-a,1
%hslQqNg3GG'mp:J@7Cik$fBO"S_G9DF+udEr8O4YT12/F=.7%d8*6f8PKpof1iXc5FW9\eiT?r2Fda.W@eMVkne\ICYp]Kc=!'(T
%F/JlHe]1=D](s=GDrfpWg==5::Y+Z0Y!-0<ZM"/H=!'(YirZu5p$pJjc/N*AqM)YNjm#dH?^$Z>!g)t7@@eK,-u-lPC(W15(W0TR
%/!V:kE0S%t=GV[f<r=<]ge)WO($C#(B1p@1dQ-'_l::V/8X(^3Z+4p)['BWJNLAPrTU$HQPcd^s'9Y2\"[R?:^=Nk=&]FIa]^k26
%Dr]X,`lQY!A[s!3O!QI$/U'I@iQ-377"_gb+ISl8JT&KS73BR0`sVZdM$RZ0lBARm,o!tX8.3a_F_NZ,.blr'E8r0B>J,2KMjE-c
%0@Z@/22(Fr,:Re3671ON`n,o1h08?tJ`ZN0T8:".QP?Vt+ab,8QfPtSjA3&VT@]GmaX*.4:5DCS%dcBc"baa*!b%`J18gc:N^7NX
%Er(Z0e5),Ka((\MLOq]TNbhu9i:,)he/00E\eg&&g_fh1i*a:jnhp5[!9%&`K(aYRJO&Rkn@])41a3MA_sMA(3/BhuDOtei,TbZS
%Q3./n/7K%:BZKa[aX80L!$K3>#lm1<'-QoTG7P<A"Rsei'H^"ffGu^E*X+PDK#tjHZ@NFn0$(8@`j+cjW.VMajk@^cLUZ6;!<ARb
%NLT?<D-.aelUbX'f>]ITOQ1K'*/([<78=#SAg7"*B+'.*D#@'3kF,1%L]BYTk[RfGC'Pau^g+ZF)eV)MG<0pqEj?F"f:AcJeA,R4
%C1_P\ikVerU;^9;:Nei_g:2?BUH.gKda^e/"_\i:`UBt/NK6Y.M`'uaipQ5+gZSjT+[HCPhu]3&qX^eJ].`#q;E;IlRoH@W"+BTj
%_(,:[7D=QUm_o9*]]O?<o3aftBWc2/qpV89h8b%Ug4Zh_pZVoUba<!VUGJ?Z,5n1=Yqk9+7e;'6_(eY&a8Nl,(GrP9,9K<mjlXI&
%Q$08Vi0>R`r;rbFr#TVbYX`(=a2aFC<Vmb,BONQih,^?&)>[`M&dOVRFR=E3)&!+I%$HZ;GC3U*jb1/2d)0T2J/3QIgd3jk&aZ<`
%1+TuR:GoWcZS*Wc\sPC!iikcP]/Dm78Ta]1?9=18DP&j.Su#TD^fEWVdh=:u)OW<*lWScEj/d$l:EJF=-6gIW$?DjqBUsM82;$Y2
%E8j0%M&NJj)`^AqYFX=V4utH^L=RB/L2;S]@I=B,jW@N=8,H_DC5-\$7UnH5o[UYR(hDMoOd=iT0Q05O+FB^'mcjQ=iWDs+8+ug\
%V;L1eWg.`OQZ)qAWE=FniisuQ;8Z:DR)9es/E74pW0hV!.kAVE=..CSS9SBPNt4"iq6sgLP?RsIMC82IcfX[UJ637C9eEB`;_dbO
%6M33WMXEi@GuNBhjSQ'KaGuQY,!\%9M<3?e%5u_Z*m?ZW?m"(-Y]b)O`TNRAn"AoN8](dr`/gPQP?M[M<Q@TQ^`AGT[J#!]%8A<7
%pJ$X%[^HaTo_'`2IF_oN_-V/?3n`s8'nuc8B]/.@ja`ur"0JQ`m"^jsUMZN8:E;Bm-Eia2\Ph+hm1hoR;_,HeUrjp_D5b<"2sIkI
%Ye@S18hIs6',tTpbq'i#0LFjjU-[$mRRoIIh,tB[b#bM2<cf-@Y39"GqQctKD`;IiJP%JrX.)_fQHX()c,2n2e&9PVa^JY([;]g%
%/D_qYHbH#23io0bf9>cfneSgmK<A./A7OANI!I)ncg=UKTo2!Y%`7-;:d>.84pAb&/O&o_&1Th\W@+8*AGa4iU'h3?PrD'mVgKe=
%Fg1ad]s8<nV0<tRp\Mp9iUnI=Kg(eu908h<O8CBn%LD"<,jZ)\CMe`c&iR.?(F![qr0YM0m]80%FkNNYp=@.V!!I]G!CFV=%'m$9
%oV*0KShe)dl8,2W)^9&r4Ih.7q;>:is(31(jb$b@>d)fm)-4g@l]fb6Fabu9%mmg,(:[/ek2[elDOD>pN+IPhSDB=8JTErtgnd\(
%,dE<ann<S:c)J('c<%Gl#6<X',):R5mR[gpUMt3o9YA=+(V.]EW/.==?U^?GJK57Qr)M&%6UJ0,qt%7::jYsaZZ@g`/aP%/>A.U+
%5aDPgFVTlkP@N578Gqs0LRU&:"Ag:!(RKqZPMBM(_hMF^b:Wt^0B3(rdCm4E(=`3/g-3BDm>/ulFu4%:cGE/:k_HK<A1'2R^tCSL
%BVf3Qbf!?&4bXSu%H">+Fge6=[PWYX=i-C=2p)BqPO5,m@]?WBV]6HW8[Jb)a77`tD?13OK=K:k/b[s@h!JuHj'/JY+d+VB7$08`
%Y;U,3>DNM#!6IIVV$>jaa"Qd1`J-l4).p0cjUfcPr2OCF'EhWQCRFgCo/%UtT$b#ud)>IDgg:H7(\@7HJRPu.EOLkBe?S)r$=Qo7
%q<SH2'ba&Zed]tN_D1@!V=k8RC"1N,.4A2PVqom)[?n)AI5q-n`CIGB9o4WhgNl?3UA<_0IOH)R_glh='I@S(j1pIKhVG.WdtC*J
%4E2Y]MrPtt@_eNM-S]WW:O$Mr6OY.lUkWN?c+U%Pg<W)I]7BR-"Y_!tT__suUX`>fD?iI&7s?rcS=^G?&'(6"CU*8shNFFiL%B4F
%eLZ7+ZK[I'ljhGD*qlg9-(dZD%\6ham?+e2<%8h6B$9"2&+ab/;&BnpaoPs\h(?i[eB$egi`:EF2&!G[?R7i%l@s$Gd1nNb?/;@_
%>=aa_7MWaaftNB]hH$KU,H$<qZ$eX;RX26IM0ErJ/b',O-el7hL%e)VM8@^L5)]f.S_[6T6VI/1TOI<_5s49BCJbia@YJJK;-7-j
%g<Sh-^+nbhA+<NF)MZfTRoi$-dWMb;R17T.hCabn&)bqX-'*;nNseosBcAe".cUBr/j;E&WF9GO43!+(Jef(DpNWd,J=KaWJ\7N^
%&I$%(]9lnq0mdHOKBu`H"IC?eB??[5N@eea)^f\:c0K$Z0q4`8X,=:LINDTV]GfItaPeqQWo$tN<[nt5>VV.4.PqY,"%sOS%G4ki
%R405OB:MT'rn^egei1do0(k:tY*U<#nHsI.L'IE>9UJH8W&Pg^c;R:A`d,I<o+054A#F&P=@X=R-\3RJQZ'i6o=d+UH17i3c^TjI
%`/KiFQBUUZ(>[Ot*V+k[E':6A$m0RN3+gWe_@u'e3D%s[_QK"JFCI,tCi)Dhq5Qh:'4Dkk01$-R+WQ.Vk"Mj+9IchW6nNqCS6Bl\
%]=DneX/^-\'/oP_rFeV#j7^!L5%6(tf8$"FV@Ybg0_+b=(1)A@&0l4,B6=_[^!r!6Jfef;\25+g')@`l$[1+K;'$FMqY<!X+qM5Y
%<dIk2+M<SJgKMl:j1K+s3B0+V7M]?Mhi:QRV$:]lTW/A.'3f7l*+j,kWJ0,B*:Ldd9A4F)Y#SD.7icrIfa%)&*SVAW%2$2)gKI#g
%\B(_uGIRn,c#I9[mC%2**1#MkMM:7Ba)rAqDPf>2I+Vja@qF3<GN@@q6r%5=a%$j_--f07)tuF<A8MSs2@8mOPmo]<EE,C-cQhcr
%9e`Y69k&f*"t_2f%>c#b6e"l?#T+qLR42J-ea,)D!/8Kr4sOf6cO7<Lo5d'Q+MAd2<@R8eJmHL-USPaY-n>_:65%G>dGcU\IPO"'
%F)0/p*XT#bId/pNW`Jj+\3I;H?5;&LPc/&#q8[arEM4Jq[+[UqAS9pE3Q_geI>!,"E'K.D?:"3k!*P;aI"_IQ:%X/4oIZAk^\)lS
%PW-mpnQe>-rB8qpZFG;/]Zs9qC:%&Ai#L]56Z\6U.**so%K44]j985d@rj_maDBlRBH!Fc^.bUXEaW)9AOqTD;Xs7oBFV0B9)S*6
%-A:\jDlj,go%2&(*Hj()AIgT`<4g^`0&>jf+VTVPj%NhMTX:I.foQoM7\K]*gAoX4l>#kJ*q\B;cB><Q([J[0H`5N[i:912L"Scj
%M"&$dJX$)'IEMYSD@UDc5;`%14$0B8nht6G[t<(_lP<(7"]e</N4ZPHf#>^g7o%BN"ae`s/L?d#GW(/jFh@pfCkU$4e1H3D"R<;p
%-O'TB*sZsC7#8<Y<nEXX3Uis2BK!IAf\_<=)dB-cRQq90;_X6]'U0NSX58'.E,>1Y+"cc\e6iOenEH^_;Q4*pC"bmt;uLi2%G#2@
%6N9BK`eYH+[7UnZBH[?;f.&Y8Ga\&#8e$eYF])tY7Y<_.]i#NO-oIJUAOHkq7<1)X:Se821k9;T<iP%_i0PoNm-%#j9$LklU=@7<
%'U5&V>'n"Rg<T!B3`\eUas#so011,!Y]O9WaK%4-,Acg7LZ@F(A4?`Ce2Y6*bdf$VKZ"qj]iDs:ND8dP(>ZgWG9G4=iXqL3_0Cb6
%(O1TZI`NMIZh=YtmU4Ph0C]<@gbln9^R<:jr0^d^Z0O#1hMWF`fRSeQ5+gQK,:pBX"/]n/fm/5sG;.l)rWO?OM7[b5^tBt1nAF5t
%[_P^=8F#HU2B5j->=#Y*<_+q#Qor6a;Y_$3PLCP^AKkpP<U3hudOT+pbo\>$*b!/29Qm1Cmh%J5_*>.cQpu2Bg`nA\K,LQ2g*8-d
%Gq@!GefJ8A*=SC]YODfj-6puU-M%L5*Bh9&44k5I_`YdRBtsQGajHW=Ye#8mnKf,<4Mm7C3$@9RcdF$h\V%0'rX1j*P0!pP`ml:B
%2fHV[O0B$[dE@]q+YL-)6&_PP_n@UgVhn$j$fWe>'c(@l<bbB;f=U`Qem=DagO>D+%,h33_Y[n:%GTnQ#`"rL)PmXR1^)9VV,APL
%]76MPoDeOX?#+HHbbFAB-8OZG+Z$pXFIE=LQj=O&ZEX]_$>d$gQ]:aSs-n(XT&ACpmlM&bheMV83$i^7eFpap)%ZFol;j0L.[;JS
%/S`Zm9RB%"VLIU_h_T"JAubIs>tWb2PBMqSe#uip7fCm0/:SKgVgI[_UGlu_2/8R=aZc(h6\gQdXZ`IW;ia<G>ai9YLWB9gXB)'0
%DIT'9J_I)T6'>=q@BbS$2+WPRksg?\%Koq\NKtPiQ,kKqQ.5#dNcSfmFO9XOgJ=ffmm_t7_SO`+H[pqAQS4D<T%1`pTuN:,IpkaT
%,ol91RpR3KDUF62Sb@sd_Ca_S2hh",,Jl%dQ*,T2)\M&LG<`J:cri6e7"eY6-XX9.T0Mo\9:"i3I"7#l9/tQ_%fHbZ_Ca_S)Me$I
%#_Ta10UZj:#e0AdS:PidUBZQp;8(U.#"aMN4#u^$f%G*"F/"(MQd[d`N<9;"U%mtQZCGM5%%YY@qAKZgOq'7mfAE[d_g/8/:9HVP
%Mk-bY/Sf'jr6<,=:Nb!?qOS5Z4>f8Uj5HN+]&uH_>n?'[eNKgb4Wa?@T$m@UT'GSTaLKM/fbj\de$Tt^i&Ao`)])0%483lh>-h':
%j?1sUViZ>&pqo'eFjJ/W%W+:'dr/lgSYoL0)Af_OP*8)cV?R?+J%nD'dV,*XT>@+%\?+A\)+cne:V-5[YJLqc/?=nC4Gaf*Tis*.
%[n+^i$bk+g7@uddIIc4<P@*%cm[IRPH.#K\Rp&J=.Fe,tNaIuqnk2'tJZ`@KH1FTi\^T7cbWP]tSUeqfc91p!SO3!>9\aP.(77D@
%TAPE87gDuAV"jSCN1'n&aKo&-.N_:YTAPFcpmr"0eG+d1J%\]H/K,h[pI]M9o$DttX!ON%>KSiC20j/ss&c6N$>Ru@>=k7or6l1C
%^k4-'!99^6RZ*\'7UOV[925`Jc`!NHTRHE)NLBsa"i?tj\)6dcNLIj<mK4@be=n+Pc,1GW%I9_V^IB%O*E@QYk4Zu<45O.mkhG@j
%7V]`;0fRR"?dGj9h1aJTNRTe_^)nn(;\.?a,e\YDUo#31BoI)^dn_WG*2t)D/>[8@[Arr]nu^acWNk("=@M[$9fl$9Pte#^Zp:@G
%$V'.0XL1H2!-u">_E]ujKDmo0;\.@(']-$PeGT-jDrG#TWW)3.2>&X4m@/lgeC;Am1ckD.Od^T`L0->E(9+9gBrISGmmp/^p?+Re
%l9<l^/^_.+\Fm)Vq*.S75Auo&Mjmp8^K35P*Ye,0f$sIHW!WE1F8=]u;rb?[VBs,tYGjP^ZXlj*)\:h@251u>TI)>_TP)IXI=CKt
%L8=M9RhQ%N4oK@dZVc]pqrZ"t9CSTL-?N]64U8mgXD0$Mi?EA?@9lZ(Ap7qorAac*P'aK'i7FftrqKmt/Z<Ahi;]k+:G'+)U'2S^
%rR@!WC:)H=AbrAPpI$U&#=q(ejIVm<<qffsZZc!:Df,um'.`/.D*J<X//jBDd1q!Kfh[B=go1&OLMPU!ljjc4Tdl'.oO$al>BraL
%PV3u@ldF7JE/hU*kA3Ro.j%g-H$]J>=X=JW&[aY=Nq=sOh>1]g/UjBR>Z1W<-X!^>da*S^BWQrG^b6)I(uO2`[/<r2L]2%\oKNi;
%cr^aJ#Tbg-j#ZN;*3T,1O3RM"eu-m@4>o\O>PKS,c-aSoIMAq>82R!Po^b)AHTj@NQ\9-X'DW.QY%_+c@u"hb7UB1]$J--Ud6i[8
%T,\PI,mPeJhQ!Dm4TRu7!m`R3HLk_do_nDoHOe3>(c-)*W]uc$W[FHUbN<_rC[AU6kpa9k#_R0HK\'kFUIqlsAN5bp52Ed4h-E9A
%^J?^I*_0T(ko.4]<0JDeRVqUcaMX8_Ii)?V#;gPL`b4#ac?=nUC<?OPS8q9Rd[mS=H1T8bnK?06Wbs.%0,3h,]aJn@(UiH[OR]J"
%)m>goDS-AA`XAE^DnHI(_Zd9iAo5Ge!Hp/<7;oU<)RO+o[5Z[EMeLjo#e7T4Z)ZKchKlJ>OpgscU@e,DII_H_&c'tH3PsRbH2A@>
%O^%=VcK4l"[O%m4jC@cAiOuTm!O$;NcL!W:@?RF2iGEsVS5/$RN)&*55pC$*!6as<`__#baVH;<:VE/Jmc)i&<6Ni-OR8:DlEj!0
%QH5htQ@=e3S_!cIdGEI7Fpg,+VYKN4`,52BHC'B<oX_[RVr,d#WCI)on/9oml3c$^X.cATPoOs/k[i39V(-iR2#3P_-2f,4^H*YV
%cqE2c<aS`lmh>M/HJ^:.('#>I"c28fm%?J][&8tu^u2K[I;=otZMj@FXj43)GbO\G_D+U<rK1f-c#L13$@2YfZ8u>`S@MsTh-@0S
%]^*kphaf'YhTp6)1f^I=X;rRf4b^A?QUE-llJ=IpI]GL%oSl:IQ;;YsC)8O`b*BMbU/n<YI?A_ce@Q6!'4*8$*A*@.-^L&NS@F*S
%Q"tM3mN&G2'>daFekB@42)($VmNW6.">auAE@6SNnp:/Y3QIpZqICNe`q8Q[WND[tQW*KdrVSd6f$[%ap@'\GMsB[lQq'Q.;]e#q
%::>C$p,+U(fF$)SUTk8@WU+XXiCnAI?_0:cF8>?r>N8FJ!R)YL.B9MKUubpaQS721YJH2X=E0"BGtZUA=.:^(WiOgXZs-)H.!Sa6
%NBeC=#MA.jq%u!"SA%Q+?NT#nZ&^c:[<,VgeWJH`fCJ@:IEq-XJseQa03Ial<]B%&rGV.C^?g6XI<59?%XK5H9=hX,lN\N85LmL'
%gcW@Icb%=Ir9_DHa1M+54C*>8hUon^.Q@.OohBhjYncOZiPsUl6dtt)"`!@]b3Qpu]Ck^ma-W(Cg<jrAIm<o-q4Aqd:4b(YYd),[
%o&JR9nQ*+gk81UN7h`B#QUg5!Vb]erk'@*Cbu@/r:C9VcoCqX><q5_C7[rp<Pos,l&*lM26(c,A@\7QsZi5*=r&h9Wp0"lD)\(6(
%rQCnSLRm)<#&PB14MQ98=M-UfTA4l4S_-V!]:SifC27qbcg`YPGmu,L0jE3F*V$/#HP>o:-Rt\DH@gDrH5`L]l$$VdgQ\<YI(3r#
%*aG;_G[Z8.BD`?n%HENK>aQZ:Gs1D_@.noiEcAZT=L`DmZjj-$EhN)L"a;4K&#jjo?sGQo\==s3Ft_4<=T)FP\CsL*0>L,.;fj\Z
%kh_"La.EBNWX`ei%3qt%^cH8,%`=:Yl#SQ0?Hq/ume#fehr)Ac:4Ijk1^ZHk=6mrRTpI;aQZm4ejNb?n;<8fYJ0aTb/^2+_hLY[^
%h+87eo0D9\$2Ad2n]oi/PhnPXdncUL,6Rc;>_B.dqd2it8WW.*P7r+5QrZdc/kpVZX?RUE/+`_(<BXPtC_`V#+3SekIe]G_pq9N_
%S[[UiMQ>2bcRTsdO%13"Ece7,Q@V2mObpq5KAN5]4$n+4BmHhqC_X1USKtV#*L2%qOERH"l;2PnXa"u_4#>@9RB^#L0VH1`/kqe@
%[XVOd'Sk/Pn+J3Q,VX]+:\]4&G)F$rdG/YQFd]kA#Ck^L[FoNXCt'_#-e%n7\9Rl5Uh`;Ea>O0lDU&lubAX_p*@G)nO3?(f]l/_M
%e_f^rXaUJth-m='ggEW_m`mZ[p_bgl?g@'gCSQ?NP;'ZH_eQ5Ik3bZT2R0o^H]]:p>.]#?=`DurR8`9UF5RYTAVe$^D$f^B^((a:
%k*'HG&Zr95d_#KFT'a5h)Ll%^gKLg^2U_%Do*8Xs52E?um]T>AW`gcpEUWBL%(rpM[V!/mgEh[m:H<lHeQHXU#4A"4SZreaA3o7i
%e--'^if@[*qt>&K:uVX5e(1L^^C!O39[T(Ya\=e]51e7i/?g2cfXF#F-G+WI]s)38.pARs5$iL%d&^`5PUA[W2-sUc\n@nSkRVd3
%B7m"Kr@4r?AEf</Xu2[M;,.M.k8JF>BCnlaD>OIBRE?>/<$ukcG1na*DEqW:J#*LYNkDMPm3g687nR0,%69JkohQr]p2nd[LXjBH
%Gqu",%I58fbg%@k-i1LF:,$J#O_DZfIp6d+0isrKWQoc:Y8B'L,I?J3UTq)cPr8:9UJJ5adsDuGTjtK6_s*#,LEITYmM7r*[kga5
%#2%pYJ<@o=p!mO"S6A&&6%;sLQ5;T>fZ?q<'MKc.A]%9XSsqRrip'a2'P]i0r19h6K^=<o=q7?rp6tVsG4jt`V;LN*j=HtQn!lj'
%kFU8`5+4Xq4Pp#a*k4H7nZP^LBg8'-Stt\m?*2@3I&MF@k4.D1,9OXjm!,H!*&]T]Y(6o(7haPWI?2j6EaQ2GIRJUT$1@;iq;@d"
%AFmY%QG5VXM.F3G5<bfuOSR;g7-V:1s7g]1mg):t?>JS;B=R\U=3W];%A!#V"JP9*Od)6H095KEBTNKBo=%1Y@fE8T6&'#6NoWEA
%8?-6KgI\ZBCIn<b.hQMV_2LQ$q&bHZmY?>X[!Ui#:OIAVs*0Va,[TX5kqQfA^HgJrc[Q2?]u7d2ET`P[^sQ,<<c7oU=_=fP0N\!\
%AfMeW.m)!8re>)D,LB\Ziud4+n%f;Qo:n#qDn%d4j)o5/F_kp$giQnL[XR,P7rr\%\Zb_CBU,sspBBZ-m7Mk8!B!I&%rltm9(""n
%[\TbgIH]M].e+<Qi_%o8EG5Akgnsa68c+td1%%mF,&'9AL\]Pe=LT>9/^N)U^+<p@-3V=no-F9YQsn4r[h@OCh-Q.l,[(=:_q[^.
%l+]%JNVf)*FU^efkuK*BBKm9YmoI<IA597UD9V(P:K^rZ^TBY+=ZER5!H5?TT&!^+?bUgV#@4W6O0RAe*XtUuY'57RA%N\&2mRb<
%YiN_aG&BLp+2*1!/npiZ?dI>*&V/3tQ3L8ce6?Wh<8b]RkjefR,PAD1jJ:sO47Rgcct6<-(6X4RPW.+LSbDUhS)iPAon6a`<Ei_k
%L(!+b/+5f7b&I>F^MZ_I2Yk[;*l%D$2!.5j',tl'4Cc62F1sNoV*qd3;ki3/iPpO^@nIG_C>JEZSTXXpPI8VP&J<[(A&J/nfqaCN
%DpH)YlEa7*_-VOCre*#>4L8phflPT63*R_cp,(N\a6PhZVh5d-TBK#MmAMr+Kd6!OLQTY1Gj3_T[Ib`n"D$qcqeBH[g6hb`T"[]I
%c(54/NDf@PnXj)NYdTJ#e*@l!]6X<je."7+(l\RUMn5"4-]Ph2Eg?6U8^-kJ7";jC3VgkY%Gd?L$JrlahqfFlcF7^>BD03CC>tCE
%#FusV)\PqnR;ik*a/]@)EJe?ea::-jB5O/ggNS`d,Ruu*4#S!uQ&F7DGS_nLUiKX[e^0bCQ_W[>,ac[T!h]8;A4q[0SG]g8dkGZ7
%e+STi1(Gis$Sf&6P&\390"ih%WTi44i^9uY3]lHdVmX\E0jNL`rbB#jQ!A`/<7[57"l?h!ft5S`qSF?6+_R7,./.&/2/b.F,V"_*
%r%p@#Cp(FP?9/H^0$d+uODQ9h@7dm6bh5Y;BYm.Z,J0jLk,8d`P+>1U;LgC'=>$]B*.$l,"?iW:Wm49im4@+.MP\egMAp7W)bf$m
%-?Lu"rLB5?R@+4;'s^(D1'8HkqLmFeXM5lM@5I/VL+'=6)[*7=)KRB^GOOo5@uEB`hWX",E,Ba#^*qmdg2"*lh)AE(UU\pa]LX<q
%A9=5.G,pY9Y0N2j//:b9P,s*Tl,iP^a6Uap,_.6Co^(`.gLkh*k.Gg-k4[idjhG_!Sa(4l:P1n&Sh%a%,9Jj")>K=;d&j@13qM8/
%mskA`s8B/$q*4lof+[[+@e6.gMdPm%\+oCbe&TWbs,Ja/f\t;]K8iKN+^QgA%ODnN1Jg$t*/_Pn"O2suP8_>Pf&B-hG5/8&qMfmU
%+dI@@^=foG9E-?RT"qg"!;<V+Y/R$Q:JS=mF\%Q8mYB;&+eL5pb\TCS)Q?%HRuMo2!:$GH1/1K(K@Q5C[?Qq6$N<;opj55q!.7Kj
%Z;2s[7c+-#CT1#*?Qnh2f&@RH"_C,Yp1NddrQRZ=hsOj#]d'(0P9AY5Whq:*s)Es8b"n'Vj+lA4eVG"KE@ZK/3`:$+VImW9VWG/n
%r+T>3bJTsL<T..Zdr\;7_k3fq=q1Hf4f8rh7Y`165rShGknQ@^BAp1okB/1f(j]&7U..U*lQu>MlW(V"T4NWh,O,?;\7kqX;`?Id
%"eV*C1B<,s1Q"X&5)VnP!#0#KmY%;M\J(oGL.U/X'8fsr1M]<S.rXQE-u,$kOpTX?W`_'MBLXpr-5=^8/CT9HR@KPIF@n\pZLSbF
%buCd="\#bd<O%'hf!).i'[:5G\ckO/KoAH&OtC=P)5qhhQ6FFH1Jfp+B)i40R7o177<A:+OT@B%MHMH.L!N@LQN_,L5`u9l5o%Sr
%*2T7QA?/i]P0`=`/?gL/c2e&3CUlR_TbWMk.0h+*R9VTS,RX@[SqC2]8pR^Y-W^Ml=7`t-9`m<:Mg5uGA`bN=N+Nfu.X<.>bSB&n
%Q7j!]<kbZ#MPWWd?e%^2VH>Da$G(,>ZpM<25m<36V3'48-*'im5Y%(p7D2MOoMVi*(.q')PR"!!UKAu]F/1e:9*r<K%5V3<"4T/c
%V/!85"K%Du`G.,?=jZCo&2'6-&mWWtA[>n^JQks`S,rPq9Vn72j\!>WEir@iRFusJ%s>7bA\_D#ATMIo<2u8T\RN*SWg/IPC:RLp
%Y$e6!\&pSD=3VO2=rA0KY>pN:(hs6<oQ%Z^'oJ8M\QI,m[7[k9[hl/=^0E+RMT#"e'VKEA=K.N7+HIhD;Q1KJ]p,MG.Ne_f!_@%6
%OtB[!JoX[]X(L>Q;VA/6/&XTL5ddYh9!,+[Mq&0=djtUr";Fe7TN`;6['HYnE6+!IO5SK3/fW."aj>G41Sr08];5CsV[>1Ph_"VU
%lU9E)%8aUJ]3L/)ZNV2?LE#NB`P>0P)g;R/=R-j+F^]tE_fN<mV>F=<HT6bE(INGKGGm/Qf\7DZN35?$?]jk$T#"i?`d?tZ`Zr[:
%+(Nfcm].8Yl:jG/Y>im^RROKt6/3-r7Ah5OUHql6>8l`p#+eL'ck,&"./fOh7#SSY*lC;!?T'UXdg0FmmrXS"pN;5:cmoet,C"G`
%M>-M%%Ba+:[#]Z_Jak&+*>gAj?Uq:rLk6/17aLUuJfgQD::uC6/l(DmGQqp2NMZ.ZSd%ecp_92ZBq-qWE6%an&D$B5^;Xp%8E/D<
%]G\`R)NL+;<"SQXfHcJ``^js?c6KhH2I_QWJaO(ME"!8K.+m<)?t7)V%H(Ba%sZSa*Dss]XTkoa7o=%-k9iaBb8efondC?1breId
%X<9o-6,m^DK`l:r$hYZr7bJp1KK2'8kP7u.Qp+!'#6b9fOY1c5fJto4mSmrK-lVF`nJLQYP+`;:,"Q)Y1b9a]am_+%+Vg+U_io:.
%/@,>.90<P)NWB^7+E^Fk,o#B,UFIrM,0&akHF&2;KXcK6$Wt^ej=Cg[L`ud1e<D*;JcnYA5V.dHLuF"(#C%O?6odGm=,0e<7?!&h
%(T4LumMJ==_gd5F@ZW-6:nEl%S050-'d3m_%-hC`W$ZcnV0+1MMb#)C+;>k`$u$g=$<9TTNLkNZ41Gc\&U7h27ju018541OJrAWU
%Lt,''Mi4hT\OnKkm/fp!a0:/TV@1p]j@U,Kl?C?d&?&GYG-=\;oMc%!,55FIYZ/iZlG+qu"/cmV)NIgj(Z68%bJqZYmjuL>L]rYV
%g8g/<+a"Kf&/!S,7\S,1O@U3^bG-L3o)`@17%*%R%%%*@35cF\_(J?T,:!KgY_%JUHtO9W-C,!s0eo[`%&6]i8>N9e$1/*>)/Y>V
%+hLVTV*[E)*[[b>f6T/5[B\.7TO`;P(\[oa:3rPRg!'lHG+D/?;]<aQ!pGCW_?\"HGG5_Ah3lo];\ApQ'uV74j-+PC"N"kG-M/![
%(ae,b.)=3@nJlSL"VLpM&DS=(q]uh(U2h[6,8\>h@*n0_c&qAITlk0ABTNM&?oQ3)_6HbA]2c<JTRnX(,0^5$5Zg&^63.c)!L4\N
%82aOK/CMoj5c\UkO>[Fs"5OT%7"NK#&aKq"ab-CI%,X4iLe=Sn"UndU^.>%X,H+slRd@J;K)rpnDEn=>k%1?E8E%/S6Gqe"hp7*a
%#GG(-Cg]&\B)>\&J9DgV@\be)MF*fN!XbOJeP7rC[);MLTg=tW@/=F\fTWq9N:l-2m[M@C.[Xnmc:A)]5tPOZGcY6X#b]WV<]Z-/
%QlJL$!5#;pa.OiiG;5,BPoYgUS-;]E3mAY7B<pc@V`JjOUUXfUooYi]"#pP^EbYLB1CSREUKNO9bf'"8+G#-AqKRSh>Ll)GimBLk
%^*9e4_;<H[cOTLoeec?s>dc/WTMaL&6X'Z)k]lj'>Jqr@]7m89,jrDUDYN0gBLY9LK>OJJ#OClangq'Q3dt^2lq=BFAfOnd%W%$=
%Lgel-:-;Q0Q"g;;Cs/*XSf"N%i,K9neY(?EHOlGs4$=(ufQo<_T]#D%J8/Njnt7d!Z3*_-(Z\F!<#K!,lOKQn)9;l;,aRg`]FL]]
%!b@&E=X4WbR$@^sM?VZcoah6m%_sb:*XF6qU8=H8VYGEO#LcPo`FHN4<K7O[h/G`3W'):B"47L??48g1*ZcO]WNm/g$hUB4is?uR
%F@rE6]ST^pMS#PSP;S2:UksmaUO^W#K\Wh,,`@1]E"N]@?(F@$G7:,(D+qPB-EVQ<:L_-]G6e>?,ANfMoDOV2AAX;B0YN:`15IF1
%P&.p6@OXF9ceujRMW[ceGj#Gt+5;@O_:k*+KOgg/K=9>3&4\&I("jfIpkLhh.M8%`32RoYZSI,"\__!^(W=JCFKu.XmVnl;<Zu4H
%)0GKn+FlAmJ4uaAi.o,%($##,&M+BJ]Jq?_.u"W(R#GX%`>s1Wfl/X4KPfX!kKI\:\if1L0gtZ6aO/*5L875EU5Ear_?DWP<h9Ua
%7Atq@`Xl,_Uhj\73JT!4,u#-=HtTJm5"sLQ&8k;]M+f3?QkKOK+@]NYfkki\'s!KI3D,A)$tq6>/VF<Ufr^$Y$p7QOeT&<e73+@.
%&U=uA$7/R@$Q)@OJ@53,*;/d+POKWd7/;Yph4a<df.HZpL'"6s$4\^E.)ZdQ8nVZU>+s:q"b$GLatuD<8PCFo-tdaCQm%_)6mQaX
%6.:o0^k!]])dFJM6QjbW+ik*B0g<b#jFI=#!%.LaX,'+d=c,Kc@j4UQ@XsA'8JDL>_6D!Q]n4,+Ee(+Jn7YX\7_%uN;BQO8(eK1q
%KTII6Jjo=1HO0$OKpV!/"Tt</LE0m9Qpm8""f9.)7h0><jPDj8Oa5/A63rWjodN3smQ7Ddb(5d:*8MO7.6L5(BM:CaG0NR+.g$I8
%C_n!enFR%P7s!Hn/V%G0BKJ>0]@*B]A\c6p^(*tCF6@j$]Qes^n3/6Lm;*;O!!c"I9MdG/\-JXVZ&EWAe6j-m=7@ahZOB*DYZZT\
%Ss#&jZudLIj?N]=8u3k/$p;DKhYoom?VI"UrLk+:B6I+9UGD6UQX1r=);M\=&E]3s.?=7O7U?BL%Q[Yt&+QXWRYlfei#j8Deeeni
%"D4p5G2`c;*3hae\h$nZnbbYF/.2ec\c]H`W,GO:lbVD4_FYTN]0^_?-`"koIfLkc3:=G("A1iZg,k@BB*Bp-d[<pjPAq`QdHDFf
%p&u0T=\P/1U+mM/S03`Q,_2?)aIF@U&3Gp8<WGp0)B=Yii'n2Ha,iP;bRVRkO(&]_0I[j/k6)uo0Rs48663Hc3/+1IK*g!]N\nED
%,_%]L,`WP7#h0;q2iZNH9Foq19bbbF^_0g`"g3W@7k"#B#>LtB(rQO?&Q4D(:`hKNHF]'+Z'%d,1;K9VKtq[M?93orJ[NQ-1;-)j
%b7_j(2TFeAI>!5,!>+:(/j?,QO2?aYrCC?s?`fu$^+q*l<W]Od%OE`e#`f%>EBNk[mH[Tbpf'Zok'[sT%k%^j2b,n0#@o)\qSb-:
%ht\XmMC4GI[m@jjk_4DE[7e^KK72_n56).]lGC1^aeKUK"FQR>c@Y8mfJg#e^?@T>EGQ*6Y@3u3i]CG3W)h6npN>[WWoI[$;]6R"
%/3f<0@G]Q:"+qKh#R%=5O'MD:idOCDP!:5+NJ^#(qkdhEK#&`o7Hfe>_YY8>HpN44cL"-E=;_fr=Lf9Y!_!)Y-P2/C0WbSWEH%bL
%;sVA"Kj+X:&eObEMS[ZqO($2a^f+GaIZcq_+S^#k;E+Y^ZOPV*(_PL)cU@n:!c1=91bi,3JrDeR_57M0;`reb0giWHUeC+jJtmrH
%/-j^M:P[S`V!_n$9Z*F7.,'Zm'^uX;'&g\J_d/pgiXF#IABbO@j"V8)8:o)91Mjh+1*Zgs%m#pcJD7n^E)87DK;8d9Pl=d?_0$.s
%&'V870^`;<ap]Qm3Jgb(7oD"@b$h!Y9+5WLaCH]=!o(PG629s]83I6"-kmU7GpFngIDiu5a'tc(A:e"O%V$h(MfQM+Hp9^.JEMY6
%\,eG4G>%7sSYF!?\1ifH?"dAge?(L>ZAMU),Y%S@pd]sE';1H8).HN#C'dJiV"^lTQ0T-h*0;k4K>CrO!L4O'\eS2,_d&NBOMg$C
%'^ap[n47)`,GGSs;A=7r#?2!afmLgk@h.L<U#Uah&k3QjaLcElhGs'%].V+S,'\9=_!D1aO[6BtJ5g(1U3P`fpsgLcWM/-9Zk!j=
%8,)!G%V1:Q0pZPp=IAM[5l2CX"u%!-*[1$cGn>3,G8I'6$rV\]!&Osd_Pj9G<>P2&@$Ca1L[c+NIl;:k"?Nk2Lgh4W@hKFr%Y8%0
%mM<`[8"UKSKO?(C]X&l,F(TN/ck&06L&n<T+Dh1i1gMLb9SL6jdShINJcX6=)"1pq<X*@Q(7[Qt1e?Q6FY[F@&g].G\DKjDAD(?=
%r!6Qj:&u?T&.1PZH/TT9Cb/s%L?J[%n1h.6dq:?m"ih>j*&Amo=HV<p@/l&(p6oQ[?[47pk1^0LYQA<kbWlun^"M;2#\'cGjDh,q
%$62%2i'<)Jp$*BJ3[(q3#5XYO!c>kK$urg\O`g%.YW2J9gr$'rQl1`i@A$7&BQV)rUC4=^Sb#iV$+L0?\<EkLpsa+NV?RE$SQ^jp
%?6Z>IDNG:(PE0fo&GP%#9]fm%0e&ef$4DS\L`iO+-.mgL#Yl=r7]83&<XVTc0id4j4]B_F,2,\3YgY;Z&JmMs>t!tu0T8?rA)"i_
%LnYEB#QQ:*!&]IIK+W!(Sf5JPa&4CV_ung4X"d89#27EbSs\U.<=k9(&R98#0lpGG*/(kYk5r_J<!<gV+qs"[l>u`F22C?gr3CC\
%/&i3>LnlAlCI]%C4f"DnUPQ;rjDBeob^F7T-2!si*cl?@*#Car%PnM.!o!pUQEN]F7_D[S2\,Q&i:2DHK&$LBEA+`qG]AuR2'IY"
%4tdO-80!N\TcTf6#caY=MA/<17csPhq%6D8_bS"u)-"*U'G+93.Tq3+N+F00U7i(-Y:nOtS$9\;9[&724%]#G`$P]mgCo/CnsGbG
%K1/S/V^)9W@Y!i6&[>,.,*.sB'+A\Oj&eoJ5-"89=7?XdIP`hqn*DQk]182X,LQj"`QSOj6R&gg-!;'RJrs]m^dp;<jIW9?;19c-
%N=PIVh;,cq:pt"[STo^1lrj)&."#W85+,W-0kAPg=7Ta,J<r\:e@:>;KkEH6ZWMc],8*dpOEdE.'-@FDFS'=W16&oL8080`Hk-lK
%EHhQ.]iEFtBlt8Z?5RouG95m:N0g-rbYs1M6)id!T";^^M`@IIL2V16`&NJ<ki!aPMC>IOVohIgCt9eg_,*XBG6pK[d?u)%2?miL
%!Jc@5]<`tNlX-%7h>ikgq%ZhejJ?:>IW"7[%joW>l-`^K7m#=Bm4l,uF$gNZl^(sJ@Hpo,=B^YIl0L]o0EZMb-"]F"C4k"1)*[=*
%_@*]TaU4KRQY!h!4F+71[!uP3p98./['d$c*_,0DB>V.\2%u-5';I`J',6^f$sH:,G70C%]hI&*YhUH/$NVRmc(U./fNb!'K/;I8
%QmH>LL1<1u*)%,H0PX-0Ki_6Xe--T"p<49iQR'9iJR!@pkmms6ZXgoCiV6h,p5eoB4R&F*HSg9LdP\@X*D\2"@jfLM#E4J+^'#P=
%kFI/U]7UIq7?E10,hCP2+cuV5Td(P8DFd\N"5QJW_PSMiiJ?Og&4)Z9BGcCr7(,.QA(.mZ5a*E2H]j1C!MTY`?0sV/i3%](&o)rb
%?jJ,Wh;sj9N!.<*;%JnO@]D-AKF1*=2(..-)uN#Vq92^f3"$o51'eYSAm:s(XG`hg"S3r%l3YI-,JC/phr,MR;Th_;-OoQhm*Mhe
%KRSYFP9cG^Df&QREkHaUHHd]tjR])ad&n>B:OWF8:bXWDBd(CK+^i*^'!+Abc%BTN#_'9C],>E<F]q'5"UL$]mR>O&5S+57j3;n?
%`;8EoQ-%%]?jqja?cZIsVudL0MYamm,!V/]+p#M'2'BE!nnfSI?@fQmb"36TbZ6Eq.SLZ*TYUfOjd./bZ*sCeD:\KpH?j%F&K:q,
%e".Q-oLb:cd&$eFmF,US<DRlQ*A0@78H3GDjCdtr%$g$b6G+S<c>eS,11b'`6$[E7_S%X0"#>gU0Gatm1G(D3QkI%uAm\a5.<_*N
%fEf,GRpZ_*J_R[>ROWj#0btQ08Id3oZ!i$"@8SC(PL;!nl!q4R>*K$m"#cHs]"sekTIAH!!Y1<2L^<\63Ig2?,m#?)'N4=`0,ke7
%NkimaDhlh/HmTFiHl5i^FAh%cP6)7@oD+VgBR4aRgBE`K[p`ij-Z<kArtS/gE[a@kc',cTQ3&>RS]k\E7R#R)^]jR3aCJ1\Y-gkS
%d#WciV6%,T]aOJ-@%&OSe5F'cqGAr*<47cZ0$oZ2Y,?;W>]PCE'XUgLpgLOkn=Vs%F:C:1:hV?:_L*aKH:kNL<n$FgbQkbZV[?S5
%q0!S:KAA:\q-6R(>aQ&qN1%g'=t8RLI'@7c<).A2N!o6nT$'C>ZrG&!q-_N];jg\3\1f#kKj;c8jbsT=_6.R!OPI9nEe&W;WY\Q&
%.s!hG*sGS9)6N8qJ:81`h+)QlTHAlHd4RO&d#UNEBGVa$kXQe/[L80%oV7MWg-s'bqGAYOg4dTMqG8lQCqCO05i30>CDS6,kXWJ1
%[u6CSoV5e0g1AA.qGG=ImBYdRr?u4LG$4BdIM?fl].A4m572\b7hN9s57.S#?'[UG%g>n<;YduV>U9pEX6YQU(bGnrTH==>UqgfC
%hu`j*QrFDr$Fi>c$<FlP4W,^,!rXNX5RQ3`m/m57jJWd"'QAVP'_4X!>-$]cr?r@F$JN#N!duJ!)O5o?=i:L?brRnJJsIm35X,U1
%O(`c'572"WBU"ea0$oZ2Q#2j6&*QM,PA?L2&*QM,Rr=W>&*QM,=(mpH&*QNWTRfSS[hNe44qoc@hC_GBcu8p8NHSIqJ:81@ZX&kZ
%TWa&X[EF^<oV2BjA",#p5X,T`P.&Jq#P=bk7W4bIGsFS$?rjbYOpCWS!/>ii/9sKF$ACgY/9sKF92'80k=SE&?2LcUJaqHsQTUo_
%"h:a1Q9:f^"j:_K,nK30+_.q'OpCWSONk/UOpCWS!7kbO/9sKF$=Ie\acZo$UAu'BRk/hM5FWK@c8JhrJ3FZf?u`WsOpCWSd'a)R
%6d&s'L'$cUkb]*GoX[u"NJ[u=b8&Uq3!&e4Uk8XD0r44p\ARs$?t?r6=TGYEe)\VYj9]7*M*(Z]q;GrGj7UZH3e1jeT>(6X!uUPb
%.9l^pGC0/bp@@P:a#D;=`lQD.r9tW9jDU1/Iig-"pQ74\+"?OMOimSc;VBqt.eig2jaSAO_J^F2^JeG97X_!17YRQ97ZF,A7[9\I
%7\-7Q1Sli'XX.HCCmo+r):^e$]/udZI:mJ`muFA[IdiuKm(7$@DOrusW<_>8r0@F8fs3@eP4ifHhif(!L%rZCc_%r,`Cli;ID#Ot
%J,\]=ZhJ<+9A,f;&qm`$#Qn^3V'<q:54!d1]-MWl4#?#++>&#Q]DM6:\N:=]aBI:.DVr3WoCgJ?4)((m'R9D,n)(j%oD5V8^Rf*7
%kjdYFkgbopla^g9H8V>@)EIAbOLIoSCe36dbr"0^"8=P\/V/*aaTgX_ZIf@u21]dn!cX#RrGZ]S)H+%:oh5PFc'Tb\.49<mhqU?o
%Ed@PRA1l_d^&3q\puTPWKW-o&iDTTuQ^b0$br>0rDa42Y5Y*'%^uT$KV\W215F\5]5l~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 190 x Fn(Fig)o(.)16 b(S1.)33 b Fm(Reacti)n(vity)20
b(results)e(from)e(CE)g(analysis)h(and)g(illumina-based)j(sequencing)
-152 3369 y(e)o(xperiments,)40 b(o)o(v)o(er)32 b(38)f(data)h(sets.)38
b(The)31 b(heatmap)i(presents)f(results)g(from)f(tw)o(o)-152
3452 y(methods)17 b(alternatingly)j(from)15 b(left)i(to)f(right;)i(CE)d
(analysis)i(results)g(are)f(presented)i(on)-152 3535
y(odd)i(numbered)g(x-positions)h(and)f(MySeq)g(results)g(are)g(sho)n
(wn)f(on)h(e)n(v)o(en)g(numbered)-152 3618 y(x-positions.)p
Black -152 3942 a Fl(S1)107 b(RECTIFICA)-7 b(TION)22
b(STEP)i(IN)f(THE)g(PREP)-8 b(ARA)h(TION)33 4042 y(OF)22
b(REFERENCE)i(B)n(AND)f(LOCA)-7 b(TION)-152 4158 y Fk(As)35
b(discussed)i(in)e(Section)g(3.1,)44 b(the)35 b(reference)h(band)h
(locations)f(were)-152 4250 y(prepared)c(by)e(manual)h(annotation)g
(follo)n(wed)g(by)f(the)h(recti\002cation)e(step)-152
4341 y(where)24 b(possible)f(human)h(errors)f(are)g(disco)o(v)o(ered)h
(and)g(corrected)f(through)-152 4432 y(a)j(comparison)i(between)e(tw)o
(o)g(separate)h(e)o(xperiments.)j(One)c(e)o(xample)h(of)-152
4524 y(such)35 b(process)g(is)f(well)g(illustrated)g(by)h(Figure)f(S1.)
41 b(V)l(isual)34 b(inspection)-152 4615 y(suggests)g(that)e(in)h(the)g
(rectangular)g(re)o(gion,)40 b(CE)32 b(analysis)h(and)g(MySeq)-152
4706 y(consistently)47 b(sho)n(w)g(the)f(highest)h(intensity)f(at)g
(residue)h(41)f(and)h(39)-152 4798 y(respecti)n(v)o(ely)-5
b(.)47 b(This)36 b(discrepanc)o(y)i(ga)o(v)o(e)f(us)g(an)g(inkling)g
(of)g(inaccurate)-152 4889 y(determination)19 b(of)f(band)h(locations)g
(around)g(the)g(corresponding)h(sequence)-152 4980 y(position,)f
(leading)h(to)f(recti\002cation)g(of)f(such)i(errors.)p
Black -152 5284 2018 5 v -152 5336 a Fj(\003)-116 5359
y Fm(T)-5 b(o)16 b(whom)h(correspondence)j(should)e(be)f(addressed)p
Black Black Black Black 2015 3189 a
 /PSfrag where{pop(r)[[0()0.5 0]]1 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 2015 3189 a @beginspecial
0 @llx 0 @lly 720 @urx 557 @ury 2420 @rwi @setspecial
%%BeginDocument: figures/result_hdv_result_detail2.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: result_hdv_result_detail2.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 8/22/2014
%%BoundingBox: 0 0 720 557
%%HiResBoundingBox: 0 0 719.8853 556.1680
%%CropBox: 0 0 719.8853 556.1680
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 100 8
%%BeginData: 12784 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD06FFA852FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8A8A8FD08FFA8A8A8FFFFFFA8FFFFA8A8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFA8A8FFFFFFA8FFA8A8A8FFFFFFA8FFA8A8A8FFFFFFA8
%FFFFFFA8FFFFFFA8A8FD17FFA9FD67FFA8FD04FFA8527DFFFFFFA8FD0BFF
%A8A8A8FD66FFA8A8FD04FF7DFD10FFA9A8A9FD66FFA8FD07FFFD04A8FD09
%FFA8FFA8FFA8FD31FFA9FD34FFA8A8FD04FF52A97D7D52FD0BFF7EFFA9A9
%A8FD2FFFA8A9FD34FFA8FD04FFA82652FFFFFFA8FD09FFA8A9A8FFA8A8A8
%FD2FFFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD04FFA8A8FD04FF207DFD10FFA9FFA8FD2FFFA9
%FD35FFA8FD04FFA87D7DFFFFFFA8FD09FF7EFFFFA9A9FFA9FD2FFFA8FD3A
%FF7DA8FD10FFA8FD2EFFA9A9FFA9A9A9FD33FFA8FD04FFA8277DFFA8A8A8
%FD05FFA8FFFFFFA8FFFFA9A8FFA9FD2BFF7EFFFFFFA8FD34FFA8A8FD04FF
%7DA8FFFF52A8FD0EFFA9FD2BFFA9A9FD04FFA9FD05FFA97EA8FD2BFFA8FD
%04FFA8277DFFFFFFA8FD09FFA8FD05FFA9FD2AFFA9A8FFA8A9A87EFD06FF
%7EA8FD2BFFA8A8FD04FFF87DFD0CFFA9A9FD30FFA8A9A9FFA8FFA8FD07FF
%A8FD2BFFA8FD04FFA82652FFFFFFA8FD09FFA8FD04FFA97EFD2BFFA8A9FD
%0AFFA8FFA9FD2AFFA9A8FD04FF52A8FD12FFA9FD2BFFA9FD05FFA9FD05FF
%A9FD2DFFA8FD04FFA8277DA87D7DA8FD09FFA9FD05FFA8A97EFD1BFFA8FD
%0DFFA9A9A8FFFFA9A8FD05FFA8FD2BFFA8A8FD07FFA8A8A8FD09FFA9FD07
%FF7E7EFD1BFFA9FD06FFA9FD05FFA9FFA8A9FFFFA8A9FD04FFA9FFA9FD2B
%FFA8FD04FF7D277DFFFFFFA8FD09FFA8FD05FFA8A9A8FD1BFF7EA9FD05FF
%A97EFFFFFFA8FFFFA97EFFFFFF7EFD07FFA8FD19FFA8FD10FFA8A8FFFFFF
%A8207DFD0CFFA9FD06FFA9A8FD1AFFA9A9FFA8FD06FFA9A8FD0AFFA9A8FF
%A9A9FFFFA9A9FD0AFFA8FD0DFFA9A9FD10FFA8FD04FFA8277DFFFFFFA8FD
%09FFA9FD05FFA8A9A9FD18FFA97EA9A9FD06FFA97EA9FFFFA8FFFFFFA8FF
%FFFFA8AFFFA87EFFFFFFA8FD07FF7EFFA9A8FD0CFFA8A9A8FD10FFA8A8FD
%04FF52A8FFFFA8FD09FFA9FD09FFA8FD17FF7EA9A8FFA9FD05FF7EFF84FD
%06FFA9FD04FFA8A9FFA97EFD07FFA8FFFFA984FFA9FD0DFF7EA9A9FFA9FD
%0DFFA8FD04FFA84B7DFFA87DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%A8A8A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA87E7EA9A8A9
%A8A9FFFFA8A9FFFFA8FF84FFA8FF7EFFA8FFFF847EFF7EA8A8FF7EFFA8FF
%7EA8A8FF7E7E7EA9FFFFA8FFFFFFA8FFFFFFA8FFFFA8A87E54A9A8FFFFFF
%A8FFFFFFA8FFFFFFA8A8A8FD04FF52A8FD16FFA9FD17FFA9A9A9FFA8A9A8
%FF7EA9FD05FFA9A9FD09FFA9FD04FFA9FFFF7E7E7EFFA884A8FF7EA9A8A9
%FD0AFF84FFA8A9FD0EFFA8FD05FF7DA8FFFFFFA8FD07FFA8A9FD20FFA9FF
%A8FFFFFF7EFFFF7E7EFFFFFFA8FFA9FD09FF7EA9FD04FFA8FFA8A8FFA9A8
%FFA8A9FFFF7E7EA8FD09FFA9A8A8FFA9FD0FFFAFFD04FF207DFD0CFFA8FD
%09FFA9FD0AFFA9FD0EFFA8FFFFA9A8FFA9FFFFFFA9A9FD0CFFA8FD04FFA9
%A8FD04FFA9A9FF84FFFFA9A8FD0FFFA9FD0DFFA8FD04FFA87DA8FFFFFFA8
%FD07FF7EFD0BFFA9FD08FFA97EFD0BFFA8FFA8A8FFFFA8A8A8FD05FFA8FF
%A8FD0FFFA87EA8FFFFFF54A8FFA9A9FF7EFFA9FD09FFA8FFFFFFA8FD0EFF
%A8A8FD04FF27FD04A8FD1DFF7EFD07FFA8FD07FFA9FFFFA9A8A9A8FD04FF
%A9A8FD11FF7EFD04FFA9A8FD15FFA8FD0DFFA8FD04FF7D277D7D527DA8FD
%07FFA8FD0AFFA9A8FD07FF7EA8A8FFFFFF7EFFFFA87EA9A9FFA8FD05FFA8
%A97EFD05FFA8A984FD0FFFA8A9A8FD0BFF7EA8FD08FFA8FFFFFFA87EA8FD
%0BFFA8A8A8FFFFFFA8F87DFFFFA8FD13FFA8FD05FFA8A9A8A984FFFFFFA8
%A9A9FFA9A97EFD09FFA9A9FD06FFA9FD11FFA9A9FD0BFFA9A9FF7EFD0BFF
%A8A9FD0CFFA8FD04FF7D527DFFFFFFA8FD07FFA8FD0BFFA8FFA8FFA8A97E
%A8A8FFFD04A9A8A9FFFFA8A9A8FFA8FD0DFFAFA9FD12FFA8FD0BFFA9A9A8
%A9FD04FF7EA87EFD05FF7EFD0CFFA9A8FD04FF7DFD19FFA8A97E7E7EFFA8
%A9FFFF7EA9A8A9A9FFA9FFA8A9A8FD0FFFA9FD1FFFA8FFA8A9A9FFFFA9A8
%A9FD04FFA9A9A8FD0BFFA8FD0AFFA8FD07FFA8FD0BFF7EA9A8A8A8FFA8A9
%A8FFFFFF7EA9A8FF7EA97E84A87EA8FD0DFFA8A9FD20FF84847EA85A7E7E
%A9FD06FF7E7EA8FD0BFFA8FD07FFA852A8A8FFA8FFA8FF7EA8A8FFA8FFA8
%FFA8FFA8FFFD04A87EFFA8A9A8A8A8FFA8A97EA97E7EA8A8A8A97EA8A8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FF7E7E7EA87EFF7EA87EFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A8A8FD08FFA8A8A8FFA8FFA8FFA8A8A8FFA8FF
%A8FFA8FFA87DA8FFA8FFA8A97DA8A8FFA8FFA8FF7D7DA8FFA8FFA8FF7DA8
%A8FFA8FFA8FF7D7DA8FFA8FFA8A87DFFA8FFA8FFA8A87D7DA8FFA8FFA8A8
%7DA8A8FFA8FFA8A87DA8A8FFA8FF7D7D7EA9A8FFA8A87D7DA8FFA8FFA8FF
%7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FD12FFA8FD08FFA852FD06FF7D52FD
%06FF5227FD06FF527DFD06FFA852FD05FFA87DFD06FFA87D27FD05FFA852
%52FD05FF52527DFD04FF7D527DFD04FFA87D52A8FD05FF7D52A8FD4CFF52
%52A87D7D7DA8A8A8277DA8FD07FFAFFD6CFF7D7D27525252277DA85227A8
%FD77FFA8FFA8FFA8FFFFFFA8FDB7FF277D7DA87DA87D7DFD04FFA8FFAFFF
%A8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A8FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA8FFA8FFA9FFA8FFA9FFA8FF
%A9FFA8FFA9FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8A8527DA87DFD04
%A8FFA8FFA8FFA8A87EA87EA87EA87EA87DA87EA87EA87EA87DA87EA87DA8
%7EA87DA8A87E7DA87EA87DA87E7E7EA87E7E7DA87DA87DFD047EA8A87E7D
%A8A8847DA87E7E7D84A8A87DA87EA87EA87EA87DA87E847DA87EA87D7E7E
%A87EA87EA87DA87E847DA87E7E7DFFA8FFA8FFA8FFA8FFA8A97DFD0AFFA8
%FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD0CFFA8A8FD12FFA8FFFFFFA8FFA8FFA8FFA8FF
%FFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8A8A8FD0BFFA8FD
%0AFFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FD0CFFA8A8FD12FFA8FFA8FD05FFA8FD05
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD0BFFA8FD0A
%FFA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFFFFFA8FD0CFFA9A8FFFFA8A8A8FFFFFFA8FD07FFFD
%0DA8FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFFD05A8A9FD09A8
%FFFD1FA8FFA8FFA8FFA8FFA8FFFD07A8FFA8FD0BFFA8FFFFFFA8F827527D
%277DA8FD06FF7DFD0527515227272752522752272727522752FD05275227
%522752FD042726FD04275227272027272720272727F82726272027202727
%27F827262727272627272720272027272720272027275227272752FD0C27
%7EFD12FFA8FD0BFFA8A9A8A8A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFFD05A8FFA8FFFFFFA8FFA8FFA8A9A8FFA8FFA8FFA8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8A9FD0F
%A8FD0BFFA8FD0AFFA8FD09FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8A8FD16FFA8
%FFA8FD09FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD09
%FFA8FD0AFFA8FD0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8A9A8FFA8A9A8FFA8A8A8FD06FFA8A8FD18FFA8FFA8FF
%A8FFFFFFAFFFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FD05FFA8FD04FFA87DA8A87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%FD07A8FFA8FFA8FFA8A8A8FFA8CAA8FFA8A8A8FFA8A8A8FFA8CFA8CFA8FF
%FD05A8FFA8A8A8FFFD0BA8FFA8A8A8CFFD0BA8FFA8A8A8FFFD17A8FFA8FF
%A8A8A8FD04FF5276767DA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CAA8A7
%A1A8A1A8A1CAA7A7A1CAA7A8A1A8A1A8A1A7A1CAA1CAA7A8A1A7A1A7A7CA
%A1A7A1A7A1A8A1CAA1A7A7CAA1A7A1A7A1A7A1A8A7A7A1A8A1A8A1CAA7A7
%A1CAA1A7A1A8A1A8A1A7A1A8A1CAA7A8A1A7A7A8A1A8A1A7A1CAA1A7A1A8
%A1A8A1A8A1CAA8FFA8FD06FFA8FFFFA852FD07FFA87D525252FD06FFA827
%5227A7CFFFFFFFCFFF7D52527DA8FFCAFFFFFFCF52275252FFFFFFCFFFFF
%A8275227A8FD04FFCFFFFD0452A8FFCFFFFFFFCF7D275252FD06FF7DF852
%27A8CAFFFFFFCAFF7D7D5252A8FFCFFFFFFFA87D4B5227A8FFFFCAFFFF7D
%5252274BFD07FFA8A8FD08FFA8A87DA8FD06FFA87D7DA8A8FD06FFA8A8A8
%7DFD07FF7DA884A8FD06FFA87D7DA8A8FD07FFA8A87DFD07FFA8A87DA8FD
%06FFA87D7DA8A8FD06FFA8A8A87DFD07FFFD05A8FD05FFA8A87DA87DFD3D
%FFA8A8FFA8A8A8FFFFA87DFD76FF525227524B52527D842727FD74FFFD04
%A87DA87DA8A8FF7D7DA8FD1DFFA8FD0FFFA8FD20FFA8FD09FF52A8FD07FF
%7D52FD07FF527DFD06FFA87DA8FD07FF527DFD05FFA8527DFD05FFA87D7D
%A8FD05FF5227A8FD05FF527D52FD05FF52527DFD05FF7D274BFD0EFFA852
%FD0FA87D7DA9FD06A87D7D7DFD07A87D52FD07A87D52FD07A87DFD07A87D
%5259FD05A87D7D7DFD05A87D7D52FD06A87D277DFD05A87D527DFD05A87D
%527DFD05A87D277DFD06A8FD09FF7DFD0FFFA8FD65FFA8FD04FFA8A87DFF
%FFFFA8FD11FFCAFD63FFAFFD04FF7DFD15FFCAC2C9FD61FFA8FD04FFA87D
%A8FFA87DA8FD05FFA8FD0BFFA8CFFD61FFA8A8FD08FF7DA8FD10FFCAFFC9
%CAFD5CFFCACFFFFFA8FD04FFA87DA8FFFFFFA8FD0FFFCACAFFCACAFD5CFF
%C9A7FFFFA8A8FFFFFFA8F87DFD13FFCAC3FFC9CACFFD55FFCACFFFCAFFCF
%C9FFFFFFA8FD04FFA82652FFA8A8A8FD0FFFA8FFCACAA1C9FD3AFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA7FFCAC39AC9A0C3A0
%CAFFFFFFA8A8FD04FF52A8FFA852FD0FFFC9FD05FFC9FD49FFCAFFFFFFCA
%FD04FFC9C3C2C9CFC9FFA1CAFD04FFA8FD04FFA8A87DFFFFFFA8FD0EFFCA
%CAFD04FFCACAFD38FFCAA0CAA0CAFD0BFFC9CAFFFFC9A1FFCAC9A7C9C9CF
%FD0AFFAFFD04FF207DFD18FFCAFD37FFA0C9C9C99AC3C3FD05FFCAFFFFFF
%CAC9C3FFCAC3C9C9A0C9C2FD0DFFA8FD04FFA87DA8FFA8A8A8FD15FFA8FD
%27FFA8FD0DFFA7C9A0C9FFFFFFCACAFFFFFFA7C2A8CAA1C9A7CAA1CAA0CF
%FFCAA7FD0EFFA8A8FD04FF27A8FFA852A8FD16FFCFFFCAFD23FFA1C2C3FD
%0BFFCACAFD0AFFC3C9CACFC2CACAFFFFCAA0FD13FFA8FD04FFA8277DFFFF
%FFA8FD15FFCACAC9C9FD22FFA1C2CAC9CAFFA8FFFFFFA0C2A0CACAC3C9FD
%07FFA1C9A1C9CAFFA1CFC9CFFFFFCACAFD13FFA8A8FD04FFF87DFD19FFC9
%C9CACAFD20FFCFCACFFFFFCACAC3C2CFFFCAC9C9CAC2C3C3FD08FFCFC2C3
%FFFFFFCAFFCFFD18FFA8FD04FFA8527DFFFFFFA8FD15FFCACAA8CFFD20FF
%A1C9A7FFFFFFA1C9A1CAA7C3FD04FFCAFD2BFFA8FD04FF52A8FFA87DFD19
%FFCFFD19FFCAFD05FFCAC9A1FD04FFCFCFFFA0C9CAFD2FFFA8FD04FFA852
%7DFFA8FFA8FD19FFCAFD18FFCAA0FD04FFC9CACAFD04FFA1CFFFCAA7FD30
%FFA8FD04FFA852A8FD1CFFCACAFD16FFA1CFCACACFFFC3C9A0FD3BFFA8FD
%04FFA8277DFFFFFFA8FD18FFCFA7FD15FFCAC2A0C9A7CAFFC9A0FD3CFFA8
%A8FD04FF207DFFA852FD1AFFCFFD15FFCAC9CFCAFFCAFD3FFFA8FD04FFA8
%52A8FFA8A8A8FD19FFA1FD05FFCACAFD0EFFCACAA7FFFFC9A8FD3DFFA8A8
%A8FD04FF27A8FD20FFCACFC9CFC3FD0DFFC9CAFD05FFC9CAFD3DFFA8FD04
%FFA87D7DFFFFFFA8FD19FFCAFFFFCAA7CAA1C9CAFD09FFCAFFA1C9CAFD05
%FFCAFD3FFFA8FD04FF52A8FFFF7DFD1BFFCACAC9CAC9CAFFFFCFFD07FFC9
%C9C2C3CAFD45FFA8FD04FFA82652FFA852A8FD19FFCAC39ACAFFFFCAFFCA
%C99ACAFFCAA0CFCAC9A8CACAFD45FFA8A8FD05FF277DFD1EFFCAFD07FFCF
%CAA0CFC9CACAFFC9CAFD48FFA8FD04FFA8527DFFFFFFA8FD21FFA1CAFFCA
%A1CAFFFFCACFA7FD48FFA8A8FFFFFFA8207DFFA8A8FD21FFCFC9CAFD05FF
%C9CAFD4AFFA8FD04FF7D277DFF527DA8FD21FFCAFD06FFC9A7FD49FFA8A8
%A8FFFFFFA827A8FFFFA8FD75FFA8FD04FFA87DA8FFFFFFA8FD75FFA8FD7E
%FFA8FD08FF7D7D7DFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD07A8FFFD07A8FF
%FD07A8FFFD07A8A9FD07A8A9FD07A8A9FD07A8A9FD07A8A9FD04A8FD08FF
%A8A8FFA8FDF5FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-08-22T17:08:23+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9N6zrdho9oLu+9b0WdYl&#xA;Fvbz3Tl3+yBHbpLJudvs9dsVQOraVpnm7RIYpXuIbRporhaxGCblby8gGjuouafEndAfA98VXaRp&#xA;FtLpdpPJNdvLNDHJIxvLrdmQEn+9269BiqJk0O2MbBJrpHIIVvrd0aGlAaepiq79C2f+/Lr/AKS7&#xA;r/qpiqDtU0O6mlghublpIpGhZfrlzu6CrU/e9u+TljIFlFopNDtgzlprpgxBQfW7rYBQKf3njU5B&#xA;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&#xA;a+jE0KqsZc7hpJiSTIe+Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -556.168 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 556.168 li
719.885 556.168 li
719.885 0 li
cp
clp
46.252 196.34 mo
46.252 4.92334 li
705.918 4.92334 li
705.918 196.34 li
46.252 196.34 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
46.252 196.34 mo
46.252 4.92334 li
705.918 4.92334 li
705.918 196.34 li
46.252 196.34 li
@
.333333 lw
[.5 4 ] 0 dsh
705.918 4.92334 mo
705.918 4.92334 li
46.252 4.92334 mo
705.918 4.92334 li
705.918 36.7568 mo
705.918 36.7568 li
46.252 36.7568 mo
705.918 36.7568 li
705.918 68.6733 mo
705.918 68.6733 li
46.252 68.6733 mo
705.918 68.6733 li
705.918 100.59 mo
705.918 100.59 li
46.252 100.59 mo
705.918 100.59 li
705.918 132.507 mo
705.918 132.507 li
46.252 132.507 mo
705.918 132.507 li
705.918 164.423 mo
705.918 164.423 li
46.252 164.423 mo
705.918 164.423 li
705.918 196.34 mo
705.918 196.34 li
46.252 196.34 mo
705.918 196.34 li
0 0 0 1 cmyk
@
.5 lw
[] 0 dsh
89.002 4.92334 mo
89.002 11.5068 li
89.002 196.34 mo
89.002 189.673 li
46.252 196.34 mo
46.252 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 196.34 mo
46.252 4.92334 li
705.918 196.34 mo
705.918 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 4.92334 mo
705.918 4.92334 li
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PWFKSB+Helvetica /Helvetica findfont ct_VMDictPut
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one 206{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
86.25 208.426 mo
(1)sh
141.169 4.92334 mo
141.169 11.5068 li
141.169 196.34 mo
141.169 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one 4{/.notdef}rp /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
135.664 208.426 mo
(16)
[5.56006 0 ]xsh
186.919 4.92334 mo
186.919 11.5068 li
186.919 196.34 mo
186.919 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32A47D2AAF8B27A6BD3F3BCF7FF319EB739C72B00D
2CC4607F53D8DAA36825DF613C6C839053BC26A7859D8AA158786D28D1E4DE04
046CE941E5159199A77FA8129F02A3ECB8D9E54C278D22D0348DFB3C3C73F558
86BF824DB1B2BE764C084A332EAF6E03DAE2729DE4723D54D14DE5E36772632D
9593B8015D82D91A7513CF83AED18BF899FB582C1516AE5C3CE963C7A9224066
B2CB5D769E52069DB2172C52452A135E45CF579C1E7FB12BEA387FFB8E1E9EB9
0D4F6BF80D4DDA346E7141D8646431020D523BDB64> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three 2{/.notdef}rp /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
181.414 208.426 mo
(31)
[5.56006 0 ]xsh
230.669 4.92334 mo
230.669 11.5068 li
230.669 196.34 mo
230.669 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF325730A29F6E3A8E85E687770EE1E27F87CEA844D18
4B0E9BD502658E879E1F9BDDE8AE7D0C023ADEB8AD1E21CDA97313F844BB17B9
F9FCD84B1053ECDC8FF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six 201{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
225.164 208.426 mo
(46)
[5.56006 0 ]xsh
274.419 4.92334 mo
274.419 11.5068 li
274.419 196.34 mo
274.419 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
268.922 208.426 mo
(61)
[5.56006 0 ]xsh
321.252 4.92334 mo
321.252 11.5068 li
321.252 196.34 mo
321.252 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven <1C60D8A8C9B7EF325730A290D76D77983E96EE242ACEAA131574F93B
B3E9D36E6F4086FF3DB329E48A38DC1C36E41D469A4D1B83FEF82A3668> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 55 /seven put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six /seven 
200{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
315.75 208.426 mo
(76)
[5.56006 0 ]xsh
361.752 4.92334 mo
361.752 11.5068 li
361.752 196.34 mo
361.752 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine <1C60D8A8C9B7EF32A4731A9DB70B9490730918F3CC8A6CEFA5DBCDDDD
5B8FF631E5F2E3BEA7592C5DB8D17DFB2B2E4B0DAC725198BC39F2911D25DCD4
3EC8F7F509D2A326D2C0725149B8BE60F05AAA125797CC4820A7DA7D1C0D4C75
51B0568D049B61E397212F1F645896D5538A3CC2354092A21562A36F8CBFBCDB
29F3C22EE7704AEF405504D83FFD0CBE4861F9ADE2B264F64EA7F79AD12731F7
D0F425F88BA586942BE2189ACE567A86FE749EFE5BB706E4B2115> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 57 /nine put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[49{/.notdef}rp /one /.notdef /three /four /.notdef /six /seven 
/.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
356.25 208.426 mo
(91)
[5.55957 0 ]xsh
410.086 4.92334 mo
410.086 11.5068 li
410.086 196.34 mo
410.086 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /.notdef /three /four /.notdef /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
401.75 208.426 mo
(106)
[5.55957 5.56055 0 ]xsh
454.168 4.92334 mo
454.168 11.5068 li
454.168 196.34 mo
454.168 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /.notdef /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
445.836 208.426 mo
(121)
[5.55957 5.56055 0 ]xsh
495.752 4.92334 mo
495.752 11.5068 li
495.752 196.34 mo
495.752 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
487.422 208.426 mo
(136)
[5.55957 5.56055 0 ]xsh
538.002 4.92334 mo
538.002 11.5068 li
538.002 196.34 mo
538.002 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /.notdef /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
529.672 208.426 mo
(151)
[5.55957 5.56055 0 ]xsh
579.668 4.92334 mo
579.668 11.5068 li
579.668 196.34 mo
579.668 189.673 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
571.328 208.426 mo
(166)
[5.55957 5.56055 0 ]xsh
625.418 4.92334 mo
625.418 11.5068 li
625.418 196.34 mo
625.418 189.673 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF32A47D2AAF8C15BC9A859DEE4113CDE5C7D8BB37BC
632A2AFDD9E1D59E819868DA3B47FA265DB8E729BBC4B74D62996C8CD7000A22
83A23B9E90032D8BA762FC6930C943ACBD9924E3BB182B1447A1E2AF18A8F5C4
FF7E73B671B89EC1964BF90DA6A7AA5C360A10E2B9F34D2BE8C7C673C6A88180
4538AD6230812FB8978313B4BDE98D895F422138708DE46BC5394FB88DD33D90
C210817A05295D4CBA95598D78DA62CFD2497E0D80160F3DA900E68CEC3A30A5
1069510330F600555F89415B16F55B2952535C067AEC9D27A114154239F343BD
ECEE543D835ACB4FF5860A143BC179> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
617.086 208.426 mo
(181)
[5.55957 5.56055 0 ]xsh
705.918 196.34 mo
699.252 196.34 li
46.252 196.34 mo
52.8354 196.34 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 200.004 mo
(0)sh
705.918 164.423 mo
699.252 164.423 li
46.252 164.423 mo
52.8354 164.423 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D088E8E1B4A929D159FDB35EBB0A92B2CB5440> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/five /six /seven /eight /nine 198{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 168.09 mo
(0.)
[5.56006 0 ]xsh
37.8438 168.09 mo
(5)sh
705.918 132.507 mo
699.252 132.507 li
46.252 132.507 mo
52.8354 132.507 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 136.168 mo
(1)sh
705.918 100.59 mo
699.252 100.59 li
46.252 100.59 mo
52.8354 100.59 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 104.254 mo
(1.)
[5.56006 0 ]xsh
37.8438 104.254 mo
(5)sh
705.918 68.6733 mo
699.252 68.6733 li
46.252 68.6733 mo
52.8354 68.6733 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 72.3398 mo
(2)sh
705.918 36.7568 mo
699.252 36.7568 li
46.252 36.7568 mo
52.8354 36.7568 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
29.5 40.4258 mo
(2.)
[5.56006 0 ]xsh
37.8438 40.4258 mo
(5)sh
705.918 4.92334 mo
699.252 4.92334 li
46.252 4.92334 mo
52.8354 4.92334 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 8.58984 mo
(3)sh
46.252 196.34 mo
46.252 4.92334 li
705.918 196.34 mo
705.918 4.92334 li
46.252 196.34 mo
705.918 196.34 li
46.252 4.92334 mo
705.918 4.92334 li
@
gsave
46.252 196.423 mo
706.002 196.423 li
706.002 4.92334 li
46.252 4.92334 li
46.252 196.423 li
cp
clp
89.002 195.34 mo
94.0854 154.34 li
97.252 146.007 li
102.335 83.0898 li
104.585 53.0898 li
107.585 34.7568 li
110.669 40.0898 li
115.752 25.4233 li
118.835 18.9233 li
121.835 61.2568 li
126.919 22.7568 li
130.002 40.0068 li
133.002 46.7568 li
136.002 89.0898 li
138.169 113.84 li
141.169 119.257 li
144.252 100.923 li
147.335 106.34 li
150.419 99.8398 li
153.419 129.007 li
156.502 170.09 li
159.585 187.34 li
162.585 192.757 li
165.752 183.84 li
168.835 179.757 li
171.919 194.507 li
175.002 180.84 li
177.919 195.84 li
180.919 185.673 li
183.919 181.257 li
186.919 183.507 li
189.919 172.34 li
192.002 194.007 li
195.002 176.173 li
198.002 171.757 li
201.002 191.923 li
204.002 182.923 li
206.085 168.007 li
209.085 159.09 li
211.169 170.923 li
213.335 157.257 li
216.419 149.59 li
221.502 182.84 li
224.585 183.923 li
227.585 184.923 li
230.668 192.59 li
232.752 171.757 li
235.752 182.84 li
238.752 194.007 li
240.835 165.673 li
245.585 194.173 li
248.668 193.257 li
251.752 192.257 li
254.752 187.923 li
257.835 162.09 li
260.002 170.09 li
263.085 190.09 li
266.085 188.173 li
268.252 167.84 li
271.335 180.257 li
274.418 186.007 li
277.418 194.173 li
279.585 184.757 li
282.585 195.84 li
287.502 129.923 li
290.502 121.09 li
293.502 135.423 li
296.585 116.34 li
298.752 156.673 li
301.835 129.673 li
306.918 100.09 li
310.085 113.09 li
313.168 134.09 li
316.168 143.007 li
318.252 164.59 li
321.252 134.507 li
323.335 155.09 li
326.335 170.673 li
329.335 159.59 li
332.335 161.84 li
335.335 137.34 li
337.418 145.59 li
340.418 141.173 li
343.418 130.007 li
346.418 125.257 li
349.418 107.507 li
351.502 122.423 li
354.502 111.257 li
356.585 119.507 li
359.668 127.173 li
361.752 148.757 li
364.834 163.09 li
367.002 190.09 li
372.084 167.173 li
375.168 134.757 li
380.252 78.4233 li
383.252 67.3398 li
386.334 61.5898 li
388.418 83.2568 li
391.418 98.8398 li
393.502 107.09 li
395.668 134.09 li
400.752 77.7568 li
405.834 34.8398 li
407.918 57.7568 li
410.084 78.0898 li
413.002 74.9233 li
415.002 97.8398 li
417.084 107.34 li
420.002 117.59 li
422.918 114.423 li
425.918 131.34 li
428.834 128.173 li
430.918 143.173 li
433.918 145.423 li
436.918 120.923 li
439.918 116.507 li
443.002 130.757 li
446.002 127.757 li
451.084 71.4233 li
454.168 72.4233 li
456.334 72.6733 li
459.418 80.3398 li
461.584 114.007 li
463.752 134.34 li
465.918 147.923 li
468.002 162.923 li
471.002 151.757 li
474.002 174.09 li
478.502 144.007 li
481.502 139.59 li
484.502 135.173 li
487.502 136.09 li
490.668 129.09 li
493.584 139.34 li
495.752 152.923 li
498.834 155.59 li
501.834 156.507 li
504.918 137.423 li
508.002 118.34 li
510.168 138.673 li
513.168 126.257 li
515.418 152.007 li
518.502 131.59 li
521.668 131.257 li
524.752 117.59 li
527.834 138.59 li
529.918 140.173 li
532.002 155.09 li
535.002 144.007 li
538.002 146.257 li
541.002 135.09 li
543.084 170.09 li
546.084 165.673 li
549.084 181.257 li
551.252 196.173 li
553.334 191.09 li
556.334 192.59 li
558.418 171.007 li
561.418 192.757 li
564.502 185.173 li
567.502 184.173 li
570.584 196.007 li
573.668 189.007 li
576.668 186.757 li
579.668 188.09 li
582.668 195.757 li
585.752 189.257 li
588.834 177.59 li
591.834 191.923 li
594.918 179.507 li
598.002 180.423 li
603.084 124.173 li
606.084 143.423 li
609.168 114.007 li
611.334 127.59 li
614.334 136.59 li
617.334 132.09 li
620.334 134.34 li
623.334 129.923 li
625.418 164.923 li
628.418 164.173 li
630.502 185.757 li
633.502 174.673 li
635.584 189.59 li
637.668 184.507 li
640.668 186.673 li
.923522 .746761 0 0 cmyk
@
grestore
0 lj
637.252 188.673 mo
644.086 188.673 li
640.668 182.757 li
637.252 188.673 li
637.252 188.673 li
cp
634.252 186.507 mo
641.086 186.507 li
637.668 180.59 li
634.252 186.507 li
634.252 186.507 li
cp
632.168 191.59 mo
639.002 191.59 li
635.586 185.673 li
632.168 191.59 li
632.168 191.59 li
cp
630.086 176.673 mo
636.918 176.673 li
633.502 170.757 li
630.086 176.673 li
630.086 176.673 li
cp
627.086 187.757 mo
633.918 187.757 li
630.502 181.84 li
627.086 187.757 li
627.086 187.757 li
cp
625.002 166.173 mo
631.836 166.173 li
628.418 160.257 li
625.002 166.173 li
625.002 166.173 li
cp
622.002 166.923 mo
628.836 166.923 li
625.418 161.007 li
622.002 166.923 li
622.002 166.923 li
cp
619.918 131.923 mo
626.752 131.923 li
623.336 126.007 li
619.918 131.923 li
619.918 131.923 li
cp
616.918 136.34 mo
623.752 136.34 li
620.336 130.423 li
616.918 136.34 li
616.918 136.34 li
cp
613.918 134.09 mo
620.752 134.09 li
617.336 128.173 li
613.918 134.09 li
613.918 134.09 li
cp
610.918 138.59 mo
617.752 138.59 li
614.336 132.673 li
610.918 138.59 li
610.918 138.59 li
cp
607.918 129.59 mo
614.752 129.59 li
611.336 123.673 li
607.918 129.59 li
607.918 129.59 li
cp
605.752 116.007 mo
612.586 116.007 li
609.168 110.09 li
605.752 116.007 li
605.752 116.007 li
cp
602.668 145.423 mo
609.502 145.423 li
606.086 139.507 li
602.668 145.423 li
602.668 145.423 li
cp
599.668 126.173 mo
606.502 126.173 li
603.086 120.257 li
599.668 126.173 li
599.668 126.173 li
cp
594.586 182.423 mo
601.418 182.423 li
598.002 176.507 li
594.586 182.423 li
594.586 182.423 li
cp
591.502 181.507 mo
598.336 181.507 li
594.918 175.59 li
591.502 181.507 li
591.502 181.507 li
cp
588.418 193.923 mo
595.252 193.923 li
591.836 188.007 li
588.418 193.923 li
588.418 193.923 li
cp
585.418 179.59 mo
592.252 179.59 li
588.836 173.673 li
585.418 179.59 li
585.418 179.59 li
cp
582.336 191.257 mo
589.168 191.257 li
585.752 185.34 li
582.336 191.257 li
582.336 191.257 li
cp
579.252 197.757 mo
586.086 197.757 li
582.668 191.84 li
579.252 197.757 li
579.252 197.757 li
cp
576.252 190.09 mo
583.086 190.09 li
579.668 184.173 li
576.252 190.09 li
576.252 190.09 li
cp
573.252 188.757 mo
580.086 188.757 li
576.668 182.84 li
573.252 188.757 li
573.252 188.757 li
cp
570.252 191.007 mo
577.086 191.007 li
573.668 185.09 li
570.252 191.007 li
570.252 191.007 li
cp
567.168 198.007 mo
574.002 198.007 li
570.586 192.09 li
567.168 198.007 li
567.168 198.007 li
cp
564.086 186.173 mo
570.918 186.173 li
567.502 180.257 li
564.086 186.173 li
564.086 186.173 li
cp
561.086 187.173 mo
567.918 187.173 li
564.502 181.257 li
561.086 187.173 li
561.086 187.173 li
cp
558.002 194.757 mo
564.836 194.757 li
561.418 188.84 li
558.002 194.757 li
558.002 194.757 li
cp
555.002 173.007 mo
561.836 173.007 li
558.418 167.09 li
555.002 173.007 li
555.002 173.007 li
cp
552.918 194.59 mo
559.752 194.59 li
556.336 188.673 li
552.918 194.59 li
552.918 194.59 li
cp
549.918 193.09 mo
556.752 193.09 li
553.336 187.173 li
549.918 193.09 li
549.918 193.09 li
cp
547.836 198.173 mo
554.668 198.173 li
551.252 192.257 li
547.836 198.173 li
547.836 198.173 li
cp
545.668 183.257 mo
552.502 183.257 li
549.086 177.34 li
545.668 183.257 li
545.668 183.257 li
cp
542.668 167.673 mo
549.502 167.673 li
546.086 161.757 li
542.668 167.673 li
542.668 167.673 li
cp
539.668 172.09 mo
546.502 172.09 li
543.086 166.173 li
539.668 172.09 li
539.668 172.09 li
cp
537.586 137.09 mo
544.418 137.09 li
541.002 131.173 li
537.586 137.09 li
537.586 137.09 li
cp
534.586 148.257 mo
541.418 148.257 li
538.002 142.34 li
534.586 148.257 li
534.586 148.257 li
cp
531.586 146.007 mo
538.418 146.007 li
535.002 140.09 li
531.586 146.007 li
531.586 146.007 li
cp
528.586 157.09 mo
535.418 157.09 li
532.002 151.173 li
528.586 157.09 li
528.586 157.09 li
cp
526.502 142.173 mo
533.336 142.173 li
529.918 136.257 li
526.502 142.173 li
526.502 142.173 li
cp
524.418 140.59 mo
531.252 140.59 li
527.836 134.673 li
524.418 140.59 li
524.418 140.59 li
cp
521.336 119.59 mo
528.168 119.59 li
524.752 113.673 li
521.336 119.59 li
521.336 119.59 li
cp
518.252 133.257 mo
525.086 133.257 li
521.668 127.34 li
518.252 133.257 li
518.252 133.257 li
cp
515.086 133.59 mo
521.918 133.59 li
518.502 127.673 li
515.086 133.59 li
515.086 133.59 li
cp
512.002 154.007 mo
518.836 154.007 li
515.418 148.09 li
512.002 154.007 li
512.002 154.007 li
cp
509.752 128.257 mo
516.586 128.257 li
513.168 122.34 li
509.752 128.257 li
509.752 128.257 li
cp
506.752 140.673 mo
513.586 140.673 li
510.168 134.757 li
506.752 140.673 li
506.752 140.673 li
cp
504.586 120.34 mo
511.418 120.34 li
508.002 114.423 li
504.586 120.34 li
504.586 120.34 li
cp
501.502 139.423 mo
508.336 139.423 li
504.918 133.507 li
501.502 139.423 li
501.502 139.423 li
cp
498.418 158.507 mo
505.252 158.507 li
501.836 152.59 li
498.418 158.507 li
498.418 158.507 li
cp
495.418 157.59 mo
502.252 157.59 li
498.836 151.673 li
495.418 157.59 li
495.418 157.59 li
cp
492.336 154.923 mo
499.168 154.923 li
495.752 149.007 li
492.336 154.923 li
492.336 154.923 li
cp
490.168 141.34 mo
497.002 141.34 li
493.586 135.423 li
490.168 141.34 li
490.168 141.34 li
cp
487.252 131.09 mo
494.086 131.09 li
490.668 125.173 li
487.252 131.09 li
487.252 131.09 li
cp
484.086 138.09 mo
490.918 138.09 li
487.502 132.173 li
484.086 138.09 li
484.086 138.09 li
cp
481.086 137.173 mo
487.918 137.173 li
484.502 131.257 li
481.086 137.173 li
481.086 137.173 li
cp
478.086 141.59 mo
484.918 141.59 li
481.502 135.673 li
478.086 141.59 li
478.086 141.59 li
cp
475.086 146.007 mo
481.918 146.007 li
478.502 140.09 li
475.086 146.007 li
475.086 146.007 li
cp
470.586 176.09 mo
477.418 176.09 li
474.002 170.173 li
470.586 176.09 li
470.586 176.09 li
cp
467.586 153.757 mo
474.418 153.757 li
471.002 147.84 li
467.586 153.757 li
467.586 153.757 li
cp
464.586 164.923 mo
471.418 164.923 li
468.002 159.007 li
464.586 164.923 li
464.586 164.923 li
cp
462.502 149.923 mo
469.336 149.923 li
465.918 144.007 li
462.502 149.923 li
462.502 149.923 li
cp
460.336 136.34 mo
467.168 136.34 li
463.752 130.423 li
460.336 136.34 li
460.336 136.34 li
cp
458.168 116.007 mo
465.002 116.007 li
461.586 110.09 li
458.168 116.007 li
458.168 116.007 li
cp
456.002 82.3398 mo
462.836 82.3398 li
459.418 76.4233 li
456.002 82.3398 li
456.002 82.3398 li
cp
452.918 74.6733 mo
459.752 74.6733 li
456.336 68.7568 li
452.918 74.6733 li
452.918 74.6733 li
cp
450.752 74.4233 mo
457.586 74.4233 li
454.168 68.5068 li
450.752 74.4233 li
450.752 74.4233 li
cp
447.668 73.4233 mo
454.502 73.4233 li
451.086 67.5068 li
447.668 73.4233 li
447.668 73.4233 li
cp
442.586 129.757 mo
449.418 129.757 li
446.002 123.84 li
442.586 129.757 li
442.586 129.757 li
cp
439.586 132.757 mo
446.418 132.757 li
443.002 126.84 li
439.586 132.757 li
439.586 132.757 li
cp
436.502 118.507 mo
443.336 118.507 li
439.918 112.59 li
436.502 118.507 li
436.502 118.507 li
cp
433.502 122.923 mo
440.336 122.923 li
436.918 117.007 li
433.502 122.923 li
433.502 122.923 li
cp
430.502 147.423 mo
437.336 147.423 li
433.918 141.507 li
430.502 147.423 li
430.502 147.423 li
cp
427.502 145.173 mo
434.336 145.173 li
430.918 139.257 li
427.502 145.173 li
427.502 145.173 li
cp
425.418 130.173 mo
432.252 130.173 li
428.836 124.257 li
425.418 130.173 li
425.418 130.173 li
cp
422.502 133.34 mo
429.336 133.34 li
425.918 127.423 li
422.502 133.34 li
422.502 133.34 li
cp
419.502 116.423 mo
426.336 116.423 li
422.918 110.507 li
419.502 116.423 li
419.502 116.423 li
cp
416.586 119.59 mo
423.418 119.59 li
420.002 113.673 li
416.586 119.59 li
416.586 119.59 li
cp
413.668 109.34 mo
420.502 109.34 li
417.086 103.423 li
413.668 109.34 li
413.668 109.34 li
cp
411.586 99.8398 mo
418.418 99.8398 li
415.002 93.9233 li
411.586 99.8398 li
411.586 99.8398 li
cp
409.586 76.9233 mo
416.418 76.9233 li
413.002 71.0068 li
409.586 76.9233 li
409.586 76.9233 li
cp
406.668 80.0898 mo
413.502 80.0898 li
410.086 74.1733 li
406.668 80.0898 li
406.668 80.0898 li
cp
404.502 59.7568 mo
411.336 59.7568 li
407.918 53.8398 li
404.502 59.7568 li
404.502 59.7568 li
cp
402.418 36.8398 mo
409.252 36.8398 li
405.836 30.9233 li
402.418 36.8398 li
402.418 36.8398 li
cp
397.336 79.7568 mo
404.168 79.7568 li
400.752 73.8398 li
397.336 79.7568 li
397.336 79.7568 li
cp
392.252 136.09 mo
399.086 136.09 li
395.668 130.173 li
392.252 136.09 li
392.252 136.09 li
cp
390.086 109.09 mo
396.918 109.09 li
393.502 103.173 li
390.086 109.09 li
390.086 109.09 li
cp
388.002 100.84 mo
394.836 100.84 li
391.418 94.9233 li
388.002 100.84 li
388.002 100.84 li
cp
385.002 85.2568 mo
391.836 85.2568 li
388.418 79.3398 li
385.002 85.2568 li
385.002 85.2568 li
cp
382.918 63.5898 mo
389.752 63.5898 li
386.336 57.6733 li
382.918 63.5898 li
382.918 63.5898 li
cp
379.836 69.3398 mo
386.668 69.3398 li
383.252 63.4233 li
379.836 69.3398 li
379.836 69.3398 li
cp
376.836 80.4233 mo
383.668 80.4233 li
380.252 74.5068 li
376.836 80.4233 li
376.836 80.4233 li
cp
371.752 136.757 mo
378.586 136.757 li
375.168 130.84 li
371.752 136.757 li
371.752 136.757 li
cp
368.668 169.173 mo
375.502 169.173 li
372.086 163.257 li
368.668 169.173 li
368.668 169.173 li
cp
363.586 192.09 mo
370.418 192.09 li
367.002 186.173 li
363.586 192.09 li
363.586 192.09 li
cp
361.419 165.09 mo
368.252 165.09 li
364.836 159.173 li
361.419 165.09 li
361.419 165.09 li
cp
358.335 150.757 mo
365.168 150.757 li
361.752 144.84 li
358.335 150.757 li
358.335 150.757 li
cp
356.252 129.173 mo
363.086 129.173 li
359.669 123.257 li
356.252 129.173 li
356.252 129.173 li
cp
353.169 121.507 mo
360.002 121.507 li
356.585 115.59 li
353.169 121.507 li
353.169 121.507 li
cp
351.085 113.257 mo
357.919 113.257 li
354.502 107.34 li
351.085 113.257 li
351.085 113.257 li
cp
348.085 124.423 mo
354.919 124.423 li
351.502 118.507 li
348.085 124.423 li
348.085 124.423 li
cp
346.002 109.507 mo
352.835 109.507 li
349.419 103.59 li
346.002 109.507 li
346.002 109.507 li
cp
343.002 127.257 mo
349.835 127.257 li
346.419 121.34 li
343.002 127.257 li
343.002 127.257 li
cp
340.002 132.007 mo
346.835 132.007 li
343.419 126.09 li
340.002 132.007 li
340.002 132.007 li
cp
337.002 143.173 mo
343.835 143.173 li
340.419 137.257 li
337.002 143.173 li
337.002 143.173 li
cp
334.002 147.59 mo
340.835 147.59 li
337.419 141.673 li
334.002 147.59 li
334.002 147.59 li
cp
331.919 139.34 mo
338.752 139.34 li
335.335 133.423 li
331.919 139.34 li
331.919 139.34 li
cp
328.919 163.84 mo
335.752 163.84 li
332.335 157.923 li
328.919 163.84 li
328.919 163.84 li
cp
325.919 161.59 mo
332.752 161.59 li
329.335 155.673 li
325.919 161.59 li
325.919 161.59 li
cp
322.919 172.673 mo
329.752 172.673 li
326.335 166.757 li
322.919 172.673 li
322.919 172.673 li
cp
319.919 157.09 mo
326.752 157.09 li
323.335 151.173 li
319.919 157.09 li
319.919 157.09 li
cp
317.835 136.507 mo
324.669 136.507 li
321.252 130.59 li
317.835 136.507 li
317.835 136.507 li
cp
314.835 166.59 mo
321.669 166.59 li
318.252 160.673 li
314.835 166.59 li
314.835 166.59 li
cp
312.752 145.007 mo
319.585 145.007 li
316.169 139.09 li
312.752 145.007 li
312.752 145.007 li
cp
309.752 136.09 mo
316.585 136.09 li
313.169 130.173 li
309.752 136.09 li
309.752 136.09 li
cp
306.669 115.09 mo
313.502 115.09 li
310.085 109.173 li
306.669 115.09 li
306.669 115.09 li
cp
303.502 102.09 mo
310.335 102.09 li
306.919 96.1733 li
303.502 102.09 li
303.502 102.09 li
cp
298.419 131.673 mo
305.252 131.673 li
301.835 125.757 li
298.419 131.673 li
298.419 131.673 li
cp
295.335 158.673 mo
302.169 158.673 li
298.752 152.757 li
295.335 158.673 li
295.335 158.673 li
cp
293.169 118.34 mo
300.002 118.34 li
296.585 112.423 li
293.169 118.34 li
293.169 118.34 li
cp
290.085 137.423 mo
296.919 137.423 li
293.502 131.507 li
290.085 137.423 li
290.085 137.423 li
cp
287.085 123.09 mo
293.919 123.09 li
290.502 117.173 li
287.085 123.09 li
287.085 123.09 li
cp
284.085 131.923 mo
290.919 131.923 li
287.502 126.007 li
284.085 131.923 li
284.085 131.923 li
cp
279.169 197.84 mo
286.002 197.84 li
282.585 191.923 li
279.169 197.84 li
279.169 197.84 li
cp
276.169 186.757 mo
283.002 186.757 li
279.585 180.84 li
276.169 186.757 li
276.169 186.757 li
cp
274.002 196.173 mo
280.835 196.173 li
277.419 190.257 li
274.002 196.173 li
274.002 196.173 li
cp
271.002 188.007 mo
277.835 188.007 li
274.419 182.09 li
271.002 188.007 li
271.002 188.007 li
cp
267.919 182.257 mo
274.752 182.257 li
271.335 176.34 li
267.919 182.257 li
267.919 182.257 li
cp
264.835 169.84 mo
271.669 169.84 li
268.252 163.923 li
264.835 169.84 li
264.835 169.84 li
cp
262.669 190.173 mo
269.502 190.173 li
266.085 184.257 li
262.669 190.173 li
262.669 190.173 li
cp
259.669 192.09 mo
266.502 192.09 li
263.085 186.173 li
259.669 192.09 li
259.669 192.09 li
cp
256.585 172.09 mo
263.419 172.09 li
260.002 166.173 li
256.585 172.09 li
256.585 172.09 li
cp
254.419 164.09 mo
261.252 164.09 li
257.835 158.173 li
254.419 164.09 li
254.419 164.09 li
cp
251.335 189.923 mo
258.169 189.923 li
254.752 184.007 li
251.335 189.923 li
251.335 189.923 li
cp
248.335 194.257 mo
255.169 194.257 li
251.752 188.34 li
248.335 194.257 li
248.335 194.257 li
cp
245.252 195.257 mo
252.085 195.257 li
248.669 189.34 li
245.252 195.257 li
245.252 195.257 li
cp
242.169 196.173 mo
249.002 196.173 li
245.585 190.257 li
242.169 196.173 li
242.169 196.173 li
cp
237.419 167.673 mo
244.252 167.673 li
240.835 161.757 li
237.419 167.673 li
237.419 167.673 li
cp
235.335 196.007 mo
242.169 196.007 li
238.752 190.09 li
235.335 196.007 li
235.335 196.007 li
cp
232.335 184.84 mo
239.169 184.84 li
235.752 178.923 li
232.335 184.84 li
232.335 184.84 li
cp
229.335 173.757 mo
236.169 173.757 li
232.752 167.84 li
229.335 173.757 li
229.335 173.757 li
cp
227.252 194.59 mo
234.085 194.59 li
230.669 188.673 li
227.252 194.59 li
227.252 194.59 li
cp
224.169 186.923 mo
231.002 186.923 li
227.585 181.007 li
224.169 186.923 li
224.169 186.923 li
cp
221.169 185.923 mo
228.002 185.923 li
224.585 180.007 li
221.169 185.923 li
221.169 185.923 li
cp
218.085 184.84 mo
224.919 184.84 li
221.502 178.923 li
218.085 184.84 li
218.085 184.84 li
cp
213.002 151.59 mo
219.835 151.59 li
216.419 145.673 li
213.002 151.59 li
213.002 151.59 li
cp
209.919 159.257 mo
216.752 159.257 li
213.335 153.34 li
209.919 159.257 li
209.919 159.257 li
cp
207.752 172.923 mo
214.585 172.923 li
211.169 167.007 li
207.752 172.923 li
207.752 172.923 li
cp
205.669 161.09 mo
212.502 161.09 li
209.085 155.173 li
205.669 161.09 li
205.669 161.09 li
cp
202.669 170.007 mo
209.502 170.007 li
206.085 164.09 li
202.669 170.007 li
202.669 170.007 li
cp
200.585 184.923 mo
207.419 184.923 li
204.002 179.007 li
200.585 184.923 li
200.585 184.923 li
cp
197.585 193.923 mo
204.419 193.923 li
201.002 188.007 li
197.585 193.923 li
197.585 193.923 li
cp
194.585 173.757 mo
201.419 173.757 li
198.002 167.84 li
194.585 173.757 li
194.585 173.757 li
cp
191.585 178.173 mo
198.419 178.173 li
195.002 172.257 li
191.585 178.173 li
191.585 178.173 li
cp
188.585 196.007 mo
195.419 196.007 li
192.002 190.09 li
188.585 196.007 li
188.585 196.007 li
cp
186.502 174.34 mo
193.335 174.34 li
189.919 168.423 li
186.502 174.34 li
186.502 174.34 li
cp
183.502 185.507 mo
190.335 185.507 li
186.919 179.59 li
183.502 185.507 li
183.502 185.507 li
cp
180.502 183.257 mo
187.335 183.257 li
183.919 177.34 li
180.502 183.257 li
180.502 183.257 li
cp
177.502 187.673 mo
184.335 187.673 li
180.919 181.757 li
177.502 187.673 li
177.502 187.673 li
cp
174.502 197.84 mo
181.335 197.84 li
177.919 191.923 li
174.502 197.84 li
174.502 197.84 li
cp
171.585 182.84 mo
178.419 182.84 li
175.002 176.923 li
171.585 182.84 li
171.585 182.84 li
cp
168.502 196.507 mo
175.335 196.507 li
171.919 190.59 li
168.502 196.507 li
168.502 196.507 li
cp
165.419 181.757 mo
172.252 181.757 li
168.835 175.84 li
165.419 181.757 li
165.419 181.757 li
cp
162.335 185.84 mo
169.169 185.84 li
165.752 179.923 li
162.335 185.84 li
162.335 185.84 li
cp
159.169 194.757 mo
166.002 194.757 li
162.585 188.84 li
159.169 194.757 li
159.169 194.757 li
cp
156.169 189.34 mo
163.002 189.34 li
159.585 183.423 li
156.169 189.34 li
156.169 189.34 li
cp
153.085 172.09 mo
159.919 172.09 li
156.502 166.173 li
153.085 172.09 li
153.085 172.09 li
cp
150.002 131.007 mo
156.835 131.007 li
153.419 125.09 li
150.002 131.007 li
150.002 131.007 li
cp
147.002 101.84 mo
153.835 101.84 li
150.419 95.9233 li
147.002 101.84 li
147.002 101.84 li
cp
143.919 108.34 mo
150.752 108.34 li
147.335 102.423 li
143.919 108.34 li
143.919 108.34 li
cp
140.835 102.923 mo
147.669 102.923 li
144.252 97.0068 li
140.835 102.923 li
140.835 102.923 li
cp
137.752 121.257 mo
144.585 121.257 li
141.169 115.34 li
137.752 121.257 li
137.752 121.257 li
cp
134.752 115.84 mo
141.585 115.84 li
138.169 109.923 li
134.752 115.84 li
134.752 115.84 li
cp
132.585 91.0898 mo
139.419 91.0898 li
136.002 85.1733 li
132.585 91.0898 li
132.585 91.0898 li
cp
129.585 48.7568 mo
136.419 48.7568 li
133.002 42.8398 li
129.585 48.7568 li
129.585 48.7568 li
cp
126.585 42.0068 mo
133.419 42.0068 li
130.002 36.0898 li
126.585 42.0068 li
126.585 42.0068 li
cp
123.502 24.7568 mo
130.335 24.7568 li
126.919 18.8398 li
123.502 24.7568 li
123.502 24.7568 li
cp
118.419 63.2568 mo
125.252 63.2568 li
121.835 57.3398 li
118.419 63.2568 li
118.419 63.2568 li
cp
115.419 20.9233 mo
122.252 20.9233 li
118.835 15.0068 li
115.419 20.9233 li
115.419 20.9233 li
cp
112.335 27.4233 mo
119.169 27.4233 li
115.752 21.5068 li
112.335 27.4233 li
112.335 27.4233 li
cp
107.252 42.0898 mo
114.085 42.0898 li
110.669 36.1733 li
107.252 42.0898 li
107.252 42.0898 li
cp
104.169 36.7568 mo
111.002 36.7568 li
107.585 30.8398 li
104.169 36.7568 li
104.169 36.7568 li
cp
101.169 55.0898 mo
108.002 55.0898 li
104.585 49.1733 li
101.169 55.0898 li
101.169 55.0898 li
cp
98.9189 85.0898 mo
105.752 85.0898 li
102.335 79.1733 li
98.9189 85.0898 li
98.9189 85.0898 li
cp
93.8354 148.007 mo
100.669 148.007 li
97.252 142.09 li
93.8354 148.007 li
93.8354 148.007 li
cp
90.6689 156.34 mo
97.502 156.34 li
94.0854 150.423 li
90.6689 156.34 li
90.6689 156.34 li
cp
85.5854 197.34 mo
92.4189 197.34 li
89.002 191.423 li
85.5854 197.34 li
85.5854 197.34 li
cp
.923522 .746761 0 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/N <1C60D8A8C9B6079F1E210C2F9CEEC55EA27709010CA5156BDE4F7169DCD8
3D1487618C13D4BC4EBB77DC3BF6CD15F7D9F6F5FB65B0AD46AE56999C41B6BE
7783> |-
/R <1C60D8A8C9B6079F1E4D8C18B43D708E4867E1D5DF87FFDFDA59C87E0DAA
C2980D72F189A927C7607FB955553C4E4B82FD6E924592BF3E5BCF70BD67C10F
BFCC049000E196CAB909156B2D7E5AD89BC25B1EEB84DE135A38029C2647CF91
8DD0728B39FA4A46AD6169BF8FCD9F6EBD7C686C8458E64ED665C52AFB667727
503772603873AF92F5CB568DE59763334D0C676EEF504634735618AF2DDA86> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 32 /space put
dup 78 /N put
dup 82 /R put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 111 /o put
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 20{/.notdef}rp 
/N 3{/.notdef}rp /R 17{/.notdef}rp /d /e 3{/.notdef}rp /i 
5{/.notdef}rp /o 3{/.notdef}rp /s /.notdef /u 138{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [12 0 0 -12 0 0 ]msf
343.25 219.84 mo
(Residue No.)
[8.66406 6.67188 6 2.66406 6.67188 6.67188 6.67188 3.33594 8.66406 6.67188 0 ]xsh
46.252 358.84 mo
46.252 550.257 li
705.918 550.257 li
705.918 358.84 li
46.252 358.84 li
cp
0 0 0 0 cmyk
ef
46.252 358.84 mo
46.252 550.257 li
705.918 550.257 li
705.918 358.84 li
46.252 358.84 li
@
.333333 lw
[.5 4 ] 0 dsh
705.918 550.257 mo
705.918 550.257 li
46.252 550.257 mo
705.918 550.257 li
705.918 526.257 mo
705.918 526.257 li
46.252 526.257 mo
705.918 526.257 li
705.918 502.34 mo
705.918 502.34 li
46.252 502.34 mo
705.918 502.34 li
705.918 478.424 mo
705.918 478.424 li
46.252 478.424 mo
705.918 478.424 li
705.918 454.507 mo
705.918 454.507 li
46.252 454.507 mo
705.918 454.507 li
705.918 430.59 mo
705.918 430.59 li
46.252 430.59 mo
705.918 430.59 li
705.918 406.674 mo
705.918 406.674 li
46.252 406.674 mo
705.918 406.674 li
705.918 382.757 mo
705.918 382.757 li
46.252 382.757 mo
705.918 382.757 li
705.918 358.84 mo
705.918 358.84 li
46.252 358.84 mo
705.918 358.84 li
0 0 0 1 cmyk
@
.5 lw
[] 0 dsh
133.669 550.257 mo
133.669 543.59 li
133.669 358.84 mo
133.669 365.424 li
46.252 358.84 mo
46.252 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 358.84 mo
46.252 550.257 li
705.918 358.84 mo
705.918 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 550.257 mo
705.918 550.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
130.922 355.926 mo
(1)sh
187.835 550.257 mo
187.835 543.59 li
187.835 358.84 mo
187.835 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
182.336 355.926 mo
(19)
[5.56006 0 ]xsh
242.169 550.257 mo
242.169 543.59 li
242.169 358.84 mo
242.169 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
236.664 355.926 mo
(39)
[5.56006 0 ]xsh
293.085 550.257 mo
293.085 543.59 li
293.085 358.84 mo
293.085 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
287.578 355.926 mo
(56)
[5.56006 0 ]xsh
340.919 550.257 mo
340.919 543.59 li
340.919 358.84 mo
340.919 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
335.422 355.926 mo
(71)
[5.56006 0 ]xsh
392.418 550.257 mo
392.418 543.59 li
392.418 358.84 mo
392.418 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
386.914 355.926 mo
(88)
[5.55957 0 ]xsh
435.336 550.257 mo
435.336 543.59 li
435.336 358.84 mo
435.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
427 355.926 mo
(103)
[5.55957 5.56055 0 ]xsh
483.168 550.257 mo
483.168 543.59 li
483.168 358.84 mo
483.168 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
474.836 355.926 mo
(118)
[5.55957 5.56055 0 ]xsh
528.502 550.257 mo
528.502 543.59 li
528.502 358.84 mo
528.502 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
520.164 355.926 mo
(134)
[5.55957 5.56055 0 ]xsh
576.002 550.257 mo
576.002 543.59 li
576.002 358.84 mo
576.002 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
567.664 355.926 mo
(150)
[5.55957 5.56055 0 ]xsh
620.336 550.257 mo
620.336 543.59 li
620.336 358.84 mo
620.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
612 355.926 mo
(165)
[5.55957 5.56055 0 ]xsh
666.336 550.257 mo
666.336 543.59 li
666.336 358.84 mo
666.336 365.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
658 355.926 mo
(180)
[5.55957 5.56055 0 ]xsh
705.918 358.84 mo
699.252 358.84 li
46.252 358.84 mo
52.8354 358.84 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 362.504 mo
(3)sh
705.918 382.757 mo
699.252 382.757 li
46.252 382.757 mo
52.8354 382.757 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 386.418 mo
(4)sh
705.918 406.674 mo
699.252 406.674 li
46.252 406.674 mo
52.8354 406.674 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 410.34 mo
(5)sh
705.918 430.59 mo
699.252 430.59 li
46.252 430.59 mo
52.8354 430.59 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 434.254 mo
(6)sh
705.918 454.507 mo
699.252 454.507 li
46.252 454.507 mo
52.8354 454.507 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 458.176 mo
(7)sh
705.918 478.424 mo
699.252 478.424 li
46.252 478.424 mo
52.8354 478.424 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 482.082 mo
(8)sh
705.918 502.34 mo
699.252 502.34 li
46.252 502.34 mo
52.8354 502.34 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
37.8359 506.004 mo
(9)sh
705.918 526.257 mo
699.252 526.257 li
46.252 526.257 mo
52.8354 526.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
32.25 529.918 mo
(10)
[5.56006 0 ]xsh
705.918 550.257 mo
699.252 550.257 li
46.252 550.257 mo
52.8354 550.257 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
32.25 553.918 mo
(11)
[5.56006 0 ]xsh
46.252 358.84 mo
46.252 550.257 li
705.918 358.84 mo
705.918 550.257 li
46.252 358.84 mo
705.918 358.84 li
46.252 550.257 mo
705.918 550.257 li
@
687.586 392.424 mo
691.002 386.507 li
684.168 386.507 li
687.586 392.424 li
687.586 392.424 li
cp
684.502 392.007 mo
687.918 386.09 li
681.086 386.09 li
684.502 392.007 li
684.502 392.007 li
cp
681.252 403.174 mo
684.668 397.257 li
677.836 397.257 li
681.252 403.174 li
681.252 403.174 li
cp
678.418 403.84 mo
681.836 397.924 li
675.002 397.924 li
678.418 403.84 li
678.418 403.84 li
cp
675.086 410.924 mo
678.502 405.007 li
671.668 405.007 li
675.086 410.924 li
675.086 410.924 li
cp
672.336 408.174 mo
675.752 402.257 li
668.918 402.257 li
672.336 408.174 li
672.336 408.174 li
cp
669.502 406.507 mo
672.918 400.59 li
666.086 400.59 li
669.502 406.507 li
669.502 406.507 li
cp
666.336 402.09 mo
669.752 396.174 li
662.918 396.174 li
666.336 402.09 li
666.336 402.09 li
cp
662.918 407.674 mo
666.336 401.757 li
659.502 401.757 li
662.918 407.674 li
662.918 407.674 li
cp
659.752 407.757 mo
663.168 401.84 li
656.336 401.84 li
659.752 407.757 li
659.752 407.757 li
cp
656.836 408.924 mo
660.252 403.007 li
653.418 403.007 li
656.836 408.924 li
656.836 408.924 li
cp
654.002 404.174 mo
657.418 398.257 li
650.586 398.257 li
654.002 404.174 li
654.002 404.174 li
cp
651.086 404.84 mo
654.502 398.924 li
647.668 398.924 li
651.086 404.84 li
651.086 404.84 li
cp
648.252 414.424 mo
651.668 408.507 li
644.836 408.507 li
648.252 414.424 li
648.252 414.424 li
cp
645.168 408.174 mo
648.586 402.257 li
641.752 402.257 li
645.168 408.174 li
645.168 408.174 li
cp
641.668 415.757 mo
645.086 409.84 li
638.252 409.84 li
641.668 415.757 li
641.668 415.757 li
cp
638.918 413.424 mo
642.336 407.507 li
635.502 407.507 li
638.918 413.424 li
638.918 413.424 li
cp
636.418 413.257 mo
639.836 407.34 li
633.002 407.34 li
636.418 413.257 li
636.418 413.257 li
cp
633.336 408.34 mo
636.752 402.424 li
629.918 402.424 li
633.336 408.34 li
633.336 408.34 li
cp
629.918 420.424 mo
633.336 414.507 li
626.502 414.507 li
629.918 420.424 li
629.918 420.424 li
cp
626.502 420.924 mo
629.918 415.007 li
623.086 415.007 li
626.502 420.924 li
626.502 420.924 li
cp
623.086 420.507 mo
626.502 414.59 li
619.668 414.59 li
623.086 420.507 li
623.086 420.507 li
cp
620.336 425.257 mo
623.752 419.34 li
616.918 419.34 li
620.336 425.257 li
620.336 425.257 li
cp
617.086 426.34 mo
620.502 420.424 li
613.668 420.424 li
617.086 426.34 li
617.086 426.34 li
cp
614.502 420.09 mo
617.918 414.174 li
611.086 414.174 li
614.502 420.09 li
614.502 420.09 li
cp
612.002 420.424 mo
615.418 414.507 li
608.586 414.507 li
612.002 420.424 li
612.002 420.424 li
cp
608.918 420.007 mo
612.336 414.09 li
605.502 414.09 li
608.918 420.007 li
608.918 420.007 li
cp
606.252 413.757 mo
609.668 407.84 li
602.836 407.84 li
606.252 413.757 li
606.252 413.757 li
cp
602.918 424.84 mo
606.336 418.924 li
599.502 418.924 li
602.918 424.84 li
602.918 424.84 li
cp
599.502 427.424 mo
602.918 421.507 li
596.086 421.507 li
599.502 427.424 li
599.502 427.424 li
cp
596.586 423.09 mo
600.002 417.174 li
593.168 417.174 li
596.586 423.09 li
596.586 423.09 li
cp
593.252 435.174 mo
596.668 429.257 li
589.836 429.257 li
593.252 435.174 li
593.252 435.174 li
cp
590.168 437.84 mo
593.586 431.924 li
586.752 431.924 li
590.168 437.84 li
590.168 437.84 li
cp
587.418 429.507 mo
590.836 423.59 li
584.002 423.59 li
587.418 429.507 li
587.418 429.507 li
cp
585.002 426.34 mo
588.418 420.424 li
581.586 420.424 li
585.002 426.34 li
585.002 426.34 li
cp
582.668 415.674 mo
586.086 409.757 li
579.252 409.757 li
582.668 415.674 li
582.668 415.674 li
cp
579.168 423.674 mo
582.586 417.757 li
575.752 417.757 li
579.168 423.674 li
579.168 423.674 li
cp
576.002 423.84 mo
579.418 417.924 li
572.586 417.924 li
576.002 423.84 li
576.002 423.84 li
cp
573.168 427.007 mo
576.586 421.09 li
569.752 421.09 li
573.168 427.007 li
573.168 427.007 li
cp
569.752 432.09 mo
573.168 426.174 li
566.336 426.174 li
569.752 432.09 li
569.752 432.09 li
cp
566.168 443.59 mo
569.586 437.674 li
562.752 437.674 li
566.168 443.59 li
566.168 443.59 li
cp
563.836 429.924 mo
567.252 424.007 li
560.418 424.007 li
563.836 429.924 li
563.836 429.924 li
cp
561.002 432.59 mo
564.418 426.674 li
557.586 426.674 li
561.002 432.59 li
561.002 432.59 li
cp
557.668 434.174 mo
561.086 428.257 li
554.252 428.257 li
557.668 434.174 li
557.668 434.174 li
cp
554.336 443.757 mo
557.752 437.84 li
550.918 437.84 li
554.336 443.757 li
554.336 443.757 li
cp
550.336 428.174 mo
553.752 422.257 li
546.918 422.257 li
550.336 428.174 li
550.336 428.174 li
cp
547.502 426.34 mo
550.918 420.424 li
544.086 420.424 li
547.502 426.34 li
547.502 426.34 li
cp
544.836 430.09 mo
548.252 424.174 li
541.418 424.174 li
544.836 430.09 li
544.836 430.09 li
cp
541.836 437.257 mo
545.252 431.34 li
538.418 431.34 li
541.836 437.257 li
541.836 437.257 li
cp
538.836 435.924 mo
542.252 430.007 li
535.418 430.007 li
538.836 435.924 li
538.836 435.924 li
cp
535.418 437.84 mo
538.836 431.924 li
532.002 431.924 li
535.418 437.84 li
535.418 437.84 li
cp
531.752 444.84 mo
535.168 438.924 li
528.336 438.924 li
531.752 444.84 li
531.752 444.84 li
cp
528.502 443.924 mo
531.918 438.007 li
525.086 438.007 li
528.502 443.924 li
528.502 443.924 li
cp
525.918 442.174 mo
529.336 436.257 li
522.502 436.257 li
525.918 442.174 li
525.918 442.174 li
cp
522.752 442.34 mo
526.168 436.424 li
519.336 436.424 li
522.752 442.34 li
522.752 442.34 li
cp
520.002 442.007 mo
523.418 436.09 li
516.586 436.09 li
520.002 442.007 li
520.002 442.007 li
cp
516.252 424.924 mo
519.668 419.007 li
512.836 419.007 li
516.252 424.924 li
516.252 424.924 li
cp
513.002 418.507 mo
516.418 412.59 li
509.586 412.59 li
513.002 418.507 li
513.002 418.507 li
cp
510.168 421.257 mo
513.586 415.34 li
506.752 415.34 li
510.168 421.257 li
510.168 421.257 li
cp
507.586 419.507 mo
511.002 413.59 li
504.168 413.59 li
507.586 419.507 li
507.586 419.507 li
cp
504.418 422.59 mo
507.836 416.674 li
501.002 416.674 li
504.418 422.59 li
504.418 422.59 li
cp
501.418 421.757 mo
504.836 415.84 li
498.002 415.84 li
501.418 421.757 li
501.418 421.757 li
cp
497.918 420.257 mo
501.336 414.34 li
494.502 414.34 li
497.918 420.257 li
497.918 420.257 li
cp
494.752 418.424 mo
498.168 412.507 li
491.336 412.507 li
494.752 418.424 li
494.752 418.424 li
cp
491.586 426.507 mo
495.002 420.59 li
488.168 420.59 li
491.586 426.507 li
491.586 426.507 li
cp
488.502 426.174 mo
491.918 420.257 li
485.086 420.257 li
488.502 426.174 li
488.502 426.174 li
cp
486.002 426.007 mo
489.418 420.09 li
482.586 420.09 li
486.002 426.007 li
486.002 426.007 li
cp
483.168 425.174 mo
486.586 419.257 li
479.752 419.257 li
483.168 425.174 li
483.168 425.174 li
cp
479.752 423.174 mo
483.168 417.257 li
476.336 417.257 li
479.752 423.174 li
479.752 423.174 li
cp
475.918 431.674 mo
479.336 425.757 li
472.502 425.757 li
475.918 431.674 li
475.918 431.674 li
cp
472.502 443.757 mo
475.918 437.84 li
469.086 437.84 li
472.502 443.757 li
472.502 443.757 li
cp
470.086 438.507 mo
473.502 432.59 li
466.668 432.59 li
470.086 438.507 li
470.086 438.507 li
cp
466.586 444.09 mo
470.002 438.174 li
463.168 438.174 li
466.586 444.09 li
466.586 444.09 li
cp
463.336 448.174 mo
466.752 442.257 li
459.918 442.257 li
463.336 448.174 li
463.336 448.174 li
cp
460.002 444.674 mo
463.418 438.757 li
456.586 438.757 li
460.002 444.674 li
460.002 444.674 li
cp
457.086 445.424 mo
460.502 439.507 li
453.668 439.507 li
457.086 445.424 li
457.086 445.424 li
cp
454.586 438.674 mo
458.002 432.757 li
451.168 432.757 li
454.586 438.674 li
454.586 438.674 li
cp
451.502 443.34 mo
454.918 437.424 li
448.086 437.424 li
451.502 443.34 li
451.502 443.34 li
cp
448.752 440.507 mo
452.168 434.59 li
445.336 434.59 li
448.752 440.507 li
448.752 440.507 li
cp
445.586 443.174 mo
449.002 437.257 li
442.168 437.257 li
445.586 443.174 li
445.586 443.174 li
cp
442.918 439.924 mo
446.336 434.007 li
439.502 434.007 li
442.918 439.924 li
442.918 439.924 li
cp
439.252 444.424 mo
442.668 438.507 li
435.836 438.507 li
439.252 444.424 li
439.252 444.424 li
cp
435.336 450.84 mo
438.752 444.924 li
431.918 444.924 li
435.336 450.84 li
435.336 450.84 li
cp
432.586 453.007 mo
436.002 447.09 li
429.168 447.09 li
432.586 453.007 li
432.586 453.007 li
cp
428.336 459.84 mo
431.752 453.924 li
424.918 453.924 li
428.336 459.84 li
428.336 459.84 li
cp
426.086 457.757 mo
429.502 451.84 li
422.668 451.84 li
426.086 457.757 li
426.086 457.757 li
cp
422.668 455.257 mo
426.086 449.34 li
419.252 449.34 li
422.668 455.257 li
422.668 455.257 li
cp
420.502 447.674 mo
423.918 441.757 li
417.086 441.757 li
420.502 447.674 li
420.502 447.674 li
cp
418.418 442.507 mo
421.836 436.59 li
415.002 436.59 li
418.418 442.507 li
418.418 442.507 li
cp
415.418 446.257 mo
418.836 440.34 li
412.002 440.34 li
415.418 446.257 li
415.418 446.257 li
cp
412.586 448.924 mo
416.002 443.007 li
409.168 443.007 li
412.586 448.924 li
412.586 448.924 li
cp
409.502 461.59 mo
412.918 455.674 li
406.086 455.674 li
409.502 461.59 li
409.502 461.59 li
cp
407.168 447.924 mo
410.586 442.007 li
403.752 442.007 li
407.168 447.924 li
407.168 447.924 li
cp
404.836 439.257 mo
408.252 433.34 li
401.418 433.34 li
404.836 439.257 li
404.836 439.257 li
cp
401.668 434.84 mo
405.086 428.924 li
398.252 428.924 li
401.668 434.84 li
401.668 434.84 li
cp
398.502 434.924 mo
401.918 429.007 li
395.086 429.007 li
398.502 434.924 li
398.502 434.924 li
cp
395.336 433.59 mo
398.752 427.674 li
391.918 427.674 li
395.336 433.59 li
395.336 433.59 li
cp
392.418 436.757 mo
395.836 430.84 li
389.002 430.84 li
392.418 436.757 li
392.418 436.757 li
cp
389.752 438.007 mo
393.168 432.09 li
386.336 432.09 li
389.752 438.007 li
389.752 438.007 li
cp
386.668 440.674 mo
390.086 434.757 li
383.252 434.757 li
386.668 440.674 li
386.668 440.674 li
cp
383.168 451.174 mo
386.586 445.257 li
379.752 445.257 li
383.168 451.174 li
383.168 451.174 li
cp
379.418 459.257 mo
382.836 453.34 li
376.002 453.34 li
379.418 459.257 li
379.418 459.257 li
cp
375.418 448.674 mo
378.836 442.757 li
372.002 442.757 li
375.418 448.674 li
375.418 448.674 li
cp
371.752 458.59 mo
375.168 452.674 li
368.336 452.674 li
371.752 458.59 li
371.752 458.59 li
cp
369.086 464.924 mo
372.502 459.007 li
365.668 459.007 li
369.086 464.924 li
369.086 464.924 li
cp
365.668 467.424 mo
369.086 461.507 li
362.252 461.507 li
365.668 467.424 li
365.668 467.424 li
cp
362.336 474.007 mo
365.752 468.09 li
358.919 468.09 li
362.336 474.007 li
362.336 474.007 li
cp
358.919 472.09 mo
362.336 466.174 li
355.502 466.174 li
358.919 472.09 li
358.919 472.09 li
cp
356.419 467.257 mo
359.835 461.34 li
353.002 461.34 li
356.419 467.257 li
356.419 467.257 li
cp
351.669 492.59 mo
355.085 486.674 li
348.252 486.674 li
351.669 492.59 li
351.669 492.59 li
cp
346.252 484.007 mo
349.669 478.09 li
342.835 478.09 li
346.252 484.007 li
346.252 484.007 li
cp
343.335 474.674 mo
346.752 468.757 li
339.919 468.757 li
343.335 474.674 li
343.335 474.674 li
cp
340.919 464.507 mo
344.335 458.59 li
337.502 458.59 li
340.919 464.507 li
340.919 464.507 li
cp
337.752 459.59 mo
341.169 453.674 li
334.335 453.674 li
337.752 459.59 li
337.752 459.59 li
cp
333.835 476.507 mo
337.252 470.59 li
330.419 470.59 li
333.835 476.507 li
333.835 476.507 li
cp
330.502 471.09 mo
333.919 465.174 li
327.085 465.174 li
330.502 471.09 li
330.502 471.09 li
cp
326.669 484.007 mo
330.085 478.09 li
323.252 478.09 li
326.669 484.007 li
326.669 484.007 li
cp
324.502 471.924 mo
327.919 466.007 li
321.085 466.007 li
324.502 471.924 li
324.502 471.924 li
cp
322.085 470.34 mo
325.502 464.424 li
318.669 464.424 li
322.085 470.34 li
322.085 470.34 li
cp
319.002 480.924 mo
322.419 475.007 li
315.585 475.007 li
319.002 480.924 li
319.002 480.924 li
cp
315.419 489.924 mo
318.835 484.007 li
312.002 484.007 li
315.419 489.924 li
315.419 489.924 li
cp
312.085 494.424 mo
315.502 488.507 li
308.669 488.507 li
312.085 494.424 li
312.085 494.424 li
cp
308.835 500.59 mo
312.252 494.674 li
305.419 494.674 li
308.835 500.59 li
308.835 500.59 li
cp
306.335 498.34 mo
309.752 492.424 li
302.919 492.424 li
306.335 498.34 li
306.335 498.34 li
cp
303.085 504.424 mo
306.502 498.507 li
299.669 498.507 li
303.085 504.424 li
303.085 504.424 li
cp
300.085 503.174 mo
303.502 497.257 li
296.669 497.257 li
300.085 503.174 li
300.085 503.174 li
cp
296.585 501.674 mo
300.002 495.757 li
293.169 495.757 li
296.585 501.674 li
296.585 501.674 li
cp
293.085 517.174 mo
296.502 511.257 li
289.669 511.257 li
293.085 517.174 li
293.085 517.174 li
cp
290.169 500.84 mo
293.585 494.924 li
286.752 494.924 li
290.169 500.84 li
290.169 500.84 li
cp
287.335 508.59 mo
290.752 502.674 li
283.919 502.674 li
287.335 508.59 li
287.335 508.59 li
cp
282.585 526.757 mo
286.002 520.84 li
279.169 520.84 li
282.585 526.757 li
282.585 526.757 li
cp
279.169 529.84 mo
282.585 523.924 li
275.752 523.924 li
279.169 529.84 li
279.169 529.84 li
cp
275.335 507.674 mo
278.752 501.757 li
271.919 501.757 li
275.335 507.674 li
275.335 507.674 li
cp
271.919 507.757 mo
275.335 501.84 li
268.502 501.84 li
271.919 507.757 li
271.919 507.757 li
cp
269.169 510.007 mo
272.585 504.09 li
265.752 504.09 li
269.169 510.007 li
269.169 510.007 li
cp
265.669 518.507 mo
269.085 512.59 li
262.252 512.59 li
265.669 518.507 li
265.669 518.507 li
cp
259.169 515.674 mo
262.585 509.757 li
255.752 509.757 li
259.169 515.674 li
259.169 515.674 li
cp
256.669 510.507 mo
260.085 504.59 li
253.252 504.59 li
256.669 510.507 li
256.669 510.507 li
cp
254.335 514.34 mo
257.752 508.424 li
250.919 508.424 li
254.335 514.34 li
254.335 514.34 li
cp
251.585 508.424 mo
255.002 502.507 li
248.169 502.507 li
251.585 508.424 li
251.585 508.424 li
cp
248.585 505.09 mo
252.002 499.174 li
245.169 499.174 li
248.585 505.09 li
248.585 505.09 li
cp
245.335 508.174 mo
248.752 502.257 li
241.919 502.257 li
245.335 508.174 li
245.335 508.174 li
cp
242.169 521.757 mo
245.585 515.84 li
238.752 515.84 li
242.169 521.757 li
242.169 521.757 li
cp
238.502 523.757 mo
241.919 517.84 li
235.085 517.84 li
238.502 523.757 li
238.502 523.757 li
cp
235.835 495.007 mo
239.252 489.09 li
232.419 489.09 li
235.835 495.007 li
235.835 495.007 li
cp
232.585 486.007 mo
236.002 480.09 li
229.169 480.09 li
232.585 486.007 li
232.585 486.007 li
cp
228.835 494.007 mo
232.252 488.09 li
225.419 488.09 li
228.835 494.007 li
228.835 494.007 li
cp
225.669 501.674 mo
229.085 495.757 li
222.252 495.757 li
225.669 501.674 li
225.669 501.674 li
cp
221.502 490.424 mo
224.919 484.507 li
218.085 484.507 li
221.502 490.424 li
221.502 490.424 li
cp
217.002 501.674 mo
220.419 495.757 li
213.585 495.757 li
217.002 501.674 li
217.002 501.674 li
cp
212.752 493.507 mo
216.169 487.59 li
209.335 487.59 li
212.752 493.507 li
212.752 493.507 li
cp
209.002 505.924 mo
212.419 500.007 li
205.585 500.007 li
209.002 505.924 li
209.002 505.924 li
cp
205.335 504.257 mo
208.752 498.34 li
201.919 498.34 li
205.335 504.257 li
205.335 504.257 li
cp
202.919 505.84 mo
206.335 499.924 li
199.502 499.924 li
202.919 505.84 li
202.919 505.84 li
cp
199.169 509.59 mo
202.585 503.674 li
195.752 503.674 li
199.169 509.59 li
199.169 509.59 li
cp
195.252 483.174 mo
198.669 477.257 li
191.835 477.257 li
195.252 483.174 li
195.252 483.174 li
cp
192.835 471.34 mo
196.252 465.424 li
189.419 465.424 li
192.835 471.34 li
192.835 471.34 li
cp
187.835 436.34 mo
191.252 430.424 li
184.419 430.424 li
187.835 436.34 li
187.835 436.34 li
cp
183.502 448.924 mo
186.919 443.007 li
180.085 443.007 li
183.502 448.924 li
183.502 448.924 li
cp
179.252 438.757 mo
182.669 432.84 li
175.835 432.84 li
179.252 438.757 li
179.252 438.757 li
cp
174.669 448.84 mo
178.085 442.924 li
171.252 442.924 li
174.669 448.84 li
174.669 448.84 li
cp
171.669 446.34 mo
175.085 440.424 li
168.252 440.424 li
171.669 446.34 li
171.669 446.34 li
cp
167.169 415.84 mo
170.585 409.924 li
163.752 409.924 li
167.169 415.84 li
167.169 415.84 li
cp
164.419 406.924 mo
167.835 401.007 li
161.002 401.007 li
164.419 406.924 li
164.419 406.924 li
cp
161.502 403.424 mo
164.919 397.507 li
158.085 397.507 li
161.502 403.424 li
161.502 403.424 li
cp
158.252 390.007 mo
161.669 384.09 li
154.835 384.09 li
158.252 390.007 li
158.252 390.007 li
cp
153.585 405.007 mo
157.002 399.09 li
150.169 399.09 li
153.585 405.007 li
153.585 405.007 li
cp
152.502 378.59 mo
155.919 372.674 li
149.085 372.674 li
152.502 378.59 li
152.502 378.59 li
cp
149.419 376.59 mo
152.835 370.674 li
146.002 370.674 li
149.419 376.59 li
149.419 376.59 li
cp
147.169 376.674 mo
150.585 370.757 li
143.752 370.757 li
147.169 376.674 li
147.169 376.674 li
cp
143.169 402.424 mo
146.585 396.507 li
139.752 396.507 li
143.169 402.424 li
143.169 402.424 li
cp
138.835 397.174 mo
142.252 391.257 li
135.419 391.257 li
138.835 397.174 li
138.835 397.174 li
cp
133.669 414.257 mo
137.085 408.34 li
130.252 408.34 li
133.669 414.257 li
133.669 414.257 li
cp
133.669 410.34 mo
138.835 393.257 li
143.169 398.507 li
147.169 372.757 li
149.419 372.674 li
152.502 374.674 li
153.585 401.09 li
158.252 386.09 li
161.502 399.507 li
164.419 403.007 li
167.169 411.924 li
171.669 442.424 li
174.669 444.924 li
179.252 434.84 li
183.502 445.007 li
187.835 432.424 li
192.835 467.424 li
195.252 479.257 li
199.169 505.674 li
202.919 501.924 li
205.335 500.34 li
209.002 502.007 li
212.752 489.59 li
217.002 497.757 li
221.502 486.507 li
225.669 497.757 li
228.835 490.09 li
232.585 482.09 li
235.835 491.09 li
238.502 519.84 li
242.169 517.84 li
245.335 504.257 li
248.585 501.174 li
251.585 504.507 li
254.335 510.424 li
256.669 506.59 li
259.169 511.757 li
265.669 514.59 li
269.169 506.09 li
271.919 503.84 li
275.335 503.757 li
279.169 525.924 li
282.585 522.84 li
287.335 504.674 li
290.169 496.924 li
293.085 513.257 li
296.585 497.757 li
300.085 499.257 li
303.085 500.507 li
306.335 494.424 li
308.835 496.674 li
312.085 490.507 li
315.419 486.007 li
319.002 477.007 li
322.085 466.424 li
324.502 468.007 li
326.669 480.09 li
330.502 467.174 li
333.835 472.59 li
337.752 455.674 li
340.919 460.59 li
343.335 470.757 li
346.252 480.09 li
351.669 488.674 li
356.419 463.34 li
358.919 468.174 li
362.336 470.09 li
365.668 463.507 li
369.086 461.007 li
371.752 454.674 li
375.418 444.757 li
379.418 455.34 li
383.168 447.257 li
386.668 436.757 li
389.752 434.09 li
392.418 432.84 li
395.336 429.674 li
398.502 431.007 li
401.668 430.924 li
404.836 435.34 li
407.168 444.007 li
409.502 457.674 li
412.586 445.007 li
415.418 442.34 li
418.418 438.59 li
420.502 443.757 li
422.668 451.34 li
426.086 453.84 li
428.336 455.924 li
432.586 449.09 li
435.336 446.924 li
439.252 440.507 li
442.918 436.007 li
445.586 439.257 li
448.752 436.59 li
451.502 439.424 li
454.586 434.757 li
457.086 441.507 li
460.002 440.757 li
463.336 444.257 li
466.586 440.174 li
470.086 434.59 li
472.502 439.84 li
475.918 427.757 li
479.752 419.257 li
483.168 421.257 li
486.002 422.09 li
488.502 422.257 li
491.586 422.59 li
494.752 414.507 li
497.918 416.34 li
501.418 417.84 li
504.418 418.674 li
507.586 415.59 li
510.168 417.34 li
513.002 414.59 li
516.252 421.007 li
520.002 438.09 li
522.752 438.424 li
525.918 438.257 li
528.502 440.007 li
531.752 440.924 li
535.418 433.924 li
538.836 432.007 li
541.836 433.34 li
544.836 426.174 li
547.502 422.424 li
550.336 424.257 li
554.336 439.84 li
557.668 430.257 li
561.002 428.674 li
563.836 426.007 li
566.168 439.674 li
569.752 428.174 li
573.168 423.09 li
576.002 419.924 li
579.168 419.757 li
582.668 411.757 li
585.002 422.424 li
587.418 425.59 li
590.168 433.924 li
593.252 431.257 li
596.586 419.174 li
599.502 423.507 li
602.918 420.924 li
606.252 409.84 li
608.918 416.09 li
612.002 416.507 li
614.502 416.174 li
617.086 422.424 li
620.336 421.34 li
623.086 416.59 li
626.502 417.007 li
629.918 416.507 li
633.336 404.424 li
636.418 409.34 li
638.918 409.507 li
641.668 411.84 li
645.168 404.257 li
648.252 410.507 li
651.086 400.924 li
654.002 400.257 li
656.836 405.007 li
659.752 403.84 li
662.918 403.757 li
666.336 398.174 li
669.502 402.59 li
672.336 404.257 li
675.086 407.007 li
678.418 399.924 li
681.252 399.257 li
684.502 388.09 li
687.586 388.507 li
0 .960204 .946044 0 cmyk
@
0 0 0 1 cmyk
PWFKSB+Helvetica*1 [12 0 0 -12 0 0 ]msf
343.25 346.582 mo
(Residue No.)
[8.66406 6.67188 6 2.66406 6.67188 6.67188 6.67188 3.33594 8.66406 6.67188 0 ]xsh
46.252 317.674 mo
46.252 237.507 li
705.918 237.507 li
705.918 317.674 li
46.252 317.674 li
cp
0 0 0 0 cmyk
ef
46.252 317.674 mo
46.252 237.507 li
705.918 237.507 li
705.918 317.674 li
46.252 317.674 li
@
46.252 237.507 mo
46.252 244.09 li
46.252 317.674 mo
46.252 311.007 li
46.252 317.674 mo
46.252 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 317.674 mo
46.252 237.507 li
705.918 317.674 mo
705.918 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 237.507 mo
705.918 237.507 li
0 0 0 1 cmyk
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
43.5 329.754 mo
(0)sh
95.0781 329.754 mo
(1000)sh
155.078 329.754 mo
(2000)sh
215 329.754 mo
(3000)sh
275 329.754 mo
(4000)sh
335 329.754 mo
(5000)sh
394.914 329.754 mo
(6000)
[5.55957 5.56055 5.55957 0 ]xsh
454.914 329.754 mo
(7000)
[5.55957 5.56055 5.55957 0 ]xsh
514.922 329.754 mo
(8000)
[5.55957 5.56055 5.55957 0 ]xsh
574.836 329.754 mo
(9000)
[5.55957 5.56055 5.55957 0 ]xsh
632.086 329.754 mo
(10000)
[5.55957 5.56055 5.55957 5.56055 0 ]xsh
705.918 237.507 mo
705.918 244.09 li
705.918 317.674 mo
705.918 311.007 li
@
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
692.086 329.754 mo
(11000)
[5.55957 5.56055 5.55957 5.56055 0 ]xsh
705.918 317.674 mo
699.252 317.674 li
46.252 317.674 mo
52.8354 317.674 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B64EDF881FD1B46AA4313200D115B158939DBC4B511E3DE8A7
A2C87061E3AD61BC46E3FC4F397355F6D0B945BF96B5A442A3C186BC4B9ABEEF
9D8E147A> |-
/F <1C60D8A8C9B7D8BE6A7F94326535FAA07986C834CAA388CDDCF09F279AC0
C95A636B8111A786695724C396B74122C96A7851B6B5C7> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA83C2CBBCD89A1827
CC58FDC85A8DFB6CF043CBC57E481A1BFB4AC131B9751770056C0E80F4764323
078BDA58184A405EE51A0CD263897356EBA37F07634C62A89D13BD3B9631D5DF
BA5DD765A30358A68432555538AB46A7C75E0621846302615DAD8C2BCBD5C891
F7CA482BF295A57FBDF509BCB98518A5F92E5A0834955E87097681F276DFB2BB
C57A72F7985B1447C571181C1100> |-
/T <1C60D8A8C9B7D8BE6A7F943CDC3019E149794C62C67E95CB9BEBC64B60FE
82B0D5A6D777E5507BCD588EFFC6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 65 /A put
dup 70 /F put
dup 83 /S put
dup 84 /T put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 
/three /four /five /six /seven /eight /nine 7{/.notdef}rp 
/A 4{/.notdef}rp /F 7{/.notdef}rp /N 3{/.notdef}rp /R /S 
/T 15{/.notdef}rp /d /e 3{/.notdef}rp /i 5{/.notdef}rp /o 
3{/.notdef}rp /s /.notdef /u 138{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
16 321.332 mo
(FAST)sh
705.918 237.507 mo
699.252 237.507 li
46.252 237.507 mo
52.8354 237.507 li
@
46.252 317.674 mo
46.252 237.507 li
705.918 317.674 mo
705.918 237.507 li
46.252 317.674 mo
705.918 317.674 li
46.252 237.507 mo
705.918 237.507 li
@
89.9854 237.51 mo
89.9854 238.062 89.5376 238.51 88.9854 238.51 cv
88.4336 238.51 87.9854 238.062 87.9854 237.51 cv
87.9854 236.958 88.4336 236.51 88.9854 236.51 cv
89.5376 236.51 89.9854 236.958 89.9854 237.51 cv
.923522 .746761 0 0 cmyk
f
95.1455 237.51 mo
95.1455 238.062 94.6973 238.51 94.1455 238.51 cv
93.5933 238.51 93.1455 238.062 93.1455 237.51 cv
93.1455 236.958 93.5933 236.51 94.1455 236.51 cv
94.6973 236.51 95.1455 236.958 95.1455 237.51 cv
f
98.2656 237.51 mo
98.2656 238.062 97.8174 238.51 97.2656 238.51 cv
96.7134 238.51 96.2656 238.062 96.2656 237.51 cv
96.2656 236.958 96.7134 236.51 97.2656 236.51 cv
97.8174 236.51 98.2656 236.958 98.2656 237.51 cv
f
103.306 237.51 mo
103.306 238.062 102.857 238.51 102.306 238.51 cv
101.753 238.51 101.306 238.062 101.306 237.51 cv
101.306 236.958 101.753 236.51 102.306 236.51 cv
102.857 236.51 103.306 236.958 103.306 237.51 cv
f
105.585 237.51 mo
105.585 238.062 105.138 238.51 104.585 238.51 cv
104.033 238.51 103.585 238.062 103.585 237.51 cv
103.585 236.958 104.033 236.51 104.585 236.51 cv
105.138 236.51 105.585 236.958 105.585 237.51 cv
f
108.585 237.51 mo
108.585 238.062 108.138 238.51 107.585 238.51 cv
107.033 238.51 106.585 238.062 106.585 237.51 cv
106.585 236.958 107.033 236.51 107.585 236.51 cv
108.138 236.51 108.585 236.958 108.585 237.51 cv
f
111.706 237.51 mo
111.706 238.062 111.257 238.51 110.706 238.51 cv
110.153 238.51 109.706 238.062 109.706 237.51 cv
109.706 236.958 110.153 236.51 110.706 236.51 cv
111.257 236.51 111.706 236.958 111.706 237.51 cv
f
116.746 237.51 mo
116.746 238.062 116.297 238.51 115.746 238.51 cv
115.193 238.51 114.746 238.062 114.746 237.51 cv
114.746 236.958 115.193 236.51 115.746 236.51 cv
116.297 236.51 116.746 236.958 116.746 237.51 cv
f
119.865 237.51 mo
119.865 238.062 119.417 238.51 118.865 238.51 cv
118.313 238.51 117.865 238.062 117.865 237.51 cv
117.865 236.958 118.313 236.51 118.865 236.51 cv
119.417 236.51 119.865 236.958 119.865 237.51 cv
f
122.865 237.51 mo
122.865 238.062 122.417 238.51 121.865 238.51 cv
121.313 238.51 120.865 238.062 120.865 237.51 cv
120.865 236.958 121.313 236.51 121.865 236.51 cv
122.417 236.51 122.865 236.958 122.865 237.51 cv
f
127.905 237.51 mo
127.905 238.062 127.458 238.51 126.905 238.51 cv
126.354 238.51 125.905 238.062 125.905 237.51 cv
125.905 236.958 126.354 236.51 126.905 236.51 cv
127.458 236.51 127.905 236.958 127.905 237.51 cv
f
131.025 237.51 mo
131.025 238.062 130.578 238.51 130.025 238.51 cv
129.474 238.51 129.025 238.062 129.025 237.51 cv
129.025 236.958 129.474 236.51 130.025 236.51 cv
130.578 236.51 131.025 236.958 131.025 237.51 cv
f
134.025 237.51 mo
134.025 238.062 133.578 238.51 133.025 238.51 cv
132.474 238.51 132.025 238.062 132.025 237.51 cv
132.025 236.958 132.474 236.51 133.025 236.51 cv
133.578 236.51 134.025 236.958 134.025 237.51 cv
f
137.025 237.51 mo
137.025 238.062 136.578 238.51 136.025 238.51 cv
135.474 238.51 135.025 238.062 135.025 237.51 cv
135.025 236.958 135.474 236.51 136.025 236.51 cv
136.578 236.51 137.025 236.958 137.025 237.51 cv
f
139.186 237.51 mo
139.186 238.062 138.737 238.51 138.186 238.51 cv
137.633 238.51 137.186 238.062 137.186 237.51 cv
137.186 236.958 137.633 236.51 138.186 236.51 cv
138.737 236.51 139.186 236.958 139.186 237.51 cv
f
142.186 237.51 mo
142.186 238.062 141.737 238.51 141.186 238.51 cv
140.633 238.51 140.186 238.062 140.186 237.51 cv
140.186 236.958 140.633 236.51 141.186 236.51 cv
141.737 236.51 142.186 236.958 142.186 237.51 cv
f
145.306 237.51 mo
145.306 238.062 144.857 238.51 144.306 238.51 cv
143.753 238.51 143.306 238.062 143.306 237.51 cv
143.306 236.958 143.753 236.51 144.306 236.51 cv
144.857 236.51 145.306 236.958 145.306 237.51 cv
f
148.306 237.51 mo
148.306 238.062 147.857 238.51 147.306 238.51 cv
146.753 238.51 146.306 238.062 146.306 237.51 cv
146.306 236.958 146.753 236.51 147.306 236.51 cv
147.857 236.51 148.306 236.958 148.306 237.51 cv
f
151.425 237.51 mo
151.425 238.062 150.978 238.51 150.425 238.51 cv
149.874 238.51 149.425 238.062 149.425 237.51 cv
149.425 236.958 149.874 236.51 150.425 236.51 cv
150.978 236.51 151.425 236.958 151.425 237.51 cv
f
154.425 237.51 mo
154.425 238.062 153.978 238.51 153.425 238.51 cv
152.874 238.51 152.425 238.062 152.425 237.51 cv
152.425 236.958 152.874 236.51 153.425 236.51 cv
153.978 236.51 154.425 236.958 154.425 237.51 cv
f
157.545 237.51 mo
157.545 238.062 157.098 238.51 156.545 238.51 cv
155.994 238.51 155.545 238.062 155.545 237.51 cv
155.545 236.958 155.994 236.51 156.545 236.51 cv
157.098 236.51 157.545 236.958 157.545 237.51 cv
f
160.666 237.51 mo
160.666 238.062 160.217 238.51 159.666 238.51 cv
159.113 238.51 158.666 238.062 158.666 237.51 cv
158.666 236.958 159.113 236.51 159.666 236.51 cv
160.217 236.51 160.666 236.958 160.666 237.51 cv
f
163.545 237.51 mo
163.545 238.062 163.098 238.51 162.545 238.51 cv
161.994 238.51 161.545 238.062 161.545 237.51 cv
161.545 236.958 161.994 236.51 162.545 236.51 cv
163.098 236.51 163.545 236.958 163.545 237.51 cv
f
166.786 237.51 mo
166.786 238.062 166.337 238.51 165.786 238.51 cv
165.233 238.51 164.786 238.062 164.786 237.51 cv
164.786 236.958 165.233 236.51 165.786 236.51 cv
166.337 236.51 166.786 236.958 166.786 237.51 cv
f
169.786 237.51 mo
169.786 238.062 169.337 238.51 168.786 238.51 cv
168.233 238.51 167.786 238.062 167.786 237.51 cv
167.786 236.958 168.233 236.51 168.786 236.51 cv
169.337 236.51 169.786 236.958 169.786 237.51 cv
f
172.905 237.51 mo
172.905 238.062 172.458 238.51 171.905 238.51 cv
171.354 238.51 170.905 238.062 170.905 237.51 cv
170.905 236.958 171.354 236.51 171.905 236.51 cv
172.458 236.51 172.905 236.958 172.905 237.51 cv
f
176.025 237.51 mo
176.025 238.062 175.578 238.51 175.025 238.51 cv
174.474 238.51 174.025 238.062 174.025 237.51 cv
174.025 236.958 174.474 236.51 175.025 236.51 cv
175.578 236.51 176.025 236.958 176.025 237.51 cv
f
178.905 237.51 mo
178.905 238.062 178.458 238.51 177.905 238.51 cv
177.354 238.51 176.905 238.062 176.905 237.51 cv
176.905 236.958 177.354 236.51 177.905 236.51 cv
178.458 236.51 178.905 236.958 178.905 237.51 cv
f
181.905 237.51 mo
181.905 238.062 181.458 238.51 180.905 238.51 cv
180.354 238.51 179.905 238.062 179.905 237.51 cv
179.905 236.958 180.354 236.51 180.905 236.51 cv
181.458 236.51 181.905 236.958 181.905 237.51 cv
f
184.905 237.51 mo
184.905 238.062 184.458 238.51 183.905 238.51 cv
183.354 238.51 182.905 238.062 182.905 237.51 cv
182.905 236.958 183.354 236.51 183.905 236.51 cv
184.458 236.51 184.905 236.958 184.905 237.51 cv
f
187.905 237.51 mo
187.905 238.062 187.458 238.51 186.905 238.51 cv
186.354 238.51 185.905 238.062 185.905 237.51 cv
185.905 236.958 186.354 236.51 186.905 236.51 cv
187.458 236.51 187.905 236.958 187.905 237.51 cv
f
190.905 237.51 mo
190.905 238.062 190.458 238.51 189.905 238.51 cv
189.354 238.51 188.905 238.062 188.905 237.51 cv
188.905 236.958 189.354 236.51 189.905 236.51 cv
190.458 236.51 190.905 236.958 190.905 237.51 cv
f
193.065 237.51 mo
193.065 238.062 192.618 238.51 192.065 238.51 cv
191.514 238.51 191.065 238.062 191.065 237.51 cv
191.065 236.958 191.514 236.51 192.065 236.51 cv
192.618 236.51 193.065 236.958 193.065 237.51 cv
f
195.945 237.51 mo
195.945 238.062 195.498 238.51 194.945 238.51 cv
194.394 238.51 193.945 238.062 193.945 237.51 cv
193.945 236.958 194.394 236.51 194.945 236.51 cv
195.498 236.51 195.945 236.958 195.945 237.51 cv
f
199.065 237.51 mo
199.065 238.062 198.618 238.51 198.065 238.51 cv
197.514 238.51 197.065 238.062 197.065 237.51 cv
197.065 236.958 197.514 236.51 198.065 236.51 cv
198.618 236.51 199.065 236.958 199.065 237.51 cv
f
201.945 237.51 mo
201.945 238.062 201.498 238.51 200.945 238.51 cv
200.394 238.51 199.945 238.062 199.945 237.51 cv
199.945 236.958 200.394 236.51 200.945 236.51 cv
201.498 236.51 201.945 236.958 201.945 237.51 cv
f
205.065 237.51 mo
205.065 238.062 204.618 238.51 204.065 238.51 cv
203.514 238.51 203.065 238.062 203.065 237.51 cv
203.065 236.958 203.514 236.51 204.065 236.51 cv
204.618 236.51 205.065 236.958 205.065 237.51 cv
f
207.105 237.51 mo
207.105 238.062 206.657 238.51 206.105 238.51 cv
205.553 238.51 205.105 238.062 205.105 237.51 cv
205.105 236.958 205.553 236.51 206.105 236.51 cv
206.657 236.51 207.105 236.958 207.105 237.51 cv
f
210.105 237.51 mo
210.105 238.062 209.657 238.51 209.105 238.51 cv
208.553 238.51 208.105 238.062 208.105 237.51 cv
208.105 236.958 208.553 236.51 209.105 236.51 cv
209.657 236.51 210.105 236.958 210.105 237.51 cv
f
212.146 237.51 mo
212.146 238.062 211.697 238.51 211.146 238.51 cv
210.593 238.51 210.146 238.062 210.146 237.51 cv
210.146 236.958 210.593 236.51 211.146 236.51 cv
211.697 236.51 212.146 236.958 212.146 237.51 cv
f
214.306 237.51 mo
214.306 238.062 213.857 238.51 213.306 238.51 cv
212.753 238.51 212.306 238.062 212.306 237.51 cv
212.306 236.958 212.753 236.51 213.306 236.51 cv
213.857 236.51 214.306 236.958 214.306 237.51 cv
f
217.425 237.51 mo
217.425 238.062 216.978 238.51 216.425 238.51 cv
215.874 238.51 215.425 238.062 215.425 237.51 cv
215.425 236.958 215.874 236.51 216.425 236.51 cv
216.978 236.51 217.425 236.958 217.425 237.51 cv
f
222.465 237.51 mo
222.465 238.062 222.018 238.51 221.465 238.51 cv
220.914 238.51 220.465 238.062 220.465 237.51 cv
220.465 236.958 220.914 236.51 221.465 236.51 cv
222.018 236.51 222.465 236.958 222.465 237.51 cv
f
225.585 237.51 mo
225.585 238.062 225.138 238.51 224.585 238.51 cv
224.033 238.51 223.585 238.062 223.585 237.51 cv
223.585 236.958 224.033 236.51 224.585 236.51 cv
225.138 236.51 225.585 236.958 225.585 237.51 cv
f
228.585 237.51 mo
228.585 238.062 228.138 238.51 227.585 238.51 cv
227.033 238.51 226.585 238.062 226.585 237.51 cv
226.585 236.958 227.033 236.51 227.585 236.51 cv
228.138 236.51 228.585 236.958 228.585 237.51 cv
f
231.706 237.51 mo
231.706 238.062 231.257 238.51 230.706 238.51 cv
230.153 238.51 229.706 238.062 229.706 237.51 cv
229.706 236.958 230.153 236.51 230.706 236.51 cv
231.257 236.51 231.706 236.958 231.706 237.51 cv
f
233.746 237.51 mo
233.746 238.062 233.297 238.51 232.746 238.51 cv
232.193 238.51 231.746 238.062 231.746 237.51 cv
231.746 236.958 232.193 236.51 232.746 236.51 cv
233.297 236.51 233.746 236.958 233.746 237.51 cv
f
236.746 237.51 mo
236.746 238.062 236.297 238.51 235.746 238.51 cv
235.193 238.51 234.746 238.062 234.746 237.51 cv
234.746 236.958 235.193 236.51 235.746 236.51 cv
236.297 236.51 236.746 236.958 236.746 237.51 cv
f
239.746 237.51 mo
239.746 238.062 239.297 238.51 238.746 238.51 cv
238.193 238.51 237.746 238.062 237.746 237.51 cv
237.746 236.958 238.193 236.51 238.746 236.51 cv
239.297 236.51 239.746 236.958 239.746 237.51 cv
f
241.786 237.51 mo
241.786 238.062 241.337 238.51 240.786 238.51 cv
240.233 238.51 239.786 238.062 239.786 237.51 cv
239.786 236.958 240.233 236.51 240.786 236.51 cv
241.337 236.51 241.786 236.958 241.786 237.51 cv
f
246.585 237.51 mo
246.585 238.062 246.138 238.51 245.585 238.51 cv
245.034 238.51 244.585 238.062 244.585 237.51 cv
244.585 236.958 245.034 236.51 245.585 236.51 cv
246.138 236.51 246.585 236.958 246.585 237.51 cv
f
249.706 237.51 mo
249.706 238.062 249.257 238.51 248.706 238.51 cv
248.153 238.51 247.706 238.062 247.706 237.51 cv
247.706 236.958 248.153 236.51 248.706 236.51 cv
249.257 236.51 249.706 236.958 249.706 237.51 cv
f
252.826 237.51 mo
252.826 238.062 252.377 238.51 251.826 238.51 cv
251.273 238.51 250.826 238.062 250.826 237.51 cv
250.826 236.958 251.273 236.51 251.826 236.51 cv
252.377 236.51 252.826 236.958 252.826 237.51 cv
f
255.706 237.51 mo
255.706 238.062 255.257 238.51 254.706 238.51 cv
254.153 238.51 253.706 238.062 253.706 237.51 cv
253.706 236.958 254.153 236.51 254.706 236.51 cv
255.257 236.51 255.706 236.958 255.706 237.51 cv
f
258.826 237.51 mo
258.826 238.062 258.377 238.51 257.826 238.51 cv
257.273 238.51 256.826 238.062 256.826 237.51 cv
256.826 236.958 257.273 236.51 257.826 236.51 cv
258.377 236.51 258.826 236.958 258.826 237.51 cv
f
260.985 237.51 mo
260.985 238.062 260.538 238.51 259.985 238.51 cv
259.434 238.51 258.985 238.062 258.985 237.51 cv
258.985 236.958 259.434 236.51 259.985 236.51 cv
260.538 236.51 260.985 236.958 260.985 237.51 cv
f
264.105 237.51 mo
264.105 238.062 263.657 238.51 263.105 238.51 cv
262.554 238.51 262.105 238.062 262.105 237.51 cv
262.105 236.958 262.554 236.51 263.105 236.51 cv
263.657 236.51 264.105 236.958 264.105 237.51 cv
f
267.105 237.51 mo
267.105 238.062 266.657 238.51 266.105 238.51 cv
265.554 238.51 265.105 238.062 265.105 237.51 cv
265.105 236.958 265.554 236.51 266.105 236.51 cv
266.657 236.51 267.105 236.958 267.105 237.51 cv
f
269.266 237.51 mo
269.266 238.062 268.817 238.51 268.266 238.51 cv
267.713 238.51 267.266 238.062 267.266 237.51 cv
267.266 236.958 267.713 236.51 268.266 236.51 cv
268.817 236.51 269.266 236.958 269.266 237.51 cv
f
272.266 237.51 mo
272.266 238.062 271.817 238.51 271.266 238.51 cv
270.713 238.51 270.266 238.062 270.266 237.51 cv
270.266 236.958 270.713 236.51 271.266 236.51 cv
271.817 236.51 272.266 236.958 272.266 237.51 cv
f
275.385 237.51 mo
275.385 238.062 274.938 238.51 274.385 238.51 cv
273.833 238.51 273.385 238.062 273.385 237.51 cv
273.385 236.958 273.833 236.51 274.385 236.51 cv
274.938 236.51 275.385 236.958 275.385 237.51 cv
f
278.385 237.51 mo
278.385 238.062 277.938 238.51 277.385 238.51 cv
276.833 238.51 276.385 238.062 276.385 237.51 cv
276.385 236.958 276.833 236.51 277.385 236.51 cv
277.938 236.51 278.385 236.958 278.385 237.51 cv
f
280.666 237.51 mo
280.666 238.062 280.217 238.51 279.666 238.51 cv
279.113 238.51 278.666 238.062 278.666 237.51 cv
278.666 236.958 279.113 236.51 279.666 236.51 cv
280.217 236.51 280.666 236.958 280.666 237.51 cv
f
283.545 237.51 mo
283.545 238.062 283.098 238.51 282.545 238.51 cv
281.994 238.51 281.545 238.062 281.545 237.51 cv
281.545 236.958 281.994 236.51 282.545 236.51 cv
283.098 236.51 283.545 236.958 283.545 237.51 cv
f
288.465 237.51 mo
288.465 238.062 288.018 238.51 287.465 238.51 cv
286.914 238.51 286.465 238.062 286.465 237.51 cv
286.465 236.958 286.914 236.51 287.465 236.51 cv
288.018 236.51 288.465 236.958 288.465 237.51 cv
f
291.465 237.51 mo
291.465 238.062 291.018 238.51 290.465 238.51 cv
289.914 238.51 289.465 238.062 289.465 237.51 cv
289.465 236.958 289.914 236.51 290.465 236.51 cv
291.018 236.51 291.465 236.958 291.465 237.51 cv
f
294.465 237.51 mo
294.465 238.062 294.018 238.51 293.465 238.51 cv
292.914 238.51 292.465 238.062 292.465 237.51 cv
292.465 236.958 292.914 236.51 293.465 236.51 cv
294.018 236.51 294.465 236.958 294.465 237.51 cv
f
297.585 237.51 mo
297.585 238.062 297.138 238.51 296.585 238.51 cv
296.034 238.51 295.585 238.062 295.585 237.51 cv
295.585 236.958 296.034 236.51 296.585 236.51 cv
297.138 236.51 297.585 236.958 297.585 237.51 cv
f
299.746 237.51 mo
299.746 238.062 299.297 238.51 298.746 238.51 cv
298.193 238.51 297.746 238.062 297.746 237.51 cv
297.746 236.958 298.193 236.51 298.746 236.51 cv
299.297 236.51 299.746 236.958 299.746 237.51 cv
f
302.865 237.51 mo
302.865 238.062 302.417 238.51 301.865 238.51 cv
301.313 238.51 300.865 238.062 300.865 237.51 cv
300.865 236.958 301.313 236.51 301.865 236.51 cv
302.417 236.51 302.865 236.958 302.865 237.51 cv
f
307.905 237.51 mo
307.905 238.062 307.458 238.51 306.905 238.51 cv
306.354 238.51 305.905 238.062 305.905 237.51 cv
305.905 236.958 306.354 236.51 306.905 236.51 cv
307.458 236.51 307.905 236.958 307.905 237.51 cv
f
311.146 237.51 mo
311.146 238.062 310.697 238.51 310.146 238.51 cv
309.593 238.51 309.146 238.062 309.146 237.51 cv
309.146 236.958 309.593 236.51 310.146 236.51 cv
310.697 236.51 311.146 236.958 311.146 237.51 cv
f
314.146 237.51 mo
314.146 238.062 313.697 238.51 313.146 238.51 cv
312.593 238.51 312.146 238.062 312.146 237.51 cv
312.146 236.958 312.593 236.51 313.146 236.51 cv
313.697 236.51 314.146 236.958 314.146 237.51 cv
f
317.146 237.51 mo
317.146 238.062 316.697 238.51 316.146 238.51 cv
315.593 238.51 315.146 238.062 315.146 237.51 cv
315.146 236.958 315.593 236.51 316.146 236.51 cv
316.697 236.51 317.146 236.958 317.146 237.51 cv
f
319.306 237.51 mo
319.306 238.062 318.857 238.51 318.306 238.51 cv
317.753 238.51 317.306 238.062 317.306 237.51 cv
317.306 236.958 317.753 236.51 318.306 236.51 cv
318.857 236.51 319.306 236.958 319.306 237.51 cv
f
322.186 237.51 mo
322.186 238.062 321.737 238.51 321.186 238.51 cv
320.633 238.51 320.186 238.062 320.186 237.51 cv
320.186 236.958 320.633 236.51 321.186 236.51 cv
321.737 236.51 322.186 236.958 322.186 237.51 cv
f
324.346 237.51 mo
324.346 238.062 323.897 238.51 323.346 238.51 cv
322.793 238.51 322.346 238.062 322.346 237.51 cv
322.346 236.958 322.793 236.51 323.346 236.51 cv
323.897 236.51 324.346 236.958 324.346 237.51 cv
f
327.346 237.51 mo
327.346 238.062 326.897 238.51 326.346 238.51 cv
325.793 238.51 325.346 238.062 325.346 237.51 cv
325.346 236.958 325.793 236.51 326.346 236.51 cv
326.897 236.51 327.346 236.958 327.346 237.51 cv
f
330.346 237.51 mo
330.346 238.062 329.897 238.51 329.346 238.51 cv
328.793 238.51 328.346 238.062 328.346 237.51 cv
328.346 236.958 328.793 236.51 329.346 236.51 cv
329.897 236.51 330.346 236.958 330.346 237.51 cv
f
333.346 237.51 mo
333.346 238.062 332.897 238.51 332.346 238.51 cv
331.793 238.51 331.346 238.062 331.346 237.51 cv
331.346 236.958 331.793 236.51 332.346 236.51 cv
332.897 236.51 333.346 236.958 333.346 237.51 cv
f
336.346 237.51 mo
336.346 238.062 335.897 238.51 335.346 238.51 cv
334.793 238.51 334.346 238.062 334.346 237.51 cv
334.346 236.958 334.793 236.51 335.346 236.51 cv
335.897 236.51 336.346 236.958 336.346 237.51 cv
f
338.385 237.51 mo
338.385 238.062 337.938 238.51 337.385 238.51 cv
336.833 238.51 336.385 238.062 336.385 237.51 cv
336.385 236.958 336.833 236.51 337.385 236.51 cv
337.938 236.51 338.385 236.958 338.385 237.51 cv
f
341.385 237.51 mo
341.385 238.062 340.938 238.51 340.385 238.51 cv
339.833 238.51 339.385 238.062 339.385 237.51 cv
339.385 236.958 339.833 236.51 340.385 236.51 cv
340.938 236.51 341.385 236.958 341.385 237.51 cv
f
344.385 237.51 mo
344.385 238.062 343.938 238.51 343.385 238.51 cv
342.833 238.51 342.385 238.062 342.385 237.51 cv
342.385 236.958 342.833 236.51 343.385 236.51 cv
343.938 236.51 344.385 236.958 344.385 237.51 cv
f
347.385 237.51 mo
347.385 238.062 346.938 238.51 346.385 238.51 cv
345.833 238.51 345.385 238.062 345.385 237.51 cv
345.385 236.958 345.833 236.51 346.385 236.51 cv
346.938 236.51 347.385 236.958 347.385 237.51 cv
f
350.385 237.51 mo
350.385 238.062 349.938 238.51 349.385 238.51 cv
348.833 238.51 348.385 238.062 348.385 237.51 cv
348.385 236.958 348.833 236.51 349.385 236.51 cv
349.938 236.51 350.385 236.958 350.385 237.51 cv
f
352.425 237.51 mo
352.425 238.062 351.978 238.51 351.425 238.51 cv
350.874 238.51 350.425 238.062 350.425 237.51 cv
350.425 236.958 350.874 236.51 351.425 236.51 cv
351.978 236.51 352.425 236.958 352.425 237.51 cv
f
355.545 237.51 mo
355.545 238.062 355.098 238.51 354.545 238.51 cv
353.994 238.51 353.545 238.062 353.545 237.51 cv
353.545 236.958 353.994 236.51 354.545 236.51 cv
355.098 236.51 355.545 236.958 355.545 237.51 cv
f
357.585 237.51 mo
357.585 238.062 357.138 238.51 356.585 238.51 cv
356.033 238.51 355.585 238.062 355.585 237.51 cv
355.585 236.958 356.033 236.51 356.585 236.51 cv
357.138 236.51 357.585 236.958 357.585 237.51 cv
f
360.706 237.51 mo
360.706 238.062 360.257 238.51 359.706 238.51 cv
359.153 238.51 358.706 238.062 358.706 237.51 cv
358.706 236.958 359.153 236.51 359.706 236.51 cv
360.257 236.51 360.706 236.958 360.706 237.51 cv
f
362.745 237.51 mo
362.745 238.062 362.297 238.51 361.745 238.51 cv
361.193 238.51 360.746 238.062 360.746 237.51 cv
360.746 236.958 361.193 236.51 361.745 236.51 cv
362.297 236.51 362.745 236.958 362.745 237.51 cv
f
365.866 237.51 mo
365.866 238.062 365.417 238.51 364.866 238.51 cv
364.313 238.51 363.866 238.062 363.866 237.51 cv
363.866 236.958 364.313 236.51 364.866 236.51 cv
365.417 236.51 365.866 236.958 365.866 237.51 cv
f
368.026 237.51 mo
368.026 238.062 367.577 238.51 367.026 238.51 cv
366.473 238.51 366.026 238.062 366.026 237.51 cv
366.026 236.958 366.473 236.51 367.026 236.51 cv
367.577 236.51 368.026 236.958 368.026 237.51 cv
f
373.065 237.51 mo
373.065 238.062 372.618 238.51 372.065 238.51 cv
371.514 238.51 371.065 238.062 371.065 237.51 cv
371.065 236.958 371.514 236.51 372.065 236.51 cv
372.618 236.51 373.065 236.958 373.065 237.51 cv
f
376.186 237.51 mo
376.186 238.062 375.737 238.51 375.186 238.51 cv
374.633 238.51 374.186 238.062 374.186 237.51 cv
374.186 236.958 374.633 236.51 375.186 236.51 cv
375.737 236.51 376.186 236.958 376.186 237.51 cv
f
381.225 237.51 mo
381.225 238.062 380.778 238.51 380.225 238.51 cv
379.674 238.51 379.225 238.062 379.225 237.51 cv
379.225 236.958 379.674 236.51 380.225 236.51 cv
380.778 236.51 381.225 236.958 381.225 237.51 cv
f
384.225 237.51 mo
384.225 238.062 383.778 238.51 383.225 238.51 cv
382.674 238.51 382.225 238.062 382.225 237.51 cv
382.225 236.958 382.674 236.51 383.225 236.51 cv
383.778 236.51 384.225 236.958 384.225 237.51 cv
f
387.346 237.51 mo
387.346 238.062 386.897 238.51 386.346 238.51 cv
385.793 238.51 385.346 238.062 385.346 237.51 cv
385.346 236.958 385.793 236.51 386.346 236.51 cv
386.897 236.51 387.346 236.958 387.346 237.51 cv
f
389.385 237.51 mo
389.385 238.062 388.938 238.51 388.385 238.51 cv
387.833 238.51 387.385 238.062 387.385 237.51 cv
387.385 236.958 387.833 236.51 388.385 236.51 cv
388.938 236.51 389.385 236.958 389.385 237.51 cv
f
392.385 237.51 mo
392.385 238.062 391.938 238.51 391.385 238.51 cv
390.833 238.51 390.385 238.062 390.385 237.51 cv
390.385 236.958 390.833 236.51 391.385 236.51 cv
391.938 236.51 392.385 236.958 392.385 237.51 cv
f
394.426 237.51 mo
394.426 238.062 393.977 238.51 393.426 238.51 cv
392.874 238.51 392.426 238.062 392.426 237.51 cv
392.426 236.958 392.874 236.51 393.426 236.51 cv
393.977 236.51 394.426 236.958 394.426 237.51 cv
f
396.706 237.51 mo
396.706 238.062 396.258 238.51 395.706 238.51 cv
395.153 238.51 394.706 238.062 394.706 237.51 cv
394.706 236.958 395.153 236.51 395.706 236.51 cv
396.258 236.51 396.706 236.958 396.706 237.51 cv
f
401.745 237.51 mo
401.745 238.062 401.297 238.51 400.745 238.51 cv
400.194 238.51 399.745 238.062 399.745 237.51 cv
399.745 236.958 400.194 236.51 400.745 236.51 cv
401.297 236.51 401.745 236.958 401.745 237.51 cv
f
406.905 237.51 mo
406.905 238.062 406.458 238.51 405.905 238.51 cv
405.354 238.51 404.905 238.062 404.905 237.51 cv
404.905 236.958 405.354 236.51 405.905 236.51 cv
406.458 236.51 406.905 236.958 406.905 237.51 cv
f
408.946 237.51 mo
408.946 238.062 408.497 238.51 407.946 238.51 cv
407.393 238.51 406.946 238.062 406.946 237.51 cv
406.946 236.958 407.393 236.51 407.946 236.51 cv
408.497 236.51 408.946 236.958 408.946 237.51 cv
f
411.106 237.51 mo
411.106 238.062 410.657 238.51 410.106 238.51 cv
409.553 238.51 409.106 238.062 409.106 237.51 cv
409.106 236.958 409.553 236.51 410.106 236.51 cv
410.657 236.51 411.106 236.958 411.106 237.51 cv
f
413.985 237.51 mo
413.985 238.062 413.538 238.51 412.985 238.51 cv
412.434 238.51 411.985 238.062 411.985 237.51 cv
411.985 236.958 412.434 236.51 412.985 236.51 cv
413.538 236.51 413.985 236.958 413.985 237.51 cv
f
416.026 237.51 mo
416.026 238.062 415.577 238.51 415.026 238.51 cv
414.473 238.51 414.026 238.062 414.026 237.51 cv
414.026 236.958 414.473 236.51 415.026 236.51 cv
415.577 236.51 416.026 236.958 416.026 237.51 cv
f
418.065 237.51 mo
418.065 238.062 417.618 238.51 417.065 238.51 cv
416.514 238.51 416.065 238.062 416.065 237.51 cv
416.065 236.958 416.514 236.51 417.065 236.51 cv
417.618 236.51 418.065 236.958 418.065 237.51 cv
f
421.065 237.51 mo
421.065 238.062 420.618 238.51 420.065 238.51 cv
419.514 238.51 419.065 238.062 419.065 237.51 cv
419.065 236.958 419.514 236.51 420.065 236.51 cv
420.618 236.51 421.065 236.958 421.065 237.51 cv
f
423.946 237.51 mo
423.946 238.062 423.497 238.51 422.946 238.51 cv
422.393 238.51 421.946 238.062 421.946 237.51 cv
421.946 236.958 422.393 236.51 422.946 236.51 cv
423.497 236.51 423.946 236.958 423.946 237.51 cv
f
426.946 237.51 mo
426.946 238.062 426.497 238.51 425.946 238.51 cv
425.393 238.51 424.946 238.062 424.946 237.51 cv
424.946 236.958 425.393 236.51 425.946 236.51 cv
426.497 236.51 426.946 236.958 426.946 237.51 cv
f
429.825 237.51 mo
429.825 238.062 429.377 238.51 428.825 238.51 cv
428.274 238.51 427.825 238.062 427.825 237.51 cv
427.825 236.958 428.274 236.51 428.825 236.51 cv
429.377 236.51 429.825 236.958 429.825 237.51 cv
f
431.866 237.51 mo
431.866 238.062 431.418 238.51 430.866 238.51 cv
430.313 238.51 429.866 238.062 429.866 237.51 cv
429.866 236.958 430.313 236.51 430.866 236.51 cv
431.418 236.51 431.866 236.958 431.866 237.51 cv
f
434.985 237.51 mo
434.985 238.062 434.538 238.51 433.985 238.51 cv
433.434 238.51 432.985 238.062 432.985 237.51 cv
432.985 236.958 433.434 236.51 433.985 236.51 cv
434.538 236.51 434.985 236.958 434.985 237.51 cv
f
437.866 237.51 mo
437.866 238.062 437.418 238.51 436.866 238.51 cv
436.313 238.51 435.866 238.062 435.866 237.51 cv
435.866 236.958 436.313 236.51 436.866 236.51 cv
437.418 236.51 437.866 236.958 437.866 237.51 cv
f
440.985 237.51 mo
440.985 238.062 440.538 238.51 439.985 238.51 cv
439.434 238.51 438.985 238.062 438.985 237.51 cv
438.985 236.958 439.434 236.51 439.985 236.51 cv
440.538 236.51 440.985 236.958 440.985 237.51 cv
f
443.985 237.51 mo
443.985 238.062 443.538 238.51 442.985 238.51 cv
442.434 238.51 441.985 238.062 441.985 237.51 cv
441.985 236.958 442.434 236.51 442.985 236.51 cv
443.538 236.51 443.985 236.958 443.985 237.51 cv
f
446.985 237.51 mo
446.985 238.062 446.538 238.51 445.985 238.51 cv
445.434 238.51 444.985 238.062 444.985 237.51 cv
444.985 236.958 445.434 236.51 445.985 236.51 cv
446.538 236.51 446.985 236.958 446.985 237.51 cv
f
452.026 237.51 mo
452.026 238.062 451.577 238.51 451.026 238.51 cv
450.473 238.51 450.026 238.062 450.026 237.51 cv
450.026 236.958 450.473 236.51 451.026 236.51 cv
451.577 236.51 452.026 236.958 452.026 237.51 cv
f
455.145 237.51 mo
455.145 238.062 454.698 238.51 454.145 238.51 cv
453.594 238.51 453.145 238.062 453.145 237.51 cv
453.145 236.958 453.594 236.51 454.145 236.51 cv
454.698 236.51 455.145 236.958 455.145 237.51 cv
f
457.305 237.51 mo
457.305 238.062 456.858 238.51 456.305 238.51 cv
455.754 238.51 455.305 238.062 455.305 237.51 cv
455.305 236.958 455.754 236.51 456.305 236.51 cv
456.858 236.51 457.305 236.958 457.305 237.51 cv
f
460.426 237.51 mo
460.426 238.062 459.977 238.51 459.426 238.51 cv
458.874 238.51 458.426 238.062 458.426 237.51 cv
458.426 236.958 458.874 236.51 459.426 236.51 cv
459.977 236.51 460.426 236.958 460.426 237.51 cv
f
462.586 237.51 mo
462.586 238.062 462.137 238.51 461.586 238.51 cv
461.034 238.51 460.586 238.062 460.586 237.51 cv
460.586 236.958 461.034 236.51 461.586 236.51 cv
462.137 236.51 462.586 236.958 462.586 237.51 cv
f
464.745 237.51 mo
464.745 238.062 464.297 238.51 463.745 238.51 cv
463.194 238.51 462.745 238.062 462.745 237.51 cv
462.745 236.958 463.194 236.51 463.745 236.51 cv
464.297 236.51 464.745 236.958 464.745 237.51 cv
f
466.905 237.51 mo
466.905 238.062 466.458 238.51 465.905 238.51 cv
465.354 238.51 464.905 238.062 464.905 237.51 cv
464.905 236.958 465.354 236.51 465.905 236.51 cv
466.458 236.51 466.905 236.958 466.905 237.51 cv
f
469.065 237.51 mo
469.065 238.062 468.618 238.51 468.065 238.51 cv
467.514 238.51 467.065 238.062 467.065 237.51 cv
467.065 236.958 467.514 236.51 468.065 236.51 cv
468.618 236.51 469.065 236.958 469.065 237.51 cv
f
471.946 237.51 mo
471.946 238.062 471.497 238.51 470.946 238.51 cv
470.393 238.51 469.946 238.062 469.946 237.51 cv
469.946 236.958 470.393 236.51 470.946 236.51 cv
471.497 236.51 471.946 236.958 471.946 237.51 cv
f
475.065 237.51 mo
475.065 238.062 474.618 238.51 474.065 238.51 cv
473.514 238.51 473.065 238.062 473.065 237.51 cv
473.065 236.958 473.514 236.51 474.065 236.51 cv
474.618 236.51 475.065 236.958 475.065 237.51 cv
f
479.506 237.51 mo
479.506 238.062 479.057 238.51 478.506 238.51 cv
477.954 238.51 477.506 238.062 477.506 237.51 cv
477.506 236.958 477.954 236.51 478.506 236.51 cv
479.057 236.51 479.506 236.958 479.506 237.51 cv
f
482.506 237.51 mo
482.506 238.062 482.057 238.51 481.506 238.51 cv
480.954 238.51 480.506 238.062 480.506 237.51 cv
480.506 236.958 480.954 236.51 481.506 236.51 cv
482.057 236.51 482.506 236.958 482.506 237.51 cv
f
485.506 237.51 mo
485.506 238.062 485.057 238.51 484.506 238.51 cv
483.954 238.51 483.506 238.062 483.506 237.51 cv
483.506 236.958 483.954 236.51 484.506 236.51 cv
485.057 236.51 485.506 236.958 485.506 237.51 cv
f
488.506 237.51 mo
488.506 238.062 488.057 238.51 487.506 238.51 cv
486.954 238.51 486.506 238.062 486.506 237.51 cv
486.506 236.958 486.954 236.51 487.506 236.51 cv
488.057 236.51 488.506 236.958 488.506 237.51 cv
f
491.625 237.51 mo
491.625 238.062 491.178 238.51 490.625 238.51 cv
490.073 238.51 489.625 238.062 489.625 237.51 cv
489.625 236.958 490.073 236.51 490.625 236.51 cv
491.178 236.51 491.625 236.958 491.625 237.51 cv
f
494.625 237.51 mo
494.625 238.062 494.178 238.51 493.625 238.51 cv
493.073 238.51 492.625 238.062 492.625 237.51 cv
492.625 236.958 493.073 236.51 493.625 236.51 cv
494.178 236.51 494.625 236.958 494.625 237.51 cv
f
496.786 237.51 mo
496.786 238.062 496.338 238.51 495.786 238.51 cv
495.233 238.51 494.786 238.062 494.786 237.51 cv
494.786 236.958 495.233 236.51 495.786 236.51 cv
496.338 236.51 496.786 236.958 496.786 237.51 cv
f
499.786 237.51 mo
499.786 238.062 499.338 238.51 498.786 238.51 cv
498.233 238.51 497.786 238.062 497.786 237.51 cv
497.786 236.958 498.233 236.51 498.786 236.51 cv
499.338 236.51 499.786 236.958 499.786 237.51 cv
f
502.905 237.51 mo
502.905 238.062 502.458 238.51 501.905 238.51 cv
501.354 238.51 500.905 238.062 500.905 237.51 cv
500.905 236.958 501.354 236.51 501.905 236.51 cv
502.458 236.51 502.905 236.958 502.905 237.51 cv
f
505.905 237.51 mo
505.905 238.062 505.458 238.51 504.905 238.51 cv
504.354 238.51 503.905 238.062 503.905 237.51 cv
503.905 236.958 504.354 236.51 504.905 236.51 cv
505.458 236.51 505.905 236.958 505.905 237.51 cv
f
509.026 237.51 mo
509.026 238.062 508.577 238.51 508.026 238.51 cv
507.473 238.51 507.026 238.062 507.026 237.51 cv
507.026 236.958 507.473 236.51 508.026 236.51 cv
508.577 236.51 509.026 236.958 509.026 237.51 cv
f
511.186 237.51 mo
511.186 238.062 510.737 238.51 510.186 238.51 cv
509.633 238.51 509.186 238.062 509.186 237.51 cv
509.186 236.958 509.633 236.51 510.186 236.51 cv
510.737 236.51 511.186 236.958 511.186 237.51 cv
f
514.186 237.51 mo
514.186 238.062 513.737 238.51 513.186 238.51 cv
512.633 238.51 512.186 238.062 512.186 237.51 cv
512.186 236.958 512.633 236.51 513.186 236.51 cv
513.737 236.51 514.186 236.958 514.186 237.51 cv
f
516.346 237.51 mo
516.346 238.062 515.897 238.51 515.346 238.51 cv
514.793 238.51 514.346 238.062 514.346 237.51 cv
514.346 236.958 514.793 236.51 515.346 236.51 cv
515.897 236.51 516.346 236.958 516.346 237.51 cv
f
519.465 237.51 mo
519.465 238.062 519.018 238.51 518.465 238.51 cv
517.913 238.51 517.465 238.062 517.465 237.51 cv
517.465 236.958 517.913 236.51 518.465 236.51 cv
519.018 236.51 519.465 236.958 519.465 237.51 cv
f
522.706 237.51 mo
522.706 238.062 522.258 238.51 521.706 238.51 cv
521.153 238.51 520.706 238.062 520.706 237.51 cv
520.706 236.958 521.153 236.51 521.706 236.51 cv
522.258 236.51 522.706 236.958 522.706 237.51 cv
f
525.706 237.51 mo
525.706 238.062 525.258 238.51 524.706 238.51 cv
524.153 238.51 523.706 238.062 523.706 237.51 cv
523.706 236.958 524.153 236.51 524.706 236.51 cv
525.258 236.51 525.706 236.958 525.706 237.51 cv
f
528.825 237.51 mo
528.825 238.062 528.377 238.51 527.825 238.51 cv
527.274 238.51 526.825 238.062 526.825 237.51 cv
526.825 236.958 527.274 236.51 527.825 236.51 cv
528.377 236.51 528.825 236.958 528.825 237.51 cv
f
530.985 237.51 mo
530.985 238.062 530.538 238.51 529.985 238.51 cv
529.434 238.51 528.985 238.062 528.985 237.51 cv
528.985 236.958 529.434 236.51 529.985 236.51 cv
530.538 236.51 530.985 236.958 530.985 237.51 cv
f
533.026 237.51 mo
533.026 238.062 532.577 238.51 532.026 238.51 cv
531.473 238.51 531.026 238.062 531.026 237.51 cv
531.026 236.958 531.473 236.51 532.026 236.51 cv
532.577 236.51 533.026 236.958 533.026 237.51 cv
f
536.026 237.51 mo
536.026 238.062 535.577 238.51 535.026 238.51 cv
534.473 238.51 534.026 238.062 534.026 237.51 cv
534.026 236.958 534.473 236.51 535.026 236.51 cv
535.577 236.51 536.026 236.958 536.026 237.51 cv
f
539.026 237.51 mo
539.026 238.062 538.577 238.51 538.026 238.51 cv
537.473 238.51 537.026 238.062 537.026 237.51 cv
537.026 236.958 537.473 236.51 538.026 236.51 cv
538.577 236.51 539.026 236.958 539.026 237.51 cv
f
542.026 237.51 mo
542.026 238.062 541.577 238.51 541.026 238.51 cv
540.473 238.51 540.026 238.062 540.026 237.51 cv
540.026 236.958 540.473 236.51 541.026 236.51 cv
541.577 236.51 542.026 236.958 542.026 237.51 cv
f
544.065 237.51 mo
544.065 238.062 543.618 238.51 543.065 238.51 cv
542.514 238.51 542.065 238.062 542.065 237.51 cv
542.065 236.958 542.514 236.51 543.065 236.51 cv
543.618 236.51 544.065 236.958 544.065 237.51 cv
f
547.065 237.51 mo
547.065 238.062 546.618 238.51 546.065 238.51 cv
545.514 238.51 545.065 238.062 545.065 237.51 cv
545.065 236.958 545.514 236.51 546.065 236.51 cv
546.618 236.51 547.065 236.958 547.065 237.51 cv
f
550.065 237.51 mo
550.065 238.062 549.618 238.51 549.065 238.51 cv
548.514 238.51 548.065 238.062 548.065 237.51 cv
548.065 236.958 548.514 236.51 549.065 236.51 cv
549.618 236.51 550.065 236.958 550.065 237.51 cv
f
552.225 237.51 mo
552.225 238.062 551.778 238.51 551.225 238.51 cv
550.674 238.51 550.225 238.062 550.225 237.51 cv
550.225 236.958 550.674 236.51 551.225 236.51 cv
551.778 236.51 552.225 236.958 552.225 237.51 cv
f
554.266 237.51 mo
554.266 238.062 553.817 238.51 553.266 238.51 cv
552.713 238.51 552.266 238.062 552.266 237.51 cv
552.266 236.958 552.713 236.51 553.266 236.51 cv
553.817 236.51 554.266 236.958 554.266 237.51 cv
f
557.385 237.51 mo
557.385 238.062 556.938 238.51 556.385 238.51 cv
555.833 238.51 555.385 238.062 555.385 237.51 cv
555.385 236.958 555.833 236.51 556.385 236.51 cv
556.938 236.51 557.385 236.958 557.385 237.51 cv
f
559.426 237.51 mo
559.426 238.062 558.977 238.51 558.426 238.51 cv
557.874 238.51 557.426 238.062 557.426 237.51 cv
557.426 236.958 557.874 236.51 558.426 236.51 cv
558.977 236.51 559.426 236.958 559.426 237.51 cv
f
562.426 237.51 mo
562.426 238.062 561.977 238.51 561.426 238.51 cv
560.874 238.51 560.426 238.062 560.426 237.51 cv
560.426 236.958 560.874 236.51 561.426 236.51 cv
561.977 236.51 562.426 236.958 562.426 237.51 cv
f
565.545 237.51 mo
565.545 238.062 565.098 238.51 564.545 238.51 cv
563.993 238.51 563.545 238.062 563.545 237.51 cv
563.545 236.958 563.993 236.51 564.545 236.51 cv
565.098 236.51 565.545 236.958 565.545 237.51 cv
f
568.426 237.51 mo
568.426 238.062 567.977 238.51 567.426 238.51 cv
566.874 238.51 566.426 238.062 566.426 237.51 cv
566.426 236.958 566.874 236.51 567.426 236.51 cv
567.977 236.51 568.426 236.958 568.426 237.51 cv
f
571.545 237.51 mo
571.545 238.062 571.098 238.51 570.545 238.51 cv
569.993 238.51 569.545 238.062 569.545 237.51 cv
569.545 236.958 569.993 236.51 570.545 236.51 cv
571.098 236.51 571.545 236.958 571.545 237.51 cv
f
574.665 237.51 mo
574.665 238.062 574.217 238.51 573.665 238.51 cv
573.114 238.51 572.665 238.062 572.665 237.51 cv
572.665 236.958 573.114 236.51 573.665 236.51 cv
574.217 236.51 574.665 236.958 574.665 237.51 cv
f
577.665 237.51 mo
577.665 238.062 577.217 238.51 576.665 238.51 cv
576.114 238.51 575.665 238.062 575.665 237.51 cv
575.665 236.958 576.114 236.51 576.665 236.51 cv
577.217 236.51 577.665 236.958 577.665 237.51 cv
f
580.665 237.51 mo
580.665 238.062 580.217 238.51 579.665 238.51 cv
579.114 238.51 578.665 238.062 578.665 237.51 cv
578.665 236.958 579.114 236.51 579.665 236.51 cv
580.217 236.51 580.665 236.958 580.665 237.51 cv
f
583.665 237.51 mo
583.665 238.062 583.217 238.51 582.665 238.51 cv
582.114 238.51 581.665 238.062 581.665 237.51 cv
581.665 236.958 582.114 236.51 582.665 236.51 cv
583.217 236.51 583.665 236.958 583.665 237.51 cv
f
586.786 237.51 mo
586.786 238.062 586.338 238.51 585.786 238.51 cv
585.233 238.51 584.786 238.062 584.786 237.51 cv
584.786 236.958 585.233 236.51 585.786 236.51 cv
586.338 236.51 586.786 236.958 586.786 237.51 cv
f
589.786 237.51 mo
589.786 238.062 589.338 238.51 588.786 238.51 cv
588.233 238.51 587.786 238.062 587.786 237.51 cv
587.786 236.958 588.233 236.51 588.786 236.51 cv
589.338 236.51 589.786 236.958 589.786 237.51 cv
f
592.905 237.51 mo
592.905 238.062 592.458 238.51 591.905 238.51 cv
591.354 238.51 590.905 238.062 590.905 237.51 cv
590.905 236.958 591.354 236.51 591.905 236.51 cv
592.458 236.51 592.905 236.958 592.905 237.51 cv
f
595.905 237.51 mo
595.905 238.062 595.458 238.51 594.905 238.51 cv
594.354 238.51 593.905 238.062 593.905 237.51 cv
593.905 236.958 594.354 236.51 594.905 236.51 cv
595.458 236.51 595.905 236.958 595.905 237.51 cv
f
599.026 237.51 mo
599.026 238.062 598.577 238.51 598.026 238.51 cv
597.473 238.51 597.026 238.062 597.026 237.51 cv
597.026 236.958 597.473 236.51 598.026 236.51 cv
598.577 236.51 599.026 236.958 599.026 237.51 cv
f
604.065 237.51 mo
604.065 238.062 603.618 238.51 603.065 238.51 cv
602.514 238.51 602.065 238.062 602.065 237.51 cv
602.065 236.958 602.514 236.51 603.065 236.51 cv
603.618 236.51 604.065 236.958 604.065 237.51 cv
f
607.065 237.51 mo
607.065 238.062 606.618 238.51 606.065 238.51 cv
605.514 238.51 605.065 238.062 605.065 237.51 cv
605.065 236.958 605.514 236.51 606.065 236.51 cv
606.618 236.51 607.065 236.958 607.065 237.51 cv
f
610.186 237.51 mo
610.186 238.062 609.737 238.51 609.186 238.51 cv
608.633 238.51 608.186 238.062 608.186 237.51 cv
608.186 236.958 608.633 236.51 609.186 236.51 cv
609.737 236.51 610.186 236.958 610.186 237.51 cv
f
612.346 237.51 mo
612.346 238.062 611.897 238.51 611.346 238.51 cv
610.793 238.51 610.346 238.062 610.346 237.51 cv
610.346 236.958 610.793 236.51 611.346 236.51 cv
611.897 236.51 612.346 236.958 612.346 237.51 cv
f
615.346 237.51 mo
615.346 238.062 614.897 238.51 614.346 238.51 cv
613.793 238.51 613.346 238.062 613.346 237.51 cv
613.346 236.958 613.793 236.51 614.346 236.51 cv
614.897 236.51 615.346 236.958 615.346 237.51 cv
f
618.346 237.51 mo
618.346 238.062 617.897 238.51 617.346 238.51 cv
616.793 238.51 616.346 238.062 616.346 237.51 cv
616.346 236.958 616.793 236.51 617.346 236.51 cv
617.897 236.51 618.346 236.958 618.346 237.51 cv
f
621.346 237.51 mo
621.346 238.062 620.897 238.51 620.346 238.51 cv
619.793 238.51 619.346 238.062 619.346 237.51 cv
619.346 236.958 619.793 236.51 620.346 236.51 cv
620.897 236.51 621.346 236.958 621.346 237.51 cv
f
624.346 237.51 mo
624.346 238.062 623.897 238.51 623.346 238.51 cv
622.793 238.51 622.346 238.062 622.346 237.51 cv
622.346 236.958 622.793 236.51 623.346 236.51 cv
623.897 236.51 624.346 236.958 624.346 237.51 cv
f
626.385 237.51 mo
626.385 238.062 625.938 238.51 625.385 238.51 cv
624.834 238.51 624.385 238.062 624.385 237.51 cv
624.385 236.958 624.834 236.51 625.385 236.51 cv
625.938 236.51 626.385 236.958 626.385 237.51 cv
f
629.385 237.51 mo
629.385 238.062 628.938 238.51 628.385 238.51 cv
627.834 238.51 627.385 238.062 627.385 237.51 cv
627.385 236.958 627.834 236.51 628.385 236.51 cv
628.938 236.51 629.385 236.958 629.385 237.51 cv
f
631.545 237.51 mo
631.545 238.062 631.098 238.51 630.545 238.51 cv
629.993 238.51 629.545 238.062 629.545 237.51 cv
629.545 236.958 629.993 236.51 630.545 236.51 cv
631.098 236.51 631.545 236.958 631.545 237.51 cv
f
634.426 237.51 mo
634.426 238.062 633.977 238.51 633.426 238.51 cv
632.874 238.51 632.426 238.062 632.426 237.51 cv
632.426 236.958 632.874 236.51 633.426 236.51 cv
633.977 236.51 634.426 236.958 634.426 237.51 cv
f
636.586 237.51 mo
636.586 238.062 636.137 238.51 635.586 238.51 cv
635.034 238.51 634.586 238.062 634.586 237.51 cv
634.586 236.958 635.034 236.51 635.586 236.51 cv
636.137 236.51 636.586 236.958 636.586 237.51 cv
f
638.745 237.51 mo
638.745 238.062 638.297 238.51 637.745 238.51 cv
637.194 238.51 636.745 238.062 636.745 237.51 cv
636.745 236.958 637.194 236.51 637.745 236.51 cv
638.297 236.51 638.745 236.958 638.745 237.51 cv
f
641.625 237.51 mo
641.625 238.062 641.178 238.51 640.625 238.51 cv
640.073 238.51 639.625 238.062 639.625 237.51 cv
639.625 236.958 640.073 236.51 640.625 236.51 cv
641.178 236.51 641.625 236.958 641.625 237.51 cv
f
134.746 317.67 mo
134.746 318.222 134.297 318.67 133.746 318.67 cv
133.193 318.67 132.746 318.222 132.746 317.67 cv
132.746 317.118 133.193 316.67 133.746 316.67 cv
134.297 316.67 134.746 317.118 134.746 317.67 cv
0 .960204 .946044 0 cmyk
f
139.786 317.67 mo
139.786 318.222 139.337 318.67 138.786 318.67 cv
138.233 318.67 137.786 318.222 137.786 317.67 cv
137.786 317.118 138.233 316.67 138.786 316.67 cv
139.337 316.67 139.786 317.118 139.786 317.67 cv
f
144.105 317.67 mo
144.105 318.222 143.657 318.67 143.105 318.67 cv
142.553 318.67 142.105 318.222 142.105 317.67 cv
142.105 317.118 142.553 316.67 143.105 316.67 cv
143.657 316.67 144.105 317.118 144.105 317.67 cv
f
148.186 317.67 mo
148.186 318.222 147.737 318.67 147.186 318.67 cv
146.633 318.67 146.186 318.222 146.186 317.67 cv
146.186 317.118 146.633 316.67 147.186 316.67 cv
147.737 316.67 148.186 317.118 148.186 317.67 cv
f
150.346 317.67 mo
150.346 318.222 149.897 318.67 149.346 318.67 cv
148.793 318.67 148.346 318.222 148.346 317.67 cv
148.346 317.118 148.793 316.67 149.346 316.67 cv
149.897 316.67 150.346 317.118 150.346 317.67 cv
f
153.465 317.67 mo
153.465 318.222 153.018 318.67 152.465 318.67 cv
151.914 318.67 151.465 318.222 151.465 317.67 cv
151.465 317.118 151.914 316.67 152.465 316.67 cv
153.018 316.67 153.465 317.118 153.465 317.67 cv
f
154.666 317.67 mo
154.666 318.222 154.217 318.67 153.666 318.67 cv
153.113 318.67 152.666 318.222 152.666 317.67 cv
152.666 317.118 153.113 316.67 153.666 316.67 cv
154.217 316.67 154.666 317.118 154.666 317.67 cv
f
159.226 317.67 mo
159.226 318.222 158.777 318.67 158.226 318.67 cv
157.673 318.67 157.226 318.222 157.226 317.67 cv
157.226 317.118 157.673 316.67 158.226 316.67 cv
158.777 316.67 159.226 317.118 159.226 317.67 cv
f
162.465 317.67 mo
162.465 318.222 162.018 318.67 161.465 318.67 cv
160.914 318.67 160.465 318.222 160.465 317.67 cv
160.465 317.118 160.914 316.67 161.465 316.67 cv
162.018 316.67 162.465 317.118 162.465 317.67 cv
f
165.465 317.67 mo
165.465 318.222 165.018 318.67 164.465 318.67 cv
163.914 318.67 163.465 318.222 163.465 317.67 cv
163.465 317.118 163.914 316.67 164.465 316.67 cv
165.018 316.67 165.465 317.118 165.465 317.67 cv
f
168.105 317.67 mo
168.105 318.222 167.657 318.67 167.105 318.67 cv
166.553 318.67 166.105 318.222 166.105 317.67 cv
166.105 317.118 166.553 316.67 167.105 316.67 cv
167.657 316.67 168.105 317.118 168.105 317.67 cv
f
172.666 317.67 mo
172.666 318.222 172.217 318.67 171.666 318.67 cv
171.113 318.67 170.666 318.222 170.666 317.67 cv
170.666 317.118 171.113 316.67 171.666 316.67 cv
172.217 316.67 172.666 317.118 172.666 317.67 cv
f
175.666 317.67 mo
175.666 318.222 175.217 318.67 174.666 318.67 cv
174.113 318.67 173.666 318.222 173.666 317.67 cv
173.666 317.118 174.113 316.67 174.666 316.67 cv
175.217 316.67 175.666 317.118 175.666 317.67 cv
f
180.226 317.67 mo
180.226 318.222 179.777 318.67 179.226 318.67 cv
178.673 318.67 178.226 318.222 178.226 317.67 cv
178.226 317.118 178.673 316.67 179.226 316.67 cv
179.777 316.67 180.226 317.118 180.226 317.67 cv
f
184.425 317.67 mo
184.425 318.222 183.978 318.67 183.425 318.67 cv
182.874 318.67 182.425 318.222 182.425 317.67 cv
182.425 317.118 182.874 316.67 183.425 316.67 cv
183.978 316.67 184.425 317.118 184.425 317.67 cv
f
188.865 317.67 mo
188.865 318.222 188.417 318.67 187.865 318.67 cv
187.313 318.67 186.865 318.222 186.865 317.67 cv
186.865 317.118 187.313 316.67 187.865 316.67 cv
188.417 316.67 188.865 317.118 188.865 317.67 cv
f
193.786 317.67 mo
193.786 318.222 193.337 318.67 192.786 318.67 cv
192.233 318.67 191.786 318.222 191.786 317.67 cv
191.786 317.118 192.233 316.67 192.786 316.67 cv
193.337 316.67 193.786 317.118 193.786 317.67 cv
f
196.186 317.67 mo
196.186 318.222 195.737 318.67 195.186 318.67 cv
194.633 318.67 194.186 318.222 194.186 317.67 cv
194.186 317.118 194.633 316.67 195.186 316.67 cv
195.737 316.67 196.186 317.118 196.186 317.67 cv
f
200.146 317.67 mo
200.146 318.222 199.697 318.67 199.146 318.67 cv
198.593 318.67 198.146 318.222 198.146 317.67 cv
198.146 317.118 198.593 316.67 199.146 316.67 cv
199.697 316.67 200.146 317.118 200.146 317.67 cv
f
203.865 317.67 mo
203.865 318.222 203.417 318.67 202.865 318.67 cv
202.313 318.67 201.865 318.222 201.865 317.67 cv
201.865 317.118 202.313 316.67 202.865 316.67 cv
203.417 316.67 203.865 317.118 203.865 317.67 cv
f
206.266 317.67 mo
206.266 318.222 205.817 318.67 205.266 318.67 cv
204.713 318.67 204.266 318.222 204.266 317.67 cv
204.266 317.118 204.713 316.67 205.266 316.67 cv
205.817 316.67 206.266 317.118 206.266 317.67 cv
f
209.985 317.67 mo
209.985 318.222 209.538 318.67 208.985 318.67 cv
208.434 318.67 207.985 318.222 207.985 317.67 cv
207.985 317.118 208.434 316.67 208.985 316.67 cv
209.538 316.67 209.985 317.118 209.985 317.67 cv
f
213.706 317.67 mo
213.706 318.222 213.257 318.67 212.706 318.67 cv
212.153 318.67 211.706 318.222 211.706 317.67 cv
211.706 317.118 212.153 316.67 212.706 316.67 cv
213.257 316.67 213.706 317.118 213.706 317.67 cv
f
218.025 317.67 mo
218.025 318.222 217.578 318.67 217.025 318.67 cv
216.474 318.67 216.025 318.222 216.025 317.67 cv
216.025 317.118 216.474 316.67 217.025 316.67 cv
217.578 316.67 218.025 317.118 218.025 317.67 cv
f
222.465 317.67 mo
222.465 318.222 222.018 318.67 221.465 318.67 cv
220.914 318.67 220.465 318.222 220.465 317.67 cv
220.465 317.118 220.914 316.67 221.465 316.67 cv
222.018 316.67 222.465 317.118 222.465 317.67 cv
f
226.666 317.67 mo
226.666 318.222 226.217 318.67 225.666 318.67 cv
225.113 318.67 224.666 318.222 224.666 317.67 cv
224.666 317.118 225.113 316.67 225.666 316.67 cv
226.217 316.67 226.666 317.118 226.666 317.67 cv
f
229.786 317.67 mo
229.786 318.222 229.337 318.67 228.786 318.67 cv
228.233 318.67 227.786 318.222 227.786 317.67 cv
227.786 317.118 228.233 316.67 228.786 316.67 cv
229.337 316.67 229.786 317.118 229.786 317.67 cv
f
233.625 317.67 mo
233.625 318.222 233.177 318.67 232.625 318.67 cv
232.073 318.67 231.625 318.222 231.625 317.67 cv
231.625 317.118 232.073 316.67 232.625 316.67 cv
233.177 316.67 233.625 317.118 233.625 317.67 cv
f
236.865 317.67 mo
236.865 318.222 236.417 318.67 235.865 318.67 cv
235.313 318.67 234.865 318.222 234.865 317.67 cv
234.865 317.118 235.313 316.67 235.865 316.67 cv
236.417 316.67 236.865 317.118 236.865 317.67 cv
f
239.505 317.67 mo
239.505 318.222 239.058 318.67 238.505 318.67 cv
237.954 318.67 237.505 318.222 237.505 317.67 cv
237.505 317.118 237.954 316.67 238.505 316.67 cv
239.058 316.67 239.505 317.118 239.505 317.67 cv
f
243.226 317.67 mo
243.226 318.222 242.777 318.67 242.226 318.67 cv
241.673 318.67 241.226 318.222 241.226 317.67 cv
241.226 317.118 241.673 316.67 242.226 316.67 cv
242.777 316.67 243.226 317.118 243.226 317.67 cv
f
246.346 317.67 mo
246.346 318.222 245.897 318.67 245.346 318.67 cv
244.793 318.67 244.346 318.222 244.346 317.67 cv
244.346 317.118 244.793 316.67 245.346 316.67 cv
245.897 316.67 246.346 317.118 246.346 317.67 cv
f
249.585 317.67 mo
249.585 318.222 249.138 318.67 248.585 318.67 cv
248.034 318.67 247.585 318.222 247.585 317.67 cv
247.585 317.118 248.034 316.67 248.585 316.67 cv
249.138 316.67 249.585 317.118 249.585 317.67 cv
f
252.585 317.67 mo
252.585 318.222 252.138 318.67 251.585 318.67 cv
251.034 318.67 250.585 318.222 250.585 317.67 cv
250.585 317.118 251.034 316.67 251.585 316.67 cv
252.138 316.67 252.585 317.118 252.585 317.67 cv
f
255.346 317.67 mo
255.346 318.222 254.897 318.67 254.346 318.67 cv
253.793 318.67 253.346 318.222 253.346 317.67 cv
253.346 317.118 253.793 316.67 254.346 316.67 cv
254.897 316.67 255.346 317.118 255.346 317.67 cv
f
257.625 317.67 mo
257.625 318.222 257.177 318.67 256.625 318.67 cv
256.073 318.67 255.625 318.222 255.625 317.67 cv
255.625 317.118 256.073 316.67 256.625 316.67 cv
257.177 316.67 257.625 317.118 257.625 317.67 cv
f
260.146 317.67 mo
260.146 318.222 259.697 318.67 259.146 318.67 cv
258.593 318.67 258.146 318.222 258.146 317.67 cv
258.146 317.118 258.593 316.67 259.146 316.67 cv
259.697 316.67 260.146 317.118 260.146 317.67 cv
f
266.746 317.67 mo
266.746 318.222 266.297 318.67 265.746 318.67 cv
265.193 318.67 264.746 318.222 264.746 317.67 cv
264.746 317.118 265.193 316.67 265.746 316.67 cv
266.297 316.67 266.746 317.118 266.746 317.67 cv
f
270.105 317.67 mo
270.105 318.222 269.657 318.67 269.105 318.67 cv
268.554 318.67 268.105 318.222 268.105 317.67 cv
268.105 317.118 268.554 316.67 269.105 316.67 cv
269.657 316.67 270.105 317.118 270.105 317.67 cv
f
272.985 317.67 mo
272.985 318.222 272.538 318.67 271.985 318.67 cv
271.434 318.67 270.985 318.222 270.985 317.67 cv
270.985 317.118 271.434 316.67 271.985 316.67 cv
272.538 316.67 272.985 317.118 272.985 317.67 cv
f
276.346 317.67 mo
276.346 318.222 275.897 318.67 275.346 318.67 cv
274.793 318.67 274.346 318.222 274.346 317.67 cv
274.346 317.118 274.793 316.67 275.346 316.67 cv
275.897 316.67 276.346 317.118 276.346 317.67 cv
f
280.186 317.67 mo
280.186 318.222 279.737 318.67 279.186 318.67 cv
278.633 318.67 278.186 318.222 278.186 317.67 cv
278.186 317.118 278.633 316.67 279.186 316.67 cv
279.737 316.67 280.186 317.118 280.186 317.67 cv
f
283.545 317.67 mo
283.545 318.222 283.098 318.67 282.545 318.67 cv
281.994 318.67 281.545 318.222 281.545 317.67 cv
281.545 317.118 281.994 316.67 282.545 316.67 cv
283.098 316.67 283.545 317.118 283.545 317.67 cv
f
288.346 317.67 mo
288.346 318.222 287.897 318.67 287.346 318.67 cv
286.793 318.67 286.346 318.222 286.346 317.67 cv
286.346 317.118 286.793 316.67 287.346 316.67 cv
287.897 316.67 288.346 317.118 288.346 317.67 cv
f
291.226 317.67 mo
291.226 318.222 290.777 318.67 290.226 318.67 cv
289.673 318.67 289.226 318.222 289.226 317.67 cv
289.226 317.118 289.673 316.67 290.226 316.67 cv
290.777 316.67 291.226 317.118 291.226 317.67 cv
f
294.105 317.67 mo
294.105 318.222 293.657 318.67 293.105 318.67 cv
292.554 318.67 292.105 318.222 292.105 317.67 cv
292.105 317.118 292.554 316.67 293.105 316.67 cv
293.657 316.67 294.105 317.118 294.105 317.67 cv
f
297.585 317.67 mo
297.585 318.222 297.138 318.67 296.585 318.67 cv
296.034 318.67 295.585 318.222 295.585 317.67 cv
295.585 317.118 296.034 316.67 296.585 316.67 cv
297.138 316.67 297.585 317.118 297.585 317.67 cv
f
301.065 317.67 mo
301.065 318.222 300.618 318.67 300.065 318.67 cv
299.514 318.67 299.065 318.222 299.065 317.67 cv
299.065 317.118 299.514 316.67 300.065 316.67 cv
300.618 316.67 301.065 317.118 301.065 317.67 cv
f
304.065 317.67 mo
304.065 318.222 303.618 318.67 303.065 318.67 cv
302.514 318.67 302.065 318.222 302.065 317.67 cv
302.065 317.118 302.514 316.67 303.065 316.67 cv
303.618 316.67 304.065 317.118 304.065 317.67 cv
f
307.306 317.67 mo
307.306 318.222 306.857 318.67 306.306 318.67 cv
305.753 318.67 305.306 318.222 305.306 317.67 cv
305.306 317.118 305.753 316.67 306.306 316.67 cv
306.857 316.67 307.306 317.118 307.306 317.67 cv
f
309.826 317.67 mo
309.826 318.222 309.377 318.67 308.826 318.67 cv
308.273 318.67 307.826 318.222 307.826 317.67 cv
307.826 317.118 308.273 316.67 308.826 316.67 cv
309.377 316.67 309.826 317.118 309.826 317.67 cv
f
313.065 317.67 mo
313.065 318.222 312.618 318.67 312.065 318.67 cv
311.514 318.67 311.065 318.222 311.065 317.67 cv
311.065 317.118 311.514 316.67 312.065 316.67 cv
312.618 316.67 313.065 317.118 313.065 317.67 cv
f
316.425 317.67 mo
316.425 318.222 315.978 318.67 315.425 318.67 cv
314.874 318.67 314.425 318.222 314.425 317.67 cv
314.425 317.118 314.874 316.67 315.425 316.67 cv
315.978 316.67 316.425 317.118 316.425 317.67 cv
f
320.025 317.67 mo
320.025 318.222 319.578 318.67 319.025 318.67 cv
318.474 318.67 318.025 318.222 318.025 317.67 cv
318.025 317.118 318.474 316.67 319.025 316.67 cv
319.578 316.67 320.025 317.118 320.025 317.67 cv
f
323.146 317.67 mo
323.146 318.222 322.697 318.67 322.146 318.67 cv
321.593 318.67 321.146 318.222 321.146 317.67 cv
321.146 317.118 321.593 316.67 322.146 316.67 cv
322.697 316.67 323.146 317.118 323.146 317.67 cv
f
325.545 317.67 mo
325.545 318.222 325.098 318.67 324.545 318.67 cv
323.994 318.67 323.545 318.222 323.545 317.67 cv
323.545 317.118 323.994 316.67 324.545 316.67 cv
325.098 316.67 325.545 317.118 325.545 317.67 cv
f
327.706 317.67 mo
327.706 318.222 327.257 318.67 326.706 318.67 cv
326.153 318.67 325.706 318.222 325.706 317.67 cv
325.706 317.118 326.153 316.67 326.706 316.67 cv
327.257 316.67 327.706 317.118 327.706 317.67 cv
f
331.545 317.67 mo
331.545 318.222 331.098 318.67 330.545 318.67 cv
329.994 318.67 329.545 318.222 329.545 317.67 cv
329.545 317.118 329.994 316.67 330.545 316.67 cv
331.098 316.67 331.545 317.118 331.545 317.67 cv
f
334.905 317.67 mo
334.905 318.222 334.458 318.67 333.905 318.67 cv
333.354 318.67 332.905 318.222 332.905 317.67 cv
332.905 317.118 333.354 316.67 333.905 316.67 cv
334.458 316.67 334.905 317.118 334.905 317.67 cv
f
338.746 317.67 mo
338.746 318.222 338.297 318.67 337.746 318.67 cv
337.193 318.67 336.746 318.222 336.746 317.67 cv
336.746 317.118 337.193 316.67 337.746 316.67 cv
338.297 316.67 338.746 317.118 338.746 317.67 cv
f
341.865 317.67 mo
341.865 318.222 341.417 318.67 340.865 318.67 cv
340.313 318.67 339.865 318.222 339.865 317.67 cv
339.865 317.118 340.313 316.67 340.865 316.67 cv
341.417 316.67 341.865 317.118 341.865 317.67 cv
f
344.266 317.67 mo
344.266 318.222 343.817 318.67 343.266 318.67 cv
342.713 318.67 342.266 318.222 342.266 317.67 cv
342.266 317.118 342.713 316.67 343.266 316.67 cv
343.817 316.67 344.266 317.118 344.266 317.67 cv
f
347.266 317.67 mo
347.266 318.222 346.817 318.67 346.266 318.67 cv
345.713 318.67 345.266 318.222 345.266 317.67 cv
345.266 317.118 345.713 316.67 346.266 316.67 cv
346.817 316.67 347.266 317.118 347.266 317.67 cv
f
352.666 317.67 mo
352.666 318.222 352.217 318.67 351.666 318.67 cv
351.113 318.67 350.666 318.222 350.666 317.67 cv
350.666 317.118 351.113 316.67 351.666 316.67 cv
352.217 316.67 352.666 317.118 352.666 317.67 cv
f
357.465 317.67 mo
357.465 318.222 357.018 318.67 356.465 318.67 cv
355.914 318.67 355.465 318.222 355.465 317.67 cv
355.465 317.118 355.914 316.67 356.465 316.67 cv
357.018 316.67 357.465 317.118 357.465 317.67 cv
f
359.865 317.67 mo
359.865 318.222 359.417 318.67 358.865 318.67 cv
358.313 318.67 357.865 318.222 357.865 317.67 cv
357.865 317.118 358.313 316.67 358.865 316.67 cv
359.417 316.67 359.865 317.118 359.865 317.67 cv
f
363.346 317.67 mo
363.346 318.222 362.897 318.67 362.346 318.67 cv
361.793 318.67 361.346 318.222 361.346 317.67 cv
361.346 317.118 361.793 316.67 362.346 316.67 cv
362.897 316.67 363.346 317.118 363.346 317.67 cv
f
366.706 317.67 mo
366.706 318.222 366.258 318.67 365.706 318.67 cv
365.153 318.67 364.706 318.222 364.706 317.67 cv
364.706 317.118 365.153 316.67 365.706 316.67 cv
366.258 316.67 366.706 317.118 366.706 317.67 cv
f
370.065 317.67 mo
370.065 318.222 369.618 318.67 369.065 318.67 cv
368.514 318.67 368.065 318.222 368.065 317.67 cv
368.065 317.118 368.514 316.67 369.065 316.67 cv
369.618 316.67 370.065 317.118 370.065 317.67 cv
f
372.825 317.67 mo
372.825 318.222 372.377 318.67 371.825 318.67 cv
371.274 318.67 370.825 318.222 370.825 317.67 cv
370.825 317.118 371.274 316.67 371.825 316.67 cv
372.377 316.67 372.825 317.118 372.825 317.67 cv
f
376.426 317.67 mo
376.426 318.222 375.977 318.67 375.426 318.67 cv
374.874 318.67 374.426 318.222 374.426 317.67 cv
374.426 317.118 374.874 316.67 375.426 316.67 cv
375.977 316.67 376.426 317.118 376.426 317.67 cv
f
380.385 317.67 mo
380.385 318.222 379.938 318.67 379.385 318.67 cv
378.833 318.67 378.385 318.222 378.385 317.67 cv
378.385 317.118 378.833 316.67 379.385 316.67 cv
379.938 316.67 380.385 317.118 380.385 317.67 cv
f
384.106 317.67 mo
384.106 318.222 383.657 318.67 383.106 318.67 cv
382.553 318.67 382.106 318.222 382.106 317.67 cv
382.106 317.118 382.553 316.67 383.106 316.67 cv
383.657 316.67 384.106 317.118 384.106 317.67 cv
f
387.706 317.67 mo
387.706 318.222 387.258 318.67 386.706 318.67 cv
386.153 318.67 385.706 318.222 385.706 317.67 cv
385.706 317.118 386.153 316.67 386.706 316.67 cv
387.258 316.67 387.706 317.118 387.706 317.67 cv
f
390.825 317.67 mo
390.825 318.222 390.377 318.67 389.825 318.67 cv
389.274 318.67 388.825 318.222 388.825 317.67 cv
388.825 317.118 389.274 316.67 389.825 316.67 cv
390.377 316.67 390.825 317.118 390.825 317.67 cv
f
393.465 317.67 mo
393.465 318.222 393.018 318.67 392.465 318.67 cv
391.913 318.67 391.465 318.222 391.465 317.67 cv
391.465 317.118 391.913 316.67 392.465 316.67 cv
393.018 316.67 393.465 317.118 393.465 317.67 cv
f
396.346 317.67 mo
396.346 318.222 395.897 318.67 395.346 318.67 cv
394.793 318.67 394.346 318.222 394.346 317.67 cv
394.346 317.118 394.793 316.67 395.346 316.67 cv
395.897 316.67 396.346 317.118 396.346 317.67 cv
f
399.465 317.67 mo
399.465 318.222 399.018 318.67 398.465 318.67 cv
397.913 318.67 397.465 318.222 397.465 317.67 cv
397.465 317.118 397.913 316.67 398.465 316.67 cv
399.018 316.67 399.465 317.118 399.465 317.67 cv
f
402.706 317.67 mo
402.706 318.222 402.258 318.67 401.706 318.67 cv
401.153 318.67 400.706 318.222 400.706 317.67 cv
400.706 317.118 401.153 316.67 401.706 316.67 cv
402.258 316.67 402.706 317.118 402.706 317.67 cv
f
405.825 317.67 mo
405.825 318.222 405.377 318.67 404.825 318.67 cv
404.274 318.67 403.825 318.222 403.825 317.67 cv
403.825 317.118 404.274 316.67 404.825 316.67 cv
405.377 316.67 405.825 317.118 405.825 317.67 cv
f
408.106 317.67 mo
408.106 318.222 407.657 318.67 407.106 318.67 cv
406.553 318.67 406.106 318.222 406.106 317.67 cv
406.106 317.118 406.553 316.67 407.106 316.67 cv
407.657 316.67 408.106 317.118 408.106 317.67 cv
f
410.506 317.67 mo
410.506 318.222 410.057 318.67 409.506 318.67 cv
408.954 318.67 408.506 318.222 408.506 317.67 cv
408.506 317.118 408.954 316.67 409.506 316.67 cv
410.057 316.67 410.506 317.118 410.506 317.67 cv
f
413.625 317.67 mo
413.625 318.222 413.178 318.67 412.625 318.67 cv
412.073 318.67 411.625 318.222 411.625 317.67 cv
411.625 317.118 412.073 316.67 412.625 316.67 cv
413.178 316.67 413.625 317.118 413.625 317.67 cv
f
416.385 317.67 mo
416.385 318.222 415.938 318.67 415.385 318.67 cv
414.833 318.67 414.385 318.222 414.385 317.67 cv
414.385 317.118 414.833 316.67 415.385 316.67 cv
415.938 316.67 416.385 317.118 416.385 317.67 cv
f
419.385 317.67 mo
419.385 318.222 418.938 318.67 418.385 318.67 cv
417.833 318.67 417.385 318.222 417.385 317.67 cv
417.385 317.118 417.833 316.67 418.385 316.67 cv
418.938 316.67 419.385 317.118 419.385 317.67 cv
f
421.545 317.67 mo
421.545 318.222 421.098 318.67 420.545 318.67 cv
419.993 318.67 419.545 318.222 419.545 317.67 cv
419.545 317.118 419.993 316.67 420.545 316.67 cv
421.098 316.67 421.545 317.118 421.545 317.67 cv
f
423.706 317.67 mo
423.706 318.222 423.258 318.67 422.706 318.67 cv
422.153 318.67 421.706 318.222 421.706 317.67 cv
421.706 317.118 422.153 316.67 422.706 316.67 cv
423.258 316.67 423.706 317.118 423.706 317.67 cv
f
427.065 317.67 mo
427.065 318.222 426.618 318.67 426.065 318.67 cv
425.514 318.67 425.065 318.222 425.065 317.67 cv
425.065 317.118 425.514 316.67 426.065 316.67 cv
426.618 316.67 427.065 317.118 427.065 317.67 cv
f
429.346 317.67 mo
429.346 318.222 428.897 318.67 428.346 318.67 cv
427.793 318.67 427.346 318.222 427.346 317.67 cv
427.346 317.118 427.793 316.67 428.346 316.67 cv
428.897 316.67 429.346 317.118 429.346 317.67 cv
f
433.545 317.67 mo
433.545 318.222 433.098 318.67 432.545 318.67 cv
431.993 318.67 431.545 318.222 431.545 317.67 cv
431.545 317.118 431.993 316.67 432.545 316.67 cv
433.098 316.67 433.545 317.118 433.545 317.67 cv
f
436.305 317.67 mo
436.305 318.222 435.858 318.67 435.305 318.67 cv
434.754 318.67 434.305 318.222 434.305 317.67 cv
434.305 317.118 434.754 316.67 435.305 316.67 cv
435.858 316.67 436.305 317.118 436.305 317.67 cv
f
440.266 317.67 mo
440.266 318.222 439.817 318.67 439.266 318.67 cv
438.713 318.67 438.266 318.222 438.266 317.67 cv
438.266 317.118 438.713 316.67 439.266 316.67 cv
439.817 316.67 440.266 317.118 440.266 317.67 cv
f
443.866 317.67 mo
443.866 318.222 443.418 318.67 442.866 318.67 cv
442.313 318.67 441.866 318.222 441.866 317.67 cv
441.866 317.118 442.313 316.67 442.866 316.67 cv
443.418 316.67 443.866 317.118 443.866 317.67 cv
f
446.625 317.67 mo
446.625 318.222 446.178 318.67 445.625 318.67 cv
445.073 318.67 444.625 318.222 444.625 317.67 cv
444.625 317.118 445.073 316.67 445.625 316.67 cv
446.178 316.67 446.625 317.118 446.625 317.67 cv
f
449.745 317.67 mo
449.745 318.222 449.297 318.67 448.745 318.67 cv
448.194 318.67 447.745 318.222 447.745 317.67 cv
447.745 317.118 448.194 316.67 448.745 316.67 cv
449.297 316.67 449.745 317.118 449.745 317.67 cv
f
452.506 317.67 mo
452.506 318.222 452.057 318.67 451.506 318.67 cv
450.954 318.67 450.506 318.222 450.506 317.67 cv
450.506 317.118 450.954 316.67 451.506 316.67 cv
452.057 316.67 452.506 317.118 452.506 317.67 cv
f
455.625 317.67 mo
455.625 318.222 455.178 318.67 454.625 318.67 cv
454.073 318.67 453.625 318.222 453.625 317.67 cv
453.625 317.118 454.073 316.67 454.625 316.67 cv
455.178 316.67 455.625 317.118 455.625 317.67 cv
f
458.026 317.67 mo
458.026 318.222 457.577 318.67 457.026 318.67 cv
456.473 318.67 456.026 318.222 456.026 317.67 cv
456.026 317.118 456.473 316.67 457.026 316.67 cv
457.577 316.67 458.026 317.118 458.026 317.67 cv
f
461.026 317.67 mo
461.026 318.222 460.577 318.67 460.026 318.67 cv
459.473 318.67 459.026 318.222 459.026 317.67 cv
459.026 317.118 459.473 316.67 460.026 316.67 cv
460.577 316.67 461.026 317.118 461.026 317.67 cv
f
464.266 317.67 mo
464.266 318.222 463.817 318.67 463.266 318.67 cv
462.713 318.67 462.266 318.222 462.266 317.67 cv
462.266 317.118 462.713 316.67 463.266 316.67 cv
463.817 316.67 464.266 317.118 464.266 317.67 cv
f
467.625 317.67 mo
467.625 318.222 467.178 318.67 466.625 318.67 cv
466.073 318.67 465.625 318.222 465.625 317.67 cv
465.625 317.118 466.073 316.67 466.625 316.67 cv
467.178 316.67 467.625 317.118 467.625 317.67 cv
f
471.106 317.67 mo
471.106 318.222 470.657 318.67 470.106 318.67 cv
469.553 318.67 469.106 318.222 469.106 317.67 cv
469.106 317.118 469.553 316.67 470.106 316.67 cv
470.657 316.67 471.106 317.118 471.106 317.67 cv
f
473.506 317.67 mo
473.506 318.222 473.057 318.67 472.506 318.67 cv
471.954 318.67 471.506 318.222 471.506 317.67 cv
471.506 317.118 471.954 316.67 472.506 316.67 cv
473.057 316.67 473.506 317.118 473.506 317.67 cv
f
476.985 317.67 mo
476.985 318.222 476.538 318.67 475.985 318.67 cv
475.434 318.67 474.985 318.222 474.985 317.67 cv
474.985 317.118 475.434 316.67 475.985 316.67 cv
476.538 316.67 476.985 317.118 476.985 317.67 cv
f
480.825 317.67 mo
480.825 318.222 480.377 318.67 479.825 318.67 cv
479.274 318.67 478.825 318.222 478.825 317.67 cv
478.825 317.118 479.274 316.67 479.825 316.67 cv
480.377 316.67 480.825 317.118 480.825 317.67 cv
f
484.186 317.67 mo
484.186 318.222 483.737 318.67 483.186 318.67 cv
482.633 318.67 482.186 318.222 482.186 317.67 cv
482.186 317.118 482.633 316.67 483.186 316.67 cv
483.737 316.67 484.186 317.118 484.186 317.67 cv
f
487.065 317.67 mo
487.065 318.222 486.618 318.67 486.065 318.67 cv
485.514 318.67 485.065 318.222 485.065 317.67 cv
485.065 317.118 485.514 316.67 486.065 316.67 cv
486.618 316.67 487.065 317.118 487.065 317.67 cv
f
489.465 317.67 mo
489.465 318.222 489.018 318.67 488.465 318.67 cv
487.913 318.67 487.465 318.222 487.465 317.67 cv
487.465 317.118 487.913 316.67 488.465 316.67 cv
489.018 316.67 489.465 317.118 489.465 317.67 cv
f
492.586 317.67 mo
492.586 318.222 492.137 318.67 491.586 318.67 cv
491.034 318.67 490.586 318.222 490.586 317.67 cv
490.586 317.118 491.034 316.67 491.586 316.67 cv
492.137 316.67 492.586 317.118 492.586 317.67 cv
f
495.706 317.67 mo
495.706 318.222 495.258 318.67 494.706 318.67 cv
494.153 318.67 493.706 318.222 493.706 317.67 cv
493.706 317.118 494.153 316.67 494.706 316.67 cv
495.258 316.67 495.706 317.118 495.706 317.67 cv
f
498.946 317.67 mo
498.946 318.222 498.497 318.67 497.946 318.67 cv
497.393 318.67 496.946 318.222 496.946 317.67 cv
496.946 317.118 497.393 316.67 497.946 316.67 cv
498.497 316.67 498.946 317.118 498.946 317.67 cv
f
502.426 317.67 mo
502.426 318.222 501.977 318.67 501.426 318.67 cv
500.874 318.67 500.426 318.222 500.426 317.67 cv
500.426 317.118 500.874 316.67 501.426 316.67 cv
501.977 316.67 502.426 317.118 502.426 317.67 cv
f
505.426 317.67 mo
505.426 318.222 504.977 318.67 504.426 318.67 cv
503.874 318.67 503.426 318.222 503.426 317.67 cv
503.426 317.118 503.874 316.67 504.426 316.67 cv
504.977 316.67 505.426 317.118 505.426 317.67 cv
f
508.665 317.67 mo
508.665 318.222 508.217 318.67 507.665 318.67 cv
507.114 318.67 506.665 318.222 506.665 317.67 cv
506.665 317.118 507.114 316.67 507.665 316.67 cv
508.217 316.67 508.665 317.118 508.665 317.67 cv
f
511.186 317.67 mo
511.186 318.222 510.737 318.67 510.186 318.67 cv
509.633 318.67 509.186 318.222 509.186 317.67 cv
509.186 317.118 509.633 316.67 510.186 316.67 cv
510.737 316.67 511.186 317.118 511.186 317.67 cv
f
513.946 317.67 mo
513.946 318.222 513.497 318.67 512.946 318.67 cv
512.393 318.67 511.946 318.222 511.946 317.67 cv
511.946 317.118 512.393 316.67 512.946 316.67 cv
513.497 316.67 513.946 317.118 513.946 317.67 cv
f
517.305 317.67 mo
517.305 318.222 516.858 318.67 516.305 318.67 cv
515.754 318.67 515.305 318.222 515.305 317.67 cv
515.305 317.118 515.754 316.67 516.305 316.67 cv
516.858 316.67 517.305 317.118 517.305 317.67 cv
f
521.026 317.67 mo
521.026 318.222 520.577 318.67 520.026 318.67 cv
519.473 318.67 519.026 318.222 519.026 317.67 cv
519.026 317.118 519.473 316.67 520.026 316.67 cv
520.577 316.67 521.026 317.118 521.026 317.67 cv
f
523.786 317.67 mo
523.786 318.222 523.338 318.67 522.786 318.67 cv
522.233 318.67 521.786 318.222 521.786 317.67 cv
521.786 317.118 522.233 316.67 522.786 316.67 cv
523.338 316.67 523.786 317.118 523.786 317.67 cv
f
526.905 317.67 mo
526.905 318.222 526.458 318.67 525.905 318.67 cv
525.354 318.67 524.905 318.222 524.905 317.67 cv
524.905 317.118 525.354 316.67 525.905 316.67 cv
526.458 316.67 526.905 317.118 526.905 317.67 cv
f
529.545 317.67 mo
529.545 318.222 529.098 318.67 528.545 318.67 cv
527.993 318.67 527.545 318.222 527.545 317.67 cv
527.545 317.118 527.993 316.67 528.545 316.67 cv
529.098 316.67 529.545 317.118 529.545 317.67 cv
f
532.786 317.67 mo
532.786 318.222 532.338 318.67 531.786 318.67 cv
531.233 318.67 530.786 318.222 530.786 317.67 cv
530.786 317.118 531.233 316.67 531.786 316.67 cv
532.338 316.67 532.786 317.118 532.786 317.67 cv
f
536.385 317.67 mo
536.385 318.222 535.938 318.67 535.385 318.67 cv
534.833 318.67 534.385 318.222 534.385 317.67 cv
534.385 317.118 534.833 316.67 535.385 316.67 cv
535.938 316.67 536.385 317.118 536.385 317.67 cv
f
539.866 317.67 mo
539.866 318.222 539.418 318.67 538.866 318.67 cv
538.313 318.67 537.866 318.222 537.866 317.67 cv
537.866 317.118 538.313 316.67 538.866 316.67 cv
539.418 316.67 539.866 317.118 539.866 317.67 cv
f
542.866 317.67 mo
542.866 318.222 542.418 318.67 541.866 318.67 cv
541.313 318.67 540.866 318.222 540.866 317.67 cv
540.866 317.118 541.313 316.67 541.866 316.67 cv
542.418 316.67 542.866 317.118 542.866 317.67 cv
f
545.866 317.67 mo
545.866 318.222 545.418 318.67 544.866 318.67 cv
544.313 318.67 543.866 318.222 543.866 317.67 cv
543.866 317.118 544.313 316.67 544.866 316.67 cv
545.418 316.67 545.866 317.118 545.866 317.67 cv
f
548.506 317.67 mo
548.506 318.222 548.057 318.67 547.506 318.67 cv
546.954 318.67 546.506 318.222 546.506 317.67 cv
546.506 317.118 546.954 316.67 547.506 316.67 cv
548.057 316.67 548.506 317.118 548.506 317.67 cv
f
551.385 317.67 mo
551.385 318.222 550.938 318.67 550.385 318.67 cv
549.833 318.67 549.385 318.222 549.385 317.67 cv
549.385 317.118 549.833 316.67 550.385 316.67 cv
550.938 316.67 551.385 317.118 551.385 317.67 cv
f
555.346 317.67 mo
555.346 318.222 554.897 318.67 554.346 318.67 cv
553.793 318.67 553.346 318.222 553.346 317.67 cv
553.346 317.118 553.793 316.67 554.346 316.67 cv
554.897 316.67 555.346 317.118 555.346 317.67 cv
f
558.706 317.67 mo
558.706 318.222 558.258 318.67 557.706 318.67 cv
557.153 318.67 556.706 318.222 556.706 317.67 cv
556.706 317.118 557.153 316.67 557.706 316.67 cv
558.258 316.67 558.706 317.118 558.706 317.67 cv
f
561.946 317.67 mo
561.946 318.222 561.497 318.67 560.946 318.67 cv
560.393 318.67 559.946 318.222 559.946 317.67 cv
559.946 317.118 560.393 316.67 560.946 316.67 cv
561.497 316.67 561.946 317.118 561.946 317.67 cv
f
564.825 317.67 mo
564.825 318.222 564.377 318.67 563.825 318.67 cv
563.274 318.67 562.825 318.222 562.825 317.67 cv
562.825 317.118 563.274 316.67 563.825 316.67 cv
564.377 316.67 564.825 317.118 564.825 317.67 cv
f
567.225 317.67 mo
567.225 318.222 566.778 318.67 566.225 318.67 cv
565.674 318.67 565.225 318.222 565.225 317.67 cv
565.225 317.118 565.674 316.67 566.225 316.67 cv
566.778 316.67 567.225 317.118 567.225 317.67 cv
f
570.825 317.67 mo
570.825 318.222 570.377 318.67 569.825 318.67 cv
569.274 318.67 568.825 318.222 568.825 317.67 cv
568.825 317.118 569.274 316.67 569.825 316.67 cv
570.377 316.67 570.825 317.118 570.825 317.67 cv
f
574.186 317.67 mo
574.186 318.222 573.737 318.67 573.186 318.67 cv
572.633 318.67 572.186 318.222 572.186 317.67 cv
572.186 317.118 572.633 316.67 573.186 316.67 cv
573.737 316.67 574.186 317.118 574.186 317.67 cv
f
577.065 317.67 mo
577.065 318.222 576.618 318.67 576.065 318.67 cv
575.514 318.67 575.065 318.222 575.065 317.67 cv
575.065 317.118 575.514 316.67 576.065 316.67 cv
576.618 316.67 577.065 317.118 577.065 317.67 cv
f
580.186 317.67 mo
580.186 318.222 579.737 318.67 579.186 318.67 cv
578.633 318.67 578.186 318.222 578.186 317.67 cv
578.186 317.118 578.633 316.67 579.186 316.67 cv
579.737 316.67 580.186 317.118 580.186 317.67 cv
f
583.665 317.67 mo
583.665 318.222 583.217 318.67 582.665 318.67 cv
582.114 318.67 581.665 318.222 581.665 317.67 cv
581.665 317.118 582.114 316.67 582.665 316.67 cv
583.217 316.67 583.665 317.118 583.665 317.67 cv
f
585.946 317.67 mo
585.946 318.222 585.497 318.67 584.946 318.67 cv
584.393 318.67 583.946 318.222 583.946 317.67 cv
583.946 317.118 584.393 316.67 584.946 316.67 cv
585.497 316.67 585.946 317.118 585.946 317.67 cv
f
588.346 317.67 mo
588.346 318.222 587.897 318.67 587.346 318.67 cv
586.793 318.67 586.346 318.222 586.346 317.67 cv
586.346 317.118 586.793 316.67 587.346 316.67 cv
587.897 316.67 588.346 317.118 588.346 317.67 cv
f
591.225 317.67 mo
591.225 318.222 590.778 318.67 590.225 318.67 cv
589.674 318.67 589.225 318.222 589.225 317.67 cv
589.225 317.118 589.674 316.67 590.225 316.67 cv
590.778 316.67 591.225 317.118 591.225 317.67 cv
f
594.225 317.67 mo
594.225 318.222 593.778 318.67 593.225 318.67 cv
592.674 318.67 592.225 318.222 592.225 317.67 cv
592.225 317.118 592.674 316.67 593.225 316.67 cv
593.778 316.67 594.225 317.118 594.225 317.67 cv
f
597.586 317.67 mo
597.586 318.222 597.137 318.67 596.586 318.67 cv
596.034 318.67 595.586 318.222 595.586 317.67 cv
595.586 317.118 596.034 316.67 596.586 316.67 cv
597.137 316.67 597.586 317.118 597.586 317.67 cv
f
600.465 317.67 mo
600.465 318.222 600.018 318.67 599.465 318.67 cv
598.913 318.67 598.465 318.222 598.465 317.67 cv
598.465 317.118 598.913 316.67 599.465 316.67 cv
600.018 316.67 600.465 317.118 600.465 317.67 cv
f
603.946 317.67 mo
603.946 318.222 603.497 318.67 602.946 318.67 cv
602.393 318.67 601.946 318.222 601.946 317.67 cv
601.946 317.118 602.393 316.67 602.946 316.67 cv
603.497 316.67 603.946 317.118 603.946 317.67 cv
f
607.305 317.67 mo
607.305 318.222 606.858 318.67 606.305 318.67 cv
605.754 318.67 605.305 318.222 605.305 317.67 cv
605.305 317.118 605.754 316.67 606.305 316.67 cv
606.858 316.67 607.305 317.118 607.305 317.67 cv
f
609.946 317.67 mo
609.946 318.222 609.497 318.67 608.946 318.67 cv
608.393 318.67 607.946 318.222 607.946 317.67 cv
607.946 317.118 608.393 316.67 608.946 316.67 cv
609.497 316.67 609.946 317.118 609.946 317.67 cv
f
613.065 317.67 mo
613.065 318.222 612.618 318.67 612.065 318.67 cv
611.514 318.67 611.065 318.222 611.065 317.67 cv
611.065 317.118 611.514 316.67 612.065 316.67 cv
612.618 316.67 613.065 317.118 613.065 317.67 cv
f
615.465 317.67 mo
615.465 318.222 615.018 318.67 614.465 318.67 cv
613.913 318.67 613.465 318.222 613.465 317.67 cv
613.465 317.118 613.913 316.67 614.465 316.67 cv
615.018 316.67 615.465 317.118 615.465 317.67 cv
f
618.106 317.67 mo
618.106 318.222 617.657 318.67 617.106 318.67 cv
616.553 318.67 616.106 318.222 616.106 317.67 cv
616.106 317.118 616.553 316.67 617.106 316.67 cv
617.657 316.67 618.106 317.118 618.106 317.67 cv
f
621.346 317.67 mo
621.346 318.222 620.897 318.67 620.346 318.67 cv
619.793 318.67 619.346 318.222 619.346 317.67 cv
619.346 317.118 619.793 316.67 620.346 316.67 cv
620.897 316.67 621.346 317.118 621.346 317.67 cv
f
624.106 317.67 mo
624.106 318.222 623.657 318.67 623.106 318.67 cv
622.553 318.67 622.106 318.222 622.106 317.67 cv
622.106 317.118 622.553 316.67 623.106 316.67 cv
623.657 316.67 624.106 317.118 624.106 317.67 cv
f
627.465 317.67 mo
627.465 318.222 627.018 318.67 626.465 318.67 cv
625.913 318.67 625.465 318.222 625.465 317.67 cv
625.465 317.118 625.913 316.67 626.465 316.67 cv
627.018 316.67 627.465 317.118 627.465 317.67 cv
f
630.946 317.67 mo
630.946 318.222 630.497 318.67 629.946 318.67 cv
629.393 318.67 628.946 318.222 628.946 317.67 cv
628.946 317.118 629.393 316.67 629.946 316.67 cv
630.497 316.67 630.946 317.118 630.946 317.67 cv
f
634.305 317.67 mo
634.305 318.222 633.858 318.67 633.305 318.67 cv
632.754 318.67 632.305 318.222 632.305 317.67 cv
632.305 317.118 632.754 316.67 633.305 316.67 cv
633.858 316.67 634.305 317.118 634.305 317.67 cv
f
637.426 317.67 mo
637.426 318.222 636.977 318.67 636.426 318.67 cv
635.874 318.67 635.426 318.222 635.426 317.67 cv
635.426 317.118 635.874 316.67 636.426 316.67 cv
636.977 316.67 637.426 317.118 637.426 317.67 cv
f
639.946 317.67 mo
639.946 318.222 639.497 318.67 638.946 318.67 cv
638.393 318.67 637.946 318.222 637.946 317.67 cv
637.946 317.118 638.393 316.67 638.946 316.67 cv
639.497 316.67 639.946 317.118 639.946 317.67 cv
f
642.706 317.67 mo
642.706 318.222 642.258 318.67 641.706 318.67 cv
641.153 318.67 640.706 318.222 640.706 317.67 cv
640.706 317.118 641.153 316.67 641.706 316.67 cv
642.258 316.67 642.706 317.118 642.706 317.67 cv
f
646.186 317.67 mo
646.186 318.222 645.737 318.67 645.186 318.67 cv
644.633 318.67 644.186 318.222 644.186 317.67 cv
644.186 317.118 644.633 316.67 645.186 316.67 cv
645.737 316.67 646.186 317.118 646.186 317.67 cv
f
649.305 317.67 mo
649.305 318.222 648.858 318.67 648.305 318.67 cv
647.754 318.67 647.305 318.222 647.305 317.67 cv
647.305 317.118 647.754 316.67 648.305 316.67 cv
648.858 316.67 649.305 317.118 649.305 317.67 cv
f
652.065 317.67 mo
652.065 318.222 651.618 318.67 651.065 318.67 cv
650.514 318.67 650.065 318.222 650.065 317.67 cv
650.065 317.118 650.514 316.67 651.065 316.67 cv
651.618 316.67 652.065 317.118 652.065 317.67 cv
f
655.065 317.67 mo
655.065 318.222 654.618 318.67 654.065 318.67 cv
653.514 318.67 653.065 318.222 653.065 317.67 cv
653.065 317.118 653.514 316.67 654.065 316.67 cv
654.618 316.67 655.065 317.118 655.065 317.67 cv
f
657.825 317.67 mo
657.825 318.222 657.377 318.67 656.825 318.67 cv
656.274 318.67 655.825 318.222 655.825 317.67 cv
655.825 317.118 656.274 316.67 656.825 316.67 cv
657.377 316.67 657.825 317.118 657.825 317.67 cv
f
660.825 317.67 mo
660.825 318.222 660.377 318.67 659.825 318.67 cv
659.274 318.67 658.825 318.222 658.825 317.67 cv
658.825 317.118 659.274 316.67 659.825 316.67 cv
660.377 316.67 660.825 317.118 660.825 317.67 cv
f
663.946 317.67 mo
663.946 318.222 663.497 318.67 662.946 318.67 cv
662.393 318.67 661.946 318.222 661.946 317.67 cv
661.946 317.118 662.393 316.67 662.946 316.67 cv
663.497 316.67 663.946 317.118 663.946 317.67 cv
f
667.305 317.67 mo
667.305 318.222 666.858 318.67 666.305 318.67 cv
665.754 318.67 665.305 318.222 665.305 317.67 cv
665.305 317.118 665.754 316.67 666.305 316.67 cv
666.858 316.67 667.305 317.118 667.305 317.67 cv
f
670.426 317.67 mo
670.426 318.222 669.977 318.67 669.426 318.67 cv
668.874 318.67 668.426 318.222 668.426 317.67 cv
668.426 317.118 668.874 316.67 669.426 316.67 cv
669.977 316.67 670.426 317.118 670.426 317.67 cv
f
673.305 317.67 mo
673.305 318.222 672.858 318.67 672.305 318.67 cv
671.754 318.67 671.305 318.222 671.305 317.67 cv
671.305 317.118 671.754 316.67 672.305 316.67 cv
672.858 316.67 673.305 317.118 673.305 317.67 cv
f
676.065 317.67 mo
676.065 318.222 675.618 318.67 675.065 318.67 cv
674.514 318.67 674.065 318.222 674.065 317.67 cv
674.065 317.118 674.514 316.67 675.065 316.67 cv
675.618 316.67 676.065 317.118 676.065 317.67 cv
f
679.426 317.67 mo
679.426 318.222 678.977 318.67 678.426 318.67 cv
677.874 318.67 677.426 318.222 677.426 317.67 cv
677.426 317.118 677.874 316.67 678.426 316.67 cv
678.977 316.67 679.426 317.118 679.426 317.67 cv
f
682.186 317.67 mo
682.186 318.222 681.737 318.67 681.186 318.67 cv
680.633 318.67 680.186 318.222 680.186 317.67 cv
680.186 317.118 680.633 316.67 681.186 316.67 cv
681.737 316.67 682.186 317.118 682.186 317.67 cv
f
685.545 317.67 mo
685.545 318.222 685.098 318.67 684.545 318.67 cv
683.993 318.67 683.545 318.222 683.545 317.67 cv
683.545 317.118 683.993 316.67 684.545 316.67 cv
685.098 316.67 685.545 317.118 685.545 317.67 cv
f
688.665 317.67 mo
688.665 318.222 688.217 318.67 687.665 318.67 cv
687.114 318.67 686.665 318.222 686.665 317.67 cv
686.665 317.118 687.114 316.67 687.665 316.67 cv
688.217 316.67 688.665 317.118 688.665 317.67 cv
f
89.9854 277.59 mo
89.9854 278.142 89.5376 278.59 88.9854 278.59 cv
88.4336 278.59 87.9854 278.142 87.9854 277.59 cv
87.9854 277.038 88.4336 276.59 88.9854 276.59 cv
89.5376 276.59 89.9854 277.038 89.9854 277.59 cv
0 0 0 1 cmyk
f
93.1055 277.59 mo
93.1055 278.142 92.6572 278.59 92.1055 278.59 cv
91.5532 278.59 91.1055 278.142 91.1055 277.59 cv
91.1055 277.038 91.5532 276.59 92.1055 276.59 cv
92.6572 276.59 93.1055 277.038 93.1055 277.59 cv
f
95.8652 277.59 mo
95.8652 278.142 95.4175 278.59 94.8652 278.59 cv
94.3135 278.59 93.8652 278.142 93.8652 277.59 cv
93.8652 277.038 94.3135 276.59 94.8652 276.59 cv
95.4175 276.59 95.8652 277.038 95.8652 277.59 cv
f
98.0254 277.59 mo
98.0254 278.142 97.5776 278.59 97.0254 278.59 cv
96.4736 278.59 96.0254 278.142 96.0254 277.59 cv
96.0254 277.038 96.4736 276.59 97.0254 276.59 cv
97.5776 276.59 98.0254 277.038 98.0254 277.59 cv
f
98.9854 277.59 mo
98.9854 278.142 98.5376 278.59 97.9854 278.59 cv
97.4336 278.59 96.9854 278.142 96.9854 277.59 cv
96.9854 277.038 97.4336 276.59 97.9854 276.59 cv
98.5376 276.59 98.9854 277.038 98.9854 277.59 cv
f
101.146 277.59 mo
101.146 278.142 100.697 278.59 100.146 278.59 cv
99.5933 278.59 99.1455 278.142 99.1455 277.59 cv
99.1455 277.038 99.5933 276.59 100.146 276.59 cv
100.697 276.59 101.146 277.038 101.146 277.59 cv
f
104.385 277.59 mo
104.385 278.142 103.938 278.59 103.385 278.59 cv
102.833 278.59 102.385 278.142 102.385 277.59 cv
102.385 277.038 102.833 276.59 103.385 276.59 cv
103.938 276.59 104.385 277.038 104.385 277.59 cv
f
108.825 277.59 mo
108.825 278.142 108.377 278.59 107.825 278.59 cv
107.273 278.59 106.826 278.142 106.826 277.59 cv
106.826 277.038 107.273 276.59 107.825 276.59 cv
108.377 276.59 108.825 277.038 108.825 277.59 cv
f
111.585 277.59 mo
111.585 278.142 111.138 278.59 110.585 278.59 cv
110.033 278.59 109.585 278.142 109.585 277.59 cv
109.585 277.038 110.033 276.59 110.585 276.59 cv
111.138 276.59 111.585 277.038 111.585 277.59 cv
f
116.625 277.59 mo
116.625 278.142 116.177 278.59 115.625 278.59 cv
115.073 278.59 114.625 278.142 114.625 277.59 cv
114.625 277.038 115.073 276.59 115.625 276.59 cv
116.177 276.59 116.625 277.038 116.625 277.59 cv
f
119.865 277.59 mo
119.865 278.142 119.417 278.59 118.865 278.59 cv
118.313 278.59 117.865 278.142 117.865 277.59 cv
117.865 277.038 118.313 276.59 118.865 276.59 cv
119.417 276.59 119.865 277.038 119.865 277.59 cv
f
123.706 277.59 mo
123.706 278.142 123.257 278.59 122.706 278.59 cv
122.153 278.59 121.706 278.142 121.706 277.59 cv
121.706 277.038 122.153 276.59 122.706 276.59 cv
123.257 276.59 123.706 277.038 123.706 277.59 cv
f
127.065 277.59 mo
127.065 278.142 126.618 278.59 126.065 278.59 cv
125.514 278.59 125.065 278.142 125.065 277.59 cv
125.065 277.038 125.514 276.59 126.065 276.59 cv
126.618 276.59 127.065 277.038 127.065 277.59 cv
f
131.985 277.59 mo
131.985 278.142 131.538 278.59 130.985 278.59 cv
130.434 278.59 129.985 278.142 129.985 277.59 cv
129.985 277.038 130.434 276.59 130.985 276.59 cv
131.538 276.59 131.985 277.038 131.985 277.59 cv
f
135.346 277.59 mo
135.346 278.142 134.897 278.59 134.346 278.59 cv
133.793 278.59 133.346 278.142 133.346 277.59 cv
133.346 277.038 133.793 276.59 134.346 276.59 cv
134.897 276.59 135.346 277.038 135.346 277.59 cv
f
138.585 277.59 mo
138.585 278.142 138.138 278.59 137.585 278.59 cv
137.033 278.59 136.585 278.142 136.585 277.59 cv
136.585 277.038 137.033 276.59 137.585 276.59 cv
138.138 276.59 138.585 277.038 138.585 277.59 cv
f
140.865 277.59 mo
140.865 278.142 140.417 278.59 139.865 278.59 cv
139.313 278.59 138.865 278.142 138.865 277.59 cv
138.865 277.038 139.313 276.59 139.865 276.59 cv
140.417 276.59 140.865 277.038 140.865 277.59 cv
f
144.105 277.59 mo
144.105 278.142 143.657 278.59 143.105 278.59 cv
142.553 278.59 142.105 278.142 142.105 277.59 cv
142.105 277.038 142.553 276.59 143.105 276.59 cv
143.657 276.59 144.105 277.038 144.105 277.59 cv
f
146.985 277.59 mo
146.985 278.142 146.538 278.59 145.985 278.59 cv
145.434 278.59 144.985 278.142 144.985 277.59 cv
144.985 277.038 145.434 276.59 145.985 276.59 cv
146.538 276.59 146.985 277.038 146.985 277.59 cv
f
151.306 277.59 mo
151.306 278.142 150.857 278.59 150.306 278.59 cv
149.753 278.59 149.306 278.142 149.306 277.59 cv
149.306 277.038 149.753 276.59 150.306 276.59 cv
150.857 276.59 151.306 277.038 151.306 277.59 cv
f
156.226 277.59 mo
156.226 278.142 155.777 278.59 155.226 278.59 cv
154.673 278.59 154.226 278.142 154.226 277.59 cv
154.226 277.038 154.673 276.59 155.226 276.59 cv
155.777 276.59 156.226 277.038 156.226 277.59 cv
f
160.186 277.59 mo
160.186 278.142 159.737 278.59 159.186 278.59 cv
158.633 278.59 158.186 278.142 158.186 277.59 cv
158.186 277.038 158.633 276.59 159.186 276.59 cv
159.737 276.59 160.186 277.038 160.186 277.59 cv
f
163.425 277.59 mo
163.425 278.142 162.978 278.59 162.425 278.59 cv
161.874 278.59 161.425 278.142 161.425 277.59 cv
161.425 277.038 161.874 276.59 162.425 276.59 cv
162.978 276.59 163.425 277.038 163.425 277.59 cv
f
167.385 277.59 mo
167.385 278.142 166.938 278.59 166.385 278.59 cv
165.833 278.59 165.385 278.142 165.385 277.59 cv
165.385 277.038 165.833 276.59 166.385 276.59 cv
166.938 276.59 167.385 277.038 167.385 277.59 cv
f
170.625 277.59 mo
170.625 278.142 170.177 278.59 169.625 278.59 cv
169.073 278.59 168.625 278.142 168.625 277.59 cv
168.625 277.038 169.073 276.59 169.625 276.59 cv
170.177 276.59 170.625 277.038 170.625 277.59 cv
f
172.905 277.59 mo
172.905 278.142 172.458 278.59 171.905 278.59 cv
171.354 278.59 170.905 278.142 170.905 277.59 cv
170.905 277.038 171.354 276.59 171.905 276.59 cv
172.458 276.59 172.905 277.038 172.905 277.59 cv
f
176.746 277.59 mo
176.746 278.142 176.297 278.59 175.746 278.59 cv
175.193 278.59 174.746 278.142 174.746 277.59 cv
174.746 277.038 175.193 276.59 175.746 276.59 cv
176.297 276.59 176.746 277.038 176.746 277.59 cv
f
178.905 277.59 mo
178.905 278.142 178.458 278.59 177.905 278.59 cv
177.354 278.59 176.905 278.142 176.905 277.59 cv
176.905 277.038 177.354 276.59 177.905 276.59 cv
178.458 276.59 178.905 277.038 178.905 277.59 cv
f
181.425 277.59 mo
181.425 278.142 180.978 278.59 180.425 278.59 cv
179.874 278.59 179.425 278.142 179.425 277.59 cv
179.425 277.038 179.874 276.59 180.425 276.59 cv
180.978 276.59 181.425 277.038 181.425 277.59 cv
f
184.186 277.59 mo
184.186 278.142 183.737 278.59 183.186 278.59 cv
182.633 278.59 182.186 278.142 182.186 277.59 cv
182.186 277.038 182.633 276.59 183.186 276.59 cv
183.737 276.59 184.186 277.038 184.186 277.59 cv
f
187.306 277.59 mo
187.306 278.142 186.857 278.59 186.306 278.59 cv
185.753 278.59 185.306 278.142 185.306 277.59 cv
185.306 277.038 185.753 276.59 186.306 276.59 cv
186.857 276.59 187.306 277.038 187.306 277.59 cv
f
189.706 277.59 mo
189.706 278.142 189.257 278.59 188.706 278.59 cv
188.153 278.59 187.706 278.142 187.706 277.59 cv
187.706 277.038 188.153 276.59 188.706 276.59 cv
189.257 276.59 189.706 277.038 189.706 277.59 cv
f
192.945 277.59 mo
192.945 278.142 192.498 278.59 191.945 278.59 cv
191.394 278.59 190.945 278.142 190.945 277.59 cv
190.945 277.038 191.394 276.59 191.945 276.59 cv
192.498 276.59 192.945 277.038 192.945 277.59 cv
f
195.105 277.59 mo
195.105 278.142 194.657 278.59 194.105 278.59 cv
193.553 278.59 193.105 278.142 193.105 277.59 cv
193.105 277.038 193.553 276.59 194.105 276.59 cv
194.657 276.59 195.105 277.038 195.105 277.59 cv
f
197.865 277.59 mo
197.865 278.142 197.417 278.59 196.865 278.59 cv
196.313 278.59 195.865 278.142 195.865 277.59 cv
195.865 277.038 196.313 276.59 196.865 276.59 cv
197.417 276.59 197.865 277.038 197.865 277.59 cv
f
202.186 277.59 mo
202.186 278.142 201.737 278.59 201.186 278.59 cv
200.633 278.59 200.186 278.142 200.186 277.59 cv
200.186 277.038 200.633 276.59 201.186 276.59 cv
201.737 276.59 202.186 277.038 202.186 277.59 cv
f
204.346 277.59 mo
204.346 278.142 203.897 278.59 203.346 278.59 cv
202.793 278.59 202.346 278.142 202.346 277.59 cv
202.346 277.038 202.793 276.59 203.346 276.59 cv
203.897 276.59 204.346 277.038 204.346 277.59 cv
f
208.425 277.59 mo
208.425 278.142 207.978 278.59 207.425 278.59 cv
206.874 278.59 206.425 278.142 206.425 277.59 cv
206.425 277.038 206.874 276.59 207.425 276.59 cv
207.978 276.59 208.425 277.038 208.425 277.59 cv
f
211.786 277.59 mo
211.786 278.142 211.337 278.59 210.786 278.59 cv
210.233 278.59 209.786 278.142 209.786 277.59 cv
209.786 277.038 210.233 276.59 210.786 276.59 cv
211.337 276.59 211.786 277.038 211.786 277.59 cv
f
213.346 277.59 mo
213.346 278.142 212.897 278.59 212.346 278.59 cv
211.793 278.59 211.346 278.142 211.346 277.59 cv
211.346 277.038 211.793 276.59 212.346 276.59 cv
212.897 276.59 213.346 277.038 213.346 277.59 cv
f
216.105 277.59 mo
216.105 278.142 215.657 278.59 215.105 278.59 cv
214.553 278.59 214.105 278.142 214.105 277.59 cv
214.105 277.038 214.553 276.59 215.105 276.59 cv
215.657 276.59 216.105 277.038 216.105 277.59 cv
f
219.585 277.59 mo
219.585 278.142 219.138 278.59 218.585 278.59 cv
218.033 278.59 217.585 278.142 217.585 277.59 cv
217.585 277.038 218.033 276.59 218.585 276.59 cv
219.138 276.59 219.585 277.038 219.585 277.59 cv
f
223.065 277.59 mo
223.065 278.142 222.618 278.59 222.065 278.59 cv
221.514 278.59 221.065 278.142 221.065 277.59 cv
221.065 277.038 221.514 276.59 222.065 276.59 cv
222.618 276.59 223.065 277.038 223.065 277.59 cv
f
224.985 277.59 mo
224.985 278.142 224.538 278.59 223.985 278.59 cv
223.434 278.59 222.985 278.142 222.985 277.59 cv
222.985 277.038 223.434 276.59 223.985 276.59 cv
224.538 276.59 224.985 277.038 224.985 277.59 cv
f
228.105 277.59 mo
228.105 278.142 227.657 278.59 227.105 278.59 cv
226.553 278.59 226.105 278.142 226.105 277.59 cv
226.105 277.038 226.553 276.59 227.105 276.59 cv
227.657 276.59 228.105 277.038 228.105 277.59 cv
f
231.465 277.59 mo
231.465 278.142 231.018 278.59 230.465 278.59 cv
229.914 278.59 229.465 278.142 229.465 277.59 cv
229.465 277.038 229.914 276.59 230.465 276.59 cv
231.018 276.59 231.465 277.038 231.465 277.59 cv
f
234.945 277.59 mo
234.945 278.142 234.498 278.59 233.945 278.59 cv
233.394 278.59 232.945 278.142 232.945 277.59 cv
232.945 277.038 233.394 276.59 233.945 276.59 cv
234.498 276.59 234.945 277.038 234.945 277.59 cv
f
237.465 277.59 mo
237.465 278.142 237.018 278.59 236.465 278.59 cv
235.914 278.59 235.465 278.142 235.465 277.59 cv
235.465 277.038 235.914 276.59 236.465 276.59 cv
237.018 276.59 237.465 277.038 237.465 277.59 cv
f
239.865 277.59 mo
239.865 278.142 239.417 278.59 238.865 278.59 cv
238.313 278.59 237.865 278.142 237.865 277.59 cv
237.865 277.038 238.313 276.59 238.865 276.59 cv
239.417 276.59 239.865 277.038 239.865 277.59 cv
f
243.346 277.59 mo
243.346 278.142 242.897 278.59 242.346 278.59 cv
241.793 278.59 241.346 278.142 241.346 277.59 cv
241.346 277.038 241.793 276.59 242.346 276.59 cv
242.897 276.59 243.346 277.038 243.346 277.59 cv
f
246.706 277.59 mo
246.706 278.142 246.257 278.59 245.706 278.59 cv
245.153 278.59 244.706 278.142 244.706 277.59 cv
244.706 277.038 245.153 276.59 245.706 276.59 cv
246.257 276.59 246.706 277.038 246.706 277.59 cv
f
249.826 277.59 mo
249.826 278.142 249.377 278.59 248.826 278.59 cv
248.273 278.59 247.826 278.142 247.826 277.59 cv
247.826 277.038 248.273 276.59 248.826 276.59 cv
249.377 276.59 249.826 277.038 249.826 277.59 cv
f
252.945 277.59 mo
252.945 278.142 252.498 278.59 251.945 278.59 cv
251.394 278.59 250.945 278.142 250.945 277.59 cv
250.945 277.038 251.394 276.59 251.945 276.59 cv
252.498 276.59 252.945 277.038 252.945 277.59 cv
f
255.465 277.59 mo
255.465 278.142 255.018 278.59 254.465 278.59 cv
253.914 278.59 253.465 278.142 253.465 277.59 cv
253.465 277.038 253.914 276.59 254.465 276.59 cv
255.018 276.59 255.465 277.038 255.465 277.59 cv
f
257.266 277.59 mo
257.266 278.142 256.817 278.59 256.266 278.59 cv
255.713 278.59 255.266 278.142 255.266 277.59 cv
255.266 277.038 255.713 276.59 256.266 276.59 cv
256.817 276.59 257.266 277.038 257.266 277.59 cv
f
262.186 277.59 mo
262.186 278.142 261.737 278.59 261.186 278.59 cv
260.633 278.59 260.186 278.142 260.186 277.59 cv
260.186 277.038 260.633 276.59 261.186 276.59 cv
261.737 276.59 262.186 277.038 262.186 277.59 cv
f
263.746 277.59 mo
263.746 278.142 263.297 278.59 262.746 278.59 cv
262.193 278.59 261.746 278.142 261.746 277.59 cv
261.746 277.038 262.193 276.59 262.746 276.59 cv
263.297 276.59 263.746 277.038 263.746 277.59 cv
f
267.465 277.59 mo
267.465 278.142 267.018 278.59 266.465 278.59 cv
265.914 278.59 265.465 278.142 265.465 277.59 cv
265.465 277.038 265.914 276.59 266.465 276.59 cv
267.018 276.59 267.465 277.038 267.465 277.59 cv
f
270.585 277.59 mo
270.585 278.142 270.138 278.59 269.585 278.59 cv
269.034 278.59 268.585 278.142 268.585 277.59 cv
268.585 277.038 269.034 276.59 269.585 276.59 cv
270.138 276.59 270.585 277.038 270.585 277.59 cv
f
273.105 277.59 mo
273.105 278.142 272.657 278.59 272.105 278.59 cv
271.554 278.59 271.105 278.142 271.105 277.59 cv
271.105 277.038 271.554 276.59 272.105 276.59 cv
272.657 276.59 273.105 277.038 273.105 277.59 cv
f
275.865 277.59 mo
275.865 278.142 275.417 278.59 274.865 278.59 cv
274.313 278.59 273.865 278.142 273.865 277.59 cv
273.865 277.038 274.313 276.59 274.865 276.59 cv
275.417 276.59 275.865 277.038 275.865 277.59 cv
f
278.266 277.59 mo
278.266 278.142 277.817 278.59 277.266 278.59 cv
276.713 278.59 276.266 278.142 276.266 277.59 cv
276.266 277.038 276.713 276.59 277.266 276.59 cv
277.817 276.59 278.266 277.038 278.266 277.59 cv
f
281.146 277.59 mo
281.146 278.142 280.697 278.59 280.146 278.59 cv
279.593 278.59 279.146 278.142 279.146 277.59 cv
279.146 277.038 279.593 276.59 280.146 276.59 cv
280.697 276.59 281.146 277.038 281.146 277.59 cv
f
283.666 277.59 mo
283.666 278.142 283.217 278.59 282.666 278.59 cv
282.113 278.59 281.666 278.142 281.666 277.59 cv
281.666 277.038 282.113 276.59 282.666 276.59 cv
283.217 276.59 283.666 277.038 283.666 277.59 cv
f
285.465 277.59 mo
285.465 278.142 285.018 278.59 284.465 278.59 cv
283.914 278.59 283.465 278.142 283.465 277.59 cv
283.465 277.038 283.914 276.59 284.465 276.59 cv
285.018 276.59 285.465 277.038 285.465 277.59 cv
f
287.985 277.59 mo
287.985 278.142 287.538 278.59 286.985 278.59 cv
286.434 278.59 285.985 278.142 285.985 277.59 cv
285.985 277.038 286.434 276.59 286.985 276.59 cv
287.538 276.59 287.985 277.038 287.985 277.59 cv
f
291.706 277.59 mo
291.706 278.142 291.257 278.59 290.706 278.59 cv
290.153 278.59 289.706 278.142 289.706 277.59 cv
289.706 277.038 290.153 276.59 290.706 276.59 cv
291.257 276.59 291.706 277.038 291.706 277.59 cv
f
293.865 277.59 mo
293.865 278.142 293.417 278.59 292.865 278.59 cv
292.313 278.59 291.865 278.142 291.865 277.59 cv
291.865 277.038 292.313 276.59 292.865 276.59 cv
293.417 276.59 293.865 277.038 293.865 277.59 cv
f
297.945 277.59 mo
297.945 278.142 297.498 278.59 296.945 278.59 cv
296.394 278.59 295.945 278.142 295.945 277.59 cv
295.945 277.038 296.394 276.59 296.945 276.59 cv
297.498 276.59 297.945 277.038 297.945 277.59 cv
f
299.746 277.59 mo
299.746 278.142 299.297 278.59 298.746 278.59 cv
298.193 278.59 297.746 278.142 297.746 277.59 cv
297.746 277.038 298.193 276.59 298.746 276.59 cv
299.297 276.59 299.746 277.038 299.746 277.59 cv
f
303.465 277.59 mo
303.465 278.142 303.018 278.59 302.465 278.59 cv
301.914 278.59 301.465 278.142 301.465 277.59 cv
301.465 277.038 301.914 276.59 302.465 276.59 cv
303.018 276.59 303.465 277.038 303.465 277.59 cv
f
307.306 277.59 mo
307.306 278.142 306.857 278.59 306.306 278.59 cv
305.753 278.59 305.306 278.142 305.306 277.59 cv
305.306 277.038 305.753 276.59 306.306 276.59 cv
306.857 276.59 307.306 277.038 307.306 277.59 cv
f
311.266 277.59 mo
311.266 278.142 310.817 278.59 310.266 278.59 cv
309.713 278.59 309.266 278.142 309.266 277.59 cv
309.266 277.038 309.713 276.59 310.266 276.59 cv
310.817 276.59 311.266 277.038 311.266 277.59 cv
f
314.746 277.59 mo
314.746 278.142 314.297 278.59 313.746 278.59 cv
313.193 278.59 312.746 278.142 312.746 277.59 cv
312.746 277.038 313.193 276.59 313.746 276.59 cv
314.297 276.59 314.746 277.038 314.746 277.59 cv
f
317.746 277.59 mo
317.746 278.142 317.297 278.59 316.746 278.59 cv
316.193 278.59 315.746 278.142 315.746 277.59 cv
315.746 277.038 316.193 276.59 316.746 276.59 cv
317.297 276.59 317.746 277.038 317.746 277.59 cv
f
319.306 277.59 mo
319.306 278.142 318.857 278.59 318.306 278.59 cv
317.753 278.59 317.306 278.142 317.306 277.59 cv
317.306 277.038 317.753 276.59 318.306 276.59 cv
318.857 276.59 319.306 277.038 319.306 277.59 cv
f
322.425 277.59 mo
322.425 278.142 321.978 278.59 321.425 278.59 cv
320.874 278.59 320.425 278.142 320.425 277.59 cv
320.425 277.038 320.874 276.59 321.425 276.59 cv
321.978 276.59 322.425 277.038 322.425 277.59 cv
f
326.146 277.59 mo
326.146 278.142 325.697 278.59 325.146 278.59 cv
324.593 278.59 324.146 278.142 324.146 277.59 cv
324.146 277.038 324.593 276.59 325.146 276.59 cv
325.697 276.59 326.146 277.038 326.146 277.59 cv
f
328.666 277.59 mo
328.666 278.142 328.217 278.59 327.666 278.59 cv
327.113 278.59 326.666 278.142 326.666 277.59 cv
326.666 277.038 327.113 276.59 327.666 276.59 cv
328.217 276.59 328.666 277.038 328.666 277.59 cv
f
331.786 277.59 mo
331.786 278.142 331.337 278.59 330.786 278.59 cv
330.233 278.59 329.786 278.142 329.786 277.59 cv
329.786 277.038 330.233 276.59 330.786 276.59 cv
331.337 276.59 331.786 277.038 331.786 277.59 cv
f
333.585 277.59 mo
333.585 278.142 333.138 278.59 332.585 278.59 cv
332.033 278.59 331.585 278.142 331.585 277.59 cv
331.585 277.038 332.033 276.59 332.585 276.59 cv
333.138 276.59 333.585 277.038 333.585 277.59 cv
f
336.105 277.59 mo
336.105 278.142 335.657 278.59 335.105 278.59 cv
334.554 278.59 334.105 278.142 334.105 277.59 cv
334.105 277.038 334.554 276.59 335.105 276.59 cv
335.657 276.59 336.105 277.038 336.105 277.59 cv
f
338.865 277.59 mo
338.865 278.142 338.417 278.59 337.865 278.59 cv
337.313 278.59 336.865 278.142 336.865 277.59 cv
336.865 277.038 337.313 276.59 337.865 276.59 cv
338.417 276.59 338.865 277.038 338.865 277.59 cv
f
341.385 277.59 mo
341.385 278.142 340.938 278.59 340.385 278.59 cv
339.833 278.59 339.385 278.142 339.385 277.59 cv
339.385 277.038 339.833 276.59 340.385 276.59 cv
340.938 276.59 341.385 277.038 341.385 277.59 cv
f
344.025 277.59 mo
344.025 278.142 343.578 278.59 343.025 278.59 cv
342.474 278.59 342.025 278.142 342.025 277.59 cv
342.025 277.038 342.474 276.59 343.025 276.59 cv
343.578 276.59 344.025 277.038 344.025 277.59 cv
f
346.186 277.59 mo
346.186 278.142 345.737 278.59 345.186 278.59 cv
344.633 278.59 344.186 278.142 344.186 277.59 cv
344.186 277.038 344.633 276.59 345.186 276.59 cv
345.737 276.59 346.186 277.038 346.186 277.59 cv
f
349.065 277.59 mo
349.065 278.142 348.618 278.59 348.065 278.59 cv
347.514 278.59 347.065 278.142 347.065 277.59 cv
347.065 277.038 347.514 276.59 348.065 276.59 cv
348.618 276.59 349.065 277.038 349.065 277.59 cv
f
351.585 277.59 mo
351.585 278.142 351.138 278.59 350.585 278.59 cv
350.033 278.59 349.585 278.142 349.585 277.59 cv
349.585 277.038 350.033 276.59 350.585 276.59 cv
351.138 276.59 351.585 277.038 351.585 277.59 cv
f
354.105 277.59 mo
354.105 278.142 353.657 278.59 353.105 278.59 cv
352.554 278.59 352.105 278.142 352.105 277.59 cv
352.105 277.038 352.554 276.59 353.105 276.59 cv
353.657 276.59 354.105 277.038 354.105 277.59 cv
f
357.465 277.59 mo
357.465 278.142 357.018 278.59 356.465 278.59 cv
355.914 278.59 355.465 278.142 355.465 277.59 cv
355.465 277.038 355.914 276.59 356.465 276.59 cv
357.018 276.59 357.465 277.038 357.465 277.59 cv
f
360.585 277.59 mo
360.585 278.142 360.138 278.59 359.585 278.59 cv
359.033 278.59 358.585 278.142 358.585 277.59 cv
358.585 277.038 359.033 276.59 359.585 276.59 cv
360.138 276.59 360.585 277.038 360.585 277.59 cv
f
364.186 277.59 mo
364.186 278.142 363.737 278.59 363.186 278.59 cv
362.633 278.59 362.186 278.142 362.186 277.59 cv
362.186 277.038 362.633 276.59 363.186 276.59 cv
363.737 276.59 364.186 277.038 364.186 277.59 cv
f
367.665 277.59 mo
367.665 278.142 367.217 278.59 366.665 278.59 cv
366.114 278.59 365.665 278.142 365.665 277.59 cv
365.665 277.038 366.114 276.59 366.665 276.59 cv
367.217 276.59 367.665 277.038 367.665 277.59 cv
f
371.745 277.59 mo
371.745 278.142 371.297 278.59 370.745 278.59 cv
370.194 278.59 369.745 278.142 369.745 277.59 cv
369.745 277.038 370.194 276.59 370.745 276.59 cv
371.297 276.59 371.745 277.038 371.745 277.59 cv
f
373.305 277.59 mo
373.305 278.142 372.858 278.59 372.305 278.59 cv
371.754 278.59 371.305 278.142 371.305 277.59 cv
371.305 277.038 371.754 276.59 372.305 276.59 cv
372.858 276.59 373.305 277.038 373.305 277.59 cv
f
375.706 277.59 mo
375.706 278.142 375.258 278.59 374.706 278.59 cv
374.153 278.59 373.706 278.142 373.706 277.59 cv
373.706 277.038 374.153 276.59 374.706 276.59 cv
375.258 276.59 375.706 277.038 375.706 277.59 cv
f
378.225 277.59 mo
378.225 278.142 377.778 278.59 377.225 278.59 cv
376.674 278.59 376.225 278.142 376.225 277.59 cv
376.225 277.038 376.674 276.59 377.225 276.59 cv
377.778 276.59 378.225 277.038 378.225 277.59 cv
f
380.985 277.59 mo
380.985 278.142 380.538 278.59 379.985 278.59 cv
379.434 278.59 378.985 278.142 378.985 277.59 cv
378.985 277.038 379.434 276.59 379.985 276.59 cv
380.538 276.59 380.985 277.038 380.985 277.59 cv
f
384.106 277.59 mo
384.106 278.142 383.657 278.59 383.106 278.59 cv
382.553 278.59 382.106 278.142 382.106 277.59 cv
382.106 277.038 382.553 276.59 383.106 276.59 cv
383.657 276.59 384.106 277.038 384.106 277.59 cv
f
387.825 277.59 mo
387.825 278.142 387.377 278.59 386.825 278.59 cv
386.274 278.59 385.825 278.142 385.825 277.59 cv
385.825 277.038 386.274 276.59 386.825 276.59 cv
387.377 276.59 387.825 277.038 387.825 277.59 cv
f
390.346 277.59 mo
390.346 278.142 389.897 278.59 389.346 278.59 cv
388.793 278.59 388.346 278.142 388.346 277.59 cv
388.346 277.038 388.793 276.59 389.346 276.59 cv
389.897 276.59 390.346 277.038 390.346 277.59 cv
f
393.706 277.59 mo
393.706 278.142 393.258 278.59 392.706 278.59 cv
392.153 278.59 391.706 278.142 391.706 277.59 cv
391.706 277.038 392.153 276.59 392.706 276.59 cv
393.258 276.59 393.706 277.038 393.706 277.59 cv
f
396.225 277.59 mo
396.225 278.142 395.778 278.59 395.225 278.59 cv
394.674 278.59 394.225 278.142 394.225 277.59 cv
394.225 277.038 394.674 276.59 395.225 276.59 cv
395.778 276.59 396.225 277.038 396.225 277.59 cv
f
399.346 277.59 mo
399.346 278.142 398.897 278.59 398.346 278.59 cv
397.793 278.59 397.346 278.142 397.346 277.59 cv
397.346 277.038 397.793 276.59 398.346 276.59 cv
398.897 276.59 399.346 277.038 399.346 277.59 cv
f
402.346 277.59 mo
402.346 278.142 401.897 278.59 401.346 278.59 cv
400.793 278.59 400.346 278.142 400.346 277.59 cv
400.346 277.038 400.793 276.59 401.346 276.59 cv
401.897 276.59 402.346 277.038 402.346 277.59 cv
f
405.586 277.59 mo
405.586 278.142 405.137 278.59 404.586 278.59 cv
404.034 278.59 403.586 278.142 403.586 277.59 cv
403.586 277.038 404.034 276.59 404.586 276.59 cv
405.137 276.59 405.586 277.038 405.586 277.59 cv
f
408.346 277.59 mo
408.346 278.142 407.897 278.59 407.346 278.59 cv
406.793 278.59 406.346 278.142 406.346 277.59 cv
406.346 277.038 406.793 276.59 407.346 276.59 cv
407.897 276.59 408.346 277.038 408.346 277.59 cv
f
411.465 277.59 mo
411.465 278.142 411.018 278.59 410.465 278.59 cv
409.913 278.59 409.465 278.142 409.465 277.59 cv
409.465 277.038 409.913 276.59 410.465 276.59 cv
411.018 276.59 411.465 277.038 411.465 277.59 cv
f
413.866 277.59 mo
413.866 278.142 413.418 278.59 412.866 278.59 cv
412.313 278.59 411.866 278.142 411.866 277.59 cv
411.866 277.038 412.313 276.59 412.866 276.59 cv
413.418 276.59 413.866 277.038 413.866 277.59 cv
f
417.346 277.59 mo
417.346 278.142 416.897 278.59 416.346 278.59 cv
415.793 278.59 415.346 278.142 415.346 277.59 cv
415.346 277.038 415.793 276.59 416.346 276.59 cv
416.897 276.59 417.346 277.038 417.346 277.59 cv
f
420.106 277.59 mo
420.106 278.142 419.657 278.59 419.106 278.59 cv
418.553 278.59 418.106 278.142 418.106 277.59 cv
418.106 277.038 418.553 276.59 419.106 276.59 cv
419.657 276.59 420.106 277.038 420.106 277.59 cv
f
423.825 277.59 mo
423.825 278.142 423.377 278.59 422.825 278.59 cv
422.274 278.59 421.825 278.142 421.825 277.59 cv
421.825 277.038 422.274 276.59 422.825 276.59 cv
423.377 276.59 423.825 277.038 423.825 277.59 cv
f
426.706 277.59 mo
426.706 278.142 426.258 278.59 425.706 278.59 cv
425.153 278.59 424.706 278.142 424.706 277.59 cv
424.706 277.038 425.153 276.59 425.706 276.59 cv
426.258 276.59 426.706 277.038 426.706 277.59 cv
f
429.465 277.59 mo
429.465 278.142 429.018 278.59 428.465 278.59 cv
427.913 278.59 427.465 278.142 427.465 277.59 cv
427.465 277.038 427.913 276.59 428.465 276.59 cv
429.018 276.59 429.465 277.038 429.465 277.59 cv
f
432.586 277.59 mo
432.586 278.142 432.137 278.59 431.586 278.59 cv
431.034 278.59 430.586 278.142 430.586 277.59 cv
430.586 277.038 431.034 276.59 431.586 276.59 cv
432.137 276.59 432.586 277.038 432.586 277.59 cv
f
434.385 277.59 mo
434.385 278.142 433.938 278.59 433.385 278.59 cv
432.833 278.59 432.385 278.142 432.385 277.59 cv
432.385 277.038 432.833 276.59 433.385 276.59 cv
433.938 276.59 434.385 277.038 434.385 277.59 cv
f
437.145 277.59 mo
437.145 278.142 436.698 278.59 436.145 278.59 cv
435.594 278.59 435.145 278.142 435.145 277.59 cv
435.145 277.038 435.594 276.59 436.145 276.59 cv
436.698 276.59 437.145 277.038 437.145 277.59 cv
f
440.985 277.59 mo
440.985 278.142 440.538 278.59 439.985 278.59 cv
439.434 278.59 438.985 278.142 438.985 277.59 cv
438.985 277.038 439.434 276.59 439.985 276.59 cv
440.538 276.59 440.985 277.038 440.985 277.59 cv
f
443.866 277.59 mo
443.866 278.142 443.418 278.59 442.866 278.59 cv
442.313 278.59 441.866 278.142 441.866 277.59 cv
441.866 277.038 442.313 276.59 442.866 276.59 cv
443.418 276.59 443.866 277.038 443.866 277.59 cv
f
446.266 277.59 mo
446.266 278.142 445.817 278.59 445.266 278.59 cv
444.713 278.59 444.266 278.142 444.266 277.59 cv
444.266 277.038 444.713 276.59 445.266 276.59 cv
445.817 276.59 446.266 277.038 446.266 277.59 cv
f
449.385 277.59 mo
449.385 278.142 448.938 278.59 448.385 278.59 cv
447.833 278.59 447.385 278.142 447.385 277.59 cv
447.385 277.038 447.833 276.59 448.385 276.59 cv
448.938 276.59 449.385 277.038 449.385 277.59 cv
f
451.545 277.59 mo
451.545 278.142 451.098 278.59 450.545 278.59 cv
449.993 278.59 449.545 278.142 449.545 277.59 cv
449.545 277.038 449.993 276.59 450.545 276.59 cv
451.098 276.59 451.545 277.038 451.545 277.59 cv
f
455.026 277.59 mo
455.026 278.142 454.577 278.59 454.026 278.59 cv
453.473 278.59 453.026 278.142 453.026 277.59 cv
453.026 277.038 453.473 276.59 454.026 276.59 cv
454.577 276.59 455.026 277.038 455.026 277.59 cv
f
458.745 277.59 mo
458.745 278.142 458.297 278.59 457.745 278.59 cv
457.194 278.59 456.745 278.142 456.745 277.59 cv
456.745 277.038 457.194 276.59 457.745 276.59 cv
458.297 276.59 458.745 277.038 458.745 277.59 cv
f
461.866 277.59 mo
461.866 278.142 461.418 278.59 460.866 278.59 cv
460.313 278.59 459.866 278.142 459.866 277.59 cv
459.866 277.038 460.313 276.59 460.866 276.59 cv
461.418 276.59 461.866 277.038 461.866 277.59 cv
f
464.745 277.59 mo
464.745 278.142 464.297 278.59 463.745 278.59 cv
463.194 278.59 462.745 278.142 462.745 277.59 cv
462.745 277.038 463.194 276.59 463.745 276.59 cv
464.297 276.59 464.745 277.038 464.745 277.59 cv
f
467.385 277.59 mo
467.385 278.142 466.938 278.59 466.385 278.59 cv
465.833 278.59 465.385 278.142 465.385 277.59 cv
465.385 277.038 465.833 276.59 466.385 276.59 cv
466.938 276.59 467.385 277.038 467.385 277.59 cv
f
469.905 277.59 mo
469.905 278.142 469.458 278.59 468.905 278.59 cv
468.354 278.59 467.905 278.142 467.905 277.59 cv
467.905 277.038 468.354 276.59 468.905 276.59 cv
469.458 276.59 469.905 277.038 469.905 277.59 cv
f
473.866 277.59 mo
473.866 278.142 473.418 278.59 472.866 278.59 cv
472.313 278.59 471.866 278.142 471.866 277.59 cv
471.866 277.038 472.313 276.59 472.866 276.59 cv
473.418 276.59 473.866 277.038 473.866 277.59 cv
f
477.106 277.59 mo
477.106 278.142 476.657 278.59 476.106 278.59 cv
475.553 278.59 475.106 278.142 475.106 277.59 cv
475.106 277.038 475.553 276.59 476.106 276.59 cv
476.657 276.59 477.106 277.038 477.106 277.59 cv
f
479.866 277.59 mo
479.866 278.142 479.418 278.59 478.866 278.59 cv
478.313 278.59 477.866 278.142 477.866 277.59 cv
477.866 277.038 478.313 276.59 478.866 276.59 cv
479.418 276.59 479.866 277.038 479.866 277.59 cv
f
482.745 277.59 mo
482.745 278.142 482.297 278.59 481.745 278.59 cv
481.194 278.59 480.745 278.142 480.745 277.59 cv
480.745 277.038 481.194 276.59 481.745 276.59 cv
482.297 276.59 482.745 277.038 482.745 277.59 cv
f
485.745 277.59 mo
485.745 278.142 485.297 278.59 484.745 278.59 cv
484.194 278.59 483.745 278.142 483.745 277.59 cv
483.745 277.038 484.194 276.59 484.745 276.59 cv
485.297 276.59 485.745 277.038 485.745 277.59 cv
f
488.506 277.59 mo
488.506 278.142 488.057 278.59 487.506 278.59 cv
486.954 278.59 486.506 278.142 486.506 277.59 cv
486.506 277.038 486.954 276.59 487.506 276.59 cv
488.057 276.59 488.506 277.038 488.506 277.59 cv
f
491.866 277.59 mo
491.866 278.142 491.418 278.59 490.866 278.59 cv
490.313 278.59 489.866 278.142 489.866 277.59 cv
489.866 277.038 490.313 276.59 490.866 276.59 cv
491.418 276.59 491.866 277.038 491.866 277.59 cv
f
494.745 277.59 mo
494.745 278.142 494.297 278.59 493.745 278.59 cv
493.194 278.59 492.745 278.142 492.745 277.59 cv
492.745 277.038 493.194 276.59 493.745 276.59 cv
494.297 276.59 494.745 277.038 494.745 277.59 cv
f
497.866 277.59 mo
497.866 278.142 497.418 278.59 496.866 278.59 cv
496.313 278.59 495.866 278.142 495.866 277.59 cv
495.866 277.038 496.313 276.59 496.866 276.59 cv
497.418 276.59 497.866 277.038 497.866 277.59 cv
f
500.985 277.59 mo
500.985 278.142 500.538 278.59 499.985 278.59 cv
499.434 278.59 498.985 278.142 498.985 277.59 cv
498.985 277.038 499.434 276.59 499.985 276.59 cv
500.538 276.59 500.985 277.038 500.985 277.59 cv
f
503.145 277.59 mo
503.145 278.142 502.698 278.59 502.145 278.59 cv
501.594 278.59 501.145 278.142 501.145 277.59 cv
501.145 277.038 501.594 276.59 502.145 276.59 cv
502.698 276.59 503.145 277.038 503.145 277.59 cv
f
505.305 277.59 mo
505.305 278.142 504.858 278.59 504.305 278.59 cv
503.754 278.59 503.305 278.142 503.305 277.59 cv
503.305 277.038 503.754 276.59 504.305 276.59 cv
504.858 276.59 505.305 277.038 505.305 277.59 cv
f
508.426 277.59 mo
508.426 278.142 507.977 278.59 507.426 278.59 cv
506.874 278.59 506.426 278.142 506.426 277.59 cv
506.426 277.038 506.874 276.59 507.426 276.59 cv
507.977 276.59 508.426 277.038 508.426 277.59 cv
f
510.946 277.59 mo
510.946 278.142 510.497 278.59 509.946 278.59 cv
509.393 278.59 508.946 278.142 508.946 277.59 cv
508.946 277.038 509.393 276.59 509.946 276.59 cv
510.497 276.59 510.946 277.038 510.946 277.59 cv
f
514.305 277.59 mo
514.305 278.142 513.858 278.59 513.305 278.59 cv
512.754 278.59 512.305 278.142 512.305 277.59 cv
512.305 277.038 512.754 276.59 513.305 276.59 cv
513.858 276.59 514.305 277.038 514.305 277.59 cv
f
516.465 277.59 mo
516.465 278.142 516.018 278.59 515.465 278.59 cv
514.913 278.59 514.465 278.142 514.465 277.59 cv
514.465 277.038 514.913 276.59 515.465 276.59 cv
516.018 276.59 516.465 277.038 516.465 277.59 cv
f
519.706 277.59 mo
519.706 278.142 519.258 278.59 518.706 278.59 cv
518.153 278.59 517.706 278.142 517.706 277.59 cv
517.706 277.038 518.153 276.59 518.706 276.59 cv
519.258 276.59 519.706 277.038 519.706 277.59 cv
f
522.106 277.59 mo
522.106 278.142 521.657 278.59 521.106 278.59 cv
520.553 278.59 520.106 278.142 520.106 277.59 cv
520.106 277.038 520.553 276.59 521.106 276.59 cv
521.657 276.59 522.106 277.038 522.106 277.59 cv
f
526.186 277.59 mo
526.186 278.142 525.737 278.59 525.186 278.59 cv
524.633 278.59 524.186 278.142 524.186 277.59 cv
524.186 277.038 524.633 276.59 525.186 276.59 cv
525.737 276.59 526.186 277.038 526.186 277.59 cv
f
528.346 277.59 mo
528.346 278.142 527.897 278.59 527.346 278.59 cv
526.793 278.59 526.346 278.142 526.346 277.59 cv
526.346 277.038 526.793 276.59 527.346 276.59 cv
527.897 276.59 528.346 277.038 528.346 277.59 cv
f
531.106 277.59 mo
531.106 278.142 530.657 278.59 530.106 278.59 cv
529.553 278.59 529.106 278.142 529.106 277.59 cv
529.106 277.038 529.553 276.59 530.106 276.59 cv
530.657 276.59 531.106 277.038 531.106 277.59 cv
f
533.625 277.59 mo
533.625 278.142 533.178 278.59 532.625 278.59 cv
532.073 278.59 531.625 278.142 531.625 277.59 cv
531.625 277.038 532.073 276.59 532.625 276.59 cv
533.178 276.59 533.625 277.038 533.625 277.59 cv
f
536.745 277.59 mo
536.745 278.142 536.297 278.59 535.745 278.59 cv
535.194 278.59 534.745 278.142 534.745 277.59 cv
534.745 277.038 535.194 276.59 535.745 276.59 cv
536.297 276.59 536.745 277.038 536.745 277.59 cv
f
539.145 277.59 mo
539.145 278.142 538.698 278.59 538.145 278.59 cv
537.594 278.59 537.145 278.142 537.145 277.59 cv
537.145 277.038 537.594 276.59 538.145 276.59 cv
538.698 276.59 539.145 277.038 539.145 277.59 cv
f
542.985 277.59 mo
542.985 278.142 542.538 278.59 541.985 278.59 cv
541.434 278.59 540.985 278.142 540.985 277.59 cv
540.985 277.038 541.434 276.59 541.985 276.59 cv
542.538 276.59 542.985 277.038 542.985 277.59 cv
f
545.625 277.59 mo
545.625 278.142 545.178 278.59 544.625 278.59 cv
544.073 278.59 543.625 278.142 543.625 277.59 cv
543.625 277.038 544.073 276.59 544.625 276.59 cv
545.178 276.59 545.625 277.038 545.625 277.59 cv
f
549.465 277.59 mo
549.465 278.142 549.018 278.59 548.465 278.59 cv
547.913 278.59 547.465 278.142 547.465 277.59 cv
547.465 277.038 547.913 276.59 548.465 276.59 cv
549.018 276.59 549.465 277.038 549.465 277.59 cv
f
552.106 277.59 mo
552.106 278.142 551.657 278.59 551.106 278.59 cv
550.553 278.59 550.106 278.142 550.106 277.59 cv
550.106 277.038 550.553 276.59 551.106 276.59 cv
551.657 276.59 552.106 277.038 552.106 277.59 cv
f
554.026 277.59 mo
554.026 278.142 553.577 278.59 553.026 278.59 cv
552.473 278.59 552.026 278.142 552.026 277.59 cv
552.026 277.038 552.473 276.59 553.026 276.59 cv
553.577 276.59 554.026 277.038 554.026 277.59 cv
f
557.506 277.59 mo
557.506 278.142 557.057 278.59 556.506 278.59 cv
555.954 278.59 555.506 278.142 555.506 277.59 cv
555.506 277.038 555.954 276.59 556.506 276.59 cv
557.057 276.59 557.506 277.038 557.506 277.59 cv
f
560.625 277.59 mo
560.625 278.142 560.178 278.59 559.625 278.59 cv
559.073 278.59 558.625 278.142 558.625 277.59 cv
558.625 277.038 559.073 276.59 559.625 276.59 cv
560.178 276.59 560.625 277.038 560.625 277.59 cv
f
562.665 277.59 mo
562.665 278.142 562.217 278.59 561.665 278.59 cv
561.114 278.59 560.665 278.142 560.665 277.59 cv
560.665 277.038 561.114 276.59 561.665 276.59 cv
562.217 276.59 562.665 277.038 562.665 277.59 cv
f
566.026 277.59 mo
566.026 278.142 565.577 278.59 565.026 278.59 cv
564.473 278.59 564.026 278.142 564.026 277.59 cv
564.026 277.038 564.473 276.59 565.026 276.59 cv
565.577 276.59 566.026 277.038 566.026 277.59 cv
f
569.145 277.59 mo
569.145 278.142 568.698 278.59 568.145 278.59 cv
567.594 278.59 567.145 278.142 567.145 277.59 cv
567.145 277.038 567.594 276.59 568.145 276.59 cv
568.698 276.59 569.145 277.038 569.145 277.59 cv
f
571.545 277.59 mo
571.545 278.142 571.098 278.59 570.545 278.59 cv
569.993 278.59 569.545 278.142 569.545 277.59 cv
569.545 277.038 569.993 276.59 570.545 276.59 cv
571.098 276.59 571.545 277.038 571.545 277.59 cv
f
575.026 277.59 mo
575.026 278.142 574.577 278.59 574.026 278.59 cv
573.473 278.59 573.026 278.142 573.026 277.59 cv
573.026 277.038 573.473 276.59 574.026 276.59 cv
574.577 276.59 575.026 277.038 575.026 277.59 cv
f
578.026 277.59 mo
578.026 278.142 577.577 278.59 577.026 278.59 cv
576.473 278.59 576.026 278.142 576.026 277.59 cv
576.026 277.038 576.473 276.59 577.026 276.59 cv
577.577 276.59 578.026 277.038 578.026 277.59 cv
f
580.186 277.59 mo
580.186 278.142 579.737 278.59 579.186 278.59 cv
578.633 278.59 578.186 278.142 578.186 277.59 cv
578.186 277.038 578.633 276.59 579.186 276.59 cv
579.737 276.59 580.186 277.038 580.186 277.59 cv
f
583.665 277.59 mo
583.665 278.142 583.217 278.59 582.665 278.59 cv
582.114 278.59 581.665 278.142 581.665 277.59 cv
581.665 277.038 582.114 276.59 582.665 276.59 cv
583.217 276.59 583.665 277.038 583.665 277.59 cv
f
587.145 277.59 mo
587.145 278.142 586.698 278.59 586.145 278.59 cv
585.594 278.59 585.145 278.142 585.145 277.59 cv
585.145 277.038 585.594 276.59 586.145 276.59 cv
586.698 276.59 587.145 277.038 587.145 277.59 cv
f
588.946 277.59 mo
588.946 278.142 588.497 278.59 587.946 278.59 cv
587.393 278.59 586.946 278.142 586.946 277.59 cv
586.946 277.038 587.393 276.59 587.946 276.59 cv
588.497 276.59 588.946 277.038 588.946 277.59 cv
f
592.665 277.59 mo
592.665 278.142 592.217 278.59 591.665 278.59 cv
591.114 278.59 590.665 278.142 590.665 277.59 cv
590.665 277.038 591.114 276.59 591.665 276.59 cv
592.217 276.59 592.665 277.038 592.665 277.59 cv
f
595.186 277.59 mo
595.186 278.142 594.737 278.59 594.186 278.59 cv
593.633 278.59 593.186 278.142 593.186 277.59 cv
593.186 277.038 593.633 276.59 594.186 276.59 cv
594.737 276.59 595.186 277.038 595.186 277.59 cv
f
598.186 277.59 mo
598.186 278.142 597.737 278.59 597.186 278.59 cv
596.633 278.59 596.186 278.142 596.186 277.59 cv
596.186 277.038 596.633 276.59 597.186 276.59 cv
597.737 276.59 598.186 277.038 598.186 277.59 cv
f
600.825 277.59 mo
600.825 278.142 600.377 278.59 599.825 278.59 cv
599.274 278.59 598.825 278.142 598.825 277.59 cv
598.825 277.038 599.274 276.59 599.825 276.59 cv
600.377 276.59 600.825 277.038 600.825 277.59 cv
f
604.665 277.59 mo
604.665 278.142 604.217 278.59 603.665 278.59 cv
603.114 278.59 602.665 278.142 602.665 277.59 cv
602.665 277.038 603.114 276.59 603.665 276.59 cv
604.217 276.59 604.665 277.038 604.665 277.59 cv
f
606.346 277.59 mo
606.346 278.142 605.897 278.59 605.346 278.59 cv
604.793 278.59 604.346 278.142 604.346 277.59 cv
604.346 277.038 604.793 276.59 605.346 276.59 cv
605.897 276.59 606.346 277.038 606.346 277.59 cv
f
609.106 277.59 mo
609.106 278.142 608.657 278.59 608.106 278.59 cv
607.553 278.59 607.106 278.142 607.106 277.59 cv
607.106 277.038 607.553 276.59 608.106 276.59 cv
608.657 276.59 609.106 277.038 609.106 277.59 cv
f
612.465 277.59 mo
612.465 278.142 612.018 278.59 611.465 278.59 cv
610.913 278.59 610.465 278.142 610.465 277.59 cv
610.465 277.038 610.913 276.59 611.465 276.59 cv
612.018 276.59 612.465 277.038 612.465 277.59 cv
f
615.346 277.59 mo
615.346 278.142 614.897 278.59 614.346 278.59 cv
613.793 278.59 613.346 278.142 613.346 277.59 cv
613.346 277.038 613.793 276.59 614.346 276.59 cv
614.897 276.59 615.346 277.038 615.346 277.59 cv
f
618.346 277.59 mo
618.346 278.142 617.897 278.59 617.346 278.59 cv
616.793 278.59 616.346 278.142 616.346 277.59 cv
616.346 277.038 616.793 276.59 617.346 276.59 cv
617.897 276.59 618.346 277.038 618.346 277.59 cv
f
621.225 277.59 mo
621.225 278.142 620.778 278.59 620.225 278.59 cv
619.674 278.59 619.225 278.142 619.225 277.59 cv
619.225 277.038 619.674 276.59 620.225 276.59 cv
620.778 276.59 621.225 277.038 621.225 277.59 cv
f
624.946 277.59 mo
624.946 278.142 624.497 278.59 623.946 278.59 cv
623.393 278.59 622.946 278.142 622.946 277.59 cv
622.946 277.038 623.393 276.59 623.946 276.59 cv
624.497 276.59 624.946 277.038 624.946 277.59 cv
f
627.946 277.59 mo
627.946 278.142 627.497 278.59 626.946 278.59 cv
626.393 278.59 625.946 278.142 625.946 277.59 cv
625.946 277.038 626.393 276.59 626.946 276.59 cv
627.497 276.59 627.946 277.038 627.946 277.59 cv
f
631.065 277.59 mo
631.065 278.142 630.618 278.59 630.065 278.59 cv
629.514 278.59 629.065 278.142 629.065 277.59 cv
629.065 277.038 629.514 276.59 630.065 276.59 cv
630.618 276.59 631.065 277.038 631.065 277.59 cv
f
633.465 277.59 mo
633.465 278.142 633.018 278.59 632.465 278.59 cv
631.913 278.59 631.465 278.142 631.465 277.59 cv
631.465 277.038 631.913 276.59 632.465 276.59 cv
633.018 276.59 633.465 277.038 633.465 277.59 cv
f
636.225 277.59 mo
636.225 278.142 635.778 278.59 635.225 278.59 cv
634.674 278.59 634.225 278.142 634.225 277.59 cv
634.225 277.038 634.674 276.59 635.225 276.59 cv
635.778 276.59 636.225 277.038 636.225 277.59 cv
f
638.145 277.59 mo
638.145 278.142 637.698 278.59 637.145 278.59 cv
636.594 278.59 636.145 278.142 636.145 277.59 cv
636.145 277.038 636.594 276.59 637.145 276.59 cv
637.698 276.59 638.145 277.038 638.145 277.59 cv
f
641.266 277.59 mo
641.266 278.142 640.817 278.59 640.266 278.59 cv
639.713 278.59 639.266 278.142 639.266 277.59 cv
639.266 277.038 639.713 276.59 640.266 276.59 cv
640.817 276.59 641.266 277.038 641.266 277.59 cv
f
[6 6 ] 0 dsh
88.9189 237.507 mo
89.002 275.84 li
@
92.752 275.59 mo
89.002 277.59 li
89.002 275.84 li
92.752 275.59 li
cp
ef
92.752 275.59 mo
89.002 277.59 li
89.002 275.84 li
92.752 275.59 li
@
89.002 277.59 mo
85.252 275.59 li
89.002 275.84 li
89.002 277.59 li
cp
ef
94.0854 237.507 mo
92.1689 275.84 li
89.002 277.59 mo
85.252 275.59 li
89.002 275.84 li
89.002 277.59 li
@
95.9189 275.757 mo
92.0854 277.59 li
92.1689 275.84 li
95.9189 275.757 li
cp
ef
95.9189 275.757 mo
92.0854 277.59 li
92.1689 275.84 li
95.9189 275.757 li
@
92.0854 277.59 mo
88.4189 275.34 li
92.1689 275.84 li
92.0854 277.59 li
cp
ef
97.252 237.507 mo
95.002 275.84 li
92.0854 277.59 mo
88.4189 275.34 li
92.1689 275.84 li
92.0854 277.59 li
@
98.752 275.757 mo
94.9189 277.59 li
95.002 275.84 li
98.752 275.757 li
cp
ef
98.752 275.757 mo
94.9189 277.59 li
95.002 275.84 li
98.752 275.757 li
@
94.9189 277.59 mo
91.252 275.34 li
95.002 275.84 li
94.9189 277.59 li
cp
ef
102.335 237.507 mo
97.252 275.84 li
94.9189 277.59 mo
91.252 275.34 li
95.002 275.84 li
94.9189 277.59 li
@
101.085 276.09 mo
97.0854 277.59 li
97.252 275.84 li
101.085 276.09 li
cp
ef
101.085 276.09 mo
97.0854 277.59 li
97.252 275.84 li
101.085 276.09 li
@
97.0854 277.59 mo
93.5854 275.09 li
97.252 275.84 li
97.0854 277.59 li
cp
ef
104.585 237.507 mo
98.1689 275.923 li
97.0854 277.59 mo
93.5854 275.09 li
97.252 275.84 li
97.0854 277.59 li
@
101.919 276.173 mo
97.9189 277.59 li
98.1689 275.923 li
101.919 276.173 li
cp
ef
101.919 276.173 mo
97.9189 277.59 li
98.1689 275.923 li
101.919 276.173 li
@
97.9189 277.59 mo
94.502 275.007 li
98.1689 275.923 li
97.9189 277.59 li
cp
ef
107.585 237.507 mo
100.419 275.923 li
97.9189 277.59 mo
94.502 275.007 li
98.1689 275.923 li
97.9189 277.59 li
@
104.169 276.257 mo
100.085 277.59 li
100.419 275.923 li
104.169 276.257 li
cp
ef
104.169 276.257 mo
100.085 277.59 li
100.419 275.923 li
104.169 276.257 li
@
100.085 277.59 mo
96.752 274.923 li
100.419 275.923 li
100.085 277.59 li
cp
ef
110.669 237.507 mo
103.752 275.923 li
100.085 277.59 mo
96.752 274.923 li
100.419 275.923 li
100.085 277.59 li
@
107.419 276.257 mo
103.419 277.59 li
103.752 275.923 li
107.419 276.257 li
cp
ef
107.419 276.257 mo
103.419 277.59 li
103.752 275.923 li
107.419 276.257 li
@
103.419 277.59 mo
100.085 274.923 li
103.752 275.923 li
103.419 277.59 li
cp
ef
115.752 237.507 mo
108.169 275.923 li
103.419 277.59 mo
100.085 274.923 li
103.752 275.923 li
103.419 277.59 li
@
111.919 276.34 mo
107.835 277.59 li
108.169 275.923 li
111.919 276.34 li
cp
ef
111.919 276.34 mo
107.835 277.59 li
108.169 275.923 li
111.919 276.34 li
@
107.835 277.59 mo
104.502 274.84 li
108.169 275.923 li
107.835 277.59 li
cp
ef
118.835 237.507 mo
110.919 275.923 li
107.835 277.59 mo
104.502 274.84 li
108.169 275.923 li
107.835 277.59 li
@
114.669 276.34 mo
110.585 277.59 li
110.919 275.923 li
114.669 276.34 li
cp
ef
114.669 276.34 mo
110.585 277.59 li
110.919 275.923 li
114.669 276.34 li
@
110.585 277.59 mo
107.335 274.84 li
110.919 275.923 li
110.585 277.59 li
cp
ef
121.835 237.507 mo
115.835 275.84 li
110.585 277.59 mo
107.335 274.84 li
110.919 275.923 li
110.585 277.59 li
@
119.585 276.173 mo
115.502 277.59 li
115.835 275.84 li
119.585 276.173 li
cp
ef
119.585 276.173 mo
115.502 277.59 li
115.835 275.84 li
119.585 276.173 li
@
115.502 277.59 mo
112.169 275.007 li
115.835 275.84 li
115.502 277.59 li
cp
ef
126.919 237.507 mo
119.169 275.923 li
115.502 277.59 mo
112.169 275.007 li
115.835 275.84 li
115.502 277.59 li
@
122.919 276.34 mo
118.835 277.59 li
119.169 275.923 li
122.919 276.34 li
cp
ef
122.919 276.34 mo
118.835 277.59 li
119.169 275.923 li
122.919 276.34 li
@
118.835 277.59 mo
115.585 274.84 li
119.169 275.923 li
118.835 277.59 li
cp
ef
130.002 237.507 mo
123.002 275.923 li
118.835 277.59 mo
115.585 274.84 li
119.169 275.923 li
118.835 277.59 li
@
126.752 276.257 mo
122.752 277.59 li
123.002 275.923 li
126.752 276.257 li
cp
ef
126.752 276.257 mo
122.752 277.59 li
123.002 275.923 li
126.752 276.257 li
@
122.752 277.59 mo
119.419 274.923 li
123.002 275.923 li
122.752 277.59 li
cp
ef
133.002 237.507 mo
126.335 275.923 li
122.752 277.59 mo
119.419 274.923 li
123.002 275.923 li
122.752 277.59 li
@
130.085 276.257 mo
126.002 277.59 li
126.335 275.923 li
130.085 276.257 li
cp
ef
130.085 276.257 mo
126.002 277.59 li
126.335 275.923 li
130.085 276.257 li
@
126.002 277.59 mo
122.669 274.923 li
126.335 275.923 li
126.002 277.59 li
cp
ef
136.002 237.507 mo
131.169 275.84 li
126.002 277.59 mo
122.669 274.923 li
126.335 275.923 li
126.002 277.59 li
@
134.919 276.007 mo
131.002 277.59 li
131.169 275.84 li
134.919 276.007 li
cp
ef
134.919 276.007 mo
131.002 277.59 li
131.169 275.84 li
134.919 276.007 li
@
131.002 277.59 mo
127.502 275.09 li
131.169 275.84 li
131.002 277.59 li
cp
ef
138.169 237.507 mo
134.419 275.84 li
131.002 277.59 mo
127.502 275.09 li
131.169 275.84 li
131.002 277.59 li
@
138.252 275.923 mo
134.335 277.59 li
134.419 275.84 li
138.252 275.923 li
cp
ef
138.252 275.923 mo
134.335 277.59 li
134.419 275.84 li
138.252 275.923 li
@
134.335 277.59 mo
130.752 275.173 li
134.419 275.84 li
134.335 277.59 li
cp
ef
141.169 237.507 mo
137.752 275.84 li
134.335 277.59 mo
130.752 275.173 li
134.419 275.84 li
134.335 277.59 li
@
141.502 275.923 mo
137.585 277.59 li
137.752 275.84 li
141.502 275.923 li
cp
ef
141.502 275.923 mo
137.585 277.59 li
137.752 275.84 li
141.502 275.923 li
@
137.585 277.59 mo
134.085 275.257 li
137.752 275.84 li
137.585 277.59 li
cp
ef
144.252 237.507 mo
140.002 275.84 li
137.585 277.59 mo
134.085 275.257 li
137.752 275.84 li
137.585 277.59 li
@
143.752 276.007 mo
139.835 277.59 li
140.002 275.84 li
143.752 276.007 li
cp
ef
143.752 276.007 mo
139.835 277.59 li
140.002 275.84 li
143.752 276.007 li
@
139.835 277.59 mo
136.335 275.173 li
140.002 275.84 li
139.835 277.59 li
cp
ef
147.335 237.507 mo
143.335 275.84 li
139.835 277.59 mo
136.335 275.173 li
140.002 275.84 li
139.835 277.59 li
@
147.085 275.923 mo
143.085 277.59 li
143.335 275.84 li
147.085 275.923 li
cp
ef
147.085 275.923 mo
143.085 277.59 li
143.335 275.84 li
147.085 275.923 li
@
143.085 277.59 mo
139.585 275.173 li
143.335 275.84 li
143.085 277.59 li
cp
ef
150.335 237.507 mo
146.085 275.84 li
143.085 277.59 mo
139.585 275.173 li
143.335 275.84 li
143.085 277.59 li
@
149.835 276.007 mo
145.919 277.59 li
146.085 275.84 li
149.835 276.007 li
cp
ef
149.835 276.007 mo
145.919 277.59 li
146.085 275.84 li
149.835 276.007 li
@
145.919 277.59 mo
142.335 275.173 li
146.085 275.84 li
145.919 277.59 li
cp
ef
153.419 237.507 mo
150.419 275.84 li
145.919 277.59 mo
142.335 275.173 li
146.085 275.84 li
145.919 277.59 li
@
154.169 275.84 mo
150.335 277.59 li
150.419 275.84 li
154.169 275.84 li
cp
ef
154.169 275.84 mo
150.335 277.59 li
150.419 275.84 li
154.169 275.84 li
@
150.335 277.59 mo
146.752 275.257 li
150.419 275.84 li
150.335 277.59 li
cp
ef
156.502 237.507 mo
155.335 275.84 li
150.335 277.59 mo
146.752 275.257 li
150.419 275.84 li
150.335 277.59 li
@
159.085 275.673 mo
155.252 277.59 li
155.335 275.84 li
159.085 275.673 li
cp
ef
159.085 275.673 mo
155.252 277.59 li
155.335 275.84 li
159.085 275.673 li
@
155.252 277.59 mo
151.585 275.423 li
155.335 275.84 li
155.252 277.59 li
cp
ef
159.502 237.507 mo
159.169 275.84 li
155.252 277.59 mo
151.585 275.423 li
155.335 275.84 li
155.252 277.59 li
@
162.919 275.59 mo
159.085 277.59 li
159.169 275.84 li
162.919 275.59 li
cp
ef
162.919 275.59 mo
159.085 277.59 li
159.169 275.84 li
162.919 275.59 li
@
159.085 277.59 mo
155.419 275.507 li
159.169 275.84 li
159.085 277.59 li
cp
ef
162.585 237.507 mo
162.419 275.84 li
159.085 277.59 mo
155.419 275.507 li
159.169 275.84 li
159.085 277.59 li
@
166.169 275.59 mo
162.419 277.59 li
162.419 275.84 li
166.169 275.59 li
cp
ef
166.169 275.59 mo
162.419 277.59 li
162.419 275.84 li
166.169 275.59 li
@
162.419 277.59 mo
158.669 275.507 li
162.419 275.84 li
162.419 277.59 li
cp
ef
165.752 237.507 mo
166.252 275.84 li
162.419 277.59 mo
158.669 275.507 li
162.419 275.84 li
162.419 277.59 li
@
170.002 275.507 mo
166.252 277.59 li
166.252 275.84 li
170.002 275.507 li
cp
ef
170.002 275.507 mo
166.252 277.59 li
166.252 275.84 li
170.002 275.507 li
@
166.252 277.59 mo
162.502 275.59 li
166.252 275.84 li
166.252 277.59 li
cp
ef
168.835 237.507 mo
169.585 275.84 li
166.252 277.59 mo
162.502 275.59 li
166.252 275.84 li
166.252 277.59 li
@
173.335 275.507 mo
169.585 277.59 li
169.585 275.84 li
173.335 275.507 li
cp
ef
173.335 275.507 mo
169.585 277.59 li
169.585 275.84 li
173.335 275.507 li
@
169.585 277.59 mo
165.835 275.673 li
169.585 275.84 li
169.585 277.59 li
cp
ef
171.919 237.507 mo
171.835 275.84 li
169.585 277.59 mo
165.835 275.673 li
169.585 275.84 li
169.585 277.59 li
@
175.585 275.59 mo
171.835 277.59 li
171.835 275.84 li
175.585 275.59 li
cp
ef
175.585 275.59 mo
171.835 277.59 li
171.835 275.84 li
175.585 275.59 li
@
171.835 277.59 mo
168.085 275.59 li
171.835 275.84 li
171.835 277.59 li
cp
ef
174.919 237.507 mo
175.669 275.84 li
171.835 277.59 mo
168.085 275.59 li
171.835 275.84 li
171.835 277.59 li
@
179.419 275.507 mo
175.669 277.59 li
175.669 275.84 li
179.419 275.507 li
cp
ef
179.419 275.507 mo
175.669 277.59 li
175.669 275.84 li
179.419 275.507 li
@
175.669 277.59 mo
171.919 275.59 li
175.669 275.84 li
175.669 277.59 li
cp
ef
177.919 237.507 mo
177.919 275.84 li
175.669 277.59 mo
171.919 275.59 li
175.669 275.84 li
175.669 277.59 li
@
181.669 275.59 mo
177.919 277.59 li
177.919 275.84 li
181.669 275.59 li
cp
ef
181.669 275.59 mo
177.919 277.59 li
177.919 275.84 li
181.669 275.59 li
@
177.919 277.59 mo
174.169 275.59 li
177.919 275.84 li
177.919 277.59 li
cp
ef
180.919 237.507 mo
180.419 275.84 li
177.919 277.59 mo
174.169 275.59 li
177.919 275.84 li
177.919 277.59 li
@
184.169 275.59 mo
180.419 277.59 li
180.419 275.84 li
184.169 275.59 li
cp
ef
184.169 275.59 mo
180.419 277.59 li
180.419 275.84 li
184.169 275.59 li
@
180.419 277.59 mo
176.669 275.507 li
180.419 275.84 li
180.419 277.59 li
cp
ef
183.919 237.507 mo
183.252 275.84 li
180.419 277.59 mo
176.669 275.507 li
180.419 275.84 li
180.419 277.59 li
@
187.002 275.59 mo
183.169 277.59 li
183.252 275.84 li
187.002 275.59 li
cp
ef
187.002 275.59 mo
183.169 277.59 li
183.252 275.84 li
187.002 275.59 li
@
183.169 277.59 mo
179.502 275.507 li
183.252 275.84 li
183.169 277.59 li
cp
ef
186.919 237.507 mo
186.335 275.84 li
183.169 277.59 mo
179.502 275.507 li
183.252 275.84 li
183.169 277.59 li
@
190.085 275.59 mo
186.252 277.59 li
186.335 275.84 li
190.085 275.59 li
cp
ef
190.085 275.59 mo
186.252 277.59 li
186.335 275.84 li
190.085 275.59 li
@
186.252 277.59 mo
182.585 275.507 li
186.335 275.84 li
186.252 277.59 li
cp
ef
189.919 237.507 mo
188.835 275.84 li
186.252 277.59 mo
182.585 275.507 li
186.335 275.84 li
186.252 277.59 li
@
192.585 275.673 mo
188.752 277.59 li
188.835 275.84 li
192.585 275.673 li
cp
ef
192.585 275.673 mo
188.752 277.59 li
188.835 275.84 li
192.585 275.673 li
@
188.752 277.59 mo
185.085 275.423 li
188.835 275.84 li
188.752 277.59 li
cp
ef
192.002 237.507 mo
191.835 275.84 li
188.752 277.59 mo
185.085 275.423 li
188.835 275.84 li
188.752 277.59 li
@
195.585 275.59 mo
191.835 277.59 li
191.835 275.84 li
195.585 275.59 li
cp
ef
195.585 275.59 mo
191.835 277.59 li
191.835 275.84 li
195.585 275.59 li
@
191.835 277.59 mo
188.085 275.59 li
191.835 275.84 li
191.835 277.59 li
cp
ef
195.002 237.507 mo
194.085 275.84 li
191.835 277.59 mo
188.085 275.59 li
191.835 275.84 li
191.835 277.59 li
@
197.835 275.673 mo
194.002 277.59 li
194.085 275.84 li
197.835 275.673 li
cp
ef
197.835 275.673 mo
194.002 277.59 li
194.085 275.84 li
197.835 275.673 li
@
194.002 277.59 mo
190.335 275.507 li
194.085 275.84 li
194.002 277.59 li
cp
ef
198.002 237.507 mo
196.919 275.84 li
194.002 277.59 mo
190.335 275.507 li
194.085 275.84 li
194.002 277.59 li
@
200.669 275.673 mo
196.835 277.59 li
196.919 275.84 li
200.669 275.673 li
cp
ef
200.669 275.673 mo
196.835 277.59 li
196.919 275.84 li
200.669 275.673 li
@
196.835 277.59 mo
193.169 275.423 li
196.919 275.84 li
196.835 277.59 li
cp
ef
201.002 237.507 mo
201.169 275.84 li
196.835 277.59 mo
193.169 275.423 li
196.919 275.84 li
196.835 277.59 li
@
204.919 275.507 mo
201.169 277.59 li
201.169 275.84 li
204.919 275.507 li
cp
ef
204.919 275.507 mo
201.169 277.59 li
201.169 275.84 li
204.919 275.507 li
@
201.169 277.59 mo
197.419 275.59 li
201.169 275.84 li
201.169 277.59 li
cp
ef
204.002 237.507 mo
203.419 275.84 li
201.169 277.59 mo
197.419 275.59 li
201.169 275.84 li
201.169 277.59 li
@
207.169 275.59 mo
203.335 277.59 li
203.419 275.84 li
207.169 275.59 li
cp
ef
207.169 275.59 mo
203.335 277.59 li
203.419 275.84 li
207.169 275.59 li
@
203.335 277.59 mo
199.669 275.507 li
203.419 275.84 li
203.335 277.59 li
cp
ef
206.085 237.507 mo
207.335 275.84 li
203.335 277.59 mo
199.669 275.507 li
203.419 275.84 li
203.335 277.59 li
@
211.085 275.423 mo
207.419 277.59 li
207.335 275.84 li
211.085 275.423 li
cp
ef
211.085 275.423 mo
207.419 277.59 li
207.335 275.84 li
211.085 275.423 li
@
207.419 277.59 mo
203.585 275.673 li
207.335 275.84 li
207.419 277.59 li
cp
ef
209.085 237.507 mo
210.752 275.84 li
207.419 277.59 mo
203.585 275.673 li
207.335 275.84 li
207.419 277.59 li
@
214.419 275.423 mo
210.835 277.59 li
210.752 275.84 li
214.419 275.423 li
cp
ef
214.419 275.423 mo
210.835 277.59 li
210.752 275.84 li
214.419 275.423 li
@
210.835 277.59 mo
207.002 275.757 li
210.752 275.84 li
210.835 277.59 li
cp
ef
211.169 237.507 mo
212.335 275.84 li
210.835 277.59 mo
207.002 275.757 li
210.752 275.84 li
210.835 277.59 li
@
216.002 275.423 mo
212.335 277.59 li
212.335 275.84 li
216.002 275.423 li
cp
ef
216.002 275.423 mo
212.335 277.59 li
212.335 275.84 li
216.002 275.423 li
@
212.335 277.59 mo
208.502 275.673 li
212.335 275.84 li
212.335 277.59 li
cp
ef
213.335 237.507 mo
215.085 275.84 li
212.335 277.59 mo
208.502 275.673 li
212.335 275.84 li
212.335 277.59 li
@
218.835 275.423 mo
215.169 277.59 li
215.085 275.84 li
218.835 275.423 li
cp
ef
218.835 275.423 mo
215.169 277.59 li
215.085 275.84 li
218.835 275.423 li
@
215.169 277.59 mo
211.335 275.757 li
215.085 275.84 li
215.169 277.59 li
cp
ef
216.419 237.507 mo
218.502 275.84 li
215.169 277.59 mo
211.335 275.757 li
215.085 275.84 li
215.169 277.59 li
@
222.169 275.34 mo
218.585 277.59 li
218.502 275.84 li
222.169 275.34 li
cp
ef
222.169 275.34 mo
218.585 277.59 li
218.502 275.84 li
222.169 275.34 li
@
218.585 277.59 mo
214.669 275.757 li
218.502 275.84 li
218.585 277.59 li
cp
ef
221.502 237.507 mo
222.085 275.84 li
218.585 277.59 mo
214.669 275.757 li
218.502 275.84 li
218.585 277.59 li
@
225.835 275.507 mo
222.085 277.59 li
222.085 275.84 li
225.835 275.507 li
cp
ef
225.835 275.507 mo
222.085 277.59 li
222.085 275.84 li
225.835 275.507 li
@
222.085 277.59 mo
218.335 275.59 li
222.085 275.84 li
222.085 277.59 li
cp
ef
224.502 237.507 mo
224.002 275.84 li
222.085 277.59 mo
218.335 275.59 li
222.085 275.84 li
222.085 277.59 li
@
227.752 275.59 mo
224.002 277.59 li
224.002 275.84 li
227.752 275.59 li
cp
ef
227.752 275.59 mo
224.002 277.59 li
224.002 275.84 li
227.752 275.59 li
@
224.002 277.59 mo
220.252 275.507 li
224.002 275.84 li
224.002 277.59 li
cp
ef
227.585 237.507 mo
227.085 275.84 li
224.002 277.59 mo
220.252 275.507 li
224.002 275.84 li
224.002 277.59 li
@
230.835 275.59 mo
227.085 277.59 li
227.085 275.84 li
230.835 275.59 li
cp
ef
230.835 275.59 mo
227.085 277.59 li
227.085 275.84 li
230.835 275.59 li
@
227.085 277.59 mo
223.335 275.507 li
227.085 275.84 li
227.085 277.59 li
cp
ef
230.669 237.507 mo
230.502 275.84 li
227.085 277.59 mo
223.335 275.507 li
227.085 275.84 li
227.085 277.59 li
@
234.252 275.59 mo
230.502 277.59 li
230.502 275.84 li
234.252 275.59 li
cp
ef
234.252 275.59 mo
230.502 277.59 li
230.502 275.84 li
234.252 275.59 li
@
230.502 277.59 mo
226.752 275.507 li
230.502 275.84 li
230.502 277.59 li
cp
ef
232.752 237.507 mo
233.835 275.84 li
230.502 277.59 mo
226.752 275.507 li
230.502 275.84 li
230.502 277.59 li
@
237.585 275.423 mo
233.919 277.59 li
233.835 275.84 li
237.585 275.423 li
cp
ef
237.585 275.423 mo
233.919 277.59 li
233.835 275.84 li
237.585 275.423 li
@
233.919 277.59 mo
230.085 275.673 li
233.835 275.84 li
233.919 277.59 li
cp
ef
235.752 237.507 mo
236.335 275.84 li
233.919 277.59 mo
230.085 275.673 li
233.835 275.84 li
233.919 277.59 li
@
240.085 275.507 mo
236.419 277.59 li
236.335 275.84 li
240.085 275.507 li
cp
ef
240.085 275.507 mo
236.419 277.59 li
236.335 275.84 li
240.085 275.507 li
@
236.419 277.59 mo
232.585 275.59 li
236.335 275.84 li
236.419 277.59 li
cp
ef
238.752 237.507 mo
238.835 275.84 li
236.419 277.59 mo
232.585 275.59 li
236.335 275.84 li
236.419 277.59 li
@
242.585 275.59 mo
238.835 277.59 li
238.835 275.84 li
242.585 275.59 li
cp
ef
242.585 275.59 mo
238.835 277.59 li
238.835 275.84 li
242.585 275.59 li
@
238.835 277.59 mo
235.085 275.59 li
238.835 275.84 li
238.835 277.59 li
cp
ef
240.835 237.507 mo
242.252 275.84 li
238.835 277.59 mo
235.085 275.59 li
238.835 275.84 li
238.835 277.59 li
@
245.919 275.423 mo
242.252 277.59 li
242.252 275.84 li
245.919 275.423 li
cp
ef
245.919 275.423 mo
242.252 277.59 li
242.252 275.84 li
245.919 275.423 li
@
242.252 277.59 mo
238.419 275.673 li
242.252 275.84 li
242.252 277.59 li
cp
ef
245.585 237.507 mo
245.669 275.84 li
242.252 277.59 mo
238.419 275.673 li
242.252 275.84 li
242.252 277.59 li
@
249.419 275.59 mo
245.669 277.59 li
245.669 275.84 li
249.419 275.59 li
cp
ef
249.419 275.59 mo
245.669 277.59 li
245.669 275.84 li
249.419 275.59 li
@
245.669 277.59 mo
241.919 275.59 li
245.669 275.84 li
245.669 277.59 li
cp
ef
248.669 237.507 mo
248.752 275.84 li
245.669 277.59 mo
241.919 275.59 li
245.669 275.84 li
245.669 277.59 li
@
252.502 275.507 mo
248.752 277.59 li
248.752 275.84 li
252.502 275.507 li
cp
ef
252.502 275.507 mo
248.752 277.59 li
248.752 275.84 li
252.502 275.507 li
@
248.752 277.59 mo
245.002 275.59 li
248.752 275.84 li
248.752 277.59 li
cp
ef
251.669 237.507 mo
251.919 275.84 li
248.752 277.59 mo
245.002 275.59 li
248.752 275.84 li
248.752 277.59 li
@
255.669 275.507 mo
251.919 277.59 li
251.919 275.84 li
255.669 275.507 li
cp
ef
255.669 275.507 mo
251.919 277.59 li
251.919 275.84 li
255.669 275.507 li
@
251.919 277.59 mo
248.169 275.59 li
251.919 275.84 li
251.919 277.59 li
cp
ef
254.752 237.507 mo
254.419 275.84 li
251.919 277.59 mo
248.169 275.59 li
251.919 275.84 li
251.919 277.59 li
@
258.169 275.59 mo
254.335 277.59 li
254.419 275.84 li
258.169 275.59 li
cp
ef
258.169 275.59 mo
254.335 277.59 li
254.419 275.84 li
258.169 275.59 li
@
254.335 277.59 mo
250.669 275.507 li
254.419 275.84 li
254.335 277.59 li
cp
ef
257.835 237.507 mo
256.335 275.84 li
254.335 277.59 mo
250.669 275.507 li
254.419 275.84 li
254.335 277.59 li
@
260.085 275.673 mo
256.252 277.59 li
256.335 275.84 li
260.085 275.673 li
cp
ef
260.085 275.673 mo
256.252 277.59 li
256.335 275.84 li
260.085 275.673 li
@
256.252 277.59 mo
252.585 275.423 li
256.335 275.84 li
256.252 277.59 li
cp
ef
260.002 237.507 mo
261.169 275.84 li
256.252 277.59 mo
252.585 275.423 li
256.335 275.84 li
256.252 277.59 li
@
264.919 275.423 mo
261.169 277.59 li
261.169 275.84 li
264.919 275.423 li
cp
ef
264.919 275.423 mo
261.169 277.59 li
261.169 275.84 li
264.919 275.423 li
@
261.169 277.59 mo
257.419 275.673 li
261.169 275.84 li
261.169 277.59 li
cp
ef
263.002 237.507 mo
262.752 275.84 li
261.169 277.59 mo
257.419 275.673 li
261.169 275.84 li
261.169 277.59 li
@
266.502 275.59 mo
262.752 277.59 li
262.752 275.84 li
266.502 275.59 li
cp
ef
266.502 275.59 mo
262.752 277.59 li
262.752 275.84 li
266.502 275.59 li
@
262.752 277.59 mo
259.002 275.507 li
262.752 275.84 li
262.752 277.59 li
cp
ef
266.085 237.507 mo
266.502 275.84 li
262.752 277.59 mo
259.002 275.507 li
262.752 275.84 li
262.752 277.59 li
@
270.169 275.507 mo
266.502 277.59 li
266.502 275.84 li
270.169 275.507 li
cp
ef
270.169 275.507 mo
266.502 277.59 li
266.502 275.84 li
270.169 275.507 li
@
266.502 277.59 mo
262.669 275.59 li
266.502 275.84 li
266.502 277.59 li
cp
ef
268.252 237.507 mo
269.502 275.84 li
266.502 277.59 mo
262.669 275.59 li
266.502 275.84 li
266.502 277.59 li
@
273.252 275.423 mo
269.585 277.59 li
269.502 275.84 li
273.252 275.423 li
cp
ef
273.252 275.423 mo
269.585 277.59 li
269.502 275.84 li
273.252 275.423 li
@
269.585 277.59 mo
265.752 275.673 li
269.502 275.84 li
269.585 277.59 li
cp
ef
271.335 237.507 mo
272.002 275.84 li
269.585 277.59 mo
265.752 275.673 li
269.502 275.84 li
269.585 277.59 li
@
275.752 275.507 mo
272.085 277.59 li
272.002 275.84 li
275.752 275.507 li
cp
ef
275.752 275.507 mo
272.085 277.59 li
272.002 275.84 li
275.752 275.507 li
@
272.085 277.59 mo
268.252 275.59 li
272.002 275.84 li
272.085 277.59 li
cp
ef
274.335 237.507 mo
274.835 275.84 li
272.085 277.59 mo
268.252 275.59 li
272.002 275.84 li
272.085 277.59 li
@
278.585 275.507 mo
274.835 277.59 li
274.835 275.84 li
278.585 275.507 li
cp
ef
278.585 275.507 mo
274.835 277.59 li
274.835 275.84 li
278.585 275.507 li
@
274.835 277.59 mo
271.085 275.59 li
274.835 275.84 li
274.835 277.59 li
cp
ef
277.419 237.507 mo
277.335 275.84 li
274.835 277.59 mo
271.085 275.59 li
274.835 275.84 li
274.835 277.59 li
@
281.085 275.59 mo
277.335 277.59 li
277.335 275.84 li
281.085 275.59 li
cp
ef
281.085 275.59 mo
277.335 277.59 li
277.335 275.84 li
281.085 275.59 li
@
277.335 277.59 mo
273.585 275.59 li
277.335 275.84 li
277.335 277.59 li
cp
ef
279.585 237.507 mo
280.085 275.84 li
277.335 277.59 mo
273.585 275.59 li
277.335 275.84 li
277.335 277.59 li
@
283.835 275.507 mo
280.169 277.59 li
280.085 275.84 li
283.835 275.507 li
cp
ef
283.835 275.507 mo
280.169 277.59 li
280.085 275.84 li
283.835 275.507 li
@
280.169 277.59 mo
276.335 275.59 li
280.085 275.84 li
280.169 277.59 li
cp
ef
282.585 237.507 mo
282.585 275.84 li
280.169 277.59 mo
276.335 275.59 li
280.085 275.84 li
280.169 277.59 li
@
286.335 275.59 mo
282.585 277.59 li
282.585 275.84 li
286.335 275.59 li
cp
ef
286.335 275.59 mo
282.585 277.59 li
282.585 275.84 li
286.335 275.59 li
@
282.585 277.59 mo
278.835 275.59 li
282.585 275.84 li
282.585 277.59 li
cp
ef
287.419 237.507 mo
284.502 275.84 li
282.585 277.59 mo
278.835 275.59 li
282.585 275.84 li
282.585 277.59 li
@
288.252 275.84 mo
284.335 277.59 li
284.502 275.84 li
288.252 275.84 li
cp
ef
288.252 275.84 mo
284.335 277.59 li
284.502 275.84 li
288.252 275.84 li
@
284.335 277.59 mo
280.752 275.257 li
284.502 275.84 li
284.335 277.59 li
cp
ef
290.419 237.507 mo
287.085 275.84 li
284.335 277.59 mo
280.752 275.257 li
284.502 275.84 li
284.335 277.59 li
@
290.835 275.923 mo
286.919 277.59 li
287.085 275.84 li
290.835 275.923 li
cp
ef
290.835 275.923 mo
286.919 277.59 li
287.085 275.84 li
290.835 275.923 li
@
286.919 277.59 mo
283.419 275.257 li
287.085 275.84 li
286.919 277.59 li
cp
ef
293.502 237.507 mo
290.835 275.84 li
286.919 277.59 mo
283.419 275.257 li
287.085 275.84 li
286.919 277.59 li
@
294.585 275.84 mo
290.669 277.59 li
290.835 275.84 li
294.585 275.84 li
cp
ef
294.585 275.84 mo
290.669 277.59 li
290.835 275.84 li
294.585 275.84 li
@
290.669 277.59 mo
287.085 275.34 li
290.835 275.84 li
290.669 277.59 li
cp
ef
296.585 237.507 mo
293.002 275.84 li
290.669 277.59 mo
287.085 275.34 li
290.835 275.84 li
290.669 277.59 li
@
296.752 275.923 mo
292.835 277.59 li
293.002 275.84 li
296.752 275.923 li
cp
ef
296.752 275.923 mo
292.835 277.59 li
293.002 275.84 li
296.752 275.923 li
@
292.835 277.59 mo
289.335 275.257 li
293.002 275.84 li
292.835 277.59 li
cp
ef
298.752 237.507 mo
297.002 275.84 li
292.835 277.59 mo
289.335 275.257 li
293.002 275.84 li
292.835 277.59 li
@
300.752 275.757 mo
296.919 277.59 li
297.002 275.84 li
300.752 275.757 li
cp
ef
300.752 275.757 mo
296.919 277.59 li
297.002 275.84 li
300.752 275.757 li
@
296.919 277.59 mo
293.252 275.423 li
297.002 275.84 li
296.919 277.59 li
cp
ef
301.835 237.507 mo
298.835 275.84 li
296.919 277.59 mo
293.252 275.423 li
297.002 275.84 li
296.919 277.59 li
@
302.669 275.84 mo
298.752 277.59 li
298.835 275.84 li
302.669 275.84 li
cp
ef
302.669 275.84 mo
298.752 277.59 li
298.835 275.84 li
302.669 275.84 li
@
298.752 277.59 mo
295.169 275.257 li
298.835 275.84 li
298.752 277.59 li
cp
ef
306.919 237.507 mo
302.669 275.84 li
298.752 277.59 mo
295.169 275.257 li
298.835 275.84 li
298.752 277.59 li
@
306.419 276.007 mo
302.502 277.59 li
302.669 275.84 li
306.419 276.007 li
cp
ef
306.419 276.007 mo
302.502 277.59 li
302.669 275.84 li
306.419 276.007 li
@
302.502 277.59 mo
299.002 275.173 li
302.669 275.84 li
302.502 277.59 li
cp
ef
310.085 237.507 mo
306.335 275.84 li
302.502 277.59 mo
299.002 275.173 li
302.669 275.84 li
302.502 277.59 li
@
310.085 275.923 mo
306.169 277.59 li
306.335 275.84 li
310.085 275.923 li
cp
ef
310.085 275.923 mo
306.169 277.59 li
306.335 275.84 li
310.085 275.923 li
@
306.169 277.59 mo
302.669 275.173 li
306.335 275.84 li
306.169 277.59 li
cp
ef
313.085 237.507 mo
310.335 275.84 li
306.169 277.59 mo
302.669 275.173 li
306.335 275.84 li
306.169 277.59 li
@
314.085 275.84 mo
310.252 277.59 li
310.335 275.84 li
314.085 275.84 li
cp
ef
314.085 275.84 mo
310.252 277.59 li
310.335 275.84 li
314.085 275.84 li
@
310.252 277.59 mo
306.669 275.257 li
310.335 275.84 li
310.252 277.59 li
cp
ef
316.085 237.507 mo
313.752 275.84 li
310.252 277.59 mo
306.669 275.257 li
310.335 275.84 li
310.252 277.59 li
@
317.502 275.757 mo
313.669 277.59 li
313.752 275.84 li
317.502 275.757 li
cp
ef
317.502 275.757 mo
313.669 277.59 li
313.752 275.84 li
317.502 275.757 li
@
313.669 277.59 mo
310.002 275.34 li
313.752 275.84 li
313.669 277.59 li
cp
ef
318.252 237.507 mo
316.835 275.84 li
313.669 277.59 mo
310.002 275.34 li
313.752 275.84 li
313.669 277.59 li
@
320.585 275.673 mo
316.752 277.59 li
316.835 275.84 li
320.585 275.673 li
cp
ef
320.585 275.673 mo
316.752 277.59 li
316.835 275.84 li
320.585 275.673 li
@
316.752 277.59 mo
313.085 275.423 li
316.835 275.84 li
316.752 277.59 li
cp
ef
321.252 237.507 mo
318.502 275.84 li
316.752 277.59 mo
313.085 275.423 li
316.835 275.84 li
316.752 277.59 li
@
322.252 275.84 mo
318.335 277.59 li
318.502 275.84 li
322.252 275.84 li
cp
ef
322.252 275.84 mo
318.335 277.59 li
318.502 275.84 li
322.252 275.84 li
@
318.335 277.59 mo
314.752 275.257 li
318.502 275.84 li
318.335 277.59 li
cp
ef
323.335 237.507 mo
321.502 275.84 li
318.335 277.59 mo
314.752 275.257 li
318.502 275.84 li
318.335 277.59 li
@
325.252 275.757 mo
321.419 277.59 li
321.502 275.84 li
325.252 275.757 li
cp
ef
325.252 275.757 mo
321.419 277.59 li
321.502 275.84 li
325.252 275.757 li
@
321.419 277.59 mo
317.752 275.423 li
321.502 275.84 li
321.419 277.59 li
cp
ef
326.335 237.507 mo
325.169 275.84 li
321.419 277.59 mo
317.752 275.423 li
321.502 275.84 li
321.419 277.59 li
@
328.919 275.673 mo
325.085 277.59 li
325.169 275.84 li
328.919 275.673 li
cp
ef
328.919 275.673 mo
325.085 277.59 li
325.169 275.84 li
328.919 275.673 li
@
325.085 277.59 mo
321.419 275.423 li
325.169 275.84 li
325.085 277.59 li
cp
ef
329.335 237.507 mo
327.669 275.84 li
325.085 277.59 mo
321.419 275.423 li
325.169 275.84 li
325.085 277.59 li
@
331.419 275.757 mo
327.585 277.59 li
327.669 275.84 li
331.419 275.757 li
cp
ef
331.419 275.757 mo
327.585 277.59 li
327.669 275.84 li
331.419 275.757 li
@
327.585 277.59 mo
323.919 275.423 li
327.669 275.84 li
327.585 277.59 li
cp
ef
332.335 237.507 mo
330.752 275.84 li
327.585 277.59 mo
323.919 275.423 li
327.669 275.84 li
327.585 277.59 li
@
334.502 275.673 mo
330.669 277.59 li
330.752 275.84 li
334.502 275.673 li
cp
ef
334.502 275.673 mo
330.669 277.59 li
330.752 275.84 li
334.502 275.673 li
@
330.669 277.59 mo
327.002 275.423 li
330.752 275.84 li
330.669 277.59 li
cp
ef
335.335 237.507 mo
332.669 275.84 li
330.669 277.59 mo
327.002 275.423 li
330.752 275.84 li
330.669 277.59 li
@
336.419 275.84 mo
332.585 277.59 li
332.669 275.84 li
336.419 275.84 li
cp
ef
336.419 275.84 mo
332.585 277.59 li
332.669 275.84 li
336.419 275.84 li
@
332.585 277.59 mo
328.919 275.34 li
332.669 275.84 li
332.585 277.59 li
cp
ef
337.419 237.507 mo
335.169 275.84 li
332.585 277.59 mo
328.919 275.34 li
332.669 275.84 li
332.585 277.59 li
@
338.919 275.757 mo
335.085 277.59 li
335.169 275.84 li
338.919 275.757 li
cp
ef
338.919 275.757 mo
335.085 277.59 li
335.169 275.84 li
338.919 275.757 li
@
335.085 277.59 mo
331.419 275.34 li
335.169 275.84 li
335.085 277.59 li
cp
ef
340.419 237.507 mo
337.919 275.84 li
335.085 277.59 mo
331.419 275.34 li
335.169 275.84 li
335.085 277.59 li
@
341.669 275.84 mo
337.835 277.59 li
337.919 275.84 li
341.669 275.84 li
cp
ef
341.669 275.84 mo
337.835 277.59 li
337.919 275.84 li
341.669 275.84 li
@
337.835 277.59 mo
334.252 275.34 li
337.919 275.84 li
337.835 277.59 li
cp
ef
343.419 237.507 mo
340.419 275.84 li
337.835 277.59 mo
334.252 275.34 li
337.919 275.84 li
337.835 277.59 li
@
344.252 275.84 mo
340.335 277.59 li
340.419 275.84 li
344.252 275.84 li
cp
ef
344.252 275.84 mo
340.335 277.59 li
340.419 275.84 li
344.252 275.84 li
@
340.335 277.59 mo
336.752 275.257 li
340.419 275.84 li
340.335 277.59 li
cp
ef
346.419 237.507 mo
343.252 275.84 li
340.335 277.59 mo
336.752 275.257 li
340.419 275.84 li
340.335 277.59 li
@
347.002 275.84 mo
343.085 277.59 li
343.252 275.84 li
347.002 275.84 li
cp
ef
347.002 275.84 mo
343.085 277.59 li
343.252 275.84 li
347.002 275.84 li
@
343.085 277.59 mo
339.502 275.257 li
343.252 275.84 li
343.085 277.59 li
cp
ef
349.419 237.507 mo
345.419 275.84 li
343.085 277.59 mo
339.502 275.257 li
343.252 275.84 li
343.085 277.59 li
@
349.169 275.923 mo
345.252 277.59 li
345.419 275.84 li
349.169 275.923 li
cp
ef
349.169 275.923 mo
345.252 277.59 li
345.419 275.84 li
349.169 275.923 li
@
345.252 277.59 mo
341.752 275.173 li
345.419 275.84 li
345.252 277.59 li
cp
ef
351.502 237.507 mo
348.169 275.84 li
345.252 277.59 mo
341.752 275.173 li
345.419 275.84 li
345.252 277.59 li
@
352.002 275.923 mo
348.085 277.59 li
348.169 275.84 li
352.002 275.923 li
cp
ef
352.002 275.923 mo
348.085 277.59 li
348.169 275.84 li
352.002 275.923 li
@
348.085 277.59 mo
344.502 275.257 li
348.169 275.84 li
348.085 277.59 li
cp
ef
354.502 237.507 mo
350.752 275.84 li
348.085 277.59 mo
344.502 275.257 li
348.169 275.84 li
348.085 277.59 li
@
354.502 275.923 mo
350.585 277.59 li
350.752 275.84 li
354.502 275.923 li
cp
ef
354.502 275.923 mo
350.585 277.59 li
350.752 275.84 li
354.502 275.923 li
@
350.585 277.59 mo
347.002 275.173 li
350.752 275.84 li
350.585 277.59 li
cp
ef
356.585 237.507 mo
353.169 275.84 li
350.585 277.59 mo
347.002 275.173 li
350.752 275.84 li
350.585 277.59 li
@
356.919 275.923 mo
353.002 277.59 li
353.169 275.84 li
356.919 275.923 li
cp
ef
356.919 275.923 mo
353.002 277.59 li
353.169 275.84 li
356.919 275.923 li
@
353.002 277.59 mo
349.502 275.257 li
353.169 275.84 li
353.002 277.59 li
cp
ef
359.669 237.507 mo
356.585 275.84 li
353.002 277.59 mo
349.502 275.257 li
353.169 275.84 li
353.002 277.59 li
@
360.335 275.84 mo
356.419 277.59 li
356.585 275.84 li
360.335 275.84 li
cp
ef
360.335 275.84 mo
356.419 277.59 li
356.585 275.84 li
360.335 275.84 li
@
356.419 277.59 mo
352.835 275.257 li
356.585 275.84 li
356.419 277.59 li
cp
ef
361.752 237.507 mo
359.669 275.84 li
356.419 277.59 mo
352.835 275.257 li
356.585 275.84 li
356.419 277.59 li
@
363.418 275.757 mo
359.502 277.59 li
359.669 275.84 li
363.418 275.757 li
cp
ef
363.418 275.757 mo
359.502 277.59 li
359.669 275.84 li
363.418 275.757 li
@
359.502 277.59 mo
355.919 275.34 li
359.669 275.84 li
359.502 277.59 li
cp
ef
364.836 237.507 mo
363.336 275.84 li
359.502 277.59 mo
355.919 275.34 li
359.669 275.84 li
359.502 277.59 li
@
367.086 275.673 mo
363.252 277.59 li
363.336 275.84 li
367.086 275.673 li
cp
ef
367.086 275.673 mo
363.252 277.59 li
363.336 275.84 li
367.086 275.673 li
@
363.252 277.59 mo
359.585 275.423 li
363.336 275.84 li
363.252 277.59 li
cp
ef
367.002 237.507 mo
366.668 275.84 li
363.252 277.59 mo
359.585 275.423 li
363.336 275.84 li
363.252 277.59 li
@
370.418 275.59 mo
366.668 277.59 li
366.668 275.84 li
370.418 275.59 li
cp
ef
370.418 275.59 mo
366.668 277.59 li
366.668 275.84 li
370.418 275.59 li
@
366.668 277.59 mo
362.918 275.507 li
366.668 275.84 li
366.668 277.59 li
cp
ef
372.086 237.507 mo
370.752 275.84 li
366.668 277.59 mo
362.918 275.507 li
366.668 275.84 li
366.668 277.59 li
@
374.502 275.673 mo
370.752 277.59 li
370.752 275.84 li
374.502 275.673 li
cp
ef
374.502 275.673 mo
370.752 277.59 li
370.752 275.84 li
374.502 275.673 li
@
370.752 277.59 mo
367.002 275.423 li
370.752 275.84 li
370.752 277.59 li
cp
ef
375.086 237.507 mo
372.418 275.84 li
370.752 277.59 mo
367.002 275.423 li
370.752 275.84 li
370.752 277.59 li
@
376.168 275.84 mo
372.252 277.59 li
372.418 275.84 li
376.168 275.84 li
cp
ef
376.168 275.84 mo
372.252 277.59 li
372.418 275.84 li
376.168 275.84 li
@
372.252 277.59 mo
368.668 275.257 li
372.418 275.84 li
372.252 277.59 li
cp
ef
380.252 237.507 mo
375.002 275.84 li
372.252 277.59 mo
368.668 275.257 li
372.418 275.84 li
372.252 277.59 li
@
378.752 276.09 mo
374.752 277.59 li
375.002 275.84 li
378.752 276.09 li
cp
ef
378.752 276.09 mo
374.752 277.59 li
375.002 275.84 li
378.752 276.09 li
@
374.752 277.59 mo
371.336 275.09 li
375.002 275.84 li
374.752 277.59 li
cp
ef
383.252 237.507 mo
377.502 275.84 li
374.752 277.59 mo
371.336 275.09 li
375.002 275.84 li
374.752 277.59 li
@
381.252 276.173 mo
377.252 277.59 li
377.502 275.84 li
381.252 276.173 li
cp
ef
381.252 276.173 mo
377.252 277.59 li
377.502 275.84 li
381.252 276.173 li
@
377.252 277.59 mo
373.836 275.007 li
377.502 275.84 li
377.252 277.59 li
cp
ef
386.252 237.507 mo
380.252 275.84 li
377.252 277.59 mo
373.836 275.007 li
377.502 275.84 li
377.252 277.59 li
@
384.002 276.173 mo
380.002 277.59 li
380.252 275.84 li
384.002 276.173 li
cp
ef
384.002 276.173 mo
380.002 277.59 li
380.252 275.84 li
384.002 276.173 li
@
380.002 277.59 mo
376.586 275.007 li
380.252 275.84 li
380.002 277.59 li
cp
ef
388.336 237.507 mo
383.336 275.84 li
380.002 277.59 mo
376.586 275.007 li
380.252 275.84 li
380.002 277.59 li
@
387.086 276.09 mo
383.086 277.59 li
383.336 275.84 li
387.086 276.09 li
cp
ef
387.086 276.09 mo
383.086 277.59 li
383.336 275.84 li
387.086 276.09 li
@
383.086 277.59 mo
379.668 275.09 li
383.336 275.84 li
383.086 277.59 li
cp
ef
391.336 237.507 mo
387.002 275.84 li
383.086 277.59 mo
379.668 275.09 li
383.336 275.84 li
383.086 277.59 li
@
390.836 276.007 mo
386.836 277.59 li
387.002 275.84 li
390.836 276.007 li
cp
ef
390.836 276.007 mo
386.836 277.59 li
387.002 275.84 li
390.836 276.007 li
@
386.836 277.59 mo
383.336 275.173 li
387.002 275.84 li
386.836 277.59 li
cp
ef
393.502 237.507 mo
389.502 275.84 li
386.836 277.59 mo
383.336 275.173 li
387.002 275.84 li
386.836 277.59 li
@
393.252 275.923 mo
389.336 277.59 li
389.502 275.84 li
393.252 275.923 li
cp
ef
393.252 275.923 mo
389.336 277.59 li
389.502 275.84 li
393.252 275.923 li
@
389.336 277.59 mo
385.836 275.173 li
389.502 275.84 li
389.336 277.59 li
cp
ef
395.668 237.507 mo
392.836 275.84 li
389.336 277.59 mo
385.836 275.173 li
389.502 275.84 li
389.336 277.59 li
@
396.668 275.84 mo
392.752 277.59 li
392.836 275.84 li
396.668 275.84 li
cp
ef
396.668 275.84 mo
392.752 277.59 li
392.836 275.84 li
396.668 275.84 li
@
392.752 277.59 mo
389.168 275.257 li
392.836 275.84 li
392.752 277.59 li
cp
ef
400.752 237.507 mo
395.418 275.84 li
392.752 277.59 mo
389.168 275.257 li
392.836 275.84 li
392.752 277.59 li
@
399.252 276.09 mo
395.252 277.59 li
395.418 275.84 li
399.252 276.09 li
cp
ef
399.252 276.09 mo
395.252 277.59 li
395.418 275.84 li
399.252 276.09 li
@
395.252 277.59 mo
391.752 275.09 li
395.418 275.84 li
395.252 277.59 li
cp
ef
405.836 237.507 mo
398.668 275.923 li
395.252 277.59 mo
391.752 275.09 li
395.418 275.84 li
395.252 277.59 li
@
402.418 276.257 mo
398.336 277.59 li
398.668 275.923 li
402.418 276.257 li
cp
ef
402.418 276.257 mo
398.336 277.59 li
398.668 275.923 li
402.418 276.257 li
@
398.336 277.59 mo
395.002 274.923 li
398.668 275.923 li
398.336 277.59 li
cp
ef
407.836 237.507 mo
401.668 275.84 li
398.336 277.59 mo
395.002 274.923 li
398.668 275.923 li
398.336 277.59 li
@
405.418 276.173 mo
401.418 277.59 li
401.668 275.84 li
405.418 276.173 li
cp
ef
405.418 276.173 mo
401.418 277.59 li
401.668 275.84 li
405.418 276.173 li
@
401.418 277.59 mo
398.086 275.007 li
401.668 275.84 li
401.418 277.59 li
cp
ef
410.002 237.507 mo
404.752 275.84 li
401.418 277.59 mo
398.086 275.007 li
401.668 275.84 li
401.418 277.59 li
@
408.502 276.09 mo
404.502 277.59 li
404.752 275.84 li
408.502 276.09 li
cp
ef
408.502 276.09 mo
404.502 277.59 li
404.752 275.84 li
408.502 276.09 li
@
404.502 277.59 mo
401.086 275.09 li
404.752 275.84 li
404.502 277.59 li
cp
ef
413.002 237.507 mo
407.586 275.84 li
404.502 277.59 mo
401.086 275.09 li
404.752 275.84 li
404.502 277.59 li
@
411.336 276.09 mo
407.336 277.59 li
407.586 275.84 li
411.336 276.09 li
cp
ef
411.336 276.09 mo
407.336 277.59 li
407.586 275.84 li
411.336 276.09 li
@
407.336 277.59 mo
403.918 275.09 li
407.586 275.84 li
407.336 277.59 li
cp
ef
415.002 237.507 mo
410.586 275.84 li
407.336 277.59 mo
403.918 275.09 li
407.586 275.84 li
407.336 277.59 li
@
414.418 276.007 mo
410.418 277.59 li
410.586 275.84 li
414.418 276.007 li
cp
ef
414.418 276.007 mo
410.418 277.59 li
410.586 275.84 li
414.418 276.007 li
@
410.418 277.59 mo
406.918 275.173 li
410.586 275.84 li
410.418 277.59 li
cp
ef
417.002 237.507 mo
413.086 275.84 li
410.418 277.59 mo
406.918 275.173 li
410.586 275.84 li
410.418 277.59 li
@
416.836 275.923 mo
412.918 277.59 li
413.086 275.84 li
416.836 275.923 li
cp
ef
416.836 275.923 mo
412.918 277.59 li
413.086 275.84 li
416.836 275.923 li
@
412.918 277.59 mo
409.418 275.173 li
413.086 275.84 li
412.918 277.59 li
cp
ef
420.002 237.507 mo
416.502 275.84 li
412.918 277.59 mo
409.418 275.173 li
413.086 275.84 li
412.918 277.59 li
@
420.252 275.923 mo
416.336 277.59 li
416.502 275.84 li
420.252 275.923 li
cp
ef
420.252 275.923 mo
416.336 277.59 li
416.502 275.84 li
420.252 275.923 li
@
416.336 277.59 mo
412.752 275.257 li
416.502 275.84 li
416.336 277.59 li
cp
ef
422.918 237.507 mo
419.252 275.84 li
416.336 277.59 mo
412.752 275.257 li
416.502 275.84 li
416.336 277.59 li
@
423.002 275.923 mo
419.086 277.59 li
419.252 275.84 li
423.002 275.923 li
cp
ef
423.002 275.923 mo
419.086 277.59 li
419.252 275.84 li
423.002 275.923 li
@
419.086 277.59 mo
415.586 275.173 li
419.252 275.84 li
419.086 277.59 li
cp
ef
425.836 237.507 mo
423.002 275.84 li
419.086 277.59 mo
415.586 275.173 li
419.252 275.84 li
419.086 277.59 li
@
426.752 275.84 mo
422.836 277.59 li
423.002 275.84 li
426.752 275.84 li
cp
ef
426.752 275.84 mo
422.836 277.59 li
423.002 275.84 li
426.752 275.84 li
@
422.836 277.59 mo
419.252 275.257 li
423.002 275.84 li
422.836 277.59 li
cp
ef
428.836 237.507 mo
425.752 275.84 li
422.836 277.59 mo
419.252 275.257 li
423.002 275.84 li
422.836 277.59 li
@
429.502 275.84 mo
425.668 277.59 li
425.752 275.84 li
429.502 275.84 li
cp
ef
429.502 275.84 mo
425.668 277.59 li
425.752 275.84 li
429.502 275.84 li
@
425.668 277.59 mo
422.086 275.257 li
425.752 275.84 li
425.668 277.59 li
cp
ef
430.918 237.507 mo
428.502 275.84 li
425.668 277.59 mo
422.086 275.257 li
425.752 275.84 li
425.668 277.59 li
@
432.252 275.757 mo
428.418 277.59 li
428.502 275.84 li
432.252 275.757 li
cp
ef
432.252 275.757 mo
428.418 277.59 li
428.502 275.84 li
432.252 275.757 li
@
428.418 277.59 mo
424.836 275.34 li
428.502 275.84 li
428.418 277.59 li
cp
ef
433.918 237.507 mo
431.668 275.84 li
428.418 277.59 mo
424.836 275.34 li
428.502 275.84 li
428.418 277.59 li
@
435.418 275.757 mo
431.502 277.59 li
431.668 275.84 li
435.418 275.757 li
cp
ef
435.418 275.757 mo
431.502 277.59 li
431.668 275.84 li
435.418 275.757 li
@
431.502 277.59 mo
427.918 275.34 li
431.668 275.84 li
431.502 277.59 li
cp
ef
436.918 237.507 mo
433.502 275.84 li
431.502 277.59 mo
427.918 275.34 li
431.668 275.84 li
431.502 277.59 li
@
437.336 275.923 mo
433.418 277.59 li
433.502 275.84 li
437.336 275.923 li
cp
ef
437.336 275.923 mo
433.418 277.59 li
433.502 275.84 li
437.336 275.923 li
@
433.418 277.59 mo
429.836 275.257 li
433.502 275.84 li
433.418 277.59 li
cp
ef
439.918 237.507 mo
436.336 275.84 li
433.418 277.59 mo
429.836 275.257 li
433.502 275.84 li
433.418 277.59 li
@
440.086 275.923 mo
436.168 277.59 li
436.336 275.84 li
440.086 275.923 li
cp
ef
440.086 275.923 mo
436.168 277.59 li
436.336 275.84 li
440.086 275.923 li
@
436.168 277.59 mo
432.668 275.257 li
436.336 275.84 li
436.168 277.59 li
cp
ef
442.918 237.507 mo
440.002 275.84 li
436.168 277.59 mo
432.668 275.257 li
436.336 275.84 li
436.168 277.59 li
@
443.836 275.84 mo
439.918 277.59 li
440.002 275.84 li
443.836 275.84 li
cp
ef
443.836 275.84 mo
439.918 277.59 li
440.002 275.84 li
443.836 275.84 li
@
439.918 277.59 mo
436.336 275.257 li
440.002 275.84 li
439.918 277.59 li
cp
ef
446.002 237.507 mo
442.918 275.84 li
439.918 277.59 mo
436.336 275.257 li
440.002 275.84 li
439.918 277.59 li
@
446.752 275.84 mo
442.836 277.59 li
442.918 275.84 li
446.752 275.84 li
cp
ef
446.752 275.84 mo
442.836 277.59 li
442.918 275.84 li
446.752 275.84 li
@
442.836 277.59 mo
439.252 275.257 li
442.918 275.84 li
442.836 277.59 li
cp
ef
451.086 237.507 mo
445.586 275.84 li
442.836 277.59 mo
439.252 275.257 li
442.918 275.84 li
442.836 277.59 li
@
449.336 276.09 mo
445.336 277.59 li
445.586 275.84 li
449.336 276.09 li
cp
ef
449.336 276.09 mo
445.336 277.59 li
445.586 275.84 li
449.336 276.09 li
@
445.336 277.59 mo
441.918 275.007 li
445.586 275.84 li
445.336 277.59 li
cp
ef
454.168 237.507 mo
448.668 275.84 li
445.336 277.59 mo
441.918 275.007 li
445.586 275.84 li
445.336 277.59 li
@
452.418 276.09 mo
448.418 277.59 li
448.668 275.84 li
452.418 276.09 li
cp
ef
452.418 276.09 mo
448.418 277.59 li
448.668 275.84 li
452.418 276.09 li
@
448.418 277.59 mo
445.002 275.007 li
448.668 275.84 li
448.418 277.59 li
cp
ef
456.336 237.507 mo
450.836 275.84 li
448.418 277.59 mo
445.002 275.007 li
448.668 275.84 li
448.418 277.59 li
@
454.586 276.09 mo
450.586 277.59 li
450.836 275.84 li
454.586 276.09 li
cp
ef
454.586 276.09 mo
450.586 277.59 li
450.836 275.84 li
454.586 276.09 li
@
450.586 277.59 mo
447.168 275.007 li
450.836 275.84 li
450.586 277.59 li
cp
ef
459.418 237.507 mo
454.252 275.84 li
450.586 277.59 mo
447.168 275.007 li
450.836 275.84 li
450.586 277.59 li
@
458.002 276.09 mo
454.002 277.59 li
454.252 275.84 li
458.002 276.09 li
cp
ef
458.002 276.09 mo
454.002 277.59 li
454.252 275.84 li
458.002 276.09 li
@
454.002 277.59 mo
450.502 275.09 li
454.252 275.84 li
454.002 277.59 li
cp
ef
461.502 237.507 mo
457.836 275.84 li
454.002 277.59 mo
450.502 275.09 li
454.252 275.84 li
454.002 277.59 li
@
461.668 275.923 mo
457.752 277.59 li
457.836 275.84 li
461.668 275.923 li
cp
ef
461.668 275.923 mo
457.752 277.59 li
457.836 275.84 li
461.668 275.923 li
@
457.752 277.59 mo
454.168 275.173 li
457.836 275.84 li
457.752 277.59 li
cp
ef
463.668 237.507 mo
460.918 275.84 li
457.752 277.59 mo
454.168 275.173 li
457.836 275.84 li
457.752 277.59 li
@
464.668 275.84 mo
460.836 277.59 li
460.918 275.84 li
464.668 275.84 li
cp
ef
464.668 275.84 mo
460.836 277.59 li
460.918 275.84 li
464.668 275.84 li
@
460.836 277.59 mo
457.252 275.257 li
460.918 275.84 li
460.836 277.59 li
cp
ef
465.836 237.507 mo
463.668 275.84 li
460.836 277.59 mo
457.252 275.257 li
460.918 275.84 li
460.836 277.59 li
@
467.502 275.757 mo
463.586 277.59 li
463.668 275.84 li
467.502 275.757 li
cp
ef
467.502 275.757 mo
463.586 277.59 li
463.668 275.84 li
467.502 275.757 li
@
463.586 277.59 mo
460.002 275.34 li
463.668 275.84 li
463.586 277.59 li
cp
ef
467.918 237.507 mo
466.502 275.84 li
463.586 277.59 mo
460.002 275.34 li
463.668 275.84 li
463.586 277.59 li
@
470.252 275.673 mo
466.418 277.59 li
466.502 275.84 li
470.252 275.673 li
cp
ef
470.252 275.673 mo
466.418 277.59 li
466.502 275.84 li
470.252 275.673 li
@
466.418 277.59 mo
462.752 275.423 li
466.502 275.84 li
466.418 277.59 li
cp
ef
470.918 237.507 mo
469.002 275.84 li
466.418 277.59 mo
462.752 275.423 li
466.502 275.84 li
466.418 277.59 li
@
472.752 275.757 mo
468.918 277.59 li
469.002 275.84 li
472.752 275.757 li
cp
ef
472.752 275.757 mo
468.918 277.59 li
469.002 275.84 li
472.752 275.757 li
@
468.918 277.59 mo
465.252 275.34 li
469.002 275.84 li
468.918 277.59 li
cp
ef
473.918 237.507 mo
473.002 275.84 li
468.918 277.59 mo
465.252 275.34 li
469.002 275.84 li
468.918 277.59 li
@
476.752 275.673 mo
472.918 277.59 li
473.002 275.84 li
476.752 275.673 li
cp
ef
476.752 275.673 mo
472.918 277.59 li
473.002 275.84 li
476.752 275.673 li
@
472.918 277.59 mo
469.252 275.423 li
473.002 275.84 li
472.918 277.59 li
cp
ef
478.418 237.507 mo
476.086 275.84 li
472.918 277.59 mo
469.252 275.423 li
473.002 275.84 li
472.918 277.59 li
@
479.918 275.757 mo
476.002 277.59 li
476.086 275.84 li
479.918 275.757 li
cp
ef
479.918 275.757 mo
476.002 277.59 li
476.086 275.84 li
479.918 275.757 li
@
476.002 277.59 mo
472.418 275.34 li
476.086 275.84 li
476.002 277.59 li
cp
ef
481.418 237.507 mo
478.918 275.84 li
476.002 277.59 mo
472.418 275.34 li
476.086 275.84 li
476.002 277.59 li
@
482.668 275.84 mo
478.836 277.59 li
478.918 275.84 li
482.668 275.84 li
cp
ef
482.668 275.84 mo
478.836 277.59 li
478.918 275.84 li
482.668 275.84 li
@
478.836 277.59 mo
475.168 275.34 li
478.918 275.84 li
478.836 277.59 li
cp
ef
484.418 237.507 mo
481.752 275.84 li
478.836 277.59 mo
475.168 275.34 li
478.918 275.84 li
478.836 277.59 li
@
485.502 275.84 mo
481.586 277.59 li
481.752 275.84 li
485.502 275.84 li
cp
ef
485.502 275.84 mo
481.586 277.59 li
481.752 275.84 li
485.502 275.84 li
@
481.586 277.59 mo
478.002 275.34 li
481.752 275.84 li
481.586 277.59 li
cp
ef
487.502 237.507 mo
484.836 275.84 li
481.586 277.59 mo
478.002 275.34 li
481.752 275.84 li
481.586 277.59 li
@
488.586 275.84 mo
484.668 277.59 li
484.836 275.84 li
488.586 275.84 li
cp
ef
488.586 275.84 mo
484.668 277.59 li
484.836 275.84 li
488.586 275.84 li
@
484.668 277.59 mo
481.086 275.34 li
484.836 275.84 li
484.668 277.59 li
cp
ef
490.586 237.507 mo
487.668 275.84 li
484.668 277.59 mo
481.086 275.34 li
484.836 275.84 li
484.668 277.59 li
@
491.418 275.84 mo
487.502 277.59 li
487.668 275.84 li
491.418 275.84 li
cp
ef
491.418 275.84 mo
487.502 277.59 li
487.668 275.84 li
491.418 275.84 li
@
487.502 277.59 mo
483.918 275.257 li
487.668 275.84 li
487.502 277.59 li
cp
ef
493.586 237.507 mo
491.002 275.84 li
487.502 277.59 mo
483.918 275.257 li
487.668 275.84 li
487.502 277.59 li
@
494.752 275.84 mo
490.918 277.59 li
491.002 275.84 li
494.752 275.84 li
cp
ef
494.752 275.84 mo
490.918 277.59 li
491.002 275.84 li
494.752 275.84 li
@
490.918 277.59 mo
487.336 275.34 li
491.002 275.84 li
490.918 277.59 li
cp
ef
495.752 237.507 mo
493.752 275.84 li
490.918 277.59 mo
487.336 275.34 li
491.002 275.84 li
490.918 277.59 li
@
497.586 275.757 mo
493.668 277.59 li
493.752 275.84 li
497.586 275.757 li
cp
ef
497.586 275.757 mo
493.668 277.59 li
493.752 275.84 li
497.586 275.757 li
@
493.668 277.59 mo
490.086 275.34 li
493.752 275.84 li
493.668 277.59 li
cp
ef
498.752 237.507 mo
497.002 275.84 li
493.668 277.59 mo
490.086 275.34 li
493.752 275.84 li
493.668 277.59 li
@
500.752 275.757 mo
496.918 277.59 li
497.002 275.84 li
500.752 275.757 li
cp
ef
500.752 275.757 mo
496.918 277.59 li
497.002 275.84 li
500.752 275.757 li
@
496.918 277.59 mo
493.252 275.423 li
497.002 275.84 li
496.918 277.59 li
cp
ef
501.836 237.507 mo
500.086 275.84 li
496.918 277.59 mo
493.252 275.423 li
497.002 275.84 li
496.918 277.59 li
@
503.836 275.757 mo
500.002 277.59 li
500.086 275.84 li
503.836 275.757 li
cp
ef
503.836 275.757 mo
500.002 277.59 li
500.086 275.84 li
503.836 275.757 li
@
500.002 277.59 mo
496.336 275.423 li
500.086 275.84 li
500.002 277.59 li
cp
ef
504.918 237.507 mo
502.252 275.84 li
500.002 277.59 mo
496.336 275.423 li
500.086 275.84 li
500.002 277.59 li
@
506.002 275.84 mo
502.168 277.59 li
502.252 275.84 li
506.002 275.84 li
cp
ef
506.002 275.84 mo
502.168 277.59 li
502.252 275.84 li
506.002 275.84 li
@
502.168 277.59 mo
498.586 275.34 li
502.252 275.84 li
502.168 277.59 li
cp
ef
507.918 237.507 mo
504.502 275.84 li
502.168 277.59 mo
498.586 275.34 li
502.252 275.84 li
502.168 277.59 li
@
508.252 275.923 mo
504.336 277.59 li
504.502 275.84 li
508.252 275.923 li
cp
ef
508.252 275.923 mo
504.336 277.59 li
504.502 275.84 li
508.252 275.923 li
@
504.336 277.59 mo
500.752 275.257 li
504.502 275.84 li
504.336 277.59 li
cp
ef
510.086 237.507 mo
507.586 275.84 li
504.336 277.59 mo
500.752 275.257 li
504.502 275.84 li
504.336 277.59 li
@
511.336 275.84 mo
507.418 277.59 li
507.586 275.84 li
511.336 275.84 li
cp
ef
511.336 275.84 mo
507.418 277.59 li
507.586 275.84 li
511.336 275.84 li
@
507.418 277.59 mo
503.836 275.34 li
507.586 275.84 li
507.418 277.59 li
cp
ef
513.168 237.507 mo
510.086 275.84 li
507.418 277.59 mo
503.836 275.34 li
507.586 275.84 li
507.418 277.59 li
@
513.836 275.84 mo
509.918 277.59 li
510.086 275.84 li
513.836 275.84 li
cp
ef
513.836 275.84 mo
509.918 277.59 li
510.086 275.84 li
513.836 275.84 li
@
509.918 277.59 mo
506.336 275.257 li
510.086 275.84 li
509.918 277.59 li
cp
ef
515.418 237.507 mo
513.418 275.84 li
509.918 277.59 mo
506.336 275.257 li
510.086 275.84 li
509.918 277.59 li
@
517.168 275.757 mo
513.336 277.59 li
513.418 275.84 li
517.168 275.757 li
cp
ef
517.168 275.757 mo
513.336 277.59 li
513.418 275.84 li
517.168 275.757 li
@
513.336 277.59 mo
509.668 275.34 li
513.418 275.84 li
513.336 277.59 li
cp
ef
518.502 237.507 mo
515.668 275.84 li
513.336 277.59 mo
509.668 275.34 li
513.418 275.84 li
513.336 277.59 li
@
519.418 275.84 mo
515.502 277.59 li
515.668 275.84 li
519.418 275.84 li
cp
ef
519.418 275.84 mo
515.502 277.59 li
515.668 275.84 li
519.418 275.84 li
@
515.502 277.59 mo
511.918 275.257 li
515.668 275.84 li
515.502 277.59 li
cp
ef
521.586 237.507 mo
518.752 275.84 li
515.502 277.59 mo
511.918 275.257 li
515.668 275.84 li
515.502 277.59 li
@
522.502 275.84 mo
518.586 277.59 li
518.752 275.84 li
522.502 275.84 li
cp
ef
522.502 275.84 mo
518.586 277.59 li
518.752 275.84 li
522.502 275.84 li
@
518.586 277.59 mo
515.002 275.257 li
518.752 275.84 li
518.586 277.59 li
cp
ef
524.752 237.507 mo
521.252 275.84 li
518.586 277.59 mo
515.002 275.257 li
518.752 275.84 li
518.586 277.59 li
@
525.002 275.923 mo
521.086 277.59 li
521.252 275.84 li
525.002 275.923 li
cp
ef
525.002 275.923 mo
521.086 277.59 li
521.252 275.84 li
525.002 275.923 li
@
521.086 277.59 mo
517.502 275.257 li
521.252 275.84 li
521.086 277.59 li
cp
ef
527.836 237.507 mo
525.252 275.84 li
521.086 277.59 mo
517.502 275.257 li
521.252 275.84 li
521.086 277.59 li
@
529.002 275.84 mo
525.086 277.59 li
525.252 275.84 li
529.002 275.84 li
cp
ef
529.002 275.84 mo
525.086 277.59 li
525.252 275.84 li
529.002 275.84 li
@
525.086 277.59 mo
521.502 275.34 li
525.252 275.84 li
525.086 277.59 li
cp
ef
529.918 237.507 mo
527.418 275.84 li
525.086 277.59 mo
521.502 275.34 li
525.252 275.84 li
525.086 277.59 li
@
531.168 275.84 mo
527.336 277.59 li
527.418 275.84 li
531.168 275.84 li
cp
ef
531.168 275.84 mo
527.336 277.59 li
527.418 275.84 li
531.168 275.84 li
@
527.336 277.59 mo
523.668 275.34 li
527.418 275.84 li
527.336 277.59 li
cp
ef
532.002 237.507 mo
530.168 275.84 li
527.336 277.59 mo
523.668 275.34 li
527.418 275.84 li
527.336 277.59 li
@
533.918 275.757 mo
530.086 277.59 li
530.168 275.84 li
533.918 275.757 li
cp
ef
533.918 275.757 mo
530.086 277.59 li
530.168 275.84 li
533.918 275.757 li
@
530.086 277.59 mo
526.418 275.423 li
530.168 275.84 li
530.086 277.59 li
cp
ef
535.002 237.507 mo
532.668 275.84 li
530.086 277.59 mo
526.418 275.423 li
530.168 275.84 li
530.086 277.59 li
@
536.418 275.757 mo
532.586 277.59 li
532.668 275.84 li
536.418 275.757 li
cp
ef
536.418 275.757 mo
532.586 277.59 li
532.668 275.84 li
536.418 275.757 li
@
532.586 277.59 mo
528.918 275.34 li
532.668 275.84 li
532.586 277.59 li
cp
ef
538.002 237.507 mo
535.752 275.84 li
532.586 277.59 mo
528.918 275.34 li
532.668 275.84 li
532.586 277.59 li
@
539.502 275.757 mo
535.668 277.59 li
535.752 275.84 li
539.502 275.757 li
cp
ef
539.502 275.757 mo
535.668 277.59 li
535.752 275.84 li
539.502 275.757 li
@
535.668 277.59 mo
532.002 275.34 li
535.752 275.84 li
535.668 277.59 li
cp
ef
541.002 237.507 mo
538.252 275.84 li
535.668 277.59 mo
532.002 275.34 li
535.752 275.84 li
535.668 277.59 li
@
542.002 275.84 mo
538.168 277.59 li
538.252 275.84 li
542.002 275.84 li
cp
ef
542.002 275.84 mo
538.168 277.59 li
538.252 275.84 li
542.002 275.84 li
@
538.168 277.59 mo
534.586 275.34 li
538.252 275.84 li
538.168 277.59 li
cp
ef
543.086 237.507 mo
541.918 275.84 li
538.168 277.59 mo
534.586 275.34 li
538.252 275.84 li
538.168 277.59 li
@
545.668 275.673 mo
541.836 277.59 li
541.918 275.84 li
545.668 275.673 li
cp
ef
545.668 275.673 mo
541.836 277.59 li
541.918 275.84 li
545.668 275.673 li
@
541.836 277.59 mo
538.168 275.423 li
541.918 275.84 li
541.836 277.59 li
cp
ef
546.086 237.507 mo
544.752 275.84 li
541.836 277.59 mo
538.168 275.423 li
541.918 275.84 li
541.836 277.59 li
@
548.502 275.673 mo
544.668 277.59 li
544.752 275.84 li
548.502 275.673 li
cp
ef
548.502 275.673 mo
544.668 277.59 li
544.752 275.84 li
548.502 275.673 li
@
544.668 277.59 mo
541.002 275.423 li
544.752 275.84 li
544.668 277.59 li
cp
ef
549.086 237.507 mo
548.418 275.84 li
544.668 277.59 mo
541.002 275.423 li
544.752 275.84 li
544.668 277.59 li
@
552.168 275.59 mo
548.418 277.59 li
548.418 275.84 li
552.168 275.59 li
cp
ef
552.168 275.59 mo
548.418 277.59 li
548.418 275.84 li
552.168 275.59 li
@
548.418 277.59 mo
544.668 275.507 li
548.418 275.84 li
548.418 277.59 li
cp
ef
551.168 237.507 mo
551.168 275.84 li
548.418 277.59 mo
544.668 275.507 li
548.418 275.84 li
548.418 277.59 li
@
554.918 275.59 mo
551.168 277.59 li
551.168 275.84 li
554.918 275.59 li
cp
ef
554.918 275.59 mo
551.168 277.59 li
551.168 275.84 li
554.918 275.59 li
@
551.168 277.59 mo
547.418 275.59 li
551.168 275.84 li
551.168 277.59 li
cp
ef
553.252 237.507 mo
553.086 275.84 li
551.168 277.59 mo
547.418 275.59 li
551.168 275.84 li
551.168 277.59 li
@
556.836 275.59 mo
553.086 277.59 li
553.086 275.84 li
556.836 275.59 li
cp
ef
556.836 275.59 mo
553.086 277.59 li
553.086 275.84 li
556.836 275.59 li
@
553.086 277.59 mo
549.336 275.507 li
553.086 275.84 li
553.086 277.59 li
cp
ef
556.252 237.507 mo
556.418 275.84 li
553.086 277.59 mo
549.336 275.507 li
553.086 275.84 li
553.086 277.59 li
@
560.168 275.507 mo
556.418 277.59 li
556.418 275.84 li
560.168 275.507 li
cp
ef
560.168 275.507 mo
556.418 277.59 li
556.418 275.84 li
560.168 275.507 li
@
556.418 277.59 mo
552.668 275.59 li
556.418 275.84 li
556.418 277.59 li
cp
ef
558.418 237.507 mo
559.502 275.84 li
556.418 277.59 mo
552.668 275.59 li
556.418 275.84 li
556.418 277.59 li
@
563.252 275.423 mo
559.586 277.59 li
559.502 275.84 li
563.252 275.423 li
cp
ef
563.252 275.423 mo
559.586 277.59 li
559.502 275.84 li
563.252 275.423 li
@
559.586 277.59 mo
555.752 275.673 li
559.502 275.84 li
559.586 277.59 li
cp
ef
561.418 237.507 mo
561.502 275.84 li
559.586 277.59 mo
555.752 275.673 li
559.502 275.84 li
559.586 277.59 li
@
565.252 275.507 mo
561.586 277.59 li
561.502 275.84 li
565.252 275.507 li
cp
ef
565.252 275.507 mo
561.586 277.59 li
561.502 275.84 li
565.252 275.507 li
@
561.586 277.59 mo
557.752 275.59 li
561.502 275.84 li
561.586 277.59 li
cp
ef
564.418 237.507 mo
564.918 275.84 li
561.586 277.59 mo
557.752 275.59 li
561.502 275.84 li
561.586 277.59 li
@
568.668 275.507 mo
565.002 277.59 li
564.918 275.84 li
568.668 275.507 li
cp
ef
568.668 275.507 mo
565.002 277.59 li
564.918 275.84 li
568.668 275.507 li
@
565.002 277.59 mo
561.168 275.59 li
564.918 275.84 li
565.002 277.59 li
cp
ef
567.502 237.507 mo
568.002 275.84 li
565.002 277.59 mo
561.168 275.59 li
564.918 275.84 li
565.002 277.59 li
@
571.752 275.507 mo
568.086 277.59 li
568.002 275.84 li
571.752 275.507 li
cp
ef
571.752 275.507 mo
568.086 277.59 li
568.002 275.84 li
571.752 275.507 li
@
568.086 277.59 mo
564.252 275.59 li
568.002 275.84 li
568.086 277.59 li
cp
ef
570.586 237.507 mo
570.586 275.84 li
568.086 277.59 mo
564.252 275.59 li
568.002 275.84 li
568.086 277.59 li
@
574.336 275.59 mo
570.586 277.59 li
570.586 275.84 li
574.336 275.59 li
cp
ef
574.336 275.59 mo
570.586 277.59 li
570.586 275.84 li
574.336 275.59 li
@
570.586 277.59 mo
566.836 275.59 li
570.586 275.84 li
570.586 277.59 li
cp
ef
573.586 237.507 mo
573.918 275.84 li
570.586 277.59 mo
566.836 275.59 li
570.586 275.84 li
570.586 277.59 li
@
577.668 275.507 mo
573.918 277.59 li
573.918 275.84 li
577.668 275.507 li
cp
ef
577.668 275.507 mo
573.918 277.59 li
573.918 275.84 li
577.668 275.507 li
@
573.918 277.59 mo
570.168 275.59 li
573.918 275.84 li
573.918 277.59 li
cp
ef
576.586 237.507 mo
577.002 275.84 li
573.918 277.59 mo
570.168 275.59 li
573.918 275.84 li
573.918 277.59 li
@
580.752 275.507 mo
577.086 277.59 li
577.002 275.84 li
580.752 275.507 li
cp
ef
580.752 275.507 mo
577.086 277.59 li
577.002 275.84 li
580.752 275.507 li
@
577.086 277.59 mo
573.252 275.59 li
577.002 275.84 li
577.086 277.59 li
cp
ef
579.586 237.507 mo
579.252 275.84 li
577.086 277.59 mo
573.252 275.59 li
577.002 275.84 li
577.086 277.59 li
@
583.002 275.59 mo
579.252 277.59 li
579.252 275.84 li
583.002 275.59 li
cp
ef
583.002 275.59 mo
579.252 277.59 li
579.252 275.84 li
583.002 275.59 li
@
579.252 277.59 mo
575.502 275.507 li
579.252 275.84 li
579.252 277.59 li
cp
ef
582.668 237.507 mo
582.668 275.84 li
579.252 277.59 mo
575.502 275.507 li
579.252 275.84 li
579.252 277.59 li
@
586.418 275.59 mo
582.668 277.59 li
582.668 275.84 li
586.418 275.59 li
cp
ef
586.418 275.59 mo
582.668 277.59 li
582.668 275.84 li
586.418 275.59 li
@
582.668 277.59 mo
578.918 275.59 li
582.668 275.84 li
582.668 277.59 li
cp
ef
585.752 237.507 mo
586.086 275.84 li
582.668 277.59 mo
578.918 275.59 li
582.668 275.84 li
582.668 277.59 li
@
589.752 275.507 mo
586.086 277.59 li
586.086 275.84 li
589.752 275.507 li
cp
ef
589.752 275.507 mo
586.086 277.59 li
586.086 275.84 li
589.752 275.507 li
@
586.086 277.59 mo
582.336 275.59 li
586.086 275.84 li
586.086 277.59 li
cp
ef
588.752 237.507 mo
587.918 275.84 li
586.086 277.59 mo
582.336 275.59 li
586.086 275.84 li
586.086 277.59 li
@
591.752 275.673 mo
587.918 277.59 li
587.918 275.84 li
591.752 275.673 li
cp
ef
591.752 275.673 mo
587.918 277.59 li
587.918 275.84 li
591.752 275.673 li
@
587.918 277.59 mo
584.252 275.507 li
587.918 275.84 li
587.918 277.59 li
cp
ef
591.836 237.507 mo
591.668 275.84 li
587.918 277.59 mo
584.252 275.507 li
587.918 275.84 li
587.918 277.59 li
@
595.418 275.59 mo
591.668 277.59 li
591.668 275.84 li
595.418 275.59 li
cp
ef
595.418 275.59 mo
591.668 277.59 li
591.668 275.84 li
595.418 275.59 li
@
591.668 277.59 mo
587.918 275.507 li
591.668 275.84 li
591.668 277.59 li
cp
ef
594.918 237.507 mo
594.168 275.84 li
591.668 277.59 mo
587.918 275.507 li
591.668 275.84 li
591.668 277.59 li
@
597.918 275.673 mo
594.168 277.59 li
594.168 275.84 li
597.918 275.673 li
cp
ef
597.918 275.673 mo
594.168 277.59 li
594.168 275.84 li
597.918 275.673 li
@
594.168 277.59 mo
590.418 275.507 li
594.168 275.84 li
594.168 277.59 li
cp
ef
598.002 237.507 mo
597.252 275.84 li
594.168 277.59 mo
590.418 275.507 li
594.168 275.84 li
594.168 277.59 li
@
601.002 275.59 mo
597.252 277.59 li
597.252 275.84 li
601.002 275.59 li
cp
ef
601.002 275.59 mo
597.252 277.59 li
597.252 275.84 li
601.002 275.59 li
@
597.252 277.59 mo
593.502 275.507 li
597.252 275.84 li
597.252 277.59 li
cp
ef
603.086 237.507 mo
599.836 275.84 li
597.252 277.59 mo
593.502 275.507 li
597.252 275.84 li
597.252 277.59 li
@
603.586 275.84 mo
599.752 277.59 li
599.836 275.84 li
603.586 275.84 li
cp
ef
603.586 275.84 mo
599.752 277.59 li
599.836 275.84 li
603.586 275.84 li
@
599.752 277.59 mo
596.168 275.257 li
599.836 275.84 li
599.752 277.59 li
cp
ef
606.086 237.507 mo
603.668 275.84 li
599.752 277.59 mo
596.168 275.257 li
599.836 275.84 li
599.752 277.59 li
@
607.502 275.757 mo
603.586 277.59 li
603.668 275.84 li
607.502 275.757 li
cp
ef
607.502 275.757 mo
603.586 277.59 li
603.668 275.84 li
607.502 275.757 li
@
603.586 277.59 mo
600.002 275.34 li
603.668 275.84 li
603.586 277.59 li
cp
ef
609.086 237.507 mo
605.418 275.84 li
603.586 277.59 mo
600.002 275.34 li
603.668 275.84 li
603.586 277.59 li
@
609.252 275.923 mo
605.336 277.59 li
605.418 275.84 li
609.252 275.923 li
cp
ef
609.252 275.923 mo
605.336 277.59 li
605.418 275.84 li
609.252 275.923 li
@
605.336 277.59 mo
601.752 275.173 li
605.418 275.84 li
605.336 277.59 li
cp
ef
611.252 237.507 mo
608.252 275.84 li
605.336 277.59 mo
601.752 275.173 li
605.418 275.84 li
605.336 277.59 li
@
612.002 275.84 mo
608.086 277.59 li
608.252 275.84 li
612.002 275.84 li
cp
ef
612.002 275.84 mo
608.086 277.59 li
608.252 275.84 li
612.002 275.84 li
@
608.086 277.59 mo
604.502 275.257 li
608.252 275.84 li
608.086 277.59 li
cp
ef
614.252 237.507 mo
611.586 275.84 li
608.086 277.59 mo
604.502 275.257 li
608.252 275.84 li
608.086 277.59 li
@
615.418 275.84 mo
611.502 277.59 li
611.586 275.84 li
615.418 275.84 li
cp
ef
615.418 275.84 mo
611.502 277.59 li
611.586 275.84 li
615.418 275.84 li
@
611.502 277.59 mo
607.918 275.34 li
611.586 275.84 li
611.502 277.59 li
cp
ef
617.252 237.507 mo
614.418 275.84 li
611.502 277.59 mo
607.918 275.34 li
611.586 275.84 li
611.502 277.59 li
@
618.168 275.84 mo
614.336 277.59 li
614.418 275.84 li
618.168 275.84 li
cp
ef
618.168 275.84 mo
614.336 277.59 li
614.418 275.84 li
618.168 275.84 li
@
614.336 277.59 mo
610.668 275.257 li
614.418 275.84 li
614.336 277.59 li
cp
ef
620.252 237.507 mo
617.502 275.84 li
614.336 277.59 mo
610.668 275.257 li
614.418 275.84 li
614.336 277.59 li
@
621.252 275.84 mo
617.418 277.59 li
617.502 275.84 li
621.252 275.84 li
cp
ef
621.252 275.84 mo
617.418 277.59 li
617.502 275.84 li
621.252 275.84 li
@
617.418 277.59 mo
613.836 275.257 li
617.502 275.84 li
617.418 277.59 li
cp
ef
623.252 237.507 mo
620.336 275.84 li
617.418 277.59 mo
613.836 275.257 li
617.502 275.84 li
617.418 277.59 li
@
624.086 275.84 mo
620.168 277.59 li
620.336 275.84 li
624.086 275.84 li
cp
ef
624.086 275.84 mo
620.168 277.59 li
620.336 275.84 li
624.086 275.84 li
@
620.168 277.59 mo
616.586 275.257 li
620.336 275.84 li
620.168 277.59 li
cp
ef
625.336 237.507 mo
624.002 275.84 li
620.168 277.59 mo
616.586 275.257 li
620.336 275.84 li
620.168 277.59 li
@
627.752 275.673 mo
623.918 277.59 li
624.002 275.84 li
627.752 275.673 li
cp
ef
627.752 275.673 mo
623.918 277.59 li
624.002 275.84 li
627.752 275.673 li
@
623.918 277.59 mo
620.252 275.423 li
624.002 275.84 li
623.918 277.59 li
cp
ef
628.336 237.507 mo
626.918 275.84 li
623.918 277.59 mo
620.252 275.423 li
624.002 275.84 li
623.918 277.59 li
@
630.668 275.673 mo
626.836 277.59 li
626.918 275.84 li
630.668 275.673 li
cp
ef
630.668 275.673 mo
626.836 277.59 li
626.918 275.84 li
630.668 275.673 li
@
626.836 277.59 mo
623.168 275.423 li
626.918 275.84 li
626.836 277.59 li
cp
ef
630.502 237.507 mo
630.002 275.84 li
626.836 277.59 mo
623.168 275.423 li
626.918 275.84 li
626.836 277.59 li
@
633.752 275.59 mo
630.002 277.59 li
630.002 275.84 li
633.752 275.59 li
cp
ef
633.752 275.59 mo
630.002 277.59 li
630.002 275.84 li
633.752 275.59 li
@
630.002 277.59 mo
626.252 275.507 li
630.002 275.84 li
630.002 277.59 li
cp
ef
633.502 237.507 mo
632.502 275.84 li
630.002 277.59 mo
626.252 275.507 li
630.002 275.84 li
630.002 277.59 li
@
636.252 275.673 mo
632.502 277.59 li
632.502 275.84 li
636.252 275.673 li
cp
ef
636.252 275.673 mo
632.502 277.59 li
632.502 275.84 li
636.252 275.673 li
@
632.502 277.59 mo
628.752 275.507 li
632.502 275.84 li
632.502 277.59 li
cp
ef
635.586 237.507 mo
635.252 275.84 li
632.502 277.59 mo
628.752 275.507 li
632.502 275.84 li
632.502 277.59 li
@
639.002 275.59 mo
635.252 277.59 li
635.252 275.84 li
639.002 275.59 li
cp
ef
639.002 275.59 mo
635.252 277.59 li
635.252 275.84 li
639.002 275.59 li
@
635.252 277.59 mo
631.502 275.507 li
635.252 275.84 li
635.252 277.59 li
cp
ef
637.668 237.507 mo
637.168 275.84 li
635.252 277.59 mo
631.502 275.507 li
635.252 275.84 li
635.252 277.59 li
@
640.918 275.59 mo
637.086 277.59 li
637.168 275.84 li
640.918 275.59 li
cp
ef
640.918 275.59 mo
637.086 277.59 li
637.168 275.84 li
640.918 275.59 li
@
637.086 277.59 mo
633.418 275.507 li
637.168 275.84 li
637.086 277.59 li
cp
ef
640.668 237.507 mo
640.252 275.84 li
637.086 277.59 mo
633.418 275.507 li
637.168 275.84 li
637.086 277.59 li
@
644.002 275.59 mo
640.252 277.59 li
640.252 275.84 li
644.002 275.59 li
cp
ef
644.002 275.59 mo
640.252 277.59 li
640.252 275.84 li
644.002 275.59 li
@
640.252 277.59 mo
636.502 275.507 li
640.252 275.84 li
640.252 277.59 li
cp
ef
133.669 317.59 mo
90.252 278.673 li
640.252 277.59 mo
636.502 275.507 li
640.252 275.84 li
640.252 277.59 li
@
88.002 281.673 mo
89.002 277.59 li
90.252 278.673 li
88.002 281.673 li
cp
ef
88.002 281.673 mo
89.002 277.59 li
90.252 278.673 li
88.002 281.673 li
@
89.002 277.59 mo
93.002 276.09 li
90.252 278.673 li
89.002 277.59 li
cp
ef
138.835 317.59 mo
93.4189 278.673 li
89.002 277.59 mo
93.002 276.09 li
90.252 278.673 li
89.002 277.59 li
@
91.1689 281.673 mo
92.0854 277.59 li
93.4189 278.673 li
91.1689 281.673 li
cp
ef
91.1689 281.673 mo
92.0854 277.59 li
93.4189 278.673 li
91.1689 281.673 li
@
92.0854 277.59 mo
96.0854 276.007 li
93.4189 278.673 li
92.0854 277.59 li
cp
ef
143.169 317.59 mo
98.3354 278.673 li
92.0854 277.59 mo
96.0854 276.007 li
93.4189 278.673 li
92.0854 277.59 li
@
96.0854 281.673 mo
97.0854 277.59 li
98.3354 278.673 li
96.0854 281.673 li
cp
ef
96.0854 281.673 mo
97.0854 277.59 li
98.3354 278.673 li
96.0854 281.673 li
@
97.0854 277.59 mo
101.002 276.007 li
98.3354 278.673 li
97.0854 277.59 li
cp
ef
147.169 317.59 mo
99.252 278.673 li
97.0854 277.59 mo
101.002 276.007 li
98.3354 278.673 li
97.0854 277.59 li
@
97.0854 281.757 mo
97.9189 277.59 li
99.252 278.673 li
97.0854 281.757 li
cp
ef
97.0854 281.757 mo
97.9189 277.59 li
99.252 278.673 li
97.0854 281.757 li
@
97.9189 277.59 mo
101.835 275.923 li
99.252 278.673 li
97.9189 277.59 li
cp
ef
149.419 317.59 mo
101.419 278.673 li
97.9189 277.59 mo
101.835 275.923 li
99.252 278.673 li
97.9189 277.59 li
@
99.252 281.757 mo
100.085 277.59 li
101.419 278.673 li
99.252 281.757 li
cp
ef
99.252 281.757 mo
100.085 277.59 li
101.419 278.673 li
99.252 281.757 li
@
100.085 277.59 mo
104.002 275.923 li
101.419 278.673 li
100.085 277.59 li
cp
ef
152.419 317.59 mo
104.752 278.673 li
100.085 277.59 mo
104.002 275.923 li
101.419 278.673 li
100.085 277.59 li
@
102.585 281.757 mo
103.419 277.59 li
104.752 278.673 li
102.585 281.757 li
cp
ef
102.585 281.757 mo
103.419 277.59 li
104.752 278.673 li
102.585 281.757 li
@
103.419 277.59 mo
107.335 275.923 li
104.752 278.673 li
103.419 277.59 li
cp
ef
153.585 317.59 mo
109.085 278.673 li
103.419 277.59 mo
107.335 275.923 li
104.752 278.673 li
103.419 277.59 li
@
106.835 281.673 mo
107.835 277.59 li
109.085 278.673 li
106.835 281.673 li
cp
ef
106.835 281.673 mo
107.835 277.59 li
109.085 278.673 li
106.835 281.673 li
@
107.835 277.59 mo
111.835 276.09 li
109.085 278.673 li
107.835 277.59 li
cp
ef
158.252 317.59 mo
111.919 278.673 li
107.835 277.59 mo
111.835 276.09 li
109.085 278.673 li
107.835 277.59 li
@
109.669 281.757 mo
110.585 277.59 li
111.919 278.673 li
109.669 281.757 li
cp
ef
109.669 281.757 mo
110.585 277.59 li
111.919 278.673 li
109.669 281.757 li
@
110.585 277.59 mo
114.502 276.007 li
111.919 278.673 li
110.585 277.59 li
cp
ef
161.502 317.59 mo
116.835 278.673 li
110.585 277.59 mo
114.502 276.007 li
111.919 278.673 li
110.585 277.59 li
@
114.585 281.673 mo
115.502 277.59 li
116.835 278.673 li
114.585 281.673 li
cp
ef
114.585 281.673 mo
115.502 277.59 li
116.835 278.673 li
114.585 281.673 li
@
115.502 277.59 mo
119.502 276.007 li
116.835 278.673 li
115.502 277.59 li
cp
ef
164.419 317.59 mo
120.169 278.673 li
115.502 277.59 mo
119.502 276.007 li
116.835 278.673 li
115.502 277.59 li
@
117.919 281.673 mo
118.835 277.59 li
120.169 278.673 li
117.919 281.673 li
cp
ef
117.919 281.673 mo
118.835 277.59 li
120.169 278.673 li
117.919 281.673 li
@
118.835 277.59 mo
122.835 276.09 li
120.169 278.673 li
118.835 277.59 li
cp
ef
167.169 317.59 mo
124.002 278.673 li
118.835 277.59 mo
122.835 276.09 li
120.169 278.673 li
118.835 277.59 li
@
121.669 281.673 mo
122.752 277.59 li
124.002 278.673 li
121.669 281.673 li
cp
ef
121.669 281.673 mo
122.752 277.59 li
124.002 278.673 li
121.669 281.673 li
@
122.752 277.59 mo
126.752 276.09 li
124.002 278.673 li
122.752 277.59 li
cp
ef
171.669 317.59 mo
132.169 278.757 li
122.752 277.59 mo
126.752 276.09 li
124.002 278.673 li
122.752 277.59 li
@
129.752 281.673 mo
131.002 277.59 li
132.169 278.757 li
129.752 281.673 li
cp
ef
129.752 281.673 mo
131.002 277.59 li
132.169 278.757 li
129.752 281.673 li
@
131.002 277.59 mo
135.085 276.257 li
132.169 278.757 li
131.002 277.59 li
cp
ef
174.669 317.59 mo
135.502 278.757 li
131.002 277.59 mo
135.085 276.257 li
132.169 278.757 li
131.002 277.59 li
@
133.085 281.59 mo
134.335 277.59 li
135.502 278.757 li
133.085 281.59 li
cp
ef
133.085 281.59 mo
134.335 277.59 li
135.502 278.757 li
133.085 281.59 li
@
134.335 277.59 mo
138.335 276.34 li
135.502 278.757 li
134.335 277.59 li
cp
ef
179.169 317.59 mo
138.835 278.757 li
134.335 277.59 mo
138.335 276.34 li
135.502 278.757 li
134.335 277.59 li
@
136.419 281.673 mo
137.585 277.59 li
138.835 278.757 li
136.419 281.673 li
cp
ef
136.419 281.673 mo
137.585 277.59 li
138.835 278.757 li
136.419 281.673 li
@
137.585 277.59 mo
141.669 276.257 li
138.835 278.757 li
137.585 277.59 li
cp
ef
183.502 317.59 mo
144.335 278.757 li
137.585 277.59 mo
141.669 276.257 li
138.835 278.757 li
137.585 277.59 li
@
141.919 281.59 mo
143.085 277.59 li
144.335 278.757 li
141.919 281.59 li
cp
ef
141.919 281.59 mo
143.085 277.59 li
144.335 278.757 li
141.919 281.59 li
@
143.085 277.59 mo
147.169 276.34 li
144.335 278.757 li
143.085 277.59 li
cp
ef
187.752 317.59 mo
147.085 278.757 li
143.085 277.59 mo
147.169 276.34 li
144.335 278.757 li
143.085 277.59 li
@
144.752 281.673 mo
145.919 277.59 li
147.085 278.757 li
144.752 281.673 li
cp
ef
144.752 281.673 mo
145.919 277.59 li
147.085 278.757 li
144.752 281.673 li
@
145.919 277.59 mo
149.919 276.257 li
147.085 278.757 li
145.919 277.59 li
cp
ef
192.835 317.59 mo
156.419 278.84 li
145.919 277.59 mo
149.919 276.257 li
147.085 278.757 li
145.919 277.59 li
@
153.919 281.59 mo
155.252 277.59 li
156.419 278.84 li
153.919 281.59 li
cp
ef
153.919 281.59 mo
155.252 277.59 li
156.419 278.84 li
153.919 281.59 li
@
155.252 277.59 mo
159.335 276.423 li
156.419 278.84 li
155.252 277.59 li
cp
ef
195.252 317.59 mo
160.252 278.84 li
155.252 277.59 mo
159.335 276.423 li
156.419 278.84 li
155.252 277.59 li
@
157.669 281.59 mo
159.085 277.59 li
160.252 278.84 li
157.669 281.59 li
cp
ef
157.669 281.59 mo
159.085 277.59 li
160.252 278.84 li
157.669 281.59 li
@
159.085 277.59 mo
163.252 276.507 li
160.252 278.84 li
159.085 277.59 li
cp
ef
199.085 317.59 mo
167.335 278.84 li
159.085 277.59 mo
163.252 276.507 li
160.252 278.84 li
159.085 277.59 li
@
164.669 281.507 mo
166.252 277.59 li
167.335 278.84 li
164.669 281.507 li
cp
ef
164.669 281.507 mo
166.252 277.59 li
167.335 278.84 li
164.669 281.507 li
@
166.252 277.59 mo
170.419 276.757 li
167.335 278.84 li
166.252 277.59 li
cp
ef
202.919 317.59 mo
170.669 278.84 li
166.252 277.59 mo
170.419 276.757 li
167.335 278.84 li
166.252 277.59 li
@
168.002 281.507 mo
169.585 277.59 li
170.669 278.84 li
168.002 281.507 li
cp
ef
168.002 281.507 mo
169.585 277.59 li
170.669 278.84 li
168.002 281.507 li
@
169.585 277.59 mo
173.752 276.673 li
170.669 278.84 li
169.585 277.59 li
cp
ef
205.252 317.59 mo
172.919 278.84 li
169.585 277.59 mo
173.752 276.673 li
170.669 278.84 li
169.585 277.59 li
@
170.252 281.507 mo
171.835 277.59 li
172.919 278.84 li
170.252 281.507 li
cp
ef
170.252 281.507 mo
171.835 277.59 li
172.919 278.84 li
170.252 281.507 li
@
171.835 277.59 mo
176.002 276.673 li
172.919 278.84 li
171.835 277.59 li
cp
ef
208.919 317.59 mo
176.752 278.84 li
171.835 277.59 mo
176.002 276.673 li
172.919 278.84 li
171.835 277.59 li
@
174.085 281.507 mo
175.669 277.59 li
176.752 278.84 li
174.085 281.507 li
cp
ef
174.085 281.507 mo
175.669 277.59 li
176.752 278.84 li
174.085 281.507 li
@
175.669 277.59 mo
179.835 276.673 li
176.752 278.84 li
175.669 277.59 li
cp
ef
212.752 317.59 mo
179.002 278.84 li
175.669 277.59 mo
179.835 276.673 li
176.752 278.84 li
175.669 277.59 li
@
176.419 281.507 mo
177.919 277.59 li
179.002 278.84 li
176.419 281.507 li
cp
ef
176.419 281.507 mo
177.919 277.59 li
179.002 278.84 li
176.419 281.507 li
@
177.919 277.59 mo
182.085 276.59 li
179.002 278.84 li
177.919 277.59 li
cp
ef
217.002 317.59 mo
184.252 278.84 li
177.919 277.59 mo
182.085 276.59 li
179.002 278.84 li
177.919 277.59 li
@
181.585 281.507 mo
183.169 277.59 li
184.252 278.84 li
181.585 281.507 li
cp
ef
181.585 281.507 mo
183.169 277.59 li
184.252 278.84 li
181.585 281.507 li
@
183.169 277.59 mo
187.335 276.673 li
184.252 278.84 li
183.169 277.59 li
cp
ef
221.502 317.59 mo
187.419 278.84 li
183.169 277.59 mo
187.335 276.673 li
184.252 278.84 li
183.169 277.59 li
@
184.752 281.507 mo
186.252 277.59 li
187.419 278.84 li
184.752 281.507 li
cp
ef
184.752 281.507 mo
186.252 277.59 li
187.419 278.84 li
184.752 281.507 li
@
186.252 277.59 mo
190.419 276.59 li
187.419 278.84 li
186.252 277.59 li
cp
ef
225.669 317.59 mo
193.002 278.84 li
186.252 277.59 mo
190.419 276.59 li
187.419 278.84 li
186.252 277.59 li
@
190.335 281.507 mo
191.835 277.59 li
193.002 278.84 li
190.335 281.507 li
cp
ef
190.335 281.507 mo
191.835 277.59 li
193.002 278.84 li
190.335 281.507 li
@
191.835 277.59 mo
196.002 276.673 li
193.002 278.84 li
191.835 277.59 li
cp
ef
228.835 317.59 mo
195.169 278.84 li
191.835 277.59 mo
196.002 276.673 li
193.002 278.84 li
191.835 277.59 li
@
192.502 281.507 mo
194.002 277.59 li
195.169 278.84 li
192.502 281.507 li
cp
ef
192.502 281.507 mo
194.002 277.59 li
195.169 278.84 li
192.502 281.507 li
@
194.002 277.59 mo
198.169 276.59 li
195.169 278.84 li
194.002 277.59 li
cp
ef
232.585 317.59 mo
198.002 278.84 li
194.002 277.59 mo
198.169 276.59 li
195.169 278.84 li
194.002 277.59 li
@
195.335 281.59 mo
196.835 277.59 li
198.002 278.84 li
195.335 281.59 li
cp
ef
195.335 281.59 mo
196.835 277.59 li
198.002 278.84 li
195.335 281.59 li
@
196.835 277.59 mo
201.002 276.59 li
198.002 278.84 li
196.835 277.59 li
cp
ef
235.835 317.59 mo
202.252 278.84 li
196.835 277.59 mo
201.002 276.59 li
198.002 278.84 li
196.835 277.59 li
@
199.669 281.507 mo
201.169 277.59 li
202.252 278.84 li
199.669 281.507 li
cp
ef
199.669 281.507 mo
201.169 277.59 li
202.252 278.84 li
199.669 281.507 li
@
201.169 277.59 mo
205.335 276.59 li
202.252 278.84 li
201.169 277.59 li
cp
ef
238.419 317.59 mo
208.419 278.923 li
201.169 277.59 mo
205.335 276.59 li
202.252 278.84 li
201.169 277.59 li
@
205.669 281.423 mo
207.419 277.59 li
208.419 278.923 li
205.669 281.423 li
cp
ef
205.669 281.423 mo
207.419 277.59 li
208.419 278.923 li
205.669 281.423 li
@
207.419 277.59 mo
211.585 276.84 li
208.419 278.923 li
207.419 277.59 li
cp
ef
242.085 317.59 mo
211.835 278.923 li
207.419 277.59 mo
211.585 276.84 li
208.419 278.923 li
207.419 277.59 li
@
209.085 281.423 mo
210.835 277.59 li
211.835 278.923 li
209.085 281.423 li
cp
ef
209.085 281.423 mo
210.835 277.59 li
211.835 278.923 li
209.085 281.423 li
@
210.835 277.59 mo
215.002 276.84 li
211.835 278.923 li
210.835 277.59 li
cp
ef
245.335 317.59 mo
213.419 278.84 li
210.835 277.59 mo
215.002 276.84 li
211.835 278.923 li
210.835 277.59 li
@
210.752 281.507 mo
212.335 277.59 li
213.419 278.84 li
210.752 281.507 li
cp
ef
210.752 281.507 mo
212.335 277.59 li
213.419 278.84 li
210.752 281.507 li
@
212.335 277.59 mo
216.502 276.757 li
213.419 278.84 li
212.335 277.59 li
cp
ef
248.502 317.59 mo
216.252 278.84 li
212.335 277.59 mo
216.502 276.757 li
213.419 278.84 li
212.335 277.59 li
@
213.502 281.507 mo
215.169 277.59 li
216.252 278.84 li
213.502 281.507 li
cp
ef
213.502 281.507 mo
215.169 277.59 li
216.252 278.84 li
213.502 281.507 li
@
215.169 277.59 mo
219.335 276.673 li
216.252 278.84 li
215.169 277.59 li
cp
ef
251.502 317.59 mo
219.669 278.84 li
215.169 277.59 mo
219.335 276.673 li
216.252 278.84 li
215.169 277.59 li
@
216.919 281.507 mo
218.585 277.59 li
219.669 278.84 li
216.919 281.507 li
cp
ef
216.919 281.507 mo
218.585 277.59 li
219.669 278.84 li
216.919 281.507 li
@
218.585 277.59 mo
222.752 276.757 li
219.669 278.84 li
218.585 277.59 li
cp
ef
254.335 317.59 mo
223.169 278.923 li
218.585 277.59 mo
222.752 276.757 li
219.669 278.84 li
218.585 277.59 li
@
220.419 281.507 mo
222.085 277.59 li
223.169 278.923 li
220.419 281.507 li
cp
ef
220.419 281.507 mo
222.085 277.59 li
223.169 278.923 li
220.419 281.507 li
@
222.085 277.59 mo
226.252 276.757 li
223.169 278.923 li
222.085 277.59 li
cp
ef
256.669 317.59 mo
225.085 278.84 li
222.085 277.59 mo
226.252 276.757 li
223.169 278.923 li
222.085 277.59 li
@
222.335 281.507 mo
224.002 277.59 li
225.085 278.84 li
222.335 281.507 li
cp
ef
222.335 281.507 mo
224.002 277.59 li
225.085 278.84 li
222.335 281.507 li
@
224.002 277.59 mo
228.169 276.757 li
225.085 278.84 li
224.002 277.59 li
cp
ef
259.169 317.59 mo
228.169 278.923 li
224.002 277.59 mo
228.169 276.757 li
225.085 278.84 li
224.002 277.59 li
@
225.419 281.423 mo
227.085 277.59 li
228.169 278.923 li
225.419 281.423 li
cp
ef
225.419 281.423 mo
227.085 277.59 li
228.169 278.923 li
225.419 281.423 li
@
227.085 277.59 mo
231.252 276.757 li
228.169 278.923 li
227.085 277.59 li
cp
ef
265.585 317.59 mo
234.919 278.923 li
227.085 277.59 mo
231.252 276.757 li
228.169 278.923 li
227.085 277.59 li
@
232.169 281.423 mo
233.919 277.59 li
234.919 278.923 li
232.169 281.423 li
cp
ef
232.169 281.423 mo
233.919 277.59 li
234.919 278.923 li
232.169 281.423 li
@
233.919 277.59 mo
238.085 276.84 li
234.919 278.923 li
233.919 277.59 li
cp
ef
269.169 317.59 mo
237.419 278.84 li
233.919 277.59 mo
238.085 276.84 li
234.919 278.923 li
233.919 277.59 li
@
234.752 281.507 mo
236.419 277.59 li
237.419 278.84 li
234.752 281.507 li
cp
ef
234.752 281.507 mo
236.419 277.59 li
237.419 278.84 li
234.752 281.507 li
@
236.419 277.59 mo
240.585 276.757 li
237.419 278.84 li
236.419 277.59 li
cp
ef
271.919 317.59 mo
239.919 278.84 li
236.419 277.59 mo
240.585 276.757 li
237.419 278.84 li
236.419 277.59 li
@
237.252 281.507 mo
238.835 277.59 li
239.919 278.84 li
237.252 281.507 li
cp
ef
237.252 281.507 mo
238.835 277.59 li
239.919 278.84 li
237.252 281.507 li
@
238.835 277.59 mo
243.002 276.757 li
239.919 278.84 li
238.835 277.59 li
cp
ef
275.335 317.59 mo
243.335 278.84 li
238.835 277.59 mo
243.002 276.757 li
239.919 278.84 li
238.835 277.59 li
@
240.669 281.507 mo
242.252 277.59 li
243.335 278.84 li
240.669 281.507 li
cp
ef
240.669 281.507 mo
242.252 277.59 li
243.335 278.84 li
240.669 281.507 li
@
242.252 277.59 mo
246.419 276.757 li
243.335 278.84 li
242.252 277.59 li
cp
ef
279.085 317.59 mo
249.835 278.923 li
242.252 277.59 mo
246.419 276.757 li
243.335 278.84 li
242.252 277.59 li
@
247.002 281.423 mo
248.752 277.59 li
249.835 278.923 li
247.002 281.423 li
cp
ef
247.002 281.423 mo
248.752 277.59 li
249.835 278.923 li
247.002 281.423 li
@
248.752 277.59 mo
253.002 276.923 li
249.835 278.923 li
248.752 277.59 li
cp
ef
282.585 317.59 mo
252.919 278.923 li
248.752 277.59 mo
253.002 276.923 li
249.835 278.923 li
248.752 277.59 li
@
250.169 281.423 mo
251.919 277.59 li
252.919 278.923 li
250.169 281.423 li
cp
ef
250.169 281.423 mo
251.919 277.59 li
252.919 278.923 li
250.169 281.423 li
@
251.919 277.59 mo
256.085 276.84 li
252.919 278.923 li
251.919 277.59 li
cp
ef
287.335 317.59 mo
255.419 278.84 li
251.919 277.59 mo
256.085 276.84 li
252.919 278.923 li
251.919 277.59 li
@
252.752 281.507 mo
254.335 277.59 li
255.419 278.84 li
252.752 281.507 li
cp
ef
252.752 281.507 mo
254.335 277.59 li
255.419 278.84 li
252.752 281.507 li
@
254.335 277.59 mo
258.502 276.757 li
255.419 278.84 li
254.335 277.59 li
cp
ef
290.169 317.59 mo
257.335 278.84 li
254.335 277.59 mo
258.502 276.757 li
255.419 278.84 li
254.335 277.59 li
@
254.669 281.507 mo
256.252 277.59 li
257.335 278.84 li
254.669 281.507 li
cp
ef
254.669 281.507 mo
256.252 277.59 li
257.335 278.84 li
254.669 281.507 li
@
256.252 277.59 mo
260.419 276.673 li
257.335 278.84 li
256.252 277.59 li
cp
ef
293.085 317.59 mo
262.252 278.923 li
256.252 277.59 mo
260.419 276.673 li
257.335 278.84 li
256.252 277.59 li
@
259.502 281.423 mo
261.169 277.59 li
262.252 278.923 li
259.502 281.423 li
cp
ef
259.502 281.423 mo
261.169 277.59 li
262.252 278.923 li
259.502 281.423 li
@
261.169 277.59 mo
265.419 276.757 li
262.252 278.923 li
261.169 277.59 li
cp
ef
296.585 317.59 mo
263.835 278.84 li
261.169 277.59 mo
265.419 276.757 li
262.252 278.923 li
261.169 277.59 li
@
261.169 281.507 mo
262.752 277.59 li
263.835 278.84 li
261.169 281.507 li
cp
ef
261.169 281.507 mo
262.752 277.59 li
263.835 278.84 li
261.169 281.507 li
@
262.752 277.59 mo
266.919 276.673 li
263.835 278.84 li
262.752 277.59 li
cp
ef
300.085 317.59 mo
267.585 278.84 li
262.752 277.59 mo
266.919 276.673 li
263.835 278.84 li
262.752 277.59 li
@
264.919 281.507 mo
266.502 277.59 li
267.585 278.84 li
264.919 281.507 li
cp
ef
264.919 281.507 mo
266.502 277.59 li
267.585 278.84 li
264.919 281.507 li
@
266.502 277.59 mo
270.669 276.673 li
267.585 278.84 li
266.502 277.59 li
cp
ef
303.002 317.59 mo
270.669 278.84 li
266.502 277.59 mo
270.669 276.673 li
267.585 278.84 li
266.502 277.59 li
@
268.002 281.507 mo
269.585 277.59 li
270.669 278.84 li
268.002 281.507 li
cp
ef
268.002 281.507 mo
269.585 277.59 li
270.669 278.84 li
268.002 281.507 li
@
269.585 277.59 mo
273.752 276.673 li
270.669 278.84 li
269.585 277.59 li
cp
ef
306.252 317.59 mo
273.169 278.84 li
269.585 277.59 mo
273.752 276.673 li
270.669 278.84 li
269.585 277.59 li
@
270.502 281.507 mo
272.085 277.59 li
273.169 278.84 li
270.502 281.507 li
cp
ef
270.502 281.507 mo
272.085 277.59 li
273.169 278.84 li
270.502 281.507 li
@
272.085 277.59 mo
276.252 276.673 li
273.169 278.84 li
272.085 277.59 li
cp
ef
308.835 317.59 mo
275.919 278.84 li
272.085 277.59 mo
276.252 276.673 li
273.169 278.84 li
272.085 277.59 li
@
273.252 281.507 mo
274.835 277.59 li
275.919 278.84 li
273.252 281.507 li
cp
ef
273.252 281.507 mo
274.835 277.59 li
275.919 278.84 li
273.252 281.507 li
@
274.835 277.59 mo
279.002 276.673 li
275.919 278.84 li
274.835 277.59 li
cp
ef
312.002 317.59 mo
278.419 278.84 li
274.835 277.59 mo
279.002 276.673 li
275.919 278.84 li
274.835 277.59 li
@
275.835 281.507 mo
277.335 277.59 li
278.419 278.84 li
275.835 281.507 li
cp
ef
275.835 281.507 mo
277.335 277.59 li
278.419 278.84 li
275.835 281.507 li
@
277.335 277.59 mo
281.502 276.59 li
278.419 278.84 li
277.335 277.59 li
cp
ef
315.419 317.59 mo
281.252 278.84 li
277.335 277.59 mo
281.502 276.59 li
278.419 278.84 li
277.335 277.59 li
@
278.669 281.507 mo
280.169 277.59 li
281.252 278.84 li
278.669 281.507 li
cp
ef
278.669 281.507 mo
280.169 277.59 li
281.252 278.84 li
278.669 281.507 li
@
280.169 277.59 mo
284.252 276.59 li
281.252 278.84 li
280.169 277.59 li
cp
ef
319.002 317.59 mo
283.752 278.84 li
280.169 277.59 mo
284.252 276.59 li
281.252 278.84 li
280.169 277.59 li
@
281.169 281.59 mo
282.585 277.59 li
283.752 278.84 li
281.169 281.59 li
cp
ef
281.169 281.59 mo
282.585 277.59 li
283.752 278.84 li
281.169 281.59 li
@
282.585 277.59 mo
286.752 276.507 li
283.752 278.84 li
282.585 277.59 li
cp
ef
322.085 317.59 mo
285.502 278.757 li
282.585 277.59 mo
286.752 276.507 li
283.752 278.84 li
282.585 277.59 li
@
283.002 281.59 mo
284.335 277.59 li
285.502 278.757 li
283.002 281.59 li
cp
ef
283.002 281.59 mo
284.335 277.59 li
285.502 278.757 li
283.002 281.59 li
@
284.335 277.59 mo
288.502 276.423 li
285.502 278.757 li
284.335 277.59 li
cp
ef
324.419 317.59 mo
288.085 278.84 li
284.335 277.59 mo
288.502 276.423 li
285.502 278.757 li
284.335 277.59 li
@
285.585 281.59 mo
286.919 277.59 li
288.085 278.84 li
285.585 281.59 li
cp
ef
285.585 281.59 mo
286.919 277.59 li
288.085 278.84 li
285.585 281.59 li
@
286.919 277.59 mo
291.085 276.423 li
288.085 278.84 li
286.919 277.59 li
cp
ef
326.669 317.59 mo
291.835 278.84 li
286.919 277.59 mo
291.085 276.423 li
288.085 278.84 li
286.919 277.59 li
@
289.252 281.59 mo
290.669 277.59 li
291.835 278.84 li
289.252 281.59 li
cp
ef
289.252 281.59 mo
290.669 277.59 li
291.835 278.84 li
289.252 281.59 li
@
290.669 277.59 mo
294.835 276.507 li
291.835 278.84 li
290.669 277.59 li
cp
ef
330.419 317.59 mo
294.002 278.84 li
290.669 277.59 mo
294.835 276.507 li
291.835 278.84 li
290.669 277.59 li
@
291.502 281.59 mo
292.835 277.59 li
294.002 278.84 li
291.502 281.59 li
cp
ef
291.502 281.59 mo
292.835 277.59 li
294.002 278.84 li
291.502 281.59 li
@
292.835 277.59 mo
296.919 276.423 li
294.002 278.84 li
292.835 277.59 li
cp
ef
333.835 317.59 mo
298.002 278.84 li
292.835 277.59 mo
296.919 276.423 li
294.002 278.84 li
292.835 277.59 li
@
295.502 281.59 mo
296.919 277.59 li
298.002 278.84 li
295.502 281.59 li
cp
ef
295.502 281.59 mo
296.919 277.59 li
298.002 278.84 li
295.502 281.59 li
@
296.919 277.59 mo
301.002 276.507 li
298.002 278.84 li
296.919 277.59 li
cp
ef
337.752 317.59 mo
299.919 278.757 li
296.919 277.59 mo
301.002 276.507 li
298.002 278.84 li
296.919 277.59 li
@
297.419 281.59 mo
298.752 277.59 li
299.919 278.757 li
297.419 281.59 li
cp
ef
297.419 281.59 mo
298.752 277.59 li
299.919 278.757 li
297.419 281.59 li
@
298.752 277.59 mo
302.835 276.34 li
299.919 278.757 li
298.752 277.59 li
cp
ef
340.919 317.59 mo
303.669 278.757 li
298.752 277.59 mo
302.835 276.34 li
299.919 278.757 li
298.752 277.59 li
@
301.169 281.59 mo
302.502 277.59 li
303.669 278.757 li
301.169 281.59 li
cp
ef
301.169 281.59 mo
302.502 277.59 li
303.669 278.757 li
301.169 281.59 li
@
302.502 277.59 mo
306.585 276.423 li
303.669 278.757 li
302.502 277.59 li
cp
ef
343.335 317.59 mo
307.335 278.84 li
302.502 277.59 mo
306.585 276.423 li
303.669 278.757 li
302.502 277.59 li
@
304.835 281.59 mo
306.169 277.59 li
307.335 278.84 li
304.835 281.59 li
cp
ef
304.835 281.59 mo
306.169 277.59 li
307.335 278.84 li
304.835 281.59 li
@
306.169 277.59 mo
310.335 276.507 li
307.335 278.84 li
306.169 277.59 li
cp
ef
346.252 317.59 mo
311.335 278.84 li
306.169 277.59 mo
310.335 276.507 li
307.335 278.84 li
306.169 277.59 li
@
308.752 281.59 mo
310.252 277.59 li
311.335 278.84 li
308.752 281.59 li
cp
ef
308.752 281.59 mo
310.252 277.59 li
311.335 278.84 li
308.752 281.59 li
@
310.252 277.59 mo
314.335 276.507 li
311.335 278.84 li
310.252 277.59 li
cp
ef
351.669 317.59 mo
317.835 278.84 li
310.252 277.59 mo
314.335 276.507 li
311.335 278.84 li
310.252 277.59 li
@
315.252 281.507 mo
316.752 277.59 li
317.835 278.84 li
315.252 281.507 li
cp
ef
315.252 281.507 mo
316.752 277.59 li
317.835 278.84 li
315.252 281.507 li
@
316.752 277.59 mo
320.919 276.59 li
317.835 278.84 li
316.752 277.59 li
cp
ef
356.419 317.59 mo
319.502 278.757 li
316.752 277.59 mo
320.919 276.59 li
317.835 278.84 li
316.752 277.59 li
@
317.002 281.59 mo
318.335 277.59 li
319.502 278.757 li
317.002 281.59 li
cp
ef
317.002 281.59 mo
318.335 277.59 li
319.502 278.757 li
317.002 281.59 li
@
318.335 277.59 mo
322.419 276.423 li
319.502 278.757 li
318.335 277.59 li
cp
ef
358.835 317.59 mo
322.585 278.84 li
318.335 277.59 mo
322.419 276.423 li
319.502 278.757 li
318.335 277.59 li
@
320.002 281.59 mo
321.419 277.59 li
322.585 278.84 li
320.002 281.59 li
cp
ef
320.002 281.59 mo
321.419 277.59 li
322.585 278.84 li
320.002 281.59 li
@
321.419 277.59 mo
325.502 276.423 li
322.585 278.84 li
321.419 277.59 li
cp
ef
362.336 317.59 mo
326.252 278.84 li
321.419 277.59 mo
325.502 276.423 li
322.585 278.84 li
321.419 277.59 li
@
323.752 281.59 mo
325.085 277.59 li
326.252 278.84 li
323.752 281.59 li
cp
ef
323.752 281.59 mo
325.085 277.59 li
326.252 278.84 li
323.752 281.59 li
@
325.085 277.59 mo
329.252 276.507 li
326.252 278.84 li
325.085 277.59 li
cp
ef
365.668 317.59 mo
328.752 278.757 li
325.085 277.59 mo
329.252 276.507 li
326.252 278.84 li
325.085 277.59 li
@
326.252 281.59 mo
327.585 277.59 li
328.752 278.757 li
326.252 281.59 li
cp
ef
326.252 281.59 mo
327.585 277.59 li
328.752 278.757 li
326.252 281.59 li
@
327.585 277.59 mo
331.669 276.423 li
328.752 278.757 li
327.585 277.59 li
cp
ef
369.086 317.59 mo
331.919 278.757 li
327.585 277.59 mo
331.669 276.423 li
328.752 278.757 li
327.585 277.59 li
@
329.419 281.59 mo
330.669 277.59 li
331.919 278.757 li
329.419 281.59 li
cp
ef
329.419 281.59 mo
330.669 277.59 li
331.919 278.757 li
329.419 281.59 li
@
330.669 277.59 mo
334.835 276.423 li
331.919 278.757 li
330.669 277.59 li
cp
ef
371.668 317.59 mo
333.752 278.757 li
330.669 277.59 mo
334.835 276.423 li
331.919 278.757 li
330.669 277.59 li
@
331.252 281.59 mo
332.585 277.59 li
333.752 278.757 li
331.252 281.59 li
cp
ef
331.252 281.59 mo
332.585 277.59 li
333.752 278.757 li
331.252 281.59 li
@
332.585 277.59 mo
336.669 276.34 li
333.752 278.757 li
332.585 277.59 li
cp
ef
375.418 317.59 mo
336.252 278.757 li
332.585 277.59 mo
336.669 276.34 li
333.752 278.757 li
332.585 277.59 li
@
333.835 281.59 mo
335.085 277.59 li
336.252 278.757 li
333.835 281.59 li
cp
ef
333.835 281.59 mo
335.085 277.59 li
336.252 278.757 li
333.835 281.59 li
@
335.085 277.59 mo
339.085 276.34 li
336.252 278.757 li
335.085 277.59 li
cp
ef
379.418 317.59 mo
341.502 278.757 li
335.085 277.59 mo
339.085 276.34 li
336.252 278.757 li
335.085 277.59 li
@
339.002 281.59 mo
340.335 277.59 li
341.502 278.757 li
339.002 281.59 li
cp
ef
339.002 281.59 mo
340.335 277.59 li
341.502 278.757 li
339.002 281.59 li
@
340.335 277.59 mo
344.419 276.34 li
341.502 278.757 li
340.335 277.59 li
cp
ef
383.168 317.59 mo
344.335 278.757 li
340.335 277.59 mo
344.419 276.34 li
341.502 278.757 li
340.335 277.59 li
@
341.835 281.59 mo
343.085 277.59 li
344.335 278.757 li
341.835 281.59 li
cp
ef
341.835 281.59 mo
343.085 277.59 li
344.335 278.757 li
341.835 281.59 li
@
343.085 277.59 mo
347.169 276.34 li
344.335 278.757 li
343.085 277.59 li
cp
ef
386.668 317.59 mo
346.502 278.757 li
343.085 277.59 mo
347.169 276.34 li
344.335 278.757 li
343.085 277.59 li
@
344.085 281.673 mo
345.252 277.59 li
346.502 278.757 li
344.085 281.673 li
cp
ef
344.085 281.673 mo
345.252 277.59 li
346.502 278.757 li
344.085 281.673 li
@
345.252 277.59 mo
349.335 276.257 li
346.502 278.757 li
345.252 277.59 li
cp
ef
389.752 317.59 mo
349.252 278.757 li
345.252 277.59 mo
349.335 276.257 li
346.502 278.757 li
345.252 277.59 li
@
346.919 281.673 mo
348.085 277.59 li
349.252 278.757 li
346.919 281.673 li
cp
ef
346.919 281.673 mo
348.085 277.59 li
349.252 278.757 li
346.919 281.673 li
@
348.085 277.59 mo
352.085 276.257 li
349.252 278.757 li
348.085 277.59 li
cp
ef
392.418 317.59 mo
351.752 278.757 li
348.085 277.59 mo
352.085 276.257 li
349.252 278.757 li
348.085 277.59 li
@
349.419 281.673 mo
350.585 277.59 li
351.752 278.757 li
349.419 281.673 li
cp
ef
349.419 281.673 mo
350.585 277.59 li
351.752 278.757 li
349.419 281.673 li
@
350.585 277.59 mo
354.585 276.257 li
351.752 278.757 li
350.585 277.59 li
cp
ef
395.252 317.59 mo
354.252 278.757 li
350.585 277.59 mo
354.585 276.257 li
351.752 278.757 li
350.585 277.59 li
@
351.919 281.673 mo
353.002 277.59 li
354.252 278.757 li
351.919 281.673 li
cp
ef
351.919 281.673 mo
353.002 277.59 li
354.252 278.757 li
351.919 281.673 li
@
353.002 277.59 mo
357.085 276.257 li
354.252 278.757 li
353.002 277.59 li
cp
ef
398.502 317.59 mo
357.669 278.757 li
353.002 277.59 mo
357.085 276.257 li
354.252 278.757 li
353.002 277.59 li
@
355.335 281.673 mo
356.419 277.59 li
357.669 278.757 li
355.335 281.673 li
cp
ef
355.335 281.673 mo
356.419 277.59 li
357.669 278.757 li
355.335 281.673 li
@
356.419 277.59 mo
360.502 276.257 li
357.669 278.757 li
356.419 277.59 li
cp
ef
401.668 317.59 mo
360.752 278.757 li
356.419 277.59 mo
360.502 276.257 li
357.669 278.757 li
356.419 277.59 li
@
358.419 281.673 mo
359.502 277.59 li
360.752 278.757 li
358.419 281.673 li
cp
ef
358.419 281.673 mo
359.502 277.59 li
360.752 278.757 li
358.419 281.673 li
@
359.502 277.59 mo
363.586 276.257 li
360.752 278.757 li
359.502 277.59 li
cp
ef
404.836 317.59 mo
364.502 278.757 li
359.502 277.59 mo
363.586 276.257 li
360.752 278.757 li
359.502 277.59 li
@
362.086 281.673 mo
363.252 277.59 li
364.502 278.757 li
362.086 281.673 li
cp
ef
362.086 281.673 mo
363.252 277.59 li
364.502 278.757 li
362.086 281.673 li
@
363.252 277.59 mo
367.336 276.257 li
364.502 278.757 li
363.252 277.59 li
cp
ef
407.168 317.59 mo
367.918 278.757 li
363.252 277.59 mo
367.336 276.257 li
364.502 278.757 li
363.252 277.59 li
@
365.502 281.673 mo
366.668 277.59 li
367.918 278.757 li
365.502 281.673 li
cp
ef
365.502 281.673 mo
366.668 277.59 li
367.918 278.757 li
365.502 281.673 li
@
366.668 277.59 mo
370.752 276.34 li
367.918 278.757 li
366.668 277.59 li
cp
ef
409.502 317.59 mo
371.918 278.757 li
366.668 277.59 mo
370.752 276.34 li
367.918 278.757 li
366.668 277.59 li
@
369.418 281.59 mo
370.752 277.59 li
371.918 278.757 li
369.418 281.59 li
cp
ef
369.418 281.59 mo
370.752 277.59 li
371.918 278.757 li
369.418 281.59 li
@
370.752 277.59 mo
374.836 276.423 li
371.918 278.757 li
370.752 277.59 li
cp
ef
412.586 317.59 mo
373.502 278.757 li
370.752 277.59 mo
374.836 276.423 li
371.918 278.757 li
370.752 277.59 li
@
371.002 281.59 mo
372.252 277.59 li
373.502 278.757 li
371.002 281.59 li
cp
ef
371.002 281.59 mo
372.252 277.59 li
373.502 278.757 li
371.002 281.59 li
@
372.252 277.59 mo
376.336 276.34 li
373.502 278.757 li
372.252 277.59 li
cp
ef
415.418 317.59 mo
375.918 278.757 li
372.252 277.59 mo
376.336 276.34 li
373.502 278.757 li
372.252 277.59 li
@
373.502 281.673 mo
374.752 277.59 li
375.918 278.757 li
373.502 281.673 li
cp
ef
373.502 281.673 mo
374.752 277.59 li
375.918 278.757 li
373.502 281.673 li
@
374.752 277.59 mo
378.836 276.257 li
375.918 278.757 li
374.752 277.59 li
cp
ef
418.336 317.59 mo
378.418 278.757 li
374.752 277.59 mo
378.836 276.257 li
375.918 278.757 li
374.752 277.59 li
@
376.086 281.673 mo
377.252 277.59 li
378.418 278.757 li
376.086 281.673 li
cp
ef
376.086 281.673 mo
377.252 277.59 li
378.418 278.757 li
376.086 281.673 li
@
377.252 277.59 mo
381.252 276.257 li
378.418 278.757 li
377.252 277.59 li
cp
ef
420.502 317.59 mo
381.252 278.757 li
377.252 277.59 mo
381.252 276.257 li
378.418 278.757 li
377.252 277.59 li
@
378.836 281.673 mo
380.002 277.59 li
381.252 278.757 li
378.836 281.673 li
cp
ef
378.836 281.673 mo
380.002 277.59 li
381.252 278.757 li
378.836 281.673 li
@
380.002 277.59 mo
384.086 276.34 li
381.252 278.757 li
380.002 277.59 li
cp
ef
422.668 317.59 mo
384.336 278.757 li
380.002 277.59 mo
384.086 276.34 li
381.252 278.757 li
380.002 277.59 li
@
381.836 281.59 mo
383.086 277.59 li
384.336 278.757 li
381.836 281.59 li
cp
ef
381.836 281.59 mo
383.086 277.59 li
384.336 278.757 li
381.836 281.59 li
@
383.086 277.59 mo
387.168 276.34 li
384.336 278.757 li
383.086 277.59 li
cp
ef
426.086 317.59 mo
388.002 278.757 li
383.086 277.59 mo
387.168 276.34 li
384.336 278.757 li
383.086 277.59 li
@
385.586 281.59 mo
386.836 277.59 li
388.002 278.757 li
385.586 281.59 li
cp
ef
385.586 281.59 mo
386.836 277.59 li
388.002 278.757 li
385.586 281.59 li
@
386.836 277.59 mo
390.918 276.34 li
388.002 278.757 li
386.836 277.59 li
cp
ef
428.336 317.59 mo
390.502 278.757 li
386.836 277.59 mo
390.918 276.34 li
388.002 278.757 li
386.836 277.59 li
@
388.002 281.59 mo
389.336 277.59 li
390.502 278.757 li
388.002 281.59 li
cp
ef
388.002 281.59 mo
389.336 277.59 li
390.502 278.757 li
388.002 281.59 li
@
389.336 277.59 mo
393.418 276.34 li
390.502 278.757 li
389.336 277.59 li
cp
ef
432.586 317.59 mo
393.918 278.757 li
389.336 277.59 mo
393.418 276.34 li
390.502 278.757 li
389.336 277.59 li
@
391.502 281.59 mo
392.752 277.59 li
393.918 278.757 li
391.502 281.59 li
cp
ef
391.502 281.59 mo
392.752 277.59 li
393.918 278.757 li
391.502 281.59 li
@
392.752 277.59 mo
396.836 276.34 li
393.918 278.757 li
392.752 277.59 li
cp
ef
435.336 317.59 mo
396.418 278.757 li
392.752 277.59 mo
396.836 276.34 li
393.918 278.757 li
392.752 277.59 li
@
394.002 281.59 mo
395.252 277.59 li
396.418 278.757 li
394.002 281.59 li
cp
ef
394.002 281.59 mo
395.252 277.59 li
396.418 278.757 li
394.002 281.59 li
@
395.252 277.59 mo
399.252 276.34 li
396.418 278.757 li
395.252 277.59 li
cp
ef
439.252 317.59 mo
399.502 278.757 li
395.252 277.59 mo
399.252 276.34 li
396.418 278.757 li
395.252 277.59 li
@
397.168 281.673 mo
398.336 277.59 li
399.502 278.757 li
397.168 281.673 li
cp
ef
397.168 281.673 mo
398.336 277.59 li
399.502 278.757 li
397.168 281.673 li
@
398.336 277.59 mo
402.418 276.257 li
399.502 278.757 li
398.336 277.59 li
cp
ef
442.918 317.59 mo
402.668 278.757 li
398.336 277.59 mo
402.418 276.257 li
399.502 278.757 li
398.336 277.59 li
@
400.252 281.673 mo
401.418 277.59 li
402.668 278.757 li
400.252 281.673 li
cp
ef
400.252 281.673 mo
401.418 277.59 li
402.668 278.757 li
400.252 281.673 li
@
401.418 277.59 mo
405.502 276.257 li
402.668 278.757 li
401.418 277.59 li
cp
ef
445.586 317.59 mo
405.752 278.757 li
401.418 277.59 mo
405.502 276.257 li
402.668 278.757 li
401.418 277.59 li
@
403.336 281.673 mo
404.502 277.59 li
405.752 278.757 li
403.336 281.673 li
cp
ef
403.336 281.673 mo
404.502 277.59 li
405.752 278.757 li
403.336 281.673 li
@
404.502 277.59 mo
408.586 276.257 li
405.752 278.757 li
404.502 277.59 li
cp
ef
448.668 317.59 mo
408.586 278.757 li
404.502 277.59 mo
408.586 276.257 li
405.752 278.757 li
404.502 277.59 li
@
406.168 281.673 mo
407.336 277.59 li
408.586 278.757 li
406.168 281.673 li
cp
ef
406.168 281.673 mo
407.336 277.59 li
408.586 278.757 li
406.168 281.673 li
@
407.336 277.59 mo
411.336 276.257 li
408.586 278.757 li
407.336 277.59 li
cp
ef
451.502 317.59 mo
411.668 278.757 li
407.336 277.59 mo
411.336 276.257 li
408.586 278.757 li
407.336 277.59 li
@
409.252 281.673 mo
410.418 277.59 li
411.668 278.757 li
409.252 281.673 li
cp
ef
409.252 281.673 mo
410.418 277.59 li
411.668 278.757 li
409.252 281.673 li
@
410.418 277.59 mo
414.502 276.257 li
411.668 278.757 li
410.418 277.59 li
cp
ef
454.502 317.59 mo
414.168 278.757 li
410.418 277.59 mo
414.502 276.257 li
411.668 278.757 li
410.418 277.59 li
@
411.752 281.673 mo
412.918 277.59 li
414.168 278.757 li
411.752 281.673 li
cp
ef
411.752 281.673 mo
412.918 277.59 li
414.168 278.757 li
411.752 281.673 li
@
412.918 277.59 mo
416.918 276.257 li
414.168 278.757 li
412.918 277.59 li
cp
ef
457.086 317.59 mo
417.502 278.757 li
412.918 277.59 mo
416.918 276.257 li
414.168 278.757 li
412.918 277.59 li
@
415.086 281.673 mo
416.336 277.59 li
417.502 278.757 li
415.086 281.673 li
cp
ef
415.086 281.673 mo
416.336 277.59 li
417.502 278.757 li
415.086 281.673 li
@
416.336 277.59 mo
420.418 276.257 li
417.502 278.757 li
416.336 277.59 li
cp
ef
460.002 317.59 mo
420.336 278.757 li
416.336 277.59 mo
420.418 276.257 li
417.502 278.757 li
416.336 277.59 li
@
417.918 281.673 mo
419.086 277.59 li
420.336 278.757 li
417.918 281.673 li
cp
ef
417.918 281.673 mo
419.086 277.59 li
420.336 278.757 li
417.918 281.673 li
@
419.086 277.59 mo
423.168 276.257 li
420.336 278.757 li
419.086 277.59 li
cp
ef
463.252 317.59 mo
424.086 278.757 li
419.086 277.59 mo
423.168 276.257 li
420.336 278.757 li
419.086 277.59 li
@
421.586 281.59 mo
422.836 277.59 li
424.086 278.757 li
421.586 281.59 li
cp
ef
421.586 281.59 mo
422.836 277.59 li
424.086 278.757 li
421.586 281.59 li
@
422.836 277.59 mo
426.918 276.34 li
424.086 278.757 li
422.836 277.59 li
cp
ef
466.586 317.59 mo
426.836 278.757 li
422.836 277.59 mo
426.918 276.34 li
424.086 278.757 li
422.836 277.59 li
@
424.418 281.673 mo
425.668 277.59 li
426.836 278.757 li
424.418 281.673 li
cp
ef
424.418 281.673 mo
425.668 277.59 li
426.836 278.757 li
424.418 281.673 li
@
425.668 277.59 mo
429.668 276.257 li
426.836 278.757 li
425.668 277.59 li
cp
ef
470.086 317.59 mo
429.668 278.757 li
425.668 277.59 mo
429.668 276.257 li
426.836 278.757 li
425.668 277.59 li
@
427.252 281.673 mo
428.418 277.59 li
429.668 278.757 li
427.252 281.673 li
cp
ef
427.252 281.673 mo
428.418 277.59 li
429.668 278.757 li
427.252 281.673 li
@
428.418 277.59 mo
432.502 276.257 li
429.668 278.757 li
428.418 277.59 li
cp
ef
472.502 317.59 mo
432.752 278.757 li
428.418 277.59 mo
432.502 276.257 li
429.668 278.757 li
428.418 277.59 li
@
430.336 281.673 mo
431.502 277.59 li
432.752 278.757 li
430.336 281.673 li
cp
ef
430.336 281.673 mo
431.502 277.59 li
432.752 278.757 li
430.336 281.673 li
@
431.502 277.59 mo
435.586 276.257 li
432.752 278.757 li
431.502 277.59 li
cp
ef
475.836 317.59 mo
434.586 278.757 li
431.502 277.59 mo
435.586 276.257 li
432.752 278.757 li
431.502 277.59 li
@
432.252 281.673 mo
433.418 277.59 li
434.586 278.757 li
432.252 281.673 li
cp
ef
432.252 281.673 mo
433.418 277.59 li
434.586 278.757 li
432.252 281.673 li
@
433.418 277.59 mo
437.418 276.173 li
434.586 278.757 li
433.418 277.59 li
cp
ef
479.668 317.59 mo
437.418 278.673 li
433.418 277.59 mo
437.418 276.173 li
434.586 278.757 li
433.418 277.59 li
@
435.086 281.673 mo
436.168 277.59 li
437.418 278.673 li
435.086 281.673 li
cp
ef
435.086 281.673 mo
436.168 277.59 li
437.418 278.673 li
435.086 281.673 li
@
436.168 277.59 mo
440.168 276.173 li
437.418 278.673 li
436.168 277.59 li
cp
ef
483.168 317.59 mo
441.168 278.673 li
436.168 277.59 mo
440.168 276.173 li
437.418 278.673 li
436.168 277.59 li
@
438.836 281.673 mo
439.918 277.59 li
441.168 278.673 li
438.836 281.673 li
cp
ef
438.836 281.673 mo
439.918 277.59 li
441.168 278.673 li
438.836 281.673 li
@
439.918 277.59 mo
443.918 276.173 li
441.168 278.673 li
439.918 277.59 li
cp
ef
486.002 317.59 mo
444.086 278.757 li
439.918 277.59 mo
443.918 276.173 li
441.168 278.673 li
439.918 277.59 li
@
441.752 281.673 mo
442.836 277.59 li
444.086 278.757 li
441.752 281.673 li
cp
ef
441.752 281.673 mo
442.836 277.59 li
444.086 278.757 li
441.752 281.673 li
@
442.836 277.59 mo
446.836 276.173 li
444.086 278.757 li
442.836 277.59 li
cp
ef
488.502 317.59 mo
446.586 278.757 li
442.836 277.59 mo
446.836 276.173 li
444.086 278.757 li
442.836 277.59 li
@
444.252 281.673 mo
445.336 277.59 li
446.586 278.757 li
444.252 281.673 li
cp
ef
444.252 281.673 mo
445.336 277.59 li
446.586 278.757 li
444.252 281.673 li
@
445.336 277.59 mo
449.336 276.173 li
446.586 278.757 li
445.336 277.59 li
cp
ef
491.502 317.59 mo
449.668 278.757 li
445.336 277.59 mo
449.336 276.173 li
446.586 278.757 li
445.336 277.59 li
@
447.336 281.673 mo
448.418 277.59 li
449.668 278.757 li
447.336 281.673 li
cp
ef
447.336 281.673 mo
448.418 277.59 li
449.668 278.757 li
447.336 281.673 li
@
448.418 277.59 mo
452.418 276.173 li
449.668 278.757 li
448.418 277.59 li
cp
ef
494.668 317.59 mo
451.836 278.673 li
448.418 277.59 mo
452.418 276.173 li
449.668 278.757 li
448.418 277.59 li
@
449.502 281.673 mo
450.586 277.59 li
451.836 278.673 li
449.502 281.673 li
cp
ef
449.502 281.673 mo
450.586 277.59 li
451.836 278.673 li
449.502 281.673 li
@
450.586 277.59 mo
454.586 276.09 li
451.836 278.673 li
450.586 277.59 li
cp
ef
497.918 317.59 mo
455.252 278.673 li
450.586 277.59 mo
454.586 276.09 li
451.836 278.673 li
450.586 277.59 li
@
452.918 281.673 mo
454.002 277.59 li
455.252 278.673 li
452.918 281.673 li
cp
ef
452.918 281.673 mo
454.002 277.59 li
455.252 278.673 li
452.918 281.673 li
@
454.002 277.59 mo
458.002 276.173 li
455.252 278.673 li
454.002 277.59 li
cp
ef
501.418 317.59 mo
459.002 278.673 li
454.002 277.59 mo
458.002 276.173 li
455.252 278.673 li
454.002 277.59 li
@
456.668 281.673 mo
457.752 277.59 li
459.002 278.673 li
456.668 281.673 li
cp
ef
456.668 281.673 mo
457.752 277.59 li
459.002 278.673 li
456.668 281.673 li
@
457.752 277.59 mo
461.752 276.173 li
459.002 278.673 li
457.752 277.59 li
cp
ef
504.418 317.59 mo
462.086 278.673 li
457.752 277.59 mo
461.752 276.173 li
459.002 278.673 li
457.752 277.59 li
@
459.752 281.673 mo
460.836 277.59 li
462.086 278.673 li
459.752 281.673 li
cp
ef
459.752 281.673 mo
460.836 277.59 li
462.086 278.673 li
459.752 281.673 li
@
460.836 277.59 mo
464.836 276.173 li
462.086 278.673 li
460.836 277.59 li
cp
ef
507.586 317.59 mo
464.836 278.673 li
460.836 277.59 mo
464.836 276.173 li
462.086 278.673 li
460.836 277.59 li
@
462.586 281.673 mo
463.586 277.59 li
464.836 278.673 li
462.586 281.673 li
cp
ef
462.586 281.673 mo
463.586 277.59 li
464.836 278.673 li
462.586 281.673 li
@
463.586 277.59 mo
467.586 276.173 li
464.836 278.673 li
463.586 277.59 li
cp
ef
510.168 317.59 mo
467.668 278.673 li
463.586 277.59 mo
467.586 276.173 li
464.836 278.673 li
463.586 277.59 li
@
465.336 281.673 mo
466.418 277.59 li
467.668 278.673 li
465.336 281.673 li
cp
ef
465.336 281.673 mo
466.418 277.59 li
467.668 278.673 li
465.336 281.673 li
@
466.418 277.59 mo
470.418 276.173 li
467.668 278.673 li
466.418 277.59 li
cp
ef
513.002 317.59 mo
470.168 278.673 li
466.418 277.59 mo
470.418 276.173 li
467.668 278.673 li
466.418 277.59 li
@
467.836 281.673 mo
468.918 277.59 li
470.168 278.673 li
467.836 281.673 li
cp
ef
467.836 281.673 mo
468.918 277.59 li
470.168 278.673 li
467.836 281.673 li
@
468.918 277.59 mo
472.918 276.09 li
470.168 278.673 li
468.918 277.59 li
cp
ef
516.252 317.59 mo
474.168 278.673 li
468.918 277.59 mo
472.918 276.09 li
470.168 278.673 li
468.918 277.59 li
@
471.836 281.673 mo
472.918 277.59 li
474.168 278.673 li
471.836 281.673 li
cp
ef
471.836 281.673 mo
472.918 277.59 li
474.168 278.673 li
471.836 281.673 li
@
472.918 277.59 mo
476.918 276.173 li
474.168 278.673 li
472.918 277.59 li
cp
ef
520.002 317.59 mo
480.002 278.757 li
472.918 277.59 mo
476.918 276.173 li
474.168 278.673 li
472.918 277.59 li
@
477.668 281.673 mo
478.836 277.59 li
480.002 278.757 li
477.668 281.673 li
cp
ef
477.668 281.673 mo
478.836 277.59 li
480.002 278.757 li
477.668 281.673 li
@
478.836 277.59 mo
482.836 276.257 li
480.002 278.757 li
478.836 277.59 li
cp
ef
522.752 317.59 mo
482.836 278.757 li
478.836 277.59 mo
482.836 276.257 li
480.002 278.757 li
478.836 277.59 li
@
480.418 281.673 mo
481.586 277.59 li
482.836 278.757 li
480.418 281.673 li
cp
ef
480.418 281.673 mo
481.586 277.59 li
482.836 278.757 li
480.418 281.673 li
@
481.586 277.59 mo
485.668 276.257 li
482.836 278.757 li
481.586 277.59 li
cp
ef
525.918 317.59 mo
485.918 278.757 li
481.586 277.59 mo
485.668 276.257 li
482.836 278.757 li
481.586 277.59 li
@
483.502 281.673 mo
484.668 277.59 li
485.918 278.757 li
483.502 281.673 li
cp
ef
483.502 281.673 mo
484.668 277.59 li
485.918 278.757 li
483.502 281.673 li
@
484.668 277.59 mo
488.752 276.257 li
485.918 278.757 li
484.668 277.59 li
cp
ef
528.502 317.59 mo
488.752 278.757 li
484.668 277.59 mo
488.752 276.257 li
485.918 278.757 li
484.668 277.59 li
@
486.336 281.673 mo
487.502 277.59 li
488.752 278.757 li
486.336 281.673 li
cp
ef
486.336 281.673 mo
487.502 277.59 li
488.752 278.757 li
486.336 281.673 li
@
487.502 277.59 mo
491.586 276.257 li
488.752 278.757 li
487.502 277.59 li
cp
ef
531.752 317.59 mo
492.168 278.757 li
487.502 277.59 mo
491.586 276.257 li
488.752 278.757 li
487.502 277.59 li
@
489.752 281.673 mo
490.918 277.59 li
492.168 278.757 li
489.752 281.673 li
cp
ef
489.752 281.673 mo
490.918 277.59 li
492.168 278.757 li
489.752 281.673 li
@
490.918 277.59 mo
495.002 276.257 li
492.168 278.757 li
490.918 277.59 li
cp
ef
535.418 317.59 mo
494.918 278.757 li
490.918 277.59 mo
495.002 276.257 li
492.168 278.757 li
490.918 277.59 li
@
492.586 281.673 mo
493.668 277.59 li
494.918 278.757 li
492.586 281.673 li
cp
ef
492.586 281.673 mo
493.668 277.59 li
494.918 278.757 li
492.586 281.673 li
@
493.668 277.59 mo
497.752 276.257 li
494.918 278.757 li
493.668 277.59 li
cp
ef
538.836 317.59 mo
498.086 278.757 li
493.668 277.59 mo
497.752 276.257 li
494.918 278.757 li
493.668 277.59 li
@
495.752 281.673 mo
496.918 277.59 li
498.086 278.757 li
495.752 281.673 li
cp
ef
495.752 281.673 mo
496.918 277.59 li
498.086 278.757 li
495.752 281.673 li
@
496.918 277.59 mo
500.918 276.257 li
498.086 278.757 li
496.918 277.59 li
cp
ef
541.752 317.59 mo
501.252 278.757 li
496.918 277.59 mo
500.918 276.257 li
498.086 278.757 li
496.918 277.59 li
@
498.836 281.673 mo
500.002 277.59 li
501.252 278.757 li
498.836 281.673 li
cp
ef
498.836 281.673 mo
500.002 277.59 li
501.252 278.757 li
498.836 281.673 li
@
500.002 277.59 mo
504.002 276.257 li
501.252 278.757 li
500.002 277.59 li
cp
ef
544.836 317.59 mo
503.418 278.757 li
500.002 277.59 mo
504.002 276.257 li
501.252 278.757 li
500.002 277.59 li
@
501.086 281.673 mo
502.168 277.59 li
503.418 278.757 li
501.086 281.673 li
cp
ef
501.086 281.673 mo
502.168 277.59 li
503.418 278.757 li
501.086 281.673 li
@
502.168 277.59 mo
506.168 276.173 li
503.418 278.757 li
502.168 277.59 li
cp
ef
547.502 317.59 mo
505.586 278.757 li
502.168 277.59 mo
506.168 276.173 li
503.418 278.757 li
502.168 277.59 li
@
503.252 281.673 mo
504.336 277.59 li
505.586 278.757 li
503.252 281.673 li
cp
ef
503.252 281.673 mo
504.336 277.59 li
505.586 278.757 li
503.252 281.673 li
@
504.336 277.59 mo
508.336 276.173 li
505.586 278.757 li
504.336 277.59 li
cp
ef
550.336 317.59 mo
508.668 278.757 li
504.336 277.59 mo
508.336 276.173 li
505.586 278.757 li
504.336 277.59 li
@
506.336 281.673 mo
507.418 277.59 li
508.668 278.757 li
506.336 281.673 li
cp
ef
506.336 281.673 mo
507.418 277.59 li
508.668 278.757 li
506.336 281.673 li
@
507.418 277.59 mo
511.418 276.173 li
508.668 278.757 li
507.418 277.59 li
cp
ef
554.336 317.59 mo
514.586 278.757 li
507.418 277.59 mo
511.418 276.173 li
508.668 278.757 li
507.418 277.59 li
@
512.168 281.673 mo
513.336 277.59 li
514.586 278.757 li
512.168 281.673 li
cp
ef
512.168 281.673 mo
513.336 277.59 li
514.586 278.757 li
512.168 281.673 li
@
513.336 277.59 mo
517.418 276.257 li
514.586 278.757 li
513.336 277.59 li
cp
ef
557.668 317.59 mo
516.752 278.757 li
513.336 277.59 mo
517.418 276.257 li
514.586 278.757 li
513.336 277.59 li
@
514.336 281.673 mo
515.502 277.59 li
516.752 278.757 li
514.336 281.673 li
cp
ef
514.336 281.673 mo
515.502 277.59 li
516.752 278.757 li
514.336 281.673 li
@
515.502 277.59 mo
519.502 276.257 li
516.752 278.757 li
515.502 277.59 li
cp
ef
561.002 317.59 mo
519.836 278.757 li
515.502 277.59 mo
519.502 276.257 li
516.752 278.757 li
515.502 277.59 li
@
517.502 281.673 mo
518.586 277.59 li
519.836 278.757 li
517.502 281.673 li
cp
ef
517.502 281.673 mo
518.586 277.59 li
519.836 278.757 li
517.502 281.673 li
@
518.586 277.59 mo
522.668 276.173 li
519.836 278.757 li
518.586 277.59 li
cp
ef
563.752 317.59 mo
522.336 278.757 li
518.586 277.59 mo
522.668 276.173 li
519.836 278.757 li
518.586 277.59 li
@
520.002 281.673 mo
521.086 277.59 li
522.336 278.757 li
520.002 281.673 li
cp
ef
520.002 281.673 mo
521.086 277.59 li
522.336 278.757 li
520.002 281.673 li
@
521.086 277.59 mo
525.086 276.173 li
522.336 278.757 li
521.086 277.59 li
cp
ef
566.086 317.59 mo
526.336 278.757 li
521.086 277.59 mo
525.086 276.173 li
522.336 278.757 li
521.086 277.59 li
@
523.918 281.673 mo
525.086 277.59 li
526.336 278.757 li
523.918 281.673 li
cp
ef
523.918 281.673 mo
525.086 277.59 li
526.336 278.757 li
523.918 281.673 li
@
525.086 277.59 mo
529.168 276.257 li
526.336 278.757 li
525.086 277.59 li
cp
ef
569.752 317.59 mo
528.502 278.757 li
525.086 277.59 mo
529.168 276.257 li
526.336 278.757 li
525.086 277.59 li
@
526.168 281.673 mo
527.336 277.59 li
528.502 278.757 li
526.168 281.673 li
cp
ef
526.168 281.673 mo
527.336 277.59 li
528.502 278.757 li
526.168 281.673 li
@
527.336 277.59 mo
531.336 276.173 li
528.502 278.757 li
527.336 277.59 li
cp
ef
573.168 317.59 mo
531.336 278.757 li
527.336 277.59 mo
531.336 276.173 li
528.502 278.757 li
527.336 277.59 li
@
529.002 281.673 mo
530.086 277.59 li
531.336 278.757 li
529.002 281.673 li
cp
ef
529.002 281.673 mo
530.086 277.59 li
531.336 278.757 li
529.002 281.673 li
@
530.086 277.59 mo
534.086 276.173 li
531.336 278.757 li
530.086 277.59 li
cp
ef
576.002 317.59 mo
533.836 278.673 li
530.086 277.59 mo
534.086 276.173 li
531.336 278.757 li
530.086 277.59 li
@
531.502 281.673 mo
532.586 277.59 li
533.836 278.673 li
531.502 281.673 li
cp
ef
531.502 281.673 mo
532.586 277.59 li
533.836 278.673 li
531.502 281.673 li
@
532.586 277.59 mo
536.586 276.173 li
533.836 278.673 li
532.586 277.59 li
cp
ef
579.168 317.59 mo
536.918 278.673 li
532.586 277.59 mo
536.586 276.173 li
533.836 278.673 li
532.586 277.59 li
@
534.586 281.673 mo
535.668 277.59 li
536.918 278.673 li
534.586 281.673 li
cp
ef
534.586 281.673 mo
535.668 277.59 li
536.918 278.673 li
534.586 281.673 li
@
535.668 277.59 mo
539.668 276.173 li
536.918 278.673 li
535.668 277.59 li
cp
ef
582.586 317.59 mo
539.418 278.673 li
535.668 277.59 mo
539.668 276.173 li
536.918 278.673 li
535.668 277.59 li
@
537.168 281.673 mo
538.168 277.59 li
539.418 278.673 li
537.168 281.673 li
cp
ef
537.168 281.673 mo
538.168 277.59 li
539.418 278.673 li
537.168 281.673 li
@
538.168 277.59 mo
542.168 276.09 li
539.418 278.673 li
538.168 277.59 li
cp
ef
585.002 317.59 mo
543.086 278.757 li
538.168 277.59 mo
542.168 276.09 li
539.418 278.673 li
538.168 277.59 li
@
540.752 281.673 mo
541.836 277.59 li
543.086 278.757 li
540.752 281.673 li
cp
ef
540.752 281.673 mo
541.836 277.59 li
543.086 278.757 li
540.752 281.673 li
@
541.836 277.59 mo
545.918 276.173 li
543.086 278.757 li
541.836 277.59 li
cp
ef
587.418 317.59 mo
545.918 278.757 li
541.836 277.59 mo
545.918 276.173 li
543.086 278.757 li
541.836 277.59 li
@
543.586 281.673 mo
544.668 277.59 li
545.918 278.757 li
543.586 281.673 li
cp
ef
543.586 281.673 mo
544.668 277.59 li
545.918 278.757 li
543.586 281.673 li
@
544.668 277.59 mo
548.668 276.173 li
545.918 278.757 li
544.668 277.59 li
cp
ef
590.086 317.59 mo
549.586 278.757 li
544.668 277.59 mo
548.668 276.173 li
545.918 278.757 li
544.668 277.59 li
@
547.252 281.673 mo
548.418 277.59 li
549.586 278.757 li
547.252 281.673 li
cp
ef
547.252 281.673 mo
548.418 277.59 li
549.586 278.757 li
547.252 281.673 li
@
548.418 277.59 mo
552.418 276.257 li
549.586 278.757 li
548.418 277.59 li
cp
ef
593.252 317.59 mo
552.418 278.757 li
548.418 277.59 mo
552.418 276.257 li
549.586 278.757 li
548.418 277.59 li
@
550.086 281.673 mo
551.168 277.59 li
552.418 278.757 li
550.086 281.673 li
cp
ef
550.086 281.673 mo
551.168 277.59 li
552.418 278.757 li
550.086 281.673 li
@
551.168 277.59 mo
555.252 276.257 li
552.418 278.757 li
551.168 277.59 li
cp
ef
596.586 317.59 mo
554.336 278.673 li
551.168 277.59 mo
555.252 276.257 li
552.418 278.757 li
551.168 277.59 li
@
552.002 281.673 mo
553.086 277.59 li
554.336 278.673 li
552.002 281.673 li
cp
ef
552.002 281.673 mo
553.086 277.59 li
554.336 278.673 li
552.002 281.673 li
@
553.086 277.59 mo
557.086 276.173 li
554.336 278.673 li
553.086 277.59 li
cp
ef
599.502 317.59 mo
557.668 278.757 li
553.086 277.59 mo
557.086 276.173 li
554.336 278.673 li
553.086 277.59 li
@
555.336 281.673 mo
556.418 277.59 li
557.668 278.757 li
555.336 281.673 li
cp
ef
555.336 281.673 mo
556.418 277.59 li
557.668 278.757 li
555.336 281.673 li
@
556.418 277.59 mo
560.502 276.173 li
557.668 278.757 li
556.418 277.59 li
cp
ef
602.918 317.59 mo
560.836 278.673 li
556.418 277.59 mo
560.502 276.173 li
557.668 278.757 li
556.418 277.59 li
@
558.502 281.673 mo
559.586 277.59 li
560.836 278.673 li
558.502 281.673 li
cp
ef
558.502 281.673 mo
559.586 277.59 li
560.836 278.673 li
558.502 281.673 li
@
559.586 277.59 mo
563.586 276.173 li
560.836 278.673 li
559.586 277.59 li
cp
ef
606.252 317.59 mo
562.836 278.673 li
559.586 277.59 mo
563.586 276.173 li
560.836 278.673 li
559.586 277.59 li
@
560.502 281.673 mo
561.586 277.59 li
562.836 278.673 li
560.502 281.673 li
cp
ef
560.502 281.673 mo
561.586 277.59 li
562.836 278.673 li
560.502 281.673 li
@
561.586 277.59 mo
565.502 276.09 li
562.836 278.673 li
561.586 277.59 li
cp
ef
608.918 317.59 mo
566.252 278.673 li
561.586 277.59 mo
565.502 276.09 li
562.836 278.673 li
561.586 277.59 li
@
563.918 281.673 mo
565.002 277.59 li
566.252 278.673 li
563.918 281.673 li
cp
ef
563.918 281.673 mo
565.002 277.59 li
566.252 278.673 li
563.918 281.673 li
@
565.002 277.59 mo
569.002 276.173 li
566.252 278.673 li
565.002 277.59 li
cp
ef
611.918 317.59 mo
569.336 278.673 li
565.002 277.59 mo
569.002 276.173 li
566.252 278.673 li
565.002 277.59 li
@
567.002 281.673 mo
568.086 277.59 li
569.336 278.673 li
567.002 281.673 li
cp
ef
567.002 281.673 mo
568.086 277.59 li
569.336 278.673 li
567.002 281.673 li
@
568.086 277.59 mo
572.086 276.173 li
569.336 278.673 li
568.086 277.59 li
cp
ef
614.418 317.59 mo
571.836 278.673 li
568.086 277.59 mo
572.086 276.173 li
569.336 278.673 li
568.086 277.59 li
@
569.502 281.673 mo
570.586 277.59 li
571.836 278.673 li
569.502 281.673 li
cp
ef
569.502 281.673 mo
570.586 277.59 li
571.836 278.673 li
569.502 281.673 li
@
570.586 277.59 mo
574.586 276.173 li
571.836 278.673 li
570.586 277.59 li
cp
ef
617.086 317.59 mo
575.168 278.757 li
570.586 277.59 mo
574.586 276.173 li
571.836 278.673 li
570.586 277.59 li
@
572.836 281.673 mo
573.918 277.59 li
575.168 278.757 li
572.836 281.673 li
cp
ef
572.836 281.673 mo
573.918 277.59 li
575.168 278.757 li
572.836 281.673 li
@
573.918 277.59 mo
578.002 276.173 li
575.168 278.757 li
573.918 277.59 li
cp
ef
620.336 317.59 mo
578.336 278.673 li
573.918 277.59 mo
578.002 276.173 li
575.168 278.757 li
573.918 277.59 li
@
576.002 281.673 mo
577.086 277.59 li
578.336 278.673 li
576.002 281.673 li
cp
ef
576.002 281.673 mo
577.086 277.59 li
578.336 278.673 li
576.002 281.673 li
@
577.086 277.59 mo
581.086 276.173 li
578.336 278.673 li
577.086 277.59 li
cp
ef
623.086 317.59 mo
580.502 278.673 li
577.086 277.59 mo
581.086 276.173 li
578.336 278.673 li
577.086 277.59 li
@
578.168 281.673 mo
579.252 277.59 li
580.502 278.673 li
578.168 281.673 li
cp
ef
578.168 281.673 mo
579.252 277.59 li
580.502 278.673 li
578.168 281.673 li
@
579.252 277.59 mo
583.252 276.173 li
580.502 278.673 li
579.252 277.59 li
cp
ef
626.418 317.59 mo
583.918 278.673 li
579.252 277.59 mo
583.252 276.173 li
580.502 278.673 li
579.252 277.59 li
@
581.586 281.673 mo
582.668 277.59 li
583.918 278.673 li
581.586 281.673 li
cp
ef
581.586 281.673 mo
582.668 277.59 li
583.918 278.673 li
581.586 281.673 li
@
582.668 277.59 mo
586.668 276.173 li
583.918 278.673 li
582.668 277.59 li
cp
ef
629.918 317.59 mo
587.336 278.673 li
582.668 277.59 mo
586.668 276.173 li
583.918 278.673 li
582.668 277.59 li
@
585.002 281.673 mo
586.086 277.59 li
587.336 278.673 li
585.002 281.673 li
cp
ef
585.002 281.673 mo
586.086 277.59 li
587.336 278.673 li
585.002 281.673 li
@
586.086 277.59 mo
590.086 276.173 li
587.336 278.673 li
586.086 277.59 li
cp
ef
633.252 317.59 mo
589.168 278.673 li
586.086 277.59 mo
590.086 276.173 li
587.336 278.673 li
586.086 277.59 li
@
586.918 281.673 mo
587.918 277.59 li
589.168 278.673 li
586.918 281.673 li
cp
ef
586.918 281.673 mo
587.918 277.59 li
589.168 278.673 li
586.918 281.673 li
@
587.918 277.59 mo
591.918 276.09 li
589.168 278.673 li
587.918 277.59 li
cp
ef
636.418 317.59 mo
592.918 278.673 li
587.918 277.59 mo
591.918 276.09 li
589.168 278.673 li
587.918 277.59 li
@
590.668 281.673 mo
591.668 277.59 li
592.918 278.673 li
590.668 281.673 li
cp
ef
590.668 281.673 mo
591.668 277.59 li
592.918 278.673 li
590.668 281.673 li
@
591.668 277.59 mo
595.668 276.09 li
592.918 278.673 li
591.668 277.59 li
cp
ef
638.836 317.59 mo
595.418 278.673 li
591.668 277.59 mo
595.668 276.09 li
592.918 278.673 li
591.668 277.59 li
@
593.086 281.673 mo
594.168 277.59 li
595.418 278.673 li
593.086 281.673 li
cp
ef
593.086 281.673 mo
594.168 277.59 li
595.418 278.673 li
593.086 281.673 li
@
594.168 277.59 mo
598.086 276.09 li
595.418 278.673 li
594.168 277.59 li
cp
ef
641.668 317.59 mo
598.502 278.673 li
594.168 277.59 mo
598.086 276.09 li
595.418 278.673 li
594.168 277.59 li
@
596.168 281.673 mo
597.252 277.59 li
598.502 278.673 li
596.168 281.673 li
cp
ef
596.168 281.673 mo
597.252 277.59 li
598.502 278.673 li
596.168 281.673 li
@
597.252 277.59 mo
601.252 276.09 li
598.502 278.673 li
597.252 277.59 li
cp
ef
645.086 317.59 mo
601.002 278.673 li
597.252 277.59 mo
601.252 276.09 li
598.502 278.673 li
597.252 277.59 li
@
598.752 281.673 mo
599.752 277.59 li
601.002 278.673 li
598.752 281.673 li
cp
ef
598.752 281.673 mo
599.752 277.59 li
601.002 278.673 li
598.752 281.673 li
@
599.752 277.59 mo
603.668 276.09 li
601.002 278.673 li
599.752 277.59 li
cp
ef
648.252 317.59 mo
604.836 278.673 li
599.752 277.59 mo
603.668 276.09 li
601.002 278.673 li
599.752 277.59 li
@
602.586 281.673 mo
603.586 277.59 li
604.836 278.673 li
602.586 281.673 li
cp
ef
602.586 281.673 mo
603.586 277.59 li
604.836 278.673 li
602.586 281.673 li
@
603.586 277.59 mo
607.586 276.09 li
604.836 278.673 li
603.586 277.59 li
cp
ef
651.086 317.59 mo
606.586 278.673 li
603.586 277.59 mo
607.586 276.09 li
604.836 278.673 li
603.586 277.59 li
@
604.336 281.673 mo
605.336 277.59 li
606.586 278.673 li
604.336 281.673 li
cp
ef
604.336 281.673 mo
605.336 277.59 li
606.586 278.673 li
604.336 281.673 li
@
605.336 277.59 mo
609.252 276.09 li
606.586 278.673 li
605.336 277.59 li
cp
ef
654.002 317.59 mo
609.336 278.673 li
605.336 277.59 mo
609.252 276.09 li
606.586 278.673 li
605.336 277.59 li
@
607.168 281.673 mo
608.086 277.59 li
609.336 278.673 li
607.168 281.673 li
cp
ef
607.168 281.673 mo
608.086 277.59 li
609.336 278.673 li
607.168 281.673 li
@
608.086 277.59 mo
612.086 276.09 li
609.336 278.673 li
608.086 277.59 li
cp
ef
656.836 317.59 mo
612.752 278.673 li
608.086 277.59 mo
612.086 276.09 li
609.336 278.673 li
608.086 277.59 li
@
610.502 281.673 mo
611.502 277.59 li
612.752 278.673 li
610.502 281.673 li
cp
ef
610.502 281.673 mo
611.502 277.59 li
612.752 278.673 li
610.502 281.673 li
@
611.502 277.59 mo
615.502 276.09 li
612.752 278.673 li
611.502 277.59 li
cp
ef
659.752 317.59 mo
615.586 278.673 li
611.502 277.59 mo
615.502 276.09 li
612.752 278.673 li
611.502 277.59 li
@
613.336 281.673 mo
614.336 277.59 li
615.586 278.673 li
613.336 281.673 li
cp
ef
613.336 281.673 mo
614.336 277.59 li
615.586 278.673 li
613.336 281.673 li
@
614.336 277.59 mo
618.252 276.09 li
615.586 278.673 li
614.336 277.59 li
cp
ef
662.836 317.59 mo
618.668 278.673 li
614.336 277.59 mo
618.252 276.09 li
615.586 278.673 li
614.336 277.59 li
@
616.418 281.673 mo
617.418 277.59 li
618.668 278.673 li
616.418 281.673 li
cp
ef
616.418 281.673 mo
617.418 277.59 li
618.668 278.673 li
616.418 281.673 li
@
617.418 277.59 mo
621.418 276.09 li
618.668 278.673 li
617.418 277.59 li
cp
ef
666.336 317.59 mo
621.502 278.673 li
617.418 277.59 mo
621.418 276.09 li
618.668 278.673 li
617.418 277.59 li
@
619.252 281.673 mo
620.168 277.59 li
621.502 278.673 li
619.252 281.673 li
cp
ef
619.252 281.673 mo
620.168 277.59 li
621.502 278.673 li
619.252 281.673 li
@
620.168 277.59 mo
624.168 276.007 li
621.502 278.673 li
620.168 277.59 li
cp
ef
669.502 317.59 mo
625.168 278.673 li
620.168 277.59 mo
624.168 276.007 li
621.502 278.673 li
620.168 277.59 li
@
622.918 281.673 mo
623.918 277.59 li
625.168 278.673 li
622.918 281.673 li
cp
ef
622.918 281.673 mo
623.918 277.59 li
625.168 278.673 li
622.918 281.673 li
@
623.918 277.59 mo
627.918 276.09 li
625.168 278.673 li
623.918 277.59 li
cp
ef
672.252 317.59 mo
628.168 278.673 li
623.918 277.59 mo
627.918 276.09 li
625.168 278.673 li
623.918 277.59 li
@
625.918 281.673 mo
626.836 277.59 li
628.168 278.673 li
625.918 281.673 li
cp
ef
625.918 281.673 mo
626.836 277.59 li
628.168 278.673 li
625.918 281.673 li
@
626.836 277.59 mo
630.836 276.09 li
628.168 278.673 li
626.836 277.59 li
cp
ef
675.002 317.59 mo
631.252 278.673 li
626.836 277.59 mo
630.836 276.09 li
628.168 278.673 li
626.836 277.59 li
@
629.002 281.673 mo
630.002 277.59 li
631.252 278.673 li
629.002 281.673 li
cp
ef
629.002 281.673 mo
630.002 277.59 li
631.252 278.673 li
629.002 281.673 li
@
630.002 277.59 mo
634.002 276.09 li
631.252 278.673 li
630.002 277.59 li
cp
ef
678.418 317.59 mo
633.752 278.673 li
630.002 277.59 mo
634.002 276.09 li
631.252 278.673 li
630.002 277.59 li
@
631.502 281.673 mo
632.502 277.59 li
633.752 278.673 li
631.502 281.673 li
cp
ef
631.502 281.673 mo
632.502 277.59 li
633.752 278.673 li
631.502 281.673 li
@
632.502 277.59 mo
636.418 276.09 li
633.752 278.673 li
632.502 277.59 li
cp
ef
681.252 317.59 mo
636.502 278.673 li
632.502 277.59 mo
636.418 276.09 li
633.752 278.673 li
632.502 277.59 li
@
634.336 281.673 mo
635.252 277.59 li
636.502 278.673 li
634.336 281.673 li
cp
ef
634.336 281.673 mo
635.252 277.59 li
636.502 278.673 li
634.336 281.673 li
@
635.252 277.59 mo
639.252 276.007 li
636.502 278.673 li
635.252 277.59 li
cp
ef
684.502 317.59 mo
638.418 278.673 li
635.252 277.59 mo
639.252 276.007 li
636.502 278.673 li
635.252 277.59 li
@
636.252 281.673 mo
637.086 277.59 li
638.418 278.673 li
636.252 281.673 li
cp
ef
636.252 281.673 mo
637.086 277.59 li
638.418 278.673 li
636.252 281.673 li
@
637.086 277.59 mo
641.086 276.007 li
638.418 278.673 li
637.086 277.59 li
cp
ef
687.586 317.59 mo
641.502 278.673 li
637.086 277.59 mo
641.086 276.007 li
638.418 278.673 li
637.086 277.59 li
@
639.336 281.673 mo
640.252 277.59 li
641.502 278.673 li
639.336 281.673 li
cp
ef
639.336 281.673 mo
640.252 277.59 li
641.502 278.673 li
639.336 281.673 li
@
640.252 277.59 mo
644.168 276.007 li
641.502 278.673 li
640.252 277.59 li
cp
ef
640.252 277.59 mo
644.168 276.007 li
641.502 278.673 li
640.252 277.59 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PWFKSB+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C36E13383F0ADFA95D33EE056CB0BBB6CC378
E318C596010C9D5017C58301E152F1312F120666FCA193F34BAFF9A7728E2D88
CF2F8599A92CC219CC18> |-
/parenright <1C60D8A8C9B81F2C36E13383F0ADFA95EB0D3347CF7699AF86D
05C9DA64C44D4B9C1DA244854703B576B8CF89DADBBDF27E06BFB9FAEAE6B7E8
4B7BDD623857D8CDD1880> |-
/colon <1C60D8A8C9B854D088E8E1AEAD30C92AB0D98EADF1DE7A77B7CB74CD
7251B14F346AB2E7541FDEE4> |-
/D <1C60D8A8C9B6079F1E08EB12991814F2BEFDD99E857D46CC83B089892D70
768EDFB737CEBE140DF668BA679C989F178F8C7B580D23B4B614D8D70F34E9A4
87B4AA37370316974673AB> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/P <1C60D8A8C9B64EDF881FD1B4CC946498DA3C19C25C4B8520933678924FDE
4A210BE068A66633EA9CF0A18FC1E10710CF47869E1E8874BE0332D5C37713DD
48920646AEDE175969913994AE21EF> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/f <1C60D8A8C9B854D088BD32B2AA38E03C8785A8768DD979031AA73FC70D55
2CF02916FA7DE01DC71A342AE3C3D8B4BA7C5EA263728006A3D26B7AF13FD368
6CACD62B8F7144E8E8E2621662105D> |-
/h <1C60D8A8C9B7EF325730A29066B7F8FA5E5A2B5DB35A82E1C18309DEA62B
C518CF0F1F9539ABFB89DF7E8DFFB04843990D3984ACC7B070B97764C6F6282A
232A5503AD2F34E23CD0A268E90C1B> |-
/l <1C60D8A8C9B88C080EC3D3ACA1AA9447BE5E1701C51D0B115EA96EF55CA0
1BE9> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406F39649904C93FB995842FF4F
905303BC539ACCA2C59EF4E92154BC352DE1B2C6DB4CB6E3884264B47C364E86
DCEC9778067A27BA6B7FC77EF169DFF24E447A16EC0025E89AD61026519DC7DE
3FD2BBBB9D1BA4C5E00D1949A9B69D4C9D685972B7816073A3E2DB2424> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/r <1C60D8A8C9B81F2C46C810F818CC6D7FA9350962F8DF74B0F191B25EF39D
AC43ECC82A5155465999170893BB853FBDB2F1E5E6657B1704EB4EA080223F79
E5CD0E9024AC9DE64C> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/w <1C60D8A8C9B6079F1E21163FAB7D42C978151484C642B124318B7CBF8C37
8A0B40A10228789196EF9EFB8EBC102BB2480131A59F7F0DA1186C7C9F71E3FA
F09067ACECABA3D1DF92300BA22E51> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PWFKSB+Helvetica /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 58 /colon put
dup 68 /D put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 102 /f put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 119 /w put
pop
%ADOEndSubsetFont
/PWFKSB+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon 6{/.notdef}rp /A 2{/.notdef}rp /D /.notdef 
/F 6{/.notdef}rp /M /N /.notdef /P /.notdef /R 
/S /T 12{/.notdef}rp /a /.notdef /c /d /e 
/f /.notdef /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /.notdef 
/w 136{/.notdef}rp]
PWFKSB+Helvetica nf
PWFKSB+Helvetica*1 [10 0 0 -10 0 0 ]msf
10 281.507 mo
(Man)sh
29.4497 281.507 mo
(ual)sh
0 240.332 mo
(Prop)sh
21.1196 240.332 mo
(osed)sh
PWFKSB+Helvetica*1 [0 -12 -12 0 0 0 ]msf
25 537.821 mo
(Difference with manual \(unit :   \))
[-8.66406 -2.66357 -3.33594 -3.33594 -6.67236 -3.99561 -6.67188 -6.67236 -6 -6.67188 -3.33594 -8.66406 
-2.66357 -3.33594 -6.67188 -3.33643 -9.99561 -6.67188 -6.67236 -6.67188 -6.67188 -2.66406 -3.33594 -3.99561 
-6.67236 -6.67188 -2.66357 -3.33643 -3.33594 -3.33594 -3.33594 -3.33594 -3.33594 0 ]ysh
25 378.53 mo
(r)sh
25 183.899 mo
(Difference with manual \(unit :   \))
[-8.66406 -2.66357 -3.33594 -3.33594 -6.67236 -3.99561 -6.67188 -6.67236 -6 -6.67188 -3.33594 -8.66406 
-2.66357 -3.33594 -6.67188 -3.33643 -9.99561 -6.67188 -6.67236 -6.67188 -6.67188 -2.66406 -3.33594 -3.99561 
-6.67236 -6.67188 -2.66357 -3.33643 -3.33594 -3.33594 -3.33594 -3.33594 -3.33594 0 ]ysh
25 24.6084 mo
(r)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PWFKSB+Helvetica*1 uf
/PWFKSB+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (result_hdv_result_detail2.eps)
%%CreationDate: 8/22/2014 5:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6=)Tn<Z7+ku"n4a4MPQUd0InnW&s[MRP9`a78MR<[ep4i]mt2]u38jpf\AtfS"4rS=`dr+Or/8kWrX\G^0[l4u8F#!<pY"F/
%0hljnG?&d.<HV=9b"BB4l*WRc[s\4blp;s8?P!nA68F[,8;VreQ^*hNkH$hp'p>=`.?T.Dk^t.TilS-`aJ9VM67//D5db(93VdFa
%`[AZQZTT3AqVD-iP[,^8?LKHcf&+i<qSI*]g[5#T+lBC\5P[A%IW(1f<nlG;gZ)&8c9FC_$jPN_]4Fke\!M=lGIm0^J,!"c08NM*
%^qYcTF+2R%[Z2\ANV5'<OA&=BGPN-Nl>hQhK6d`onaEI?]eB$,H$_YC6Uj<p*X[\3#Q.u8$R5Nk\Gu/MqVV;Cs8:>Qroq2tQiHtZ
%O$V@lYWqo_%mQ`goKSI07&@750;RW;1n>4H>3r!^2<`W3D2_XIPDU\&if\gu\^.?*)B:@66]8j_-m18jdW/<E$dq@F6J,']f]Z9I
%["%JMs--eK.?G-Km$5a.?b,.j]^lYIpgQ?<#iq773h(6G_ol?kcqHKi+k7,#X`bNR<GeJcXhW7lU,LM&>2l8?Hu"cT)tgh,EMq^;
%/u041La]\-n*M8'jET&>?1b=>QQosC5c)rWA5Z/TL^5/uPfYJPUst!\`.68boTPr`(=cIn!LeY\(ml"6o)o[#Gh@<-oWkQjWTVF.
%do*0:63nkjGV%6!pQo<<[*&^Uj)M]O`dg%OE6.R1&3W.R0J;2o(\[-b/l3-;NKB`d%cuHD0?*dt%_npiEQ$PF/`_C'[n#Y]JH!YG
%]I&j3R`W?\Ttl,BAU'PQGUgo+<0kX)9P@H9iD>81pm+T?Z"+K)-'RFGCG_6+178Q8ae4-nH6ra51)VJETAUHA'add=:k5R"!^%nG
%TM2m):Wqj1&m$`QTg6.^.ZmJi/s@=gR,f\qA^=p*<JNL]#31;:-jJ^@UF"5o;"+g'?r6?Ma3N$t.`8dS'u%MWi"_\)a<F?rT\pQG
%*Bq9b0J7lJE(YEV`F*BK$>%@kpl/,WGFi32i0'`??:e-PH85KKIF:1Y+*X<=MA7<7TGWV"?D/f782>5VN"QUa5VX*#UGP7GW=39i
%=82t%,^]Tq[.Ec#]L"=i,J4Xu&p>G>,s;6qN#-Hr)(./eOY.:%6SX0TL)Vmo1'$*TdPV)o[*?Z]MQhS,"pW.n'F'AoPED'L0Lg;@
%@YE?AN!(f01;#pk(a,j(\=CehJj'6gE&qKA`\`YCE9@PN&>ij!K[H)nTCe3&Sj4XD_jtFn@H/TgLLLZUBq@.HSs+Z2o44R.c6fnG
%#U3!-nNXn5lKfm@:j"[CeTo/rV9T1[l"gj.S;=5Hgr*g=8o9;uPoA!sL/(uZ71&94lS=)d)CAHQ;8E4iSVg%%rf\Vu8:;lc@$-(k
%l9"fsW[AG?-hX&.9;T^Ropu"RVoe[T>(N9Bs)L-j8:;lcnp0e3I4,%kojX']UqW%BV%WU,^6=%unrLq=THUr\qNC=6)gR2n9(>51
%;(`1]O#a!g^oQ3S9Ha)Ks01&45JhsI)?1rMqX<cVWG[+EjrINqY,VYID+F7$d=+$*%N#aUkYn?`9W%<CU(A\7OX_iWMaF#6M\KmI
%,c_?-;8JtT5U5L%%"!l'Ta%1nrg_@LXsf22XrQUD91ZTeWgG7[T#=H(-/:3*Z;;-iFBb`a\go(XM3[L@81>8Y!1d.[O6;(>*]j0D
%#q@RKEsr\B]dP9'.PO>/LLHuhX9:2X[rMsG:DGUh"PR`b/W/GD+;d+dUnE!NlpAS)3WqSG.F4YcLmgW'l54[^'*it;WRV8j$o:8%
%A5X`/_`VWAKG)l_/W!RE<'7)N#SR^@#>6FpcF(\R<DEXnK`^Rk/C97lQ,/"N(u+,BR"YtNi)3AhdeOl"OmaQ*<M5/d@m_7J]E<8#
%<7I+dcsM@LWhg#LO[EE:;HP4_,:/D5'IV70K.4Yq-)JQhQ1o#@aXEE'7EJ)U_g%cuE?"J2R>-88>4H+c\>i6-MuR5N;L'M8V?grn
%*lWdWo8-;3FWM@D.GUQXIhreG_U.Q"#`IhYi?J/Q9dMU`"O-0;K<(dsIqR:1i">8X#*lQo)Lgf2(6"^)ZnrdA6Q[73RkgAGG^O.'
%]Se4jCW;dh95$4(-e0**j,D!2ZRF*R<mkg4(26\]"QMNH2=Wek,tnZu$VPW1E%PDt6Y%lMc>uZNMkl3:-`Fp_drG-kZ@W%HM@8tg
%C"4+_PY78SEAkLt\Bku@/5C_BMHmH+1-U@\k_rGQQpNQGG-RW)V0&7"<#Ic+e2/BhOgT;&C%0I24A8bdhJf#5*(QYM=O+-n7cb%:
%j-7hFS7C%tI)cTAV6eCLG(bRW;^P#l'k/VN>39F-JX<uJ:m3P/&9+:9PHr?2r"?$hK:jhc,n#o[Bnc$Ir+J*b-9.l6M?+bYrg/F>
%jCHo=<G%mrLQ]OG'J1c2oS>r<U_?W7#DCsh$;3g<81VUn8]R&"DWF2$K8N'_&AUD\TIs%iF`OE#JHr([c3-QV71tl-+@Cgf.[Z#1
%Q;a#Z2KnX15gLqtAS=XKBo7Zgo?bS"$#p^D9TR$'a=%J6k*`1GP38d[.A](C,,imb'qPfUFKK,-,C4*ZQTU-@!LP85OLSmXFNUhu
%"NXtA`:!k`&kka>0W8g]PNl^Z!)O9/@\3/(=B7Mc1(X\]WX*Eol>"A!S,u9gL,@nAN#1>L,nN\5hF1bjUuNS=O_Ko0!AN_/:0?S&
%W$!WkCoc?Y1YQhZ_@WMV4%X`dWm^?MFi'H(Ip/4?h^tn8XqI+<Kjh"iqm2'\YpmqDU8^n`QnmNm%V\B23EZH+d'Z;_BsLk4hmLe0
%5-HQ4IYZp?AmqX@Qif81;^Y2+n,_V`Csu8C,U$SNM*Ks!,cMJP&?N+n5h`JMn\,2XP`TQYFiGp>"#X$jj9^3o(SCu8:<#[+_:3JI
%["oBZ"bHh*"TY3fn/U<L.[*J=8'Ic&4pA6a1s@e(DOje8$cPU*ps.>o?c;5RmTn/G<^eU3;dj82aBZV,4p4L#\7*Mk)5I!X>'q\[
%cTYfTZ,d_iPEl-M^a-buI\h'+aY-\g#ZAqT-7ak.87e>\&ST<d&nGr'YT-].'0DUlrV'531IX$gW]IIleG4"9TOJ8=l[tdoC]q/[
%W7dfG3a^CL)AV2#!No^"4oICB139V$+-:nn'Ct6Ehh$sZb]R+aVU_e>Ac1B3d:t]f7Jfr1(K8SiR:[H%/Y)7T%X"dX8S,!c)0WN!
%qqW5lk0#YZRjuh0$j;jEU1d/SD$D<r$RV1Hb)2W5MQ_PZ:Pc6,_LJkgWo)`qQ9h/5!_n0%UB4$X:5]LU&pjkN;NcLL^L??KcRJ9f
%crCl!FRfot`RV6&N*#X/$E60!R`maC>I/(%KqYWOW4oieX$<<oK;lY&=M5$6?e6n/rcNqFCt070RlY'-l?p'@8Si%0[jjL!bVJ(d
%SIq,tGqVmjcs:hIWk,5q4[5B7kM>o*'roMgOr<MEEG`$A>LCB*`d,@OcJ@[V:PGsSRu1iNCK4M:kN&TP^P/3O]CJ&^A(;7j@pg>M
%HU7BHMtN=3o=SipPskY1AqEVO#<g7]W6C+^"9(YPV9j__SlU?=^T"uGn6`2W,Lo`bO#0-EEPI]M.98nAKrZ^m3G;"sni`i<#q;Y<
%4<n<uYn/c];hUOV&7j+P71+1'n4jkX8MO[)(NSkdZC%oa-;pFOD5;tZ8[+6tTMNMfY;XSJ:h;@--88Cu@-!-W$H;e_d.)@P!\(H>
%i<>Z$_=;nUff2kUWk*:.e"<8Fe9aI:MacpH2AT)n`q[lj[(82)g,:HVfp[0p'oPg>1*8C"dq/)(Pp@s_5T#G!BT\<b25-Cp'D)o!
%Y,G)i[L4H<pF=^h,doXr;)UR9eFgWpKD/TK*X)<ioiA#`!>&J.'?'jCI\r+q5)f\bo3rW'87Q2E1Xojb)tRSO0uEdarP[P!h(o2C
%8i?I5E#<T'W5#[Q.+QkOZriJ7$%J_k957u\ECd'@+ElolAh5:jZEfaGrM'\o]c\%4KL"%E;ao,49JZs"+qe#^`lRFO3H0BILLVK`
%M#rF)lH=p!">U6^-:_E_*N5ROV+;3$0ZG`T[o$"Ic/?U"M$*p5Rj$>*3iHR">*6UB"Tk&^,/K"WNl`J8;b6MO,/)+Z:lg<^S.iur
%b=^sJN@ZF<TVHVL$Jse\:4VF3f>[:DA0=VJ$C*nn.aBUTV3PJTBQ[@;i)@Xj6s[][KS4k8$n[[\]E-)C^L[a`AOfG+k9LZX>EhF^
%#e4OPNEAYL+N'l.a3^O?"=[.U(PbkWCaCfNYY>pC9org\4@Q8+e0o!)'dUFCMR_\W]b<s"@B:n9LD`3'`NYu0)D#HcU*O6u8h^gf
%YsQeA35>V]I"`V?fDp]]@*re$.p=6i=+CNpj@^1RNaQ.$*+]'L70oL79dLX?8;i?jqgpkT$CS`-o-)"`>_Wpo=^"Ya*JGVu&S'8*
%S0t,Mb85P)'QPs]'V3W.3/J*+8-4VN_@^8(6=^X`&f=62igPc3@Io$YJ.SkWa-'ppL"VYBf7c!A]Gq_g'NYDpk7^f5&^u\HF?8NJ
%.3oOB!2mniC(A0B-7L?&:JsgGW/Qji.oAb4GT.&3`.K7HU&2X.Ght^gfHJ3#_rA3rKnRP25VZ+YP^tin)*N,HF)qWq$O)5E-5c5c
%adc/Eb"c^@cr4a(`]ObCAMOc&eqpoR4]&"27@c?F8lXjhk("F_B=r%X[\aM^$*,'[Mo*92O]SDX:(^Z@ZLTfC#@9ko`&3GqPP16.
%)+@*Z'ILkp16\D)&',:*EG:$3GX@g4$*qg+ROM,%9X.TP<6NY]$]ccT1N=\&$M#rPaB<]mUVtX8ooAPEX'4F060C>0PZ-PGTHUa@
%/^]h*PU8LSnQM^9S\[lP]aeao#.mLp5'r%_o<]@bl%oAsgk*tRO!IQE9i8V3s3B;;jILs23P<C8J!E01pn=4NZ?rFtCI'QYrE/95
%5opPIJri*WP@;5\J"ofi0DO4GHTW2@I_#4O,%kBBPQ&'TlL`rEm=e4hp,9#Pg4m8(=D9PW08QpLQ"\Z;mFZ3`5OA$`YH8$)XkiAf
%#,;Y0+)BEahV(?nL7ZGSSRHU1p"F9_()sW9j7iO`<:@5(kKWk-hi#0B3aLNa\,A@J*L@P[G_3:35G7`>k@*Q@IB7t;7G/LJW%gTQ
%NaqH_X$1ij[D24c\C5<&A)h"2eV5V*eC[:sPZ7([A$,a?gE)>8$Xt:n]5;]E6T!fM6>SKW2\A*6nQ9if*4C4=hpId$X>0'k[X4#1
%d.`Hc9ZL92=L16eS[LOp]sb[:]hT)<:J!9os%]oWmIeN)pYQ5Em9XUb823FuCU[b[od4bgTbS.g2X!n*W9.V))ulm%RNSDKqSUt\
%IFrEfhs/J.\/kI8/;S"#L4<tr&cH]bc$$/:m39i3om:E_e=j)BW&a,%*i7?Tn9\%TU,qf6^#"/`0^+Rm"Yh7@EgRqF;`On6a&+W_
%n=*?GT7[0_EhulhFs0o'eRKn1)7<B%WgArrH_f.4!O9\1fi-%X`p^/W$kP:;9I_$G$HHD*A(%8bV;Bh"473Ng^W2@)?/UQ42P<]@
%q3%e+WRSL*%klf:6c:SDi>:M+7X#QI'>S`KSiTrb:-dEr7d:g2oldFYd*X2jgSFMN=rB3J<pFfuW=CB-iBVLL12V])*Wan@`VZ`4
%IBGo/(/aA)3kojr#D.m@WB)2a-CXp-PWHRCa(('ehq?>i?S:i^k?]@;s*QPiI'p9g7u3:T,dS$iRSp?BLRc`X_R#DZald0ja40!V
%C'g'#GB)f`/Ksr/g0)M)qMk3fmfNV;6(g=bYU9_.@m#1"#5D?tq4p)<%kGQsA?a[4mJD>=i7\Q?mH,6WY^^>q(60=UkY#k<n/r+U
%K.P"aUm-\mAHBIlP7-T,r#j03;BR9\Z:b(/]e]pT!%W9Z_tF.WMX'3)kku7Qh:+*d?i._o[/oi6WV:2?gE1AD/&*2r?+@$J#AtGE
%l.14Si<"J$[/D*nPA'/8LD&i;:.TmBoH53Q&!H_"Pe]7N@6@-''`%k/,n]^D'J#!.Y'&*cE`,CaEn)fgI0Ku#\.UEhl_@/TmZB"r
%p$qoG^5LR%&VgBLiWL,p$HA>r"&E#/1nl'@C![=eoA@;$rGH9?`C!/B6kT/[8g/;7!WnZQ"dHkV7u!gan$klB31Pra(G>R_XpPH`
%;aMK@!+:\D>>g63H6OZpY/["ONX;Z!p:_u0:&?65#i@/Fs)5VYKf[Z\coNq,mkcW--=LV=!Qd+b.f,X:M\],p9t;V55)[.t\4[[(
%aVidW#j?3"HZ\O*+RKW?JemA![`nQ>lJq%(6ES]R+q:O=+=;XK?TYq:lKJ&>1PWl40RG"#jYHf;/0mY$Fe&FWnN/KZQ%E+g9.;^o
%Ud/+>VdR2'm?bBWe_VQ:oAFbL8AnBkaH1%RAA\-9/gTT"%XS(<p$fGE/7>a78*b<aW;b=R#c#H'SZb>gXZRC8No>\*5bIOCUurNK
%r!qWXdAINIgRf6L@Gu1ar_Zd2q9[#8;Y6i?R`+OY_M7NGKc!]0i.G/[(,GH1nUB9nje)S-J,.FjoIp7:5<laFMa7,ZVY9Dm;r:"/
%^1$:MMK?.GAqH4-Z8t;;#3[ED!l40<&*VdS7]\fZjJ7Y3ngZ2e7;n\s6`-XhTuJ7<6;t1u.$03P$%\uQ/+u&>9`M.."PR^9mKiJn
%4NH(b5]?GOBu2;Ap#5B3LRZ38;8:YiGeC9mq!AIBeua)uM4S.RJa=,Ic\6Atgi-Bq=)DPE:q1PjG@\]&gHA_4>);Ph<%3meAW2Ql
%qDb_5)a44)+-&8+UcKTM'rik_CV;f,$H%LY7DU%6OgH+qbt.a)Y9$]'%R.6jFFu#qde!2-#iii,](k:D5K$rle@4_SAt[t/o<[7n
%2+UbiSkLk#,"-cG\>+2EhWVCRbmZP\r@^onmm82pX*_)OAcET@%c_A#7cXL"+$fc&.#V\-FjQ=[%7Plg4fA9pbT#'*5?`R9[\iWZ
%ohU&;rr+F0jJ-Ujq6qTg;dq)B:+,+VfNGiC[2J\13j%qa/%X2mIgG;080js>1@7'4pGQin\JcM>qM,o[E\=6<!.T&KAcEmj;GR%0
%)V4A[L@tEcAQT>FI(sSYSjn3g'TH;nF\GPfF>Z0jV*Bo6JVE32IkkiKnTh9e%&F$-Fao3rI'q#f(=KYRd$`,%SQT])Q\d5aj%>)$
%-^1'2PBTiA0nW5/'B#oTqUA;ud@`_TQ`G<lN+Gq(EjZ+B-kl(AVe3\*<;W!9>KBOYrIqR=KL9k\Tri5j[jR%@C]Fj84_/X--f]n>
%i_['6gDT\Ci7s"jCrdb6),"TX#5(9/\1m2q9i054?S<@kaEUhUN<XM<s7&#6Zr$:BB^>F#$J(!m7__-'/MuE#>W-=G/u:--/P)ga
%$<\Cm^(&g('0-gL.].JHOcU7-77Fp$Nb/#M3#5Ql+=?3WX;#4e^I#X.COL<-_'_aqP@8gf*ral"\7kn#`]FP#7]4uYs/qLt2[Do&
%kD&AM%WD<7WN(9)=5`G)EjX<7p1o*)jaB%dF=+_`8u73>-tG)DMOa<#]eQ+T!IOmQ7Z+PO'K`'U\,Q85IE3a1i6VGZ^\c3(qKE>*
%CV&kTRV7_eH-64ff$KW9)'^q!(0]YST=)9IrA+MDo];l5lG*Di@nGnp4%n:U?-se5(k+/"9unS2]TUa'd6q_m3s.luYY9ONJ/G2u
%@T?N1))*!'Ir,]$i%S2H#_KoIROUZU.jDaf=H%r']j'q_("%:+QiHZ,qZ$Q45QBi[q60hr5Q(CK,J#U>.3<+A%C]/7R`6=+?JoO\
%&/\Dt`=L^uG=>VBOg1Q#>YV9?Ju6]\A3<*ibFoP-<^Zn%p"nH!rmkC8kmobQ(J+maJLe8J#WT$a):?&+?cq2RIs=u^F[kg*&%D[X
%-lnYnBJM1c(XfUVN!bDdb.1O!X!*.l?"eGoV;K;XlG<a7?0/(BlB$:=5-BqaU=3QUG=,V+AJ!UBm)DJDTG`sA=?>l`Yrl(82!lSf
%$qJ[Mqt<]<T#r<\mp'?B<(;oS=67n;YLWX>]\VrK=ro2Z42[0o+O""IPdRNh$u(/!Tenb7ISe`RZ9p)fZK>Du"#OZ5%09jfW5,BQ
%T=MZ+Ut]HYi!QlF"9j+o":X@$g.em\[n,9!a1V5jDd)j.=j0m.BNjnM:iE@lF?Eu9\6Ns\EtElg=<%lc.%Rg5$Cp@AY_grj0t0>?
%_[+&BCjf8`1XWa:Zefhn!cWVj6`TfU0VUCFhPN!"8Q.O=8>kHj;jZY_44_9&3KA)1l\8ng5qU,J8P-;S0T;%\D^(`DM`,-h$uT"l
%9kU`eY3E")\6`N4D1uUR3?(A4!L_`EUhn^6PiU>*ah"NQ#ZL-bWk8R1Z5ERpC4,T\<0G_@lFh1M!Ej[?O\%iF3CCe(N\V\$Q/-$!
%d24(m<VJ9f;6rK'[9G!?l9aj95Lr"/glmP"*2nepA:_Zk-"Ri;oZ5-T\:%if=e0^sT,%`@U;H,80RD90j:tkR@KD_N!`a]q/<sRI
%p6Z?g>VgK<Wn<#_b`lj]OYT>.N023BKtKko(3O2LofBNogkcE8PB.8UK@3NI,Ak"[+"?Q85A`Cg"Hl)(0h>M*Qmo[4U"<B5R"\9G
%gHo:S.7U9=0<;UCWIDY88&#WV+T6eGli;IS%-7J2^"[ZX2YubK)JGe9.dB^N%GPPUUGd46kYMs2rEWEM$Q)SkI0Jacn1lOqLYJo)
%XocE6I_PoWK+!3@QP_X`3#["9/`I6W$sN''"Ehf:ZWb<V;hMoJQEqG`'VZW+r;]OBl\k>G3+2<XRje,rRLKkVZG@#UE#"(+/!i]F
%I:ef)gSX<F&%Om>SQ+1r-0:!0>k+Wf0E:Rgs7lWnjWFNuci<aSs7?9\*uFqI^]0)(r8[hRkPt)PZDS3if@*8>,KQ`'RF\2kLpUlt
%cYEM=c0<Ch=99;V^.=#nfP6I.D`ompVWjUc:fkDKS%*#/[:@Qrc)9g)d2@Ga#OWmhQ8$=`GDFR!<8F5R12i;Z)M;t^DEq#t&^h,u
%>YafmRhd*SU.CW&)sL&O2>WK>BGGm_&-"rYo[Xft:nO4/@pm)j;0uoNKieV@-s.6(JN]a7k#h+SLQRUcK5U:))^.ZX21#Q-J\KJJ
%RJsjGhI;_*ADR*t"Zg<_])`>s^-8=Z*^ke9$>V%JK()oe]St#Il-<!=2jM`@(jF!br/+)Q;kXJ.dE2G]ND<<<G9.4?H%aFNJ)F91
%oT'Jc>Fip!bgrK:>Tn&pS"NV#NpK<:%KjgDISFi[HH_GnWA)(<,qY&8.iWUoED]p,M2T5u:X!G%CMt20FWD_O.5VmUp3X7-&B]tZ
%%:tjJB%.`miVqQ>;^tY,7L-:O4/.e1^%P[$gSD)&"`!W?;R5\8#R[;KWTVW3=+p;4Wc`1(%&<%M^#">D=8V.,3Xmu`&+r`;LM;+H
%@O\Y6i3u!O]7V77AoLVPiD@:%JG1D7MS9sc=qmc*->0ELd8hhi9Qc,bBF2&$$I4=9efM1HfcN'<,RuF]Z6MRdd@)KGY/B[hY,[+\
%JkVMnMcBlrH_'etG3hO&;7g"?)2G$j=/u"@b%A;srJ6@l)BI'U?HEQ@f*Csi\b:24&d/ep7+PYe^-eiY_2q_4c#c`\#\dU^hOA7`
%Li!SZ^OEXJ;n8(in[kQa8p""<$0&<WB^?9H@U)jg<+]m6T8_LCIPVLA<VMG!8]hP5aS9X_6W^mlChqdW!j(>'KmcTEE3mDUV*PLA
%WiM+NiJdIM/'j^P]IPA'mY@BUIVX.'g;DNc;pRS6qIn+HWqVC`KOe;l`!9<\_C5qm#%Yo@m9JBT>Z.U,?6n#_Y(ab*%(3IHLptG]
%0N-.!1_)h7oj?I/jJ[u[:?N]r]MjR@M-f!L5@Z,5hZ$N^do+;"FJ!NoF1T":(^s"2JcW*2E1.&Y_#FOTRG<'rD_IY0[XjW]bG"=A
%9.I;ieVFO:cs\3,o0/K!P8)n:c-"1];rn[AYT`I?N:Y$?9]`UlFLG1&^'_@(b#9arFd@FL#O^31rSbY`>6MqfC.;"s@B!N$LNYWT
%6>YsGJ70c%L#?Zm,`N:2:Pte7S`?&R3M2Vdah-Wch.G`EgeV5!6;)_V<1hp!iGa.EOUD\[p3.$&U[?:K7:cjX.:;FPn++<_?+"oY
%HH_U09CKp+C@7abX!X%Bq3RlKAMF`VIh5eafl-)m](\rB0UDZ.=#[=Xjo/Q`W\f+5'8h"qgPbW'DQ>4hk>FGM7UC7j9a!qHd,8j[
%pP5rDpAC%p,Rl.bpBP&3e*pS`++A)Rr5$Zkf,l!q4#"/e5Ibt5$pNcM:EFP$+PW=LncrS(*jm6mj'#;`gKlG2V=:BrCm;(n4%n*O
%oX3+934piKJ^d0,iPt(rps;_W#dO.b+g0NI!eVu+grR+*JH2]!@UpIZK,Zuiep!m0/NjDW=8]*K0eh+%s6RC2"ncU)q##T$Tu(KM
%J5PF1Qc/Xp5VRogPe9)_Jm)IF2I^lB:_B)RE79;$>.V:.0cTO/ICchpSLrXcRm@L#1uk&@:m4OF=*I.@$l)l05MZ&$SP[TZO%l<#
%Q9Wg@4aH)+%'!-QD-"oS+tsl'WYE3"R3O_@gCc!$iN;oXbMSXaiM$@DNV<m(?2McRW0l%/f%+r=Q%rGGG754+Atu.JmJZOZG_Ijl
%1t"8\(`u7$,<Db'L&`8opZZXV:m4Dd`f_(dk3sfOhO$Yn.]k@P-RX\&2MU1NQ3R/j("DN/e._;pTuM_oToJL%OU`jkTqne<0OQ]8
%6M]OrDZM`+[$!s-FtB<C4q$KO`<@#8-Gs,j/8qZAg@(B*:b/I./'G3#7f6+Uf@%QL)+,]*%01<!#"NI@i=S=\2aFK/J$CGl)X*mG
%p5U1CeD!MZ2qCqP)SI@NN<d[^H^>O`?`,>oW-aGdFR?N)2MHJ4D-(jVRHVS>&#.s6YQ`PRODnP'SsVl.OIp:LnrDTAlG[(B&#Q8T
%E6f&Y(GAfcMo(bKPVIqsM_&/@T%>o#W3EA&J?PQQ7[?lS!q#0%(">V03jOsYJ6E:'0\<r$@DR&qGN"H-9;iqj(U^mZe;'jh=FUXV
%:c41'B^t;lo9ilE$CaA1HFeC1K\CA5"Q$5Q@O^eEWYNd6>J:dfDoS]%Al+9#UW=(%g5pruaV2guQXg0*^,W:RAPE?@l-BheE^9](
%@0>$>Xha[0l"1_th&>Q[So"Eb9VHoIeoae$R$H;#`E*IMb28)'>$5hlP`G/^!&\5MManAfneB)i%$sR.;$(kf:]dat"$#hbed>7\
%,qim=#?n[j%W/&'mK%(H#W9/u\92#X,,kBf*E:BHV>TjF"e7`8lA#2`h^X$eW&p?RRMNeSJcBu`j7Q0G^75o4Vpb@`04fJ>VK*L]
%9NM+4lYBm74W["TB04MLH9+G6ES/Z%<CLO?W>qbZit<eK=K1btK\ER[iMT.jJ%$ZPc?A2J:Z2RWU"27q=qrFkL]6VHe^K\#gtXut
%HMT1_(I#kJBuU5K@H%-!a_t&T4t9h(*X8^;-A5%lG?"=$>AsGVE8j[@!_0.h's91f>N@6W3:51CiT`##A+d25@'5hP3NE3O_KE.`
%Y^1U>gb#?DXe'tIO#M:K$IT=d*`Bl8a(s>%qEm_s]%iCLT'cs3aleWN.E?/K6SZ0$OKbZi%u?Vil-SF(@nFnJ5*`7AT#54O:)EXV
%$8hY>dAPL!GhNL^[iYjUk"cXd]o.lpnXUuSUsY$K/\$jaXT5YK!`eX:S3L35h'Pqj;G\9UrL<?U&)C.oBu,SOVY#%H?9K?W$uKm0
%ST.F5OnCMF'I)eM4UADI6M^WELe+i=Xhfm0]YS8R&+.$T1?7cL*H>XL2I7mV;`JoX%8^RBDar,m6Fi2=2@G4dll^t]SI]DAQ^'1F
%7j\3:[%[qE0?J".kl)C'LFrhfHW>mA%b&*KA7samYVCglm-CNXfIk-(>E'boMMick$tW3kU3jBuX_jUsR&Z25U#SL8HLjrHn*;Kn
%rk:DBq!F%ueAZGYVUku"@&c%jjA.A#,,P+FF',o'qI0Yoa><m%M.F-T[T6Ir<2d]32De=)auTsODr,7K$u2W>_=1n66WJ8[q"_3V
%gu7<_N*8Qe4D+[0=e*R9GgJaq$r)MX+ftqu6LpIR#o/pFQ;GE#BQ:V6G.@(s[PcS,dHQWJ<)?J7:l22IOUQQYZPCtg")4+-@1"*+
%U?nI/.n@i4?-s*_9u\8im`G]/LdciO'%%lQP$3?u`6454"I\jspB<S]l=YCD(_SjHOK6\*>qp^UL@GX*1jZq">lrNJ1uP;'9;i)4
%S8likm??'aoFBCKo3GZl!W;o7apNRuP$[IU2%&;Ektr%ob;(]e!:K;P!Eclp6!m\pkY(l/e&6B(4TktS^FtJ@a&.O01Y:mYdL(C/
%+8-"mLdf+4ZT8</LBS+s)<tWeW71RpHb6ch08ME.KK[LriBA\Z/G^&5Kuj]kW<aqa-Jh.Lpk]BsitjaCCq?*rnAGi.1E!!3K_XZQ
%JVH_q5.%+/d@l,Cc]`M&I:=t"NNfT_g)CKDhE`p<NK?YX=`_Lc+V8W&3O-72cW=uhp8CJhh"$g$.PBR=bodDDF1*I8^([ueSj=<I
%ML(g8g(h?/;CL6X8>4f-5XSfC;Orgl,oB1,_kBD*N>)`&@c"J^T"![`Y"-(k?r;tl./L0Kec^DtLF`>qjQ3oIoH]`bal%?\K::o[
%eEP)pB/-p;P5X=[9D^!G\ig=:%Wjk-U(^tHEq8<SY#R50F.Rk2$16.'[FpY_6=:q('tjh*"[b1\pWC=P:6F.I)PU7e2@FC>@\36#
%\"]n?g+B\PQSHWK$:>Kma0`7oaANJo25MkPRb"hZ:`L<!?pjd60l",&`4dssJ7\4PmFb1KkK+W?!Y<2+GV\)_7"srG[tjT8aWEK>
%'jbSJM>,cG+D?F3H,qjsOVZ4IBXdcNKe3*J]G@79(;i6u<OFV_2,d4S;mO?V%:o9.&+(/r1F[uWFe^'Gj16+2X]2oErRIp2.YTBT
%`%k(D?`@9D\Q'7-bA1,$AW"jSTN@Npq(q&T_Uhg5@+H]bY7l+Qb26e(c+Bfoa'G='lrHoIJh@fPK[S1X>A[llaWfZbBWLI0THP6`
%`g>&T5@;]k,D>b\qat^_/8I&KVHmT2RK?pXU:&U\n!j+rbsC=[1<e?di,4!7dn)LE8>Db1k-GqDJ*X1?.=^r".?F+5))^'K2!;?J
%HY_#Vc*"qO:=W[Jn_3`*l1E3WHnN][H<+Gbk.lm8*OOt9\#R*REDW,25uuE#Vl)NtkW.qZhdAA]SV3Af<6p/!:[l#:ljVJZ#C0_)
%'91QLSWTd;$f;VW!5LbVOCi)hB"uUBXRZ#*B)+5$Nu/;^*ECqUR#R>L2<^@k#=mVGfL,5&??0tUSuf%sBf;$IT&6Xq0q0S+T<Kq7
%KoPD9=nHF@A1n:g'QBabmEHg^oU=%FSpO=B5JhDR9c]oc%*gZgS[8XA\\MqQRf6'T3#:-;+6?WpaJ8e[j1G2VBkP"%Ml?49XlB]D
%..i<KPK@]&e+jh/;g`kZloKNn1S(g:e2Z-rp9g+?_MiR.7ENa+`C3kR'O.KQf=n(1W&er6_o#fqh[t]8_9$+njiGt'"DE2Bg<>25
%GHNP.Fb?HrEU\\O4ir'ZhAmchT;Jpm4p#fUT6Wu=<EA.jFmUI.&bdYVA(/7cA?jtkDA&Pr-!%aNII,^.`R%9?/d\YK]otSsldT`r
%kAnPF/CNr/=K0u+!uF-Z4E#%=CZeU&+7PGOFce^.&+iMi3Et-Lam.fklf+0#B'41bkagQ&MtGpm^E?:fmb(ORFs3)mHN^L,ZkE*Y
%$J>?;QIucW/)V,9!$Og7q%V4jMAp1c(D*BJq5bH;?(,TZgbf4\BoUls7@sqN[t"i>q%@U;>>;o&F&0CeAtp^%oAn*6$L#XG"\kDp
%B[,\!$SO)Hc"n/AQ-_41`*(pk5e18f^Jd+/6gHA9"(3)f$I([ciYi/YkCT@_ALdc#_chk#MgA`2H"!IjW!@rE:%[RWb3]LXVi[O3
%(NWf0TOX8MU$%t595M%;-0q*Q%;g@Ge5!Rudj>[V8N69Gelob^>Mh'`Mjqm=V42@*6ON#3U`4&@O`&ZPRskkT[H9fe3@[k`d$Ei<
%"^l-'NEic-8.DM:jtt,5XMp$E/%d0f)fd/pS@]H`g&;n*/b\$3D)#?Pf+55V$eanrESHO/cHDp/?"b2qSMFReXm9K:cu3e)];paj
%!d_(`)1gpJA%T:g@-4gDHuijJEV8i'DM7GCI6`LS`)0MEDIVK5b`$F8C,VrZ)DG_UC`FDB.K5X8:en?2BY(,L>q:0cgOnU)foUVU
%'BV-B/'2Niimtd<]i\3,jj:2lou0No^HU3bCG'EEe&>1&']**@XSlWB9Xd!M)256F8(=!N!"ESe/[XY3q_t9#X>d?BU)X,kKD;W'
%*mSD$6Occ%)JPNqeBlFU8[oMKB?qdUcFG)q[m&M!NlGo[IQiXI&\%)$rSkmV]tdPX2QVtmJ4Cj%C2q/rqpt_u<G7[:g0m#@Cr"P2
%AQo`bKW6iWC'tR*&tY=q@cCS:F4AoK!jRQ%q`JsXcWphHC`mGI1f"<(U?7^[rDVO,2)bk\Cjk03K)]e^6r%hB]&c6beLa]troQ,5
%>Gc?nL.=J8V&=Jm[nIg7o)##KPLg]Vq3uTCpISuY)L<u'*K2ATd9+ap_N$OGiqT3);dQ'<R3La2(K\<=.[W$aXij7Bd[GjmBoLP,
%/5skH+#N4!Iu4&5m7epD!U^3)GrFTYa#ffh;gu/=BSN'&F8TA/?Ib[+9<CdbS6=]so"fT0gF&hce+m[YPXR2H>LmC]kHiLroANV;
%k)dl$#$&q0o9lF-:6Wt9T?HD-Vi8igcDN@aBeCLJd'KS?g#qr%PgmYie+r?Oq=pMtRF:mt[^gcL/p202F?]S,5.VI`HTIdI/g&o2
%S3<Fh5*o&FeYc%&dfr'AB-LbZEtLgX.=B]l@,I8u@`t4pDV<'f@h$LQF#Sau'_Ms8WC(7cMZsEk1TIMbi0-#Wn`t(9$L`mVLQlRR
%)0XYjL;i$eb,-o9m.(0O6N.sJ$>isf@Sk;TD),-s,k8DdTu#,6"l`[WSkTl"q2H-@h/[OXg!?-:o(P8'*A0tWWALs!&U"-+e0t'2
%.DKae9PDG:f*som6W0QC2R@`<%IRZH<B-%Lg7>kN&n4GeV;8]S1trJ=(j0O^3MkOl`L"qsj+J@WE2@1t7DmJi'?/`0G\oC8^8b3f
%08Hltfq"dL8/"L+MX.q,qVq+@Vlad-En6>'Zt6S&ase?J=@+Y^9("ek(61<?7N<hm@BE%RUrQL5V0V8AXbu4<VaRMqcUUWhSTG8n
%3JC6B(C;atEXIpqAtOPT&RCofb;r.rD4-'`bNIcmlBY0*rUH:I_Ph<HTi:$cqj]uJ=u'MBV&.>=oe^TE3E)GPF3*jUn!H!f#.:>c
%JtHJ=cGpcHC!Ctm@iD.'A/TV[RQO5Y>(87e/5pTo0hF<E8DeE`k#V/X@[!T6FkYTHm^\K"Q@!CIB6t39F4!ic^K%Z\-'Di`XUBJp
%]X-VKSG-0WA22qDFk_X^17049_1p`GBQ6Ytdnn.KK",RJ=KsU1/CXSd(K/$\,Hd"g9<YpP_Of"uB;*YeOQ);`fk:gK]+fi^EN%45
%I2oq?#*mLkdn?`M>36`g>USb4pnNko;P:\UfiDfi-G`8PlY.Gf]",#ne%EnQKIYUF<lL7OVg[oWo**fXYYdn%0@QfY"6UXee0hnT
%]'5M.mu=#:M?aK4CG&k'k.U<LPPna]b*2S>?q+kD2d9e*pBK'?]R+Qj3ULU3B((_lS..%8K[!I&66s=gV>#^i3UA$:fD[maPL0*a
%J_BYRCqVbkGNV6MI(1',2p<oTq/A.1,O\i_Dg8a^]3IX;mu:%bO@`\)+NR!'ONYFt(n7+cKS70m;eiBa7J]9I8Gf:-ONa:W\D_Oq
%"8-]%=uGlrA]dFsX,CK6%e+f)2,Mn8E'aB;.7"_mN-[2LZ"G=Y),gA`:-S98ib'QWFXi/FMVkcQPPh_0@-a_39P2i:q.\W]Q4.Vq
%kGO6'7fma+^EJMadrU0s'%5UeUrU\A95ACYR<cOBSY'M\RHK.MB$&9G"N.7]H1T>*Rjo9+HY/k[M-H?kAtI<tF`BU5H2L.GFf6$R
%6Dr,Q,;HZFnjI*4bVMZD?apedhD4[BBeuC*4I_m.GPa^lX8Y3os'`T^LgPAbIoUZe:i!3ZM2T_Re<GDHBY'<#p"[*99eT7!0Ft\+
%SB'$W\<SR7(3%rgf#5"1Kl4*J2Dk";!&p5qLtm$;a&@f%mXSfteRBGBmjc6oC$FC<qY=6>.%'!j':.Qo52K%SfI^<Gpk[rfV__Z7
%LI/1m9AX6KALR2>P<nG*<A1;u&i6NP2ck'gO&qWm!T$LTglST4k]"ZMDJ8b>Gbpmgjus`NMEc!\iT=N=4q,^hA-.b;&?l;P\MUqO
%T!WX'CjkitnpG&Y34q0>6Vj="HTft+g$:XEaZb*u+\>^>N6EY@(,[q@,["eop*<ejMBR.^g4jDpaDa>9lHiS"FLm<<Etk]Mr0")5
%ki_!tco<,>LJte#%&(@g+%aV]=OuW*Pc"uREAI$]:<GA`T(>b#RtpCq+t6<'HWg][fott`mK[5%aLm],Zs`N],Yr3l2+BVEV$frc
%G5=@4?YO"&XF_@=r)(LX.=Ro_G*Bh(Nui#mbMI&X$cb%[2-u];Aok";6J9MRaT]Rc8eO[mEtQ6(G6Tg]#0HS+bqeLQFfjtnmQ>PS
%aMLT[X/aG-nJNT!!&Z^fT.QrP(k;>Zj4o^FW#ApRrp3uVfF\#?in61o]RC>,Y@%(V060YZF9:P2rlDos6AXHFVWd$Hec4\Bao#(P
%QB[G8.3>]b]/tiU4JjtBE20i&5(CPQp'SJuA,5K?1>+<%I'?8UH\tol`A`pK61rVU`AQm_qR!j^]<jYL_AXoZ7*\S(I8ZG,!o0[Q
%dH4WCe(leiWZg%+?dPn`=4Z8-\9knQYY'GX[C\co:!cAal-o&AX4GCA/"a)IL)&4LIBm3KaI3R)-8rU*03LX75:e*6XY:a':%hdB
%n#bkG$hH9.iT!]b.<*^U;%A-pV2ptsDOOfmhX\9,2k3![ncuErL,N_EC_EN.iIK3(@qTl9`:mFb[jS4`\m6Z#$#(HDMfamLam-[c
%:M&QoZ+e\&pKP,.9qCn:GX[TEU2-@Pl^@DPMpD-)Y@g<gmr#b$[70Q+RALJRqkE\!/"5*VS%IKCNj43X\4UrVS=qAMdH)_*e+o^Q
%lOdm%pVt\?VTt'AFiTAD`1-UnVj]Q]CG#PD$<=a2<1h]2_9=^?O*-'#lC6XCA!tt^AgK.?h&I+*X<#6#:$aYTS<#a&F&%R?Al0jH
%,ink9qqRaf1NR#t)gD#r')VI$QrhKjh-hXRM1&u=I27s,ZR#74mIU,*+[GWllnbuNl0::T`'1N/50ZDJT>Wq"X?K"kb3Xt5Am'OG
%gG?F<9'inR$d:];cYRT![j't#fOrb_o/N5-')TnYqR"^mg6aHd@\9Iu2;c>9Z_i\N`A8n8Bq$j\^s"=6D[o<ZPM#%>Beq(/Bq(8u
%7%.[r+6-orX3]srl/aq1cV,_*lcjejqtLA_lnS)>ba@$q)$;bR`'-g-GJ8o^Ajc.f1AA^N1FeN+T"-3A3SL'j)"EjCB8-o_<M+2=
%T@o>$9eVFC5$bJQ<&UIGVS-M1L@h0)d8B?d-E<K&;'1-[f6FmO^9Wh>Q7BrI\+mL83G,kAcg2!'#F31IWZ:I-?>!0O&QS:[WVUdc
%_!03b*MClP]e7E>\@p3;^u+S&4f>o<\NUTQUij/J-aop:d4IKXRsNnb.d97O=IMqSEoo0T24=12-Bg0gM:2Xpgh-?\^R:;KpqX/f
%E\)#[s&25u?$_s;]_kRojY4ILcXRH^naaG/ih<9[r6NmKD7KUaRT(`\jaY`@+['-1Vo0)!hZ#NW^(bW3WN*PcrI6UlOJ$/oM$ltD
%2DO<$SiIjEK3=A,[!QS%Ho#CK*LOfikZgLCEr*.Xq/k$?5kpbREY!8S`\miONn<tB,==!oj0M:;_`.9LLi.E&C4Mk>4,.pHdM+C(
%duY9"<^%i6lk_n`Pn1P(%f'](6K1jDiso_@GmLgp(;YAbXmk!HZZ@&%\XOut2i3p.?bo<;6)q"L$b1#oGmu#<P0OM^R#73t#Md[*
%RJ,ck1*2Tl-9BspqgPmSL2>b.[e"C$l\$)(R]H=J'tqr=,(S7q>mWE,0f-isU!7l/maOg,A(*>iii91<qjGcB/r(5WFR^bX-cTE:
%olA*rq-EE5M,Pg7QNC6:(WsG;9d42j]8g;44phbD]MD4)RDU``UnR$N.(&[W1h78Zj=MnubnB&KZ-+[*MtqTZ0W%[>ht54kWTU&"
%HiJI'q4:[Z8SRb#/A/O<8(2hb4KIbrh>:haeTFsn9qD-U\bC#g'A(^HIm1m\"QsgoT>>1#qQ`;kegq?]dKpkZftO'HrUY:p^:j+,
%4_9)1<i.%BcQQZPIC?>haI/@JASm<@?ZFK<rUN.MgT_@9gFi%\ga$@S+kubFhYH7oU'in:9t%7^X,\-f4ko_bl"iGBg%U6"*Lg79
%<<odG/sS/+#P,8Tm8l,^16NZ$bPCoq[$csr&uk*#G2kKIb"X)1g/^T0mGhp@.<GeuHZtT9:NQTUf4gXG[C5bm@X:'\;CP.XR7lWc
%-.C)`\$8(J(9)*ml919PgAQQ5ARhTae/4$9CDcb_nS`KRi2$9FCZ;\75gX<'D'<YB5X-$ThXYP',O[]Xf!I`Fc0J?2#2HdLYIrUV
%2!&U6b1-ZI2p^nF9"!H6_Y<]Im4qAb-ehQh>j'qCds*rofJ<]0`^A?I_kAnnV?qnPR9R`g]RZ>SJ#F7@LD7W-c81F%[EPpC^/\J-
%kU0)bgi+OA%"4QaG2:\jMc)HCSsd'u\8%G"2k7NKp%a,K@n!qs:3o"0J=9_@D]LZ"NSiUGAKcMY3r;C5M"l:<D@(Gcgja3F6#Gk,
%jCgN6E]%/%S:didOW,mc\#hFWdadaRjY(2H]$.hF/HTF+s50-u21-:X.LRuA[!_Qn4fM7d1n*CWUd$Jt7r`=CQ12t^,ub"ZXW9sG
%>GVHlm@`%]/>3PDQeQs(.UI&#M28d)OUDV4gDL2;J"jje(@G@5DTY+:^3U]+@o5(no_hb#3Hcs?Gc0=e(J[NKH,q_*__?pS!ag]$
%Zof40$;>U(Za?pc84_I1ac=etETV$QI*/j7-Ym;-QVPq!2Ri7F6uAp&,jr'rUAKI:[TDTI^R,3;YAA]COBX$@Ln.:%'6i0GXo"jk
%%5?Ld97'Vu#B%(JO'B(M^q?MaBd5ol-L#Lk\B8XsQt+VWN6j9jhJn4en:5%2%q/kSI527ue*TW8btI[C"(jW52QXf0Bm5MU\6?G^
%*U_%;;,=%!=;iKlF*>6DDK!F&n%LJ+Um3"(lpGUEDM"5;ZV>N\=djt-XY^PIfMdWE'?t^I29n_!Fb6Wb>Gm]RLEf@W@jpR+=`U.D
%k%*#,b[S@MqU;gF.&(^&W$-SYNHtq?;_QJEP&A@!DM[6q9>A2c.,'CHG]XcFHs%Ng:DRYW2kP!6mP@#QhlEOH8X`uUl9<P>>+]kY
%P(beId4#Xaokf>FH"M@[9TNXZPr]gF(j#%E`qh(fGH/6O>ORkL!\Wp6eg)PVFsYBI-kEkbNjo!a)KPGhRZ'W2<$<%tTiqTGRZeWL
%R_OTg'O#?YVt\bI1;5iG3G&qM6J?h47j1T@G<fe/RS@Ca-B$Qe=mRR`dB1B'Sq#c]-.-QnUA=G'SW[[:$%4u]5FO$!'&D[pl;pdM
%l%H51&_TXf72nuNM/Mnsm1"4T<-"=dBG^X*+skWR5,-A/VO&Su>im87Cp.T/j=,/lAdcpK-1UcYHs@^F/*(9q%pi;X8#H4BAVJY'
%f_aXN$?^5JQh&&cAVJ\jD6B3?l8Bo;lEW_i\(shb<iF2Dq5MOEIC%_tl2ItTVg&7+<dSY^=-N&3SSGPip)-Z6RdS$[,HLCE*DR\n
%Vn;HF4s>P%c,tWWIGpm5X-uTC3F$fBJ(p[_(au9i%pbcA2=#sO8ckZ"?BrNu1<YB,?Lp>CP_PmFmEhGu4^<5FJ(pZriA&T2LJoRb
%H+WRmdQ)ks41#<EnTNlbrJ_1KQhPhf??k\Vf/`_^LYK8H*VskZ;G;MtTnd%.=Y;ht=jZ@82FQ:oHf:[s1a`4/3F$fB^[bOnBc\oi
%Zj;/U[iP&5btJopg;dc=UV!'`ZYV6VoTVs'rIp#AjHJ86LV>2mnkCc"Zu<q=R52a8LK:PHBA:\\OM`pfr#n>3?[-7V)Q\jJRf:/k
%HWuMkm[i[[6i5UJIFbs=hC^p4hN48NKno@FhOL?V[L3UOV8pi0iLuEsAh$8D[*Ing4If"NGe`apK\a/m%TRXjg4ik'2r\mu:Z9eP
%(MYHGm!9-X*h&p1W2;92[!>o$BHKUBM11iR_F+3a7oV1tI%9?96UQ+*k-dXJK@kMX'YEk]P>%JF_F%D)qWo">DVO#kkjs7!TuZbS
%b_+!7^$sDJ[R6Nqc.dr--LNWal_e-&^[TV3+[EA?G\Cl9K:Xun$P2Wi+2"]"j2+01ji94S@@@Q7c*B6-8+uT36/@6Mp9!!77X;T7
%d(U6&J[o$1BV-40/u$PM_F&7@qDo/:oG8R;L]+I3%eX5,^@4rX+*G%5)J%R/(EV98;>Jj-L!J@oZQ-Ac7,$E/YP?i^Vt+tFOd;N,
%mHNWI6i5UJI7d]-r"?2,DEH@X+(i(QO99!5gS)HU2XQ3R<^ItrC6<[fiLt[_0%89]^@4sO1rF0ck"`uH/j-L:dWJ%5>`s2W/:2Nj
%$P2WC4#Flu:4(rnrE>n9WToh.p=Q=U[Dt1@"^NJI@3hj*TQl,s0=*CH7i;2:,Ob$[rS]]S>/PWM)Qk"B>[E4O-O!KMB`)A6*fgGo
%1SNl<eJEQ9e^;?>UG\[uL#I"JXKribDslf,o_#c%[_5e]73JY3)S.o-&,e!hTiF=%NVmQfeTZLblQ[5"f`'0L2E/p!6Pl<>^/-;-
%i751+&]kCAK@?>emWWD4jYRV_C3rIs6LF+39fVRLhhCYh3?qeqFfpD@dJKt`-&fIQe^N);\;jetKY-_b:j?e-*Xbb>2m:*iR626k
%jI8$cjY1X7*"GUAAiP,#D[\"&mqOh-:'X7(WE%:YcGkr\\eaP;WlNYbbj4]Ij5$2SI<FZ6A3%?Nc**Y-=8#_Q5?AU:1U3^j;Ra3B
%(XK0(2a2,:S*MUSd6@pJi^YX)Bnnj7J<qcn>c\4Sm2#QcUi._X-uEq;lY$D-Xu1\SIiIQ'aJ@E<B(HjH(g2AG*adS[_T:eBGhIHO
%%YmQ:ONgnf_4/fK]XB>To*9Q7r7]pB.`Y%dUSXl!"-RBs']A[D5"0HAI<7-\b0POXO?=7M=/fh[s.KucDMNA@8ir"h<uJ^T^=5s[
%DK'n#qHY-[j4/=YRU5R^(SbV`1:mGr3ZJTqT8'b_<QH5`8bq+;M(gs(@rT&#*C+"u!hj(JAPs";p\)PR;g,LoWQ.Ej/;1s.R\/IT
%J0'iEX0&T;X+*W)[P#I#bRpcp`V5M;4-tk&pq"HR&+g2#,U&J0#Otlk*U`XKf5(_B78rmgR=L.M#h^Xp^H@P1@Ji]'hV<K-56pWf
%K\*-X\)!%4Iu&E"^iqXeoNmaelhlCP8jdk8<Zh+X/\`n!=d6,^[e6X_&@_t-jh5m3i$aE%.TU;BFlg(D=1If8D'C[VZO$SIJ:nd9
%/OhV+`0#Rg@MGlbRKR!>`NE\1Bglb61dm3X#%@_L7MJm+`XuM2!Ee_bUSLjF=b)6%"WVP02QOmn.rDb@G;!FWN"ETQLLQ&%T/(_=
%&]RVC?o"c*js!F5#f5UZcpm;lYEZnli7%+KE4*mt2C&nA#@m'iVqgPg,1LL(D-,=;':mU[.ram5Z),i[k]11#gqJ^hj\h/A!1(u0
%nF#)81A'tIPl'at7_+0;lPGiBUu8'Aama8o0oo;8DFNMC_X:=lDGMPLT\)A%cqiIj$%E$1'IWWNGg2CD_>5td,eYLsN<EtUq/.";
%]Skd-[A;t<;Y4rrc]^0=pe1*GiP%C1ld![Cl\"6)]6L8rF]4"A1q:rG>l+mO-oU.WMt'ra)gtr:SMX\h`Ig>R\S<l,m*="1iY#DE
%SsdHk<aK+#m'R_\`u(6AX3tQ!pK(\W\51II`Hk$'-e!*;?TEOYNXHYaj^NEGk"Y:1iaJt=M!SFmKqPl2:[9C:6u4tVQ:oY7g4fH8
%pT.\LX%ItY,;W*4lgAr`Y4l29#]@<1*Lo&=roJdrGq8CW;"Ll?0+EnB0#q"L^n`d]YXa%agg2B#>2))FLEa\1/5NiZ9Ys8\5fMf,
%WD3R8dM%3.eH!.@[6=A>_"-bOJV>qhQrK%"LQI2E$Bq0YV\-"&U#-2Sd+rSelkDn\&u;s(U)Yu`-RJHh:j>d8=,=DAK\1H1!1$AZ
%BE\H?.fQo`GT[$o,d\\g$[5b_f0UU9%O+<<+K65/mVhe&<5'>P-Ia91YM[TK(OK`,qufn0N<op=-ll`-2Zs7E,VIVNMQRYYEWi)>
%+jcLK;Mtj<`k`-"SH'ag::5(AIR`\7KJ>;nP_YA=UG)lIUFs6]7s;l6mO$@4V/RC\dDE?)qXV,s-HIKMGO+s--`pA%/BLQ5o9ZZd
%[V&,<7Qt:Y>JsbL8T5n!"l<Dd1&UF*jAe3=MKM[/-0[jEH3qDr!4\ZB8n\rf1db1(J<(_J)]QZnag$B_kL;*jCb[Yq\=hoLlcqr#
%;lT0,X23gQ>"<KhUute@82[0NDWB*o\0<GFTlH"3`892PI6EHijeI@N(_a5Doc3E.qk#h%;Xd@D5Uo/;oJFK([9_baC;#@u-9L3p
%s,/W#W[=t6H+8Y1IcM'd]uS''b$Qh]XZ2Jmh;]N:n_T9?glmd^;,npAN0O"84\9e4Y\9:j<36rK0C<<;WTo>97L(Xa7'nEkX0GE/
%Y6&)iFB%p$;QN-oUFP9X#RkeG":ipRH6Og.W_Yq28#-06je\,fm:N)-j(tT`W0/DNP2;OZK><[Y7T/B"nkN1(P*V+<cpU%R!B#O(
%<)>TPUT.O],3Bn^A'LmY?9o5#2Z@b2Pm\HqijX1/<KqRBc5!!6L!]e'O6*+jM+U?C3F10peZat4%X1]T]fnbn]P_&mPp^8%L]o%?
%jm'SWZ.;*rpjaj\;KXLBNujDl%e&M9%'K$\X"a0=(NcMD!^PK+N`]TD'bQX`2VbDnktQH"jfd,*B(Oq7pAPuaO]OWf/beR*(9ukg
%,d\N\[(@cFLg-$$b65"1;CmOU$Y8d4U/@pHdFXDg0*brD'rd=OY)4cbTB\KZH(!(3"`[ZFN1RbK_H@Yfg_B!2S==e>6X68GN%SoB
%b,#cJ'9=bI*fdb7&55IKE)LN%/dlPu=W]YsaZFqF`TC<G:K8m_k2%k^7[lJdB#Nd4Q-Eji[hlS[h2?EaCWOrYptA3.*MD;EG=Pai
%pS^?&R(Q=56XFJeFtm;8(kh>%>-)fB;24b[/Ub_ZjEC+BjGQMW\9sJbo*3T$+[,:r*THn\;2__&0!@P1oW8hq[ubQfm#d"CQG+u-
%lXRtb37(a`3CNMq.tV$]dF$PLENt2j/tAcB,X#36AP?GI`+@miZd9M(a\qYEI8A7goYaaD1KWPJ0=3r^O=1U/Ps@)t=P1hg?PgZ"
%o>[CjW*P;K;H;C#I9fNQ^#p0[G?#2AT>ss/6dB-2=pA.!_RUg)X)GV9oQ<H)XE@:Qp`fPMOnp!Kg*Cj/'leAq,i%C+/gGN9VF:%j
%=.3,@#C&tb\^"oG8e=Hs8fJS)Da_mQ-h/[miBjjP;IpE.n$\<Aq/V/=6.uifMf7s\;U-LdAPQL3]KdERnI9C&TZ-YA'AK*"263R3
%ORs``Nc?b)H/>!P^/R'b_JA+BHRd9t-a#muLR,Y37;:RDo3lPN.IHdk%i/"X$kMh!jY\R'E.AjaDV/`*MM.RP^4a!u-mAs!Re'-P
%7pN'7bX>e_EN97Os7:[MbbC?71)Xp0VqKAQq+P*MDlDfW(5YB3X_$R-o'1W]aPqU(o.pJu?-%Aa][XOE'%^c:9H1bA5+tU.2Ue1K
%&o'1jo<)4.*SNB!pCVu]gN;:gI3q3=B3hUO^0bKH0=!PnqlroVXbKn`Tfk$+Fi#"0QURdq9/oT'ZrE!k.QZQu0?9%D[3b6n=LgQK
%_G]=`IO=p&+>+aKZ]>7Z=qS^&*`tlL\+DOm<pbR#\FrZg6kP)UE>)PGQLo=NXC/Be"+=75N*)-?WTNPUnhMl=<5SIs%b[FEA5KVR
%L:HLi_=[B]IH`-4'GZLoa\11#RHSFqDpUVeC,='Qg\L/e^+P6-;c;_0)_cb3"mSpVRrDDF:FjWP`P5G^P8AS7[s#!1kLJpINHjrm
%,Jj5ab>$j9dnPC8_Rim_*<GnZhQ;fj%$^<8*[,>JPS(ILAP_1!MeIjI$WdqlhP9)p='jR*PJrD]0&TL7p($5;gq&$#Q(i'e$:&+U
%dg4bMkad52)GPrDKJ3@G`=0+LG=G[$>&6<Llr(m^ASMIg8^TlF_E!uNFY9f[-5;o-YebLT;6CVBAMU&Fq_NSVU6UmCO/bX9=r!Bs
%f<CjTI@M,INup\daY-U)PAM@#inWRm.77;M*'k<[kTsTR;J=3MRu0u4JLdK*U=iH!Q&8rE[+VuCJe3`UW52_bXcim/-2kZT]*qs#
%JF@Etqnl>-LjTYL*bG</X/A+1,dqmY&"P>U_UERU,U[NJ9?SD@]W(a[_dV1>p:m[p+N"pI3`g=N,=npJE%nu#T_)([<am+hN5fb7
%r_iUJm=!#]G-BKBDK?U5++`G.I<%Pr4p`e.DXNaa8i4LGDA:,k?q8g@5HI;_CT)q^H$+oChL+ecX2E]_F1AfG4+>qcjXuG\jl5Uj
%kR7\r+tt8Aj'#;nXn7LgiRZft%a'<`S=Sn0T,(d8#>841:i)eu2kTVj&Ju<o7K`&f;3U0_]d0Gj,LRL@MLaPDJ0Ro)&T+J30Ilee
%a!\K[j^KG(iYL>YoL$V%BGPQdK.]^>kOmYjL\Kt@o^$-kGhqXB/.lfTFej6VM[$r3^B1<M?TtZ[FP7%]+p:1O_GccW+&RKAYNH!=
%HfTQX:+)C6[Bn\*WSP[G"p1^!l:FM$rQ`B&`P&J#W*J\HGs!;p(j6`LG1>a-BY9f2RYBO/#fgpC/o\Og4b^]#`R+<heaIqMTL4&D
%]uA?hfZg=#YVA@c;hi#mZ+[1*io2AYqKKkEMfFu\lYB._rp]ZT"u<Rj\*+g)#E^0#dW9mt\-pH]5Id9qq]k@HP<[^a,#R)VI=USa
%Pi!YYlDVfKDYZOZk918Zj0YG5"gP9Td')08<sMrVjlc/f^\![OIWmsBV\_74Q?*n%CNR010X0:<U2,(,6bIsRf&&rO6O'E_[,n4u
%(_WBaH*poL54..N3<Wr+.ITUA;tkpRQ/2>C:48[S?XRu%N7VWXaoShoiuQsI#-88g26^;6D*A;sh6NoI@Usr4c=s/5giO`p`"K+b
%6bZq"[q"HeKmZj]9%WmnUKi$dm,jb78*/`*.']BPpTnYS]CP_O=&$CKmClm82G1m-`c7a-GZl^pl6jWaZ/Kpfs)KBUQSV9km;ch7
%%!F`?O8DT#NQKpu3$4+jYE8:_?=BL.\iA<3h0g#jf]*X.#f)U]?IGP7jO0t@lJ0)90!;@4)stl='91oLT),U]eOoN2)R)KkY-n%b
%Z-Ug+V>jWt[6]uH\)O"!A9/-)Go>i^h[_u*B=t;\SfZ\O(o&=%`KsZ)R%]_q;DB*G]LDu%;;C![s#flQQ.IQ<Pq&DH&_ck,V$j+l
%n_F,^g87I^XP=H%C)WVS7CZ.(Vf4,&EaB+&S<d0o@%UGuYh(:NloN(q.+4Eu(44T0?YV\?m&1;k'33oKbd87eDa;"RHD?7F5GbO`
%quRp?RHet(E50`CR&r1C.YgrUi.bEFW]ZnD](;615+Wa+csi0n75(-UZu@Q:iNJ`?Omsc%;(=H1&=qErA)j,4>W$L=7Ea$-3Vk4i
%Z`F%6[^agZ$9tlR3/I^0NP5+XcDK.6?3J9#pmi<[UCDo@-ku6ECV>L41po4s>AYsYg4/5W`dFaqlC`KGHPeFL2M:*&4d:L)iZE<u
%W9Xm</,(7PY,)NB48b(jjl/Y4;VCoblV17Up-`feRMB-7]IpbO3Lt%YcH0p8$/2mlr$+>e_tW0%T4_(4fNG)r^hN(a@D21dc_d4C
%3go,rdU";h4&/`;fp%[/k)D.B@,p[@5Oq7T&VOqSMe<Y^!K[/P]>1R6e;]gniTJcUHsMBb"s1VBG6HYQ)rM)dp'4r2_=2t,R1^4!
%ao0sYi@G,"2J5OnREFReAaUV!3U@>OCX]UQJf2hdBeAQe4;qg!#;@cPbup#Gf_V2rC$Q\O(XMKu>6\;EoC/Zg@!o7-D1Ff?l=87(
%S%/0X`_UnuSaAMu:EtWr9]o4;%>Nu&SbNZ&=3?rM8P3X=Ql.Y!(q2;M/Pt[+mt5Ko*PC50Vr?ZD2ET#rEq0@>kr]lmi`^\6GY^K2
%SNOB]W;@(PUN@,UfCp)^kE&E1V+28GeiS'#efQTD?%+oHddZ`REph1AQoL;6kEMJDBZG0:ClE2&.mJN,f?:^BrPQT:a.H0YU%6:>
%ouN0<WIMt\EAg$QIAV/d0_P6YU*$0p-9\Fh5>-DuHE7MP..o=ZIH35p+/D(I4gf3WOSY@&5'fEbcVYdJ*eF,ql5S<DGuC8LrSsF[
%J*:-g5@k=EL?="J3)?"eNUH_k0a'?B,nB]bT:'i`82toZF=j1F1>(2D8:0nI3='Ng][UC_F&R-$(g^E*&$FHj<@V61i]d>YCAd\O
%GB.`Fg3?cJ[kVTeHun$+lCG<.N<0(Ahn&ba/D*Th9jN-Mr0DOOY9s*WI2hb6^"UIdi<XbZ?]CS*K^bGq!Rn,A_684n:=4Vh/$\[;
%-3-75l-K%kFo'kU@L*Hs8LS3l[1!fbN-b&H:YOP&!d))Ymp<3L0lN]i;)l8OUeaGBHSD[FhrU^?4pQp<if1,t`1o7)3<&<-S)#%>
%b9Q69,!<B3>:(8O@NsV&qlpd]TbgA>@K,t,R@`ku`q%f8=C7"g:liPnL7t>iL9ueE4^62R+5O-+q%^Pn#>8fUI%%-T3(o.f@9;U\
%Yd3MC@<dUK0HQJHI&]^;aV:UC.#uRf,WlWNMLpW*rNUs0)_E,J3]rcQ6/Fa6"=OoJ43.1d3]g4Lhg=;,fHXq3^]P\P,OUWV'Z^Li
%'I6X"UPg4\(^[D]U%![P1Op/P-nhKY5:IYLM9$p8H$j;E$u:`eKCiDp4#LY!gGV$OZtfXpCDLcKCIi($"M$HWd;5\J)/G&VQ&s`q
%OD$^C)a%b.2%XeuYJNgUAAmLn5QF59Fb7gV^(!%C.lIcNRIMUnRenuE6l.PFkOt+0>6n%E*.*!F6Z%A:bpe?@5\3`.)fF;[HCt=%
%HWmkoG=%?bPrHrYW^q]3lt;BeZ+crNK4E5Ap`&,]l^9nYD5b*]M$Y#Ym4tWGVbet:2cq$.4`.a&b(;tU,-Q+^p<gZi6!'Rg1TmCI
%'\%,kD&X7\k(_\@VZg'qRr7X!mA6JmC%cC_S2SX)%;Ik>b(3Z7g4PF7m/#[MOnPsn+&6MPdca9W^q+EGSd$(u.W=$b6=$CHrNHuh
%DEFOrUo0XXlY^rGO^M^^edJbUBbtK"OgRF-TU8ctWi\RQ[F%)&WSG=5arP;m<;ke9?l5BcE*bRg\sA_3r)o*Y`m/>3qFn>'\C<E(
%Ot:P4J5&[B&i)Q?F8q/iq,r.Vi\Ne2de9pk$Rl>XlArJ$ks3R%4*^cP<[i^D1#lXbdf[X)c\!iF0F__l(<<j:4X.63SMk`C8MB%q
%.X\\1Er7U24GjY**b9tdp<[1>&Dc\WDsajC=c2r&)\4Q&@1V]+XM;#0(SKol54d.d&fPqdXE+7CZe?)?2:]8B2Z`\in>X*;(Ql&'
%<=4J:6^a`bj]b1(R?;@BmG'/s]&ndY\$c>#YXX.W6i:VfE_G)Rg_!4+B#J3"d8a?\7XF<#&;6MbI\7,iPL^7bE7er&?>6P/U]0tr
%n;4?)A[]%$rCS5"%mn9(><6%[7e+G4j14ZJ(r!(idgM9q;"7:hB2XG15;L_DKL;Jjd=(UhkGO7K/SC2?ll70MGT:Shm`;HHa^o/_
%ZPc,he;1&"WS7ocLO,T>$NS1t>9itg#^s2&>LL^R?q\ccmGu7Ob1Zm@;pOguLlJ=A+srqpF*.UU(LJ.JN?$4\#;GqkLK4@p=^KBC
%GMp9F?']>4bL0;qaT8n\5WLMWW'OT5KZ%D4STZ)M]OdZVjnpt.ec<[S1XKDT@(gcs)W-bWMhTr\m_!_Fk=67Fb]Cin;Z(p%aHZ@&
%)V^<=2HruR<:&CfL.IG!r]>s?Grl4eZQ@i7D6>)qZag=aWeaHtjd_G,6Z2I.Y:`Y4Kf@dk_!f<k@i$:PgK<Xb_mF-rP=1r"jBj&A
%NT"2q7#+u8O.t\ljP\>OL>q7:-cROWmE4Hpj!3GU0;W)r9-ETeY`!th&(_Il'uO.N_+Db91Nb^t(AH+FZ6R6>h*d,*8f\nU7@8Cc
%D?Lr)c_RhIVr7:3Gf$nn+;'j-p*[<hJliIE9L*K<%G0-j#+qfV)`IGmcJ--?bn/cSr_BV:@1i=AX!93`;[ac?LoC.Mi]>ICn:4J*
%\uC2[hM.;p&5hjj=l_s_i)LL\`0%'NHA7c%NN,_h8\?1Oo?)!-1Km_`bSCVM9H0"7[P&0Ph"+#;&Q49ZT*D.Mnl)+_7a`kNaR#1V
%9,m?EE/4WcFpI]L>QuXa/Nm1Mo($OnZOK76W19=a#6[/MaZ3HL^JIa%CCi3fT9Qg="*'QY;j$%C`2t4ID"Wi7Cs&*]hhB>4ZEX-G
%:G6Ou`s,s^I6Pa0KoN(9&]8DQl\NLb'1LR;EQAM,BiPitipNt?Ykbk_)Tnb#3amZjS+UO_rA@gY_[2gmqrHXgc/5h2l&DPV2SG6@
%YSf[mcnifD/o9;K)ke)!C,UAXC5#@`m&RG*YgK%0AIpbf1,?-&p\o-KVZ-:51[8m^fR+1,(H.mQ'4GrYN)Z&=-N5W6S:s[G-)0"-
%ZoHP@Rin57*4If#^@'?M*tKn[S+T;Yp$Lo"%ju0W^+t0S2Lioek5BXQ@IsJ8,&CT)Q?#ZerX@&d$QBaf;[^S:RZ/)<>%*VFj6lMJ
%oCUJhgdPIo#=[WkDX4ar>fIX3eA&XJ]GBd:@WQfoOWMPoPg7#Pr;B'f!DLFa]RLl-^SZqj?T>U02-<_P$KErJM.:SA*=b;s2oTBL
%-%8fU<A/k[S&+sbDAo#/jT`:=!DTF[ASW;]SBZoL\'[B5m4]Rt%8k?t6(1T]XP%cbeQuC7hmHpUein92[;pO@G?\`r2>W"f\/0j)
%<7$-LGr@g<qruR'\l-hE(@L^PKkPF0e_tIoX&7XYSR3'=eV?YG^QO38U)FO[<DVmAe&rUU2qBiJDeSPh4.:D3W0\#M$-hA%bU<a`
%D!'tj<,aN:\'K-$GcN#Z,DDpIhXlE2ZCns?j'H'*c6&Dq'25uPO<70#R-[H`2ln^2-&WDMQW6*^_O@H33pku"gr#uT-L0(&SIt.(
%#&e-oaVPNI\9/b+4f:4C+q\^oRBYE@3fLjCmK'GG]7KLi8J\PXR=kiP&E+-E'-)lJXTWOYC"sN`2"S*-7MI>8k;K((/sHn('nJ<<
%`!i0b]d$RL^()iJ:q-/JUOFkL<oE>1?MHMV>gr'1V:PHJ^?p/qlien;KlWVZQ-i,BMo3h0VuG4C62E+YCiD;p^GX95^,W:>XP#F3
%Q_r>M:gKi.K?SrEc+b^PApn:9"t:Ht<B6ZXk&h;l,-:jsbbPeRT"k+"D^cYrj`e$Xqql?K'WQn:349D\1,rp`,)!e3P"-6K;D?cR
%agmc'hL*8%:Ur4"dXlKiG.*E@Q=>WINV%:$#<5G?4?k3:I+e_cT+X4LboJ<!-?antMWD#U4%kL\Mk-\5m:_=.H!`3S2o`r1&Nb)\
%Wm?,`lqj*>,gXen*NVX"\dfK;)+3&9r^I9TfSQ[t$:sWrcb[S(U7'ZMRZ1Q5;F6r&3jBpm=&2KM+S-Jh%V>a:_D@\6.:4ED@Y\Rs
%l0#tpech!>cb.4,8W5AP4S'=M4ug[$W:8#8lnB)SVsr>pS]8V:?0i+V+F-e+^"B=6hKJ(g*DXD;RUYk&3sM,H1L^TbJ;M.\`6MIA
%C-+.QHJVjj?l,qY`(oFY@n/#WnqUoBNOUH]W62pj*o.Pr]\(>`eWdh-d'o2qHCq5=,p2UW14#_<BOp(Em5oo*6e"F3_j5buN=/8J
%^j,;ScGnXSS4QBP*=7(7I-L`,Y,:fT*Z`cTY]/lpH?:tWd#CQ9V]9r!iRF9V7gC9`cD`UP7jk*1;iq,^:)t:7:9q+ketYUJBUq3+
%6;2ID`Rgkago54[h[SYlUVhX;GO!DmUBBhAX]%_/VEM%O#MaLq`BssVl'hbdYT"L1deNlPb3r3R*sVLT9d2?Y2bNs<A5oVpI@WE]
%+h]"L!_1`I7PfSB-n>g?pRQ$rd'5-rc0i$Q.U?ZADHN%K3:0kn*+TJ9oP4?4AXUkPje2:4bWn/4-D/+4R3AAGWS/URq"PLTc12b7
%PK\Qmf]P'7,FK_PX`<*`jYJkD1TW).gH(`'ld4ei$t3P[FhV-QP/6HeVRKNN87jOVUWmG=:GN#LDJeq^%*8neWUE!<!H\?;,Z^@B
%WO.,&KiYC-^k65:%BrVLeSSS8h;ot6YBK>/Yo0AM),_H/?H&C?QX\BPpI[paNO%%N]PU6V<lWD8Q#8F=]2qpK?2<]0S\iR0O:Ya$
%DIlRoEKck[Zm'%\&7L4B$6j:Y%lp/7]Zpg&UrJTrQ#%!M3eTMV6C:M<O=3=GM;^`d5Up>%U6%I<Rt1G';^@/\%ho9]eL4qJV4=\$
%dt1ikQ$=A!/tt3'.qWHM>RlJ?m;Z*rW!H)fE[tA8?*8);FuP)TANVr2a@*Mb=tSTrmfFCB1";uI6[,)gEi5;u"tf3k,?httUd1HB
%.#%O[YflK7S^9nk.B4ASEiE&&i$@mSBmY,p,"Q2SV2jh&>GSk0f#L\]85[pd\m#2l!N["\5'AF_(,8:bld3isb>`C-"XHKV!jDB3
%"#3gAf4?aH0*e(((q&'lCE:pFYNL=6Y:%mN7`*kSD7e/oa$a[aCN8pM<o'Y(R_c4T/_n.<M;;CBrGnFdJC&>%cu*;U_'S;V+pt]H
%=El[!UI-<S;d!4pALk$\]ua;"G+-%4'f;t_[`gk^=R>fr(7t7pF&-8ca5;S@`(k%,7%1U'_8:rj%Pp`tD>p8!iqW/t^&O&0nZ`Im
%ITGJ'e5L][igd*Pbpm]WAeKm1<0*Rr:.-ILfHp"KQUL-bNj95oXMiL<d[h`p1'Q988/qa:$QV$[,6crh-$*KnM[QONAO'UtO:eP@
%bSam\@LDNc`L9N]H^TO#MiHH\-?f25"r4cK4Vaq.m:a8>[=R%[4b7B:\%kQ<I^f2&%1&cLgPa@<6Xi%aY+0e7EI@DkcJ`a.q)$[8
%gD9e0RS@PdDc=!iKK`-YB>Uuh2IR7Z;iA?(L3DJbg`>>r>Mg(ea7j.jkN_'rY>_bV4`#mce83JZJ'h0>?s_iu2HR)_q"E]1:cXVP
%dN%>PQPeU=$r'alf(XJ31)2_APj?5V+dTW@#?TU`]:jE`R9M&l?+=\daf;,&@k_mQ,`;(6qmJlP)A%IAhA\R?4[^8cl+QW7;b$\c
%2_WFJF51`'c*WKM2lBKVrL4mPg`S:'%\f?DE<F\=q&g"\NZ2P"e'rA)gtgNd;./1\C/1HF;dk_:mJb?;&j+KX1(UH+2^G?JkobkO
%*B1pgl#[KUbbn:An59(8.&bGr]Ys^s'KYkt.^;`XY9:"alWL$n>Z]ukkMQ=J+L:[RSl[REV[$'1SVV-<+,E]s8E'oZRJ!)8?:m::
%WONmuaMQJl)Y%=J*DTRV=7LdHCkmXqfK&SBk+-I!!U%foo:9i[q-^rNDN'AMOe$Fo`^T+K9KV3PQE2!>AJb2UZP.esj<j<@YZ]1Z
%E):]E::O&5(XNf+NY[Ss6-7)@\,hP&khjTGiFMu..J-EB&59DDN]2lqY*FPGh$&^2E%Z4SJA1=:=rCI7CKQkT&hDs);XV;2fUS+_
%fY55>-@#I0WA5cFZ]##`'h]02cE.Hh0sZtaJ1?0S:nq"p'1bT-k&H^(_K*pSF399a<WBmpW"9_"547e*T91p3a:N!AB0#!0F3:DP
%X8YJ,"q)<+ZlbGe8dYeZUSa/0[hIAEIQm2dDC0!mFebJcFaih5DNgW1QOu/=R%KKsL1iYq3AXUr'M&6MB/\^nRBVC8q:>CnoeoSS
%>e3A"'g6.CmnHr2mafh'rlHngl^hLdF%=lXIUJrb_+6@QinSD0rUO'gZ<*31`>^(r?7sAkIdJ+Q!aW8*,brgKF,GXhc[YhKS9;Qq
%$`$,eoi-#)c^6_*ke*=I+4sI4qT.oroCU@r3G6t[hAlJMAm-0L^6lc%',)tr1M4oMk3cj\R@%[H#A-U*rlO"D%Iu4LJM!G.%*T^i
%1M4oM('Z]>5Hpst(o2\I+'8qa`aPVa=@$;j]I=TAOsd7O(c="_RYlV</6>duY`Bf@7W]gmdk)`Tkq\<aTZhuH#<i\/$DTQn5\j@R
%asq"P?qVk$%8N@54C@tjQ^m;m/A.S^j\t47YSlOXPRlY@0jSfH0r'1GPY[;!6X]$rb,9AQd5X=Y8)QRqYI_C43g;:n`:77i&B]d.
%CI@p)8pbMe7r6]#2Q?N@2*$l#K0L$lVoJ7H$uHd&#7J@AadKV8.<p%Pk@8D[.)#r".\f;e2A/f(H,Y1>H'rfNffY>(jF"%9PCdH<
%!HI!HH43>XE"q>')X6A[oc1*`[2a8V1_Cci(Ee72ZB,0GUt2,blobXpc^VJE1?.S<&2m/_f==k15gEa\K7fAXjijeti',&,CHmsb
%%`2gqElL-HSC#9HS>cq&>>ll"j+Um&NU#U6Vt1-P2SmX?QmE'//He9cBCpbt3]T!;&pQbX.rTDn+/l9`RHL9h&$4JI85MDiEMjCI
%mnMp]iUANG"fm9MiABPh`u<#U[cOtMk?a0@b%\fKddrei-g-5FB7rO0g3mDPCePHA1FGEVj^1:tV?]>iV%_MUf9V5ldGh#t`4UMj
%rldQ*f;DE_e10ie=i`>Sq<LeoSCS3ekl_1o8i^ekNA'$Fpjj=Z`9)*Ra:9C@IUEGqqaqt3"R;!*+C_>^!Q+C!$uTmS8iOBS+Ca=8
%IOdaordXXuF?,@$=Vq"nB))q"8dd(GA-<IE7#@_L9@PSZ[aMmT8kZ,tPhg]cgu%]+o5Dk8+mrRZI>EGaF,'jj17?A8e`V%`=df%r
%2ujI3*"I`WQ]u+RE+eGE>,1WYg&*B5nblOEhe*U21S_eoqEEYlcC#DJcj+N2=ZjmE$<3nIYcr`1Im^-JGR!?E-9-9Z"^$"Njs`66
%V<sQALO8;"gYY!g8pf@jD"P'%<FH&ZT+0W#[]k@tcSd-#?b[qj[/K=&^B[)6QX4C@]REdA4#h9bgj%F,pY!R,YEeEXc'l(./)>na
%C!Wsm)^'ZWotG=G*e'saT9IU`44J\hF`L>qDaH%C4"!gBFr/[VoC:j*1[=l96FjVr?iu90'o2!4422iQ2QXqZZDCf8g[N+kj09'Z
%6Rg7(Z.k!NfB.H:YtrVr>0@_c9dG8Io>KW@C2PX,_,0a*hH!os(:ii(4&%&PTUVSNe:9U6(Y:=S?2"T(-2!8)o76mF3<Kb/9&$rI
%>hB//m6,Tb.Mn[':M];^21NQkDbsK$3fq4lp9m%cXK)O'C=A0J]Rj0n0n5ms<"E'+Opm8HFB0<fdf6=4S,NfTQ($pp`SYgCV+j>M
%h-Dc8q>#p5le@0&!1D%QMF"`oI!%SC^pSKJ-K$qpV2iDgGBN>D^3k"\_Zj@Jh1WM<fY$\YGQ@/<Z?dE*=EZI<aZXS+Z"tKK_TF<(
%.76o&nbKZClYl3-D631a05mljgqU;krkZ.qKtb+tk3C-Zp&1pq`R=_0?f(e7g0@p.pLJ.:i;D_(?U+C!b$?H)G9>o$=`EOa^"L,O
%5B`BNF72]>k5Rh>jX#'+Y1*rdq+#S[79EV2Y&+=s*b.5B/kiEbBdrOMKaV5OR?M9-cgDkEBSQqZ5M^Smd*Z-b402`d+M.FKH"]UT
%bc\mK[^!N>5/k2EX#Sm^E^P7TGLtK4fI.F%3N:3m]G<'Vj^1'^CL=%FO'^.d:45(hr?]XXNE=`e%_R$]]Qj#7MKnjTlLgd[&jH;:
%E4?pF=J2$1M9&mM[T9O\[:s3K[\MX2?Lila/Pr9i-1O_NL_k!<)\@O7]:M)$Pghf%nPW#>mUl@:&,>1Z&k)D,n`%Sp!Qs,!Z2*GE
%77a>Rk3L(I0C\Kg$`b*45e54U/o+$.ceeEsL6,1qe4MC/lGH%u.c5`S2M/Er#3WXX2V[fq\#4"6<o2Y0gt\tRcsg:`hd"ii?8',p
%hcdSciNb[Rg,<s\8BBZ#X)I%Bforh[Dro:'`o0l]qrYn@A^i[*A#Xoa:+?]u)ar\FPD_@@DGB1S9q@K.o<?>3RVj@#7CI;sLJ;s?
%1nsTO%\$VSViS>XZ>=etD&i:>4Z=h5f"ot5-\tj2bcIYSm2k->K'T%u7Vu8_\?uC#@D<jZAj^Fd1;[XhR18CPqSKV*/aufthj.?i
%I_;3?4b<b"C:mn>nm+:(ci3e&&dYR3OZ1^Z03=]'d\8-smlsn2aOATa`-fB]oAY)lk&f@VUZh;"pAJ@0^)pV=WSY,9X>c:FAc27n
%;?C5(?Gb[r<k7i!aXrUH(Y(Tp\o.B@-XYh<I!5BVYDu4.IT?FDrNXf;R^KnY&g6iWp\-&Hd2W&5OoVW0]mV)+b)``dkpWS*gEjGg
%*).f]lS71ZoQQMKaV9$eVK>abO*d?WN(eXEO&jC2B:@TO)`c\J.ILdpDG$U$hp:,Ci+8.:].'/+Hn,Xl0tAd;p1GHmI?iYOH+K_u
%MNl&Iq]X;`fPA<BV'bb'I?n$YQtXl[:G6"<_RBQojdP!<!pS^(A\eM7%p"p:/%2g5^UV#JC0f%J"eR-H-p_.md!]KNSeE!b`fO'k
%i/uHThQ&g=rl^MshuC8AFekF(eW3R1ns\!9G`k7&ALXH)fc0Xa/G!A=jgC\G\'/4Y5&I+KJm,N#f:DBgj<]lG<d'<gRK[%kUGh+=
%[\:Fbl*n1[*8NA7L0<BD>u+suVoQ\Nh7&VO5&nNc>NTk=?PN*UYMN$P#^Z'b0AqU.<Auuc;iO%/+/0dhq/uN-5L2S\LlF$f*?D!q
%^"b3rIF@OG&9T1od>l4CN=s8.S9@lEI/%QXfNNR43-jd!U-Ka<CO9<Qm1C+R=<!96R30=XgW6bd/G!A=j[]>11SJCZ@!,mu?-()D
%SAG$s1";nU/i5f=F<Pr'-7&3;\[AHPRjWRJUY'g5aVMX\^h\:%?"cVM]oM$Y4bbSbn(Ra=c-a24Q!XK!$^.bYbp<`IFoH[Bc-Ep'
%QI,flWdU^9_^sXb4MM@MUK4K[\l-7krp$N*=2.Zth$MPU>SH_R[k$%Si4$alp)VquFierMMn2tFm/bk1<\$^D^Z.,[NpXrZEoS4#
%SW#b)RFMWeoq-':*HE)V,@=)l/2L2^OHZ(F,3@ZL-aV=-ba=,sl"d7=/Hb&3'Y]kL![Cj4RoOSeL9DnZY3(PSQ9]dLi'un_Jj"Iu
%jk3h=MKcNgY1SfpkQQ1?g\$L4mc]qUY6NbM;u0\SY1.([p*Sp6N>sRCU?iK<L>Q/4*VN+%Ou"&DFNBn5]Cg,mq.%*Xfc#]*SmTKb
%:"krOVCq0hH)o=eJ,aRu%78YBo$,XagZ=nN#r`.!<TDCID2oR@VI)=L2mWcmP:Pb<)?nLFfefK/2RiQ:@N%9cBCG'NH'J6RhP`?X
%&^3<a\Pj?+>>sFsat<m)*DlnWrLMs!e9Gn=QniOgr0T+%]5,#mK@&WLer(OpKrF`s!3=>mmA/N^rR]/l@e8jK?)=G>[+[,DL^ra!
%^h/6L:eG6Ohd=@9,#k67M<R6t2A)2R>#bO4qYY9&CM5G!"9/2Y)OfLaPg@p\:LE<FQ99\'5)?4IHl1F_q;2CBp=^@gq5Tp@0$0,u
%6fs>hPN2^HR/D\4X+OC1C7rJ0>VuplK"k@NK@e8rlTVEC;CFK"G-sBglkS,*S\(FUHgquI#I!51(";Nc96E&dfk^/2f8-;B=(e^h
%7n5E8*,bSW=5VIGJ'peg-Uu*t+.Y;rhn?B7kA>A,+>s.GlH`7O&U';WSIe#TT3fmJc>A"@cWn6,ZStso?01QCc<O3pak1`2-TZ<;
%;IJiPVsX^gIuSI118hPXYm]'dC*QXij6<>sbk9qF,cG)JlbY!k%;rLT(?3<ikmd:m^9>MM_pi^>1D1\\<r,OHZJDg<boPJ,0$D<M
%[G8e65l)6T)i=.NK.qVt[(4LP3W\V&PW_b<K=aoujGTa-=n_LWQoAf3R_J.QiJs&ih&Pi&'V$t?P`t<=FhqAE:N#`S27H+V.<BA'
%I+.PZ>CL;$r9o$tokY[3ZYu]o]qG(#`mgas2_R@>\s=*PEb->qYVtUnjU5kJg>bjiCds"$gZ!jpQh>XVfEFN5S^c@LX%P,9bF^<H
%iTB:h#ON8)A$5:G9KbiP*6$VfOf8SG\?i.&c:gB?IrdG^cU=Y%&^:=9hqSerg`obDq3C80nEl+dUh=u175KtKke>60HAjIq[/7#D
%9g/Hk,+<h:QR[hLBtssde&IgZU'"/r>7gRZ5@l-aJL5J.nAo3[fLrchF^`=UOWVd#1QeZWm5G\_HgX[?l7q_%ZOFbErm40Ap.T#^
%Yu4ta@CY%@j$`'m_JmOSoo*/$qfi=k+)^I+bgZaN"K!6BVnLs!A5hcDC[IM?T"hNpoF\/f':F0*'G*^eg2m8k<_@Jd6Ha>'^]*fc
%XfSK,Vo.kmi9X-tD"G5GfG,ddNo?F4]-pFH0^\W3LRWUAld[3aV2\pKdC\S(X?@5bHCQ"%EbiuhVB0@;SgFO50N4#rif7O9=o.aR
%=[j1A7Q9[0au@S3%?l\8^W$`[=Os(#9Ki<.rTX9^[7;YkO00$c:?BLK)GE<kjdW.u:!1t\?Wo92_3%Hib]gn4r5^dnWQ0[T*-:]8
%bI<e)WFt:LD9Y!8h\oFR@-sB'e2)-M\?i=5XtT?YOF`jgH:"g/Z)p/A2q5@7*qOZgilarMbQTWEQWDW;iU)@O]GXguAe=`%Flng>
%c"9XbcU=WOF8!g\HZhTFbZK5kGR[^5>uN-oOrKK`qXId4?5a;'/N<=TP?E8-N!)YZCUYt*^<W_qf@4<<cInFKFoKWm+:ls6XZ[>c
%HL.K[&Ze,/R<h?E"AQr)fE4ls8$hn_AEjIsdRSBF;:spR,?J:8hTZTZ%Acnqf5tT;M+g(-^Ls@o&KQ3f6)<,+efO57S9F7e^XVH-
%7]0!b:JAjubD1En/$TQN@P^?2Cn$u_^[QWg<T?'We>#gf1C3AWVB3+tLuJ'olM?J=E?'1,5L&A9R+q9gC-,h95JFb3XL@._6\hR]
%*)#%+4&ei,EH@>WgFD42@@,0hqg4Z8ps<-scKN#]kqF`!f]ro5bh8=)DhuXqFgQ0d&P3RUoAq!o&fHQDV:hpagIegKYkRn_*W-D]
%K4Cc^Rn!)_hn_&8eW655D3@9F'RA:%kBUkE?!/ZgH9_<ae_1W+XLU$L%;d#PoR\U->Rtn*B`Va3WSc^+oW_])LT.sXT!a^&1,;V)
%[<NtWk?3_5POb^(VTH.KlJOY$emu+dNCr+Mh1g4+Pd'uQr(?csn,-KMc^Jjc^'jY1D`cZ?3_6ZU"P2o;>H8;D?Vcku/TJZlnTes:
%iTdOtPk>od$X=C,chblWTqTZNERY38$7.8bO#R*6'2">S0D*fWR<&2PcDf0&F3N/r-B7X1S%G"gNp?>5BJ4<do_uc!p%(E!CfTBu
%XnmM7T%rrQ,*"nB[1PK9TX<"t6Q)+7EpqNuO6Cdtn)(*hLgrQ-V+M<dp$optY((hK96Y6CPGiG`B.lE5Gk7agX1N0,`U4P+,?Cd+
%%r\G.U0WQHN[7(hChp2mr/\<;o'FUKf9G.bjVeGH=#sc`c/%K6<I;8?hd'3Z]16XGo?6Pje\eLp-o,m=$QDWAG7T_?CM"ZV,VtkF
%#`cC>lH-B_mL+4(:5gXB&7^j9FW]kl8`R`kKOl_^]QL\aNamsOaPOL\ep2Wt(2AZm\!03iUqkVDd5c]VS'9o*A.#$Ta!PJjdp[aH
%Sgq0lpXPT,@E0&aS_2]D\A?G<"Kbo%$Tai3EUi@:-Kq#tk<NZ6[9',t5nI8sqi<_?&&,r`)j%&[Wk<ZOg_H:ZHYX!%G$J8Y/(kh0
%#@<k@lZ;sjF`T<bF6;7IH/[!C)j'CUZHdu+0"s<S%hW?S4S.^i\i)B>jQA<4@2$9Jr*.hO(D8VrbI$_lNDI!T&N3_"s"/&9/o8$8
%."$fN4*b8@\GosukJHBSLUWUk_PUA3Wr:+j#@[3`Aa8g*PZceBUR<!+g+cZj:RRWMkaZ)C+>%Di[t9"Mb\TtQ@p5=FIf&Ge5!A&p
%q:f9@b!EH=\l><BSX\IUHA&VhM8)(Mb0J5'E(#k(c`hGOMt%p@UK8O#+*&+WV34jQpE5+RmAPX7f#i^[5YGlY]U#Z>UbBF*S^m:"
%\UOPUXt'oT/'+c$mt2[^iD(Gt22TT?-VceAp\.gWAM.e2jKbjUk99]G0i\]%fl69q<t:r[D2+=.<&\=N1K/s"JG&4$!p,/<%[(I+
%Y2A`X.rV<leRC#KX==HhYG!C`[)TW$Z;u)Re9X&a.gN'*\#[eKp%F]r-V,]lbped[dVo![fW!"Z^eM@d7SW9><^Li2?[Gs:81aLE
%o>7PFXYrle+#/YY`)!JW4<3D4apX\A'L>,MB&qu8B2A^Cobc`I5GKEYU"@Z8MBJW7K3%Z@.eEN#71^2NaA$+sL*V&2Hp,j@6R,'t
%:>p#H+JKpp2hGNkJf$mEW0-QKPuVDFETb0<HABE28<m?2g@L_TU*>CgO(m)^]"DV``)m/iWA6Qm^9-+@MaoFP3)SPKI-CD'\)Sgh
%)3Nu_1TX5(Eodjn=d<EAN:H>-Ab;7OBsT=ALn^99*+"nu\-<gJAU"52?Fa<h$7j_a<e#KokHG)$<Wj$-(q1+$U^3\$3!VT9CGnaa
%VH9s>B5bsRk>50U>l=;,,PK?TWf6e55-0Uc]?P3[RA4UW<0aH@qWTt,4b"B%PuD8bopi?8)-kP/X3*+ZB&l8pO'.`VHHaIkKKOEX
%L?UG<EU:28)5bI$b@7163KC8br;IpVOr9YfAm&Acgg9XG5`[A:'D34;DIs[GM0b,'M*H/`L)"d\`Y>Gq#eBr==$j+g@lIG"+BuQ5
%@[gD0(,%.p#>gt1V+!O:95(HMCckn+@9gS(^N&%3F@)>hT;XNST"I6rc9UC=GPibq:ljQFr\LPm@7*VH?'SiEN*4NJYKF*61J[!i
%c:sP/Pc6G-Be:E9P*&tXou2gE=c[OF2!u*Bk%4gt%+A]c2ohuA4T7-JP0r-0jpbY1%<k6&oRb2b17^Q!A(Y0*9O*icHuWR6Hsc=$
%m?5q.(43Bi[9"]i@%-;&.52=r<1/)_pDdI6Nu@ojb0b>?E=B=+rT]`b&QBVrG^e<4Oq@5shl^^Z*Y7VXX3*+Z7Xq!c:h?"8@s.#"
%<>j?Tgm=O&#..,2ptebQ0Zhjn&gri>ASNsoiK(\5mF(!Hi@=!RqI_/YXS1r>aareS">eD;(.&DYJ"%oi(]Tp^AmnGiBo\3W"m\9=
%Wh-!Q$?6Bdl5f%U%ghPCs08\#P\>jOQV%O^Zaro"&9-gWU=_O,nCL?iq!UE]<\Eu+Ui5\hmcd*4:JS1,G&@suEOVWb9Ee2*i-]_i
%P#JGKHrYGH0F!#P0$f!ZGn"hK^npb9[KOd[2m7hj?b6XuZEb*h7K%6#lL>^Da0=5:,'N%hZ]AG,q-+r9(B0dEUS\\dp)#Z27*f6m
%Fs=D'+eTbBp,\'OI>i30k?m`r'o8D**i$^d3u_gucu<L^BhIr$(fiG%7s%@ZSD-#.m-*0eBsG!ee'*f84L5\_=[/BC`/^3igDTtQ
%(J%o#S_+f#COu,ZfHJ+Dgl&,+L`J!^Lr+4$+(6C;\:_"f<nbig@85K;9tjo5n/Spi):@4MZP,F?/hi9GnB]'KIfM!Y.m1FZ>C4r-
%%an)T@Kur]?X8;GO#AA/T#n%V%sL_d7PAr?eMm7EX1<NS?s@7t%G_Yoc[:,mD:Hn[iB0/(PgAb=1^cN$p7T0i).W_Xl2Ri*]6MC%
%GT;u4XfshZ%"NnGBgJZD4)+u8f5c>q@Lj]QaWd=m79?SZ#h_]aH0/TgCf[ufBG#goDcbJ(I<&8)TnfP`))i@llK3?V>TKCDB4R2`
%)XH#iFfpVr)il+;d-&HK>WDSKkeT[g0D'XZF8Zu4JorCtXN4Ms]`g#HHV,Hmgi?-.-<snq(&o('lOCXS&GJ++B!W.(Dg]/pmOk&:
%;f_#Y:@Zl58*;MiEa&KRVnP74[WAAVg$YH<#uX#-1@-rF1NMsc:1HY7TBD.rqn+<;1nK-!:*&[@DF5I2D5*YiOl%28ZO^;J")^du
%V2_C>Xh,E\6$T_[H<78QXR8f"6`+i+1\C%?-YZg"q.paTg5p*TH/Zq!97![^!Gb?bJF^Q_j@]n]A8#Pf5\04DGRispSuu:5IA!Rl
%A.pK<Nk$UW>)1une-,0BbL79NMrisi=-k(gi6Kh]a1K/.<t+62o"RG+e<FEt]#"@2`(&k,c=iBnW8#'/9G8AAaMZc5CZXQZ-ZsUg
%S$99sWQ!0HT,nqoS76.'O#)VC/1l$KEu.Bdc=/#)ljd5`V\p42Mnbmu=tX-/[B7p.0X7D/Y-m>QX#GDIU=E*,^h)*JG.Dt^o_&m9
%%N=es\"G)VQ&=o0ZO-T]f0nX<P`HaZX`"Q-\!C[LX96?%QtpuE6GH$XhJiC>XNCF!@0q2%:?5k8(5;T]^26Y_ef"F';B6iLkkE0Z
%lWd-5dsE)#3:%Z?_WKj5FiDUrqq<hR05T\jXTBCH)bAu#.^,HBGjk)IC`]mX2ZFONs2BYN>(%@AO"P66oiqiWN@qm9AaeNnAmAd9
%-q\6lh]W^m`VUUP2iI!g:>\*;f]`03[_MtY2P'^;[$p(;5O\N`KZsT73V@<!o3Y5E9^HX:$6/DQ/ETULaRjCZ1PW+W&QE)hK^UT+
%2X_,^W?31/0Li@\Ydq!Ir;3*ZQWuk(.Vp4Hnn#(O=!hh;a/W/t1A,R_Y>*<B<QUM8rt8X:)?7).b*%g*9kE=&`[sh)IWcB0;iPUN
%M.t+qO)[ktD@+dX-',4.*ab:Ef2QF=*kO!!ne$c?WG^Kceae!/;^Kb]D"`9^k#Br3WgfDUD.%QVUUX>-9+\]-gQdJlY,U9+]%@l.
%e<Thh]]%JGODd*,NQ9m!'bh2a[C&s$[]:jZj>Z8IUQ@^CB("3qK&bA7'm]N3SaLDBCgQ#t\$5Z]/Sl3"'/g6'YW6pXX"rMGL!<DI
%NHW8!_BsYcJZs_'HqLAcI;@k>@<:i0jj(Sb\0MK9%B*!.<f:_uG;&m=KFOtL254Z_ZWB<PLFK6`lXSFhV5V8@U<0EqZ`&]?-q0E$
%6`%@Sk#,1#eE?O]4*E&&onMW^:7h=;\FqPG"7h.tVEY%?[Fj:5Y\'%Bk\-P(Hfo;!:LVZaS>0m4LLVpP3F_YE=^;6a%AkVkq05KT
%5Ik!XZ=uU=h7N1L&W[n$o&6)8bJ1eVZYGOi.?Bto9A8e0h/15A*a*hBbH#9JC_t]05Mo#f@nl%JB/]#7WdE?FI/`O*qO9QN)sb,\
%bF@c]pTL^4IrK9?]'5^]Dm$ge=l7!*<@lt`r8m=,/bL^/Ha:)-E.2l%Y9/1F;DM%@W6B[g-Z`>eVgSaKg0H2R]jFn:BD;u-q@.`-
%_6,b0QXu7m1J%ZSYOp&\Zb'joO3a@eNTBZh?A,>JT5%&*H#t]+72shJ;!k9j^TFs=EmKu$K?=2Z1O=FmD2b38LO0WEDF0=s?5F@W
%b=Cf55u:\AdH`fe1#9@;F#gnEk57:Vc\WH6^0M>sIU'QM7RFo2T+6l,a[f8J.CN9[m`>'dQ!+^G=DkU7r8mbj`.n"Y&=kin0A^M(
%C6VfL^,pNm./A#VZ;R!S)Xuk`!WT_:Tj"A5M][-H`/:-$Rm3KNKWke@?U#<UJWH^3=M8rl:90#.rjo1hf#Y0V5!TPLV]TZYQX@/:
%1D$;X&!aqX]BZ+g2d7;C;-a!?G=QXoZVgkoo"&)@\ZuaZ?4q<$?EGY.j75"$$YY=[T<ocloKCq4ST'q'O\jVReHk3$?jfIEYKct&
%nisHmnX,TKNg.LqFD/qYK=,T*(,_"W]QnPggt_/^fF6XqcNZk?*$mFaESO(omqNR?CFo!`%B,I'(.lm]H;fTXNM3e#"c='k:TA84
%P.fZO*I:J-&qM<4$e7.5e]Qti_!gEAEUZ3e,gsMX^1.FU^F%6u]\8$E5;MY.>JG$&o0F:qO@&a]aN>5gecRAWYA^J*iKmhq\pmd1
%7I0aVE4r#^!f_:o,7.q4qV15Jpp6tZ.sLD5J#r,,5u"VQ=1sFl`)b/#:Il_D97'^H--7bZq4MEI$Z;kCT9_2@#qI"F]"Fi"jD\c*
%_H]0Q&922YCME=VLF_GL?2eq\adf_5pKnEo(]<R;SH"o$>;+NPU['=G5e5WTY^]uLK/L,b_>^uPff%\O\9Qs(g:bAkHk.=!F4dOG
%hN%2"4-)U>])_D@jmiKP<k^W.ES:;pE<1Pcg\ZV'pVYiCrh/E9_n,a(<p>*YDVRb@`2V%o#h,r#2AXCFUhb)QL$s"I8_;i8N:H5e
%nAc(4_qe5jW>=/Yp#k^"G\OmO(Kq"lGZu\QkM>rVo@*9NbHF#&4?B=#h"n/p\[;i//Af\Z>5e7^[sQt*d.6S%;LQQW,\W=O"P#.`
%@V*BIO<<rO]6P86PFl+4>^j)$euP3g0QHL`CFDcnI]itLFi,b]ko+R\IW0%/4881Bk2+k9-W*lnr2=^1p:g#_A5@W207L/6lLCpt
%Zh]J2W7SL2ke5,F^V,*#CfgK!7g2llS6,`:>)n!uLY'kkQ$uN-\U"-G\pqDqF;oBU5Maja?I/^ClH_uDQM/eV_Yrd\Y-6Gj)UmJh
%H7R*UcVM\"qH@3r%0&@u\bYlo+e%`/kO\.$IW)Z5g&2L'C"4"q'Rp'(`so'G`U^j?-/\#-]/C.j(J:p7c)H3+.c%kr$@L-:@0_9]
%d;\@Q..OlsIf@Kdp=B\MDJ[)#ECOl5=68*O6`VL)K$lC=B+=CP"hR]Hi#,&4+igPEK98tP:Ye5#-.Lj`b0i<;!c("PF`c2H*N]A,
%rN9+(i"`RYH,WTWr!Gru?!#To%GXjJoP0'^,?P4pQbDJnX[7?#/%j-j/?onW!5*q7J!Gr2f9]8!?9doME\)*uq.9k[APEP_3W#\=
%^aeX$f0SB,^4\"B)u2FrXo)<UdD_&eNl.>MYI]_LKp/]lea[j$o/drcQJkX4TD$mmNL-9gh^PPtG0j+p)b8:e/:4G4&-#9C2;54:
%:392Z:+Y<$nbM#8>MhYoq"XO#iohJN7fQRsh^ckT?f1jnrVbQaqsXOI_<.A.IXHG8p#*d-'?f_92YQjUHLos^5Ms1:Z"QQslc"Ri
%_QXDQjt)<XDqo`tmsNjfjmM53S*u9U=*U\9\Sq6BK&\U+oq:%+r5f=Rn%8aVErY4[V>]-rk<FF0EcU-\\S!;QjmKeXf:9!tq\YRA
%+"k/'ni*R7*]=9X/KQq_(rR<Us!a=+m[]m&*>[U0kcd9CCoPnm&Qqds[)eq!g0E<\o(Bu&qt$.\5$NL4n]T&'f9bp=Sbr!4rlOb]
%rUN*_Ql&1PE-hKq'ngS7"5mbu"^t['J8W%j:_:Xs%\T:?'SLJ6K98_LF]8NQ>jVM,FCnlEGK@lV<YZ+r'<J<`lmBbL)H%IUCf\TX
%1o)r4I0Mc>V'2Zi=C^-+.LdhdJUTPuUbnl(#&lTF.Lkgurlm&,B:Y^8RR;"_ZkP_(p,aO,]CPsGYd:Q`Z!,sfrj962@(>gk_=#@U
%4/]'VSNo,*.42jT1$^/8`Pe@aN`.l..4499G\jr_8hn`ib#GsocW<[X!7*4m0B^%dMeh7c\n2WXPCKG.F.:h[1hJ:ee_L=PpfI.X
%qiqc5esSGYBcDsP[oaRW)lHcHoYC*Z0'<#N'(:B/G3[SBeXb^eRBN+;^L.!3]K7*q]80D?gLmaMin^S[RC2SKdHu)6`lGVTdFe82
%08O$WD#JPA!gE^<Q2KLg\Im@[/ZNr4@p-^R17&FCCj7,2`Ri49YhP>Ms3!F?iJRDLVc^\2kf<Gdebh4"GtsbL0"nf<"7DjYBq&He
%s&d$%[ai1_Im:^AnGFdoh5@]qs*/flki7?q@=E+eWS6o=<BKK$E[eNTdS;'6DLS,*MAFEqSqh'*H59JPPL/V?q!AkZU<a?fOpM3Q
%:&EAAc<o2S/H%K!/Y2auJU1<(gT">gN,Sa\L\'28de<(o83Qhk2MZYY4o@e,_iL_)oQtPp+YR8T]S*3?j_OT'/s^*8]D&Q"jR%$_
%*pd1!HOoLfp)`4[E;h\>$*,"prJ<2DI@fRa5f`jefP/I@#CHgh<3U1bQ0k\Lp*GM:-,'NG`ik09@T^YCrTN=7b?O*lI)#OQ.DCJG
%f;J*:Q<=Xf^<hNNq3dM302i8Dco1%.A/s==8B7MQgGhE8)n?0oMGW+Kl-#H$S7iK'H,a]+R$Nj\p3dleTZJ$RSpV*po'b<]VHmA:
%WW=^#`bo:+55UlmrfIl'rPe@uCr82N%)QUr1"4-EbJG6=(GC`p7PG,I2O=oG;C;Y/g7>c7gW$;E>@AI@=B],8Ki:"/BVQR-9rMq>
%qaM?TCSU\/V8[CgkP@[;h"#`<mdsS+l*c"XqhsA_D)o@-`oChp07\Y>G%_i*<AN-G2_/b@-O]&!KD<P<E@^G'2MrrugZ=U$Zm.=M
%`Y\i[[)9m,Im/\ElLKpo"k19]/%#d(&.@GDI?^'A(<7GKhk]:P9XV7#!OB2N-@M+s?]:cNTEN`51`'Vq3.-!`#@R]>c`R`,'2P/V
%oX8r)m`4_lWu%CEI93>op"ecmm`):<fDa.+j_/-[kIgEP^TB.c(\3?&k.#u_aK=VA=00*qf"8-^'^?YK`J`Q]Ms(>Ec5aT7A'0ru
%XUqC,CGXE,U#f@(cIRL)3EuMt&%)"uD?U*B<0QeCH2!gk]s@4W`(@[m^@oC8OQfTpd@'p:ETX\/@?LQYTR8hA),g;+q8;=greH+'
%E8gHGn*Yt#o@@Dfs3rQ[/Wbb<@I0!Q_)d0QTYGp(9D57W5J('c+rIr:4tM8S`\q)9IX]9qIV6JZo(lPshn^>W4`FR@I5Tj9=Y`dd
%Bf;WX4,#]5^Y-;ss0V1-H1J>L#.2G*$f2k;PGuec(Z2f1"&CoHq&\=\D_:\ScX"m_Hra$3#@LqiC3#_"R;1&a"CjAnV#9nS.hAYL
%lg;$fF2jterlMj;cHu>c:]p5\>\%=Ca4jCMqhJ_(Ls=c!+?pp971LC&V-3bdDf4,!?_8DGql_);T:8f#>P#&63b\O)i1a49XA'We
%Sub5A:R:Y?L3W66^G+_%Ib_>j^RTf7fA%$cfD>'dgHYTH'di^%q!^0"k2jLE)s@QJp%-UeoBWmC]\h=YfP#3Nr[%sKe="\6qPl[L
%A+(H6DOrGL0E/%t:mkODZ^797p0X;m55OH<II>]?l[1\$2XWfahY_cdc2-8n^Ra,*I:;LdLo_=9"b(Z-fn42P3c;hA\IL5h`qH<;
%1bMQHZG>O&\>U=VqJbbcNQ6M@!i?-k6G\9f@QYHcX095k.8MORbmR;`ZjcYG-0h71]E'd)A*HV#F6eroZocn&[3Mts%GtL#r\T0X
%?/Mg396k_;YFXTFg>]S_Eu3Y4a@4@pS<D6;TB[#TMu*l)'Wte^gjfr?G"0:7-$lK;J,4Qco;SqJ>b$M9Ke8'ACCB@@CSgaMp'!62
%Y6ukjGP8]r&gS@eY9XuDNoKDW>taL&E='/diHk(6f%7D'C/Vl\'Qig"_2iO2Oo!&IG99"th1,)>n!#d`:RM.ulMpA2[QdWHmY%NS
%og]JTrp.rrk5N-qp]((Ss3L`E5QCKX5#KUtfE[u9`U`m"K?]Hq%R0mfp!rg:3,qf*O)F;Kf\8N.nH;b&:_]6kbc.i^0,09>H!]Bg
%^46frYIQWt%f^hH5N';c?pl*p?Y2h9rt"njRekVX$Mtnmb2U@!'2P58-f0m+'9DRArc+WJQXhW4'6PajWk&`h^(@M#Whlk4g(R*?
%C+?J6HC;]6n`Nl0$@EB%\-p4/JcGXfU0+Ekr/X_FT/hXQUOSg6!TR!D.$g\.T6_eZ@49Y4rD&M#8Teu*!TtQDAug5L_RSj:%V*c_
%r)%:=D3mX<_]_!u2>cu8IBuYq08Un6b[Y(f@m#Xn<om4^L7EOJ2>cu8Z.W/1'f+joA$"@U58l2i0BqSB0*15X4o`;M6<O6\6_'sQ
%j'&,91n4CE-QL#l%1BSTgEq=!A"oX&mU5n6*7ja&?-_r^[He.?FV(q!M.Q0A!DaC@V>AM>?f(0uIJ`G^>2\8RTAT[d"6.6Sd&qj]
%q"X.Ga&g1!Y90i=$TtKolUVCfV8kMBk2oH%HK[cA>q9hijJd("Y1O-P=NI:j.?b72QH=0E9U8#^C'_@<0P&YmPYVfbbG^d[UJ8@"
%nEE?&1$\7Y;$Tk>W15<3U+DU65,/ChYLDIHkNTcr)6IMoB\b9u,*G8&jC63iTcCAr[#ESBAQ4Yl'Q(ph_\ejY%_/muZqNA6APuRR
%;Pb(iJ4g#42Eah2o\d*8[^0PP0488qq/dH`e%u-P(7UW3DPg*.;FF1/@j.$GVG'$e=sj."1>,]#O't^CN%o&*J4YYnXWYhg%B@SU
%[_72aO+gh"Qu_GqWO\P$*`P'Em!0b@%V&aI38i4o;fas',q,PL_fe8qR7,V@^MK[OqSZXa<Wbr8iZ4@qSDbKTiM2TXGs(B<A:74O
%M+mh:M,D.'d4ri]mYus^:B!^qX+DVA.@/.sX=9H.p?:RB*fp:T=e?A-!u&FH@NKQ.F::O"H_]PpPJ>Mul2aJoQK)uo]9_J4I!"rN
%oC;#FPP$rpXutqfV0f:lUZ7a6ll/ZdoHrVd5A<(U(GR;SqtgaPU:lYrH8fS"WhsXW%E<O*'s-n8;lDM*M7Tkg!2[%-oL:I@Fu,69
%;Ho_hn5=$*B;Kog:,FgoUdj(lIjC;ca#(JZWeQ-.SERT-Dr.L8[8%Z`E,s1PSOTVsWO?Y$cA:#Y^AXq6AkHaoN`>u+@ed4:_I?,5
%FQ63/]eL5poho]gpVoQ[_HGTqYSN%ho:tWIIN&GcC=cR?N7qH?CL(j13iWKF\m?q1H3PY/&K$%e!?li+8k0&\6r(qB^:%5'E6CS_
%[ouKL51_f1@I8:0Z7MR.[mOW4#/"4R_:I9S.kf7Bp!t[Mdm5OH%<_mSet?hB1SphOX020bTp0FcYhE>PZ>s?.*6Hco[seBN[JDFE
%%0;/hb%`U#h'`_0YATm)Z>u-[4$qZ=N7M``H3Vp7c1ElIf+uN?[I^<moe3ErbQQML?6]nY&ZE+8Zkf-0Mq-$$A[qD3:&7[nPl^,B
%"Dpkm\fu4GQ"K:1pf>#\G2+3]?0@Yl&aW0BEJ_U$/(7"HDm4082"_"<op[QG&qu_aeX@G8;"DcM(,\[D2c6sYjbqt+`>U]NL*B0e
%F_VD:aI=SnpZ`,^C-NbEeO$ZQB!(G`@ff\k#1^?T6WR^$:SMqD;WnmCr7mQ^[BHTrrnRs]Kbf((*ic$f6@Bs0$Ds8-#h0gZP+#sC
%_--t8#s&"mCB+-F^PL70g>XJ5C:g,hCp4Ki;Np6uf@8q3>iDF)Oric?^V7/+:l>BI[!"'j$7X`L@NE`igDd4_!A-?@0XUrVq,V91
%T?buMnLSeM>>tRkErgW@#()S'U:1e8+E;>e+0%+](h\tJ9#"P?;(;e.e;:LTQ!?7KURkka@NM,Yp7r>%DUs2^l6FcX,07754kEma
%).0%9d_5lXW7p4c$^=7eka*F]6^=B'R/.qO:CE)feM#+,:T`#rXWXSgVmb!hDlu7M18&!^^3t?.AJSuST5-9u^kZj3lA[etU/[>!
%Bs85bB3@kp>7c8L`k9c,+MVZNC+ZC)A%ZX5iNtu+VD`MFTcfIlCS"I3LWA,c@ef=?/]hB@$@=)2CqnE%(YK_`@%mF@cj>>IjLoZ;
%I4lW7i=*H+-((61Qif:]hC`h+J"F+j^9_.\"8@@G7:Fb]M`P!@f_<geBW_\XafHD4[0E[O6`J5F?kV'\V07>j6ZkcmKah(t!u)!*
%-nJEppKVEP$CJd*K\bIqJmc:N9ss0[E$j_9N*4m1X\kHb+A4SHF&],%_lO=+hfDfNGG+X^hhQM"k.AQ!C#pVA;Vg-;<RoZHW!'&K
%#ISt5/Uj$$]Z\I!8Pe**L(CS].kM0Vh(N5\Xf7lJ^V?YPF+hE@C<^r:b_NN(2e:.7S_oa]p-ps&mC;G7Pujn'<*a>pU;g2=lOASt
%I%\"7HQLrZ/%_CPp/:QQ?@h\,a5".IP=FB90'jJh\;':cXs$XUX>0%;`(e!ICY.7E&X*tt%3Oun.'Gmb)o\_lk6,+2e/ks^:Z>Wr
%3tdidIjU;$rCPdWC?]ULH9BGC4!,L%Xg7O!7i(ihg;NZQ,i?>`Z[+3Er)g?"g?\2:0kiAlbA)G@lN=[pf6/d'k2WT+<CJT'QPCBZ
%e+e4[n#nHm&',BmY$es/GnVSb@""L>5b/%tlK4'CMqk9o39a=b/U)j-hODFHiAZ$+Na#K@n"YB2'E?\35OQ>S'/9KO-T7M1+Er9X
%p\..n'R86a\I3h[,5JQ'mM(U8M%$%7=eCJ<>X1=b[RMju*Sk`"7?e[+d);TY2YO?X?+:+Y4@#SlTI%0G5ab$5KA%C!Kb[U,UZN'd
%!l^K`/Z:T*7a<G=fV$9$I!BDSM*49c<5'8d770,pPSn;a`!.PH_9/?AWD1_W5k'jU;.d$u',s#cHdcqJV'ibrn(q8J=sC.1AHmc^
%be*:rs1mpRNi']g'hpN0=2lYPa8e!Ig-M7CogRVU)V:LG2qHte&ZO&(1Dk43=h(bp1'iccG#G%)ClLtCIU!Ir#(o\;8[.Go1^#al
%A^pIf<N8Rf4JL&-Wfoo>A_Hp@Yd$YBO*r?e/u!;>as7$/e-7He&$9dki$eqKAnZ0lPXu!=d&69NW=%!<D*&m*!ug)o"^mQd7!6j;
%UI9#2oYtsu*lu%Vc<KmZT8P*RfV$=qgi\'7FiLH1TsB@6_9/s[LbaSlRN.W'dJ,AiX6eGCTJl0(NG;7.'?MYdaIl,L@Ot-dDfi,[
%Q4$ZRSbWnZ.hQ=s)`4gfb+eS#d2-COBJ]/O:pom-X(b+m_$3VO2UAi'?O!%O8jkjA""T8pLbaSlRN/b3M=S)&k"BW`FV`^=,qbrd
%,(h68^8Pp5qAu2H]t)`5Yu!<:-o9MKM6.FBasjP1H]tN-=KPG'TV.051YA@W[>>C.5qkLWnIYRPR]5g=A@+p=!8>kH5^%gEc?Td1
%$`UIZduHG.%b*XAG"t]pYJ@tF%YH8$^e'LLG[VR*k<Rj%l_`7J\$C%,,3E0LTiYk<DgH!5BaB#6SPdU6@D3RW^?2=u8soO5.6Sm#
%J\!5,L;GsNFT075R8/<FBY6hXdh*2T5i#@kQ?FX=iR1$d6nI$jE^JbD*u!g&h352@Wm/Yh#18g0.WW)YDEK2T&;Z-`+S6rWm8$G]
%\W*Fdih6gb;(Aps`l'l6pJa-t\.bKRj5Rb4r=&hbbn*f;,>LV;(UG$V[EEtQ=#d&n=d"+P^UhO("!^Q.d#0_"Z#!5daO^%4OGb<,
%HUR9;3,okb]h!?ein_^,n#&ltG5QKI+P0;G3">+YRc%LCpEH.j+I>OrIS1HPQ]O09l!A[_P*8&S^H1'.eYBl$ZWCaP)2sDni*baX
%?D.F&WdibT'/_e"'8Hp&9Ul3-:JRmPW'?QTT1XKP:._Jh@?VAf5i%Y$qW\,.&)?cD$Qh2Fq-1`@5KJX?#7cLFb];Nb-`'_K#+JiQ
%O]t>*'hN<>,2sRJ4fR%>R<@N`LSi"j?N7S2qb;oknXMQJ%>NT;";mB^5"gI,TYE6.9.V:4JV0Z*\-Tr9Ut\M9RoiYg@cA@e)#D6X
%]_XX'NTI"<a]5JS<'dR+9Ul3-:ZaEmb.6*fHrPRj94KI7(i^JB]l\.%o.-O-RN.`(Ig\tP![CH-cqE\i.5-1dH=$.?#HtPWrkjQ@
%ORC)EcAH9[mJu?79lFsmkqtOMc@H':]\i$9&nHd,mFJ"eQe=*5%NGnj>oaYP+*E[pl`D?ipb`7FH0GtSk<Rj%A_q-\rU_CNs08bX
%-qR2XE>m9==>dJ+n$I:oob%cA`;+pC3&'>K"MOGFX*-Rmm\e%YEqE9arX:Y]4!NZ(W-^:Dc/d@[Xq**K2PQB<3B)!<1c-%a)[hH"
%J3QKc4CPbWKqQ+uiZ'opqSGs]>M5`i\jG'`h[Sns6)Hagc@KBRL9#LXJ)DT5-ot<XclId!3I#HO7\#2;6Z'<?eurjdqSe-qW,k%_
%`)IcikJ4p\LROn(aXf*>*0SB,I.K(4%NJ.MTqKdr)3ID,L\6b."6gI4k<Rje_#:_2Dm.2%*8PFG\$,W7M2662@-F^(^b`#&hJPX7
%K1bSAk>t#=S-,H4@5dG[`IL&/Ni+ICe9_LE`9E'iVkLq'"55X-]h3K*m>.g(G<>)HB*okY6\D)`IA6gM89ZU2fAa`0#u12b3"6=O
%g)<$"O=6n<B]Q2L]101of-,,DKV#!mf5#IW#;7RuBO)8&.dq;0pWB!c%I%3STiA]7hbW@B70e8g/mK.UKbNW7h352:(IW.BNO-*g
%_j@toTH@`5S-'#F6K*mNfTVfuT(m^OJ$Z#f]<@S]#7cLF]R+l$nATXM_8MNV$1#N1lapcqM%f'f_6dV>VF$,C)aVs2<KVE`X0lRH
%m62f@J^@>4p5VakSR0f`0<4N1SN,C:Y;o(BL'C#I:"Euh'QAD.L+\=hT(h1/K<?YC)Uc=oe"skUC&E5kS]&0>+E>bdLi_K^ke2E"
%In,Kf9]G?uHjqU3&OaPtE%pq8!er(4JHm8Zgj0dV.d/u?c@LVA(J`<JqiF&?<9S2d4<nY6^l!tii*bcNTZ69ti=A2l8]j,"ie9Wk
%S--2!JD8m!JT&jUJJrV]&cT/d&CD7*kJ4p@@.=FYPKp`ATPL.l%5jW>f1[CJ*&s<$lm3-JQE%.(Hk:PcBg#5Y/l#YM6fK(FQkg+e
%$.L(ZA!Q<"n2k9JkrLSBS2^``V?M>D<M5$/H?5KDS67ptV-5]8,nY,,e3+[r9nu$!U3H='%c&eck8&O>NJ>AcBJ@reZe<+&hC6c6
%)Vr(?0D,n<`+`m=0??\6kFS@DEK`tA(;+!.EDhgQF5UHiNEklY>i#7lV-UILL?_Q9*G(FukJ4pH-nS_NYBPV;ZM"g0d3fZWR*jd-
%8^idh_jSb"e/>&GDRG:K[U.@XG/'gtkL;M20Q3q/X90JdeTg8maP!"%?t819W;W*"GXI1+"J4<#9<BE;52a95=BBG0?Hn<_fO3p&
%="^)'A6IS?&RQT$$cf#>7%D)d+1OUiGMbBH6KgrW2op``)5=/l]%G!?3H-Y](qd]p8IFK_l*8RaJ\;A9%uGAc?lC_mUQ+/lUhG^2
%HA++KHc9ds)U314E<_&EK_7eNBKMF9a_A7To9X[/QXoTU3.hZp>f0"nFTs;^2rha#e:!t!b]DbP2OJ]!&uH?HIRV](Pb@T*+T]M%
%4sJ:'K6^+LBEK8^_O[E*h/T)R:O6Kg)/M!Z2`'fPetAe\3RD7Y)[7sg&eu)C5i#@O?G4cHr#A]hOB7P-#@Zet,p<>[3.hZPnG:\e
%PbH[1@kpk&AjJE9`#28C,J=BP1K<%A(F2nt-eXXGar:q*YeduIhU(<5MDR7gLjc/Z+F(:,'Bd0I]Hr1HBG-Q;rA$qe,mKdeUesmW
%"19YZ'qYXAFEM(X)'T-t7Fog!8]QZDfO/$Lfamo\"^PtTTR(]!^i5YFj]k3D"*IDIg#78LQ'RDpSf[f'K5>kh,rflKe,=AH*hpJ0
%ViP(d0&X^H&)8?-TFl/JK79=dHAbg;ff0R16k(-=FPe+-Td/P*VYdW<#>KpNJ/(AZfi3X]"rO`Ol%]j`0\qf_SSukQ#I-h.+7bG>
%ck<@M&TJ$(rE+RI%WB<0^<-#riPi59K^/)24<i'Yg<WsTj\^>p)e,]2H7MQ0Pmab35`pj^KB[i"VbsiM:0keGMoIt'Ygj<l*>.I"
%h,@tVNX0MALZl"h,8(2MjE<q]"/.+&k,H:+K570i6=(9jUQ7K?Hbq2PLcC"rL>Hd8fT1-[QNZ!PJ@19Y#:If)\f[u#\JPn6:ZEP9
%GW2PF<@$Lc'5+Pccl;)I-$e-hVp/Y'\IYd*7%SDX%&Wp$C`ErA<`b!7a6N1I5f`.-=\O!9:7T-)o8]p-,jED"q8]!@n/;W9!/V=1
%&a)F8P81A\hRZaAPM.m#SRP]09h*Hb1Y?(>C>MKMZDJ@R'OKif'l.o(MMZE4?s]&5CNPW9>a0Jm/e1&FZGB2,QoG?9Sf3M[<.uh=
%HS/0b`NVrIg(t@a5j1c['TIRtOG-bZG"-H<@'Csan;E*Di*[J-31<br;<#m]>BM*^,]#.Yc@LU^^n)Eshd@s3q7o]5,'AI5,T&6[
%c@LU^^u?Ys064Z_L&kbnC)cdd''I'H1goqeoPpq-J!L4/qB4EE=>h;I@(IF!\(YpL-)3>Y1h^CKEODZ^%!7Mc1RRU.F-;&#FL8l?
%2>J(pY\lhBg5%]n6;Q#ufV0B),'u3=22Rig:91GC&02?q0\qeL?E@!cWV$-qMqDY]<G_LT@B>tYKB[h=6JCh2&:nY/E'_@(?)Vd2
%g18,>%/Qrn'^U-N$C-mW*JTVbpiB1+k/98VpE],?pO4cN=D@ACK9om]<)(g<E8h9a(ig(0V74ZJrbUW1cSSJ1-%fjK),0eb@]O8Y
%WO6)=,e2P3IlBaqE8h9a(ioNPUIbgp`VlmM2I/RnLDI"Z3!Tqj!@'/BWXdG>r`KYBmsN7cs5l:\#1NOX:7K;1.tk8K9noGHn=f:[
%iJ8015j52PgNM&0Nbf\]e!#eA4)Z_9Kb8;/e,@oD7ap?te@7;-6ZrPJUu.>#HVU*I"uB#T8`0b'"S=cIjk#h0r9m1GS2^``jt67g
%`m@ml725iq:4R!d&TJ;6Sm!Kp)Y1_QXoDue+b<9a5ebj+3!\`?S0$7E\(B:ND95H@W=R))MhlGIm`FSs+MN2a-c*a-dhl;5_a@]'
%,2s"h(j^7SJ6o4:HbnK.&2=/,Wp,9aleo]!CbYK.St8K-c78*)`^T'=BP`8&5=_5'KB[j?G?A=I8(Eqa\H4fi@PWe+[)n/GT^KpN
%La@@E<P@3b8s3nkF'l0pMBXFn@"Y-h2O0Mn5kY=R]s9/4Ju)5u&TJ!obY']]KEaZmhWZ-q'0H"h)AQDpS2c-1L>6<2^_jl@hr0\g
%5+eF!6ifcq)/M"f2VU<.pN9oPHSQD)nq1WM&TJ:#9EQ&sUaN5!PIj.T,_@Y00l[[C9EV\.aDR#QGI/mJ&$tu-3-,$9&SJ>ad$p)k
%,Q10";BKc>R.@$sr@m4>VY`*7Fg,ET=t"fbI^I%$)ANZ-N/08,oMZ+O4l/]E^F_YqiM02n6;i_\iXD^]E@J!nnfs[c/-Y"QV0g$T
%ieTRHl$hD*VSj<jmHgq/`-%"fA2"?Q-I.1hPH_'<6q+/"f4?59;!1SnP/8SNiPZU-pJ^m@Gs3$s[&5*gPu>45;X/EF&SEfR:[:5g
%GPZp(3*('o>oOI@<+P?S3.jL]dV08e`V^J!8MkNTogsG),^jan*2n4)g#InXWN;uD&XaiV0*m\(S2c-1L0hbMA(_Z^(!'Z/@&>'U
%hHQFpL_4:(_9a-d*S!VU3ik3&Ug*C=M9'n_M)1Oea)2&$=kU2G/p(X?]),@7Aah4>'5+PccoX#op/>+h.;%Jck/Pj'rimP7SA>Cs
%Dd\MR!RlVCcA%aRgs$=#;&9gWYee\u!smI9.(jm4AomP:?BT2`'5+Pcd(@fr=;\m>=2^_:B8n\EO?)LB),0d7%m#surA\Lli@Qa\
%U*BIQ-dH+P+ZD+N:)bS*M"ZknXiP_/M)3dlhN?Dfr$LKBmKD3II*+"G#=ZQkE%h`#c;s9A&%0$]PF+<;'63\2micZ\*6`bM>FYYI
%g=kgTB[kSc^!'"tdO6?c@"W`!7X[NTBNQln(W5lQ/nJ-\3bQAKCbRNaW@@hcFTq%nR'+Z0+X8H$3,o-ANfp/bU08JWr8`Q':$-2R
%Z>u_uN8WJ=4BU1EdTpVX']t6:Vcs#Bb)I`@NR#!4HP;V^V'AQSE%_7T+2qgqhF7<Sam-F'JFeh2Z\AB$_e1"0Rf3&W^0/k'og;0;
%/<2I)UY'Bg8(C?t`gZl%UY)Y>PT)gP0\5U:+2qh"]JK9-(20GRQ[n[gii71d6clY\8L\s=!TtPa5F*teO6'[Lc9HVg@FR$qO6^j*
%VqIlYQuEHI2;Ate;4Bc8Z)XOVahdV7H)t`D=#,'#^531uN)?t!'arP(6BjJ8KtLQQZK@fo3Lcu*aS;:9GklkK%l3Pm*q8@/BfV]^
%N6Bin6B#I*"T18.jNaKa2[<(!=ZoV"T(+gVD7FGuRg0gT%M/@+i3XJ!<(:S<%].8I)_gK\O?WtKp,k5bG7t^g)P9)3O/CFjJ3=Du
%rYut5keUsnS>a6UfGmqg\TObXH7\.'_3@*D:!;?\`Sni"Xtb.I!I##`gfZVpc=,1B2c7-!Z+0ruY%6=5/EG*mPWOq#bMDg2]Hh^H
%j:ec\6,oP7!sUnJ/Vg[[=`bMhc67c_LE6uu=:\0MiG<V&N.S'fV2_6GgL=mp<'2mZZdE!?a(36H(oLob?23XEV9ESI]-L2<Nk7"U
%l]/UHdE/qgNS]gT)HcFIYo-[3fV=XO2]KFVBtJ?>NFBD;gkCeacJ<;YQD=i+EArUU`Gl\X3]VDjd92Wu*66kPL)e6>pupeobsl>;
%)O)dsj4KPHGO3`!\XST(Ou,'Wm`$qr3UU@_en!R\7UPsm1Sm*QTWN.,DnJM9_*=rs:^^Np2K=I'S_h08`H7Pc8a6Mg2GjOo\3#i*
%8W-0q^g4eaC!sR0b[uQo-HaA:i+[Q?,2ms]Fdm=Tim9i#P>]I7DnjK4Al[;O"[$J=!bhs%/(@1XA54t`QZS=.gO^/(WBETefF:E(
%9:*k*O;(%4<X*.BhkJJC4%(A+OuC8nA-2?_o;#)Z#'o=cH[u%*g:dUYaq(DuBja>[*nucF=/WUUam4=t>FQF!O9.P+Ygtp.gg#5Q
%=$c9"e.CuITMOk-g(T(8jYZ':"Nb*X8OE)K,_'`J1SL-UL>\fjXX>Pj43Lrt65$jX["kQ5=p'n-VS186%XA9WS*k.].T'RXVUFS3
%073>pKIhktK%lJ%MM7Z9Ou10iItqAcadaA.`XM[UF!-IugtAKGAV\!"_B^dif%dV?';/c?]dL4r4IQPpUfjH+"R4PgJ-tk3-A;'O
%1Rh?)%hfB!]dcn4R72g/<1R`]&A$:?Jl^g2h<L2UJ;1RsfL9<A]*M;l'f&[T.3e<EU1rDH_G<0;)hJYoN6r3>UkYi<U[^f>aRY$\
%l5WlW>`1sI*:k&rSi\;7bk8+>H^iGRk=kL3<GL,[M.>nSDjMS8f;)PRRbGe^(=r:^&/PS<q?('&lPi5AfDm(C'W)KtJW7H&9u[4B
%-:hg(Be#&lT:kF;CjlgZ.mdE$,G[N?Zj,)<-VW>o$Q>4i+;H[Ts+0F1o4q?,f#\UQaH*QgG(_->d!@PUPM!c^ecUb$<a!&d5iO\=
%:&mSmF'SK(X<>i0D7lM5OsG&3k5Ec9$]XgS'/b6EZLPgUq(eK!&mi%sZF.hd6Xo?8hB%_kd;8,0+_VF4=5/!d8L;""^@&jf6kH/0
%M91A5XkSZ)iSqOB-31s"#CACI'X&)8BfYPY8quQJb4XfnR>]A)>nl9uC"7#t%^RYP+sR8tSM=**l8Ot^7Q/?OKMc]3NHN0D>hEuu
%!,9fHl(edj[.I`s;;TI,!Xc6T<$mC8`n\/+.N9HP87Et`hZP,'j,Qfl\KG)[">/lKmmthnS'=7G@)BLadu;>JWc:OB&f+o8X+HQi
%LH#l?gYeF\i^mOD&?FX=7k.WLSHBhjmI.bfj+(f/kpO7WZ"ojd+R>mXggVJNTs(OWkfJIZSS!9(i-4S#7c.cUg_^eh5%rPGLLM$H
%O3LjC!^C,B8akP)D>%AN%_4g.+M3,?oD)4KFcC+KY,PL&>n,k3K3scrFq>Hsl+X+1^d1UDlaeE^eheHZ:8tBBXOf>D<F+81Y%r-p
%m-HJQ:/J?<YQrDHl`ui[gspj?45q;prDn')hLA2N-?4+1D.HVm[0r[[Xj)'"b).VV';F]:e.tF7/\?l3`'LO^$*to)"Eb!PI5dbK
%j[Xjge%`iX\E_7hGkUegi>(E3o;pU>%S=#fSJ4MR&2t3.4I<PfS&.ju/5Rl`XsX/i]N^SX^]n)[=(X67J+OT6\=:pbb"/8B2)Zdb
%Os6c_Yeg`4@YM\j)Q%FkFin)`l?,B&7=CUK=@ARn#!;lhh$gm!jd7<5BlC,R(gnLu&fJc9Z=pp[WmeP^,__IdRpe.h3+W:5kQ)Fc
%ZCS.f,)MTkg5kZT@[o3+%J7Ss.:l4#7qi=5)e,;.0u,b["rlb<)Z?7SS(BJVC?o%Rl,,H[:ap4r1HD>jmHma`egdZ*Ah=#d$Rq:\
%5`YUc<i>2a2D,/JX1cfX)^(Y+K+5b2?ns_[&!4Z*]S'95O<36n76"uc)ZhOC<=a42`oEp]%AC7fh'j,gk.i.ECsWf2H52@P&*V8(
%.0)AJ%NGOk#s+iJ>--ueh]KC7Rf3lZ`&VcBCbWf(7jjVLC-<'AFZg<j,0ka,@+`;gW3WdQ$Ku3&/<*(CJ2hNY*!0nQJIB=p%Kcq5
%oTtPI'Hp5A!s`:e,-rQMMe^@u#eQft0I0C\"'W)XVPGW:4&2!?fi$>fjBP,#1"h[q,&!X(1=>m!"q5'TIO(M,9-(&I64n2I*!5FF
%L8^?b=LO*A)!#K;kRcgn3H,6tHK:!lp)'M0Pg\.:#XM4U!s`9_,_]JQRoUHo<W:fIB@*A\'jKX+BF%:m&m'6f.pp3Pd2lGZf1@,\
%S-'"2cR^"daQITX6]D@&GGULQLCbiYJHIcm(7eM9TE(>;M:@M<F\[l,MMQ?35V90NO8G%i_'MX;FB_p!KK*r]*2klao$l1/_FKB"
%<Oi*gLi_K>CrD]UUMO217"m33DbHm68=YD=@WnWFUoYJ'%=19FF8I./:.#,gA65QC-fRQ,1h_.`@P^!S+Gc^70TOU+?hUf7N8nbh
%N5-.e`&Ve0(AEh';`1t^8u`')r:;)QM0%T?bkNJVm`nCrK%,-`41sQ<K7?F^L'DZSJ;L=8*;5,^#cOjoSUr#))B-\."(%1XI>Km8
%re'Pe-hAc(&uVFSgg?-eTY7[M1MZg,#fqhNOR>QKMiJjTBQ',qJs<%rHFqBM(_Pprh35TdWDMUHG#(PZ%$\?/9N$rckJ/7N]YR!3
%6<i)<PU,35FP`Bb:$rQ:iZ'q>)^/MBbP0Ms];V#P>.V1u+=GHc6ZC;'Z%`1G$*>JiPo'us:7MCkd\uZA"L?Sg^IurfO:eCaJR4,>
%UsPI?%]d\\R=0-"aGFur5T1rFWa#QR&.UFC!/AF+BHYoMGiXT0:bU_q0!@P9L1!QBL'Dr;85b<QiKXnc*0a3^Tcb`.JHNGh7&(6*
%dq09Xd=MJmKtBK:0I0C\"5[,m*Q/bUU'cZ/$l+;O3"6=A$!K0=(O'+68HB=cmN)Ha,Yg]/\Q>p3Xro4QH6KR^2Qdi'L;[e>+BPtH
%jHcj1"L[)7[FO7CaGA<lJ@E8s3q:&*Uf@Q>c#i&h[K$_me'L?4PfXksZ8o&;%.SYT`_0D:6fKpZco^NupEpU@XB000\Kq\gFch1d
%E=NuP`OG&%:JMXh<R<:udfACG3H2dgFGX<`:bp2MOcq_%]/LOV+`SD=kQSY9Oe8LkpY>D`^NI$_G`g=/F5RVbqVs"j2!-TXGT;6#
%:tAX$J.Zc2*2kB=`&+$ZF[EX=n13+qpC-'"3H-,?$)FY(/)B^:\'_^<,R#'*)B&[D#IIIG7@t0Y24>hEc<nj>:7MEA^lJPf?bm[H
%2bJ7reeUdb5u*pP#ND7Nj0$b>%?2Wi(2\[V(C5c6BaB#NIh/jI3[^H^!c+nqMEhbn%b*X%b@]Ge*;.<P.Yr^OkA6sqaGFs\oRreb
%UaT7#(md$VJ#]iOV?/Fqc@NPSkO([bjIs1Y-&E.k(JGP(j>h1Pbt=KT=d[u"H4,TK#XD.U!se+\,Q+,IpuVk1JA-:S=@A[qL7lf6
%McT)t.7j;N:ENu73!TrCM$Pt;=*k4k[Wf&,]X%tL)0#j"W+/`i^KPSM17.hHag>F-HYSFXiX@_AB;Ygk#"tHR*J>AX5Zn>B!+Wqb
%C`j3eFm$/%-p6QrOc\E\,Qnr/c<p`ob%c6MDh9t''Vs!nH>9/J(*h+4"*O7Q"Em\q+gn,oQ7K*PJrD[A%FfZ^'YomK3LeB)7^[Ao
%Tbo$"?itOB,H5gne$+!*+oYuGo+"@U\AjAHi'>!2aJULnUZAbGV/r`2+=#0>"8/1b81>b2-D`ZH7207M)/KSkn]3(Wff!OV(?[,8
%Z%t@E%b/J$`&CaTmMeK2,Ud88^*/@giX@^V[m<mr'^?/7lP,2YK\jn5JrD[A%=p#R?J@d5*GJdfW?7lQ-cJ&b%NMEs,DL9\g.Tnd
%bX^j0qToh;&SJ>!pe3Rt(2Tt`CDcS)[)J:sN"K^,JbifL<Co(q1D]bhTl2:J>XXYcB<Zs`G*:9khRBhbV4!ip-H-gA"rdVn;)H<Z
%eKM8KUZi6P#o4-9^k"P?<i#XnK:]pCQs0@=1rM@n%NME[CQ3UQAa<AUVOWp2>MU"R`&Ve0m]n^LN7ZX0+/R8kAr.'M,0kbWM"oo&
%NBu8\akBPCqrRYpMLpdHK+0'tlYY"gT^*2TFr,'gRn!*MN"K\Vkf<Q-2e^D:?X`PC&moQu%hiCaE=NsXk^_IH]n#HSUNd"d]+VYB
%O:c+Zh,!?"['>">?-4`rUq=e66kj1M)%?@-7qn]jg'#EI<eBU?Y8!\&1agS"\gK/K.U7(Dj*eDa,J1/fO^ah?#7`!<dTmNPHLD#u
%_\Y:1";u1`)b/=O*3\h(161+qCXT)adN:2=S-+P^pDe6gK($6kS>HbFp*3$KF\\G/LVTUS<!+Rq4%mMq]Pp^]'][+lE1gP.ZmHC]
%G[p]G)X.iE`#3BaD5&o$.Vn5!>K-4Kj2;gO+Q!#:MBMB4hkR[^Emo441?&^#cj510q[pc13bgGg?;Qc5@Vh]7#GbOTY_U)Uel$P#
%)$N$?"rh5$K-^B)Es-KD(LH:&+=#0>6P(8hVFQH&E:34E'oU5K%uPAd*&u<,$bQe$OGhi(DGtkn&dZR81Y=t03'%JEeR9Gp9t\i-
%H:se<`B^M^?Z?,d88&;!L8b%'L:BEH2Ka+t1#`U"ODpBnm=A*/a7nW/5hZ!_0J8%kB<WNb@DU+V:a!idf`^qZdO<+lF5T=C@QM_j
%mL'.`!"B.UfNf`;(i]a!BWMXTg:$:JkiiJS?/H?,`#3BanN2!XL\RFW7ZXp0gs-f=3H56B85,+,pjOqP6-eD>EC,*ZV][50?iu6A
%C,#Ga`#7)`*701c[G*>9O:c-0J]'1/g,HG^d\`XD>MrMc@QFO0"rh5<</pM0%L^2tj\$_M+=#0>"-'QPRgd5;\YpcGhDu#MJrD[A
%%5_t',lNh7/_[)N=Q?&-U,O@%+_VPF1TRtUq,qBFT[r7F6&ZK?^``t;_lF%K0QY'-=9cj#D,Q<+kJ1LoU=NML0i>L&TWZ;Be2h;;
%Y_Y7DlCOg/E;`jKgop?NK&L\Qmbe@+iXD^]n^1H,hsRV+N!;UldWSA?:7MEA&WPHgb%Y4.bH>2JN_PC"`&VcRO[-^NYgg8Y6p_pk
%_Tj.?(i]a!7MoC_indiTDL3Y`W%3-4JrD[A%5_It`?RS]F`FGlMt&WQeR;i1-dI8FM1TO^_NEU1>!YXHJk6Q4Lbm[K+tHm1dDO$t
%&jYYIha3D:B<Zrq.7f:7\%d&k9HRZ$3.hYs!jj9ls(WY>MsoKdob?K*)/LEmV-W--?*umIoX(EQ]s@"B1,ArN"rh6O.f)s;&i[*E
%Ji6=]YuI*+7J_kGJO[D;1)%*n$Pd?dJe",f&TJ!oBLFF%ViYcQL&mM2.LJgE0h.\L"ra=rHY`#+UXFRt(=KBf`#*Iu)ee:cSl]]A
%N<^IF9n?QZ<!imdiX@`lB]9NfT@MBTIDit)(3h7JW+/Sm!s]a=N47b&6lEn.SaAH<)0#j"BUbr3ko+20ZgKf$J2-$l2UG98h!F=K
%B_;r6)N^GU>lo'+$oX4:ljg^\FmTfc?H&<!d[sSQA&K7$+<fV_7Z5daU5,O1JGM6+)GuS.B<Zr?Oa!a35p77WqsfTFEr.j#3H56B
%K$\T`HJD4**G94@VZFeoF5RVJ]Al>BX/,p!MjMKk0i"5@#9$"fTckG/kg=!Kqr9!A3,oEJ8>@2O+(AbE$$""iIKFQL$oX2*l)JgP
%rkSr:>^EK.eE%B&";q?hfbMZ3R/$S;U(8tRS-,I_el`Qg7&I,jCRu8,""'!-_)QE=e,?e`%2`r`X*_I-0`OFQ'+%Ko&SJ=V7+*G^
%.-EX8&uKq">0NUh(aI=6_hb+!^gg!m=]lt@!"[Gg=i9#(N&ZG!,Eh0iDt.T&!iI-Ze.3kJD$1_r#1NPGe.H49l>=+dP3b3"3I?Dr
%-dI:\Lub>Hdu^_q#0XM-a\/qr&cp(11Y=CU3A/Zg!HME^r=EmYTep%jF'N**$r3;pLCm+J6#'c[9,^B2;/0/`2$=e:"rg#W)$bI#
%?nr3)M?:cBbr8$F7\%;LTM7NY2>0E>.4,s.:U$3G#7`S+#b((K_@6iHo0@6G&d9.m"ri.f,l"o.p.Rff9V?V#'JW@Q!sb"G"M?#9
%We9pjAlQ;+1kkg_#o4-9^k(WA_)#Cr>!!=D1UI2]I0:B3c<par_a7g')GsZ]JEA7&[s_2:&SJ>!jE<!"*o)RoVSbmP09D[25XA/8
%_$6>]VSn]KNA-Y.8^]d(^&EZeN"bBii@+M(Vp@U,P<rqG8e)A4/aftuSSAN'`1Ks[INGO$g._CY7gbs/Xa`pOIP3Li<3Q$/n:]%5
%\XmaKdl0rc9Xf$qo@=HuD?T]oYe9)i$0Wc&Dk`Kc;t`(GK(^YjRODJ<P^Q8j]R7l9-;#RJAR?)sp7ARnM:-39g"/Uq3i;7ZU?u^,
%^;NFFA%])sLPTst(F'5^V>c]W;9ZOh74@n)=cP611fouqmB71E2rhaiiC9ZS@iJfrmOWSK;3qRf?VPfrEGM,K=R(UAKfGc47+JY=
%Glljb-hCe9ZR"(Xbn.@4Vo.(J<\Cdp,mpLFQ_MuZlXq><`BBlF2\7USe.j!PW+)l.X=$Br0c2o/,'crsM>V>J6Odgbo;%2N5mf6p
%,%/nDAq90MU+JIf!7K2OO@cr.BuqT=UOXr+^B>jeL`Vp2QXLEG*"KhK;UQ<t&!jJ8WMtb1ABeVM\SA,19/:'ViWHo9\Q!Z&I7USC
%"R?AM#c<C@)j.c\_PSE8H`1DUE1SV]rDM)ZC_f0G#MCa:)6hiR"+C7(!(S,G=Xu)i$&Aka#O*1i]I1Rr+-(]HB<?-E%'(]q(hM2?
%Aq90M\eKguWc127<YSFHD+g8_Baa>^6-!^P(`8FZYQn\K#N6^QK,.)9"#*bEN)]mg'k^30N(M#k-%Zm8mhQKu/BJcn&RuPgX9r.0
%;N,a5jg4Ce0fq5"KHq9f$LeT$c5ZGA;_\AuE^;2blcB]`9FoN0,'ct;9g9Wl:rcbu4;h18\922\,%_#c*e#^>%O$\B@'%po!B'L2
%X@q,:aa,^1*eQaf,EheSXQ"3S6^"joH*XM0lMKu'OB%@p6%TmV=g8O+k'm('.uDi>3JI@ITT+j%@q\!%LZmHR]H>"g)iK'?@;Tt4
%/=V'>c(5BL@r-;p2I"15bM$VCCpn/9/Ru+[Yh:`hHe&Daa05m'3m>WpCa*JGfLW@@*=IkFhd'.ll6Q_c#hF`<r>6H65mP+5ann@^
%rE.i2'l/HnA(agB@F*Fa`9\$Y=Y!M<']:)&rRX\J7FaGTo*S[#=\jdn@sX6N&]oADSGM3SLK`79kK0q8`?.(?LtP)fSCKg>C<'KE
%==[[/eW(*Ej/hq\<dVh9jT/PAGd=En"KO9tV"uNN'uIjJX)OUJYR9J-Jl^$=!#3n7//bM@'=*M5E=YXl$KoO:=t>`\2AjC!+<`.k
%m\OcS&,60)91;/@;K/iM>*5na2u9@s9FoQ1,'ct;<BhJt:sE2&4BY^s"KNO^AB.hi'<JX4eV:K[,Znp9+C!-+Rp`YaXELZ[cBDZO
%S8Gh5NgL\0gfXmIHWS/N]1tF`eV9A1!nr<*h(lqg)j.c\A/0m[*\(;CS0uKpQ!h"/XB(ikR:'#M<["M=d#*Va5VYDma]Xl8<\)I1
%`EM4_=]W@uSF*;3fg.+H*Jc$2XE+pI!@ZKo,*:+5:E-997rN4hJ$L6o2C.aH0^8o'*bnh&S0Pp"\8lX[&Mmo"^OqWq5/CpY)!r08
%?%UIaNNm,Tp+`=%(lM6$TTP$TbG[H4Q#*3]bVH1.;(Xr.5u;F?2OY]b)E[dla]^,r:N(=Y"-;\4qF2b!M6Q9#iuXAb(!`"S<QVj&
%ACMfHJ4`$!<:YWV@hgb%03'$X]6t^,:^9-#!fQ8nH#aer5a_.qE0%@l$SCfJ)!_iVfX&'Eo/Z.MF4g"CCfr9*@LcW9p,bHn?"+:j
%5)2::L%AhWKq\ue_h9TBbqMfXDaMDp+T;u)*gF9MMDf^\j=QXu5>10*(bBAl7f>nFkD/.@PIr3eTB!OTn_N]^ee-e^MXN%S]AbDB
%.D@;rg+)*o:@VU[HoJ\acCa./B;_=S!U*#-L$(Dqr"D&K2E](^^tNL*DjJV"AuoioRNoLCVRu=[(U.B&iOi<b9+`]S"LMYj9;_[j
%'']EBpuqqe!'jXZM).[&lHs'.1?sq)NPk=J$/Q<Xcgb9gjr-NEg5=-t=XE4AP\dKqakMr7\Yc#;X(6:2]htXW2V40.dgkQcn_Bsc
%meBmgc?#K7\`#Y0]U^CgF2Q&PE1YeucRn=jj6^gB/C1%an;O"\/%BL$4@B,3R-1(4b[j/0prWZbN4!:\@rI$55:6D0akDSrF$(hO
%;$:u'9?qUq+B8b\OTL'@PH[U^TGafg4=A?N3%"Z)`S3sgVP)X<JnH]W7DjCg;EWR$B.augiX6,Z1Y/#dgn]1436us_Lj3u'/&atu
%fo;XDX&=e#&MW&",<-,)M03+n=Nao`=aua_K5S')+W9rCg%N>SO7g.3cCa3&.[aW6\OOr+<e>CBY\-7BNfm2H<+hICfWu:/=t3X(
%QHk,/[+LJ!qBLCJYl&!_\&A)`I+O5N7aR.'iq':6GeU$8o;rSTP"a(Y"jL^,T5X(Wnm1e]VX0\93.HtW/iDN,T;=H7ml!&\9f1`:
%DlH=QGJe'mM<;EEc$(,OGK3qIr)p`W.qLQp#hm\Cok?DCE5NU?G9>'gQP;4F]`k&HD9qAaq]gLKYl%uWCFS8hnZA)oRr&BjSfp[>
%fi"E\;T35dY),Rd4B.';PX.O"VWraFg*S*2LN;YbiuaFm/!BY%\SP_-RrEaL`+9s1=[cRr@4P@%AJL6/MR]`t/t7[?->]MMEnPI,
%(_=1IFj*.KXBP$8;sJJ%D=C@8[aK+2(';&:Kl/Z[+3J08*+]BXVNidm.T=neCmHB?*@#*@%h,d@a=OX@Reg^6M7MnR9*g>]m"&H-
%1aJjq#gYI]pD@I3[hSAqpm/2LP(8R2ac)R_c6^CTZN:7#AZ90UK8.P$Xr)\$YTbo4P27V=Or5tVAkYR^43'4K[Nhq<kQVE=GTkZj
%5(_gF>[>0p"Hg3&9+C2_dh0rcei+kLr[?ZQ=T5Rc\&A*KHoI2VOGE0n)t#jg2NdkJ5bXZA=U,F)r_L[Ri'Ki#OK9P@Bu@W?#Qprh
%PTNcU7#jYVEa3WdU9]W'M#_!i2Blr`E[N&m)'=&No)2B;\P!NC^pK8F.Y?)oO]N+qh&*\0&Km3G;;#p7,!]7'$/_HW1h5Y(7AN/j
%1\WO0fJ+tS4cE"3ER.pL#j=b41FFD4+tk2),]kglFl'*jV(Qrk#s^H'd+*sE8,;S@ZVeMuDCOSknXXX$,+ornbFP[6M>;&"HPI[)
%V1aJ$!1M;U(G!oUiOe2H<WP:ZV6l^lWQUPsHoHG[Fi8Kpik(*CY'<T>MXQF`[Yjj_;gd1/h[OL\oB5o:&iP+?h.U#1_cKBF_cNB_
%)h,tK"58E&4TO;OR1188UO9Q+L/6JW/TLb@hjoS!G8JD-od>s[>o?4P#idRido'8#XV?oi7S&RORuj]n_C5u758<Md?*m7<0"Eh;
%&qFkY24*/,M5<.AdKl[.`8-2#<=.na5r7)L95j0Xnm$8#h=5n9im7.36aB(n4m5Ai/[]^TG9&ku_bcgn'eF*dee9!;=a-1WK4_@%
%+W9rCflj.]:\D@DcCO&8&m7Z0NM%;.?h2lN83GXg]f2HuaH%@M<$Z(FJpOfVOGs#\Cu_bt@tM2.q/^r8M:kAFNOE<&XakZ)Hc]n>
%1+\(fai&!ocjWtGfuF">gD-2pb)C%jF6C&Nj4G4N]"p9UH3THZHj2V<j(A@#/_+iG9)uQNL+tN\5K\/eU1aUO9M:m?_`-)=AbHZG
%ff0h>BJ$HD^stV1:Orb$#UHlGW'/)t.0:E&ahT5KlN]ErK<ZP-5Y'oiIN4]:D9G;,95`L9R]_TB-s.C.#tWE8AD8;i).1Lqo_hT=
%\S[6Y?s6.T[\0($'K\]J2o_:T%ma@S.!u<90Ra9gAM)"`XsX4o=FEOllAtL@ZRDPu*RbYacgfhfq!Roj]85o6`HN9kh=-`!']0?A
%D&`$$VYKR'^,t0akKi].7E"J_X_S(,B]0H9Uh^`t.,>Pc(a[[!lmUIKCBjm_2$*API604LNA0b?jI[oI4.J7MF-Yaqi]L;4B:7a^
%17fYgJ(TcPn4Z,(<loWQ.@r'8F2cnm]K)Q.[l+c-EH9)X5aZ1'P`?2YgAhO`M4E<+A4FYrgO)5M;=<@3(bi(f>hl"/CujVG5W;1#
%jeb[OF#Q#X6U*NnPdQbFF:1>i<po9CqP-/oDmt6;do+oW9gG4"[qcW'NY\@)"1tGW\+Y2@lV'3&jK9',-*\0;)$<]r()rE6ItV_[
%Q@H!q/TLb0hee8>QB/J6phiuW2\Fq)DlHM%?1ZH%&`6<?ml'1;jXkKO/Dj:D+lXG,4'K/XApj>%^AE`TNq8gG.gM^bD'/<(-ht\i
%\]6*[\tt3Ia1(+f!Y7;_-*n39P32kdOH)3&&O>U7TU!U49HZ,X_/'7g+3LQn2?LaGBgj@b"Af(]Z@!82NKIGZFT#N`q1975U#cXn
%el'BU'nBnth"!o1UHEV@=29i1.;en/oppBL+T^D4=jS;l;:M;$/F3oJekRFY0EB@"=m.$nNAAb1%g,j+46c6%-q:9;%!\qB`tq\Z
%%_SD6n5&gV<6XA1!7jo^j!t-&==`P(7=$1@=3T\T@)]L:p@o9gp6KaS#'gk)1c`'K(3jPP"/pM9"fNnB>H+Ci$OE.4qBdKRLGISh
%Rq9HeBr+PZ/F.>eN6Ad<`Wo(])4,cqAJ]@>Kj7+Ag*43*-;@%^&)e-+iuUMkF=W:la/+a*PTcBVF'4EWbIZb>en*K+Pj!]aApbof
%de,u<PS'6;Cdf\]XCEma!kL,;bY(4N<U;$)CTE=X,1i!e,i`,+!&S3Y%EYP5b&bh?"9Na?9:S5eG9R``J8V_V(_MXN7a["lL>dqb
%ooc_I#Y5@h1Kki_8G]*/o:X$P*RdnI/.mc2[XugaJp+LtT=(Ln)%%%6BY+);Z3e&/=??eE@.YKs@s.1[W&MT#+-V&/ZD-*1G]Q!j
%'[Ms6//cbpBV"`'7:u^oS!(6Z-?uD\)67.-@rITEaa'2b*R:/7\Ol>Hn?FmAk;pS'c$?I:4&q1$MN>1-4P)$R)pWNBgYoe*T)05J
%4WeIcH1"QmGF[i^\'q4!DY[Brc?#?3\`Z*L]H,:ejgc*4Sm0%NWdgg,[q10S[U_M0>V<C?0.[+r=FE7dlAb<"a5ij*]H,:ej#L]4
%C:TV1j]8NBA`[[;Q)j"IXu9kQC:TVQ[j.[).*p\keT*0A`1,et:%@$0Z*p1c-H1&DH*2ESFc,@NO1!q/2^t>&c?%1`iOi<b]->(4
%=0SrQ"m<Eln_A2W43ho6ijn)Zm5`L@JnI:ppCq1-[hJ;oGa9eM-0JDdSi`(m=b.aB*OgJB5^90!)67.-@rITEaa'2b*R:/7\Ol>H
%n?FmAk;pS'c$AGlThBcA!GKJVF.V\3cOK'JiU(U@*7$b8rC[.%Z$+>a<R>Oa3/fcf;AD%MJ9uR(gLpSU_7$&(.d;pJh(^Q__#sC@
%mOZse%/cFl["D?YZXQ;8mDt.o+oe5N]ArVS/n%`i5Wr:e84NOi^2[9SZ')S\M"0)Ea4@pf[-mULFg$k.HbEhdS%?KaG]VZOf8%p?
%CdPFV.&W2MY7Ia^IF>^Y\$8^7!SnS3jqFI^-ukjjW6Z(PKE/kmWad-1!&S2fR84+QO7M'[T9+RDdh:iinZC(iA^C2GTGqagXdXZn
%O5N!$DUh]WB[oL9"E^=h&f[!2J!BD^>;[ikVBsN[iEMYIWL3*F5VlRl&CFB&FbQ-=l(1^LV!6U%5$%0-$J(cEo,nI-1aJjq,b]:S
%nkTSK&Eh>Y?)]K5h)H%o%2R)Re*RJRrs0*%F]JZk/&C0fCe:l1/=d%%BPg*llAr7<LZKVYGY=Pka0uPiWYs\8FJIr[SUgK*E#^n]
%1Z5n,/[_ZE9BSSs>2PF#qP/H0aNf;Vdh:iindX\CRY('hTH,Tu;^k@2(kT%VmL_Yn"br<eW$B5a.Th1hNduG_fT;'g,CJOUr*t>f
%`;+J%/,@T!?&O5NZqB]7,2g)L7rTGe&`*\=f=[rKor%$[BL_;,P#6^nDa,fQ=Naq.r)pb-lq,,SJp+L.i-b8J^AE`TNq;)'q!Roj
%qhX])_)DkI4\",P/OfRt^9o8dAUJjOnI=lO<)2a-qBESJ!\c;S85\r49%KO[,G5o*1R!sX.+`oEr\;M6inQPsq+:<R!4p"tT]ZPb
%=7P5O^u.rN?GhL18"]i=K6?S&W&Ml,+-_8Vjp`W^nX=6Bf)653DQmEbFdqC%j]jaWTu8*&!6nnUc?5W9\r4)dGXI=O4E(aRmmY(&
%7aMV\0(J85U&=QX#`aN`2M5>RL(Fp4n3(FhbEA?Wh?_^m./+Qi7Q2$$kI?h_<_bp#[8?-A]j_-jd`SE3b2-%$-VN;o)/I=pBL_;,
%P#6^nDa,fQR,fi=rZ'g$XHaIGNOED%3?XGb/g]<&F;95*i@QplQ5kEe[([\$ogegqR8tB5@p7mi=h`.G[LDt$d#POIiOui[GNCSj
%]@'JR#uHo"TosP2krbmLM[de,5JjiNQ%)EsL,aC;CF'BX_7B94)_;\t/*UJ1+oW&nL(_R%91=@t=A+hMBB_PB7V`s+;1FgI5:lh:
%c!03*3PLbFgi;]q5r[L5>c-auX!?Z8Fp^tH6/93(62*Z<2=&T:H-hO/N8>r\;83"5r*q<sM=YBUY!F3(lkG2I)f<nF&chH_i&EtM
%GJSZN]VUY]BB_Nl7dD"V;1Fi!Sjan-m-'`ZrZ'hn2#&?sm:a=G+?Y)'A`E=g[@"k\B3k"mMT"bCJo7s^oSNMY^2[9S0n,.BpiCga
%M:3i(DR>S!5&6QGIB$&pknCW;>7ueA-O&=>g$'1IUO5^`qP<JFQ8jASDgi&m&qFl,9uM7>ik(6GY'EZ_MXR!p[Z:-#;LCD8hu*Bn
%nRqZ8MM+)^d#GKsnm!?C49pq":nC%oJZtt'+jVTN7b_p.Nr;hhHS3Vn41_8E5K>_?=2"g1*N^rt*Up1mQuDIT#l.L,CT1"s9gLSh
%P4O\3&\`6er\;,37f59\Q(le&ba+'X)f6V8eH+U#^gTJ29q\RF'lU$[h,ucLR_eiTACM]4gPs??eaS;QGE1uA@6m?/%CTOL1c#,@
%$``KE=\uqu,&F2L=AUI1#0SQrfH95/NQOK9nV0#IQ>8@JGje,K%^mtahVAs(]t<P)hVIh*,m6V$([efcOGs#\Cu_bt@jPn>im7.#
%-"\)^a1#Tc%37mDh$Q@#/N:<e+9K,nP-?)Iogd]$CpkcKVBO6Uj17t0G0=Nfa,U36cZWOafktT^;Os1l$C]And;1b@g#fQ7!B[/)
%cCa41951=Ff213m6Z#a?C)^lc/_<hRP_Rn4%CM0Pe2F.s[ZQ<uE=Febcg`ScHqQA$a<;,cXcSq=Y2jtS>Y]BtY:Tb!BM6W0p.+nt
%@JRqhDi+)Kq!Jc`3J).U/_A2]&o6W8__lLhYa1`2AkkWJg4jD*fH94ejdJ2@a0`e\Z[DM/dYM\;#hmZm*.AjZb99p$j;KN'bm2W*
%J:oKt+9FS7RaLtdACM^[)i*Ms.p5LWIu\HXe?gd(K7Ju#eZKTc([2)eK&_@q1EA>?6&pQ$V3:Laa6u;M>2PF#qP/H8@JRqhDi+)K
%phg^F<!;#j)fA*pdJDXU$4-q=.r&G]L8onAQ%EVP27'#dDj5$%.0!De)rfX5XufSB531FMDQo[8.l:"-6?N;&#`bZk;-M<uCT1b@
%g$sF9N4*<&>,4C*[i^ocXQ(mPrX@[!V#'7T<!&N9<cI:E=A]*UXf-ZoXf1#J6Df,>,kjhP%EYP5jI6S$5?<Lj`V_a1'38'63kh!s
%'`c(PW6e%J70S?%Pd$kdTGq]\74%n0[[@jf@)b$f[\Ed$[(SQ)jZ9_"Q65&_LE59F+n<hT!Y,[pL&hC2UM]c14tAJfpH9t>WlD!/
%;en[iI,A8\jESn3.)&*'"%WAu.QGE,Btc/cZOMm^cSi-9+F,%,X5HsXB,^uG[#M!Z.Q\ZmR,,9"j66M9"fL&_U[Ank;0Ou4N4N3r
%O:mV+<NrMu0^9F$dW^FC\$FJFN7j3V_lK\tmi<B_:HZn27>uUqb'1gP)ga+;m_fZ%T(n!-'2S4"FtP'22gr12.qm0rE;FHRMgU85
%p76g;Xa(;#-f6ZhVai!CHriHCltR>u-U-dAa]cY-,,)d9]3)cTW\*9n>J;oh:5G,ch[.hFnsqAiKmX\)6@Zn^3t:(/37PMQICJYc
%ODf?)mu"i[jh$,u%HN@Apti;WYnN8Hht.p?hZ8-1o'J$d*dtM=&N#Y,I*5o!lcHWFHjB3_&./;0hZYPITeZS)dA\cKB/'0#6j:-B
%rJHF-pq:8/XlNd:95J<WZ*+d/e>J>ilPIoK]]aOHO/ctGrW"I6XN5KlVW:NWdE7.pXDIT16?K:kpSkgqm4&^<VV4P7SErmpj4dQe
%r,umdOMss_1;7%jJj\`)o#)p3/m56B7jRud<P]X3XqJRM2Ni"=gJu&pnf8:`pi_o0G-umK)rIe2Z<"5`8G9NnK!.WcH3^?Opi]XF
%E$*eHlpLZ/5T/cT4l,ee5b@bHD>8FB1=Lg$h/L%d2@.oTGJtjdSD[RgXB6shJZcnA5_n<%"tuDSjG?[B?E.$TLHt'@\rJoM-%]'3
%JD%+AU"QWr%U`,>?QjY^niRkfJmGL6fe:/hD$QI,;Kb)6qO>2Tmg^,LWA_Z^i"-Oi%W4SG41NZ>;WQZF.bN8ufGuO<V!e`(K9`!f
%K`6_pLqAnd<,edq#PkNgmn1;%qC\*&Jnch3Y(lBsCDMi4^RG*qheW7koI[MeG2M[/jY#3t`W"Jk"(&KSX8mA?U2?q\fYt]8[t7>c
%?D:ITLHt'@]#N3m^/T'/D'),hZ6't'6![\bpuPfa<a!WkP5dtK,cP0Q]7<$68`*1l.M`W<3;r.5?$Yn7#Yqc2p.i%%m@=[Q-jR/(
%Z:+c8Gf*&U]@m[?-O$.7?"!,sZI=r_hsd1qdsXZ(W(eZ9:<)P4+W]c.*Je6rm]1r+g(!,":\`eP<\]A#p?B;"0CMQk;/[K]#u:4(
%EdPWgiF*NhMZAk%D#l-=`Hp0j+S_aL38IZ(ks4HM\i*T&7<".'("sFs'tZr0=6s)nOGjoX'qB%3MOi[h[W."%g$)'$$>i>akd0X6
%<*QTQP)@Y"H'(@a-"TKe7\<*RVcr;jCd.*q@%TmAkt(#Vps-l#64k2P1[ZE&s1uE*mNHBY5Vi$EWaP::iZ:G&-[]R^6`B?n,^U&1
%aAsB?@imR,+#R8Ne4b;?N.'2lohdO=;)@lBZdhRje47d97jWZ6\$7\?Jl=8(9Xfi:)crn@"H\S-BbfuLEFi>C8`.$5XmC-THY#7&
%_jK74#L#cKXU]Z#4',p8]5=(bZeN#5;DDdmAT4Z'g$R$3I92rpQ?Fl+ni)!WWlgY8%^g/SKD&T@iO`rsd(Tmj%hrN>>m7jo'7Fd_
%iHraO`Gdtrr(Z(jnsrTo,i@#?*QWFi,\,0'$?ih.Hq2A(,i8ojd,4JTD\.Asi)Eq=NQ"^L^TlFCqMiH`$V6-3+B61[2T$JlJku4q
%nA_3.dufSJ,b+7K[$/8@pC7\@YJ=::fafTU(YLi!S8@%q2:;soV1/Z\g'-Po:\`ePAhe#_66^p.[rFlr#Ys7uhVJXj3$b@)e[RHc
%'7io-SPB@#=Jt'5'5Z+)LU[#BR1<c"&eju!%d?%>m3:Nc8;(0iO?6(CNhH-;1faVI]FdO8]@`eNSHq.<3l8TEAYoR']BL5@,5b?T
%.CP?(Cq7jT3['Tir?^AKR>p6`9tDt<\fd+)MWDs'4H+>j7'MSdJQDklmDd%'-`.&qP,Fq+$Ko?`J@#dK`!@J]HsZ:o=f^238G5%u
%n\ECE?Re$`#KV'N4D280<OQDl(SZI#s84A!`Hn(l_'WFmaL3kQJW-^9QYS^!r_!EmfM'sn<jiZP4!"ur,6.Khf[V=kG-\EE.GG`&
%N3i/GmrjG<LV6\337PC3+4SmM>%AB$3nib)MO2%-+RO\XoiA;t>sP"VK^UL.'fuGQr(Z(bnf?)d-f<eMI6.$!M?&eqI*5o!lc?QE
%I!bE)&./;0hq@Rk;([7!U.#LJOaKYeMO*^eC*WOLQ>c\=KsK0id,4?[%`>b;:i.N9ead"eG<r$6q(AVSORHr[Y39*D\WFnioPL[R
%Mr7FtE4n=oA%arb>jlPB5Vgp&<NrOCokqSnHokU%<d$Ne^"sd#Z/.'a;_>.r[tru^f=P5iOGrjM($o[T]j'tthmhOFluXM"]fS8b
%]itW;>$162!J`2?dG]CqMZAjDhQ;B8/?X1)5%tte]9ScoA?U2IDle/@i"53_]t4I#[E%t.(',Of]itXnYo_N/"eTc$@D,m5ks4rg
%GP&m[U'ON!31&8A1oD*Pc6]n)+;o6W.bN;2>b^/?[W*osg$)'$>[e,]S=0^Y[5b)8+uI=Q4jL%7#Tt"+C+@ldigcIqPJ2$3:"d(=
%aPZW,bc-HW:`F@KX[Uld^cAe<!@2/M9a/.4S5U)K_KWdU2.`[1flLnJmi.A&P?seu!PQc#ji3"V,JlKk$iuIlYIgiC<uYS=?gpYE
%$.ep;SW8C&VXMCfr$",N[\d$,o>cr<S\G?Y3e(WCT_+-XhGpe<c$GpfYY!G>e1+K1#i,sAHf'?m/[m?;@cN<Jjh?GFU[>A6Xt.)d
%QKnle(QKk$iHgDc`D-P&GLL]=>R,?kaL/K^HZ4t66__!1,2uX^NT5ji\dmd^+:u,RY-[4NUY&8CPN=j!l\IgREZJ"n6J'>"S]Q"D
%+ETPI-eqPiV1M)$orSPf\lu6e]#Fpu)E4)lG-Mcf=2X\H22`d5#fQ/.CHTN69*M5/#;a@SSNLE;Jkk_C^K<@TEO`OdG-M_$':X+2
%@)c<:ks35prKh<[Cd/N%@e"9LR#JBM=qFqc">V=,<NqAjkh8#N:P`2n+p-G1qo**jVBqa,9/N-(XP'sKZY9_YdulSXQ>e`6d;3!l
%B%%C;VBqa,,CdUT2GWu[_4`dIl$b?)Vu*lpSi]Y#jXpV_2GA(.*)CCfFiMo/PaMo8geHC\hb+^#l.Wt#WA1%C?>9l5pJMq^+<CBO
%W![^U$cj!Ro^1SM<+VsPTtfhRnp@>[37S4X0==74^!uhOfC,QE#U"DA:K.M0=qC(u$9m]9^jE'':.IX#dl1Uko%M)B>@N<l<lR(&
%@SWYH!ddN&_)GS-L<!642d<01?Crk+j.GY;EN_[jlT[]s_WsGcq1&D85@/B5PK`p9m'$HaP-M@n_KifJgB-!A]E5.PocGiQ<;R9k
%/+s<`QlU.Oer!`Q)oa+h?a[>8=m,u*o$r5F4D'eAh%cE&gT6XF)g@,biL8_gK`]*oi9I^NXQs+F*k?s[-"n&d#_Tk&h/[pq?CIFI
%Ts9Q;fP_RKrqdlmrHQ.aUaV&pViru)&_\"Nf,WQ'Q8)iQp]U[^L:P[G\u+hrfJFHAf@uVficg5Jn,!B7(NKfAJ?.35Z*&,`GiTK<
%Q_7J0+:S)bG/oBJPhd(D3rAZa[ZS'-/-Z!q@(T)tO8qs[p54!X'?)2[n2f+D1'p7ne$(mIpT(BufMl#NpOBZ5Z:c_PV12-_(Wm#I
%JZI<6Z*&/aGiTKTQ_7K[+q4>5G2'PU6(+:+Ts9X>^ZFGi)#l50YKrn\UK'V(5Fnl1,#d4rn=!i+gbNK(;aGqp@4o8434MV*C`7\,
%9Mr7.2=(s65.ofbMq\_9d4cWO=tL?P.Mn%6/n&l/RY;s&TW_e5n>0=s>]XbgL:VJBk"E2NqbWVs9aHsXEg!]11W-'$\V/c?Q`d^C
%@F/)bHQFR3'u?TN7C;+H37r6ZJnMa^X)SMI][$_@-TWpE:9^ke$n*qlN<aj<Y0\pEi8K!jdl,RYK?%bcBGcL857neX*B[dIPB7c%
%+Y,Y`Qs`$gc_Ft@ZpIDpJHi,CTS5G]jpfj/[>9RZfRSe)OI2`0>"m@YJVHdA(bjGZ2Q(D]!]ZaE.C"<r6T[G,EnX:8cq_mh?k.4g
%6XA[Un\?E?DE4bZ!uPZ3:#%4Vi0'M$>s?TU%<DpBQMEWF5m;-Z<H-$=coMP(krV3.X;hZtoJjLqUOOpkH/HFe\/cCu<KhRV?"PVO
%P7F<d6)5N`ejXQASOf@IK_$d2(6a2.&ilK-A,gkfG.rROH+6%*^FcihABZ6%Lqc,f01pKko"[3LXl,:&OZ`/*j&=JX'aY0E%H%0C
%;4e+H\J<,4/OBQSdhN_q[0T)6*fm;Y&6rW8-Q&]Q$KFA4W'c]fkoE8H?Re#=HO&T,e"8a!C-b!\C:jgpr1`_>$4am"N0XUAn@jUY
%@Q<dbO4/Gj?X_R37qd`RrCcRq:n/i?L=![A0+%l5$&WFrMCLn"_ul3F]B$%[$"+B$25fgM!kP^^E652#B=Dpskg&l*md,+1!rs(r
%cBc9i[_SHIq5!6^GIDVBJ]Qa@mFn^k\@Qm'b'c_(Wp]4mmP7F+3;_G5U=_b.#;H/3J*@[fJesY!7U^]Q>K%RJTuZErH:,#jpD$qb
%@t/,iR#8N"<mp[L(KE!t;ujp8E<V-U"m(S<H=+NiYs_FPEHmQ)F_0Z_#FFB&^G@<4eQlc;.K-<4U0&S;!fWo6$4al[aqLQB^4aa?
%dSYcDO44!l#HsNh*Lq`9G7\lrjV:p0QBLrAKqS#9MBJ,c`_g^ZLYr?tM,ANT_H*p,;!;nF2hop.\-1glqi&N#]*7kHo8GZK((odO
%8(dsd';P2[")[.55lG,iSNMm,An[&r%S%ngdHDjH3''VY^sGK0#^)7K_ul3B]B-+\*alW<3_@=B]a-6Y3)AEUgg<]6;r8c)A^&]*
%i/il'on$';`qarBBL(6,p1HRrmHa3eZi5hZk8/%!pA0*^ad#qKJdXT\$ZFYi&mZD[r3O>'gB",DBa9Cn?Re$XAHs6>[X:LaPC,^;
%Uog^!ctRSqA8iq[TjtD(K\`J>Q(kMkq4#+YYLheV)X/8IEnf?JWhIRDQe=^F@?mRS-R]Las7TfG"c)">jbZi<?c#jK85SMiHEY?L
%_@A37'djf<0d[]W_9%D$#q?mX$Sj[E(S"a_N7*'laT^pB5bZ6W]f9>p&]#p+35&(.QBN,">#;?NSE1ldK3(lKYfg<CT(n!/V.u99
%"GHcOn(9g%Y$I+8OrF4Qc@qfC95Fp.De9Q74MZ3\FB)M<+``-Y@$5,gS5gs=9LPc$BjmnC,SkEhfkDe2$"+B-9cu0Se'(Pp3@t50
%/>r.tY2suh-!3sQQKqsabOrYd\^IljX_YK,-+K%!nHmZ;eLG\S&Ghm1TpJbjhrob!O5T<>WP_5F<Bh9:X@eYn8+;3bI<g2C=4s:I
%gmb<+$W:CKUs^ebj]R[;ZQKup5q:34<1!ig1^d3,(8TA08;13.C<_@?@hb897<$=qV&ZqM[)a^Q!FPj3)d6DJTo<h8.X2O3-r5e.
%<*[:@0i(X0EI(Ej*jn=-CkD=.f8aMti;/]]-^uCeb?Bp-M&\&l#nRV@dVXU/.,eUM,\'![*L5eN6u^7!0^mC52"0DWJaR:0UI>_D
%o.5P%%_3J>4TqPP?!uMV3>t`XEHj^-mY(pA_'a=XghCj`>#7)um_nOIL^</kFtYb:-U(u:K^OP71P"i[Kf]so@Z00-Rp[#dSWRQi
%>>WXT]+aoJM2686HZ]IU-Uqf5_(<$81n`4UoKJ:)d,%iC$*J,(Y=a,oA[[cR-(39]I:e)R^j&in_'+%hH"*#pQ`sJk&eoX3hApK&
%qGP-Y\1JPslb.e!*j58''j@#J7lQGaY!3ZfEYjld5%/i<>,?0O(&OK7EBs,lJkL!9+d@&)LJTS$LJZ:T%NH(Cc>hHoJF^W,X_/J;
%.7XK_(pl0hSi/1'ckPecgS/brDpc+I:GShl0!;s[Wh^\%)oMiBE9hN@U@?N<]X<=<H&k=L'j=?q$mhEf30\)"4d9pb"IKiap`_O?
%3Z(I?-L'$t:dTCD0Jko(S6fQoKf3`PQd"t/>@AfE10_`j79ihD&l]"R;/lbpg]cer;>OV9<j>=pk](k9Dn1Jo*F+1HH*<P.6J`)9
%(!CqI_1fO'bBl\HdSYcDO4/G[g;io6#H-MRTm<iqZ*rjrYQ8[CAPTXCD,Cb8:11^aMVo&YTKFq9mp"Eojp;AX:@IG6437:+0#@L=
%[_btu7CJ<OF^/cH&5iMF;/lbph?E"t;-KU'<iJJXk\rSdeeMQ^1(=DjpeZo"5%M=c"#V(7\G&sA#gR\6DanHSckTmo$9\mfmG1[q
%>pP##E*GJ(X)kGW0T3Q$>#=T=EY8$pM28AWEDOqNo#)oGDcs-.,:%@jSL7a1'Z$V)_RcPTc4%ap\'r=H\tl)I:1p[A3a,2k:nAN#
%pB^)Jb0b`+O4/Hp3L1C`@Oo[-\6*^1`Pi7,/FGQK>f($Aq%05C1;b*T@ZkUZbcqEa"/]7C/Enu\,<IkrV@uHEkqGROmE=jB1_OM1
%'908J$?is!aqLQ>]nNRt-UFHHkrnO=!teep4mY4C&__Bcg?PWjFl;CRklT#t*WQopJfX2=&<,&LLKt/-d==QEdlWQr^Jo.YcBS'6
%jZR&/k=_lX.N3T!_'(d8hNO6!9R3N:/U8>mk6l[[q[QB;mBoeE4lp/ifg=us!haL=&SO\)WjdRImR6Wa-]B]YX42tkjDXmTrD2g-
%"de\.o;V+7[om;NnMm/0Bkhf]S>s)N6h#]u`$h`@@B3KU..fL4isrOO'jQ?s?FXkR>.A`9l%SF=5bQ%'aXT:2-G=@Mpn[G](Ts$m
%!G(QTCVC2EDu3GK.CU;$UX%uD46g!Gn#1$7!4='"H%BgO!m21OYeGh9@Ke^RZ,c+b>M_MgpZT:M_g?Ce]po4J)W#%E#^5E[1J7,-
%]R,5sO4-2(jl,,410<rsNu!<&7BYQQ*j0%(Tsm-PBSaU94;O-&Mf3l#Gbkj4%B%bJ*\n=t1960nA?IuM6e6j8&"0Knp61:<cP9eE
%&l>/:L$pU0(%VQ^*iF3uA\M,_$'*B4eS)=)mDV*9Wms@"_._A0E6&L8Wbjq64@6)LWHfb=e+Yi^7JgE--+ESH?\G8]bA8=*-B`/a
%M<#\>`\Yp?/gO5?deK!5M?uKL#p"3Prp\]U'u?Tq\"uSJ]-T$qI9,5@1>>l]7'VrK:@:EJ@"0MA-r5e.<*[:@0i(X0EI&^>phT=K
%\-,<hL[aoae_9oq[X]bA#V#i7W47FHn:L5L.(r-<LJX!8'RH;+C]FBqp:c,OE7)!f/[1+K+h<(;8JK@$P_!dQ>f!+X6$Zq(er-,J
%;LSf_3ZQGkEMg0b^4TAQl2!CogXCH91/#[p1GJej#jD?+X.BT?]dM%>#X2[Eb?Dk)+ecg<4S;X1[.>#;H;d&s89g$(bZ5@+WKtl&
%JWKpE?M-^*kab89pn[L-CDBKqKFWcYf@F"5\C5Y@lFdZ<5%X?9(+3a_XTX]tnCRKT$>N)$WjmXJ0HPZd(kq]9C_i4p3YZk0hMkYE
%&R=0U[d_S0Q13(-$h&%86:@?D#gMppo#)riHYhX]c:Y=]koC_60,7`D'=;fI<+0P'g1mO'j]j(,BXDe83:o[VjYim@StM?ie6\<U
%l.e6C6Nib4g:tZV4;l1M[,CV"7o9[*aq,/!*KS>S:nAN#od+Dh_q4\:j7)IWpZ=k_$GMN6QG#<I:[ZJQ&)1L)57$N3cBS`[]aMpq
%T5_MUX^[<Pd,B'fNNDU,dMjq,4r@Gs!OM36(aL<R3Y"+PPUArb4_!!=UB-&iVtXr5F1u,Dj9rD;^)67-ce-P=9MjDUk@AN;cIgEZ
%7d7To4!u$X..fL3?ge;141Bi@E&aP^HNgpM]A?Rfm9DUVkqLgO)=2Z.PUAq/IHaq3*$M#nkr]eYp)RCa"$YDm+j9Lg%sZetM]e6?
%T'S5B"N-FO1J6s6TBt"RJ3o=GH[6,7NXFWEE!^DL!7d8BEL5?N,.p=lGS)D*j05b>6Z@^F8-G^[^4`UtM4i5Un/h7L;#Ti/ZhEGJ
%KG?=Jq@S%JKP]1H1QIfkF[TLgdA=+e5>+E7*gG):m5UkV^4T?cFP&I3VpRA?Mn,j'*Y1RuN39]"%]Lgtbr;9a]4J*RNf_WHF<3$s
%On;+`*\?ITSU3]oQ?,iJ"$-sYo17.O+ecg<gfQ<F_52>q_^[bd94fc#*U5,3iKBUb3+YCZEsX6jN7.S9[Yj%,)1*@[POX75#VNq.
%+4eha6/,c4fBR76pk#r13)pQ^YT(^uU\%m_@@clkD>#s&HXkcD#H-M@E7ua$A(iB&3:2r*Ji\m*-Q*nU:RlU^N5GH-[Yf?^6BBTB
%1qMg2\-,=gR\sP8c*''FjjfJU+aKhu/qZN0J?J_1PKkCrc)%%`KFXo$A"0n40"i"gp1/!gDF(eeBs$2qbLN1b[0;dB7d7VGh4ASH
%"a_6GF"776$6hG5?SC(ng$rnIiFZ1nnCQ?qV936P5omac<><8%GXHac']-='<Ql$hHCWhjs)=q1^4K!slCT16VW'57Pse_2oPG0Z
%TE6fR'h*'I?;R41V=u9P'h\[`*f'K1r,MhH3/ZW,g^\RkX`pq[a;326Moi8!BPZ+J<.Jpe>f!+X6$Zq(eu,ZR9)@dCjD[0S@+l!R
%m:9>T4Y>U"IBZju:Q'Ud'mPZPq:OAC]gN[N2ZG8c-%KViWLn^C4g!Yj'k+"1Ml\\'5E,0F=<OOBN2,A>%]p,]';KZ^KWS^?T[;`k
%?Aqb4%PGR$7p55H=;kbaJhY=s1ghiRQq%=8i/FG4bp^7A*+_]3!t%1$ml7/:joF+bkfXeV>n=T,WuS!:4V!p1O%^R=).QQ's5!`$
%!Vih!ir`Q?dgD]D>.Qo>-"QmYB(NY6JM0mE&X3C;;/lc;ed:Gp;*&%#<j=ndk](ppQM4()'7!B>pIO-c5t/tD,f,VU-d-i\n!Tiq
%A,#t[nM=8MLYrr!B5jum1UuGA-!q$DK6K_00DOJ,\7nMgDXTpE#V&=\'RQA,"5"+3Z%lQY'iAS\iSYJP%pXMSWJ@7IlQs,!k2@'c
%17uBTA`ieP&R;n&bkHhWARUtp$Z-&Qc1cqX7:ZiBH1jr9LXlb&I=b<Wc7n.R*"==g35&CB&rGNZ>iA6gNl"Sd(=Z-S`f!Z]T*m,.
%";c:q#tF0m_NRMN)GoX;GX$V'iu,#]*Lq^W#B+a?CVd[Kjss\0lUCe@Y6[Ic^c3gH?l-JL4>@33>M(Ff#mrgjn&?iS#VNrtMV/%f
%],sdQ`G?,S10-,0E9P8@9Yi-Z_^_PS1Q^s'bi#X66/c_=_5[/D\\9XD4Om_L$`WW%G;ossm>/,%JjXL2pUUO'YeGh9@a\,/,*13b
%0hipFb<&H4[0TJ?"c(Pp/V6g=1m&+T_)P.7(o;GH-;oj.PW__TS?\)'JkIf#@g6SIA%&%:a)&BoAZTCAi"1k5R"A1]a)t);BL(8:
%R%_2kS?S:9_'QV`mkkDMH'd2Vn/.kW&j[gO]IJfs&<)AN#tF0-$!Y@U6(u?Xh;ceC0,:"/r<^ri/OIq'TcGVaVM/4WTo;QH($pN2
%PUArZI1'8uE8(bISDN"pg#9dE$800^34;albWbAK>D`BF;jOo4.tUS=(e;O[*.euk-V!?K$!Y@m6(u?`^$qUU&R9nqm)]W!o:ET1
%<."1f:P=sWMjt+a]ijgG'7A5RJN\;$cTjgP_g+3NkM\hBiC)kf0V#UnOL=[PcE$'>U>CUbM,-+gZ<"5oOO2s.*a_'=Qr=X6jZL=_
%"lWW?LT-#I/Zon8YJ27ejahDN>eqS.6$Zq(h?1DtTH"ChoJjNsUL1?[95qn"c29u8p7AKq1V^^VTVBi;Ohi2#@D?D19(*Yp2:Bm&
%6BB$24H+H$#FFA+mG'5/m9KO7Z>Shl+fJkWF##]X(Mr7mU\%ltSWf'p'R?5*4YMJEi"R.o/;/[)(/'sVfKeLa8;JWZS\Ji@63W/&
%"m(S<Gi-A=0i(X0EI'PjTL<`*`X/RZTa@Y/E<<./&B^Aj;SaLn-_LU;oSsS]b0bb9_ZWpo^+^^^95sciK2W(6^+^/YoiVQCH/KJc
%7)Z'^qNt[ljbZi\?c$E[KO:*SO44"!#th_bGAmma:;7h(!\VCLM'6/sa,I=V8Ot3?Nf#>HoI_OfN5GG>[7Y^26AO#MDR]C=_50*-
%P&EmBQ[E"60DRM4K^ubUX+E]XJ0eR=.'6!AndY5;21(kMX*)B_]M)8?.m=^.MGG+npf@TlZ>mk,i"2FKMVjB@H_Dt(&eoX3hQsJT
%9*D0NN17A\O2'\?VX*iXEoTO.\=#uXK_::n\MfTu52eWaAhN1X+PE6p6@0jn(OSYjl&C#*[fpH]2malH[G]d`L_P+4<<\07!"6Mm
%;-K$,_,pFM8Eb"RYEncPH4)beQLdeq1Eg>QGp^4mS/9@o60FMpd,As#:5(%X4#loA';^ucEZ36XX4Q&cD&3K/RX:^(Gld#`;)hpo
%<[gO0k\rT'h6:69\F]uqO"]@WO"VR;j'TG)jc'"[)'"5kcGsimBg(C%I)2qtlu@?t7N8gh95qm/XsBd%CL;ZnD-XmdTHYS^j(?Jo
%jG?Ynce-6/56D34%d3NG/SlUjp!sebY_@Dm(:JbV?AF,N*K,_qNc4[s4SN%K$0POD.WuF;3h4Kj0fujsbB^nV\JgF[\X*;`SZDP>
%Z%tA>&Z4&9PUArb4lG[sF>TZ;j7J@Aa=e95JhrEjCGnYa2;tM,'g\d/N*9e3#Ym?oh2Kd/`_gNJ!AJfchIAXO)V:TLE!VKEU">pr
%E>\";f)iEbJ#`:pZ%tA>&QXlLPUFIfIHt(5:-`9De+r=HWc/0?#VP9njQO7`mWP!MUjW;7Sqta<&aBM=J,=/tJj]$Zo#)rY04CoK
%-ReUH]c4#4Ol#Da8&D>HX,c_c<Q>k@,\,A%"c$DhFVKe_HGZcDWZsSFc;.s#;$<fR'3?47@B;MuTUq^4#Hg+FLpW2CNWR?:UTf4,
%WhXUaTuc9dDQGmVi:;o/N\*SuNq(%f`tgrhA(=E[LL=A0'TCI%Xu\%&"3OqmN+]HeSga%6o6s.RmrXG3m)O`/W*n[l#)?SK79hN=
%mtpV,#RW^)n(/N@0H2Zs95oU<p_KRVpisL9?IVbM#cdCL\-`_^"_QcuU\%l$2I8E/:ulVBGPl7n_'umrH`Le+MpSfDZ05hIM]e6=
%5HKH0Y^X"g7cAb'>K%RJTuZC\E,Sb[Qf%kWg#tQmAg8@j*Z_t;/L&V(^>U(%#^*s2SHnB'.R+"A*DYeNGdd)!d[Td[mZR*V^CEG/
%cZU*2.N6WV)'"5A52/#koUbU+/fbBLoJjLmj_XM%K2ZadBJ=\7QM4#.$[FCkpHjH^H*;ts/Sl2dN]Il"SDHEtY7SP3h8B5LGb'$g
%U\75kX2jPaF:EB`D?gmrK(4M:_'m!DfO(<l%4Lj.^#R]o^Jo.Y:9^oKatj1/OpLr"U-(nQ5R$$+U4PaOKRG_0;0l$BY=:Mj:rX;3
%S+g<l4,Vr/N9cKU_QCJkFiP7`-t>B9JjV5p3snIA*S2<sUCK^6VfuY,;$<fTJEr4M)!d2:i4<D,\F(ah_L'(@7fh_.;0WV]m\h*7
%.!sc)"rp-_WSeC/1%-8(Gn0rI*WeV2,O[BI":*0JAsD-sjW,]Lf]2U1NSaRC0#;e\HL0gd6]\YtO"Qp?IY>:ab!p;U#)D,q^%oo$
%^#M]Mb0b`+O2H=_;\d&HE!h%_TWO--dFQ!_d+/@_9LhLHG<E<'5^?fQhRB^h%$-'PO41^\.Y\3]ms$<ON5hh61#f/L/V6g=W>I*E
%"QQHuJl-j7;_aN3!G.m\&S!_FZobc#BC+$cAFsPFJf\dIQ^(!->/qG32j,OPkr`I:<r*\)k\rLW`[POE3;"U\jX`m]Pd;4sPd;.A
%X;e(-WSe>HVjn&_iB?-KB?F),,*13bEGDN[0(0kMp10]Ig4F:Q-YbW(EUTmb&FAn(:WBB96J*cBRuc7_oU_$i>fuhD8dV,/.2bpk
%p&_jT_Bmuj.O%VfKZDMqo#)ri-[`d&7fs)]%e'%apQl4^_<pH-h6T]'kh3<XIGM5$"eg*-H8!nkfhe7WL%d08(8J@gg#M_mH1.[;
%0(0kTNlLF1mq<*/]q[=B/lWDpehcahgdn%3UiR&n8!T]tKFXo$X&#(]:RA%VQ`WGWVES:_5$bVnFIDuIRJM$YlI0>0dq.gnOiQ_B
%39Ns<QXDr=X@6e;/nR6/X@3]C39Ns=LL<7-9JB*-Gg;^t1na2Vc=2-ASRuPZE!h%_@"u+[`XM5b#W&iA-M`QS:Tf:Tn:pMP.(jJ,
%X-b+[oJjNSUSZ_],rf@,=+\iJ[9)U8935dd=H!iW$4al[aqLQB*jMQ*NWp2DSDK/YN[Y,:+78+>H5okh0oieNV,u]EJqlOJLf5$s
%n?JZL0hUmPa"c#iJ3o=7Hc>Z?0,:"/l[dpY@<o';SVDd9(f@9j&7!W[Aea+2YZ6VtGKAh:*fMtt*F.GaX?e`o>(^X-H4@0R!g5@j
%+D#NUFgqXd)5VHdCQQuj5XL7T\[D9;C%\mnl>*e.?Rr7m<a'pRf'7%Ie^mEoYLQg)Xgn42C%[`2G3A*Dk359Ql(r[:C<b4-R\uoT
%)q!C6&8?KEJF^W,XlDO7EcaUPa6DEIV\?li\4(KYT+5A&/fcoIQO]O`'+lTAi]Nc^o#0`\7@^8SNWt_2:R;Q=-0n2-Qf&"[g"3Qn
%Ha><&HF'TAW=MON4-qEVoL@Z+'n"GTK&3U"1Q[Q^c7\;1b'Km`<Q]WmZ<esFR@pjNoh;>7PkAKs]i*E36(u?XI4sRfmrC'I(OVhD
%FA$X!_,A]VeQ5PU(."mOT/A+N"`GebN5GH-[Yd(s6BBTB1p6U0icY*T^_M>'j,-&'>k'2%"@Y^^a&1GXo#)oH8%diXT7MY*VfUY^
%ntgq2Dh3@b3lO1$>=jQuI%j=SakHKNBR>D_o#)ri([/me3[0);%e%^<6D=`\_<uuc6BX.=OP#0]XcPrCIS\PHdh@.?>sN[E']-='
%<=HX(a<%7'j./sX>i,"AcPE3[-HY4.T.PXk`]KeB3!A8'T7Tpda*0_4UB+r@o6L9*5MK99g'Jl"-1L6L\6h"7p(-W'fT-ARJZDU/
%9jj9s!ro]id'dFSA>+N-!P!HX'l3cSNT-)Cmn-7!/<g,<?2Zk!Wmj4IY,mZ)<*9$AdC4lds*\nM5'+ApA.=Y98$=WkQaBcMCC4Kg
%WL-,S6E%tEI9rUs7nT6)Z(\:jmf2S00'Vd'B7Yp$O6ati]?GgK#;GgC.sCTk-\t9em;e&OAK5*NULA7l/QWfqZ)Q.F0B6pdI[=.<
%>lVt70'!S`!EZJ4@RK9CnOOt=/j6O;!#0N4bXT<.I>$@t#IljDi4H=D!(#G3hBS!BHUc"-R3(eA9dS!f\3$OF$O'fFZe&90Q.6J7
%$?Q4KnFht+^G#$-^EgIM6k'_C8$=Wk6e\L-22/9D<6QOh+_5,n%a+'TDFeh12RKlo&uWB(lRoE_?QIlgg+*0/"2^dgoeGq9nOU#m
%/hnRr*Ae1F1lPbYF578lfJFL-`&&(C0!P-L.(]g\+U_ibS?0,-SRRoX80t?43O=\6E;]lb)HPTi1YV&K9S'AtiH3L\RfC+#gM>X9
%@1o;hLl16Mlc1!-9A6E722-"Y<6QOh+_5,nG%E+0f:PE-CaZX5HOt)1Gb+LWs8<Xs:W50iCbg/k04;8I9frC2n%,+_-[lp#fG#"l
%__=Q/(ri3jL+sfAi.mPU?2B/%(iCPV0C"=dFDtZ]UH)0>WtNkEN_PM@ImeXqW4Tt\;#1F-GG0UB"h8l\'t\!/'TZ51ld@RudR?MH
%=2XC48R=UiGAO4J8&6i#rP3[V0^Qj&b<dSnSA<ZjXk4q@Tm3BeB"+@7a9)d\)J0@Aq0-YTbja\3CXW"=Den%kae,eaT8_WIJfaSS
%nOOtMApEl>(DdFil=TY@5;Oe6mat?]IIg\(/0DL>`6/%<_eld_a:8KV,1].7&<B66kn5eqS:H0NL=(OtN#A$1"$ABFa(Im8nBAsK
%6TAo0GN=qLiL)DLKY%61N32tD#f\Z1Ib%_kbKsMVUta[p\BSl'^<8Dn7g+\((<Y8U1$UZ@'+(!s\%0r'Kn58qd;n.fE^ketEkieQ
%<uaWj!e\R!'ZBpuaVnUo\EeK9Z/'73,IV_R"E6)si=Op?`hkm(ND=KKk`c`!ST5pua\@>F>p<'XF>fC<lCcNR0PDV2_e_Di!#hCK
%Rk!/ME!gM0m1N&XqK4jP=)El8)C>MeX!M5Ab_>&=8sin1At]V]kc1+hF$U%Q'R";kCstaKR]Ya*0u72$6ZpW=JM7=J[9=d*A8W*B
%<86cj1CH3.6!(tj22MZP=)=nL?;2*BAW==?;D;EugP#^G"Q4%&7-p)I:cqV^ZV/UqPQ1km%C>Gc&2:KHZ)P%CD?5%/[["`;A'8&Y
%8bQF:,>&0?<_:4^PnV(\Og)FHbX*%0cr7E"*hJ/7+uj,AL`/gVLZ=M=$`]omH(5"Zrh;]]$9#..a:k*\e[ur".l/1Nh+cK=$th"D
%_0G;]!M9rnA?UdlLgVkC71i"#*F-0J0J8i0H[U3bSo&$k;[QTFW@HL;=$gu]75fMIG-%3F!m8;;lE/tU3e0??8[D@F.TI&ch$r!!
%R%.6\GArF&k;`Ued-5_AV;lAb$!A!)$0hZ5;/lam]c5',TeO3'X^W?6d,B'fNI:3QOrGP$D8hS,I<s!/km>EMq3Jjr<p+hY8_X::
%/^8AWF>mK89DPE995K>pq.qFBA%UNJWaTePL_RD=<5C1Gl,HlQ8_Y,OB4[tC),GkH]:U&QfD,nO[J^YWjf%afpRFaBMdcj`G!m6%
%qU$aR4:qq`>LtDQ%:)NcE'!aKRhW^#gd?S^29b%iAIIcEjf=#,:ac#0<3Y\2d&Rk6d^b-^V)$P_d,B)<GRd=KQeVkQ:b>#_:hO"Y
%<:`rLr0"XA$9UPKJmE;F\L9`lSO]',;MI4F3h4K&rKn8enf:tU?]U2JmdaFiQ.\K1pJ`WB==0sTN2,A>G.e:*';9N^FKK!eOjN'+
%rXo?Di"_\Y?iQfi_5BM:(u4WR3;A.1fom46:V@Yr0K]mQY?T7$F=IuD1k"BUm["85Y?k"?ZiJ?dSDNLeN>=c%A'IpU]2kgW2[#\Y
%m.L"*1=L6%am7,-[]*U`\AT/!`I0XJEM'KNpG`p%&a:5=5Q]%@Tep)[(&.Jc+G[j[3-ZWF"K1$u'R<aTXumNRJnd'HYl`:432L!,
%-#Oi$FMd_a2+pLs(Cn!FY(P,+ftlc2?uI?9UUS\&i)FV@3'qXTDaalB>S"N59dac_m&`f?*=2U<hrC)(m<]#'g/i?AWb6Lr]?D%R
%g+fb1=<a[HN2,A>G.e:*';9N^FKK!UOjN'/Nmlon._+P?\B[GrY4IRIkar*2Z>lGYi)X'h+6,DcGb%pS0dc^clg*Y>m<OG`d+@1E
%e;>V:[Gla5X`sgSc)urNV/^!i+;._aRT7FC'PBS:@`29$'j:Y`X>?A$i'Kd=l'6uZH@YOq&g0MH@=Zm_73m:N=Dn`d3XW!A?Totn
%#`@OQ=^Xh*7;,EbN#<B7>6LWT0@m+1=.<W,:_67N"dT@XToOd9L\$1_k?f\uje`-Wl<Ar(l5PYQXD\]$g(C54WgS$]jG?\mhmuiC
%R/(BMds7U5G_VOMJG4"e@tf7h3P:+\1^/a(/J77d*T"\t89t_i%rVgr-!9n\b5KS"m;rMuaP:+M<Z+ZEbSK^ep_T4S'F?5jj&JqZ
%]@qu"M,:ci\lQ(p8Eb"Pc_iLtg;,3s+#p:CLG>fDMn=:7Q"Y]6N)>TBG.eV\<LZfEhmujn'9L;oFRG-Yn)/6S1$@4-3H+@Kl^[.%
%TM?`p1>)7\bkWTMc9:;p)X9lWE&op9m$nr;m$ns%m$ub]ZZBa2[*o'^A;kn8YcEJ;4+^5]L93P[9ZOCsn!r(rKk9P'AaG+^Wu%),
%(RD$:QE=Iq`a2ce?<FX^@2XE#)1,fQDR_=UQnR10.CM4+0.P8705<-tlhR8q'%CX>(WkU3G9_AW'ZRVb<Ql[#3h4Jos&2!d_'M&*
%m?'!)MJO:62Ft7^+pB)/'j%W_>tCOmV=?!MPtD=8rhaULSubaE>\K_1=S$'Wk/dtTP8.l)XPc3DTm<qQc'&m2-S+t.+G[j[`V/st
%"fL.%@Z+P'UID?k[cjP3e;d)_(#%W+jG?\mhmuiCHo@)(l+HDr`OgL&Qh0p6Z5QqS0/DQn?=!R\[4$22e-V)O_$YA!$cs'UFM;k!
%@NLZYiH/t^SlM4BX#,0(XkC$QZY-Y/iO!b4S@Eu4+F,/qc>!!Rip7OCm*8lulPrtd7<$AN\B<J7;Q!O?MacgA&6(Ab3G!0qeN'hQ
%.d,A?K$)I5jpa>@cAeEb#gQM(%d^a>Sr\8k\"LI]?^(\)gik7#ojZ6A&:.1aHZ$u&8$[JZmRT=hYX1utK"2)07%A%+U$JXS;()DQ
%m5brTY&Rlp+Hg%EbV]Y6*@2SE%IW.U`t!?<m%B]c%XrckBWlo"TCDj4_(Uljq@0`iiIOPrUmK.4r>+'p]gh-Z>_2ZJ_("r.2p#6R
%HK+@GGKF"gJW.([<:J=^_Y[kq:09^=NA>(Biu%)4Qg;F_.hQ#q"$E^@l1o&DK)033GS/*gdmF;N?4Tg^5q%]tGZlO`*=3`]kOd3Q
%$8&7Pg6Fba]dn<dMcVL)@Hc5l&aC;)jf:fq^#J?Z_Epbt?GLUKV"LC/cHm1`%Vupsl7B4)gRY3i(4[ikBiH"EY&Ifo+HepTRTX<.
%\59ugoP*qW7<"-+f]-der$6=8j(u"$l83gW.QGtqPK4V):8)G<_e0lJSBgZli\)$Oc98nblo`UN3p6!LB'0HBnJnA4G.eCCB\nEj
%\]8o_l.'J5rTVKc^7"ShJkL!9&Ts#YLt]83h:7>8d:Nl$m>,_kDaGRl,*^A/N2W#8Nb#eLe=>""aBpF,jApM/\S=7/?6oA]oa2g<
%0qME$37[;leY\P=.m0s'-#.T^>mDEHMr5<H!nQDr(8:9*CM[`Jh'*-dG^QQD?*AnNZlg(&\#r^^+;-`*cBC!"fYJjm_?co*BS=c8
%oE_3\&1VX[?Nm?64i.b`dWrbCL,@DBd,B),XmDA]0"D_Op%FetC=cfYB\,C"/Vo4)%^Yp3aV1@i?Emf1pk0cF_g*qZeqr=L)qGM-
%Bdjl\lWh5rFY;Ut3Y;tLAan+eE+b^a'[F1j<Ql\N]sH"<D"L>DE66AW.r?42W)q\:Uoo'@+VIa2HDNCLod9$jDF3SMA$8iMl:C,X
%301Rrq+Cmhgj%b**Y79p%i+R):_@G4S>rOVcAgnA:cR@D<\`6PbmpXmCi@$eE&m[Rg`+PnCX_!_F9L\6k;(]_3caX?kFS2R>=f=&
%F*pLC9*L[;M"g`<IPp!F(JBK)#bd4S:'J,`%$pZPhmujnLe,Ni@$gK%ql`D,aXsasb/MU%Y?Fci^N)%@;W8-_.bNip^&L^O8`'^F
%?R\&W#lP4iajJa^L8NDNh_=at-]L:DFoji#Hpom96"A4]\hn:5%n+;#<jN,nNT.%EB8SP>S=q5_i7PC')h>3V[C\^$oDmocm(#Jh
%TuXG$,a(=nN]jk*NY8J!B/920M;T#'qrq?@p=$R*qrq8eToAql.bN;2IQBbC?/pApAZ-j,qrq@c1^c?395;FKckdPEK"aQta&NeL
%@Hb?6&XjX2NiPSo]iLX,h%i%D[:V]\m@[[W.59cl3gXOcS]_8`K'!/CBEt(6>m`NF#9r+_isn+YTqb^OkT%9FrhY3>A:SZrghEuM
%GSjLo:I*bR=3=q&l=!r.l(mD@j%=\XT&!,mq%p_N.=t3/eur/dS:8lOPqAq@YAC9G'S"L<O"/f4:*<>Sde+<^8nGq,GJeP`pcpPG
%>[f3'.Fo\bVO5O1%M`akKIVB%QO7oL"V):]K[P+!UW&Ik$],iukDiUn7<$E:8&WSMp64R2Y;m,`(WGm_0+efA$bTsqO?=*^k?HOf
%jq%h>:?Ra`Nf)bX)dqj-]09&P3PRahY?J8aa3od";\di3:P%S`:c],kF&X%B8Eb"RVc0WsBM$0aX'D?NX',e#<$_SSmF`5JXq=I5
%>"$dhSmNcpF;4$D.p(u"NYRua/"Y5K$6@XT9#2lTd78>\^R_AMT.q;&"-N(Un[o??iBjNpM&ia&/'jJ]Sh$p*=)6p.d`O@_<cQ]N
%%u:$K"Hk-!l'bYE/$;!u_s*[mSh$m)='BmP]^f;P?HEp_Sh%!,=2"1;0g$"=YI*k*ou_?`<hB7E54'MaMVo'!,1ck2_FE?m[Kq8Y
%f$sgu+sJ%c?rr9Te-a([>3HkjAZ-cW_s)OgGcRC=i,\6om*m5[bSK47J\%SC,:EeUUZ)W(]aMpqTlf^2'Vu4\,]l#:[nSjCHj,kl
%%'r2NZH?u,W?48SMC!jH^c3gH@+W#P4:t3K).nGaToOd9Vt4mX]6:o?9C=dt?!&SgbSDsoMcW+S6=jP0%b-'<$cs'UFM;k!@MP$P
%iGa6,?H!So.JGt%a,7=%oAin6IieR;8"pil$Rd2o<E*aP!m)+LE5$Is@LeOIiH-.;GEK<)'jPcHs2;4IjEI"D`:jd#Mdh^>*&.BH
%J*Rj9H5D_l6Krm^>/^OeTu6-m3^bWOo+bMN';"]?VHmdABkQ1e,`>*CMSM2$Y$fknO?=+Ik6Xr\Q%h=43ZQH$phHOD^4T@e)]rH%
%QKg*/L#@5kr[\>_,>M6D_6+SM<YL/'q:7E]8OF:,3LnC8pN<k7'jT%th?Da;X2rjH55QR^3C7aO3%D(=Qb/>A&PD(^eg_CG#lRKT
%j5ZlfpBiO\WIJeb3/Y>lee.T@%ZM6d!YG@cJ*7X6Ehe*>6-r3X9@YMX&.&4Dhqg>f<<SZBMX@u2NbS0h@(T/Q4hS1,_W.3pJ`MYa
%3j72=H[J/A_s&.Ffe4)1EkTA6rUh8fY58meobT8J*CdXnK3dr&mJ8.DcF9rV%%e*lE&s'"[I,8GU$WfjqHEX0\CTDX"*L_m:Is?P
%en))/%</Ff3pA`c[4^ig+S7U@(X%"G[=s!@bBHG5e67+WVGk;`2l#hXq(Ca?+;"Ag^;Kab\K,u[8HbsF=!XAX`kdF?QWZX]6+n)g
%qhe33,)qN=V0=/0+r&>3Y#XgV,]l#:@jClIK$/GTN!F93r"[^!DhgXZOu"jGK3bX8N,LcA4(-&14s%f&oPM75.tUE2mN5:ANf<^R
%>O_J7ZRCRskDG'P%e&Qf,Ys*Aq9l[.AONi]ch6[8n_o#tb76/8D0qageD%MCZcL_F[`W0(>nfUT5WC6r@$eKe4:t3G;q<KGm9Dp;
%Du.I#p.GReg/eE[o]V5a]ksuM=*ct8kqoPb)=2Aa>j7_Qf\WW/0mksB^Zdft4nTh#C(p<j@l/MsmIUY>;f=$O!)tXul8%#b#4/=-
%6KpU@:L+n(8Eb"P:P[=rhn^VJ6;ROpi1>6GfMd8g&?-L0FW'Od$hi(/Tep)LV_7@A5ick[2Vudq_5T=Qm'.nt%:+JNUJO,)KQ$(3
%Lf5%25BA&p+r&&+Y#W[jP5U-<V_\mu<,fs=fW(iW[-Fh;[-@rFk!_[!LH0=)jG?\oO4^Jmq$l\03\Nr5Ad=[XJj#K:pAstq?:!ek
%UdS&$keY>Jf:0#MZO*K"JisrbW$A"RiB/(:jq5EYpH%ZWa`]gMhrdSugH+WoTeH$`lOuDf^X9B<4OFJm>Lb9jiBocpDu012T<(Ak
%^4XW'lW2,BFI(`8Z\>dcTc0K`PFtZY*#2PZlWm&Q#c7-hCDHGsKFXo$CXt)dXBVQ)[qs=#AX[bb2!^I0=gs?rDOG+mZ8Ls6C"=lr
%X;a/>cAU4s/(AddfQYM>h^qda/Q:OY>CEu>ICDmu[qt`n1A9N2p>*gIoR4DT#;ZrR37YGX"ne,+k]6)H9?20sK\W!HGS03@`ddk=
%]n0PY#s5*iTeO3'X^Vd&d,B),HYgDqE64*l\s6[1DV*PRZ?7[Bppu8Pj)ETF#4b/0I7J,08jje3&(0K#p[<NFh^c4dk5OUAi@+(K
%>=e$$+r/'@5t,0$%T]h">tCOmV=UO!(!DDd%YsZLjn])QRu6-g>E<,KlHd]q]?D$gJ!H]'lYZ*BL>!6;.^!12]9#,e$KkXF.Wtk+
%3LnBiZ"gk&bB^m'e+Un1=uEE'=&%GC&-1gO<Dse%H9JF"DF3SMi2Wb5e</,:FH4W4QO5@U);=bPNHVu^CtEGHUh$ju1>(\8CtCV>
%1nLCHYP<VjJ,bPT.\</M&KGOm(COb9>e:Usj-;B+.HAt$Gf;dFaLEAJ`eCQqm*nSmE&opAKb<NI(nlG%,"h$Yg\#N6_BR0$paqG4
%I1%:X[kK_%-T^MH6b=E/@i4QNqJHZqeV!<*>\^&5Sj3ZCFmWNsg>lR;^J5oI!/.-,$?irfaV1@)5%Uio$%^I\n9l3<2\B;0U$'u.
%FGGVRHYtEe8B*6ZJmC#&g]X>C%6ZX]k5liWe$nMn-P;k`gJY_RI1#?TpGi$ac4af^=p1NoSdeT6Y4mV&-UB/>DdBE27jN19SRW?1
%V1M?XKT*BY;GbBfnII\@m>Dd2'TA!o@$_fdj-rj`O-oHj5fP&0nr56fQO5@Q"l&[UE17p&Bb7:=D\7ZFgr?@%f:0$>hh9F&_)D7n
%Lh&V8Re*s7:X40'b&-$\d*CH]35<1,Tq&`ITFSlM$sn6=Os`TTI-XtT*$V)okrekn"_OApE62sdU!Fu9q-@S?Gs,K(gr7ul&]t.7
%^\tWJ_6.u*Gp8KuQ`a=>+;-`*cAeEb#VN[7F)(fjb8p<3=p0tHgJ.pa>jT!-6>7EcDTY]ZqErTR><Oo@4Z?/"2fJ?DK#=0aMr;!\
%giY+!ohs,\><Oo@4ZAEb2f^mK@l+"YK$1][N&N*+\9F>1L'gJsaLDZ@n]i=hHkT-4*]!0R!C?^^De%?m"IE;^F__SXFUK7'h1E[M
%2\C&0U7*SG8=g*`EL_/ML,tJ\lP=m0R8so)E\#A@LA%#BS7ugkHD\)=&1[:qV[?24HDX[R9'6q$>*YeAKFWe/G%^sFjqY]]pD))f
%GsaQ92fB)hh7S^`TY.PA<Wt.i)p&beE5$Is@OE@n_s.*LhB)u]cZX7fDb'Z&-X-#ObSK4245D&>6?5>9eJ#bOG63&aPJ3B`<@f7(
%qO>3+pOG>5I("Z#D>I9'.IZh/A<kh7?G4FEe^"m8.K\Y/\:S#T6LmMmSM+9L=@OQX31S%,\CT\k(MMQ0!7uP)Y4[\(H73mi']WA`
%_618q[9ei.II!?@UnJ0Q*)>[W=%u,&3Hq]B)WJl>VCe`J9cG`P*P@9/JmIgOX/:JF3d7fCWXO"qF?#g1h`_^i,r`\5H&L$AH&)K%
%b$,"BN,P>f@+Q?*V-FR(k7Lb;Q(a4KJ,:cbgeIaDJkL!tEI%Fb#*$f5/2/]S%48pFV%IZ"LHtDu.%M.oQcF\K`d[I?4?7j49*D0J
%jPYHfOA:6HWs/1n=<ZY(>p:J_-[:PA+F,.FcF9rVbTRT[SBd,-INl;_ia0B]N4jZlW-1E`>!t.>qPdkh$[_gTSb.ngrKNi_AFK1!
%.3$lbb'8KO,&jZ^A6eFLijG@%5t0g;Qbfg`ijHK,V=TYt\hqp!d,Ar8%rM1>H\m,mqP$nX?m+<dU'Rbb9<o:.d"!LkipNgQJkK=+
%I[1gcYPM/m1kU]D?Re$8Ac)gPMsuh7m9@q)c:k"bC^^>EYY.-!aLMV2hi&Z9<JEPtYoImHO2_01#FF5%"-=L]!D)oD!23[C_:j2I
%E.`m1njFms7i[%M6QHIR:?U.EFRJ(M>B%sBNan_JB?iL#Ug54]g3O?MK8)Y^6n"TB*-=e?*=3_rk65H7MOY;mk:,V!\%q*2%_QqB
%]_@>u^#n4=U0Z;BE+*P2Y7b:G5q8L=N.#sq\5_G$]MOQ8GqB:bb_#`_6q"V>I<bn9';>&VqsouFNb%V%$cVCD($]EHl=Uj4T2hh^
%<N)NiXF=3dITE.k<jDL(L&+pUqcW!!38_=MKQF[o@E>RTO!2RR$;u]:a)LPM<8i6/.QI+dI11^(3j5cK5oI7qaPh7/NS3gdE=0=(
%S.2[IQjnNK@5bb=ec8OE0cM`t?*D0!n4b=$DdBE27jN19SO;R<%<pS&$+eN9=2[EeL-[b%lCimW,P_>m<P8O%[LtK%EboP#Mq\7=
%G^P&J/l`(805(qY^>ME[`tu)g6=i>U5QupB35.Wh9"tOi02RBa&j#C)@lke6Dd<qpEoV/VXkP%Alc.t8>IR$4b.*^9YiulnSd<$.
%GJ^J_%!<h;31V!O/J26.Z)8<IUSeh;ltNj565_p<($p7OV^2VFF6mTi6QO;:BuS!BE$p61/oJ1WLU#g@"ndV^`f![5L-$.:H?$in
%+I(/k_jrR4OmEO$nME/ZM;XVFieG&\0s5]TE7Z:Y[2U(Q<3Y]-%<mD#3'VE#SMG:1Oi-EG=O%"/pZ1*Kc;05@:MMX[j1\I.Y1JeW
%D`RRQ4<P7tSB_dD!f>iuRpZjW[SL5f,Z"m68YF(]:k:!*<3Y\J0F9!1V=OhR5funn6ANJSFn,PqeO4Au`K+`?#X-_tFoF^)5>WN%
%_G;$am!9%%eHDRfNh=iuL+X`l31V!A9ShVklgTUbk_p<)U;Ico=p1OX(FE+clbsYe"JKf&n:_0[W$BtK9LOY//70m:j9A`9Bb=Ou
%Be4R--XPOY1mI/l()<?coqIHhPg0@^l6o"?a]LsBS/Zl9&R9@]&(`"Q[6*`m[0T):I5hu.HEdu.#c2V/_^Rqnkmr2%Ii9o/5I"A^
%-an!n0Ntu07"fI:>XbS3Oj5Ja9,ktdTl@_gX^WY%Tu6+7>M:_F>g<F3pQfl]c98<FLkp$<*U<=Ygfr&+3QJ$#3LnAN^[N_)95[op
%>R!LR(LCVKfS+Y1[7(WUnf+MWf]=_2:P@0kPdO+p"@@UUG;tSoHj?S'E8Y"C%c]29(%60=%>Hh03Yh"-/)KBW:`/*$<j<="aPh6$
%.kG$W\=>W_dV46=Usjp18Z+")Uk@9$<,fu[90.Z"qKB*='Cd%Jp,@E[!m?o;0!u:geRAeHXVQPEBse^B-tAaM$?j*(VUYgCFM;k!
%@M+`]-)A_0iMfcg>]L3GV+,a?`>4VF.Q,B?/I#26WD+,oH8A6k$:=!i^f7<he</,:E),RFI&Z%ggNF%iCHW`Y[GF+FTs+,]f6Xj-
%oa7&L!qJ`,HuE#cfSMl5GnHB]A(alcQZ$-;NR:k:D*dPN;JQl(Rna.!>`ZUYAQtjC'ak:X0AFL6q=lBN>\Z&758@\fj/6'W+$UKM
%,cJf)6)e8DS)F&j5q&::3.=I;l:C,X3)?I"?f/[K2]^OXImpl^h@>^qrUj4pTQ\8QMRo.fOZX3_k?HOfFoi::SBccK4HOV[cFr2L
%D)K\cP9VJg31%Iaf9(,m3VVSs+;-`*c>u):)kL_)\E"trd_&"LR4T\mK?3-f/Ob8K^c3gH@+W#P4:t3K$'$iDL,or.SBd*iUP[ol
%>OdQ9N)-4V+?\$aT'@RFdQ&;?,`k,#9'6q]BW32=rFrX+N<AlBE6?FM^g>7)!IHC(/R69tp-_;.cZ$[k5k7;kS7arl:DrFgp&TM[
%mh:f."&>N%+tsfX[jjol0Gbt[\6(s>cc*u`e-g=PRnu-V3#<eKFX2&gSR8!__jmpgP+1DYK:(+@3m+*!ohboJ7tQW5k\'u3m!A2s
%E.UnIcZ#,"1=VH5@<[1uo0:t/r%G8Rq%`r*s8MgYdQdcpn^%7.T.^+`e]2IWN,*?5?=2%Tj`B]OHAsS6s8((Apt]]bYO-i=kC<KO
%f`82?k<K"Ds(KHBs#St9+fo$nK+&e#AHPle=7#tdZej`G&AE@D^t34jIjG4PaUD$"GQ7(1rTN`Zd[*=Nr!H"C])6l6R4-J_m=0KW
%F#;80MXg*/o`Z%mroFT&Wd,uBcdKL&["c9.(YRZskn#$;R>M1(9Cd^g/\um@+!S\-G0%7]5GU:,>@d`qXblAd2Q$^RF`/T%@D]Kf
%-K+2W:&EM1^Um'LLq8l:Vb)@s?iRg1'_8;IP%;Sq<FBD9^VB_UEkePZ,KZYKoq-2k=m/]N<l,rRHCnqJ2q[m\>?CkP%>hW^jN$Ij
%Y-,*CF_8O/#YI_bhS!1V`Ub9;?^3Y`hc^4De\.7%LC)ic(kJk$?G)#Dj0m+Ls-_(BFYCuMPI>"K8p6Y!Jo;pHc"0\jkSFfe=9^V4
%]T_Vnl/!dKiN;5?DYMbdCJ_:/HV&[JYU)9D#'J;=^>>VYhbCB5N9`F+1U]:qE2n78aU]'!:GW'1.k8W@LSuaqpCdEQjmTYC3f;'Z
%s.nlhU,BU[#9CmVqKFlkWTL<N5>(Z.blHMeL"1Xta.c-oJo2n18]$eQGQhZ1oDT&6-TI]m;38Q&rf#N[g!E^i:4f+7H_4^B]Nf4Z
%:AnrI6nIM-H68ntaXrn8f,["\,IosjMX(XnZObRBT#FPe"%0b+Bmks*D+Y-,HC&*t0Y>qH&/fM+V=e!6Qb2=([]?MaICj3RQ.sI/
%.*1<$J>SdE;Z%s!q_UfZ.H<G/0]L5`,*I"#`K/ESoVO?fQKbMu5^b`-amZ/+m.8.QD^^'S".\Z58at2^mo,1\rG#LL:ZC(O1/$-1
%6pFB!dTnlhD5m%&B!TmU;jb=I>CaZCK7T`QXY`73oesVhg97@u^i+'$)00VkpK>X!]9SqLiV[<9qX+2]5'L4u2]D_q"p<DhPO>=T
%h^9Fq^TOGBcUthnZUEVBqno3_LO"'[7F'X:r:NiGs'rXXSnYeh[K30G)\t9\]TqhRl/&9U@/Es3jsF\YcD2XM\'k1"@7tSu;B5C/
%m!ai`][Xl<m]fQ+5uZ$4.=RNLI>U1JB_!n@,j$nu,U,8C')WU&CqAA8rAY1Je!n=T[nV&Ydk?!A5o7nbVj_fBr@He%6mq=$B/bUK
%lc(]9=O+TJ5=YBf<BMlt[?""/F/3(=m+\UGWo=.2_a:J08UZEYI6&lR)s93$1[Fc]&f,L@R1GFf<$k:MERX^]<2MYccPqP'3uAh"
%h+Hg><,^5WT^=ZjGf(@TL6u0oI?Lh2F\YfW`24VuVWn1&\?C&"aPYa&VOD_Wq^gS#'IW8%'X?"@++=t?$bD\a#74b_g*mXo7]PX\
%S)JOD6Z5!10oK/cG,*=&^ejK#EZ_'&Rof`/^N?(7UE?VK6">_]Q.RGjIp[@ZZ16)spQ%PWRKM?WjlUJ1IW#=WC>MSOUNGs'*:X'^
%Ibb/^>'Q6g"Pl`@K7pS/>RR_5^ES/FU#5R-cbo/7nKkI03i,9]Q1(OGH-5k18*#,AXbip?","irFYE+mPQ(!qBplI7s1EXCcUhIa
%p0^1'?5&s3hb3k<Ui-pmf_mj8F%mbO$tZngrtfp`o[=Fn$e91h\Bgqq^*1>6$kP0p]U/3Pa?HC\icITc*Sm\9r[&6!\XDL@#\UJm
%*ebCLYM^LKB($]4F"N;eKa#NX#!>r!Q08Ip4s[_tFMrHXfun_4`,]`BqDlFMh(RsdFF1L8rB'h6d#l[Oichm$\ba!-5>V,>iIj@t
%/aW61J^BL%0CaOCpppHWFTI0/G4U\$TSO)s<4JW4/e!-1Id[>_T(Ko(?u2Dtc\$RqIj"[RVVT!Q]UJ[Q>?AYQH'\2a]gGp@:M.Qg
%iTdm)KtfnLiDMr-MpQOSg*X2&h7OGn-iVqO!TPZ.5O$S)_jXR)E^3'2QOS>FId[>_T(Ko(JCn6-R8S!3?kZ_lDI*=h'E@L8!+,`O
%I=!U72(hj6Oo`HF/&oT/pCdKOh><EMmT4mqb[0?-h(>WKO5M'+rS;l@WK,lm-[N?M@nqb:(u"Cg?t7`6WIC#u6`Lam,!4u\1?V#!
%.RVY/<'O$eT("E)ZkKDBIl<\c4MGhu^1)>gGUqkdP'ok\O0'C_XUHD>F#2Lq&cV3I3QL0^l#5D,5,bH5!CN?I$uE"k0>UH4]h^BA
%IeC,\Ap6ou6diY)5>8ZVl.-np^AXP+gP<C%miLQ8KVr&!U>X2g;ZAT8L\,r-iTfk)YL_7$,?ZtSs"*D0J%!f*j5$PE35oD0j2l*S
%,[C<!"n3=!5?n8G4g):X&+l17P'6FPGb2EN$K84lK)0*CroX[))Zsb\ER!?.kK<PIs"rhmjB(-JE;F)RRnYr0FYiR6P$U_(GSJ:\
%?PrZ@_R&N/:)KEQ@;N#k0A0.L]h^KDNp@#V!%*sSl!C)+-G:$43RRX-)i`0gm"T-PqO&D3(-5O2Q0u[A5GUEj@lB,\SU%T"9ujPW
%VYjTFh`XT$bKj#!Is4DlL$[^3:ts.F>kMF?T-aDsmR"$jq^V+=ff'k6Z)!l2IZj7oFi@(UB0<pn>at0pMI6;c_`]Ef`iAd]r$:+q
%,STTZ6H7)\h-Lk^+mE=%+!t:lol^Nl9tA6I?`a$7Im&ZJM<@O>%1i1h=;5$9?L"/[r/gnC],LC4r%\p4*Qbm\rb"f,qIAZYOR;6+
%p77f+Sdp@7^HNfN`EUH5OR,?'knpu)43lNA2af4[Ar<3*D!=ZLOkt2mGus4U#nD;0p!T/-aY4*pX5?SBo;(gg:=rVPOuOJ&NeqSh
%+4%n("le(F-]d"i>Neklq"ppOj`Lg1I*`aH#!>r!Qi?0h5,=a0QTHF/X>>]^G+@BPKYP-+3Wn\Al-0>.O$?&s`&5#Qou)W7R.sqb
%<hfTql%ap:p:.P+^>1>,9A7Y/5>Sr\o4mW=If2/h>=k;;TSh$:5)e;j9Rp.3>lmgM]h^iNNiNUqJMF,48bWkt0PO1+[e@8p+)HhU
%H`M^NiSU5.nY,6]<'NtK+k;BqrTXPf?VN";d`k`U97!Eq>,hM;VMJJjaZ@n%56`lD]U.jFa?HDfc8n#Xg6qGrk\"NY4\9mp2q'8b
%YFj_X]A*&&Wj3Ws`f;8OT<$jAo3WX=OD`"N#fQi%]/?u%/SR/mr]G0nIlXK\?@K91]gPu0dnh5%(-Yg7Qi?/>hl!*Na7[Fkc>CE?
%mr\R;`4u1&^qKITJ$PG>$LG.L:bigk5$,LC!Ba0Si<$6lU6Up$ao6k\a*ZbD!qGQhQXX5(ji;^[We6RAN@2&AODsksQbm)PrGX2.
%p-fgCq;!C)UtrZtSgSEB69U<g?N%th?"ZS\'+4SC(-5O2Qi<m3h^?1eiE9g8`r6.2mUlcJ4\bdb43-brrP:1jlI"[CiEd@2A(>qJ
%IZj+dU9/:pV;ST8V#'W<p4l4hGMg%ZWkR4)pW"rP*2h3KY1E;'$_OKW8bq6drK)8>CKgC#LYF"0V;4iEo>K5a?lZ9%K&?%^\\l7A
%net-__SG@"pF_!Z8O$G[`o4@=NM=J$g093VP]lX"Gb4\Srrqmj@J`Rj<r/#)=u+T>2=\6R^%=NbqDS;24g$_i2>.Q6L9u<b&,QaQ
%=8M*2V!8#;5Ipj[?M'V%Z/\1b9Q[Fb0E"[FIRlXC*T>Ss/trOK"5V;KX*C(T%e&28ECZ9Ub+"+[[t?bd3`n*TGkgemMh3J:9)dk8
%+-OrWn67i4])=0@Q?>"Zc]Y^ur]DUtm:_Drp?gZRe2rp.7f;t=N"tfXqDkkU8I!\JI\4D4\k,;1mNqWo_CN0g2pP^FDl6ZpO>-5A
%-Y0<'0>5\oI7UQ^TlPJe<;a-5,*I"'^!@9sl&@YUn'6Sj1-R);*OoCW_9htm^rEC`debHKLBJji=)[D5_jX#*8\1>NB1]9pdm8O@
%oY!Y.&J@S4mY$N6n"oh?Z4BMZe0@$+DWu@5/E^VsT-J0oF]KaSNh>sS?%>qg!JPBgL!GtPV>4iJpW7S8]@gA93^`WPF?c6mI@Be#
%HEr_5k?X-ur^$,A$d>s%h)^K_rVhJ0<UZd]8\,G37bm<RYBu.Bs6^)Z+mN[FT;K<M?$W3Opd+>GgE3Fq))/F6CLCZ&>NpU$mR+Pt
%=5FPKS*1'A-0]$IT-\?RIf5,LC0,nhUYU4cFg$5"<>t%&kZmpi\t>ktORc#=*>dnVJ)=iR)2l(on0]ZgF;m=!g/%7&KSsKciAVI[
%Xqj3&^R+NS8`(ndYfAUjPAbpnr,KXR(Po7&J3Fn*Y)2U+lkO^)I*%:>jakdho"EO;:&,t&`o[uucTUC(DEj'IVgDmEVeo!9`d)KP
%qFNjr5.J99T,1H]egrA"Y'qnoIt@5Zne$4RCMUIqIc/-k[%uMOs7=1\"d!Dg/:;q?`.X86gYe%$&B;_ipX9$dh>;j=Y.d9Amr"7*
%U@+lTES;qrQ'7cQTBrLPW>[It&];E(Wje/i.,BYh,OSWO,7eO!%5LT+c"'%5gQES&"[!j=Jpns#ibOp^BD$l9d?B:1eaFg_H.)Gd
%-gYiDXnFWj[tKLCHcc9q`)lf;(%CG%hk>r7ceE7igp^a/XElPi:XXY^3T>MT2H"^n/Lj-9c#c0CHDNZ,WIB&m`1MMlI%=_3i@Lp]
%cB[iEr+X:a8ImW_)GaiQe>=Hn2j=4ll.YJ8l1c)3o:*D-hs?HM4bha/DWWn>9G4LW/,asKoYUi_f].9^g"<d,7;,9)GnE/7h!Y13
%4`YfWV"5rq>uTOj7T\?6:>0r%Tl]=Baa]cMIHgi9?YSNo\*6H7]sL!tqR\heP_YlifoluQDSC+LL&1`WFKU!Ej\Jg(8@bWUc?/RD
%kWdFVXICYgQLmdpiKXB'(dOFKh)!osS@',AiH+Zr8cK0o+4>&/LEpjlhp-dABM#h(qWE]>qX_hns3WB'G4;ra=229/p9Q*.W:IX_
%5>Cqsot7=k4t5&rb+rNM2q.aWl'6:)4%9.rP<B:&X3JoeR'k;Oo"Ch`:&.!;R3/a*=g<F*S*l&-p4l5CUg)S&EqmJk\6LY*WD+cX
%='=`lq-MLAVYlPJ5\m%`KVJGBRrfqAB%!:t]om8\id>)>hb&2TN59V5O)CHN>kqFK+/f$uFSb]UCFONWD:5\jRn8*qZmEC&B7[KA
%iVSCm]P>>>msq.@ej/E@pQGM4jbKX5C2($Lf%'cu/NT2?1[35K?:g2Id`_H]4'd6-HS'gaj#cTS5$,Lcp?,$)-_@QWqNGCEH>=DB
%-8_OS9E&9@^+KEG**B[G1\fN)+Pr+2\Hm9b>3K5e?M^:kr/ghA2deY))pkH,=Z7#o/87b'2,8pD=2GJ;moA_uh&/a?QEnlJnu\]P
%:AH'tM+1C^)nR(`3gOnEl-GN!8a#K)V>fO>YMu<BqtFG:qd]m>I'.oOl-GQB83::1p#h$Kj&q&$[%"%ESp2j5eG54CGnl8Gj87"U
%<Nl?3/7']4!j$_:&pTT-II[\g>\stZZW^<m4[&@Mdd*KCrIYOC:-Y/DX4NI&+#SCC,B)NriMlOaHp:@$+m0+o/hikQZhY#@2tR#2
%n]RnMB<IapL#f`9fbXK\o)6u0m9d9>CjBlmN!u+.i48QPm/I77&*X>_EOEWN5:2jGlXoFS-2lYjqlF`3(40=GhbAE#2pg'_JMsD0
%:3H#:r)pnGkpG>.Fh%f6p>4M6/F$9IT-h8"?,hT$nst-6s/g[@X_40SrO.:<cd1NKpK#!M-N&sD!<*V?MR_211.0R9Hp:9XnpR*1
%^<=%_^Qn8':TitY2'?^6/9%V90Ak(gI`Q`,QIR'sgd8V/AWdq*DW^h!dOX4SLLn'CF'M&h8p=Ol=J"6lPOCC3SEes(pToPAduD/<
%/K%@/YY]-o<cp(Q:U=@6Y=?D-B^NO!n2r<Ohkphd&D_4.37Y^/n7N%l,i&!nFrmF!gOB"p/2c*_e]ib3bh<]tS<<<JIZF:3GK7;9
%p@"VC9`G#":3CJ$r*dGQ#m]Clr`#hQIX6Xk:j"SQ&$oRK&#4hT)?8+"bcP<6Ch2i?arFNY,cZ;HmE^uF83LFC$Z/(/o34COg!/SB
%c?lBP)sMSG#ESNCh>-k>$D\7JM(mkup:]NOcM9Zu"KcU.4V_l+)8bh'rd!?NpU*4$<9iKS*q$26k%;nnqs/BOao\>:ja2i6R.3Pt
%&c&Il.38Hd(7h/bB%e?iD/&aI[i$[_Fl*Q#oBp%!?m&=Eg-V^[\+9MTj+k9KmSUSU`dVA"A[32ZDJ&iUegopOVV]!NIkXXlESW_B
%C$SR_<ZBsrpKkk3-%)>("MT?]Z"bF(YpL?H\sMl@8R&cYj4X/"CWst/1jbkc]dF&ZT0U5+BFT'`HnXFh1OdD),*2&*cAHILMp7?+
%1ZqQ_?<Ie>f#nS9gV^bTel^)X&X+YOE2n78kmnGVa>j6].kK%$b$m/+h+[X^XB3CT0<^'##Li&`XT$+PA](%g(;ITb:3H"Or)po2
%#tNonFmYh#/K:b%QggnUYCot%iI9&PHn46&NtQX@][>#.pg!c(et4>gOEnbcf@aEib4#-7AN+]13,cuh4H8^*T4C/-X3JiiM:u/A
%SLWMhrR6]Int*@rm>!^dEKeLVaL[f4LKWe8.3FO\oMG;+eb?LEq<7Ro@1AjH>l'`-0K?T9^&1+?q;DY\k_h'rFnqR9MpB[lo*T`0
%F^G0hP<QQBcddEQ!"r)"6t\?o"pJ#@Qi;aXh^>%Xa2KsW<,2nZZ5Kt9AcHc(X3i"jL!"f@_2:pfCMIgd+;tpT#!,buQh6%N59q83
%^\T0r/W[!Fc_N@=h9>`U]IiNm)T%EijF5sLfA4UN`,juD3`WnZpSSlnj;jB5*?sr5K?]R%1[Rue?<N=Yes$!ILb?N&n,T3]CBccK
%]pJA($/ancJZmtFm'5+;nP(oBFYDiPZX+Nqgq9QSK12/,etk;a-oW:6?lS$'pKk_/-2`ko^g68JmZikFhm'GdRgFS3[3[pW7`'X1
%8XIcRYM?mBjs^uHSEes'pqqb,&tXCB,_\+A$LnRn+mN[RT-_2!m>Z5>+5Gc,n&^X@RnD5@h\_n7hb3anPTNe0NOpe0]59L1#+Zq'
%B$MK1]onsHl.PI]iu;,sH_@lHOQZUAOTGo^CYqe^j.,T0NmQf9UQ)93*UC;'pSV/t]Gk@gS:8gt0*eTGIYk*tV1?t(nu\uX:AH't
%M.]HS:G%'GK?fR$1[,FV[\O_[;`"#3pg2C.@8jUh9a3XY^6eGH)*aqP)DPf5`+6,UZ>Sh&C"b*%fm*+^S3NF"0@<l9Bu_Ps(+aj9
%IP:<=PJ0gV@:*.cHUVHtJ(f:)Z?t8SSp/H$etYG4e0P\+glm4P-X6;qKq/cb3+Xd?h0YL(Z\0FKDiCL7hX@\T@$1D0q"?CU]C5'5
%=K&$.oBH#.^9>Ski-#1QdZD\'J^;kb-2fKYIRlS1J+Z=Pgs3?l@.@CBDW^q<hCJP7/OsEf*^?$NY@7)W<Z:6h47k+DWd?DhcP!rf
%3WbA#Cq_0_hib7CHPq=#oLa>i*RZhCk[lJo+4icPNN3gU<PFghLD`<e4Rf5uq0\E"+>t1^\s`,E=^N5fEU`\cR_RaN&')e=Q"r9=
%f*499^6A-.)*ao:OY8cArG$u0P]\eF:X`WA2ce\aQ12Jgqpj]-8^^f<Bk!c7ja1-[R.3Pp&c&.oX&BbmT@ln@2m`K?m?R?0dl$Mb
%q"EKZ37>D9k2?=M#Wn+`37Y^/o4JBeVOW1W"ZCQ^b_$"61)>!_iD5Z_6!H<n]e(5ocVnq(#ArGPMWVV(cu>Gp@\C=,')sNALVu]O
%/SgE(H1gNNc6?aq2\Z3BBtM\e??0gG`j_jW_s,c+\8OIc[:Onfh-9,mR.*JSH1P5:72+Kt#+6Y"B"FT\^![p7O;:UcB"-ino:=Gp
%dCS(-7mdFnSLWMipqr'Z1QKQ.O'gI1mCLnc2O8J=j\N3h3R:1?it$J'B;Ifa"baQY$_8d)9DQJa+&\-?(YuXA9`*GNfF1nAF8e"5
%9=d3DUmLOgQ4!&U]h@aMi\%Th:6f`DrFs7^8OqjFhFpi9fj_9uh+[[oZrb[=c,m=7jSO!R_$-4r+&KIAbCo'4p[\;CkPNIJoXN2t
%QF.:]o!,EGR=Cb#b5@co<N-Kn(o4dVQ7mCo4RM%2^o?b8Zp.4Y+m5G?0t!m!Fq*R:M+u!aDJ&fLdOX5*b'3hN^YPNhcJ=#L)f:+(
%h-9](R.*JW1O#O`hjYNNI)BQp\s`&C=^/nZULOX_5CW)eDhVh.Zhi)Ki+CP*kK<Nsr\Wa6Ua,G3D]lTE2<e5o]qdm;H6k]m8cQU5
%6t%-WTb?;ZVDH#em_+iL9DB[hhRMGm&!TdD(3MFjc]VW!0#gl&:Ho_g#BADP:&po-B#8WV><.2)o0_7-bd[<'X-qcmYkSW82\Z3J
%D+f::Gok7tn#r=<i:Q+hJ8e/Y"\s4/Ac5cK%k00=1U[2BPoEkYbtrO=it&J&#r`W%f#\-R8pI#\7iN$,c*G]qo"BuHbkOB`K`%Yg
%&ZbeFZ5Kt9jns,P/*Vo"7YW!*;A%u@&*pq;T%CM(GclHJnW.a?8A1pT0(kT6pRTRL_JZ7MC"b*1Q$,R`bMcZnO2c)0#"<qj$_D.k
%b5Ck$+#;03dG)Qj2P]#SL9R/8J"!fW5+XkO)lbc8nL=!TMr*`*Kke$-N)#Z,V>XiB%nT:PEKM8$&T4jVZ>M#fC"b*%JYutPqn[Yb
%N''6=:S&U`^o?b8S3K[A533&trUbfA`_8-'FYD\aP@!M!`dD$M5FA%!Ki^KJ0NLCHFK0^Ai=@_na>bB)lYA,#lsJXZ1M#=cq9u]&
%lfmKpR@&IXBM86/"04p41S9,)Ti:&W8Um3!6dcSBX$7[5rV?_f-0o0kT;K;bDB'tUIZY^_4n?ZSSOO(tFK0^AlOPeccT351MerCj
%+hhGBADPH*j0Vn=q6f=Gr!ti..FZ=[/g0FW)<b&q?IBp-r/c$\Ge_i`b.T6fmAHih5#6MO^!Q)Gm6WLUO:Oq/#B*m?ah$pXSLWMh
%qU:BFP)dU"SQkuWes*,PB$%WPoVZD-dPIL@)3VOqkYop=OI^u4oW&CBWdHJa%l8Z*3[0(HLBJY)@^9.BDC5<rg+2E=PFd8C[T(=f
%4_Ie&1*:FFJQ(BO3Id@aIEE/s9/Mh&V`2_HGdPuLUfY.6Om_^k/mL$aTuqp&57DM2HS=4$&q3Aqi,t*.)!`4i)lpQ<mtY&LKND[C
%ID+qFSW"Aoq@m`"GqR+&<!/[@hb*^nN$!)#aQa*GcW#hIP'&SF:Xf=2juMbh#D^*M&lqZ9E_q^sM$>ri]pJA($/ancJ\OSd.=Z].
%m&0_'+!t930pQDu4oBT(pAQqH;V!_8A/Y[q=:A1'?KRk+r/c1f#%IVBqa8C^falE#Gae99dke21'm&U8iC:$6rlXi\QML>kJ5b9.
%l$f#h6b5'<>)QbdrjQEmW13%#Q?;$JquP@aqr,ZcU&)I>]6,%L"uJo]qRu5[:\s#W0Kta=p5qf7m^!0NBfE5IkD@rQ?hpIu/b]-g
%\XI]j8O+I1"ut/HQhk>$hkqKGa(9G0_nmbtl$LP`P@!K3hI!?Kpb$'TYZ#TCnPk?r:6k;0qdIJT#tO&rH/WPB2OblUB$-aC]om9G
%^c7CIq+fA5GZS&M)(As8WdH2YO#)5U](JtS3m/h^AM[oR9`!5F^RKLtJ[,.rh]B#B,O1l^!5_I?(-'jXQh+hrhkloo`s%3m!1Sp9
%h+IIkUfY/'e\ub9CVK(4](bA2,nP2?/9In>0Ad9rIRlFBJ+]9W_9HSu)7".Wr+Xk8l,Hqc48>qbT82W%/q(`:FXB:R^QnW05l)Z"
%`lWYretGB[9k[,1RJuB+Y7&-jNA8^'8\UPk^l@a`&rA<XWU@IT5>1c8mg)%Y1MUl'1)>!ck7<cbI%S^,pCCSDMeD0ApBAKpY(9?5
%mj7m?`X`qWjKF$E:jZu`)7"/Br+Xk8ld<lO&&-L-car7oQb!>G;o%<jpKl:?-2`jG!5?P"24$N\*1MmUh9>Z#UqaN]4=2i;LTu4t
%[rZk]:]\[FT>@MpX`Qd$p`\IY(-pjsBh$]"1IU%mpTp[1]5cU0gLB&iZR*3$:$b=^^V9qJ[I7])C!-01-g9mj0AI*9".u:R?Jb\`
%nWeHM5s;gKKDq>jHB(MsaYY\2e\.=EB*geu4`FKF*AkB<PHh'U.=[ZUG;i9DT3Lg^9tNX#V-Q@Wk@\b6HRmta'7S#HiDt.#V"1EB
%a:(p)oDL6)mqs+h4\(!LIp"Z*X^g1($V:3l"ut/HQgSJmhkqEE^\X]Kj"G>6Z)E$6I[KbO2icYPUA$n9Vu+]ojom#[I0QU\pX9!k
%iJ2N%mP;Ds?"T:Z7GUZ3Z_U[6ND4E?V]VEFf:_?o[K_G`aID[(qd.PikPUEbJA17&RLbf>'E*KBFkt:=_lPH[_:TP?_[hcLJ#T*s
%a5WF#3AAgZnu\uXc1iIF`nBY)o@`CURjIB4d\!DMZ>OK;MrFU5?AXDi#Cp&E\-LJLVonb>r\3C0X:t0toC#HSr-3t@p=&JM4\pE9
%4jsV'(k/^>4U0bghLKjHCnO_gHV&^SnO(a,'s;\hMeHg![N@0(4\jap*Y0L[q'YKC&MCJBK^Z^GkZ%@Yet6RPOELQ(E=BJZ^Dg@7
%c&d'(kmt+,3VT'8Gl44WO$O9n-4mSm#!,buQh#nLhl!!+`ta?$\$an<HD&dZZrb\>O`^VUX\nitquFSsGSW9h]pJ>'#sY5U:NVIk
%SER>0H].9Hk=@b]H6o(?4h$@-qk)2pl%"'9!C]p4(-L3_Q1X6"5NFut*(cZ9cmf,5T-<Q5ih*)bR8:/A-W?Xt+0;$2^f0.4fXbI@
%;r)e7J!TSPc4ThE1m;DGXA/E;]b1j>rpIdcI/>"eXeboWfg!77=6;&UWdHJY%l8[U3$NkFL(`Aa[+Pjj2fnsTm?R@_q]HQ%E;ak+
%o:bp9.Nk,[#,f&AErIcOLQqBJ]J2EQgTnm/;)]0f/ErGfC8BTH;X78m[uPmW'co4Mi)KGW\t:;HORC!GV%dY2h'=dEh+[RLUb1Eu
%1j24I+.O>dF6!Lc"XJPG".\Z5bP/>rn+2OS?i@5pM]F,^Mn58DLIpZUMD5@m%[I!b(K')(VAOC*RrnoR:Pp#(<;Bk_+(kG4H><ap
%Wk>KKZMf%.j5[M]]6V\LqYtn(]2hRFlO;Y]b^\iGJHTGZWq;ie3FIKUOFV22]?i7VAAI"7Aqn8'pY"!O-)pONVmNJ:Nitd0B<=\+
%Vkd5TCYrgmE?U=fPK&C"+]dZ/))tL]Z/LCr1ctgaKb=aEKg,KiTrc5C%jn]K>Q-:hqbVaPVS29?F`2OC4pU1t7^%%%k$EQ'Qn189
%8p"hN:N]%a$qpKT9`6\l$6t6;l.1T$h>*E3Nj;<%EE.0B2`9*5I.Sf,RO>'X;P[J2G:r`Zp&Qr'o.Q1$IPibcK&XicX5UA>o_cc'
%H;4A]^F&\TK!)89)/5I]LluH%!hBZ=;J&J`RaA*q#mQ82qdFP'guD`V%2%lCFO%)VH,JG:Mt1H<k1Do&e3g$&X!6n8m?ff,nn-2Y
%rMhj]OTNYsWZq2bG')%GIde=PqW62RG,=p;4>\UP+!O.b<H73=rReXHdMc2hI>3=Ta`K$7F*ir2g#ecu0":"k,NQ,LlV!ra=m@/.
%,ZkY%Y'3R/X2d>Lb#[726jb1QXGY5Zo00%H@/#$]0'K^?oI/OR0s@pea81Ot6^1!@(?k[NLL\I8WBFj<)Zg0Tr\0':m-u`$p=VSL
%AB);!^S91A^TmV^A:8/1I6EeD&1NdBME=md9Ue7:o-U,=[.=JOh<9qXJc"32>jsImG0`\Vo"3L*H]M7kQe/ouh$aEs+6#];*GVOp
%M8(3J=YR]R-Ql;,iH[X^ACg[kQXs"[?_<'SR^1[<EIG7,Z1DA&+]@B''fXfh0Qrs=N?'AM6#hS4%CC)n0DSH8Fej3"DeqREXmi^4
%r>UtILKK[IA`1,Z0la?CZi@.-4GAnaa\43PMslJ.Q9MaTV0dKYqtC!mkc3MFS2t0%+]dT,)gLWe&jKc4h<1-u%6YCoMBoL0Mp/?U
%'jZUKcX1[_p=Y.gApKF/)iu?ei^B*_:oAbtU`!\:DjPl60#M(*6uM[:`N-m?41P6K0"1WS"c-Z@$>(:D@:G%VGh%J<Rl04c2sd)`
%f8Kt@$6q@-L>)s`l^Dcl*LD3.'D.lVW^CTTR9IB_:9\,LL_DdLKUk2"j5eWPhqL(<!eS;1*38&(j39dF70gM<s/m-HhRMS20Q&jK
%MQ%asi`6k>C)><1Pi)Ml)APQ#!f7?O,)bP>/f1Cu-Sp[..mR:B8YpR%,B$,=*+C4c[=P6Q+`W7IrPc9bW2(h>,`ueHA2\:*SErjj
%?29@ngHJ6@U((B69+@"-e#Kp!cYi)7b6>qic^9.L"[t_.A<ms]`Gt]hD`E5+Q\X^Ti,r27ML4_%>*f\j/!:p*-'Iq`VkPne_>1c%
%RG)RW*%@1E[m%5k:XAIqW'0LB]1_.q>r0`W)i&r#3sNmHCEk4dh)GmNf;22AlnA>sE)8*ZG$SdIDFnc\/nogW?]sj3,&K+Ia&tBj
%*J7qO[?2-eEL_nkf<)1G[ecm].$d]@0!n/nUnt8;VX995FfFsDHi:/&rq(=;=S=IOUg+d^/fZV_SDU6:CYa%K.@*Z<3jqRTp`5Zu
%<aJSM-0a527C,7fXjHt_/ebE!S]E0?Gh+b?1R&R.h0hZefIYpJkC7l@?Z+'!/jJ^'K$?X9V[#6j/Gg88'<_e6809XSMQ6P9C=D2s
%;CnM`D/>>0QE*[,lgOPLS(+AP2E%XKq(Z,"rZ.Zpnf`2XG/NSOnFh,+*PhIOn/F!9XDM>>V$Ff&BCT@2a&stf(b/IfM47&VnWdPC
%.h90OW)JEdfs"mL:Xuu@+)bA2/^3jpD\cT!U\QWL-<qX=XrVO!TPa;Uk<N')RJM+-(]A@/::M3hVkrS2@+W:IfkLpP4dLF''o?#2
%9p?T5FPW8[#n..ee?','Wq1MJZ),K&6TO2KA=3a7CrPsT\4jCrFJ=3-SUkt?a&Win.@<rE2R]Qn\34]:[Z(U))ZV8VmFEb-s2D_&
%)VhAeo4,:$r]<Bkj[8G;%/X"+X`0:F"d@&0`tnI_B'&b=bEp/ZI1i=n#ghU@jtT[Z>Rr_)*MB$ICO9'i)CHp]OAN501(0,=G;oq)
%G<XVp+C@l%NgjftFps[nej`DVa)Qm^lF+.k\#t4"*#)$o>SgS.>OmdA[QADKS&c/pXlRIDnmf1']0>jl4QJ+[#;[Y?`sO.lYDt4*
%f`[<+G?3Lhl1Q<#%i1JG=EY)gWE2Sb`*6@AC7B[a`lE'q/>75mBU55*ki?#a++!MP\FX5tgqduKRN7#lb-d?Fj`'@1osK5@[81f:
%cIlu#lScdoaCLfjD0RC%rH+ZA#)s:,T$<QD?jr<Wf>O4QLV*fAc&Yg+"NCcpe#n^JilUoU/i.54kN`$"g//kiHajf@+u!,p?QD.P
%"Q4$Ja6T!I6&rR$*J67lf=rmf9[&3u/_+3n^Rp;F9n\5%JhdUdbOk*fcQ</.?%@+%j4`oLNYP7]#cM85OSuNJ+)\3t"h#OS:CJ4*
%Y[o!a(Wh.3kX>E;])Z2nEk@(IEMQu/q:aIF5E_Qq_;EpP'b&d]']>&tc&TUqp"IKDGW=ruL@,\TAq8n/SM&HIB'Cg@j#g4GhE;eZ
%R4&T./:V/Q%$h4O7S\VtR56JHVUX3]_3&15Q"smq]7._Ie'Yoj6[Sg0O/D;9XY8Mon<b^l@'E2:3q?N?A1kCAL=.Y4_3&3KoW)Jk
%IU%Mbl1Rq,H8=cCOc6jg"N+f3J3J)G&<+.U0PrN+i]'giiBs8tboQh*_q)YR>42ml@No<b"G^K$Fps[nf1)?I:N/XF9pSJL;]HQG
%-=%Kmg\p9V&3mjV@-5,X-[(.hZ#+E8^gN:PFlYqSg[:B=m;@&-S`+JTZ;\f02P8omT=Pbcq/gLpD(2:S]SZ$6@/2N^-=.cT;,;@(
%j=(]]HZA!2m259lcMI.Eii)nIJ+lfm]YdP$mB`nqOulB/Fps\9f1&NRPKR7?AR>W+)BZrS]i%<A>GV/$c0(>UNJ[Ql0+_Gj>X7&0
%%54S&feHSQ>p">A*A\L:4e:0U5/E@jaf\6:`tmnGO&0Z%N^n!RXQ"uto4W:UQAO3_:;k%A`JpEfHinT]Gbd7)%e&b=B-as_>Q25m
%^tTWcHRA;WiHS!U6X[,l^G^,,+4a8t[9H"8-7J<E"mO1Vgu^1pK)\AeII]9P@4!kX'+V@(1ckobP\VMiPn09I5A.ml6j(J<Z"2"B
%Tga5Ph>D#+I)Qoe3n1n^59ah00iTE''fV7l`Xh<N%IHN/!eWfGAa;[hCq&DIlC@MCm^rDP_'el`HMhNNq(Z-O>TZ!=5N^8,Fstb^
%J>?jFq>0%?!'&E\[lS34oDnNU7.j]?0Z%;P0j(;[)`a$&@=5J*f5p@Ucl4qmQ;G4HZq,t#o\4QPR`K>?h70tAHH&.8A]J2HEc'mJ
%ndT2)\#l,Sh<0/F%Z;W3XphGmGYdaNcC&V<^ruBKA9moW_R]^JN1hHcWjmoX0lMVsr<@jSrrbcJ,a>G>c0a;M*LGN0GkOb]^3)Y)
%d[(F2fc\s&=Jf:A3DhtPc8`/u2ib7OQG?%bKZ\G27Cad?gam]W;BS,E?bOuTK't(Q*J7qO[?2-e$,3!)2`"X,*61@MK[P":=aF3.
%/,e&HkPX[Tr>X>2ZMYOlP5Ys<F7#($!;eRoHc+mZgKj_=J;\ks_/,^;Y<V@s+4(nS[OSacABP5&O5[AL5T`%4!6>A34MC^YGHEsG
%h;*:MO"Ko)DQqp_ZG.D4a_+sZ-BbbKQ64"Uo(A[iq.&hj@GAN@[J%?T7g^T-YDk.)e%":IZZ#<DGl.5Kf/ifZPmlhP0_ZD6;Qbm=
%QOS3Jbh"o^pAUAO8<IG_Q(_?&A1K>lgedCLNCmL0?u$"hNkmL,g;o-A0lt@F"`'aG8>1^ZFeSJd4d'/jfpmK^$h!qNh5t3V`#8-?
%70EgQjJsNOj[80^$Z1-:MBg(Qrq`u[2RiM\:@b0,GA!Mm))>pg/52M;lkh8eYDo'.[kMCU@b]X:?`tFS`=cq;Kbip_i9K=pSMe^!
%g(/EtLLeG5R;d$(7/3-0j8;M]8K!O&9;l)7>GUEq_Flq)pNQ&@aA]bHZJ?&XFq.Vt$l4\$8"PV\1)H>DQGN8r/]U/^AD3<BO+3j+
%b#M2hoD4SnV0B,iK)k\[+dsF(A^7]G'Bek[9:PC!FfDf0Nk>$Q:YO1T4<KW9L*#g-e9FJ19g"meBDF8eVHk9)&^P(16_,B=%Ogc=
%`4S.>aH,!3_fDfo#M/`jfpcQn@$u:WjMX,4H3_pQ?C`S+\=5#9b0^)3cE(T@boja7.'EQdgM=7t+<oauQ3#!%Oa0s^\b1Jkg#2Q-
%crU)ZFn<STMJU9Q0cj*(ga:#])-R7Uhbjl6_(t?1aGG0Q?W(lX?W'T$`Bgb^mWG5JIbA(T["%iE*4HKaq8(AcP4W7Wbdnj3iZ!>T
%EFV5<85],1dnppLhrgKFpNbQ^9[CZRX"=-$/T-^Kp`.OB#)bSo"4(7?k(9Wm#J-@j_X@EkT0B\CcbCtN#3YF8<W70DFSGem#o4I!
%ac=1mle9F:GDcp5rea@LIL:]o$(YiUMslHTnjg\=A+nQ'qm=N?0S!cg0j*RB)`dHU@JH@YI=8G%5(u:rKYB=+fm!7/c_5cbj];8=
%XKco7Ct.`_q(Z,d>TZ"H53=I4At[7c*%@9%]/I+-cWb3Up\)m%MH#(lTh7l:IOpq9$l4+i#+do3bQ[1a'R6[-MS"4$fmA88R,*kG
%R1rCWqX[R2ZD?fgQN\@n&."$6ScX?(j@L20(LVQ2X@jIb:`q3Un4Ct3k8p;_/fCO!c*EROiF3</T+en.'reiNH7I*u_(toAaGKd;
%F/^Y\>fZ+=E#]Wd-si<FX;gq>2bWra_/%KDZ9F\IJ6]V>Y8d^REeou/f*7fRLVs?3b3)V$rQJ\P.$8FbB^P5iK6P"S?<)9G\'N5Y
%q(&/22ef,T4Wjc7A`@i`'CeHLcd+'-D/XLmC'^_GWJ'E!WMQH3k8WEZ4^IO61VgY,:]L?#?]3#L<b>SQ3&)JZQd%`:]@VIHG)V0P
%&fOiKB&aAf?Hi!lr)M\^]@qDH(.XNTXA$,Vn6GaUq"&P9@tWA_UQJHrKPOMEE/Rq7bk"*t7H<]gj!h;QCiUd_#)f"P,:D%OBlN&(
%\%_\V%8/"3XpZi,4hf-Ub"KnOL[S(>rn2W>l6!?BYY;ScEh[s&S8$aKH>r^EQK#,N6KcM@,!EaI].$7B9?p2]A#mTBr1q#NSHG0"
%_e%]tTbI$-mS[K>:S37Ac6FVK\l\(G6+l)o2jN(_lZ'HtMD(mG7j[tEoa4<QJ^L445bE?$'L:s#$a8/tDhI">\RZ5%3]?^4T"XDJ
%Iq(=M;\'Mrr]'Ta0KTE\]IOXCf#Pu<QX2>t^A8_,'ME+F)dBDMD`G)Y(t+cBihM-Z,A`M_@V*u1JJ72Q#M6u&_0)l-9#FO5Pq,e>
%nZ\1"DRLKOqJrB\&F`ln3srda&1]N=$p6I4-8$uR8(Og-)%6m!'<VbGn+P[I+ZAM3ZYr'X[@>cmUE="c9=e>ZJ7+djA`?,VR(;-a
%m:klf'r@%%$0>r4962aN3&$^qYGp;MXkc2`YChGr.U6llP=)Fq\LqiqHq9c9p,/atW-SZc64&A36F6*iP4uNC?>kEg^=2D!lKd?q
%lTebSPO',;1Tl^"G<TUk1lJE+'M"$,PHIV3efB4Q\"$O$5>TK6"q9a0=aGl>=]\*gXH0=g09AUuc6FVKMUr(LpAq2XCqS03>DN0Z
%p"8/bj:EgTY7$k6pXn*/"oDI1_a4ZplU%rG[%QhW8p=QbI!./ug/"ouLp$GCEep"Fecefj%uEq:R6!]5CS&DI:dX!Ld%]9V8\%@:
%la&?a-*&2,,Q0/bO3o05qTO$HOLjpDNh@h]PY:.E*F$`P-gHcPrLFgOpY*l3OPn483(je01@a)>M>&`IiMARch?6Xp.@<rE3k(JP
%pp'8QqT^DYJ]rn]7-;BiILMRRf8!,fO1@o;)4V3"4Amr.I<Fu<heAF:I)5V>l$#Sro7Gt3/+acuBOf^==QEeXGV4Hh>\O-0\$#CD
%)AYuC?(5#nHh*W/8M<(_32lNd#Lt([`6+>1![ku>%]Ffo!B#R>TnL:*U&1Xe>p9d?I<p7?k'U(XHSTm+"&>F!":!'!CEk4t"4!Ei
%Q->ap*#;1\?^[@PHhi)SZ+5YOc@h1<V"l<QIOmP`bH*3--diYd^0p6Qg:rf`6,R.<V(5K&FH;W-2<W[pa$b2\?WH&B%sBXWfeHUi
%>TJ)BIEYr0^(.2JoeRMP9'0@r>*S't"cmT5qXK&$3SW.$4AMK0lkh9PY)Sr"pGd@0QTCFM[EiMg.\UlgBNDiapt6^,ICo_=?P_:,
%'MAta1?[B4M0&@k'taDR<<24<rc3>jE,gq/?;95C][c%on(>.5Gr(a-U.+M#Olu-UFlBm>)U]<r*\!N$rB#OfHa4%nmsMo>6O))'
%Hr,sl(bAUhNLZpphbu8hi/5tNI`*[&Zh"$dN,SG-gIK$Voc>-F:+8+O5hdOJ+^4#5)`_n%VTui][*P[ic6FVKHIiB<pD16gUpY*L
%^S!dL9R0h2^]I(;Yqkj\^iSmQiW@jn-$QJO_+:81b*AYhGJJiLajnYdEo#u&MY9mD(,r@Yj:EiiXUL``[^][%`Ho8.eNAImTnL""
%Tinj1M!inbJerf]*)WV!7artP7*CO),:CdWe=Z?^k"<YAS4?0uoWA]WmL?>6FD3DMO)6>HWCZeRU%pEJVI(E+GlYk>V8>oQ_sST&
%!0X&_*rp_.GlTs#g=XBq;5%*AVS]Pu0COm18X:BL-1^_kVs5GskN>ao32ksr/<rc<2RFl.0PQ_L?Cn(<9UIZCMh@EAQ5tThb-d?F
%jUS03m#pXu=ZE6dWJ&E:Tinq\@$?:MQTN>7X+/pL`Nj!X9Y!'%U)^YMg"!kh.Au"W9;`4Nb&Kq:XiI+g9[VMC_O0&cRhkksa6X?g
%19O>6(Clit5M%[K.LD+[jcVXUk8*Fk/t)*i?LmMmGDf`/)-O6:&1nR!NLZ@X;h'6KBoJNchS>8*$-fMllRiR[_+[SKI.(sQbTEb-
%m'ad&*_(Z^f`RlT4P)eE/hg?kV5jb(,DD;k=,&X'\/Nie?5C:mA7W@kf\XFU(bARgNh"0LYgFc#C;<:TNl,<4m42+VO7+=eplB1"
%Hq(tj30dt=4U\q'9Fe<_jgr6an:3m-8&B\G[+.9k@A/@gFeMr^^g"p$f]=Ul1)$N[nkY<4B1oO?YY;Pbnm)!X\^2o$[>[RI,u^rT
%/]o)OTZ]@!DmRNQTue1)9o`e?@$,MIi^C=#%BeM%dqYN'YZO6Tb1%W+FR/)/`FRP]X\IC)`E4ZQ#0WNP,:Cq0MQjal!PL%\h7T(J
%)k*$^EeUkXWG]M`i&op-7Va2agLJnk=QWj-3H6*Ks.\=F8,"edP_Q"I3nK'$k6Auo[ViUhj?18EVR!Q6ZR.4d7*D*9,L;oJlGBm;
%R>LN;a^j8c!F4E,]U[&HGC:E1IL,K(aVnCj+k\SPjB`ieEGoe:`!0HOTen<cd(:ne4&66(md;'LYVs?u&p\=!>9?KKd5't?aGKOD
%FfDHc182Em3K=eIkZs``e6CQkQ]kaiX<plNl+%P,8k=+6(5Z*_Sr4[H(RftDBUjgRP$(k@(?GQ5@@Y(g)o!Jl5LdFo;r]Dl7*D*9
%,:CdWe:j7SXEa,L3K=eIW*Pt+:Wg7[_/D:L:Mr$LT9XgVkoGH\4B>5q&1r55[#pPb?qd,:IQp\PO?n/fAAX*e+5EFhEn,,8W4DdB
%p]^AuG"(eg0Esq'*WpQGq-sE($dZX`'5uf"_.6>m55,T@5Q:*6^0GaH*T6JU0^HhL=Y)W;bIf>=-ec\5@Fb\SR72+>mj`YhDUFKb
%+hOP:]K>J5]k=I.Uk`WOG\uN[r0TP:_Eth@c6FVKWn.JgpFDhn[,hP[?O>d4Y'e#NfRAhQ5m0gkd5(IMaGKdKFfDIE/W*R4S4?0u
%FKZ3-mN&b5@-V3^>^\bQhhqbbV$bD+_'8R;aE.#ak!JZ!ntrd`2qhq4MfNjAHsX4mI+prA_@&;)S4"aH+]`2[(HCr%EW/)=3kPft
%0J&I8[k9N7hH&(<V`X4L+lMX!Lh*P29+TE*j4_S2o.bCM`=;RMEZ?Nq:qJctQoDPPU*dQ!5*;EpP-&UI3sNmHCEq0EO-pC#@6_qK
%Uf9,8b0ZlQgfB_^hO(R/G^Gf(a/s'!#SoGP-;KfcZ#^lS9)gh`2\3O$;i>b1Q*TMaUth/FnJLa!9<r'3bdfWP,!Fl][2q6oX.ReD
%<'ocZd&c#aX!m:Sh6g,8K*ku3Oo-+89b5W,l.X48FRmUkG/(ced*m$lh4K@I%rdYl^ZiD7f3N1\M4I43j@gc>Nklq4lH"&>A*-,L
%Fd]>]5GR$t#,r"_b42rMCc`tlV7@t3'.1h`#nrUGU1MWXOV?nflG?2)WeBt7ab8OD_:cLJk93d8jk^X_m)Tf4&(*0,g;o+tEa$R:
%m>$&*3UZSi.=H(gn"A4o"hMlYg#TQsECh^JDVWjcP!c<=]/K.X3[?=3=*M.MR[Cpq:a4rRd%WT7h<r:Mc7K5)=DkB'R\8mg>%V"Y
%3H76[0"d!-X#G:!A4#b]i9]=Z]f'c=F(8@mN]h8deV+KfVMAiQHYqi^4h3PrXUDjUhr*>(Z0XWh`BF#C)7Qd#:W;F,>WBog$TOa2
%@+d8:k$B!PmXEAbBR#.HV3+Zt]IQ@-F0_>tkIf3q^Xd=a!Y"===aGl>8QSDWUlVJ_09AAao16uViq:,VIUWc#rAO9OpD-fJns]"A
%CU5QP`6-<i![li[`!)Il`*'-g#/`b6Sa/VKDnk8SI9WkXZF`!PW^nbt\.l`aA$AY:2KGNS_4!o$`u<Pt3"8M,<3?T\autdH2fkmD
%J$%TLl@7PZ?d$kb[)fd=o%Z7$/j)pU=jA6<PBhW_E,gs)0lD&TBQ-8N_6<(Iim<Q.LKKsh?/S,_`DP/$iT`*,_a4ZplU%rG^j>`s
%UNbSs>U>ZYL-7+8LKKs^?/S+p`(nmjH\B6b$k"B2XUD8cjOl*icE(r&U,q*VTCK,mlHB<&IggnE1ABMDF8KJ06F3el%;.Xu/=Cs(
%C2*)J:<)Ccf>m:`pT$AcE%"GD6``hh12nGmi%V`K0@8<5K41I,^3-,PG?i8!RL.S!(sgC6j'FWV4PXu%P!c=p[k;XZHUsZ8G/9c9
%_QZj'hn%1ogZ%/9hRR.M)01:)?HC*";3i<AA^9tB'CY"^B4niWT#3SXmN'dF!A=?RC%&M-]c$VJ@*(Fi>SoGO6h=ftkQ,o5kkP;\
%\I6bmVos@0IkBk)\68jt=!it$DlpiYgoTop>7b</+^4#7)`]Y!QGRG`_^j$E]a"3@i8WUT6+q-M*I>ObmWrgfIrLVuLKKsi?/WX_
%rpHe-\CZ;LDZ8:h2RN8!Z`Z=MSXr$-:=kVtFD-+3QT<ZQSpQ7J"_b0]V*%d6R<j:!Z(FR&GO9Dj\UCs':!g%L^s[#6j:EgsY7-q'
%a*WN1C\J0i;qT@<N3o:>J"^4-ZJt/dN=U6ri1*,?c\7c#OrRqB^3+u?h]CrSr&tkdW7ko[?s"hNDdDQj:ZiPL.dd01p/Ltc1nDN+
%BQKb]FW^gCQ&4)rSr4[((RW1@E<[YAP)37pQA-IN$f9VWb:g'rl&W5jn>mYR%`'@Hg;Jj;0lt1]XiZ"Y1E7j1d()1rCL?V%CJK2(
%ZRiX^+tr,rhGo^Y@V+,5JJ79m's%f1.bJ\I]6XFX2RM\V\EXiq)rGDk"psH;IQEVP&1c53$_6F@pt6?>*(WpD(.tN0(Ktncm*m++
%Y7KIkRi`"gY(Dc%(b?<&N]^B,AhLH.?>L]V;&Y`mVHb"-Q#@%jh1C'%M=p6Cfl6^+fPX-@*J.kBQ&-15CmSVpFt'lRB=Q^.,PAT9
%48G/fSFo?MGHBVGddG1X"U*#eCEk4h4gqpm5+<r09-sB-klMt,\o3)s]64)4Vn`0#iL_q$gY`#&l-l9=I.uZVIsV(.+$Y8Oh3[Ro
%r?_JPF!&-p__47Ro[if'&)ZO-?[qn5LQ?raiT&6KI/,u+q-Ul8WirSe_k[.e4W^a:s6u'krpr@W;Z.?qhoN*Q5F,UTIOoF:Ni^!t
%%Y+M^?[qanYCGa7lSi1bqu+RMIer;1^O#h:Rt(J5rMMmZo^R]$J,8EqYJ1&4j8XT)nF=\g++O+]bGYAcr(eEKs68"Y&*To%5QCJ=
%s-NbKK5/1\hu)WoIf&e>rt!@BCRY~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 2015 3189 a
 /End PSfrag
 2015 3189 a 2015 3014 a
 /Hide PSfrag
 2015
3014 a 1399 3065 a Fk(PSfrag)h(replacements)p 1399 3094
617 4 v 2015 3097 a
 /Unhide PSfrag
 2015 3097 a 1995 3165 a
  {
 1995 3165
a Black 1975 3174 a Fr(\032)p Black 1995 3165 a
  } 0/Place PSfrag
 1995
3165 a 2015 3379 a Fn(Fig)o(.)41 b(S2.)33 b Fm(Error)42
b(in)g(band)g(positions)i(with)e(respect)i(to)e(the)g(reference)j(band)
2015 3462 y(locations)31 b(for)e(187-nt)h(HD)m(V)e(data.)35
b(Upper)29 b(plot:)36 b(error)29 b(o)o(v)o(er)h(residue)g(positions)
2015 3546 y(for)k(the)g(proposed)h(method;)44 b(middle:)f(mapping)35
b(between)h(the)e(reference)j(and)2015 3629 y(computationally)18
b(predicted)e(band)e(locations;)k(lo)n(wer:)e(error)e(o)o(v)o(er)g
(residue)h(positions)2015 3712 y(for)i(F)-5 b(AST)g(.)p
Black 2015 3979 a Fl(S2)107 b(B)n(AND)22 b(ANNO)m(T)-7
b(A)g(TION)20 b(O)l(VER)k(ALL)e(PREP)-8 b(ARED)2200 4079
y(D)m(A)h(T)g(A)21 b(SETS)2015 4195 y Fk(The)d(accurac)o(y)h(of)f(band)
h(locations)g(determined)f(by)h(the)f(proposed)h(method)2015
4287 y(w)o(as)30 b(discussed)h(and)g(assessed)g(with)e(95)i(data)f
(sets)g(in)g(Section)g(3.1)g(and)2015 4378 y(with)f(additional)h(data)f
(sets)g(in)g(Section)h(3.4.)k(Figure)29 b(S2)g(visualizes)g(the)2015
4469 y(distrib)o(ution)c(of)g(errors)g(in)g(predicted)h(band)h
(locations)e(o)o(v)o(er)h(the)f(position)2015 4561 y(of)19
b(residues)g(in)f(the)h(HD)m(V)f(data)h(set.)f(The)h(other)g(results)f
(from)h(e)o(xperiments)2015 4652 y(in)g(Section)f(3.1)h(and)g(Section)f
(3.4)h(are)g(pro)o(vided)g(respecti)n(v)o(ely)h(in)e(T)-6
b(able)19 b(S1)2015 4743 y(and)h(in)f(T)-6 b(able)18
b(S2.)2015 5052 y Fl(S3)107 b(PR)n(OPOSED)24 b(METHOD)f(VS.)h(EARLIER)f
(HITRA)m(CE)2200 5152 y(B)n(AND)f(ANNO)m(T)-7 b(A)g(TION)20
b(METHOD)2015 5268 y Fk(W)m(ith)33 b Fi(E)o Fk(-score)h(as)f(a)g
(quality)h(indicator)g(for)f(its)f(results,)40 b(the)34
b(proposed)2015 5359 y(method)29 b(becomes)g(more)f(practical)g
(compared)h(to)f(the)f(original)h(method)p Black -152
5542 4185 9 v -133 5640 a Fh(c)-152 5642 y Fg(\015)17
b Fh(Oxf)n(ord)g(Univ)o(ersity)g(Press)g(2012.)3293 b
Ff(1)p Black eop end
%%Page: 2 2
TeXDict begin 2 1 bop Black -133 -253 a Fe(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black Black -133 1123 a @beginspecial
0 @llx 0 @lly 473 @urx 268 @ury 2420 @rwi @setspecial
%%BeginDocument: figures/supp_old_new_comparison.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Korean
%%Title: supp_old_new_comparison.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: y2smile
%%CreationDate: 11/12/2014
%%BoundingBox: 0 0 473 268
%%HiResBoundingBox: 0 0 472.1661 267.9170
%%CropBox: 0 0 472.1661 267.9170
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 76 8
%%BeginData: 5181 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFD98FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A1FD04A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A8FD62FFCFCAFD1BFFA8FD
%1CFFA8FD62FFA8A8FD7EFFA8FD1CFFA8FD1CFFCFCAFD44FFA8A8FD1CFFAF
%FD1BFFCAFD45FFA8FD1AFFA8FFA8FD45FFA8FD1DFFA8FD18FF52FD49FFCF
%FD1BFFA8FD15FFA8A884A8A8A8FFA8FD78FF527D7D7DFD04FFA8FD61FFA8
%FD0FFFA8A8FD04FFFD047DFFFFFFA8FD62FFA8A8FD0EFFA82752FFFFFFA8
%FFA8FD4AFFCFCAFD1BFFA8FD0FFFA87D7DA8FD09FFA8FD1DFFCFFD27FFCA
%FD1CFFA8A8FD0EFFA87D7DFD0BFFAFFD1BFFCAFD28FFCACAFD1BFFA8FD0F
%FFA8527DFD0AFFA8FD45FFA8FD1CFFA8A8FD0EFFA87DA8FD27FFCFFD45FF
%A8FD0FFFA8527DA8FD09FFA8FD1CFFC9CAFD44FFA8AFFD0EFF7DFFA8FD27
%FFC9FD45FFA8FD0EFFA852527DA8FD09FFA8FD62FFA8A8FD0EFFA8A8A8FD
%50FFCFCAFD1BFFA8FD10FFA8FD0BFFA8FD1CFFCFCAFD27FFCAFD1CFFA8A8
%FD0EFF527D52FD0BFFAFFD1BFFA1CFFD27FFCACAFD1BFFA8FD0FFFA8527D
%A8FD06FFA8A8FFA8FD1CFFCAA8FD27FFA1CFFD1CFFA8FD0EFFA85252FD06
%FFA852A8FD64FFA8FD0FFFA8527DA8FFFF7DA87D7D7DA8FFA8FD15FFA8FF
%A8FFA8FFFFA8A8FFA8FFA8FD1DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD26FF
%A87DA8FFFFFF527D7D7DFD46FFA8FFFFFFA8FFFFFFA8FD17FFA8FD0FFFA8
%7DA8FFFFFFFD047DFFFFFFA8FD62FFA8A8FD0EFFA87D7DFFFFFFA8FFA8FD
%67FFA8FD0FFFA8277DFD0AFFA8FD0FFFA8FFA9FFA8FFA9FFA8FFA9FFA8FF
%A8FFA8FFA9FFA8FFA9FFA8FFA9FFA9FD0BFFA8FFA9FFA8FFA9FFA8FFA9FF
%A8FFA8FFA8FFA9FFA8FFA9FFA8FFA9FFA8FD0EFFA8A8FD0EFFA87D52FD0B
%FFA8FD0DFFA9FD45FFA9FD0DFFA8FD0FFFA8527DFD0AFFA8FD0DFFA8FD1D
%FFA8FD0BFFA8FD1BFFA9FD0EFFA8A8FD0EFFA87D7DFD5FFFA9FD0DFFA8FD
%0FFFA87D527DFD09FFA8FD0DFFA9FD1DFFA9FD0BFFA9FD2AFFA8AFFD0EFF
%A87D7DFD19FFA9FD29FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF
%CFFFCAFFCFFFCAFFA9FD0DFFA8FD0EFFA87D527DFD0AFFA8FD0DFFA9FD1D
%FFA8FD0BFFA8FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA
%FFCAFFA8FD0EFFA8A8FD0EFF527D7DFD19FFA9FD53FFA8FD10FFA8FD0BFF
%A8FD0EFFCACAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCA
%FFCACFA8FD0BFFA8FD1BFFA9FD0EFFA8A8FD10FFA8FD0BFFA8FD0DFFAFFD
%45FFA9FD0DFFA8FD0FFFA8527DA8FD09FFA8FD0DFFA8FD1DFFA8FD0BFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0F
%FFA8FD0EFFA87D7DFD08FFA8A8FD63FFA8FD0FFFA8277DA8FFFFFFA8A8AF
%A87DA8A8FD0DFFA9A9A9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9
%FFA8FFA9FFA8FFA9FD37FFAFFD0EFFA87D52FFFFFF52A852A8FD12FFA9FF
%FFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FD37FF
%A8FD10FF527DFFFFFF7D527D52FFFFFFA8FD45FFA8FD1CFFA8A8FD0EFFA8
%7D7DFFFFFFA8FF7DFD67FFA8FD0FFFA8277DFD0AFFA8FD45FFA8FD1CFFA8
%A8FD0EFF522759FD0BFFA8FD61FFA8FD10FF527DFD0AFFA8FD1DFFA8FD44
%FFA8A8FD0EFF52527DFD27FFA8FD45FFA8FD10FFA8FD0BFFA8FD41FFA8FF
%FFFFA8FFFFFFA8FD18FFA8AFFD5EFFA8FFFFFFA8FFFFFFA8FD17FFA8FD1C
%FFA8FD62FFA8A8FD7EFFA8FD1CFFA8FD62FFA8A8FD1CFFA8FD1BFFA8FD45
%FFA8FD1CFFA8FD1DFFA8FD45FFA8FD7EFFA8FD1CFFA8FD63FFAFFD1CFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8A8A8
%FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD1CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD32FFA8A8FD2AFFA8FD
%52FFA8767D7D7DA87D7D52A87DA87DA87D847D52A8FD19FF7DA8527D527D
%7D7D527DA87D7D7DFD47FF52A87D527DA852A827A8527D5252277D7DA8FD
%18FFA87DFF52527D52A852527D5252527DFD46FFA8A8FFFF7DA87D7D52A8
%7DA87DA87DA87D7DA8FD19FF7D7D7DA87D7D527D7DA8527D7DA8FD4DFF7D
%FD29FF7DA8FDFCFFFDFCFFFDFCFFFDB4FFFF
%%EndData

%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0

%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2014-11-12T16:18:28+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUrs47&#xA;27SWZr6eH9/PGsaLb8QsUzxrTlG7dF7nFVf9H3f/AFc7n/gbb/qjirv0fd/9XO5/4G2/6o4q79H3&#xA;f/Vzuf8Agbb/AKo4q79H3f8A1c7n/gbb/qjirv0fd/8AVzuf+Btv+qOKu/R93/1c7n/gbb/qjiq0&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>297.000132</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>001.006</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Helvetica.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>기본 견본 그룹</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5

%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -267.917 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 267.917 li
472.166 267.917 li
472.166 0 li
cp
clp
gsave
0 267.917 mo
472.166 267.917 li
472.166 0 li
0 0 li
0 267.917 li
cp
clp
0 0 mo
0 268 li
472.25 268 li
472.25 0 li
0 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
grestore
61.4165 226.75 mo
61.4165 20.0835 li
427.334 20.0835 li
427.334 226.75 li
61.4165 226.75 li
cp
false sop
0 0 0 0 cmyk
ef
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
61.4165 226.75 mo
61.4165 20.0835 li
427.334 20.0835 li
427.334 226.75 li
61.4165 226.75 li
@
168.083 20.0835 mo
168.083 23.667 li
168.083 226.75 mo
168.083 223.084 li
61.4165 226.75 mo
61.4165 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 226.75 mo
61.4165 20.0835 li
427.334 226.75 mo
427.334 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 20.0835 mo
427.334 20.0835 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 7 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 100 /d put
dup 101 /e put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
def
/UniqueID 28352 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.043792 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/P <1C60D8A8C9B64EDF881FD1B4CC946498DA3C19C25C4B8520933678924FDE
4A210BE068A66633EA9CF0A18FC1E10710CF47869E1E8874BE0332D5C37713DD
48920646AEDE175969913994AE21EF> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCFC037CEC30B1AE5F130A02A684E9
9A341CD228A3B00C0F0947DAE3EE2F0115F2F1C7AD297D397118CDDC6B8C30C4
F280EA7E4B984FC742154737AF60110634B578DD08B328C83C16534FC3A66AC2
B8949B5365E4D401A937B0BDA9D51F9A95F862666542DE04428C6BCD0CD755F0
8136868EEAAE759CFBA86A9449780C8E59190C25DA649E> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7FC3152235C08E51F0E890C
E0CBD856A1BA3830CC955CB85F22E6341C345F07E05EA0368412D92660FD567D
EB92C9E8FDD81DACAADD1422381027E2B5A85BACCD7017AF3886EC62BD93A89C
30911AF489073ECA3DF44D377924D15B8547A2846FB0280E3F49A45EDA729B82
36> |-
/r <1C60D8A8C9B81F2C46C810F818CC6D7FA9350962F8DF74B0F191B25EF39D
AC43ECC82A5155465999170893BB853FBDB2F1E5E6657B1704EB4EA080223F79
E5CD0E9024AC9DE64C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBB69AF677CDBDD1
1160289884D4DD9C5BA98196E91F13BADC9EA1FFD8D81D0FF8A895E14109578E
AE707C718F18B2FFF2D3889404590171D0D60AD099D0C33148CAAE5C0C1BDC99
87B32BC4D29C6F3CD338BD28A10AE13DF8A67F8EF98F4C78FDB1840183A583EF
7425DFC082B11B17BAF27735DD90DAD7C2C2F113B8FAEA052E0585F221DA84> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/KQJCJQ+Helvetica /Helvetica findfont ct_VMDictPut
/KQJCJQ+Helvetica*1 
[80{/.notdef}rp /P 19{/.notdef}rp /d /e 9{/.notdef}rp /o /p 
/.notdef /r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
136 243.492 mo
(Proposed)
[10.0049 4.99512 8.33984 8.33984 8.33984 7.5 8.33984 0 ]xsh
320.584 20.0835 mo
320.584 23.667 li
320.584 226.75 mo
320.584 223.084 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF867A21BA19EF0C570BB6C4AEDB905D3E548C322F786DA7
0CDAEFE3DEF4849E1D1588C3A22DCFB11573EC9A318A3B019A45D0FC4FCEE76B
AD39BBA1E526700FB4A11015D71862856C2D89337A110F371091E0B563CCFD9E
35D4> |-
/a <1C60D8A8C9B7EF32A0B922DB529D70E6EA403D8A84C07D516EB0CA87D255
60EFFD4826B71D37804D7EEDDA6CA7DDB4D88588D1C754E325695CD9034EF18B
1C52ECD8C1AD064BA9FFA9DFCFDBD81A1A1F510247425188B2B0EB19E88EFB62
DF3A67CAB8A09AB20F85EFCEB4E710F5C31422D7D067E77229A96AC4E6570C30
AE029BF39543CE2D3F73268F54943B3DDE6DFC6D1FE843243F344FA30A7F9A6F
2F64561C1AD88F00A1B3814F2AAD3466C6710D7602AE81367BFDEA024A44D26A
B58BC3F7C6266EABC0BB04> |-
/g <1C60D8A8C9B7EF3227AC78F20225D02AD1F5838626D1D2CB26D9A686345F
DBA7E6AD7CBBFB0968E5439577010C655F74DB6EC4A53F96DD554986565E4345
C3B0DB42345596269AD0BEDF0DE0FF0CEC2214730A572502B5B1C377714234C3
B835458280E4747C6986CC3BB5E2EE9A72968F97F16095F2CF05B047E21023D0
AFA6E35E503A84FE4F2FAB4F0F4C9E12738FA69B930E049550798D7E9E63EE8C
76ACEF8B8A3006630AA6153916CAF49A5335CCDE8F> |-
/i <1C60D8A8C9B88C080EC3D3AD3617BE24B7ADFB69EC85A7611E0BE9B62BA6
C48FF03869083107520E17B994822C2A> |-
/l <1C60D8A8C9B88C080EC3D3ACA1AA9447BE5E1701C51D0B115EA96EF55CA0
1BE9> |-
/n <1C60D8A8C9B7EF325730A29066B7F8CF87E66E4D5ED765FA285510C69871
F54E73D088410172FA6F7A994A736ACF795EE035A8B81FEF896BF101D6B101C3
C5B39857EAB9B93D07BE2F0E546CED9747F7DD1D14A8975B58A16E53DD404C4E
661DB62A0BCF442FCFD9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 79 /O put
dup 97 /a put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[79{/.notdef}rp /O /P 16{/.notdef}rp /a 2{/.notdef}rp /d /e 
/.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o /p /.notdef /r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
294.079 243.492 mo
(Original)
[11.6699 4.99512 3.33008 8.33984 3.3291 8.34082 8.33984 0 ]xsh
427.334 169.334 mo
423.666 169.334 li
61.4165 169.334 mo
65 169.334 li
427.334 209.917 mo
425.5 209.917 li
61.4165 209.917 mo
63.1665 209.917 li
427.334 199.667 mo
425.5 199.667 li
61.4165 199.667 mo
63.1665 199.667 li
427.334 192.417 mo
425.5 192.417 li
61.4165 192.417 mo
63.1665 192.417 li
427.334 186.834 mo
425.5 186.834 li
61.4165 186.834 mo
63.1665 186.834 li
427.334 182.167 mo
425.5 182.167 li
61.4165 182.167 mo
63.1665 182.167 li
427.334 178.334 mo
425.5 178.334 li
61.4165 178.334 mo
63.1665 178.334 li
427.334 174.917 mo
425.5 174.917 li
61.4165 174.917 mo
63.1665 174.917 li
427.334 172 mo
425.5 172 li
61.4165 172 mo
63.1665 172 li
427.334 169.334 mo
425.5 169.334 li
61.4165 169.334 mo
63.1665 169.334 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B7F37489CF70BD6DA577A0101CCD591A60AB52AAD593ED
DED9> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/one <1C60D8A8C9B7EF325730A290BEB204E49AC09A28987764356D1148F842
A73E52E5A03E7C90E789C54AE8AB77FAF63FE459A255> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 32 /minus put
dup 48 /zero put
dup 49 /one put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one 29{/.notdef}rp /O /P 
16{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef 
/r /s 140{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 174.82 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 165.578 mo
( 1)
[5.83984 0 ]xsh
427.334 111.25 mo
423.666 111.25 li
61.4165 111.25 mo
65 111.25 li
427.334 111.25 mo
425.5 111.25 li
61.4165 111.25 mo
63.1665 111.25 li
427.334 113.917 mo
425.5 113.917 li
61.4165 113.917 mo
63.1665 113.917 li
427.334 116.833 mo
425.5 116.833 li
61.4165 116.833 mo
63.1665 116.833 li
427.334 120.25 mo
425.5 120.25 li
61.4165 120.25 mo
63.1665 120.25 li
427.334 124.083 mo
425.5 124.083 li
61.4165 124.083 mo
63.1665 124.083 li
427.334 128.667 mo
425.5 128.667 li
61.4165 128.667 mo
63.1665 128.667 li
427.334 134.334 mo
425.5 134.334 li
61.4165 134.334 mo
63.1665 134.334 li
427.334 141.584 mo
425.5 141.584 li
61.4165 141.584 mo
63.1665 141.584 li
427.334 151.834 mo
425.5 151.834 li
61.4165 151.834 mo
63.1665 151.834 li
@
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 116.742 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 107.492 mo
(0)sh
427.334 53.0835 mo
423.666 53.0835 li
61.4165 53.0835 mo
65 53.0835 li
427.334 53.0835 mo
425.5 53.0835 li
61.4165 53.0835 mo
63.1665 53.0835 li
427.334 55.75 mo
425.5 55.75 li
61.4165 55.75 mo
63.1665 55.75 li
427.334 58.75 mo
425.5 58.75 li
61.4165 58.75 mo
63.1665 58.75 li
427.334 62.0835 mo
425.5 62.0835 li
61.4165 62.0835 mo
63.1665 62.0835 li
427.334 66 mo
425.5 66 li
61.4165 66 mo
63.1665 66 li
427.334 70.5835 mo
425.5 70.5835 li
61.4165 70.5835 mo
63.1665 70.5835 li
427.334 76.25 mo
425.5 76.25 li
61.4165 76.25 mo
63.1665 76.25 li
427.334 83.5 mo
425.5 83.5 li
61.4165 83.5 mo
63.1665 83.5 li
427.334 93.75 mo
425.5 93.75 li
61.4165 93.75 mo
63.1665 93.75 li
@
KQJCJQ+Helvetica*1 [15 0 0 -15 0 0 ]msf
30.4927 58.5703 mo
(10)
[8.33984 0 ]xsh
KQJCJQ+Helvetica*1 [10 0 0 -10 0 0 ]msf
47.1646 49.3281 mo
(1)sh
61.4165 226.75 mo
61.4165 20.0835 li
427.334 226.75 mo
427.334 20.0835 li
61.4165 226.75 mo
427.334 226.75 li
61.4165 20.0835 mo
427.334 20.0835 li
427.334 25.417 mo
425.5 25.417 li
61.4165 25.417 mo
63.1665 25.417 li
427.334 35.667 mo
425.5 35.667 li
61.4165 35.667 mo
63.1665 35.667 li
@
gsave
61.4165 226.834 mo
427.416 226.834 li
427.416 20.0835 li
61.4165 20.0835 li
61.4165 226.834 li
cp
clp
[6 6 ] 0 dsh
320.584 194.417 mo
320.584 155.084 li
168.083 226.75 mo
168.083 165.917 li
320.584 120.833 mo
320.584 107.75 li
168.083 121.25 mo
168.083 104.167 li
@
[] 0 dsh
293.916 194.417 mo
347.25 194.417 li
141.417 226.75 mo
194.75 226.75 li
293.916 107.75 mo
347.25 107.75 li
141.417 104.167 mo
194.75 104.167 li
@
grestore
267.166 155.084 mo
267.166 120.833 li
373.916 120.833 li
373.916 155.084 li
267.166 155.084 li
114.75 165.917 mo
114.75 121.25 li
221.5 121.25 li
221.5 165.917 li
114.75 165.917 li
.923522 .746761 0 0 cmyk
@
320.584 18.25 mo
320.584 24.25 li
317.584 21.25 mo
323.584 21.25 li
320.584 40.167 mo
320.584 46.167 li
317.584 43.167 mo
323.584 43.167 li
320.584 56.3335 mo
320.584 62.3335 li
317.584 59.3335 mo
323.584 59.3335 li
320.584 62.5835 mo
320.584 68.5835 li
317.584 65.5835 mo
323.584 65.5835 li
320.584 63.75 mo
320.584 69.75 li
317.584 66.75 mo
323.584 66.75 li
320.584 86.3335 mo
320.584 92.3335 li
317.584 89.3335 mo
323.584 89.3335 li
320.584 92.667 mo
320.584 98.667 li
317.584 95.667 mo
323.584 95.667 li
320.584 93.917 mo
320.584 99.917 li
317.584 96.917 mo
323.584 96.917 li
320.584 94.8335 mo
320.584 100.833 li
317.584 97.8335 mo
323.584 97.8335 li
168.083 32.0835 mo
168.083 38.0835 li
165.083 35.0835 mo
171.083 35.0835 li
168.083 62 mo
168.083 68 li
165.083 65 mo
171.083 65 li
168.083 73.8335 mo
168.083 79.8335 li
165.083 76.8335 mo
171.083 76.8335 li
168.083 76.8335 mo
168.083 82.8335 li
165.083 79.8335 mo
171.083 79.8335 li
168.083 77.667 mo
168.083 83.667 li
165.083 80.667 mo
171.083 80.667 li
168.083 89.75 mo
168.083 95.75 li
165.083 92.75 mo
171.083 92.75 li
168.083 91.917 mo
168.083 97.917 li
165.083 94.917 mo
171.083 94.917 li
168.083 94.167 mo
168.083 100.167 li
165.083 97.167 mo
171.083 97.167 li
168.083 94.25 mo
168.083 100.25 li
165.083 97.25 mo
171.083 97.25 li
267.166 139.417 mo
373.916 139.417 li
114.75 148.5 mo
221.5 148.5 li
0 .960204 .946044 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
KQJCJQ+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/E <1C60D8A8C9B64EDF885E9C70E86F4D6078E7D1BF0D69911FD55CAA5C46B6
C6C433175B8381217040BB42F142B1A0E1EA4F6BED24146D2DB65AFCA0> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/S <1C60D8A8C9B64EDF7B9A268599F9CD8C4143A0D599CA83C2CBBCD89A1827
CC58FDC85A8DFB6CF043CBC57E481A1BFB4AC131B9751770056C0E80F4764323
078BDA58184A405EE51A0CD263897356EBA37F07634C62A89D13BD3B9631D5DF
BA5DD765A30358A68432555538AB46A7C75E0621846302615DAD8C2BCBD5C891
F7CA482BF295A57FBDF509BCB98518A5F92E5A0834955E87097681F276DFB2BB
C57A72F7985B1447C571181C1100> |-
/q <1C60D8A8C9B7EF3227BF5E70012990F6AD75C7C1606B5E4B0CC1666D106C
062CBF25548C316EFAE3CD807215447DEE7459A9D1F79881E23A7CD97C235819
3B2CF61D474D654F5D11A16B0F4A55DC2C0EBE047696753569C42AFD2B22ECAE
0F067510265AB7C26184F3B68C845BB80CAB35D9CABF5FAFF5C3DB638C995B15
CF9621519C> |-
/u <1C60D8A8C9B7EF32A0BAF052F4A114ECAAC082E31670DC94A7FA83EFBB56
8580AF4F6C2C8932BFCF2FEB4A203216A409C4D844E8855D7E2463E8D98BEDB1
BB4900872849E5B1FD95306D62898C38C902A70A77A4381E200B6BC8AB0DEE26
413B477F144A27D4649C29CBC5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
KQJCJQ+Helvetica /Encoding get
dup 33 /space put
dup 69 /E put
dup 77 /M put
dup 83 /S put
dup 113 /q put
dup 117 /u put
pop
%ADOEndSubsetFont
/KQJCJQ+Helvetica*1 
[32{/.notdef}rp /minus /space 14{/.notdef}rp /zero /one 19{/.notdef}rp /E 
7{/.notdef}rp /M /.notdef /O /P 2{/.notdef}rp /S 13{/.notdef}rp 
/a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /.notdef /n /o /p /q /r 
/s /.notdef /u 138{/.notdef}rp]
KQJCJQ+Helvetica nf
KQJCJQ+Helvetica*1 [0 -15 -15 0 0 0 ]msf
22.5708 191.406 mo
(Mean!Squared!Error)
[-12.4951 -8.33984 -8.33984 -8.33984 -4.16992 -10.0049 -8.33984 -8.33984 -8.33984 -4.99512 -8.33984 -8.33984 
-4.16992 -10.0049 -4.99512 -4.99512 -8.33984 0 ]ysh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5

%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/KQJCJQ+Helvetica*1 uf
/KQJCJQ+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (y2smile) ()
%%Title: (supp_old_new_comparison.eps)
%%CreationDate: 11/12/2014 4:59 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.=`6+<Z68;m#5B92D;<6:\81,"8tpK+]0pWf8X(WdimQZ?I5&\14NrEeD]$A&F,_n^@/P7W*#S;*?Z])iIrIkh<`N2*2D3m,
%hg<+-;e/m?A7f@_A40rr`o^l^0^X(qrO;^_pP_2%E!tn0GV"jRO1TkogoPZPUp34R80S)r;@suMNCDhU&]tmpmHKteT:ClFD.u*b
%%!mQR39)XhB_L9&br>9ll+W@-]tnXTI';6&AF#Hbr<XrXQ$U2;PA\"S^:TmFLV9k?0dr5ILc<K4Sl?bi^7#]o017etPSY86Bt)\S
%R=;Q>;9#.t$2D'`^qHb/;0Pj_i&cCZC`Ihr8!hY7K#WZd!AL!sj1?OZ0GufFs78DOm6CR<J,DN\q;X..rBL8D^HD='i1n-XX#^"Z
%!9h1B3Z\l2SEN_epdcmZn[-r6oJPtm-PFFuOA8:)m[1e`:Zf8o'FbNgK;$9BPNUqF2o9f-LiJ#.-);d-<*UK83X*s8?0ShWqlE%P
%I!&7<;gd[rPKWAYT],LI(rqb7qW_PDP=G4o(XPi:RjQ[H#9Be!qPo,qpR6#BQjAHC8P<;G7rQfYdEeIESTG,8N'!lCJgR>Fr#q&e
%7S\_:s(ZM4],ZiP]K;+o&0X*+::PREN4\m"DB^C:Gs7q/b,_-K2?3e4EW\n#a"oQ[Vk`Za\"Ae0Qu#_kh2XPR8VB_,JO^;D1&n05
%s(Q,ncmKL+0D?O8>2bjB*%l8Z8_^b$8+bDOG'bom.9Jb_kYGMO>q%ZZc&=a0Vg(VW^Us)%-INaEjNp+gK[3$f51=6@//70CU'Q6;
%&`/Bh]G3m+(/M/>/WkQmBV?d2'8e(K:b7_WQXuiS1mCS0ThHC'_q!4M.$dUq1&(sF:omKD@YFk_/JR,;T`AZHAU%E3-PEq8\I8Ya
%AQ"A,RWOtiLpTb16<3ip#TO!H5VX)lHpTP)QTSIB%L**/:^.+-T6T]X3_3g!(OX(Q(_h?!."WuO)?pA;GjOo'*lGL\<J"/t""4@@
%K23mo0#KJjQ>l!nV?nj]Wo0(?-)2gi+PeEY,OOO:b>T]'+oe2PN"J5S'U_KIEq55c*.3<H0Lg>b$#3"B(aFFF0,Ph*"8J[_LI^h?
%`F+Yo8LBX_$UHE0!OO<)!q*]p8b1An/eZr,0nMM*2e;Pk!4_WrCSYMC>Fm`N7/dF&@":"l_>nRu132q(`X&25N6jVEOl1pmL/03"
%"%:[N.[O3L5p'fn:qB?G1==0bLHA:&L(K'O8E@<-fI-VB\0ijAjPeD-'-iR!F<?C^m1\sl!-qB>dE[r08gp1Q4[BV[;9&VA.BBMA
%e3VXHeZ5i/)-Q5c+I"L^!L4:;Fd8EVQ*8KAN,*PoTMI=(EHN!BEd-Utb:OCCUaj]3p`KF1XHKL]"G+3`s,ql9\\UN'0DUC'a5c6C
%qNq+Q-HU3!0DUr,Ol*.&dX$fMbN6eqoe6--c]d8O?h+_-0,DYSoe6,B.ZrWR?h07Vr_YiiEsSCKI`ZO((\nGK'Olbu]Ncui<p=6X
%<A*H4n=TA\fY\[E2>W63cV]BL(V,q0'U+;X79ZOT&.j,O$b:;?cbnLX&QS!%j=@m]`J_hNGp:"S^SG$a-C;R;T^r:%IMo'&F8.Ef
%Xun5_^Z]rJ5gP"Ce`up0SA7n=eF'*Gi!RRMr!1-4IHBE@Xq$Xd\ca\F',AIc["IB-TS+S*S\Cr!6_2?`d6`@MS+p&g*<[:(;+SQS
%8`pIbpp?LjVQ=5r8ASYM"131f)u>uOTkai`I)kW?8LZuK[%dUhdnuL:1c&QO![pWQ5tDWkP#bd4mDK/k-p7XRG??Vj*bd`,604M@
%ORX\)*opalM(=^V"`du_QK(sbccujHON3rc>uOtNa_2k`A-,d:#IP8ij71+\d.)]:_d>`Q8co2pAS&QAb=qdaQ(._Z'G@dag^6^/
%Z%NNbo=)dgfcHmQC1TJAa++nTFQ*oOGX@Ri5>Ei"2ZCmYh69FRR=3!ICj#>M'M;;Z6"iYhY[!<tKo%`_IqpBn)3W3hMJ@:%5kDAZ
%9R?a^?If15h4uTG#IffGp4b4U(dNS)*4tq.]L,,ZU.W3p&2+LI^ECGX*be)Mde#)gn!SXk"H_[D$+n7r9b/CTF\m'tQ5dmQ[RA_(
%I$U?'V6(PM-;Vs;nEA&?ilh^_j`N&PY^g96/b6[!kB._39($dfe?;>am/ul,lp@7=ps48SWdiREX07CiOs#K^?'H/I>`fhe"^<=s
%TKMCEg^'HpQl&MaA\qS!f2pUjfrg*U*Qu8!F]Rj%$](Lf\:?JdPrV_;Ja&R(6CrNTqJ,8b'GQ_A[WGIb,G5e$Z(*p&1PC!Eo4Ea/
%o*'habf)@1N?Y=CI>BE(PugCk[qC5JKI.D_btIAY.VFF_oO?"`TQSLC4+DBaS-rA)Y4FlYH;RWi5bR1rFW'tC9ZYWiI);m1hr4T7
%N'&7W)kN0,M'XZM>SV`"aWq1.OIsF7+XpKEV'QMlTM=@I_4i4`L@>nf-s8kk7;u2e/1=#")te[^Q#r00%/DOU70&6B!_\d[*KaBh
%,G06X&7ApaQMMW+/(1VT_&!r@a,8.3Cc(>bhWS2:#C^kG9r:;00+Y3m`,tWu3g`IuDZ?gd\^QE!gSjqK"=D?+Bf[0BH')T/[$kJR
%qUumI\pa.Vdj!,6?EZF1G>[tZ:@mjI)UUe5IC.fN[ARB84mD_):`<'b#Ld\!hhb[JS"i86qDRa70^PD'3f0GogjCYJ@)E'L%t>[D
%hqf_QPIRRhK=kqndF1Zdl?A]WpSd_<s%L#;NYJ%CRN2].oa'2Pf-mU\OJ8;^UaM/B?*H[dmlF`gKLS(I8&rMZ)keJgMmfOYOjn=L
%5X,n/enFP%oio\'lPDaIMTY%UmD88sKfSG28mgD'[u[O:Kdaff\)$ED#F"BKO5[_#O,hRdN7$"J:@tU?L2J0AU.L4PHda^L3?:U;
%^CA1]KXC/T'V2mt,Y@g^CelEVoP<aS;dpG*la5(;@q]_Ye*Zf>AOHcO[0GpC=**/gp2H'j.<tYOD2qF5q"ik6]ok;;_m,\,$dfrk
%#6ZMH>0J_-R3VLO.AP5*!2@#%Zp;57/`H!B'!@1dPaL_^V;;5%F[2BT@*0H;AP/0\kQu,<JN5"k:.^.<VSXeHe#?76CYG8"LV4eW
%dr>n3U+QtT:+Fk`b&sQ3*I2r'4r>GXO[`]6@U$NcZq20Rb2[1k[@<uVV?3QMdF"2QD&F?,W@eeHP$/`SP*C8u;Q<A^FdXSf8f7r/
%UJDdJOQ$AQ:BRK2J/2#IFh5>2i;l6aPZ43:QDU,M9U.Y'aQj.%`XhmMl^+Xb3JiS72Qk'K0.GpF6%hXeV_Fkpp"KR.;9ZNhb#'4,
%W:pj'T1@EEjM^6HhM!*rr[#I%k;n6]FS0,ld5)p#8cpqtL2];lbNEDlhk_6(]d\81)%EI\KDt2Pons@4G$do0$0#@m+EcJ;XUk'A
%n+Jo%*;:lPYt#tZj1cdnr[&7qoL4-A`?Zmo'N&#0I\bX;qJ@-$pR3>K:#;VUpa>q8$@eVr01rF#d?b2j4>$5UQ$S'+"'Bi##h=@P
%*"AG=5O13(c&is[:gcKpM$+a.aIkqG']T7f!kjE/k_fTC/]9B(Or-t],)IA6rt>Z`6;fFl5hES\;`SWf3HEV&`-m@GbIA0;U[+[D
%!ToZBVOE]mGJ8k+NA6%d4Q8=<:D1Y^7g"gA%Q(7/.08Y.rQ?9iX[0-PraK)%XmnOAKoe^djuLpn*#29W3uf-tir.=i)<,<jIWo-.
%#!K@;4J)]?3!Tm>j`([nn5)o6Gg+RFF/'%UlCWF\Per1R&s@q9(#&[hhlf?[aaRnF)8:=L-=%9=2o#lZ,46qjT.JM]P?&\U\Mg<K
%PJ2pa9,NqN--:&5Tmm+!UJ'3uUc5XgR]pGJ17,a5-gc,%XkOa;#t_F2P<al+h0oTOoQ&ZV^ue4E4eBH:)?14L8FS=u)#Z[Ms!"jG
%.>SkOO@5j>E!/KY$2XmX?Y85s]nqC&_9*PPYcZE[8=_S_#JN6_+$K*%M&u<p^\.+MG6TbY+.tb\HID_Sg`c=dZMQNG8]lD*I0q&a
%CANUe4E[.(r;jYCdC0YYlo-lL\W>PW:Ro&W68'u_dG#-4M>(WV[d+`R'T!h!7GirW5Q:NJrolZIje)PC5<h0o$V1&6U%[keY.jGg
%ID]/SQtC;LO8Q=2dL\]2L=X[SU]D\N0Bh1.7]^h33btMjo4hJ:`;+#TL=AC-6>)'A$8"eH4@`]jJH8%7=7UD89`NVD"kmhHd>V6J
%)H$;2bW#Id[__@33Vl#`g`G'B"s(hHosWWLq\R\54&Qp#M,Ca9F:0@@KlH#+B[lslJltr$9Y'jY;Ro7pT9^,Fd0#%OjY_EZO9.dV
%qmQ@]`imY7GT/67b6_j@g9SIOHW-ap]GR+Pm%Y:ebL,1*[6O]EUT2k`m]!i49HfX,8s9pI'*m`1Mhh9GK1.?KXQu=+p'0n[WT.ZR
%Em[l"`U\iCXV'N.Y.MqZ:NEftSBUF$muot#;onn%S1R"Z56m=g38;pPAFT7>@"1D+6o3jMa@WUk,"CU_;Z@g(#'K.Uet7Fp96pI3
%gRj#1ru#eHENe-rQc$gs7*6O`OIA=j&\gtX>3'ABje@53ef@Bj&Ku$R]\g;kah+=qd?9!:_*R!X4=/^AmY@R"rV2S8.[dL]d-o8I
%c_"`5Lu77u"0:t!"qr7de>1\&M$\2Z]\,o,)DM<ba32;@e<Y'XhOd/q5hk%cU*!ajUtJ$8ed=I%?FhrY*GQm?6uu&dOPsX]Q,Ph$
%G%;VRP8D#9F8W"E']\.[U+b-bF_-_1b)<;Vlpg3F3.99toL<TQEX2$fF>@fB1r3Ciq[\i2C@6W8h=:R$T7*MI%]0p6)mT-@Q0jS:
%&00qP_0Hnbd;8'SHe9<1,PS_F2+9sG"$LRQ,*Pm159;_>HcFg=gHigY6.4-q'PrdVX[.$XEOR+>;'*+V'2k]]g]Hc319IurhaWbq
%7(.e>MDh&^a2PQ6;4d0-D-=:X[Y<6qn-K^#4Bb]BneIVl?^p(K%6g2Z4<$k%C%SIe^63r;@"Ws8ea7K,5Lc[N!$PT*2j0UiHnoI_
%Sa%Y1C$/loURa#0YK^dB2:EgLl'OQ#9QC`:6f7AG3?*);'>-qc365+;`T@(5]Am>'q;\tFOr'/IDu\Y.q;X^<)`O.NlMYT>X\jB"
%1(EgF1-E`caO;\qrc1^0(K0^:E']p>I5r7*].cMJ>#;dT`sXu4bKhjs)*\t/11l\3+%_:QKKI/Nq$7dt#rCdRcH7:u[K1a3FgKsG
%^S>5tEYK>p6%Hp`(g,2u0Q8^23u.+[`o*$EfGo=Wi3!8O(7%(VVWG"nj";Lsb=Qb!fi0Kr#(t;)ob^:_k]`i[bMCRuY)E-;QVr1W
%QWIZP*LBVUnd0soE=S3LUgC7sqaB79;McZN(?=PNL'pg:<^mQ9g'[(1L$+O?e-a2ORu3%XMB!jGKfOd*%YEFqHO(8NC;3B.mL56&
%F.C+3H-Z@\,1=l)35YQ4pfHgBjDHhP2qg_pR]SB1g%F9)Bf(M'T!;"LG-<tqRfsY4IWpFfi]o4\p`BG05Q@Y]o'cVTa++!Dr9]"/
%[nj>X'CQLTBbC&"FdEiaGjCa,=lpXcAG-@WeZgr[=/6>=pUes[#&"a6do8>u:52=3Yc5P`FJaPqB)c`%I$<>uK;#"6_BK5A3S9mC
%Ji5iK7E6'\*??)`:,&N6rCPV#Up[():b\U..n4;SZ)96T"b3pG^WK^k7+9RLbNss*[jkKFH3c<Mj+<Z0:L@JLP$HMLY?:<52VY5?
%!A]T;QbQ?BR!:*Oi[mdb<?Xt*#^jjjBSD`3CrW=9X=,>-8ZU*)mB1;'VSBB\.V[I@>ZT>4PU1K1I*/07k&*5WB&!Ku7mu;\]IhUE
%Cc?^h&pjqhD-7d?nRF`k\0D-],:)eR(_.E>V.r7m\_39hi"Bs4)C%g\gmhhmnQGFC>A[On`E;PF%(027(,!d.M[t!C#fl/.T=KUF
%[+CL%j#)F=d#Hm3Os_/RHSF_U*<UH7*Bb96[-rDR`1[tDdA$Y0Njphj7+m@YM.n%!=`G[gdqYr11/:YCJRdhmA#ai#];K(n"k_$+
%F>LPUCh>J7:FX2q1hG=.@TVh1OAlrI;MK!X;;sS%cKf[h:"`JD`]Q3JG^&E=EXq.rBfkYnQk%M6$JXT:>L!A&Ul[qP;MZ*o:"nDF
%W5=V-gW-T/W)njSC.$/oY+r!;0`!M;7>=?L(a8E8hm&SicucVGZRIg3ljd65TV&g7Y:hhtcu?u;FE(hi'IiuD<T<\r8o4>2ZFOA7
%@EEYZo-nE(!/r!0>2\)s"tVjS\5@m^rCNg6qa+St(c!Ns*5)h]=thHcT!f>e9f+7S*(P;\d8lHcMR9rK$B(cXRD/=EA;hWXV1:*e
%&<Sdo[E]KQ:U%$Y<M:HEn=$BDVef2@K&cT;#N@hH_'+7/Z>(KS:N%&sQ.-OI<]41KpL-Ij]ni1U];X@qU_i-tb$\3@D5O7'6%hJ0
%IO:!ZD`"q<5pF,!'Ldu/\lB=2Rp(8V;K=I-&*uoIXem2,kY.NsD7Z`qc*f>/*3k6<7-_[p]j=6t.J>gi\#m`*'VbJj68CH($<M!9
%qhhZ5Qp9V?`7;e8lIoSWL8FYTS&8j1>TN#D30$L9&bkWoG6l#%NWu[m72Q_t)a_bF@^LOC6F+>^rq^'2%59(5PBYbuT[fT\22=X/
%`*a%hI=4T3lq3hblYD0DNQHdQBmG(\i_4VbSuD`T*D8rebem5raM@Wm>9P&)DA(es[.`4A2TM"fUdIhtGgB:WAOC3/O&fXhKp,-H
%%Zj\on%<#FNcX]CXOSeT9RAb)-\!O442BRY%At'YAWQ2oN30ZQkY#Yq(O/l/?+?7X!n"[kMbXI3S&MjI=r/57I=Spdc+?WkCM;>o
%\,YPSr9YU+h`q,1YCHGas6\_CO8n/;j$3P?5Q:2&qqM/GIp().JCCgNfd>I"A=Ak5+OU>DJ@2deJCBjSjXa4:T<Hr;P`@Tg^@dI\
%kR?Rk(-TC?KS`@-XOOO`F%l@tF6V7fDeo):&K;#iMTBhSE*t,*6;^2ABYgOTZ:lM\(*@ZCK2EG&d^>3GT]@U938On8Ium`a8[0F%
%8$XBKh!eOdRM]`^foqXZ(+>m/(lUTb1u!Vsg5L./*qn;P/=78'eF(X&^ZZ&"\il&BAMQk7A\I6Q!BOm[Wr_/7c<a\k`PrGmif'1C
%H,AC*`T![+=p:,X6sX/Y:Y/9CZnm6,Y%(EH41\^kp1Rh[-0$bR;g4A<BNL4!VD,;[/#6G^kZZ6YfP4$dJdJb23@I%!a(8>>h3K$O
%<(p(-PZE.jTJ5+6XjWf)X0?>#CW_L7a!bTVhkf1t1jYG@HJu<`*)GY%l@U:]_9"&a`!06[_'KGe"pD8r;]s8)+&]-D<[7ehf>?q]
%1UXT,&SoeLNKIrc>#PthA&!I7r)W3.(g54]>eaul!d32o<B;J9>"H1A>Ka,DKSc&EKlY";8;n>n5^j$+I@qDC,;@=%/dhmhWH_8A
%L4UQRpYmjJi;RjLb!gs'iSa_47"fJFD!*o*.PK)4Dtq;[\:6BX(LPXVcg(AGDR9,\h<cY0L#DAfin`XA#]+`Pa1$8k),IIW3V.oW
%EkrF5mWc8*m[Xlt(&&F?kHV9G5"7[aI`D(W?hVEc8k^Q!'4:JqiKs*XGp@>Mods6^8;5H)Dmtu>%8RJ?8*TPMqW4`_Mjc)%m:YkY
%rn`(2G[GbhQdb9hVpT8IW19n8'&!3+8ZH+hKeFOYc;s'H3Y@ao';uetI\`u*2j*[h5'C3M4l18!qsrQCGrN4ejo`/)T/Ip335HqV
%7ZUCGBGC&kY+H4eiD_c?.)#9J?X?\#XQ0[F3cU4qqq:T9-i#A'cHctQ(:o$7H.8%u*$31-]"7Dt8:X.rf^n/U$JrJ(U07nRMaYUb
%MQjj%I7?FO4bU_bU-+OkGVn+q?]Q7TW?X#6]-NT@!_(A,b+#kLp>"gu20k.>;g!&SVa;LF&Sn@[E3J9S;C;RU)B2pdp<?ch*^)C;
%06+$H)K!Bjo'T0K4##_(>CB9%T:*)j?151qpI;9ZAk&O9cbk#+qX2R@\Du*7Y'2NtGW7Np27VJ&m?k8L=C8hW5DeE$JHYV_NSWE3
%ja?(;Ygp/P7r"ePDP%fSb*?>g<MNSl1UuBq+a-pB7WRju_c81]46*T3^["5FWWerQ%;+bQqj#""@S/`RH?E.:Nio/G\5bqbXcdjB
%+%B&FCQ)^%m(C?0@Zs>GXD8Q>+Uns_LNL&4XX6fQm<,a9gS<pGIr!j)8L^nCSX:I^\X=?'G^Yr4S$cGU(]+'CEN:ho?#[DW5LHkG
%c-WG,`c8mcX`ENuo=RYqM=o,<._]iLl<T#m&$E&hZS<<b>%M2fX!YO3%9os)Vlib7\eXp,ke*3&5KgQ:_UG1:SMgH"Rgk@Ne\FkZ
%e]*rgA<TB/X0mSD-edikfV][(1*2;-';!3%/._J=cdfbTPK'^GXA)X$]6;?$e^L*he[6m5:>G>9jEh_!C%WXj?.Q`f`iU;=ca@e=
%hdb=(eNrp0QD`DT096cJ04q=%\SLUnD;8kX]RJCF"Lci]@9ZYL^4+oZS$mY1P8Zfp<fae\n:'5iePZr9F-B=X$AQI3%p_>f[ed7P
%<Qgl=qO$34RP-t7<QujR?9>-15;ScV+i@?QT5P[GXU_.Thj[cLQj^QkC.71AQL"J&mH"2\W7B;Z,eQlVD2E_tiX)Ia-'>Rg>an^^
%[\bsqj2m7W@Y'/46Skj9meXYi9=J'RlL%3Xo4/&L+kl3o3hU7'27*,TYkEqn(@l\IJX0ABE2AbR$FC_CjbkKpH06VMoGB3G4sHfQ
%I:!;V://XrGAej"3L%%9.3*'tU(lBWSNK0<dFhP6RqoW[eLG>,d%b@kUeW(_qG&!TS4@\=r>=me5"VgPoib(J@C3k#]FXL\a&QKl
%$LCu*o&UH=rK]!TbSHR`H,S"[d("DGNu$&J>V^Xf654Fpe\+scB+0V:V4H'J.58),hsYTnX=3#9Zi'fOT;u8aa3<DW'usR]F-J@/
%:uI?s2^u)B-18-gE+/IK_-Ig?-Sj+^$Ts*PbNj;38bIiEGEk>bRD"T$FjG8"pQjKN4PXW88^[[H>cZ"Qf0-b,/Z^r!gI(E*/\H#q
%[Kb"3Cnu,a"\uRs7&aSfp5HUj:Hk2[rSX8bmfNpFAdUXI\YkM?O@f,c2"t84(<t]J\ON<Uf"GWCXYJf[JYT_HoqmdG^Bhk,Dd2OT
%Id=O\p(gOYnOMbXLF*2Y"9.@[kaK0Oq"_O_UFkN8n`To%p<MaU'PYGZbiA@<@Tgm01`]q'q_mVo<3pr4Xe#n-PFcD7G5.bXb95(0
%(u,_[cAemFr(k/"mB6o[D'9n/TLpBeDL4`Xk:2i@N)'^,gY3`dWlc9>VXu:uFda2KO7)V/g$$@Y5cSeo%P+2C(#Fe?B3`!/O0f:K
%I.ShCWa-*K[?o,ZF@RSc6IUfCYdZ62;:397U(>e0]a'gZ7ZUJr0@DXpVcXg'I.h\Q;/FjZh;+A=/]G+1;MHr>)V.&T'>1qi@9HQ"
%qU"I]_nF`(j6qQD*RDO2e_&][H)k`B:/ikSd"\OHI$HoTBb^s!VqpC1=fX2FXV.30%9LD\B"4D6X`_&%d5VdZ/$4[i%**8CCYNm1
%Q(A2tCHgOR.LX0I2q6fHVD!>8ZrKe@-ESJO'Bp6m\lLOOe)>&=<mrNbns<b<.TS,p>6V^7_oMo5iPt:2o2\d;kI9TUJrl^BQ&+]>
%aWRK<bZ[0%RG.=-LpiAZ;0'u"Q(r)YY3<;=OKlipZZ?%$U(O&mKQRR.K[u_?Yl(7Y7I%P[Tg4r0o-05!6c*JHjJlu[bD5A1#_)h?
%UV@>@8V#NYL?rr0$2+D>"_0+=451Z=mm,+3bd'><g-:O7DW21odMnac7U%iPH;k%7ZAa^_%3Fq9#$@jsTq>PYoV6]T8E)\**bknE
%IjjlaVf@D.1XkU%dO+nu*=iF-LdiLCB6=W=%LX0pb,C*CTMF[Fmo"-=4qM;nEsJSu_L5=>R.Mh,$BYjV;BA0I%'5:&nP][K`ufDV
%=EQPBiL'q4AhZdC#k>rhbo@r'qq-!#M$shLfU)m(mLtl-BS6J!VWXF9STU#&E]Z6.^<A$8RnOAJ%G?lW*R.[RL=W:nbrDOQmZh.k
%ZWf^BW+U3JML@R$FhE=73>M3J41$5[Bt7&N0Z/V46:9#Y@[$(d1K&gU<#?T)1T]P%r[gg5VT\Q`1sttef,`*#nHVK)2Ur_=YOm(A
%?_/ej2dW(D1GTg&5(?Nf*Ls]'jme`I0"c'b3:\5`7CMoErgfac-^8`t9NTNRm)QM&`aqj8cQu=)J)2"OM/3;N;e@pp6g]UO)O#O0
%BM0_oCFBY:<\_/oDIg[BoGb7`Wl*]<8X"Ib;NO5l7/J]lef($8!BO'"-EVir?%DilAc]>nD[3%<4%o2b_Za-HMq*Bt!c1QD8-h<f
%.I>1GJ.WN66L#$=Bpq8lRoT6Vh'^eB=TUl6eFGs2'Ll7Sn"\]Jq\D$U)u!Nl4I?QKoN[[,<7+B>E=Jflp,t2`T;dtGVJ!i$Yc'b/
%LsWYLa(@D5eu6>e;,WtD$>-OuV&A`$N[MA9iL:eCWp)E1k%7)c17mRQ[)WY`].KXPT/<uOgas\!T0>+"QI6ddI9O,64k1ElYaHVu
%IVr7[)s_Yc!BZ:,ZCZ\/PXgAr`C\<DI5M_T8KZBg$ArY890gsD0P6u.ff4NUlM\G&*R\a,^3PJ/Rdo4;%V[ul2E0'_,ttc#9_Q2C
%g9$IOI5^1WHF8\]lt2FP>Lg9mBY7tZiH1u4c-oeZqnd;tk&3K9<jb&jE!CA?O#lYeVmNq5\?UH]>7*Z.gd3Bdfc[4*EGBEr)NBbE
%/2U?9cDW+8h:Qn*l%oj60^4E`l@dFg$_i@BM1u&hShN\kdN::&`d?9IDeu]Wbpnda)14KFR`@-#.ILrt/_(>k](9olpd)7I>Wk7A
%HHd_)VfCVSP`lq9'X^_=(88slEOSX<1g.;""dBBS&@`49@0Lu!k2X6;/$L)R,j85uW-*`^)tA+"K1rg@C"AIH^99NT"8S#K1*`$o
%!1LoOk:>"RF[m?IjmcPF&Zeki-b^!)]BMq#I@q#=2:l<hiCdJ@PQW2:MuDs<]@]j-3*TUO\<0ouF(@tL1cg")R]:t>+]hN'XQB>-
%Slc]n$jL<u>g5`g`lEFm*h9`iI<DV1*1\#f>6ruIoJ\_D+b\Ru<3e_Vc!1dF*g1E-eQ?]0)i=:a_l6\iZnW2]lo0Hapfuqo1Y^1u
%[d?$uk]LC!KN?=Rc^[^O@^`dRht/=d['LOl`9cHF!ui1c2jU8I?g"Nr]^B07UdiEMrRPXU()BfR3]QN@\DXsOYOD>N-[5M94Zq/2
%L^T;kk1l`f#Y!PeJ`@nj`o^_6o(e92fT0Wf^]dg@6B&5A.BLu02tg]5+@s-9R1ls=2-GaG?I\VYQT<Pah[8S8c[h@/S^jO\(?"TA
%>c/N1UF+1Um*!3TkfCC?TF=N$7dJ'FPnlYA>(uQgBNRCpZ=\KO3PS@>;Re-JJ:m8T1U_gc995!uLA[a1+=M%5"e(ih0>u3]o5CZ\
%ZdB]@rVfqko_*%9isGCSOBmoK/),NGA!P&ImZTt9Cj*5io91`Mgp")`'mE$F:#)r4DWk6C>eHh%h[[V`g\QNW9t.5JJTGDX%=qEe
%)qELT5D);L*,mi@!=B7hi[VG<*:5iH9@eVmLC/B#ZNXmb:9:.nRPY60KTk&4-`YYo2;27+I1Y2!BusI@cq[ckl:d$pIZ-$_%ZTgA
%rQ+2c!Mq3;pDH?ES1o+V*aJsAikX%Gc(W(!H]=Ltd@'Lk[40/Hq[5Al]%>LC'h005'fhY8I5`u\]&s^4n][sB;qB14(6D;\2haRI
%blZ7$?55LLpum&7c.`qo[8.I51n?);Ccu6@o@^ff:pS09h]J>'Q(WSUCp);.kWFThUL#C^]ieP8a"!HoF#6c%*Uf$pRR7;hHcn!+
%RnNT:RTJ-[?MQH+p)+hChcr6Lc*i?,/\2m8[l";%C$-`M7;pj8n[>b/`9[+elcjGCR##%/r*%b;rb/u*b(j;2.1"2bNu?iF8qu$]
%L_]X>LP[8-/Ch/GFSm#KTuni,7;*74Y"Z/H4JYWo,m4krf6!Q.BIe)@,/S2,jCk)G@,`&2_?t!u.A1?4YFWb,l7oBF;Kutko:F/$
%&,1on=Q`Ae*!i7LD+_n,hM$+,'R%K`dgg5p`nad7;lAgF\L1nJ2+Kt3p>%P)+u;"a]bVeMb*,bB/-$EoR[^kcp]6g,/MCX.&b:-]
%>P"I:(_cP46Vh%jc%L_V`i:8LU#hS_R^Db&`-jDM-53Zbo7PRS)m[ZI*U_B*2p<qDOmeDmIBW:GRuQERB3Hd_2mUa^\BedUXL*(/
%+8(mSM<0r1[ACe:XCM'2pm.$WK_$(hWlFV?N'\<s$0SXTj`APQN%>pnV\#8)/0@7+bD#Oja7?d*d)@<Kq5e*%fTX1K_YJeLZ$\/N
%FE+:!53l<7H5*W331k=E+$G]j5+Kq[Q;87G(CK?S3^B0),%4)bi'bHgI-,EVhkkgb[l()>ZM#$R&s/7:53%r*e/P2!G*RJ(c5;B)
%;.ZU)T6["&Y<+`nHmi_=;N=U3F2D7Rg&,Jgfec<h<BQq*bFd$NT`m87!nE7V,%AMW&>.tpc5=,.5ePmML10!iHa)M>>BY`RlZKO!
%r8([pL[e8j/hLpZ7,:'b<6AK?aKH6n',kjLmf=MW+K5lp>M?`D#5>XqaIU@0m*;#K$.5QN_X8CIR]V<DN&Xe3m)&2Wr(H7bZ,;RH
%\T2R>775Es"3$ciGjVnlJLX^A<XsI$ZSP(u&uN+W'ZY3sc*bRF>Y!I"jfY;FW@]&X<%_it_]4!i=E%kL0ep%L&)oh[%V[LE,Wr6h
%.BPqVkYt6b3lObBGs#8F@OG[0'3"ZgFV+'%.&IO^ACg90i6fNr\BJID,h!m+//s*!W*:%/pSSf3!Mbr8Km''^c=72!DCIB2"g(n5
%<_m4%Z8'<>RSAHrFiUk?0aO6I#_%V=g0\>D%lEmaO%#.B'4ijFd_o^iC$in#Z:rL``$F-Z-@EjrQs8+1M@G0'e7EP5]'"lfR%CE[
%mI`cXc?WW#rDqGiPR+-M[gr&Hao8/9Fl$\QPJq'^b:*kK@'CNX"H2M&6]56kSn=:I4c$-p#:gRIRVCCrmskeu@`5O7B51F*%bS,?
%mnDd[(fJTO4r^U*AedYj.us7a\kh?F7\Oi?7XAbp9[d+=P2cOj(OO];;$b[!HF?sYQ@X,*_K+ANJSsl@jKs3`5!kOpFfXNDOO?<&
%k-G4o7'KNU&BiN<UBCB14k(jlHTLEB>h5C44t.6qgoZi<Q'(aZV%<9@N2jFi2`#35ep=Yad9CN3/8BY"N?P-H*A23B&N;JZ%3;cX
%-pWU,=#mYEaArd$Nq7D'$KiZk^6ij7GW8@^NQ^!<:cKM6$1!Re(P$b?V>ZMe9s$@Ug!3a%TXja8,!*f\Y7hK.+@+#Aj$cpRSsk1_
%iK7DZX<U%-81-s?(5n9uSD0FiFIE<>EYrOKidO&T+IL]q[:`!S^R<\Nf3iQHlbP#F(06*7[.Lb=`).C=r(LulRkM_+N8s1k%_E:e
%76N!ND=,Em:1kNiWf-JtQq^9]g+:NFk:;T1VH86iMk9/^@b)4@g!SlNOa3hXg1hl(>cYJ$bpkJe%SBqP1/Hp=Ws7ah3\kUsBA!#)
%o8H])_Q"jP>]ug!X,5&1&+[tNX^iSsiQ+.@F6b)HA?!Y_):/11LQ$)aa?84f=\WFu`CZc0F.pbL?kn7mYi"./Y</u'.]6,LRNkSe
%_"A=kd[parjq8cW>rjt;@RL<.LWfNDY#`M<Y&-bG+X!nED$#D4Y?D!2q?hc-]'Mh&HHJ%1Mm_u)A(B(<k]uX<`>V>4HNF(k/3OaW
%EN!kME4-hV(:`^3hJZMWA$=]/0@!js^#-^)4O)@jg2!T_3YKsNWjfoEUAF9M9%N%1BjAH$.P:qdBKb))14fNY^E0S$Mp^0hj&#6c
%crs0sL1K,uXB[+!#\P-Ci0cs?><\6/&!Ce4?'sKplkG46#'T4LK4Jn$)C0[9U*/.0mhGuInn[47"N_iQWsOpm5g'DS+t,7]K8Tf:
%clb]$T.33t7FLE9MT&T"(B-t,A><LmNR@*=ClB,dK?^q"(4JkPT#nFLlC^8A4-,qa^Mm#@iUU6%:u3[D:Bs12>2@Y\M(Kg6V_LE[
%3e4:]-r8TVrfZ>227V4>a.m`o$1lu%&(+H^T*mHQ7MgF%YuQV;VmYAlF5irbg@rU7]"3aW)*gnS=!cPTl*!oAZY)&=Ybmon_W`%b
%n64Y!%&6,$4_h52g.,H7qP:aLS9;-)a5'a\k4A?X&q^BG)=0"7P,K6okl'PiK>a],,[PD6!_;"X-WIagJ]-l@OEg`H'=c12i7f-6
%.sSp$NAq`frCkYaBm9'g,#YjFWDQPGP#C(J&U&@6j]G2l!oV)TN<,MX<guG%f@mb01_'/:q&c`Um[h=nXl<%87]j788o[RMQ9O['
%fdc@6'/shE16Jod;]c]c&HK<#H*TskGFlKU>+Gun_[3o>iJRIoL"Vs2cn#1bc74P))lNA;dtcaB<R$0p2F!tg/[JKIf"leM/n6_C
%)VFh.\8L$#kA`X^2oBUU1>$NII'BH:>$/7Bgck]a#6dja%a(JW`i7F0aU-%rdp8#eEhd@/PJ)d+'(h-I.PG714lk'pAZTu+$iaO3
%iV%*R96\N8F$nY$_*tq0qJ9q\A>c^eYaFVGb'rZb[=r+^CfAjI4M"R]?I,QGR!#Pi]q3XDc#:$Po<-=[S7uXZIONo_>LE3U>3'i7
%gA2<)5ukLSi+>5OO"MfRT(\"AbX\TdhTt$_[r><JUDtdZ&T;?(?>//6YI3#X,?1pk;LMLdD.]&aI<$^fW4p5f2Pu%R7TtC[[Td0J
%T=KMtV1F%aK6&a`Bs&kgccE.TnUt.Q@%Xd[H'Ss,F(4QD6!tcB9"'Vf(;%f/.^75IWmATsEga^,UN7KCHjS0b!rIq`CV"kq19f(Q
%W_]r5X<t0t.&q24@V,AN5,5&?QfT5n$O-6lfEG:rfOqQOWCION$g]\7PHgb);Ls6c;170[\Z!i?-EtfqJ6HetT+S$T_r@Kpqm<#.
%*+2e^fXCpX3=5%nNjPVaqm<$7-';dXfI,-')qF,WNV&Z$Yg5ie`V[np"8c1#1@Hs'$S31JBBfT,g;#mN'mI':I7?SErNc"05,27)
%mQ<!/m'G5*9eeD)@%S#lYZ6+ZJUL!T@Lp.G!rI)UL(!7%3hH&.):*sHq22V$a)%E;Tc3TD@$em^C%RYsh_5d*(=2"'>i]!:Mk<iR
%59#a&)6.Lo!!d$e@#M%/gJE;K3acK38-`gpZe+1.c"-:LF7?Y2\S%80Qg#/<6CN,AHst@O-[LGYSZ13iWY0A,)cN"ngdloa[49Y!
%?=fRJCgpoU/$g,=s0m+>*:#Sm>`=AJnit)^d@mC^_;p)l.u/-D^H#dXB9W?IiX`^fnioK_pItS$77*h-ao<,86I(ko:[oI4bl>.k
%]Td5!;FP`/r-q@bOJ$H"ST.;)1be$)Pqa>tULf%HZtF/fHqQsC*?"ZskY+@h@f!H@q-r4:0_%e+jW<YKN@c,XCt&+&HA7e2`aoc(
%LGSYWY\n)KC4MkN1P0cedc?ltV]dH"m<gZ*Yho;ZG<W7rgVfF=F,<CmNS3)%2i"FKed,=:C5)+'=J!qPcCK2_3=3W/4p<<bJj`aW
%&o\,tILd\/P4jFg=Gj!<#7P:>8:0A\c!HQH`&aGYqgM)MR:tIgao4->EPMs6jsWI",555S"9:%3Lp8\(R5$VAgg'QTDOiU`2D%9E
%Xp7"q?aeXhjRRnSc6$WV^mOsjP<7>sQe\j+6R\8`!nRMZ_S+,a+D,SA)8j7<'EB_5:/%=^i#2\!BX&*UXaUA&/A.,-F,NJfAG37[
%@2+F;HFt3BL/=OUHK4t@ld9.t5F5*WkOiRVRTskIhTFEE@G\c07J4Xjrlp>c]$u3;L]1uXr[k;4cB\.MAXbr(-$fN&Cc7<;obg%O
%]hhABC`GqAcCO^U2:(s_Q,i=sj3+el%7tt+naau#IJG`i[FB)0$Ujm_CJOHD]Blh5,FhC:i]`k8@]gj-pVtq^jk-=9"'Qu(=)V*Z
%J<l8i]s53(DU.JC)6Y'=/:smQfJ8b-enYNM[Hc=))RC:&$+oGJClBpriuEVLFBcA")GB0;ONP2idTcV$\XCW`#GAal#bNJ"J7@h$
%NMZ46IQCT&2M"g7dN$8)3=*_`ddo&4:QnL&j,;,'87c[f5i&_Be)ur4#u>?]SDE1;/(*:.r,$*31/B#PDqo1Q@X^U-AtAP4h6t>p
%TD4f"%>)$g>I@XrF`CE$[tRB$fkH\G"G4)lkD<)2:SVm#^6L"^7")ARA]/TDXh'Jcil?Jb#$$0:g3>Fe-6"dLn1]7qEJ@QaOnAk3
%O[BC//DrM*Lfd;g.+>Z%lQ,r$M3/a:q9>$p'>ptG9t)H[d`.Dp4)8&tOa3_d910j48.J[be9&R^\OiiYFZ&LC9WPG1H`JR5%pl0k
%kQ2?':G,@Gh;SqaD6m8)\emHmcD.24b?m$,C1H>ElgL!>A6u:IpV$*nN)^[^kJ'C/=QTS;[7\?'k00P2'C-SR?c'/'.Z?hQ>`8*l
%[IQ:hhJ+A/Ec'M[C;qe"P4*!+JJ"q`CL5Ij8)sH;7r9"02qgO8lr3[O1UU+aDBFA'PMn1MGJ9T3H_,]Z29a(9BO^r;\TE15>;#nM
%WK1qe&>Jc`P=:M"7Ju0BRb:BXduc)s<-LN)rCZa9U`^+APTG]TVd46jC#.(IA[[qKhFJDbq$apEe5-e@;FJpC_l%l_jt]\*K-md<
%I><n_+h3>f:-',6;9,eoU3-YWXi$tmWpCb8S;5,g9GOf-_W/"pTItld\2gM1W=PAuf+<nfee-b^KLG?\@(SGS^b#@nkUrbpNH,r(
%30t/Cjgs,'GGD"jRJ"JJnh'!E:I^=i0!.Oj-lLjI429nN/i9!R(1r<.dc7aCMiH1QnBu'3M=/7H/$Pq:<ac2Z0%"1'jY"-anVEK#
%:t9T%(QrHQ"f\m?"l2=7cK!LB[$m/?&(mEG1p&885C5B>'#'>p]`>BQQ<1"V\&:-OPMmWV^U\O3>Ij@LBeVgI1;3ITCsr#h52DX_
%B54BkX/!-q)Q%b%*bT+<cT/SY65u8)kD8RdgYd1=O^9WWWu+g0Nqs5TD7c&k^P]jqW35C9]4m@WK=p'0TL@&(UlbX77r5/AefQr.
%bdoO$`fYDBO9:A:2$/;?VoC]nYE:Gj<pS?t5;\.KmgNp=d6r%!D)M'_&5_'ocm=fd&K.L'@\,_6Sgu)6WQ&]nJ)`L6d:k_;na^cA
%P%`DQI68]8RKZ"jS]2o>GL-*&#p$u0ap7_h0^M+=S]2mX/*maXa]Ua#Q1oo`O@6#:Lb<>&?D\QZ(lr?N]W*"#>`hYp7sNT.M5PLV
%EQsWIOQC1@0j,[cRIV#T'iN$2i$Tm&e=#\DnrL>F'q4a$PpS$2*D$12A;(5"]:Y4e:`$D-Z]Z'7QHAU[4B\AK^Ar@KR[D7JUcWb/
%>4#'iZaX*iQLJjZ<7u)CMgO4C&ft3]AB7:tdi]VX4L@"H'+V^-KSS.3%NYF3fd/b&GcTB##nN:$5f:)]NA5"4KST0=H`eb*6_!Ji
%R\8h7G\EZ8cqs77,iR_!!G1jK4>\oji,"/a%P[K#4LEDDi,Y4Bdl-0Y,?s@%#nQb]ZQ6W!.4H$-GW:I7lnSkX=V@5^!mc,G/Xl1U
%H5RBCg'SH6>46k$En[#i%o(iOBXU9/^KE&FTs\6nf"9\^29R3&iEW'%M^LVd4eI\=*P*#Ba>Ze;BFVr5R'Juo6Sg.Wh0)ElZ:P_G
%?37K]_F*Y9@%@hXiX$-tFZJ$bH`;[Rf%CO=k-;Gf,s8P!OBbAo6YdKV`mD+u_F$iPEQ]^l<$Ka!fnb4/\QH_dKt+qr#nIKdNQH@B
%MM$fgEcg2pb<_`:KgRIl.)bM!"UP^!67u5;(fT-<&ft6Rct^38Q:Z=7IIi9K%'puk8U*5T*j*P-W&#"2*s*`94Ih>-/Y;IYOf6!A
%_S\O[Cko1ho+]Jqs,XDuq4\0+Xg9$OChrVg4>\aY0iC5QB).+8%PIid2W:@+g'r)VC(_Rk$U8l?>=HCrCZ3=\qdGV?LIP.1WZc_/
%l_#lhTf!Obe#9ei*a1o3&m.`B6gN*,B-(=_#nQ2,e^mrs(/K0gm.MZ:44H3qE5FuuHIQLfSDe1?-9SYYU2nA$$LOVSQFUaK(259,
%]OJ2f/nF:t+t^&Th:"[,6gJQD/g[T@Fb*Tufa]n%LLh)>1<gYH4.NRR/Xl1UN%'E"D:4FX*a/g5b&Z4a#nJmaS&oheCkQ%9iLtCU
%Y!(36&u=iVUK<dVG\EZ8E5o)&d=d;+H\Kb@Wo#G)afOhU9e>uF\kVDE85r_WYmA+q1JthS(d54`pX]?Cn4_6\E#b^/WeNQu(Rh#'
%K$"'Mp9A"t708L;:u\^JC]/j"k`VXeRLQ5M)XUgPZdHn?@?+.>>RK?$[3@4);-h`1eQHtSfmF3GH,+1UnNL%34d"Q]>]>&Y4!!,0
%^:4PWF[$+9WUtaccdG<C_j-;.F'O";X`9WtFI9*LS2@b0fBXB"g6:C(b@<9O>oe$j\bc+"Q+Q0*4mr/lGKS`pYC52SW:&i?>&1%k
%oCM?"f=2A>gl$FCj^*sqkG-G'"O2nFO+ZiIPj_t?VN$gYlqMAKS8^36:fD;BgSpcF:XZH"l_jV=:LIu0p1tt]h90`.>uhHEhENsN
%f$_qZhg2K>Gn<VeS[L_"M`Ur".+'g[%:^b="DPo)&qH<!?X7Mh)c?o(3u]$B'08'3hK:r8!8!YeSA0t:#r64@`Cq?5$R6%@`o8K^
%6Pu5?F"]W$rmBpT*4-Pub^USe&\V>MS3P/;jk'2L=#iG>)Qu@Q=qFBnTagF<j'*4A;^W)\[+t.9K]G-p\kY/&r^/;a.YVuF9"U$=
%W=3-]?`L.,1UoQ:I[<LCA4oNo;sPLN>3&"D6irFcj7-gCGuT.FK':UNOM;0h#a+-eK6rk&+)5ED(G(;!Ve'6.i.*IDB6FX<AsA(r
%JkLKjrV<"=f#'hLg'McHk'%YelNZ.`*/<_jS<$Y)YHLCQVcQn]co7&M\7e"ea$5].QlVilR3;KcQL"cQ!TVie3@R?lT#OY6IhOba
%G$`<#s2,HCqODuWDV$uqeFOonX!+YGU:^c90++1#j[D^gi?DER43G/@>Np#!<I)D80>\Y5n+)AM59;=^WNA%CB0iD6jZ1aYbp`%t
%m(4EM@d$sZ8o4#2%VK83X,38F5=o<c^@f.<!'_!W,-<"1L7_n.<&UsNf:ELrqst(BeP6eYcoHkecM2SU'`XtJg\24@2U-3g]5fTO
%I/,4c[oXaN<q%Il$=^.^U`%ImOb1+UHC(+t:tkr>h<(k!=N6(t,,&DGrTJo=SOS:j7THrZTJGh<$nfT9jeM/%SR?kmPh<%W:3+IS
%NXp2E_1-t!;$m*e6-+H`C?+*sc-;/=DM!Alq3:Dg_[ql*XR8R9)'O3tG^mMmF\lnH`p's=?,5?*DMlnuB=qj`-%E6e^BnguJ.X._
%)Y[A7GoskZ[=h![$2PK8@sUFl^\D^^lFRk"m_!@[4r?o(Ns/2.[oF8>M]'d_NMcc8@U%X&RU"p#OgdUDXSl<Q*Z]JX<L&]1F,h"M
%PK9'`c4l[^ji,L/JL%`$'I@OE9;omMJ&SPWLH,65Cj)(a+t\$;Q.'s?ZuG\;0)!k(h;g2k*keCN3.$8\K%^^KXe4eidE+(>/d]QI
%#Q.NGZ[2SP$43_m/5mJDGP>kHrC6D$^\r2&FP3gA2NAuJ*T,IYbnKkY+3gZfNc#G`8QYD$TD%\P$BY)SmTp*j#gkfYdiN+bE"Krb
%2L/59'#o[e7%!qQO5sf9`h20k?4E")OMhnLMW'=5ifLbq13E.HN(#2fX:PEcmFET@U52#2<0rE-UW3#'p]1U$ml@c_aeg46\ejsh
%VA%oL5$s&Ms1Jg^L_">/*Ur:0S`W;I+>BOb0]=I:CIX5;3s,tX01V61o`Y$Tp[Z#*ITau]@B,.%KU?G+Nj+ZU_?:kmPA2[@GD]!Q
%N6p29kY>!S7Cd[/BV2S*BHOKS'tDCN_q%d2'=:F]O(0D$OTjh"%3"oL^pgWhLQGPS>Bi.WPrYgD0B#n_LYs8'aTnObc1qhE_7+.q
%3ADTrm%KlQZr"F)$AR`^N#RVX($1(?Vu*FWrJ\6$#aD+?cp;!nnt/,)#3E0KUb-\GKXYa!n;*$<]0a;S"*Zl"Dt2@P:WZ`/?j?PV
%'";cL7D;YA+urfqo7HG5P?0o'GOK"feX43-FT-8QN>4oMLV%UEmHtu/`NAPt7ih#4`lafCl\Ctj.t##[Pf3H):bh:CQb.I.1V46%
%GY\@So$*`a]4fOo's`'))BTWl-M'UmY`_\;>9<24a\J64+3GSiP>9=u'je1M)L&1tIgEHI/H\dCORns_*f*"(7X?]IH2_j5X[h7R
%O_l59'WQ/2^:cXG3uBJV2AX1f+6ue_@p^X-!Yr)Ln)A$E_$ldpSTCR216,ka_f\"@ED&tAUYW7[8U(i=\+rXiQ4j*#iea+k`f?@5
%L_pW-QF'<hFNt]U<X!TYY<!9B'-@1qI2]9K_0>J24X$MH6@ScT:,8Efp%*_^*;*W_K'-oRnFk9DcA?o;dIDmMDlXqTXFr\Zc\iSt
%Ve[k[_\O*RCc;X[UA)rt*m<H`5)/gfCoR5.qTSZJUG(;9n&8T#CAYnM4EsC:jt<RG[Hu1f3MPl%h\[cu/#2R&K?t#mD`M[Bcn00q
%:kQ77fg0b&=)N\klabKRSQbH](u$IQSrYP/U-/-3H&L>$B!YhaNHXdBnO<mqf)B,QT,1kDL?f_^:i)i![i=U_60,6hF+8j.?H2W=
%M[BT=QWu12mubH;Km8ss8%EUOe>W<0=VciSnbC9Ikf-=]VO]W)2Zdj^6G!iNDEkioMNNg`;;lZ,hm,_a%dRSAj=0AurpqRUYMKPL
%Ae2SZAdF>DLj90;'<']:T9hpXm)=?E9I87G[>Sju,^&^N52UXbHIh2ahmmF'Gjs6(,?^5VdhN`NG):@'=u7G.C@5l:kr(mg:mqj=
%pG:u?9NV\j9t*4m%NRD_fB?k&mYKY/S'@tS9c<g,p>2)b[c+c2IYY$V5ZU!)i*G71KYE4!i2JTD)=7^C#`jM"?@"s;/7Q5B4Rb1'
%3#-o9pq&]-CA[1T:n<70qrFn:Q(u[3lud(b2)E:Y?^LrsC#&Jeb$H1W*g@V-.o5CUEVf*Jfe:We%*#q:T-Fi4%aaTj^d)dMBO4V9
%Cprp<hSu#hNak`+[+VB$6?98Y]hr$Rff<>Z=Bf!mb<',%W1!I*pA)1?f.T?YPZ`B<>@t[$[)LBTf76^SF=Yn*>MctY!R>4[1Kn6<
%TJU^UDJg4WlpL&8ctoXCY$&h932(GX^H9PkL0QXg5!LJ4pOi"R>\K5h(@TG1Vd)+LEftja)K(m2:T`)jYP#P*S2S\gZdI02,QDd.
%>aEk)n\&shj.]Is3a;nBYW[Eh$frV<d5B@O!u4rlh<\SM+o+=>.+ja/LiHK[0R?:opCcfP;QtNJT"DSJ)/W%2d3fjIk<8WH]r73b
%9lHhLhcY<H7hH%(bWK\OSdHSu#X\NN5L?@I:7L+m5dJB',>80UJ)U289WF+`N:@4f[W-k!Dr==#(l@V7+9qkaB=AC90BQqJ.p5s\
%<ES<a;P\EMh(c6U]YQ/-R3SEJV-FD>&C-gj*)6j-O="$O5T0(%L"jWLe1-+Yl_[tQmA%i2dalY9k:>ntrT'BZH]lL$e&E\Hh\c%K
%qb?WTg]#)G[K=s;_d0.NQRP$:at%B(6GL_&@ir4'grN#TgdcAYhiaD*Zf<mr9G1M#Z'.Zsa8-,A\[)s@m%>Aq;F;DNAM"jlllY>h
%nTk=T5M)7c-WeT0%>pS5H7-Q-SGgG>.o6[\#4-O?SQ<dXkM'njDAknQde^1EaFAO5O2XZ<4#Yo3NOIQUo6t2Se]B3*NmKr0J.]+*
%DQ!pRlSjegkpIEfn9tHL./e+bB44,o\,G]hNT+HQ;VD":r'c:G#BNW6Js$jWSTA\Zo2@\aAlWG!e##!"&O2!30\0gof',5"E57c%
%D$`h`%G6upFR*bZ7AfW4V_c$5,."+&h)\bZOf>7g^<Rbb`iD7O_DO^"$NZ3:-_B800C&r<@V&?6d5clP?>q'7!gDLJ*4p$>/b%9M
%IsFc)Gmr?!Tr:M&.Y,3Oji0WKp963jC(9i*+qK]k=KP#%\MJh+FaEkB?qGKa;,)@>Mh]X+6+F=g2-6O5.,bMSRkNr>hkB.Ti?JFS
%CG0BtF%Z5+)5Gba3;`D!Y-k.s1G-'?qGke]Sjj\4(UL%4LSOFjId@iN/EQNX1hic/(b%59)5f"AlRR'?%t:FG%b^=/)m#O"DW6Cq
%'?WAlS;JoePpV4ZjHF+e\Q)egGEBC+a1lL5Y-ot!6RkIZcf^TUp+HK.\Z>SIZVr^gIj;\OgEC$"_Nn+5l"*M/Qp\2jT.;iaH\$4?
%fDKTlcLEgr-s.O;G+W;HkiR(ga6[N!a%r4R4SA>?qBsQPSoE8JnoJCb:HaLR5Blhke5K`IT/c`="ggL>p@6Xb)r/c1r?.)(qoQ1*
%V]P:c5BZ\QrFV>$:Sn'4IS_o/@?Ep:*(#m`$!MpB&nIfcP92gi^P8EV+^==i*DjV#5i&EY'`gp,1?>)(A4RuUBD8^]ObMr+-H6/V
%XZK$3lJ=!)Y$*R)[5n$PqKHCp/Al_ceAIZ^cFt1\FR*6mAB'.lH$8Yj'FhLRB$b!dgcO)G]G2NQoe==:#8P6)JO.2_C;d"jiAK9n
%U@ATiYC$sFUO@OOq2M-gJY,,DIL#@P0)E*o"=N*:ikO?<d@amsdh`ue6*jr&Z8[=]V@A\T%YBE($e1-m\,XfbQ3[,#-]<6HlU&^]
%p;F'#m9]_o]"3W[WG*$dq:)scoaIQ@*57(X;#.^.AU2#e=rS9=Hugl?5s=3P)M3hTA>Dp_C:oWU2La;Af9cLQ?EC3`dG:,8&dC*4
%Z6FpVboP,gN/(M7`<15F;agaZ2G9-.*+(0dGf3.7opan5o\icc_lX[b+X9,5O<A/]I6NOAk5M=a$(8'`C.0*8Yg['8#J/"O__GEu
%H2j"YK^)KHmA$fs"'IPs%m"/"0#UUj:7co44:"lW-&2-XYo,9@$+!XM6/h4dR%Q!=0GJ4/J=Nad^`Z]O3J:fH!8iL*i1E!HcF5QB
%9(@0fiR6j;<72mB0b=tlX^0fuBoWE"$n*l\-eOEo$R$&.AOt"/2@7g%_!n>aBsc0f(HL.S&.F:UkCnHfYdCq`Zgk<]ahi!h(*F*m
%jCnsRm=ZO88t2\VMFer^fp?+M2YAa@nm$j^I@)o-Ub)d<V+h=kTETp=^^PraSm8[Jfht^up9j#[.LC.WX1Zk`2H;0%1qt8-ZP]%d
%RL?-[AdQA.d[ZK4?UJOcXaRqd/dS5WL;?^?63GV3g4BD]UGRBH=A%':_nd\enJ34m.0*fSX9B0^D:4=b,G<J^K2.L1adIT[1I;>;
%?tg::L$9q$0d?]H[&N.p1RiJod7kNdfcY]6+IH1sg;s5:lumfE^5(a5HT4EmH:"P/&D"/G%La899[l6aIZHYEfnrcKg3hKJ"!D3>
%<jZ)2Q\of'kM[5:j"*.e30"Xqm1=?ETG"?.%pe7KT=(cIptAM`d7PQMN0%ZUX<H%c,\YO&%\cj$V[ui9VI>P1n'm:rSb*O]Y].7f
%&lK4UUc:VfR,NYN5]/G53qLqsf#p.OfRT.TYeGgTKnK(XdDuAgS^dt<R9_?j#72n^)Tc004Q9AKCG6FoE#:JHj+6jCfbsE3Wd\5N
%$F(W91iY-bm#`^]r4Q34XW5HHk5Hu'1*<hJ0H5"uk)OheHfC>n4]IZu1pIp46#Pj=Y"uFlT4?U_XRCuAJm(0"1T;S0=[*E>AbYI.
%00h@\GAtSpF&0>E#iARe->n">LT$WW/g`kP<P*UVT7nsRE+iFg^rqP!3dl[+0qlapiO?`rUo@L_-^)EGL8*M;qN7.\I&,0!;bl*4
%XaGgD@ckQW4F&VG?V8O\S_(g8ajgQThF%J9Pkk#=3XLqKeS)EibK>sIN<uB\\E=@jP5F%nkJJIm8-t9.%>_m]_jfmIK'UZO]:j6W
%@PBeF/PtRsh];f*o>>]u(O%]PHMm#=O;<g'")@RM-o5"SA4ii[7_'C;]b<k`B6h>7(N?6W:T2[TLEk\n?s1P@;6or?j4jTk^s?6W
%Z#rH'F`VH-)HJ,I!5jdGHl^G$-ZGWoE0Ju^nMbJY6DXoGC$_lZeu6'/bZn3oo-;6\Gr`f?m<YhjCZ])qE',+kbP<>ZghC0mE1->i
%KET-gpTrT]1$7M[ZONo)FPlr9pJU<+C)U7\F>r0[rQ5dg`Zko?E.C&Qp@N@>-J+6K)i\#ZhF$4L9Jrm?J\o;fOOh*KBpM+";rTK%
%JlE&jYY"ZWNkl3H2%(HSi4%tt<ie;Jb+5a\[M_GMUgZ\RhIuZOm/Td[L_W(-q.bR5'1#9"7@Z3VU*X$TfcdGq_B30,[srHDDT[sG
%qC>?DZ?O'lLT_;_Pc!Qh+5Z:SY#Sjf\D^NH"(KC.QPpK+qbc'?HpK&H]C*)(*k4'P#1n_!i`u1je7Tt7)(Bsn`\q?f7\,pd\'Q1\
%Jeufl\<J1in@qKKXt(Q\QH-8h4;>O3"[;SV;$$Y:L;*$^0;[r2E8SFD%n>u=&F^[9!?I4TL4-FYll8O-nUl6tVqYZuoR\`bWRO->
%BFKqGRap,Pi-u:K$t/9:)`%YbZ,%,^r#7@K9$kJp(u)T6/!tg0^o_]B:b.[!%(I$lM.[\A3G4H*6Y7C2)Is"'q1M<.]j1bG1o?@>
%;PIK$eCf^%M4nr$!Pq!RR[3O8')*KFcI8ab3HneS^_`oA'sq0cNV7O"`Vn`V<O#AKHrAQTQMRT%TaN;.\T(Z9S^]JkZET.PLE_C]
%>\idnah-2Y[437GV]-ng52RfhCG4/IhnN+Nar=AB4Rd4jB+2!`JUCf)S?45A#&r#Rl&JTQ#fl"4)Y0J@49ZX0H(Deg8^4st$M[dQ
%B]f))/Ii3IMK"oq]:5J_,,T-Z!=%V\dgB>oK^YK%@DRLV.O:WuJ`!<o'e64<Su>M152:4*B?;a75$KfaVO%j&100fVI5?_uS(f/Q
%l&MY*b97/7&,8%FEZ,)ti_=fEGjPmXnFJgZC-Y0Rd`tuY$eH66W+6Y$.ep^e0c0=I'Gb`i[h$t"B=oXd\ZYEE7IBWIkD(US]7>$A
%G.<FVk\r6Z,CCnHTSSg5q+Tl^:.;i'dR:Uf4/2@0b(mXuIVUhCY._11B!5LU-X+-Ao?GoZnQ`chc;_e["UrA:@ub>JqudR64I'3j
%0^BN854f&)X/ohT(QMg=Pubt3BGWP-7<Z:L20[HQ(7/Te17#QIkMe*Tefl2,.XZMjmLn#h(F8ZljNsnfbmC66Y<A]TIq5h*+^`Y`
%":4Jam8slsGSsHhUn_EEYpitlRhjAbPiEIs#7)6N`5T4/mN>MK1INK^Hu&,k?5DqpUM69^i7YYJn8CGPBfq0ZeYfUjTh=Q'5ljso
%6HqKTKN,&Xm8V>n^/aZHJn1Z&4TN>oktjej+H9b_o9L,48:Z;M<Wqh=o8j]ESc*&+/.'7FL.BD22NL="Z/ECd<!@bA/-C(sbqPVS
%q#?9\,nF''hKI^j`No)(Y>^A"r%-:c2-*?Dn\ooe!GZk:4gQlQTElY8EA'7Xi<<ACb$SDrh;*.WR-33dp+O7k<6>,)%jT)WTtMBZ
%]8YAl>>&a80)<LA94_mQ9hR9$3b:r7Z,IT`eQf/.k\^N-XiujU>C5H6J*b0,hu*QL&2>^7D!au/^RC]s#[nYc1_X7W\UN#`5=CuY
%kD3@l74HJL-37PoJE%KPU;0V9/o:,p`:r)L._`OUr15^="I;9I5$$.[!Uid'C?2aLm;/^sSLeYCS#hG\<R\PQne^7*L8Qbh<M^]K
%8qEIIe:*LO;6h\?;]VLX>oJE"BAn,+ba$UFO@_E@fn%>X!Qc^fBP(&S[gO.)oTsC1*DT`o/UT,U9WWim;(og@j4rtj7M3'.L7&L]
%rB/C&PT0,i3cu4cggO#VB6csJ[q%2tQNJ2ZQ\42?*q*5^jOSDhY\N!CQl<%m'ta)NN@9l]H)W@QQT<@EJ8uVtd%jVes.)E*hG.K>
%,Q;u?%LA&tSHCiMiW$()7V]mTru.8am+\oZZ[k7^a>+^jFa[_n`#(dAcYPF-:rI/a,H.3eW-2jUQ\W6'%ZQ[NrZl*na9%VW042t)
%l\O6h34<P<Ct^V\E>V\IK1Kes'#en`rAD):k-r##gu2BZ_hWW;H$XI:X^4iJp]\UX:6'F:-/p`R*U`FgZn+=6HjT5KhT6r]IT00K
%+d$]nRcJMIQ'n+9H&lcs?J6l=D3AndKMG0EAZST]lqt]!<Z,\:$rI@5Y;b^1-?a9mZH=#PA4VLhohq>bDi,B7AW1PIPYEo$`Ee$p
%`nD]u;Y&g"BpGq]agfhCg#]:j(+'nr4N("UX^Pel.MI[_6G:XC/7rK$pgt:!h*+^NY7_q')jYVhZ-q]2Y+Z'58V>oN#/>6E9ff+b
%2Z>%eNu(ajQfE5mh_1(N:'/C!Y8RT'VZ.Rb-q)7dg/=*Y5(=8Q>d=B]1SU"J6>/*l1V9$nLg)rt4EE=I5>*kK5BA_c>)iCF"d'^'
%4YTp3g0<l^ns"l]V&3Z"Tf'??I2@pH[dbd\iG&'0lKaS9'[$=.lZJj)kY;MF"&G2^7q2,sZ*RV"nFrMu:q?G2Qoit],.\A\i;8oK
%'!#Z$("P+GiJD*/W:6qPO!;8d\$_\-L370Ca'"?C\Wg&G<\-hgO5SHMidJ@WNBZ4fn9l\8r+Lh_)7$'7q2n=0oWhjr9CjB;KNu>2
%\hu^hPd^?)\l4&'$W+hoa]AhsbLl"/[%>8h2=h!n[jGpf:oCX&m`>.H)6p!6q%:i14\JtI+"8ocQ7U,i5FQIY\^s=1S3>htq%4s)
%[XUY)%-J032^a]a!IgmYRY1.6HSJS/QOq>b/'dXZ5l)$$oC`1LDX7'0+H<ZPm0%-*'),RC,$oD4;?IAGH[^DHZG<ai&prRt\=+#Q
%a!@.k,!?].;)<0;p<7&eBl8;]P2$u4h7L2J%51C.9h.1mHKBETs#dZS6)tCsQ"1Dm$h.pT.UV6.%tt9a%M;QQ7b,C=1onO,S>IIl
%;q!A_ni*L#E*aX^-j%**L=CFI[tZMlKCC^GcH7eT*0]30Btoi$'6^B4NAp)o2Q2jiB!VhEb$jrH?$;=^J["C].0iI<&4n!O'D/U`
%!-#l\S!,Z4J95WV&gI/]XHp2FY^H4*%F?DB<f>m6["Ygo%[[N_5!&3)QG>qZZl^H4khh3kjm4r3GW&DT"b'ZEg>-Ir3V8H*rNCqL
%7/<(Qhh?HC&C??6k%^3I_6%cPjC`m";omLu[NX=)iB;HCb['?,36+Wpa?Kg!C$M2]XcfsN8lWn!Kq7X49r4@,e^.M:=CDI-]SMCf
%6sS`TEI+RFRM,iHIpl+s6s;YWp`#dgels,t+DM_fX@HZ:iN_JY^HfSU54Yhd;:nktmB`c=nnFd5lMIrhT5QI;BRCn7ZK(<'b>igH
%\.9CNc(-H*,PFLF&"%_I9#_Q*T8Fg-m',P2H&+d?JbjBfndQ#WjI=S=<:3K!cX[XI-&"@dgnVgd=1)+Wh&Kd5GP5rbZ8VUpLYNY/
%RUN,+\V8]^1#YshL_:88igrO"7V<)q_FJ5h'ES3pA,)D-ER<%m#i"=C*<glX%^@So[tWaGP5IPKUOC=g]f<J;%L7aKK_s\6k^#XQ
%=#ruPkO@)Lk.r`#lK`Nb;9<X\V<!"RJ?&a]P99TT;b#$Yr*AOn#S9KlV:/5=>6h*nHNd)u30<9djJ3)F-RC+mf3\$Z>'TkeF``QO
%kG5p#BnupB`D]-Ph3V"Joc`U?r>(;i@1=T]fuV<mE=bp`*"qY"D`J]F_UrO"_=Q=;^ICm>R7bNTW<=laUDMCN1ccY"hn"4p>#:"e
%7<8\r?gi1CjcLfo8\\&YKD+q1l;-1QG;OMH3&jIJMc+oKOk_*p01dYc*2\[Gne9EpDF^MGibQ-r=^AepD&-Kh]03jZ]m"_o%3FPK
%6j*FnI^fYT!m.e2$#S;>aQ5t/Hgd0=038$jb>Jr0T1%[sM;'=#+g[sfqG*\qXSW$h^t1D+OJEc.l8So2mmrhFC;aZ-Gd>nnpj(0=
%9@Wl9:XOscf1^WANGh!?k0p(FfK&.pQQ$C%eBS8c+d'=G*:ff4[lm4OO++6oc%tjW7M0;lI#:N-TSHoW9(793d=[?)rgE;-`*3\O
%;FN0,@A&<4O_(NpAhReBf3ZnOL^_KEp3))4$\jT,iR8!#A753$hEdB##c/16hC5Xc!0lFe%?-DcR&2BfO@Bpo>H]%)9g4@9YXcoG
%+b])iMI'QWABF5j4m;'3<X%?qYmKVs)/o'HQ#-T#9"@IsWYFG5VeCP*:8:49JFp85B:UDj"51',*^h<6*qlmFa%Vb9Mg%$YdWs6-
%Y3uC*%Q9oHQj\)h8`Q&1ef,J9j)>E)F'466@*a.qX5ZEXf-?1h\%KAW?3qMs/GOROFZI3C1WB\-%$@qmM-*#s[oPXaWP<T!nZCMr
%++8Lol)*!W(A?/]!h-;n'75G[+.X7'60J"6,#!Xp8:lbKhTFj=k6!)]Hfc1pJWY1A4!O:Ufd"?k>Vp`_n[E>3rVT8IP5RYS=(O5]
%"$48UB9V'U]5H>eA1#VBdO_^goW?6Yh`@cbe#%m'PE4?iGN+hPEkoH!S\,H9*LC,n2q,(_<8;5IPE9ek2Q3O,c@.2=[Eg29Fl43/
%mR$5u+:m;bCO9:mehXN/KBQr&<$._C-IqNQAV4R%o[JXV(UlRBa2tarBC)dlD3:J*_ApTO4,]1;E4W99`^jVS-/0j%N'I#lDP[Uq
%W5^\b'J.<]NduRKY^?[)4RWT37OjaEB'LjYO=TjQlCsKUDgc@uOt*Z>3M\f-lBc<HV\=r4V4?77S!A(ti8jf^3j,G:?I9@V"PG$5
%B7)GR$+]O7&qX/=)%`>]""BL[,cVD!L8b5U\YbQia\%:F(VR5t32d8kA2-r/jL@!]F5[Dp]V$($>jI%1#n0$+,Le=0?j$iVqk]s3
%^PX[m-`ULRpt=BThL7o->\+J./_WlXhHIJ6gi(G/C[n>5`pN.r:4^gcB`sDfNuB<q%SDf:@5,RfLjp5GVM$:RAFda$JMJJ2g!dGS
%@VK*0\)9lr?sa65?h>*?AOuG['q1P9<sU9WHGB\&:F>h)i$>Gk]d>?lGhE"1'@jq7_3H'-m<p$.p5W:^."A-\[Qt*(%jS>*,9at:
%eBHF@iPL$+=iNfSXMI8EA:)'a@"Ub^Ic5XHbln*jF09k-o_4g,?U!GSM'%c_mI,8(]&^m"P:bM4bqoV-AI69#9SOhnU;\%f#WRNH
%#(WBQeBC60_]P>J'<jT3@>'sf849r$M90SJJOJ\iKR=3$^u1M)/`$b`CT]ad6@RC+DS=-ANSl)s=:g2g?j4b$'Jb6uLb+@>)[\ZW
%U$74ORh=s8Q+;FqKi"HH84s>@P=:KX@.4X[i?FVGRB;U5+N$aOX5%0s<]MXCb!cDI\W+>5I7DDF^B?]r7El.Xfsmd=$qNa"Q8$O]
%`"BNn8rMC7ML?jgW'mL>9,QHIlScnlPd]L8":(It9!df<B]"Y]D"kFN,QL;\EDZg'#\l<_7?AZP\-\1;6J8/IqlpiL!<?_MK2$ZS
%[4aKOGuP9.2ebDg'0'du2!kG=1Yp36=[+lddknqn7CRZPT=HV7O>`Q.-;LRpk1ei"5(6RMCdcUEack855];$<h,)Wmk5=UGlDsXS
%gX!+NW-1M-q^#!=Nt3RN\pD=7PM1u"?RF[NH8[MW.sa,Q8JTs((./,+G6Cg\qQ<oTf\(NnDRH[off)>eB"P'ASXC:Jc'IoE`4i2A
%*>dM&:Z#mYkI98K`mCp'ct0%$-N)S$;gB-h$6s,`NF*5LE"Zd?%5Gtr.#5KtRf7-h$W>FU#r#NH(#\7@;PZ22@3(l=^'u%V#&Vf4
%3OuqkD^PklkaWkiI(O]^Io<fDqZgFk[k%b!F!Nc2&H%AY7lf"-07sj_QOl&W$Dm^Ifkp/'_baFdk5_EX1Dd?4aAl1EdKgoI#TSKX
%N396Rm+#Sn\`?]08,R9&pQlrSd.e`f#3$Gaa9;OMo-ob"L*7G.=PX/[EC5Oe.,H&-P9%_68^I$e]t-JD9coru"CB4-Cf!&<oL!j*
%HeJq>pCqKk!0HpeI(CIXH8U^^DbMf4n/),,6?Dl&e")imcA1s7L5f/S1bE;r0/oJSHMKnA(O6DLcJ#HZm/3s=>KFc`ZhC@mD.%$`
%gmfEVbdr(WOqk_Xe78,uEVgnS^D36\ambKbb?]VZo\DMZ>Wn@1]sW%Oip+oqC5'"hOElV#JTocu3uKAEO(lt&j-i=La$*`OiYVhM
%$VZ";*5l+JVUVF0qo![sr%?q*>T/*$08ffn0]CWX68ABL`&q-.0g^dRF:::6&D9]X:2cCB83]jl:Q@?V;<mnWZ)-L0("q$<*#[cQ
%HSKmc?ps1RJ]EX-FQW]!Qk.`!^_DgGnn<Q1a_-GKrsVa#HfRFja3M&@rH*^XCf!:AUg1N0%[4G;EKkHq0*\gP![kluR>I@>>\.Pg
%>36eE>_8RN*)AIbr=402M&pT08!hY73lFJHNP+o7mFRdk,fEH'2u/M%s1r>'mH0+e>DU>IO#T8([9UKArq7H6h&l[lf0B8d^Ue^*
%]*:#t,FTQGMV\!%46SUn5MR.Sm.Rqi5:F*!DRDq9e_#'B:uAbeWe+RSn`a]hHAkl\kK^oam;K.7VQO:?iVP(rlOCRjNhNpHi7B.K
%p48h6k2n\uZ2<L:F*CmQjb<#eAAT@J`?Oi:kl/H6KOb/a6D@LCQAPrfK-t]!Su+^Jor<O5,SC(g.e!c;;,;UN$7)T"NeF2If.RDN
%kH81?DP,g7Hc$>Ya.qS3A0f/BibjlS7T(EOMt/DO`$2I.3fY0B`/#h]%%kXaHNru\fJkgsjfZD>LRX4?h7lfDr]N;]l1u\[KhbU+
%@"0'3^,58I6'IYA:Zm@E38V4"T*MBH#_l!/R^237JVUQ-U+EU;LKl+L-Y*Y;WOi6$!a(t_3so:%i4T-6&-$Hp8I,3SoK,0+\YGLT
%_<?[F5]B5eDQZ4g2LF9B\D)M.D@fV`01-O^RRm-Fa953ap-P?VKt>2ZX?Fge.$$2pPb56K<1ba"_W4K5TfVAYGXR@aadf8[7B"OS
%jJeH(F*pA_N.ECuN/`B:aF$GZ;(3q]A;dDu'5<l@W=\;M*CR:\Kr?H?5YTC^RQf1f9^"sJ.E4Uei/8'hH)?@qPa!>s`DhZ`A0e/C
%,CQGAW0X4j28pDg!o=$d&BQ^k7&?[fOY*Fs7*@Tm+#SJDK;b*3&2hF+Lgk1DY3@__7(":oW$u=LiA'2\\C!@W@'g+#?GD>^XP^RW
%N6g,:goM\ObRu1LVSf97P"q"6Qi]"^$'B=5$W2AMKufK(&@KJVLcdW&YiTLYLh]Kg;,`F)(nVskq3`:5>YF)1@OadQ1!#i<$;u>O
%K?9@S5d^b5W%h7=e,^lAoIuPn1.\hj!tfSdI6Zs`4\W8b$rg/%Kdq+!$XA.XK;k04+>q+TLuRdBkqbIj;)`Mi0ggbQA_7'J=baBC
%gaj]DpLbB'cXe!!32]B5o$l$!3c(fBl-sC(W=T_*#`r5GoU-2`>*;5%'Or8_B$#fldmHgna@B0&KpWR*2sD*<r(mW^.8,5,$SkOW
%1NJcY9FiqUQ)h:2</<!>J.]m6FYK5h'WAG_"#W8(kOb/`Am@:XRUQ]DPQA^e+iKTd@`f6kRPu(or(mW^.8,5,$Q;A9^0qOKi>gRG
%F0cA8n'=&)T?B:T>\[m.Q(Md\acn(BUFi?0jO5pEYP_'!;(Y?_C5Vt21'7M&I1p]e,i%#TV<Hhl6.s*(B/,ED7V#d?9$5o#nk;_2
%]sfm.+TA-RgkmS@3'>0cngKc8ZtnkemPsGh0/#-87;*jd7?THt7QMVb^YD+WAuP_r>i0+A(6'$$G%P989SY&^q2*g4H#79X8<JTp
%geITA:OU1,Rc.5k_!@C*l-tD%8IJ(+'@=Tg`Y-Ar0hrd((0d5dQ;.sP&U>R!#&6Os-R/g+QmpQOTf@se(c1`AI]8AB@R;AN0fiA?
%cPU-<6dsHg)HS2ThukY:?Xa<o(8E+N4[[^f,lu_FqEWfc(`-8N=7-iP,h"_+09W-BE0Apf]&`p$bj67+Bo4ZBA\)KIWg'W:WYB$;
%Z:,M,s'KPR\(Vr5"lT9ohSG[JGL7![IpPn6?r5K(h#ka`Cn]CRG'j06?':Bbe*UW1jlts+6'IM&j%:MeeZXjTedPAfjTr7pQGP0h
%3&\%iaaudW7&[Nagof^G26kNN3M7uo&F-@H/RG$7qSs8q+["B\;[fQY=9QIeXI#6PRE!LGYZj'uRonm>)5-D(*21Bp8E!QX71]m?
%/BoAM>JbeJ0CnR:TY;&[%g@ssWC2/]P>jkiN*<9dh]kZ\,a7HV^i:^KZbZmKd;9W6k\h6PQi^r\%"ZF>/la)XEZ5CWdR.k&_l0gI
%YOGei:uIQ`XADh]&SR0PSMNM[rK@FF;\-96L/DHGOjVAIk[e;s1-0`pkG%`'far<^63/pc66abn@Ai.ER=A7mU-/_mlM,ige>N>P
%1Om*h_jlp;Er"PUqt+&M0?]-[\+=UqNKn*M"&l=1S.bKSlaf.@%VLnd*D]s*-=qC=[mRI$habSi4T>Rkn!flE1TAr72.Nf<AN,Y*
%dE5HUp_ht2-erie]:2f7]#)X6Hg(hi(:n)T;Dn-EYP&4W,]8A%UJ@hte`3i/lE@#JlTr4;3Z3+sViKu!g]b%;o(hhLjpU4*.`_~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 191 x Fn(Fig)o(.)g(S3.)33 b Fm(The)19 b(distrib)o(ution)i
(of)e(MSE)f(for)h(the)h(results)g(from)f(the)g(proposed)i(method)-133
1397 y(and)d(the)g(old)f(method)h(respecti)n(v)o(ely)l(,)i(o)o(v)o(er)e
(the)g(95)f(data)h(sets.)p Black -133 1660 a Fk(pro)o(vided)36
b(by)g(HiT)m(race-W)-6 b(eb)34 b(\(Kim)h Fi(et)f(al.)p
Fk(,)g(2013\).)44 b(Furthermore,)f(the)-133 1751 y(accurac)o(y)22
b(of)e(results)g(impro)o(v)o(ed)h(\(about)g(40\045)f(in)g(terms)g(of)g
(median)h(MSE\))-133 1843 y(in)e(the)g(proposed)i(method)f(as)f(sho)n
(wn)g(in)g(Figure)g(S3.)-133 2125 y Fl(S4)107 b(PEAK-AREA)24
b(Q)o(U)l(ANTIFICA)-7 b(TION)20 b(EXPERIMENT)52 2225
y(RESUL)-7 b(TS)-133 2341 y Fk(The)20 b(in\003uence)h(of)f(accurac)o(y)
h(in)f(band)h(annotation)g(on)g(the)f(results)g(of)g(peak)-133
2432 y(decon)m(v)o(olution)35 b(w)o(as)e(discussed)h(in)e(Section)h
(3.3)g(and)g(a)g(representati)n(v)o(e)-133 2523 y(result)19
b(w)o(as)g(presented)h(in)f(Fig.4.)f(All)g(the)h(results)g(are)g
(listed)g(in)f(T)-6 b(able)19 b(S3.)p Black Black Black
-133 5542 V -133 5642 a Ff(2)p Black eop end
%%Page: 3 3
TeXDict begin 3 2 bop Black 2247 -253 a Fe(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 731 43 a Fk(T)-6 b(able)33 b(S1:)39
b(Name)32 b(of)h(data)g(set)f(and)h(corresponding)i(results)e(respecti)
n(v)o(ely)g(from)g(the)731 135 y(proposed)21 b(method)f(and)f(QuShape,)
g(along)h(with)f Fi(E)o Fk(-score.)2916 306 y(MSE)576
397 y(Data)g(Set)f(Name)1347 b Fi(E)p Fk(-score)77 b(proposed)i
(QuShape)p 538 429 2806 5 v 538 429 V 576 493 a(Fragments)19
b(of)g(Old)g(W)m(inners)1052 b(1.00)198 b(0.82)221 b(2.38)576
584 y(FNM)19 b(Apatamet)g(1st)g(try)1169 b(1.00)198 b(0.57)221
b(0.86)576 676 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(-)g(Reshiram)864
b(1.00)198 b(0.24)221 b(0.68)576 767 y(wisda)o(v)o(e')l(s)19
b(apatamer)g(#1)1171 b(1.00)198 b(0.26)221 b(0.38)576
858 y(Fisk)o(ers)19 b(single)g(aptamer)g(2)1121 b(0.93)198
b(1.43)221 b(1.49)576 950 y(Starry')l(s)18 b(Single)h(III)1312
b(1.00)198 b(0.11)221 b(1.78)576 1041 y(fold)19 b(vs)g(shapes)1426
b(1.00)198 b(0.18)221 b(0.15)576 1132 y(V)l(iennaRN)m(A)19
b(design)h(01)1175 b(0.84)198 b(0.58)221 b(0.74)576 1224
y(V)l(iennaRN)m(A)19 b(design)h(03)1175 b(0.95)198 b(0.15)221
b(1.11)576 1315 y(V)l(iennaRN)m(A)19 b(design)h(04)1175
b(1.00)198 b(0.09)221 b(0.33)576 1406 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1244 b(0.58)198 b(4.60)k(66.49)576 1498
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.75)198 b(3.18)221
b(1.88)576 1589 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(R2)g(-)f(Zekrom)
809 b(0.96)198 b(0.98)221 b(1.10)576 1680 y(T)-6 b(adpole)20
b(2.0)1497 b(1.00)198 b(0.10)221 b(0.46)576 1772 y(Kiwi)1698
b(1.00)198 b(0.11)221 b(0.51)576 1863 y(LR)m(Opp)o(y)19
b(93.4\045)h(FMN)1198 b(0.97)198 b(0.09)221 b(1.26)576
1954 y(EteRN)m(A)18 b(ensemble)i(design)g(01)f(\(L2\))834
b(0.73)198 b(4.27)221 b(4.95)576 2045 y(EteRN)m(A)18
b(ensemble)i(design)g(02)f(\(L2\))834 b(1.00)198 b(0.19)221
b(7.60)576 2137 y(EteRN)m(A)18 b(ensemble)i(design)g(03)f(\(L2\))834
b(0.94)198 b(0.22)221 b(0.74)576 2228 y(EteRN)m(A)18
b(ensemble)i(design)g(04)f(\(L2\))834 b(0.94)198 b(0.39)221
b(0.34)576 2319 y(EteRN)m(A)18 b(ensemble)i(design)g(05)f(\(sparse)h
(5\))674 b(0.97)198 b(0.17)221 b(0.55)576 2411 y(EteRN)m(A)18
b(ensemble)i(design)g(06)f(\(sparse)h(5\))674 b(0.91)198
b(0.58)221 b(1.70)576 2502 y(EteRN)m(A)18 b(ensemble)i(design)g(07)f
(\(sparse)h(5\))674 b(0.97)198 b(0.37)221 b(6.38)576
2593 y(EteRN)m(A)18 b(ensemble)i(design)g(08)f(\(sparse)h(5\))674
b(0.94)198 b(0.75)221 b(0.18)576 2685 y(EteRN)m(A)18
b(ensemble)i(design)g(09)f(\(con)m(v)o(entional\))537
b(0.94)198 b(1.69)221 b(1.06)576 2776 y(EteRN)m(A)18
b(ensemble)i(design)g(10)f(\(con)m(v)o(entional\))537
b(0.85)198 b(1.01)221 b(1.48)576 2867 y(EteRN)m(A)18
b(ensemble)i(design)g(11)f(\(con)m(v)o(entional\))537
b(0.97)198 b(0.17)221 b(0.58)576 2959 y(EteRN)m(A)18
b(ensemble)i(design)g(12)f(\(con)m(v)o(entional\))537
b(1.00)198 b(0.23)221 b(0.36)576 3050 y(Brourd)19 b(-)g(FMN)m(A)g(1)
1305 b(1.00)198 b(0.09)221 b(0.40)576 3141 y(The)19 b(Re)n(v)o(olution)
g(of)g(the)g(Mobile)h(Archer)733 b(1.00)198 b(0.19)221
b(0.75)576 3233 y(Fragments)19 b(of)g(old)g(W)m(inners)g(\(3\))963
b(0.90)198 b(0.77)221 b(5.13)576 3324 y(Smart)18 b(Solution)1398
b(1.00)198 b(0.06)221 b(0.07)576 3415 y(Lump)19 b(In)g(My)h(Throat)1248
b(0.94)198 b(0.75)221 b(7.12)576 3507 y(JP-14-0-17)20
b(\(FMN-SBS)d(II\))1059 b(0.94)198 b(0.33)221 b(0.30)576
3598 y(SBSII-2)1602 b(0.87)198 b(0.53)221 b(6.44)576
3689 y(Mod)20 b(of)f(Quasispecies)h(design)f(Fragments)g(of)g(old)h
(winners)219 b(0.87)198 b(0.47)221 b(7.35)576 3781 y(NUP)-7
b(A)m(CK)18 b(design)i(01)1244 b(0.74)179 b(21.05)184
b(62.22)576 3872 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1244
b(0.87)198 b(1.71)k(16.09)576 3963 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1244 b(0.90)198 b(0.84)k(46.15)576 4055
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.77)198 b(1.09)221
b(5.58)576 4146 y(V)l(iennaRN)m(A)19 b(design)h(01)1175
b(0.81)198 b(0.28)221 b(0.51)576 4237 y(V)l(iennaRN)m(A)19
b(design)h(02)1175 b(0.84)198 b(0.29)221 b(0.36)576 4329
y(V)l(iennaRN)m(A)19 b(design)h(03)1175 b(0.84)198 b(0.15)221
b(0.84)576 4420 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1244
b(0.81)198 b(0.39)221 b(0.20)576 4511 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1244 b(0.87)198 b(1.30)221 b(3.30)576 4603
y(NUP)-7 b(A)m(CK)18 b(design)i(03)1244 b(0.77)198 b(1.18)221
b(0.34)576 4694 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244
b(0.81)198 b(1.68)221 b(0.72)576 4785 y(V)l(iennaRN)m(A)19
b(design)h(01)1175 b(0.77)198 b(3.99)221 b(0.67)576 4877
y(V)l(iennaRN)m(A)19 b(design)h(03)1175 b(0.81)198 b(0.06)221
b(0.25)576 4968 y(Fragments)19 b(of)g(Old)g(W)m(inners)g(\(4\))946
b(1.00)198 b(0.09)221 b(0.21)576 5059 y(GOOD)18 b(SOLUTION)1239
b(1.00)198 b(0.16)221 b(0.57)576 5151 y(Mod)20 b(of)f(Quasispecies)h
(design)f(Fragments)g(of)g(old)h(winners)f(v2)126 b(0.87)198
b(0.97)k(10.48)2596 5333 y Fi(Continued)20 b(on)g(ne)o(xt)e(pa)o(g)o(e)
p Black -152 5542 4185 5 v 3991 5642 a Ff(3)p Black eop
end
%%Page: 4 4
TeXDict begin 4 3 bop Black -133 -253 a Fe(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 2935 43 a Fk(MSE)595 135 y(Data)g(Set)f(Name)
1347 b Fi(E)p Fk(-score)77 b(proposed)i(QuShape)p 557
166 2806 5 v 557 166 V 595 230 a(Combo)20 b(-)e(impro)o(v)o(ed)1283
b(1.00)198 b(0.13)221 b(0.30)595 322 y(EteRN)m(A)18 b(ensemble)i
(design)g(0)f(\(sparse)g(5\))712 b(1.00)198 b(0.09)221
b(0.59)595 413 y(EteRN)m(A)18 b(ensemble)i(design)g(1)f(\(sparse)g(5\))
712 b(0.97)198 b(0.21)221 b(0.75)595 504 y(EteRN)m(A)18
b(ensemble)i(design)g(2)f(\(sparse)g(5\))712 b(1.00)198
b(0.17)221 b(0.75)595 596 y(EteRN)m(A)18 b(ensemble)i(design)g(3)f
(\(sparse)g(5\))712 b(0.97)198 b(0.06)221 b(0.28)595
687 y(EteRN)m(A)18 b(ensemble)i(design)g(4)f(\(L2\))871
b(1.00)198 b(0.03)221 b(0.20)595 778 y(EteRN)m(A)18 b(ensemble)i
(design)g(5)f(\(L2\))871 b(0.94)198 b(0.33)221 b(0.78)595
869 y(EteRN)m(A)18 b(ensemble)i(design)g(6)f(\(L2\))871
b(0.97)198 b(0.14)221 b(0.68)595 961 y(EteRN)m(A)18 b(ensemble)i
(design)g(7)f(\(L2\))871 b(1.00)198 b(0.18)221 b(0.34)595
1052 y(EteRN)m(A)18 b(ensemble)i(design)g(08)g(\(con)m(v)o(entional\))
536 b(1.00)198 b(0.05)221 b(0.21)595 1143 y(EteRN)m(A)18
b(ensemble)i(design)g(09)g(\(con)m(v)o(entional\))536
b(0.97)198 b(0.14)221 b(0.66)595 1235 y(EteRN)m(A)18
b(ensemble)i(design)g(10)g(\(con)m(v)o(entional\))536
b(0.97)198 b(0.58)221 b(0.65)595 1326 y(EteRN)m(A)18
b(ensemble)i(design)g(11)g(\(con)m(v)o(entional\))536
b(1.00)198 b(0.15)221 b(0.27)595 1417 y(W)m(ild)18 b(Cross)h(-)g(2)1413
b(0.94)198 b(0.11)221 b(0.72)595 1509 y(Mod)20 b(of)f(JerryP70)1342
b(1.00)198 b(0.07)221 b(0.55)595 1600 y(Mod)20 b(of)f(brourds)h(1)f(st)
f(round)i(-)1018 b(0.84)198 b(0.13)221 b(0.88)595 1691
y(Unique)20 b(Stacks)1414 b(0.93)198 b(0.22)221 b(0.54)595
1783 y(G-C)18 b(pairs)h(in)g(multloops)h(in)f(same)g(direction)628
b(0.95)198 b(0.02)221 b(1.38)595 1874 y(Fisk)o(er')l(s)19
b(Binding)g(branches)1070 b(0.93)198 b(0.11)221 b(0.76)595
1965 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1244 b(0.95)198
b(0.27)221 b(0.93)595 2057 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1244
b(0.90)198 b(0.52)221 b(0.39)595 2148 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1244 b(0.95)198 b(2.73)221 b(1.41)595 2239
y(NUP)-7 b(A)m(CK)18 b(design)i(04)1244 b(0.98)198 b(0.38)221
b(0.39)595 2331 y(V)l(iennaRN)m(A)19 b(design)h(04)1175
b(0.90)198 b(0.41)221 b(0.48)595 2422 y(EteRN)m(A)18
b(ensemble)i(design)g(02)g(\(con)m(v)o(entional\))536
b(0.95)198 b(1.80)221 b(1.35)595 2513 y(EteRN)m(A)18
b(ensemble)i(design)g(04)g(\(con)m(v)o(entional\))536
b(1.00)198 b(0.03)221 b(0.45)595 2605 y(EteRN)m(A)18
b(ensemble)i(design)g(05)g(\(sparse)f(5\))674 b(1.00)198
b(0.06)221 b(0.05)595 2696 y(EteRN)m(A)18 b(ensemble)i(design)g(06)g
(\(sparse)f(5\))674 b(1.00)198 b(0.27)221 b(0.41)595
2787 y(EteRN)m(A)18 b(ensemble)i(design)g(07)g(\(sparse)f(5\))674
b(0.99)198 b(0.20)221 b(0.39)595 2879 y(EteRN)m(A)18
b(ensemble)i(design)g(08)g(\(sparse)f(5\))674 b(1.00)198
b(0.12)221 b(0.10)595 2970 y(EteRN)m(A)18 b(ensemble)i(design)g(09)g
(\(L2\))833 b(0.99)198 b(0.28)k(13.50)595 3061 y(EteRN)m(A)18
b(ensemble)i(design)g(11)g(\(L2\))833 b(0.98)198 b(0.21)221
b(0.18)595 3153 y(EteRN)m(A)18 b(ensemble)i(design)g(12)g(\(L2\))833
b(0.99)198 b(0.08)221 b(0.23)595 3244 y(UUU)19 b(/)f(GCA)g(T)m(riloops)
i(\(Round)g(2\))877 b(0.85)198 b(0.51)221 b(3.00)595
3335 y(Uracil)18 b(in)h(1-2)h(x2)1373 b(0.85)198 b(0.12)221
b(0.79)595 3427 y(1)19 b(U-le)o(g,)f(1)i(A-le)o(g)1360
b(0.94)198 b(1.19)221 b(3.98)595 3518 y(Bonus)20 b(Army)1464
b(0.85)198 b(0.39)221 b(0.86)595 3609 y(wisda)o(v)o(e')l(s)19
b(2nd)h(round)1233 b(0.82)198 b(0.74)221 b(1.02)595 3701
y(C)19 b(-)f(B)m(A)m(CK)1534 b(0.85)198 b(1.19)221 b(0.24)595
3792 y(Beauty)19 b(in)g(Balance)1301 b(0.89)198 b(1.36)221
b(1.33)595 3883 y(V)-8 b(ery)19 b(Lo)n(w)g(Entrop)o(y)g(\2410.6)g(T)-7
b(-B-C)18 b(#5)858 b(0.88)198 b(0.14)221 b(0.16)595 3975
y(Impro)o(v)o(es)20 b(on)f(Quasispecies)h(UUU/GCA)e(T)m(riloop)467
b(0.91)198 b(0.08)221 b(0.06)595 4066 y(sta1)1728 b(0.79)198
b(0.23)221 b(1.86)p Black Black Black -133 5542 4185
5 v -133 5642 a Ff(4)p Black eop end
%%Page: 5 5
TeXDict begin 5 4 bop Black 2247 -253 a Fe(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 731 43 a Fk(T)-6 b(able)26 b(S2:)j
(Description)e(of)f(longer)g(data)h(sets)f(and)g(results)g(from)g(the)g
(tests)g(with)g(these)731 135 y(data)i(sets.)1044 103
y Fd(a)1082 135 y Fk(An)f(e)o(xtraordinary)i(result)e(mainly)g(caused)i
(by)e(a)g(misalignment)h(between)731 226 y(pro\002les.)963
397 y(Name)312 b(#)19 b(pro\002les)77 b(#)19 b(bands)h(per)f(pro\002le)
84 b(MSE)g Fi(E)p Fk(-score)p 924 429 2033 5 v 924 429
V 963 493 a(GIR1)19 b(noref)250 b(21)404 b(199)319 b(0.09)146
b(0.99)963 584 y(GIR1)19 b(ref)324 b(21)404 b(225)319
b(0.12)146 b(0.98)963 676 y(AdoCbl)19 b(noref)180 b(16)404
b(179)319 b(0.61)146 b(0.97)963 767 y(AdoCbl)19 b(ref)254
b(16)404 b(205)319 b(0.68)146 b(0.90)963 858 y(VS)18
b(noref)321 b(48)404 b(195)319 b(0.16)146 b(0.96)963
950 y(VS)18 b(ref)395 b(48)404 b(233)319 b(0.12)146 b(0.96)963
1041 y(SAM)18 b(noref)255 b(32)404 b(103)319 b(0.09)146
b(0.96)963 1132 y(SAM)18 b(ref)329 b(32)404 b(143)319
b(0.09)146 b(0.96)963 1224 y(HTP)18 b(noref)275 b(32)422
b(79)338 b(0.05)146 b(1.00)963 1315 y(HTP)18 b(ref)349
b(32)404 b(116)319 b(0.05)146 b(1.00)963 1406 y(Tbox)435
b(20)404 b(141)319 b(0.34)146 b(0.98)963 1498 y(tRN)m(A)416
b(20)404 b(119)319 b(0.63)146 b(0.83)963 1589 y(cdiAMP)339
b(36)404 b(171)319 b(0.16)146 b(0.99)963 1680 y(16S)495
b(8)422 b(125)319 b(0.21)146 b(0.98)963 1772 y(C19)468
b(16)404 b(319)319 b(0.18)146 b(0.99)963 1863 y(tC19)447
b(16)404 b(248)319 b(0.01)146 b(1.00)963 1954 y(tC19Z)401
b(16)j(248)319 b(0.01)146 b(0.99)963 2045 y(C1Lig)420
b(7)i(167)319 b(0.04)146 b(1.00)963 2137 y(Hox5)446 b(9)422
b(261)319 b(0.11)146 b(0.99)963 2228 y(Hox9D)373 b(16)404
b(296)319 b(0.44)146 b(0.99)963 2319 y(L-21)447 b(20)404
b(413)301 b(2.00)2575 2288 y Fd(a)2739 2319 y Fk(0.98)p
Black Black Black -152 5542 4185 5 v 3991 5642 a Ff(5)p
Black eop end
%%Page: 6 6
TeXDict begin 6 5 bop Black -133 -253 a Fe(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 750 43 a Fk(T)-6 b(able)33 b(S3:)39
b(Name)32 b(of)h(data)g(set)f(and)i(corresponding)g(results)f(respecti)
n(v)o(ely)g(from)g(the)750 135 y(proposed)20 b(method)f(and)g(manual)g
(annotation,)h(along)f(with)f(the)g(ratio)g(between)h(tw)o(o)g(MSE)750
226 y(v)n(alues)h(\(proposed)g(/)f(manual\))2734 397
y(MSE)823 489 y(Data)f(Set)h(Name)1021 b(ratio)93 b(proposed)78
b(manual)p 784 520 2351 5 v 784 520 V 823 584 a(Fragments)19
b(of)g(Old)f(W)m(inners)682 b(1.15)167 b(0.82)194 b(0.71)823
676 y(FNM)18 b(Apatamet)h(1st)g(try)799 b(0.94)167 b(0.57)194
b(0.61)823 767 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(-)f(Reshiram)494
b(2.60)167 b(0.24)194 b(0.09)823 858 y(wisda)o(v)o(e')l(s)18
b(apatamer)i(#1)800 b(1.32)167 b(0.26)194 b(0.20)823
950 y(Fisk)o(ers)18 b(single)i(aptamer)f(2)750 b(9.31)167
b(1.43)194 b(0.15)823 1041 y(Starry')l(s)18 b(Single)g(III)942
b(0.73)167 b(0.11)194 b(0.15)823 1132 y(fold)19 b(vs)g(shapes)1055
b(1.22)167 b(0.18)194 b(0.15)823 1224 y(V)l(iennaRN)m(A)19
b(design)g(01)805 b(0.97)167 b(0.58)194 b(0.60)823 1315
y(V)l(iennaRN)m(A)19 b(design)g(03)805 b(0.67)167 b(0.15)194
b(0.22)823 1406 y(V)l(iennaRN)m(A)19 b(design)g(04)805
b(1.04)167 b(0.09)194 b(0.09)823 1498 y(NUP)-7 b(A)m(CK)18
b(design)h(02)874 b(3.80)167 b(4.60)194 b(1.21)823 1589
y(NUP)-7 b(A)m(CK)18 b(design)h(04)855 b(10.10)149 b(3.18)194
b(0.32)823 1680 y(Fre)o(yw)o(a)19 b(-)f(Cross)h(FMN)g(R2)f(-)h(Zekrom)
438 b(3.31)167 b(0.98)194 b(0.30)823 1772 y(T)-6 b(adpole)19
b(2.0)1127 b(1.77)167 b(0.10)194 b(0.06)823 1863 y(Kiwi)1327
b(4.07)167 b(0.11)194 b(0.03)823 1954 y(LR)m(Opp)o(y)19
b(93.4\045)h(FMN)827 b(2.07)167 b(0.09)194 b(0.04)823
2045 y(EteRN)m(A)18 b(ensemble)i(design)g(01)f(\(L2\))463
b(5.33)167 b(4.27)194 b(0.80)823 2137 y(EteRN)m(A)18
b(ensemble)i(design)g(02)f(\(L2\))463 b(3.03)167 b(0.19)194
b(0.06)823 2228 y(EteRN)m(A)18 b(ensemble)i(design)g(03)f(\(L2\))463
b(1.12)167 b(0.22)194 b(0.19)823 2319 y(EteRN)m(A)18
b(ensemble)i(design)g(04)f(\(L2\))463 b(1.47)167 b(0.39)194
b(0.26)823 2411 y(EteRN)m(A)18 b(ensemble)i(design)g(05)f(\(sparse)g
(5\))304 b(2.51)167 b(0.17)194 b(0.07)823 2502 y(EteRN)m(A)18
b(ensemble)i(design)g(06)f(\(sparse)g(5\))304 b(1.91)167
b(0.58)194 b(0.31)823 2593 y(EteRN)m(A)18 b(ensemble)i(design)g(07)f
(\(sparse)g(5\))304 b(0.83)167 b(0.37)194 b(0.44)823
2685 y(EteRN)m(A)18 b(ensemble)i(design)g(08)f(\(sparse)g(5\))304
b(5.90)167 b(0.75)194 b(0.13)823 2776 y(EteRN)m(A)18
b(ensemble)i(design)g(09)f(\(con)m(v)o(entional\))147
b(13.01)i(1.69)194 b(0.13)823 2867 y(EteRN)m(A)18 b(ensemble)i(design)g
(10)f(\(con)m(v)o(entional\))166 b(1.16)h(1.01)194 b(0.87)823
2959 y(EteRN)m(A)18 b(ensemble)i(design)g(11)f(\(con)m(v)o(entional\))
166 b(1.86)h(0.17)194 b(0.09)823 3050 y(EteRN)m(A)18
b(ensemble)i(design)g(12)f(\(con)m(v)o(entional\))166
b(2.51)h(0.23)194 b(0.09)823 3141 y(UUU)18 b(/)h(GCA)f(T)m(riloops)h
(\(Round)h(2\))488 b(40.59)149 b(0.51)194 b(0.01)823
3233 y(Uracil)18 b(in)h(1-2)g(x2)1003 b(1.20)167 b(0.12)194
b(0.10)823 3324 y(1)19 b(U-le)o(g,)f(1)h(A-le)o(g)990
b(3.62)167 b(1.19)194 b(0.33)823 3415 y(Bonus)19 b(Army)1094
b(1.61)167 b(0.39)194 b(0.21)823 3507 y(wisda)o(v)o(e')l(s)18
b(2nd)i(round)844 b(12.73)149 b(0.74)194 b(0.06)823 3598
y(C)18 b(-)h(B)m(A)m(CK)1163 b(2.75)167 b(1.19)194 b(0.43)823
3689 y(Beauty)19 b(in)g(Balance)930 b(9.22)167 b(1.36)194
b(0.15)823 3781 y(V)-8 b(ery)18 b(Lo)n(w)h(Entrop)o(y)h(\2410.6)f(T)-7
b(-B-C)18 b(#5)487 b(1.36)167 b(0.14)194 b(0.11)823 3872
y(Impro)o(v)o(es)19 b(on)h(Quasispecies)f(UUU/GCA)f(T)m(riloop)78
b(11.22)149 b(0.08)194 b(0.01)823 3963 y(sta1)1357 b(1.09)167
b(0.23)194 b(0.21)p Black Black Black -133 5542 4185
5 v -133 5642 a Ff(6)p Black eop end
%%Page: 7 7
TeXDict begin 7 6 bop Black 2247 -253 a Fe(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 731 43 a Fk(T)-6 b(able)44 b(S4:)57
b(Name)45 b(and)g(type)g(of)f(data)h(pro\002le,)56 b(and)45
b(the)g(Pearson')l(s)f(correlation)731 135 y(coef)n(\002cients)36
b(between)h(manually)g(quanti\002ed)f(areas,)44 b(and)37
b(those)f(quanti\002ed)h(by)f(the)731 226 y(proposed)28
b(method)f(and)g(by)g(QuShape)g(respecti)n(v)o(ely)-5
b(.)31 b(A)-6 b(v)o(erage)27 b(v)n(alues)h(are)e(posted)h(for)731
317 y(the)19 b(multiple)g(results)g(from)g(repetiti)n(v)o(e)g(e)o
(xperiments)g(with)g(same)g(data.)2703 489 y(correlation)g(\(a)o(v)o
(eraged\))519 580 y(Data)g(Set)f(Name)1347 b(Data)19
b(T)-6 b(ype)78 b(proposed)96 b(QuShape)p 481 612 2920
5 v 481 612 V 519 676 a(Fragments)19 b(of)g(Old)g(W)m(inners)1076
b(DMS)184 b(0.9389)164 b(0.9654)519 767 y(FNM)19 b(Apatamet)g(1st)g
(try)1193 b(DMS)184 b(0.6913)164 b(0.9468)519 858 y(Fre)o(yw)o(a)19
b(-)g(Cross)g(FMN)f(-)h(Reshiram)888 b(DMS)184 b(0.9734)164
b(0.9433)519 950 y(wisda)o(v)o(e')l(s)19 b(apatamer)g(#1)1195
b(DMS)184 b(0.9796)164 b(0.9546)519 1041 y(Fisk)o(ers)19
b(single)g(aptamer)h(2)1144 b(DMS)184 b(0.9710)164 b(0.9588)519
1132 y(Starry')l(s)18 b(Single)h(III)1336 b(DMS)184 b(0.9788)164
b(0.7297)519 1224 y(fold)19 b(vs)g(shapes)1450 b(DMS)184
b(0.9898)164 b(0.9880)519 1315 y(V)l(iennaRN)m(A)19 b(design)h(01)1199
b(DMS)184 b(0.9932)164 b(0.9745)519 1406 y(V)l(iennaRN)m(A)19
b(design)h(03)1199 b(DMS)184 b(0.9965)164 b(0.9929)519
1498 y(V)l(iennaRN)m(A)19 b(design)h(04)1199 b(DMS)184
b(0.9697)164 b(0.9232)519 1589 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268
b(DMS)184 b(0.9180)164 b(0.8848)519 1680 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1268 b(DMS)184 b(0.9539)164 b(0.7359)519
1772 y(Fre)o(yw)o(a)19 b(-)g(Cross)g(FMN)f(R2)h(-)g(Zekrom)832
b(DMS)184 b(0.9816)164 b(0.7436)519 1863 y(T)-6 b(adpole)20
b(2.0)1521 b(DMS)184 b(0.9764)164 b(0.9444)519 1954 y(Kiwi)1722
b(DMS)184 b(0.9964)164 b(0.8889)519 2045 y(LR)m(Opp)o(y)20
b(93.4\045)f(FMN)1222 b(DMS)184 b(0.9901)164 b(0.9422)519
2137 y(EteRN)m(A)19 b(ensemble)g(design)h(01)g(\(L2\))857
b(DMS)184 b(0.9863)164 b(0.9917)519 2228 y(EteRN)m(A)19
b(ensemble)g(design)h(02)g(\(L2\))857 b(DMS)184 b(0.9643)164
b(0.8977)519 2319 y(EteRN)m(A)19 b(ensemble)g(design)h(03)g(\(L2\))857
b(DMS)184 b(0.9198)164 b(0.9130)519 2411 y(EteRN)m(A)19
b(ensemble)g(design)h(04)g(\(L2\))857 b(DMS)184 b(0.9175)164
b(0.9482)519 2502 y(EteRN)m(A)19 b(ensemble)g(design)h(05)g(\(sparse)f
(5\))698 b(DMS)184 b(0.9676)164 b(0.9616)519 2593 y(EteRN)m(A)19
b(ensemble)g(design)h(06)g(\(sparse)f(5\))698 b(DMS)184
b(0.9894)164 b(0.9822)519 2685 y(EteRN)m(A)19 b(ensemble)g(design)h(07)
g(\(sparse)f(5\))698 b(DMS)184 b(0.9499)164 b(0.8044)519
2776 y(EteRN)m(A)19 b(ensemble)g(design)h(08)g(\(sparse)f(5\))698
b(DMS)184 b(0.9508)164 b(0.9748)519 2867 y(EteRN)m(A)19
b(ensemble)g(design)h(09)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.5388)164 b(0.6876)519 2959 y(EteRN)m(A)19
b(ensemble)g(design)h(10)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9898)164 b(0.9867)519 3050 y(EteRN)m(A)19
b(ensemble)g(design)h(11)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9918)164 b(0.9480)519 3141 y(EteRN)m(A)19
b(ensemble)g(design)h(12)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9763)164 b(0.9109)519 3233 y(Brourd)20
b(-)e(FMN)m(A)h(1)1292 b(SHAPE)145 b(0.9733)164 b(0.9480)519
3324 y(Brourd)20 b(-)e(FMN)m(A)h(1)1329 b(DMS)184 b(0.9907)164
b(0.7227)519 3415 y(The)19 b(Re)n(v)o(olution)g(of)g(the)g(Mobile)h
(Archer)720 b(SHAPE)145 b(0.9891)164 b(0.9360)519 3507
y(The)19 b(Re)n(v)o(olution)g(of)g(the)g(Mobile)h(Archer)757
b(DMS)184 b(0.9814)164 b(0.9785)519 3598 y(Fragments)19
b(of)g(old)g(W)m(inners)g(\(3\))950 b(SHAPE)145 b(0.9943)164
b(0.9756)519 3689 y(Fragments)19 b(of)g(old)g(W)m(inners)g(\(3\))987
b(DMS)184 b(0.9980)164 b(0.9868)519 3781 y(Smart)18 b(Solution)1385
b(SHAPE)145 b(0.9898)164 b(0.9883)519 3872 y(Smart)18
b(Solution)1422 b(DMS)184 b(0.9941)164 b(0.8834)519 3963
y(Lump)19 b(In)g(My)h(Throat)1235 b(SHAPE)145 b(0.9530)164
b(0.9545)519 4055 y(Lump)19 b(In)g(My)h(Throat)1272 b(DMS)184
b(0.9887)164 b(0.7225)519 4146 y(JP-14-0-17)20 b(\(FMN-SBS)d(II\))1046
b(SHAPE)145 b(0.9436)164 b(0.9762)519 4237 y(JP-14-0-17)20
b(\(FMN-SBS)d(II\))1083 b(DMS)184 b(0.9803)164 b(0.9684)519
4329 y(SBSII-2)1589 b(SHAPE)145 b(0.9192)164 b(0.9057)519
4420 y(SBSII-2)1626 b(DMS)184 b(0.9571)164 b(0.9093)519
4511 y(Mod)20 b(of)f(Quasispecies)h(design)f(Fragments)h(of)f(old)g
(winners)206 b(SHAPE)145 b(0.9417)164 b(0.9724)519 4603
y(Mod)20 b(of)f(Quasispecies)h(design)f(Fragments)h(of)f(old)g(winners)
243 b(DMS)184 b(0.9631)164 b(0.4340)519 4694 y(NUP)-7
b(A)m(CK)18 b(design)i(01)1231 b(SHAPE)145 b(0.9683)164
b(0.9706)519 4785 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1268
b(DMS)184 b(0.9860)164 b(0.9842)519 4877 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1231 b(SHAPE)145 b(0.8134)164 b(0.5124)519
4968 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268 b(DMS)184
b(0.9185)164 b(0.4406)519 5059 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1231
b(SHAPE)145 b(0.9476)164 b(0.9102)519 5151 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1268 b(DMS)184 b(0.9987)164 b(0.9978)2653
5333 y Fi(Continued)20 b(on)f(ne)o(xt)g(pa)o(g)o(e)p
Black -152 5542 4185 5 v 3991 5642 a Ff(7)p Black eop
end
%%Page: 8 8
TeXDict begin 8 7 bop Black -133 -253 a Fe(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black 2722 43 a Fk(correlation)g(\(a)o(v)o(eraged\))
538 135 y(Data)g(Set)f(Name)1348 b(Data)18 b(T)-6 b(ype)78
b(proposed)96 b(QuShape)p 500 166 2920 5 v 500 166 V
538 230 a(NUP)-7 b(A)m(CK)18 b(design)i(04)1231 b(SHAPE)145
b(0.9994)164 b(0.9898)538 322 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1268
b(DMS)184 b(0.9994)164 b(0.9657)538 413 y(V)l(iennaRN)m(A)19
b(design)h(01)1162 b(SHAPE)145 b(0.9206)164 b(0.7119)538
504 y(V)l(iennaRN)m(A)19 b(design)h(01)1199 b(DMS)184
b(0.9831)164 b(0.5016)538 596 y(V)l(iennaRN)m(A)19 b(design)h(02)1162
b(SHAPE)145 b(0.8999)164 b(0.7067)538 687 y(V)l(iennaRN)m(A)19
b(design)h(02)1199 b(DMS)184 b(0.9789)164 b(0.6991)538
778 y(V)l(iennaRN)m(A)19 b(design)h(03)1162 b(SHAPE)145
b(0.8780)164 b(0.7357)538 869 y(V)l(iennaRN)m(A)19 b(design)h(03)1199
b(DMS)184 b(0.9726)164 b(0.7832)538 961 y(NUP)-7 b(A)m(CK)18
b(design)i(01)1231 b(SHAPE)145 b(0.8582)164 b(0.8934)538
1052 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1268 b(DMS)184
b(0.9913)164 b(0.9948)538 1143 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1231
b(SHAPE)145 b(0.8971)164 b(0.7229)538 1235 y(NUP)-7 b(A)m(CK)18
b(design)i(02)1268 b(DMS)184 b(0.9497)164 b(0.9425)538
1326 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1231 b(SHAPE)145
b(0.6857)164 b(0.8557)538 1417 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1268
b(DMS)184 b(0.9487)164 b(0.9545)538 1509 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1231 b(SHAPE)145 b(0.9626)164 b(0.7790)538
1600 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1268 b(DMS)184
b(0.9923)164 b(0.8958)538 1691 y(V)l(iennaRN)m(A)19 b(design)h(01)1162
b(SHAPE)145 b(0.9422)164 b(0.7428)538 1783 y(V)l(iennaRN)m(A)19
b(design)h(01)1199 b(DMS)184 b(0.9714)164 b(0.9098)538
1874 y(V)l(iennaRN)m(A)19 b(design)h(03)1162 b(SHAPE)145
b(0.9907)164 b(0.9231)538 1965 y(V)l(iennaRN)m(A)19 b(design)h(03)1199
b(DMS)184 b(0.9954)164 b(0.9144)538 2057 y(Fragments)19
b(of)g(Old)g(W)m(inners)g(\(4\))933 b(SHAPE)145 b(0.9742)164
b(0.9742)538 2148 y(Fragments)19 b(of)g(Old)g(W)m(inners)g(\(4\))970
b(DMS)184 b(0.9932)164 b(0.9890)538 2239 y(GOOD)19 b(SOLUTION)1225
b(SHAPE)145 b(0.9514)164 b(0.9355)538 2331 y(GOOD)19
b(SOLUTION)1262 b(DMS)184 b(0.9840)164 b(0.9714)538 2422
y(Mod)20 b(of)f(Quasispecies)h(design)g(Fragments)f(of)g(old)g(winners)
g(v2)113 b(SHAPE)145 b(0.5959)164 b(0.6670)538 2513 y(Mod)20
b(of)f(Quasispecies)h(design)g(Fragments)f(of)g(old)g(winners)g(v2)150
b(DMS)184 b(0.5214)164 b(0.9051)538 2605 y(Combo)20 b(-)f(impro)o(v)o
(ed)1269 b(SHAPE)145 b(0.9482)164 b(0.9111)538 2696 y(Combo)20
b(-)f(impro)o(v)o(ed)1306 b(DMS)184 b(0.9962)164 b(0.9854)538
2787 y(EteRN)m(A)19 b(ensemble)h(design)f(0)g(\(sparse)h(5\))698
b(SHAPE)145 b(0.9483)164 b(0.9265)538 2879 y(EteRN)m(A)19
b(ensemble)h(design)f(0)g(\(sparse)h(5\))735 b(DMS)184
b(0.9800)164 b(0.8917)538 2970 y(EteRN)m(A)19 b(ensemble)h(design)f(1)g
(\(sparse)h(5\))698 b(SHAPE)145 b(0.9159)164 b(0.9152)538
3061 y(EteRN)m(A)19 b(ensemble)h(design)f(1)g(\(sparse)h(5\))735
b(DMS)184 b(0.9540)164 b(0.9228)538 3153 y(EteRN)m(A)19
b(ensemble)h(design)f(2)g(\(sparse)h(5\))698 b(SHAPE)145
b(0.9390)164 b(0.9145)538 3244 y(EteRN)m(A)19 b(ensemble)h(design)f(2)g
(\(sparse)h(5\))735 b(DMS)184 b(0.9597)164 b(0.9029)538
3335 y(EteRN)m(A)19 b(ensemble)h(design)f(3)g(\(sparse)h(5\))698
b(SHAPE)145 b(0.9960)164 b(0.9217)538 3427 y(EteRN)m(A)19
b(ensemble)h(design)f(3)g(\(sparse)h(5\))735 b(DMS)184
b(0.9967)164 b(0.9216)538 3518 y(EteRN)m(A)19 b(ensemble)h(design)f(4)g
(\(L2\))858 b(SHAPE)145 b(0.9947)164 b(0.9172)538 3609
y(EteRN)m(A)19 b(ensemble)h(design)f(4)g(\(L2\))895 b(DMS)184
b(0.9878)164 b(0.9782)538 3701 y(EteRN)m(A)19 b(ensemble)h(design)f(5)g
(\(L2\))858 b(SHAPE)145 b(0.5964)164 b(0.4973)538 3792
y(EteRN)m(A)19 b(ensemble)h(design)f(5)g(\(L2\))895 b(DMS)184
b(0.8830)164 b(0.8574)538 3883 y(EteRN)m(A)19 b(ensemble)h(design)f(6)g
(\(L2\))858 b(SHAPE)145 b(0.9790)164 b(0.9049)538 3975
y(EteRN)m(A)19 b(ensemble)h(design)f(6)g(\(L2\))895 b(DMS)184
b(0.9884)164 b(0.8338)538 4066 y(EteRN)m(A)19 b(ensemble)h(design)f(7)g
(\(L2\))858 b(SHAPE)145 b(0.9613)164 b(0.9730)538 4157
y(EteRN)m(A)19 b(ensemble)h(design)f(7)g(\(L2\))895 b(DMS)184
b(0.9503)164 b(0.9526)538 4248 y(EteRN)m(A)19 b(ensemble)h(design)f(08)
h(\(con)m(v)o(entional\))523 b(SHAPE)145 b(0.9904)164
b(0.9249)538 4340 y(EteRN)m(A)19 b(ensemble)h(design)f(08)h(\(con)m(v)o
(entional\))560 b(DMS)184 b(0.9948)164 b(0.9326)538 4431
y(EteRN)m(A)19 b(ensemble)h(design)f(09)h(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9413)164 b(0.9193)538 4522 y(EteRN)m(A)19
b(ensemble)h(design)f(09)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9936)164 b(0.9218)538 4614 y(EteRN)m(A)19
b(ensemble)h(design)f(10)h(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.6216)164 b(0.8549)538 4705 y(EteRN)m(A)19
b(ensemble)h(design)f(10)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9644)164 b(0.9046)538 4796 y(EteRN)m(A)19
b(ensemble)h(design)f(11)h(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9857)164 b(0.9857)538 4888 y(EteRN)m(A)19
b(ensemble)h(design)f(11)h(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9887)164 b(0.9845)538 4979 y(W)m(ild)18
b(Cross)h(-)g(2)1400 b(SHAPE)145 b(0.9767)164 b(0.7966)538
5070 y(W)m(ild)18 b(Cross)h(-)g(2)1437 b(DMS)184 b(0.9860)164
b(0.9414)538 5162 y(Mod)20 b(of)f(JerryP70)1329 b(SHAPE)145
b(0.9576)164 b(0.9068)2672 5344 y Fi(Continued)20 b(on)f(ne)o(xt)g(pa)o
(g)o(e)p Black -133 5542 4185 5 v -133 5642 a Ff(8)p
Black eop end
%%Page: 9 9
TeXDict begin 9 8 bop Black 2247 -253 a Fe(A)n(utomated)17
b(band)g(annotation)g(f)o(or)h(capillar)q(y)g(electr)o(ophoresis)p
-152 -170 4185 5 v Black 2703 43 a Fk(correlation)h(\(a)o(v)o(eraged\))
519 135 y(Data)g(Set)f(Name)1347 b(Data)19 b(T)-6 b(ype)78
b(proposed)96 b(QuShape)p 481 166 2920 5 v 481 166 V
519 230 a(Mod)20 b(of)f(JerryP70)1366 b(DMS)184 b(0.9957)164
b(0.7095)519 322 y(Mod)20 b(of)f(brourds)h(1)f(st)f(round)i(-)1005
b(SHAPE)145 b(0.9992)164 b(0.8678)519 413 y(Mod)20 b(of)f(brourds)h(1)f
(st)f(round)i(-)1042 b(DMS)184 b(0.9998)164 b(0.9901)519
504 y(Unique)20 b(Stacks)1401 b(SHAPE)145 b(0.9680)164
b(0.8632)519 596 y(Unique)20 b(Stacks)1438 b(DMS)184
b(0.9862)164 b(0.8142)519 687 y(G-C)19 b(pairs)f(in)h(multloops)h(in)f
(same)g(direction)615 b(SHAPE)145 b(0.9948)164 b(0.9698)519
778 y(G-C)19 b(pairs)f(in)h(multloops)h(in)f(same)g(direction)652
b(DMS)184 b(0.9991)164 b(0.9866)519 869 y(Fisk)o(er')l(s)19
b(Binding)g(branches)1057 b(SHAPE)145 b(0.3851)164 b(0.9764)519
961 y(Fisk)o(er')l(s)19 b(Binding)g(branches)1094 b(DMS)184
b(0.2767)164 b(0.9424)519 1052 y(NUP)-7 b(A)m(CK)18 b(design)i(01)1231
b(SHAPE)145 b(0.9885)164 b(0.9591)519 1143 y(NUP)-7 b(A)m(CK)18
b(design)i(01)1268 b(DMS)184 b(0.9920)164 b(0.9836)519
1235 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1231 b(SHAPE)145
b(0.8843)164 b(0.8366)519 1326 y(NUP)-7 b(A)m(CK)18 b(design)i(02)1268
b(DMS)184 b(0.9646)164 b(0.8545)519 1417 y(NUP)-7 b(A)m(CK)18
b(design)i(03)1231 b(SHAPE)145 b(0.8027)164 b(0.7560)519
1509 y(NUP)-7 b(A)m(CK)18 b(design)i(03)1268 b(DMS)184
b(0.9574)164 b(0.7813)519 1600 y(NUP)-7 b(A)m(CK)18 b(design)i(04)1231
b(SHAPE)145 b(0.7613)164 b(0.9667)519 1691 y(NUP)-7 b(A)m(CK)18
b(design)i(04)1268 b(DMS)184 b(0.9245)164 b(0.9888)519
1783 y(V)l(iennaRN)m(A)19 b(design)h(04)1162 b(SHAPE)145
b(0.8822)164 b(0.8842)519 1874 y(V)l(iennaRN)m(A)19 b(design)h(04)1199
b(DMS)184 b(0.9935)164 b(0.9872)519 1965 y(EteRN)m(A)19
b(ensemble)g(design)h(02)g(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9468)164 b(0.9561)519 2057 y(EteRN)m(A)19
b(ensemble)g(design)h(02)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.8877)164 b(0.8607)519 2148 y(EteRN)m(A)19
b(ensemble)g(design)h(04)g(\(con)m(v)o(entional\))523
b(SHAPE)145 b(0.9814)164 b(0.9433)519 2239 y(EteRN)m(A)19
b(ensemble)g(design)h(04)g(\(con)m(v)o(entional\))560
b(DMS)184 b(0.9903)164 b(0.7494)519 2331 y(EteRN)m(A)19
b(ensemble)g(design)h(05)g(\(sparse)f(5\))661 b(SHAPE)145
b(0.8983)164 b(0.9915)519 2422 y(EteRN)m(A)19 b(ensemble)g(design)h(05)
g(\(sparse)f(5\))698 b(DMS)184 b(0.9931)164 b(0.9961)519
2513 y(EteRN)m(A)19 b(ensemble)g(design)h(06)g(\(sparse)f(5\))661
b(SHAPE)145 b(0.9553)164 b(0.5474)519 2605 y(EteRN)m(A)19
b(ensemble)g(design)h(06)g(\(sparse)f(5\))698 b(DMS)184
b(0.9615)164 b(0.9208)519 2696 y(EteRN)m(A)19 b(ensemble)g(design)h(07)
g(\(sparse)f(5\))661 b(SHAPE)145 b(0.9886)164 b(0.9736)519
2787 y(EteRN)m(A)19 b(ensemble)g(design)h(07)g(\(sparse)f(5\))698
b(DMS)184 b(0.9343)164 b(0.9637)519 2879 y(EteRN)m(A)19
b(ensemble)g(design)h(08)g(\(sparse)f(5\))661 b(SHAPE)145
b(0.9814)164 b(0.9753)519 2970 y(EteRN)m(A)19 b(ensemble)g(design)h(08)
g(\(sparse)f(5\))698 b(DMS)184 b(0.9775)164 b(0.9060)519
3061 y(EteRN)m(A)19 b(ensemble)g(design)h(09)g(\(L2\))820
b(SHAPE)145 b(0.9468)164 b(0.9359)519 3153 y(EteRN)m(A)19
b(ensemble)g(design)h(09)g(\(L2\))857 b(DMS)184 b(0.8991)164
b(0.5745)519 3244 y(EteRN)m(A)19 b(ensemble)g(design)h(11)g(\(L2\))820
b(SHAPE)145 b(0.8985)164 b(0.9365)519 3335 y(EteRN)m(A)19
b(ensemble)g(design)h(11)g(\(L2\))857 b(DMS)184 b(0.9389)164
b(0.8063)519 3427 y(EteRN)m(A)19 b(ensemble)g(design)h(12)g(\(L2\))820
b(SHAPE)145 b(0.9781)164 b(0.9616)519 3518 y(EteRN)m(A)19
b(ensemble)g(design)h(12)g(\(L2\))857 b(DMS)184 b(0.9633)164
b(0.9511)519 3609 y(UUU)19 b(/)f(GCA)h(T)m(riloops)g(\(Round)h(2\))864
b(SHAPE)145 b(0.9896)164 b(0.8104)519 3701 y(Uracil)19
b(in)f(1-2)i(x2)1360 b(SHAPE)145 b(0.9808)164 b(0.9665)519
3792 y(1)19 b(U-le)o(g,)g(1)g(A-le)o(g)1347 b(SHAPE)145
b(0.8221)164 b(0.6919)519 3883 y(Bonus)20 b(Army)1451
b(SHAPE)145 b(0.9763)164 b(0.7612)519 3975 y(wisda)o(v)o(e')l(s)19
b(2nd)h(round)1220 b(SHAPE)145 b(0.9739)164 b(0.8770)519
4066 y(C)19 b(-)f(B)m(A)m(CK)1521 b(SHAPE)145 b(0.9419)164
b(0.9441)519 4157 y(Beauty)20 b(in)e(Balance)1288 b(SHAPE)145
b(0.9391)164 b(0.7477)519 4248 y(V)-8 b(ery)19 b(Lo)n(w)g(Entrop)o(y)g
(\2410.6)g(T)-7 b(-B-C)18 b(#5)845 b(SHAPE)145 b(0.9615)164
b(0.8384)519 4340 y(Impro)o(v)o(es)20 b(on)f(Quasispecies)h(UUU/GCA)e
(T)m(riloop)454 b(SHAPE)145 b(0.9885)164 b(0.9971)519
4431 y(sta1)1715 b(SHAPE)145 b(0.9956)164 b(0.9117)p
Black Black Black -152 5542 4185 5 v 3991 5642 a Ff(9)p
Black eop end
%%Page: 10 10
TeXDict begin 10 9 bop Black -133 -253 a Fe(Lee)18 b(et)h(al)p
-133 -170 4185 5 v Black -133 63 a Fl(REFERENCES)p Black
Black -133 170 a Fc(Kim,)28 b(H.,)f(Cordero,)g(P)-6 b(.,)27
b(Das,)g(R.,)f(and)e(Y)-6 b(oon,)27 b(S.)c(\(2013\).)49
b(Hitrace-web:)29 b(an)23 b(online)g(tool)-56 245 y(for)k(rob)o(ust)f
(analysis)f(of)h(high-throughput)i(capillary)e(electrophoresis.)57
b Fb(Nucleic)26 b(Acids)2111 63 y(Resear)n(c)o(h)p Fc(,)12
b Fa(41)p Fc(\(W1\),)j(W492\226W498.)p Black -133 5542
V -133 5642 a Ff(10)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
